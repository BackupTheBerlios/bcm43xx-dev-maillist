From francesco.gringoli at ing.unibs.it  Sun Dec  2 15:55:26 2007
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Sun, 2 Dec 2007 15:55:26 +0100
Subject: microcode reverse engineering
Message-ID: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>

Hi Johannes,

I read the interesting note you wrote on September about r4 ucode  
reverse engineering. Have you new results since then? Did you  
understand what kind of core is bcm4318 based on? From broadcom  
website it should be a MIPS32 core (check http://www.broadcom.com/ 
products/Wireless-LAN/802.11-Wireless-LAN-Solutions they say that  
"The AirForce family of network processors features MIPS32  
processor...(cut)"). It's interesting that you found out a 6 bit  
prefix, like in MIPS!

Before reading your post I came to these conclusions

- all odd words begins with zero (or a couple of them, this depends  
on the firmware version). This led me to think to 8 byte wide  
instructions. Unfortunately both mips32 and mips64 use 32bit wide  
instructions. No mips?
- odd words are control codes to check even words correctness during  
firmware upload: unfortunately there are a lot of even words repeated  
throughout the code with different paired odd words. Did you try to  
change randomly some values and see what happens?
- disassembling the code after having cut out odd words leads to MIPS  
assembly without ret instructions. There is no code too to handle IRQ.

I also tried to change endianness but didn't find anything more  
interesting.

By the way, do you think that a complete reverse engineering could  
give us a platform to test new MAC methodologies? E.g. do you think  
it would be possible to change timings or medium control?

Cheers,
FG


From johannes at sipsolutions.net  Mon Dec  3 11:38:46 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 03 Dec 2007 11:38:46 +0100
Subject: microcode reverse engineering
In-Reply-To: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
Message-ID: <1196678326.6060.24.camel@johannes.berg>


On Sun, 2007-12-02 at 15:55 +0100, Francesco Gringoli wrote:
> Hi Johannes,
> 
> I read the interesting note you wrote on September about r4 ucode  
> reverse engineering. Have you new results since then? 

http://bcm-v4.sipsolutions.net/802.11/Microcode has a link to the old
format too. I'm not particularly interested in the r4 format.

> Did you  
> understand what kind of core is bcm4318 based on? From broadcom  
> website it should be a MIPS32 core (check http://www.broadcom.com/ 
> products/Wireless-LAN/802.11-Wireless-LAN-Solutions they say that  
> "The AirForce family of network processors features MIPS32  
> processor...(cut)"). It's interesting that you found out a 6 bit  
> prefix, like in MIPS!

Nope, I don't think it's MIPS. I think "AirForce network processor"
refers to the whole integrated thing that can be used as a full-mac
chipset or a whole access point etc.

> Before reading your post I came to these conclusions
> 
> - all odd words begins with zero (or a couple of them, this depends  
> on the firmware version). This led me to think to 8 byte wide  
> instructions. Unfortunately both mips32 and mips64 use 32bit wide  
> instructions. No mips?
> - odd words are control codes to check even words correctness during  
> firmware upload: unfortunately there are a lot of even words repeated  
> throughout the code with different paired odd words. Did you try to  
> change randomly some values and see what happens?
> - disassembling the code after having cut out odd words leads to MIPS  
> assembly without ret instructions. There is no code too to handle IRQ.

You want to read the above link and what is linked from it.

> I also tried to change endianness but didn't find anything more  
> interesting.
> 
> By the way, do you think that a complete reverse engineering could  
> give us a platform to test new MAC methodologies? E.g. do you think  
> it would be possible to change timings or medium control?

Yes.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071203/1b5b359e/attachment.pgp>

From francesco.gringoli at ing.unibs.it  Mon Dec  3 12:43:20 2007
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Mon, 3 Dec 2007 12:43:20 +0100
Subject: microcode reverse engineering
In-Reply-To: <1196678326.6060.24.camel@johannes.berg>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
Message-ID: <59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>

Hi Johannes,

I found the 802.11 section on your website this morning, I don't know  
why I didn't find it before. That's very interesting and you did an  
impressive work!! I don't understand when you say that you're not  
interested in r4 microcode or higher because it seems that there are  
two different microcode description and it seems that the boundary is  
between (r3,r4) and (r5), is that correct? From these links I can find

http://bcm-v4.sipsolutions.net/802.11/Microcode   -> core revision 5.  
Is that r5?

and

http://bcm-v4.sipsolutions.net/802.11/OldMicrocode   -> core revision  
4 and lower. Is that r3 and r4? Are they the same?


Have you tried to write your own mac to see if it works?

Thank you very much,
FG

On Dec 3, 2007, at 11:38, Johannes Berg wrote:

>
> On Sun, 2007-12-02 at 15:55 +0100, Francesco Gringoli wrote:
>> Hi Johannes,
>>
>> I read the interesting note you wrote on September about r4 ucode
>> reverse engineering. Have you new results since then?
>
> http://bcm-v4.sipsolutions.net/802.11/Microcode has a link to the old
> format too. I'm not particularly interested in the r4 format.
>
>> Did you
>> understand what kind of core is bcm4318 based on? From broadcom
>> website it should be a MIPS32 core (check http://www.broadcom.com/
>> products/Wireless-LAN/802.11-Wireless-LAN-Solutions they say that
>> "The AirForce family of network processors features MIPS32
>> processor...(cut)"). It's interesting that you found out a 6 bit
>> prefix, like in MIPS!
>
> Nope, I don't think it's MIPS. I think "AirForce network processor"
> refers to the whole integrated thing that can be used as a full-mac
> chipset or a whole access point etc.
>
>> Before reading your post I came to these conclusions
>>
>> - all odd words begins with zero (or a couple of them, this depends
>> on the firmware version). This led me to think to 8 byte wide
>> instructions. Unfortunately both mips32 and mips64 use 32bit wide
>> instructions. No mips?
>> - odd words are control codes to check even words correctness during
>> firmware upload: unfortunately there are a lot of even words repeated
>> throughout the code with different paired odd words. Did you try to
>> change randomly some values and see what happens?
>> - disassembling the code after having cut out odd words leads to MIPS
>> assembly without ret instructions. There is no code too to handle  
>> IRQ.
>
> You want to read the above link and what is linked from it.
>
>> I also tried to change endianness but didn't find anything more
>> interesting.
>>
>> By the way, do you think that a complete reverse engineering could
>> give us a platform to test new MAC methodologies? E.g. do you think
>> it would be possible to change timings or medium control?
>
> Yes.
>
> johannes

%%%%%%%%%%%%%%%%%%%%%

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014
WWW: http://www.ing.unibs.it/~gringoli

%%%%%%%%%%%%%%%%%%%%%


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071203/eea00df1/attachment.html>

From johannes at sipsolutions.net  Mon Dec  3 14:19:07 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 03 Dec 2007 14:19:07 +0100
Subject: microcode reverse engineering
In-Reply-To: <59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
	<59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
Message-ID: <1196687947.6060.43.camel@johannes.berg>

Please
 (1) post in plain text
 (2) don't top-post
 (3) don't full-quote

> I found the 802.11 section on your website this morning, I don't know
> why I didn't find it before. That's very interesting and you did an
> impressive work!! I don't understand when you say that you're not
> interested in r4 microcode or higher

I'm not interested in r4 or *lower*. Maybe I made a mistake before.

>  because it seems that there are two different microcode description
> and it seems that the boundary is between (r3,r4) and (r5), is that
> correct? From these links I can find
> 
> 
> http://bcm-v4.sipsolutions.net/802.11/Microcode   -> core revision 5.
> Is that r5?

r5 and up.

> http://bcm-v4.sipsolutions.net/802.11/OldMicrocode   -> core revision
> 4 and lower. Is that r3 and r4? Are they the same?

r4 and down.

> Have you tried to write your own mac to see if it works?

No. Far too many unknowns still.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071203/52eb4ca8/attachment.pgp>

From francesco.gringoli at ing.unibs.it  Tue Dec  4 13:23:47 2007
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Tue, 4 Dec 2007 13:23:47 +0100
Subject: Microcode reverse engineering
In-Reply-To: <1196687947.6060.43.camel@johannes.berg>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
	<59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
Message-ID: <657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>

Hi Johannes,

I'm currently involved in a project that requires to change a few mac  
timings and other stuff: this is the reason I'm very interested in  
decoding the Broadcom firmware, it could be a good development  
platform without having to buy code and sign NDAs.

I spent a couple of day trying to collect all documents about what  
Broadcom has acquired before 1999 and that could have been  
implemented into AirForce Mac Processors. I didn't find anything that  
was explicitly saying "we are using this core". I have now a few  
conjectures about the library used to build the chip, let's say a few  
candidate:

- E14 firepath
- Trimedia CPU64
- A kind of ARM core mixed with a FPGA lib

I discovered some patents talking about wifi network and the CPUs of  
above. Do you have any idea?

I also discovered this url http://www.arm.com/iqonline/news/ 
partnernews/15399.html check it out for future drivers.

And I would very be pleased to know how did you pointed out the  
meaning of the opcode in the website.

Thank you very much for your time,
cheers,
FG

%%%%%%%%%%%%%%%%%%%%%

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014

%%%%%%%%%%%%%%%%%%%%%




From hs4233 at mail.mn-solutions.de  Tue Dec  4 14:51:50 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Tue, 4 Dec 2007 14:51:50 +0100
Subject: Microcode reverse engineering
In-Reply-To: <657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
Message-ID: <200712041451.50780.hs4233@mail.mn-solutions.de>

It could also be the case that the opcodes on the website aren't 
opcodes to a real CPU, but that they are executed by a VM. So 
they could have used a MIPS, now an ARM cpu, and as long as the 
VM is implemented in one of those languages, it would be able to 
execute the uCode.

That's just speculation, thought.


From johannes at sipsolutions.net  Tue Dec  4 17:14:21 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Tue, 04 Dec 2007 17:14:21 +0100
Subject: Microcode reverse engineering
In-Reply-To: <657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
	<59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
Message-ID: <1196784861.10274.15.camel@johannes.berg>

Hi,

> I'm currently involved in a project that requires to change a few mac  
> timings and other stuff: this is the reason I'm very interested in  
> decoding the Broadcom firmware, it could be a good development  
> platform without having to buy code and sign NDAs.

It could, if we understood how it worked.

> I spent a couple of day trying to collect all documents about what  
> Broadcom has acquired before 1999 and that could have been  
> implemented into AirForce Mac Processors. I didn't find anything that  
> was explicitly saying "we are using this core". I have now a few  
> conjectures about the library used to build the chip, let's say a few  
> candidate:
> 
> - E14 firepath
> - Trimedia CPU64
> - A kind of ARM core mixed with a FPGA lib
> 
> I discovered some patents talking about wifi network and the CPUs of  
> above. Do you have any idea?
> 
> I also discovered this url http://www.arm.com/iqonline/news/ 
> partnernews/15399.html check it out for future drivers.

Hmm. I sort of did similar research a while ago but never found anything
I thought was related. I'm pretty sure though that for example tg3
ethernet uses MIPS cores.

> And I would very be pleased to know how did you pointed out the  
> meaning of the opcode in the website.

Well, we simply tried all those we found in existing firmware by running
them on the device and seeing what changed, and then taking some common
sense together to fill the gaps.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071204/f8173f2d/attachment.pgp>

From johannes at sipsolutions.net  Tue Dec  4 17:37:26 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Tue, 04 Dec 2007 17:37:26 +0100
Subject: Microcode reverse engineering
In-Reply-To: <200712041451.50780.hs4233@mail.mn-solutions.de>
	(sfid-20071204_135219_085666_43E17662)
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
	<200712041451.50780.hs4233@mail.mn-solutions.de>
	(sfid-20071204_135219_085666_43E17662)
Message-ID: <1196786246.10274.18.camel@johannes.berg>


> It could also be the case that the opcodes on the website aren't 
> opcodes to a real CPU, but that they are executed by a VM. So 
> they could have used a MIPS, now an ARM cpu, and as long as the 
> VM is implemented in one of those languages, it would be able to 
> execute the uCode.
> 
> That's just speculation, thought.

And a crazy one at that. These things are supposed to use little power.
Also, look at the opcode/operand set for a minute and you'll realise
that it's quite specific to the memories/registers the hardware has.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071204/385b0c50/attachment.pgp>

From mb at bu3sch.de  Tue Dec  4 17:55:16 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 4 Dec 2007 17:55:16 +0100
Subject: Microcode reverse engineering
In-Reply-To: <200712041451.50780.hs4233@mail.mn-solutions.de>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
	<200712041451.50780.hs4233@mail.mn-solutions.de>
Message-ID: <200712041755.16999.mb@bu3sch.de>

On Tuesday 04 December 2007 14:51:50 Holger Schurig wrote:
> It could also be the case that the opcodes on the website aren't 
> opcodes to a real CPU,

Broadcom calls this a "Programmable State Machine".

But what is this all about? Why do you care what type of CPU this is?
Does this matter _at_ _all_? I mean, we know all opcodes of the device
and we have a _complete_ disassembler and assembler.
http://git.bu3sch.de/git/b43-tools.git

What do you want more? 
The only thing we don't completely understand are the various device
registers and device status codes (external jumps) used. But that has nothing
to do with the type of the "CPU" used.

-- 
Greetings Michael.


From stefano.brivio at polimi.it  Tue Dec  4 18:13:01 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Tue, 4 Dec 2007 18:13:01 +0100
Subject: Microcode reverse engineering
In-Reply-To: <657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
	<59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
Message-ID: <20071204181301.5bdcda66@morte>

On Tue, 4 Dec 2007 13:23:47 +0100
Francesco Gringoli <francesco.gringoli at ing.unibs.it> wrote:

> I spent a couple of day trying to collect all documents about what  
> Broadcom has acquired before 1999 and that could have been  
> implemented into AirForce Mac Processors. I didn't find anything that  
> was explicitly saying "we are using this core". I have now a few  
> conjectures about the library used to build the chip, let's say a few  
> candidate:
> 
> - E14 firepath
> - Trimedia CPU64
> - A kind of ARM core mixed with a FPGA lib
> 
> I discovered some patents talking about wifi network and the CPUs of  
> above. Do you have any idea?

Why are you interested in this? I mean, you have been provided with the
complete instruction set and an almost complete list of registers. You have
been provided with a driver which can give you ucode register values in
realtime. What else do you need? To me, it looks like you want other people
to do your homework.

If you could put your efforts on writing specs for firmware operation
(i.e. not the instruction set, but what exactly does the firmware do) or
writing an open firmware based upon the info I listed above (you can do
that, there's an Italian 'fair use' law, so if you reverse engineer and code
together for compatibility purposes only, it's perfectly legal), it would be
just great.

We are short on people here. I just can't do any reverse engineering because
I would get tainted (me too I live in Italy, but I'm working with other
people who are based elsewhere), same for Michael, and we couldn't go on
with driver development then. I'm willing to help with a firmware rewrite
(that wouldn't taint me, as long as I'm given clean specs), and your work
on reverse engineering would be greatly appreciated then.


--
Ciao
Stefano


From francesco.gringoli at ing.unibs.it  Tue Dec  4 19:01:59 2007
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Tue, 4 Dec 2007 19:01:59 +0100
Subject: Microcode reverse engineering
In-Reply-To: <20071204181301.5bdcda66@morte>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<1196678326.6060.24.camel@johannes.berg>
	<59AF9768-2054-48A7-BA14-35E6AF75E476@ing.unibs.it>
	<1196687947.6060.43.camel@johannes.berg>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
	<20071204181301.5bdcda66@morte>
Message-ID: <E97B353E-47A8-4443-960D-CAEBB861E0DB@ing.unibs.it>

Hi there,

>
> Why are you interested in this? I mean, you have been provided with  
> the
> complete instruction set and an almost complete list of registers.  
> You have

I know since 30 minutes ago about the existence of the assembler/ 
disassembler!! I'm going to test it.

> been provided with a driver which can give you ucode register  
> values in
> realtime. What else do you need? To me, it looks like you want  
> other people
> to do your homework.
>

Thank you,
FG


From francesco.gringoli at ing.unibs.it  Tue Dec  4 19:05:34 2007
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Tue, 4 Dec 2007 19:05:34 +0100
Subject: Microcode reverse engineering
In-Reply-To: <200712041755.16999.mb@bu3sch.de>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
	<200712041451.50780.hs4233@mail.mn-solutions.de>
	<200712041755.16999.mb@bu3sch.de>
Message-ID: <7E449D4C-2C52-4D38-9F11-51C1A1E6D41E@ing.unibs.it>

Hi Michael,


>> It could also be the case that the opcodes on the website aren't
>> opcodes to a real CPU,
>
> Broadcom calls this a "Programmable State Machine".
>
> But what is this all about? Why do you care what type of CPU this is?
> Does this matter _at_ _all_? I mean, we know all opcodes of the device
> and we have a _complete_ disassembler and assembler.
> http://git.bu3sch.de/git/b43-tools.git

Can't you put this on the web site? Only a small link...
>
> What do you want more?
> The only thing we don't completely understand are the various device
> registers and device status codes (external jumps) used. But that  
> has nothing
> to do with the type of the "CPU" used.
Yes, you are right. I will now use the tool to better understand the  
device.

>
Thank you very much. You did a great job!

FG


From mb at bu3sch.de  Tue Dec  4 19:25:52 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 4 Dec 2007 19:25:52 +0100
Subject: Microcode reverse engineering
In-Reply-To: <20071204181301.5bdcda66@morte>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<657DED7A-6499-4EB2-B195-5E261C930273@ing.unibs.it>
	<20071204181301.5bdcda66@morte>
Message-ID: <200712041925.52714.mb@bu3sch.de>

On Tuesday 04 December 2007 18:13:01 Stefano Brivio wrote:
> If you could put your efforts on writing specs for firmware operation
> (i.e. not the instruction set, but what exactly does the firmware do) or
> writing an open firmware based upon the info I listed above (you can do
> that, there's an Italian 'fair use' law, so if you reverse engineer and code
> together for compatibility purposes only, it's perfectly legal), it would be
> just great.
> 
> We are short on people here. I just can't do any reverse engineering because
> I would get tainted (me too I live in Italy, but I'm working with other
> people who are based elsewhere), same for Michael, and we couldn't go on
> with driver development then. I'm willing to help with a firmware rewrite
> (that wouldn't taint me, as long as I'm given clean specs), and your work
> on reverse engineering would be greatly appreciated then.

That interoperability (or compatibility) clause also exists in Germany,
but we decided to _not_ make use of it, as it's basically undefined
what interoperability is. And I don't want to trigger the precedence case
at court for this.

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec  4 19:39:35 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 4 Dec 2007 19:39:35 +0100
Subject: Microcode reverse engineering
In-Reply-To: <7E449D4C-2C52-4D38-9F11-51C1A1E6D41E@ing.unibs.it>
References: <D683A318-F8A3-4F32-BA5D-2119CE46E771@ing.unibs.it>
	<200712041755.16999.mb@bu3sch.de>
	<7E449D4C-2C52-4D38-9F11-51C1A1E6D41E@ing.unibs.it>
Message-ID: <200712041939.36060.mb@bu3sch.de>

On Tuesday 04 December 2007 19:05:34 Francesco Gringoli wrote:
> > http://git.bu3sch.de/git/b43-tools.git
> Can't you put this on the web site? Only a small link...

Done.

-- 
Greetings Michael.


From el_es at poczta.onet.pl  Tue Dec  4 20:20:45 2007
From: el_es at poczta.onet.pl (Lukasz Sokol)
Date: Tue, 04 Dec 2007 19:20:45 +0000
Subject: [Works for me] Broadcom 4318 [NO QUESTIONS]
Message-ID: <4755A88D.6030100@poczta.onet.pl>

Hello,
I've been subscribed to this group since this april, and I'm here to 
report, that my laptop wireless card works - it is a 4318 as in topic

Now, I know the bcm43xx driver is deprecated, but this is what I've done 
to turn it on and get it going under Ubuntu Gutsy (7.10).

My laptop is an Acer 3023WLMi, and it only has a softswitch for 
wireless; Therefore I used

sudo modprobe bcm43xx bad_frames_preempt=1 // did not want to work 
without this, could not associate/get DHCP address
sudo modprobe acerhk wlan_state=1 autowlan=1 // this is to assume the 
state of wlan hardware and to force it on on load

and added these commands (in this order) to /etc/modules;

I know that the bcm43xx is deprecated, and I won't bother you with 
questions about it; only bad thing I experience now is that the dmesg is 
overfilled with messages stating that authenticate has failed, followed 
by printk telling me that some of them were suppressed;
Don't remember really the exact one (unless somebody is interested), but 
as I said as long as it works, I'm not bothered, I can live with that.

The other thing I experience is a Network Manager issue (I need to enter 
the network name over and over again...) so it is not for this list :)

Anyway, I just wanted to express my joy of using my laptop under Linux 
(thou I write this letter from under Windows ;)) thanks to everybody 
involved in this project :)

Keep up the good work :)
As soon as I will catch up with Ubuntu build system, I'm gonna switch to 
b43 and post my findings (which might not be soon, anyway, as IANAP ;) )

Regards,
Lukasz Sokol


From mb at bu3sch.de  Wed Dec  5 10:51:13 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 5 Dec 2007 10:51:13 +0100
Subject: b43 seemingly broken with Fedora (2.6.23.8-63.fc8) kernel
In-Reply-To: <5b9417770712042039v2d7b2cc7l549d0bda2a57888e@mail.gmail.com>
References: <5b9417770712042039v2d7b2cc7l549d0bda2a57888e@mail.gmail.com>
Message-ID: <200712051051.13667.mb@bu3sch.de>

On Wednesday 05 December 2007 05:39:02 John H. wrote:
> I just upgraded to this kernel but i could never connect to an AP, it
> just went on and on and timed out.  I had to go back to
> 2.6.23.1-49.fc8
> 
> did something big change?
> 
> 

Yes, a big bug was introduced that breaks it on some devices.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Fri Dec  7 01:05:11 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 06 Dec 2007 17:05:11 -0700
Subject: [PATCH] b43: Fix radio LED problem
In-Reply-To: <200711291958.45631.mb@bu3sch.de>
References: <474dfe58.85Rcj/BwOPxQm8eE%Larry.Finger@lwfinger.net>
	<200711291958.45631.mb@bu3sch.de>
Message-ID: <47588E37.4080400@lwfinger.net>

Sorry it has taken so long to answer, but I am traveling.

Michael Buesch wrote:
> On Thursday 29 November 2007 00:48:40 Larry Finger wrote:
> 
>> @@ -2802,6 +2800,13 @@ static int b43_op_config(struct ieee8021
>>        out_unlock_mutex:
>>  	mutex_unlock(&wl->mutex);
>>  
>> +	/* if a LED is devoted to the radio and the switch is on, send
>> +	 * KEY_WLAN press/release keystrokes */
>> +	if (!err && dev->radio_hw_enable && &dev->led_radio) {
>                                             ^^^^^^^^^^^^^^^
> This condition is always true.

It looks to me that the code uses the contents of the LED section of the SPROM to initialize
dev->led_radio. Can we be certain that the initialization will always be done?
> 
>> +		input_report_key(rfk->poll_dev->input, KEY_WLAN, 1);
>> +		input_report_key(rfk->poll_dev->input, KEY_WLAN, 0);
>> +	}
>> +
> 
> Anyway, sending a key event here seems pretty bogus. The comment
> doesn't really say anything useful why this is needed.

If a key event (down/up) is not sent, the LED remains off. This location may not be the best place,
but it is needed someplace, otherwise the switch must be cycled off/on to get the LED on.


Larry




From mb at bu3sch.de  Fri Dec  7 01:12:35 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 7 Dec 2007 01:12:35 +0100
Subject: [PATCH] b43: Fix radio LED problem
In-Reply-To: <47588E37.4080400@lwfinger.net>
References: <474dfe58.85Rcj/BwOPxQm8eE%Larry.Finger@lwfinger.net>
	<200711291958.45631.mb@bu3sch.de> <47588E37.4080400@lwfinger.net>
Message-ID: <200712070112.35515.mb@bu3sch.de>

On Friday 07 December 2007 01:05:11 Larry Finger wrote:
> Sorry it has taken so long to answer, but I am traveling.
> 
> Michael Buesch wrote:
> > On Thursday 29 November 2007 00:48:40 Larry Finger wrote:
> > 
> >> @@ -2802,6 +2800,13 @@ static int b43_op_config(struct ieee8021
> >>        out_unlock_mutex:
> >>  	mutex_unlock(&wl->mutex);
> >>  
> >> +	/* if a LED is devoted to the radio and the switch is on, send
> >> +	 * KEY_WLAN press/release keystrokes */
> >> +	if (!err && dev->radio_hw_enable && &dev->led_radio) {
> >                                             ^^^^^^^^^^^^^^^
> > This condition is always true.
> 
> It looks to me that the code uses the contents of the LED section of the SPROM to initialize
> dev->led_radio. Can we be certain that the initialization will always be done?

I think you didn't quite understand what I tried to say.
Let's give a more obvious example:

int a;
if (&a) {
	/* This is always true, as (&a) can't be a NULL pointer. */
}

Your condition above can never be false. (in practice)
I guess you tried to check if a radio led exists.
I'd suggest you do
if (... && dev->led_radio.dev)

The code in led.c does also assume that the LED is used, if struct b43_led->dev was
assigned to something non-NULL. So I think that kind of check would be OK.
But it might need an additional comment if done here outside of the led.c context.

> >> +		input_report_key(rfk->poll_dev->input, KEY_WLAN, 1);
> >> +		input_report_key(rfk->poll_dev->input, KEY_WLAN, 0);
> >> +	}
> >> +
> > 
> > Anyway, sending a key event here seems pretty bogus. The comment
> > doesn't really say anything useful why this is needed.
> 
> If a key event (down/up) is not sent, the LED remains off. This location may not be the best place,
> but it is needed someplace, otherwise the switch must be cycled off/on to get the LED on.

So I guess we should do this at initialization and not in the config callback.

-- 
Greetings Michael.


From el_es at poczta.onet.pl  Fri Dec  7 21:52:12 2007
From: el_es at poczta.onet.pl (Lukasz Sokol)
Date: Fri, 07 Dec 2007 20:52:12 +0000
Subject: [Works for me] Broadcom 4318 [NO QUESTIONS][LONG]
In-Reply-To: <4755A88D.6030100@poczta.onet.pl>
References: <4755A88D.6030100@poczta.onet.pl>
Message-ID: <4759B27C.4030101@poczta.onet.pl>

Lukasz Sokol pisze:
> Hello,
> I've been subscribed to this group since this april, and I'm here to 
> report, that my laptop wireless card works - it is a 4318 as in topic
>
> Now, I know the bcm43xx driver is deprecated, but this is what I've done 
> to turn it on and get it going under Ubuntu Gutsy (7.10).
>
> My laptop is an Acer 3023WLMi, and it only has a softswitch for 
> wireless; Therefore I used
>
> sudo modprobe bcm43xx bad_frames_preempt=1 // did not want to work 
> without this, could not associate/get DHCP address
> sudo modprobe acerhk wlan_state=1 autowlan=1 // this is to assume the 
> state of wlan hardware and to force it on on load
>
> and added these commands (in this order) to /etc/modules;
>
> I know that the bcm43xx is deprecated, and I won't bother you with 
> questions about it; only bad thing I experience now is that the dmesg is 
> overfilled with messages stating that authenticate has failed, followed 
> by printk telling me that some of them were suppressed;
> Don't remember really the exact one (unless somebody is interested), but 
> as I said as long as it works, I'm not bothered, I can live with that.
>
> The other thing I experience is a Network Manager issue (I need to enter 
> the network name over and over again...) so it is not for this list :)
>
> Anyway, I just wanted to express my joy of using my laptop under Linux 
> (thou I write this letter from under Windows ;)) thanks to everybody 
> involved in this project :)
>
> Keep up the good work :)
> As soon as I will catch up with Ubuntu build system, I'm gonna switch to 
> b43 and post my findings (which might not be soon, anyway, as IANAP ;) )
>
> Regards,
> Lukasz Sokol
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>   
There, if anyone cares : my syslog is clogged with messages like:

Dec  7 20:42:14 lukasz-laptop kernel: [ 2176.388000] printk: 94 messages 
suppressed.
Dec  7 20:42:14 lukasz-laptop kernel: [ 2176.388000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:42:19 lukasz-laptop kernel: [ 2181.244000] printk: 271 
messages suppressed.
Dec  7 20:42:19 lukasz-laptop kernel: [ 2181.244000] CCMP: decrypt 
failed: STA=00:16:e3:03:41:fd

and they seem to grow quite fast.

This is kern.log until it shows first time
(yes I use fglrx...)

I'm still catching up ;)

Regards, Lukasz.

Dec  7 20:06:22 lukasz-laptop kernel: Inspecting 
/boot/System.map-2.6.22-14-generic
Dec  7 20:06:22 lukasz-laptop kernel: Loaded 25445 symbols from 
/boot/System.map-2.6.22-14-generic.
Dec  7 20:06:22 lukasz-laptop kernel: Symbols match kernel version 2.6.22.
Dec  7 20:06:22 lukasz-laptop kernel: No module symbols loaded - kernel 
modules not enabled.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Linux version 
2.6.22-14-generic (buildd at palmer) (gcc version 4.1.3 20070929 
(prerelease) (Ubuntu 4.1.2-16ubuntu2)) #1 SMP Sun Oct 14 23:05:12 GMT 
2007 (Ubuntu 2.6.22-14.46-generic)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] BIOS-provided 
physical RAM map:
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
0000000000000000 - 000000000009b800 (usable)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
000000000009b800 - 00000000000a0000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
00000000000d0000 - 0000000000100000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
0000000000100000 - 000000001fea0000 (usable)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
000000001fea0000 - 000000001feae000 (ACPI data)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
000000001feae000 - 000000001ff00000 (ACPI NVS)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
000000001ff00000 - 0000000020000000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
00000000fec00000 - 00000000fec10000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
00000000fee00000 - 00000000fee01000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]  BIOS-e820: 
00000000fff80000 - 0000000100000000 (reserved)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] 0MB HIGHMEM available.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] 510MB LOWMEM available.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] found SMP MP-table 
at 000f6df0
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Entering 
add_active_range(0, 0, 130720) 0 entries of 256 used
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Zone PFN ranges:
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   DMA             0 
->     4096
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   Normal       4096 
->   130720
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   HighMem    130720 
->   130720
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] early_node_map[1] 
active PFN ranges
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]     0:        0 
->   130720
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] On node 0 
totalpages: 130720
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   DMA zone: 32 
pages used for memmap
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   DMA zone: 0 pages 
reserved
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   DMA zone: 4064 
pages, LIFO batch:0
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   Normal zone: 989 
pages used for memmap
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   Normal zone: 
125635 pages, LIFO batch:31
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000]   HighMem zone: 0 
pages used for memmap
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] DMI 2.3 present.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: RSDP 
signature @ 0xC00F6DC0 checksum 0
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: RSDP 
000F6DC0, 0014 (r0 PTLTD )
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: RSDT 
1FEA836C, 0034 (r1 PTLTD    RSDT    6040000  LTP        0)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: FACP 
1FEADE20, 0074 (r1 ATI    Piranha   6040000 ATI     F4240)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: DSDT 
1FEA83A0, 5A80 (r1    ATI    SB400  6040000 MSFT  100000E)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: FACS 
1FEAEFC0, 0040
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: SSDT 
1FEADE94, 00D6 (r1 PTLTD  POWERNOW  6040000  LTP        1)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: APIC 
1FEADF6A, 005A (r1 PTLTD  ^I APIC    6040000  LTP        0)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: MCFG 
1FEADFC4, 003C (r1 PTLTD    MCFG    6040000  LTP        0)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ATI board detected. 
Disabling timer routing over 8254.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: PM-Timer IO 
Port: 0x8008
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: Local APIC 
address 0xfee00000
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: LAPIC 
(acpi_id[0x00] lapic_id[0x00] enabled)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Processor #0 15:12 
APIC version 16
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: LAPIC_NMI 
(acpi_id[0x00] high edge lint[0x1])
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: IOAPIC 
(id[0x01] address[0xfec00000] gsi_base[0])
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] IOAPIC[0]: apic_id 
1, version 33, address 0xfec00000, GSI 0-23
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: INT_SRC_OVR 
(bus 0 bus_irq 0 global_irq 2 high edge)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: INT_SRC_OVR 
(bus 0 bus_irq 9 global_irq 21 low level)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: IRQ0 used by 
override.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] ACPI: IRQ2 used by 
override.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Enabling APIC 
mode:  Flat.  Using 1 I/O APICs
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Using ACPI (MADT) 
for SMP configuration information
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Allocating PCI 
resources starting at 30000000 (gap: 20000000:dec00000)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Built 1 zonelists.  
Total pages: 129699
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Kernel command 
line: root=UUID=1c730838-999c-4ae1-bd6f-a4bc819b38be ro quiet splash 
i8042.nomux ec_burst=1
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] mapped APIC to 
ffffd000 (fee00000)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] mapped IOAPIC to 
ffffc000 (fec00000)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Enabling fast FPU 
save and restore... done.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Enabling unmasked 
SIMD FPU exception support... done.
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Initializing CPU#0
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] PID hash table 
entries: 2048 (order: 11, 8192 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [    0.000000] Detected 1800.081 
MHz processor.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.364103] Console: colour 
VGA+ 80x25
Dec  7 20:06:22 lukasz-laptop kernel: [   11.364366] Dentry cache hash 
table entries: 65536 (order: 6, 262144 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.364868] Inode-cache hash 
table entries: 32768 (order: 5, 131072 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375351] Memory: 
506876k/522880k available (2015k kernel code, 15436k reserved, 916k 
data, 364k init, 0k highmem)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375363] virtual kernel 
memory layout:
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375364]     fixmap  : 
0xfff4d000 - 0xfffff000   ( 712 kB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375365]     pkmap   : 
0xff800000 - 0xffc00000   (4096 kB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375367]     vmalloc : 
0xe0800000 - 0xff7fe000   ( 495 MB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375368]     lowmem  : 
0xc0000000 - 0xdfea0000   ( 510 MB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375369]       .init : 
0xc03e3000 - 0xc043e000   ( 364 kB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375371]       .data : 
0xc02f7d26 - 0xc03dce84   ( 916 kB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375372]       .text : 
0xc0100000 - 0xc02f7d26   (2015 kB)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375375] Checking if this 
processor honours the WP bit even in supervisor mode... Ok.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.375412] SLUB: Genslabs=22, 
HWalign=64, Order=0-1, MinObjects=4, CPUs=1, Nodes=1
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455316] Calibrating delay 
using timer specific routine.. 3603.78 BogoMIPS (lpj=7207574)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455342] Security Framework 
v1.0.0 initialized
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455347] SELinux:  Disabled 
at boot.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455361] Mount-cache hash 
table entries: 512
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455477] CPU: After generic 
identify, caps: 078bfbff c3d3fbff 00000000 00000000 00000000 00000000 
00000001
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455486] CPU: L1 I Cache: 
64K (64 bytes/line), D cache 64K (64 bytes/line)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455489] CPU: L2 Cache: 128K 
(64 bytes/line)
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455492] CPU: After all 
inits, caps: 078bfbff c3d3fbff 00000000 00000410 00000000 00000000 00000001
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455502] Compat vDSO mapped 
to ffffe000.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.455513] Checking 'hlt' 
instruction... OK.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.471425] SMP alternatives: 
switching to UP code
Dec  7 20:06:22 lukasz-laptop kernel: [   11.471645] Freeing SMP 
alternatives: 11k freed
Dec  7 20:06:22 lukasz-laptop kernel: [   11.471969] Early unpacking 
initramfs... done
Dec  7 20:06:22 lukasz-laptop kernel: [   11.791878] ACPI: Core revision 
20070126
Dec  7 20:06:22 lukasz-laptop kernel: [   11.791972] ACPI: Looking for 
DSDT in initramfs... error, file /DSDT.aml not found.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.796692] CPU0: AMD Mobile 
AMD Sempron(tm) Processor 3000+ stepping 00
Dec  7 20:06:22 lukasz-laptop kernel: [   11.796713] Total of 1 
processors activated (3603.78 BogoMIPS).
Dec  7 20:06:22 lukasz-laptop kernel: [   11.796882] ENABLING IO-APIC IRQs
Dec  7 20:06:22 lukasz-laptop kernel: [   11.797078] ..TIMER: 
vector=0x31 apic1=0 pin1=2 apic2=-1 pin2=-1
Dec  7 20:06:22 lukasz-laptop kernel: [   11.836746] ..MP-BIOS bug: 8254 
timer not connected to IO-APIC
Dec  7 20:06:22 lukasz-laptop kernel: [   11.836796] ...trying to set up 
timer (IRQ0) through the 8259A ...  failed.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.836799] ...trying to set up 
timer as Virtual Wire IRQ... works.
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982577] Brought up 1 CPUs
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982689] Booting 
paravirtualized kernel on bare hardware
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982770] Time: 20:05:56  
Date: 11/07/107
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982798] NET: Registered 
protocol family 16
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982894] EISA bus registered
Dec  7 20:06:22 lukasz-laptop kernel: [   11.982910] ACPI: bus type pci 
registered
Dec  7 20:06:22 lukasz-laptop kernel: [   11.995394] PCI: PCI BIOS 
revision 2.10 entry at 0xfd64c, last bus=6
Dec  7 20:06:22 lukasz-laptop kernel: [   11.995396] PCI: Using 
configuration type 1
Dec  7 20:06:22 lukasz-laptop kernel: [   11.995398] Setting up standard 
PCI resources
Dec  7 20:06:22 lukasz-laptop kernel: [   11.996926] ACPI: EC: Look up 
EC in DSDT
Dec  7 20:06:22 lukasz-laptop kernel: [   11.997519] ACPI: EC: GPE=0x03, 
ports=0x66, 0x62
Dec  7 20:06:22 lukasz-laptop kernel: [   12.019346] ACPI: Interpreter 
enabled
Dec  7 20:06:22 lukasz-laptop kernel: [   12.019350] ACPI: (supports S0 
S3 S4 S5)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.019363] ACPI: Using IOAPIC 
for interrupt routing
Dec  7 20:06:22 lukasz-laptop kernel: [   12.035623] ACPI: EC: GPE=0x03, 
ports=0x66, 0x62
Dec  7 20:06:22 lukasz-laptop kernel: [   12.035683] ACPI: PCI Root 
Bridge [PCI0] (0000:00)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.035689] PCI: Probing PCI 
hardware (bus 00)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037221] PCI: Transparent 
bridge - 0000:00:14.4
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037323] ACPI: PCI Interrupt 
Routing Table [\_SB_.PCI0._PRT]
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037478] ACPI: PCI Interrupt 
Routing Table [\_SB_.PCI0.PB6_._PRT]
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037579] ACPI: PCI Interrupt 
Routing Table [\_SB_.PCI0.PB7_._PRT]
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037680] ACPI: PCI Interrupt 
Routing Table [\_SB_.PCI0.EXP1._PRT]
Dec  7 20:06:22 lukasz-laptop kernel: [   12.037788] ACPI: PCI Interrupt 
Routing Table [\_SB_.PCI0.P2P_._PRT]
Dec  7 20:06:22 lukasz-laptop kernel: [   12.040628] ACPI: PCI Interrupt 
Link [LNKA] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.040736] ACPI: PCI Interrupt 
Link [LNKB] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.040840] ACPI: PCI Interrupt 
Link [LNKC] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.040943] ACPI: PCI Interrupt 
Link [LNKD] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041046] ACPI: PCI Interrupt 
Link [LNKE] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041149] ACPI: PCI Interrupt 
Link [LNKF] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041252] ACPI: PCI Interrupt 
Link [LNKG] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041355] ACPI: PCI Interrupt 
Link [LNKH] (IRQs 10 11) *0, disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041465] Linux Plug and Play 
Support v0.97 (c) Adam Belay
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041479] pnp: PnP ACPI init
Dec  7 20:06:22 lukasz-laptop kernel: [   12.041491] ACPI: bus type pnp 
registered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050235] pnp: PnP ACPI: 
found 11 devices
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050239] ACPI: ACPI bus type 
pnp unregistered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050243] PnPBIOS: Disabled 
by ACPI PNP
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050296] PCI: Using ACPI for 
IRQ routing
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050299] PCI: If a device 
doesn't work, try "pci=routeirq".  If it helps, post a report
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050306] PCI: Cannot 
allocate resource region 7 of bridge 0000:00:06.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050356] PCI: Cannot 
allocate resource region 8 of bridge 0000:00:06.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050403] PCI: Cannot 
allocate resource region 7 of bridge 0000:00:07.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.050484] PCI: Cannot 
allocate resource region 8 of bridge 0000:00:07.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071370] NET: Registered 
protocol family 8
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071372] NET: Registered 
protocol family 20
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071464] pnp: 00:01: iomem 
range 0xe0000000-0xefffffff has been reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071468] pnp: 00:01: iomem 
range 0xfec00000-0xfec00fff could not be reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071472] pnp: 00:01: iomem 
range 0xfee00000-0xfee00fff could not be reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071482] pnp: 00:08: ioport 
range 0x1080-0x1080 has been reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071485] pnp: 00:08: ioport 
range 0x1200-0x120f has been reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071488] pnp: 00:08: ioport 
range 0x500-0x51f has been reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071491] pnp: 00:08: ioport 
range 0x40b-0x40b has been reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071497] pnp: 00:09: iomem 
range 0xe0000-0xfffff could not be reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071500] pnp: 00:09: iomem 
range 0xfff80000-0xffffffff could not be reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.071503] pnp: 00:09: iomem 
range 0x0-0xfff could not be reserved
Dec  7 20:06:22 lukasz-laptop kernel: [   12.074405] Time: tsc 
clocksource has been installed.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101730] PCI: Bridge: 
0000:00:02.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101732]   IO window: 9000-9fff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101736]   MEM window: 
c0100000-c01fffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101739]   PREFETCH window: 
c8000000-cfffffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101742] PCI: Bridge: 
0000:00:06.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101744]   IO window: disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101746]   MEM window: disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101748]   PREFETCH window: 
disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101751] PCI: Bridge: 
0000:00:07.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101752]   IO window: disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101755]   MEM window: disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101757]   PREFETCH window: 
disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101767] PCI: Bus 7, cardbus 
bridge: 0000:06:06.0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101770]   IO window: 
0000a400-0000a4ff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101775]   IO window: 
0000a800-0000a8ff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101781]   PREFETCH window: 
30000000-33ffffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101787]   MEM window: 
38000000-3bffffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101792] PCI: Bridge: 
0000:00:14.4
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101796]   IO window: a000-afff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101802]   MEM window: 
c0200000-c02fffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101807]   PREFETCH window: 
30000000-35ffffff
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101824] PCI: Setting 
latency timer of device 0000:00:02.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101831] PCI: Setting 
latency timer of device 0000:00:06.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101838] PCI: Setting 
latency timer of device 0000:00:07.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101870] ACPI: PCI Interrupt 
0000:06:06.0[A] -> GSI 20 (level, low) -> IRQ 16
Dec  7 20:06:22 lukasz-laptop kernel: [   12.101893] NET: Registered 
protocol family 2
Dec  7 20:06:22 lukasz-laptop kernel: [   12.138358] IP route cache hash 
table entries: 4096 (order: 2, 16384 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.138410] TCP established 
hash table entries: 16384 (order: 5, 196608 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.138608] TCP bind hash table 
entries: 16384 (order: 5, 131072 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.138784] TCP: Hash tables 
configured (established 16384 bind 16384)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.138787] TCP reno registered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.150433] checking if image 
is initramfs... it is
Dec  7 20:06:22 lukasz-laptop kernel: [   12.601624] Switched to high 
resolution mode on CPU 0
Dec  7 20:06:22 lukasz-laptop kernel: [   12.779205] Freeing initrd 
memory: 7061k freed
Dec  7 20:06:22 lukasz-laptop kernel: [   12.779581] audit: initializing 
netlink socket (disabled)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.779595] 
audit(1197057957.060:1): initialized
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781233] VFS: Disk quotas 
dquot_6.5.1
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781281] Dquot-cache hash 
table entries: 1024 (order 0, 4096 bytes)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781393] io scheduler noop 
registered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781395] io scheduler 
anticipatory registered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781397] io scheduler 
deadline registered
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781413] io scheduler cfq 
registered (default)
Dec  7 20:06:22 lukasz-laptop kernel: [   12.781422] PCI: MSI quirk 
detected. MSI deactivated.
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212631] Boot video device 
is 0000:01:00.0
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212749] PCI: Setting 
latency timer of device 0000:00:02.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212768] 
assign_interrupt_mode Found MSI capability
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212771] Allocate Port 
Service[0000:00:02.0:pcie00]
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212832] PCI: Setting 
latency timer of device 0000:00:06.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212851] 
assign_interrupt_mode Found MSI capability
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212853] Allocate Port 
Service[0000:00:06.0:pcie00]
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212901] PCI: Setting 
latency timer of device 0000:00:07.0 to 64
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212919] 
assign_interrupt_mode Found MSI capability
Dec  7 20:06:22 lukasz-laptop kernel: [   13.212921] Allocate Port 
Service[0000:00:07.0:pcie00]
Dec  7 20:06:22 lukasz-laptop kernel: [   13.213029] isapnp: Scanning 
for PnP cards...
Dec  7 20:06:22 lukasz-laptop kernel: [   13.567127] isapnp: No Plug & 
Play device found
Dec  7 20:06:22 lukasz-laptop kernel: [   13.601096] Real Time Clock 
Driver v1.12ac
Dec  7 20:06:22 lukasz-laptop kernel: [   13.601180] Serial: 8250/16550 
driver $Revision: 1.90 $ 4 ports, IRQ sharing enabled
Dec  7 20:06:22 lukasz-laptop kernel: [   13.601523] serial8250: ttyS1 
at I/O 0x2f8 (irq = 3) is a 16550A
Dec  7 20:06:22 lukasz-laptop kernel: [   13.602165] ACPI: PCI Interrupt 
0000:00:14.6[B] -> GSI 17 (level, low) -> IRQ 17
Dec  7 20:06:22 lukasz-laptop kernel: [   13.602174] ACPI: PCI interrupt 
for device 0000:00:14.6 disabled
Dec  7 20:06:22 lukasz-laptop kernel: [   13.602629] RAMDISK driver 
initialized: 16 RAM disks of 65536K size 1024 blocksize
Dec  7 20:06:22 lukasz-laptop kernel: [   13.602845] input: Macintosh 
mouse button emulation as /class/input/input0
Dec  7 20:06:22 lukasz-laptop kernel: [   13.602916] PNP: PS/2 
Controller [PNP0303:PS2K,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
Dec  7 20:06:22 lukasz-laptop kernel: [   13.603722] serio: i8042 KBD 
port at 0x60,0x64 irq 1
Dec  7 20:06:22 lukasz-laptop kernel: [   13.603728] serio: i8042 AUX 
port at 0x60,0x64 irq 12
Dec  7 20:06:22 lukasz-laptop kernel: [   13.603911] mice: PS/2 mouse 
device common for all mice
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604035] EISA: Probing bus 0 
at eisa.0
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604045] Cannot allocate 
resource for EISA slot 1
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604073] Cannot allocate 
resource for EISA slot 8
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604075] EISA: Detected 0 cards.
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604167] TCP cubic registered
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604180] NET: Registered 
protocol family 1
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604202] Using IPI 
No-Shortcut mode
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604413]   Magic number: 
3:198:93
Dec  7 20:06:22 lukasz-laptop kernel: [   13.604915] Freeing unused 
kernel memory: 364k freed
Dec  7 20:06:22 lukasz-laptop kernel: [   13.643990] input: AT 
Translated Set 2 keyboard as /class/input/input1
Dec  7 20:06:22 lukasz-laptop kernel: [   14.831955] AppArmor: AppArmor 
initialized<5>audit(1197057959.060:2):  type=1505 info="AppArmor 
initialized" pid=1213
Dec  7 20:06:22 lukasz-laptop kernel: [   14.838537] fuse init (API 
version 7.8)
Dec  7 20:06:22 lukasz-laptop kernel: [   14.843482] Failure registering 
capabilities with primary security module.
Dec  7 20:06:22 lukasz-laptop kernel: [   14.858094] ACPI: CPU0 (power 
states: C1[C1] C2[C2] C3[C3])
Dec  7 20:06:22 lukasz-laptop kernel: [    3.372000] Marking TSC 
unstable due to: possible TSC halt in C2.
Dec  7 20:06:22 lukasz-laptop kernel: [    3.376000] Time: acpi_pm 
clocksource has been installed.
Dec  7 20:06:22 lukasz-laptop kernel: [    3.400000] ACPI: Thermal Zone 
[TZS0] (58 C)
Dec  7 20:06:22 lukasz-laptop kernel: [    3.448000] ACPI: Thermal Zone 
[TZS1] (52 C)
Dec  7 20:06:22 lukasz-laptop kernel: [    3.504000] ACPI: Thermal Zone 
[TZSV] (61 C)
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] usbcore: registered 
new interface driver usbfs
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] usbcore: registered 
new interface driver hub
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] usbcore: registered 
new device driver usb
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] ohci_hcd: 2006 
August 04 USB 1.1 'Open' Host Controller (OHCI) Driver
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] ACPI: PCI Interrupt 
0000:00:13.0[A] -> GSI 19 (level, low) -> IRQ 18
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] ohci_hcd 
0000:00:13.0: OHCI Host Controller
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] ohci_hcd 
0000:00:13.0: new USB bus registered, assigned bus number 1
Dec  7 20:06:22 lukasz-laptop kernel: [    4.148000] ohci_hcd 
0000:00:13.0: irq 18, io mem 0xc0000000
Dec  7 20:06:22 lukasz-laptop kernel: [    4.216000] SCSI subsystem 
initialized
Dec  7 20:06:22 lukasz-laptop kernel: [    4.220000] libata version 2.21 
loaded.
Dec  7 20:06:22 lukasz-laptop kernel: [    4.232000] usb usb1: 
configuration #1 chosen from 1 choice
Dec  7 20:06:22 lukasz-laptop kernel: [    4.232000] hub 1-0:1.0: USB 
hub found
Dec  7 20:06:22 lukasz-laptop kernel: [    4.232000] hub 1-0:1.0: 4 
ports detected
Dec  7 20:06:22 lukasz-laptop kernel: [    4.336000] ACPI: PCI Interrupt 
0000:00:13.1[A] -> GSI 19 (level, low) -> IRQ 18
Dec  7 20:06:22 lukasz-laptop kernel: [    4.336000] ohci_hcd 
0000:00:13.1: OHCI Host Controller
Dec  7 20:06:22 lukasz-laptop kernel: [    4.336000] ohci_hcd 
0000:00:13.1: new USB bus registered, assigned bus number 2
Dec  7 20:06:22 lukasz-laptop kernel: [    4.336000] ohci_hcd 
0000:00:13.1: irq 18, io mem 0xc0001000
Dec  7 20:06:22 lukasz-laptop kernel: [    4.396000] usb usb2: 
configuration #1 chosen from 1 choice
Dec  7 20:06:22 lukasz-laptop kernel: [    4.396000] hub 2-0:1.0: USB 
hub found
Dec  7 20:06:22 lukasz-laptop kernel: [    4.396000] hub 2-0:1.0: 4 
ports detected
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] ACPI: PCI Interrupt 
0000:00:13.2[A] -> GSI 19 (level, low) -> IRQ 18
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] ehci_hcd 
0000:00:13.2: EHCI Host Controller
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] ehci_hcd 
0000:00:13.2: new USB bus registered, assigned bus number 3
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] ehci_hcd 
0000:00:13.2: irq 18, io mem 0xc0002000
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] ehci_hcd 
0000:00:13.2: USB 2.0 started, EHCI 1.00, driver 10 Dec 2004
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] usb usb3: 
configuration #1 chosen from 1 choice
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] hub 3-0:1.0: USB 
hub found
Dec  7 20:06:22 lukasz-laptop kernel: [    4.500000] hub 3-0:1.0: 8 
ports detected
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] Uniform 
Multi-Platform E-IDE driver Revision: 7.00alpha2
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] ide: Assuming 33MHz 
system bus speed for PIO modes; override with idebus=xx
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] ATIIXP: IDE 
controller at PCI slot 0000:00:14.1
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] ACPI: PCI Interrupt 
0000:00:14.1[A] -> GSI 16 (level, low) -> IRQ 19
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] ATIIXP: chipset 
revision 0
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] ATIIXP: not 100%% 
native mode: will probe irqs later
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000]     ide0: BM-DMA at 
0x8410-0x8417, BIOS settings: hda:DMA, hdb:pio
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000]     ide1: BM-DMA at 
0x8418-0x841f, BIOS settings: hdc:DMA, hdd:pio
Dec  7 20:06:22 lukasz-laptop kernel: [    4.608000] Probing IDE 
interface ide0...
Dec  7 20:06:22 lukasz-laptop kernel: [    4.896000] hda: 
IC25N080ATMR04-0, ATA DISK drive
Dec  7 20:06:22 lukasz-laptop kernel: [    5.148000] usb 2-2: new low 
speed USB device using ohci_hcd and address 2
Dec  7 20:06:22 lukasz-laptop kernel: [    5.360000] usb 2-2: 
configuration #1 chosen from 1 choice
Dec  7 20:06:22 lukasz-laptop kernel: [    5.372000] usbcore: registered 
new interface driver hiddev
Dec  7 20:06:22 lukasz-laptop kernel: [    5.384000] input: Logitech USB 
RECEIVER as /class/input/input2
Dec  7 20:06:22 lukasz-laptop kernel: [    5.384000] input: USB HID 
v1.11 Mouse [Logitech USB RECEIVER] on usb-0000:00:13.1-2
Dec  7 20:06:22 lukasz-laptop kernel: [    5.384000] usbcore: registered 
new interface driver usbhid
Dec  7 20:06:22 lukasz-laptop kernel: [    5.384000] 
/build/buildd/linux-source-2.6.22-2.6.22/drivers/hid/usbhid/hid-core.c: 
v2.6:USB HID core driver
Dec  7 20:06:22 lukasz-laptop kernel: [    5.568000] hda: selected mode 0x45
Dec  7 20:06:22 lukasz-laptop kernel: [    5.568000] ide0 at 
0x1f0-0x1f7,0x3f6 on irq 14
Dec  7 20:06:22 lukasz-laptop kernel: [    5.588000] Probing IDE 
interface ide1...
Dec  7 20:06:22 lukasz-laptop kernel: [    6.324000] hdc: Slimtype DVDRW 
SOSW-833S, ATAPI CD/DVD-ROM drive
Dec  7 20:06:22 lukasz-laptop kernel: [    6.996000] hdc: selected mode 0x42
Dec  7 20:06:22 lukasz-laptop kernel: [    6.996000] ide1 at 
0x170-0x177,0x376 on irq 15
Dec  7 20:06:22 lukasz-laptop kernel: [    6.996000] ACPI: PCI Interrupt 
0000:06:06.2[C] -> GSI 22 (level, low) -> IRQ 20
Dec  7 20:06:22 lukasz-laptop kernel: [    7.044000] ohci1394: fw-host0: 
OHCI-1394 1.1 (PCI): IRQ=[20]  MMIO=[c0208000-c02087ff]  Max 
Packet=[2048]  IR/IT contexts=[4/8]
Dec  7 20:06:22 lukasz-laptop kernel: [    7.044000] r8169 Gigabit 
Ethernet driver 2.2LK loaded
Dec  7 20:06:22 lukasz-laptop kernel: [    7.044000] ACPI: PCI Interrupt 
0000:06:07.0[A] -> GSI 23 (level, low) -> IRQ 22
Dec  7 20:06:22 lukasz-laptop kernel: [    7.048000] eth0: 
RTL8169sb/8110sb at 0xe0844400, 00:0a:e4:e0:7a:18, XID 10000000 IRQ 22
Dec  7 20:06:22 lukasz-laptop kernel: [    7.056000] hda: max request 
size: 512KiB
Dec  7 20:06:22 lukasz-laptop kernel: [    7.068000] hda: 156301488 
sectors (80026 MB) w/7884KiB Cache, CHS=16383/255/63, UDMA(100)
Dec  7 20:06:22 lukasz-laptop kernel: [    7.068000] hda: cache flushes 
supported
Dec  7 20:06:22 lukasz-laptop kernel: [    7.068000]  hda: hda1 hda2 
hda3 < hda5 hda6 hda7 >
Dec  7 20:06:22 lukasz-laptop kernel: [    7.192000] hdc: ATAPI 24X 
DVD-ROM DVD-R CD-R/RW drive, 2048kB Cache, UDMA(33)
Dec  7 20:06:22 lukasz-laptop kernel: [    7.192000] Uniform CD-ROM 
driver Revision: 3.20
Dec  7 20:06:22 lukasz-laptop kernel: [    7.848000] Attempting manual 
resume
Dec  7 20:06:22 lukasz-laptop kernel: [    7.848000] swsusp: Resume From 
Partition 3:7
Dec  7 20:06:22 lukasz-laptop kernel: [    7.848000] PM: Checking swsusp 
image.
Dec  7 20:06:22 lukasz-laptop kernel: [    7.860000] PM: Resume from 
disk failed.
Dec  7 20:06:22 lukasz-laptop kernel: [    7.908000] kjournald 
starting.  Commit interval 5 seconds
Dec  7 20:06:22 lukasz-laptop kernel: [    7.908000] EXT3-fs: mounted 
filesystem with ordered data mode.
Dec  7 20:06:22 lukasz-laptop kernel: [    8.316000] ieee1394: Host 
added: ID:BUS[0-00:1023]  GUID[1234567812345678]
Dec  7 20:06:22 lukasz-laptop kernel: [   19.372000] Linux agpgart 
interface v0.102 (c) Dave Jones
Dec  7 20:06:22 lukasz-laptop kernel: [   19.384000] pci_hotplug: PCI 
Hot Plug PCI Core version: 0.5
Dec  7 20:06:22 lukasz-laptop kernel: [   19.392000] shpchp: Standard 
Hot Plug PCI Controller Driver version: 0.4
Dec  7 20:06:22 lukasz-laptop kernel: [   20.128000] piix4_smbus 
0000:00:14.0: Found 0000:00:14.0 device
Dec  7 20:06:22 lukasz-laptop kernel: [   20.224000] Yenta: CardBus 
bridge found at 0000:06:06.0 [1025:0080]
Dec  7 20:06:22 lukasz-laptop kernel: [   20.224000] Yenta: Using CSCINT 
to route CSC interrupts to PCI
Dec  7 20:06:22 lukasz-laptop kernel: [   20.224000] Yenta: Routing 
CardBus interrupts to PCI
Dec  7 20:06:22 lukasz-laptop kernel: [   20.224000] Yenta TI: socket 
0000:06:06.0, mfunc 0x010a1b22, devctl 0x64
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] Yenta: ISA IRQ mask 
0x0ef8, PCI irq 16
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] Socket status: 30000006
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] Yenta: Raising 
subordinate bus# of parent bus (#06) from #06 to #08
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] pcmcia: parent PCI 
bridge I/O window: 0xa000 - 0xafff
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] cs: IO port probe 
0xa000-0xafff: clean.
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] pcmcia: parent PCI 
bridge Memory window: 0xc0200000 - 0xc02fffff
Dec  7 20:06:22 lukasz-laptop kernel: [   20.456000] pcmcia: parent PCI 
bridge Memory window: 0x30000000 - 0x35ffffff
Dec  7 20:06:22 lukasz-laptop kernel: [   20.788000] ieee80211_crypt: 
registered algorithm 'NULL'
Dec  7 20:06:22 lukasz-laptop kernel: [   20.792000] ieee80211: 802.11 
data/management/control stack, git-1.1.13
Dec  7 20:06:22 lukasz-laptop kernel: [   20.792000] ieee80211: 
Copyright (C) 2004-2005 Intel Corporation <jketreno at linux.intel.com>
Dec  7 20:06:22 lukasz-laptop kernel: [   20.820000] input: PC Speaker 
as /class/input/input3
Dec  7 20:06:22 lukasz-laptop kernel: [   20.900000] sdhci: Secure 
Digital Host Controller Interface driver
Dec  7 20:06:22 lukasz-laptop kernel: [   20.900000] sdhci: Copyright(c) 
Pierre Ossman
Dec  7 20:06:22 lukasz-laptop kernel: [   20.900000] sdhci: SDHCI 
controller found at 0000:06:06.4 [104c:8034] (rev 0)
Dec  7 20:06:22 lukasz-laptop kernel: [   20.900000] ACPI: PCI Interrupt 
0000:06:06.4[A] -> GSI 20 (level, low) -> IRQ 16
Dec  7 20:06:22 lukasz-laptop kernel: [   20.900000] mmc0: SDHCI at 
0xc0209000 irq 16 DMA
Dec  7 20:06:22 lukasz-laptop kernel: [   20.904000] mmc1: SDHCI at 
0xc0208c00 irq 16 DMA
Dec  7 20:06:22 lukasz-laptop kernel: [   20.904000] mmc2: SDHCI at 
0xc0208800 irq 16 DMA
Dec  7 20:06:22 lukasz-laptop kernel: [   20.964000] irda_init()
Dec  7 20:06:22 lukasz-laptop kernel: [   20.964000] NET: Registered 
protocol family 23
Dec  7 20:06:22 lukasz-laptop kernel: [   20.980000] usbcore: registered 
new interface driver lmpcm_usb
Dec  7 20:06:22 lukasz-laptop kernel: [   20.980000] 
/build/buildd/linux-ubuntu-modules-2.6.22-2.6.22/debian/build/build-generic/misc/lmpcm_usb.c: 
v0.5.5:USB Logitech MediaPlay Cordless Mouse driver
Dec  7 20:06:22 lukasz-laptop kernel: [   21.020000] ACPI: PCI Interrupt 
0000:00:14.5[B] -> GSI 17 (level, low) -> IRQ 17
Dec  7 20:06:22 lukasz-laptop kernel: [   21.052000] bcm43xx driver
Dec  7 20:06:22 lukasz-laptop kernel: [   21.184000] cs: IO port probe 
0x100-0x3af: clean.
Dec  7 20:06:22 lukasz-laptop kernel: [   21.184000] cs: IO port probe 
0x3e0-0x4ff: excluding 0x4d0-0x4d7
Dec  7 20:06:22 lukasz-laptop kernel: [   21.184000] cs: IO port probe 
0x820-0x8ff: excluding 0x878-0x87f
Dec  7 20:06:22 lukasz-laptop kernel: [   21.188000] cs: IO port probe 
0xc00-0xcf7: excluding 0xc00-0xc07 0xc10-0xc17 0xc50-0xc57 0xc68-0xc6f 
0xcd0-0xcdf
Dec  7 20:06:22 lukasz-laptop kernel: [   21.188000] cs: IO port probe 
0xa00-0xaff: clean.
Dec  7 20:06:22 lukasz-laptop kernel: [   21.288000] Synaptics Touchpad, 
model: 1, fw: 6.2, id: 0x12a0b1, caps: 0xa04713/0x204000
Dec  7 20:06:22 lukasz-laptop kernel: [   21.316000] input: SynPS/2 
Synaptics TouchPad as /class/input/input4
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] 
nsc_ircc_pnp_probe() : From PnP, found firbase 0x2F8 ; irq 3 ; dma 3.
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc-ircc, chip->init
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc-ircc, Found 
chip at base=0x02e
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc-ircc, driver 
loaded (Dag Brattli)
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc_ircc_open(), 
can't get iobase of 0x2f8
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc-ircc, Found 
chip at base=0x02e
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc-ircc, driver 
loaded (Dag Brattli)
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] nsc_ircc_open(), 
can't get iobase of 0x2f8
Dec  7 20:06:22 lukasz-laptop kernel: [   21.320000] pnp: Device 00:0a 
disabled.
Dec  7 20:06:22 lukasz-laptop kernel: [   21.536000] ACPI: PCI Interrupt 
0000:06:05.0[A] -> GSI 21 (level, low) -> IRQ 21
Dec  7 20:06:22 lukasz-laptop kernel: [   21.544000] ACPI: PCI Interrupt 
0000:06:06.3[A] -> GSI 20 (level, low) -> IRQ 16
Dec  7 20:06:22 lukasz-laptop kernel: [   21.544000] ACPI: PCI Interrupt 
0000:00:14.6[B] -> GSI 17 (level, low) -> IRQ 17
Dec  7 20:06:22 lukasz-laptop kernel: [   21.656000] MC'97 1 converters 
and GPIO not ready (0xff00)
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: Acer 
Laptop ACPI Extras version 0.9.1
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: Detected 
Acer AMW0 interface
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: Finding 
quirks
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: Looking 
for quirks
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: No 
quirks known for this laptop
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: 
Initialising interface
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: No EC 
data for reading bluetooth - bluetooth value when read will be a 'best 
guess'
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: No EC 
data for reading wireless - wireless value when read will be a 'best guess'
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: No EC 
data for reading mail LED - mail LED value when read will be a 'best guess'
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: We need 
more data from your laptop's Embedded Controller (EC) to better support it
Dec  7 20:06:22 lukasz-laptop kernel: [   22.636000] acer_acpi: Please 
see http://code.google.com/p/aceracpi/wiki/EmbeddedController on how to help
Dec  7 20:06:22 lukasz-laptop kernel: [   22.640000] Registered led 
device: acer_acpi:mail
Dec  7 20:06:22 lukasz-laptop kernel: [   22.640000] acer_acpi: ACPI 
driver registered
Dec  7 20:06:22 lukasz-laptop kernel: [   22.640000] acer_acpi: 
Commandline args: mailled(0) wireless(1) bluetooth(0) brightness(-1)
Dec  7 20:06:22 lukasz-laptop kernel: [   22.640000] acer_acpi:   
set_bool: cap=1, interface type=1, value=0
Dec  7 20:06:22 lukasz-laptop kernel: [   22.640000] acer_acpi: Doing 
\_SB_.AMW0.WMAB( 1, 1, [16-byte buffer] )
Dec  7 20:06:22 lukasz-laptop kernel: [   22.644000] acer_acpi:   
Execution status: 0
Dec  7 20:06:22 lukasz-laptop kernel: [   22.644000] acer_acpi:   
Result: 0 bytes
Dec  7 20:06:22 lukasz-laptop kernel: [   22.644000] acer_acpi:   Args: 
0x00009610 0x00000031 0x00000000 0xe0b24870
Dec  7 20:06:22 lukasz-laptop kernel: [   22.644000] acer_acpi:   
set_bool: cap=2, interface type=1, value=1
Dec  7 20:06:22 lukasz-laptop kernel: [   22.644000] acer_acpi: Doing 
\_SB_.AMW0.WMAB( 1, 1, [16-byte buffer] )
Dec  7 20:06:22 lukasz-laptop kernel: [   22.652000] acer_acpi:   
Execution status: 0
Dec  7 20:06:22 lukasz-laptop kernel: [   22.652000] acer_acpi:   
Result: 0 bytes
Dec  7 20:06:22 lukasz-laptop kernel: [   22.652000] acer_acpi:   Args: 
0x00009610 0x00000135 0x00000000 0xe0b24870
Dec  7 20:06:22 lukasz-laptop kernel: [   22.652000] acer_acpi:   
set_bool: cap=4, interface type=1, value=0
Dec  7 20:06:22 lukasz-laptop kernel: [   22.652000] acer_acpi: Doing 
\_SB_.AMW0.WMAB( 1, 1, [16-byte buffer] )
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   
Execution status: 0
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   
Result: 0 bytes
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   Args: 
0x00009610 0x00000034 0x00000000 0xe0b24870
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   
set_bool: cap=16, interface type=1, value=-1
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   
set_u8: cap=64, interface type=1, value=255
Dec  7 20:06:22 lukasz-laptop kernel: [   22.660000] acer_acpi:   
set_u8: cap=8, interface type=1, value=255
Dec  7 20:06:22 lukasz-laptop kernel: [   22.784000] lp: driver loaded 
but no devices found
Dec  7 20:06:22 lukasz-laptop kernel: [   22.860000] Adding 506008k swap 
on /dev/hda7.  Priority:-1 extents:1 across:506008k
Dec  7 20:06:22 lukasz-laptop kernel: [   22.868000] EXT3 FS on hda6, 
internal journal
Dec  7 20:06:22 lukasz-laptop kernel: [   24.448000] ttyS1: LSR safety 
check engaged!
Dec  7 20:06:22 lukasz-laptop last message repeated 2 times
Dec  7 20:06:22 lukasz-laptop kernel: [   24.508000] pnp: Device 00:0a 
activated.
Dec  7 20:06:22 lukasz-laptop kernel: [   24.528000] 
nsc_ircc_pnp_probe() : From PnP, found firbase 0x2F8 ; irq 3 ; dma 3.
Dec  7 20:06:22 lukasz-laptop kernel: [   24.528000] nsc-ircc, chip->init
Dec  7 20:06:22 lukasz-laptop kernel: [   24.528000] nsc-ircc, Found 
chip at base=0x02e
Dec  7 20:06:22 lukasz-laptop kernel: [   24.528000] nsc-ircc, driver 
loaded (Dag Brattli)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.064000] ACPI: ACPI Dock 
Station Driver
Dec  7 20:06:22 lukasz-laptop kernel: [   25.132000] ACPI: AC Adapter 
[ADP1] (on-line)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.148000] ACPI: Video Device 
[VGA] (multi-head: yes  rom: no  post: no)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.152000] ACPI: Video Device 
[VGA] (multi-head: yes  rom: no  post: no)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.348000] ACPI: Battery Slot 
[BAT0] (battery present)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.400000] input: Power Button 
(FF) as /class/input/input5
Dec  7 20:06:22 lukasz-laptop kernel: [   25.404000] ACPI: Power Button 
(FF) [PWRF]
Dec  7 20:06:22 lukasz-laptop kernel: [   25.436000] input: Lid Switch 
as /class/input/input6
Dec  7 20:06:22 lukasz-laptop kernel: [   25.440000] ACPI: Lid Switch [LID0]
Dec  7 20:06:22 lukasz-laptop kernel: [   25.472000] input: Sleep Button 
(CM) as /class/input/input7
Dec  7 20:06:22 lukasz-laptop kernel: [   25.480000] ACPI: Sleep Button 
(CM) [SLPB]
Dec  7 20:06:22 lukasz-laptop kernel: [   25.728000] powernow-k8: Found 
1 Mobile AMD Sempron(tm) Processor 3000+ processors (version 2.00.00)
Dec  7 20:06:22 lukasz-laptop kernel: [   25.728000] powernow-k8:    0 : 
fid 0xa (1800 MHz), vid 0x8
Dec  7 20:06:22 lukasz-laptop kernel: [   25.728000] powernow-k8:    1 : 
fid 0x8 (1600 MHz), vid 0xa
Dec  7 20:06:22 lukasz-laptop kernel: [   25.728000] powernow-k8:    2 : 
fid 0x0 (800 MHz), vid 0x13
Dec  7 20:06:23 lukasz-laptop kernel: [   26.876000] ppdev: user-space 
parallel port driver
Dec  7 20:06:23 lukasz-laptop kernel: [   27.008000] 
audit(1197057983.366:3):  type=1503 operation="inode_permission" 
requested_mask="a" denied_mask="a" name="/dev/tty" pid=4821 
profile="/usr/sbin/cupsd"
Dec  7 20:06:23 lukasz-laptop kernel: [   27.148000] apm: BIOS not found.
Dec  7 20:06:23 lukasz-laptop kernel: [   27.204000] r8169: eth0: link down
Dec  7 20:06:24 lukasz-laptop kernel: [   28.112000] 
irlap_change_speed(), setting speed to 9600
Dec  7 20:06:25 lukasz-laptop kernel: [   29.280000] Failure registering 
capabilities with primary security module.
Dec  7 20:06:27 lukasz-laptop kernel: [   31.084000] Clocksource tsc 
unstable (delta = -211985906 ns)
Dec  7 20:06:28 lukasz-laptop kernel: [   31.796000] fglrx: module 
license 'Proprietary. (C) 2002 - ATI Technologies, Starnberg, GERMANY' 
taints kernel.
Dec  7 20:06:28 lukasz-laptop kernel: [   31.804000] [fglrx] Maximum 
main memory to use for locked dma buffers: 430 MBytes.
Dec  7 20:06:28 lukasz-laptop kernel: [   31.804000] [fglrx] module 
loaded - fglrx 8.37.6 [May 25 2007] on minor 0
Dec  7 20:06:28 lukasz-laptop kernel: [   31.848000] ACPI: PCI Interrupt 
0000:01:00.0[A] -> GSI 18 (level, low) -> IRQ 23
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] total      
GART = 130023424
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] free       
GART = 114032640
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] max single 
GART = 114032640
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] total      
LFB  = 134086656
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] free       
LFB  = 119697408
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] max single 
LFB  = 119697408
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] total      
Inv  = 0
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] free       
Inv  = 0
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] max single 
Inv  = 0
Dec  7 20:06:30 lukasz-laptop kernel: [   33.808000] [fglrx] total      
TIM  = 0
Dec  7 20:07:35 lukasz-laptop kernel: [   98.736000] NET: Registered 
protocol family 17
Dec  7 20:07:48 lukasz-laptop kernel: [  111.232000] printk: 2 messages 
suppressed.
Dec  7 20:07:48 lukasz-laptop kernel: [  111.232000] SoftMAC: Open 
Authentication completed with 00:14:6c:aa:aa:3a
Dec  7 20:07:48 lukasz-laptop kernel: [  112.488000] ieee80211_crypt: 
registered algorithm 'CCMP'
Dec  7 20:07:49 lukasz-laptop kernel: [  112.604000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.624000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.700000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.720000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.780000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.788000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.864000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.936000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  112.936000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:49 lukasz-laptop kernel: [  113.312000] ieee80211_crypt: 
registered algorithm 'TKIP'
Dec  7 20:07:52 lukasz-laptop kernel: [  116.256000] printk: 131 
messages suppressed.
Dec  7 20:07:52 lukasz-laptop kernel: [  116.256000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:07:56 lukasz-laptop kernel: [  120.180000] NET: Registered 
protocol family 10
Dec  7 20:07:56 lukasz-laptop kernel: [  120.180000] lo: Disabled 
Privacy Extensions
Dec  7 20:07:56 lukasz-laptop kernel: [  120.180000] 
ADDRCONF(NETDEV_UP): eth0: link is not ready
Dec  7 20:07:59 lukasz-laptop kernel: [  121.232000] printk: 276 
messages suppressed.
Dec  7 20:07:59 lukasz-laptop kernel: [  121.232000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:04 lukasz-laptop kernel: [  126.280000] printk: 352 
messages suppressed.
Dec  7 20:08:04 lukasz-laptop kernel: [  126.280000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:08 lukasz-laptop kernel: [  130.184000] eth1: no IPv6 
routers present
Dec  7 20:08:09 lukasz-laptop kernel: [  131.232000] printk: 371 
messages suppressed.
Dec  7 20:08:09 lukasz-laptop kernel: [  131.232000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:14 lukasz-laptop kernel: [  136.232000] printk: 344 
messages suppressed.
Dec  7 20:08:14 lukasz-laptop kernel: [  136.232000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:19 lukasz-laptop kernel: [  141.240000] printk: 394 
messages suppressed.
Dec  7 20:08:19 lukasz-laptop kernel: [  141.240000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:21 lukasz-laptop kernel: [  142.576000] [fglrx] PCIe has 
already been initialized. Reinitializing ...
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] total      
GART = 130023424
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] free       
GART = 114032640
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] max single 
GART = 114032640
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] total      
LFB  = 134086656
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] free       
LFB  = 119697408
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] max single 
LFB  = 119697408
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] total      
Inv  = 0
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] free       
Inv  = 0
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] max single 
Inv  = 0
Dec  7 20:08:21 lukasz-laptop kernel: [  142.596000] [fglrx] total      
TIM  = 0
Dec  7 20:08:24 lukasz-laptop kernel: [  146.232000] printk: 374 
messages suppressed.
Dec  7 20:08:24 lukasz-laptop kernel: [  146.232000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a
Dec  7 20:08:27 lukasz-laptop kernel: [  149.188000] APIC error on CPU0: 
00(40)
Dec  7 20:08:29 lukasz-laptop kernel: [  151.240000] printk: 370 
messages suppressed.
Dec  7 20:08:29 lukasz-laptop kernel: [  151.240000] CCMP: decrypt 
failed: STA=00:14:6c:aa:aa:3a



From mb at bu3sch.de  Sat Dec  8 19:22:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 8 Dec 2007 19:22:47 +0100
Subject: SPROM rev 4
Message-ID: <200712081922.47688.mb@bu3sch.de>

Hi Larry,

Do you have the data from a SPROM revision 4? I need a copy
to fix some things.
And do you know a device which includes a rev 4 SPROM?
I'd like to buy one.

Thanks.

-- 
Greetings Michael.


From mb at bu3sch.de  Sat Dec  8 21:35:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 8 Dec 2007 21:35:11 +0100
Subject: b43 continues to have issue with APs at times
In-Reply-To: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
References: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
Message-ID: <200712082135.11685.mb@bu3sch.de>

On Saturday 08 December 2007 21:22:37 John H. wrote:
> I have this problem at two different locations with two different
> access points.  2.6.23.1 kernel, and sometimes until I actually power
> down the AP and restart it, wpa_supplicant and such just times out on
> the AP.
> 
> Any ideas?
> 
> 

I think that's rather a mac80211 or supplicant issue.
I think roaming should handle this.
Do you see this with other drivers, too?

-- 
Greetings Michael.


From rjw at sisk.pl  Sat Dec  8 22:09:56 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sat, 8 Dec 2007 22:09:56 +0100
Subject: b43 continues to have issue with APs at times
In-Reply-To: <200712082135.11685.mb@bu3sch.de>
References: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
	<200712082135.11685.mb@bu3sch.de>
Message-ID: <200712082209.57069.rjw@sisk.pl>

On Saturday, 8 of December 2007, Michael Buesch wrote:
> On Saturday 08 December 2007 21:22:37 John H. wrote:
> > I have this problem at two different locations with two different
> > access points.  2.6.23.1 kernel, and sometimes until I actually power
> > down the AP and restart it, wpa_supplicant and such just times out on
> > the AP.
> > 
> > Any ideas?

Have you tried to change the distance from the AP (like moving closer to it
when the wpa_supplicant is appearing to have problems)?

Rafael


From larry.finger at lwfinger.net  Sun Dec  9 00:22:19 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 08 Dec 2007 15:22:19 -0800
Subject: SPROM rev 4
In-Reply-To: <200712081922.47688.mb@bu3sch.de>
References: <200712081922.47688.mb@bu3sch.de>
Message-ID: <475B272B.5020204@lwfinger.net>

Michael Buesch wrote:
> Hi Larry,
> 
> Do you have the data from a SPROM revision 4? I need a copy
> to fix some things.
> And do you know a device which includes a rev 4 SPROM?
> I'd like to buy one.

The data from a program dump are as follows:

SPROM r4 dump
0x0000: 0x2801 0x0000 0x0009 0x1028 0x0000 0x0DBE 0xFF00 0x2BC4
0x0010: 0x2A64 0x2964 0x2C64 0x3CE7 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0020: 0x4328 0x8000 0x0002 0x0000 0x1001 0x1800 0x0000 0x0000
0x0030: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0040: 0x5372 0x004C 0x4A01 0x0000 0x0004 0x0000 0x0019 0x7DA5
0x0050: 0x1912 0x0000 0x0001 0x83FF 0xFFFF 0xFFFF 0x0303 0x0202
0x0060: 0xFFFF 0x3437 0x5B5B 0x1420 0x5B5B 0x0D0C 0x5B5B 0x1A1E
0x0070: 0x5B5B 0x3844 0x3838 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0080: 0x3E4E 0xFEC6 0x15D3 0xFB3D 0x0000 0x3E3C 0x3C3C 0xFE6C
0x0090: 0x1664 0xFA7B 0x0000 0xFE37 0x1401 0xFAE7 0x0000 0xFE5A
0x00A0: 0x147E 0xFAC7 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0x3E4E
0x00B0: 0xFEC1 0x15BC 0xFB2F 0x0000 0x3E3C 0x3C3C 0xFE69 0x1608
0x00C0: 0xFA81 0x0000 0xFE2A 0x1321 0xFB0B 0x0000 0xFE66 0x1595
0x00D0: 0xFA88 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x00E0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x00F0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0100: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0110: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0120: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x0130: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0x0000 0x0000 0x0000 0x0000
0x0140: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
0x0150: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
0x0160: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
0x0170: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
0x0180: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
0x0190: 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x01A0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
0x01B0: 0xFFFF 0xFFFF 0xFFFF 0x9404

The only device that I know has this SPROM is a BCM4328 mini PCIe card that is in a Dell XPS M1710
laptop owned by Michael Gerdau. The lspci -v output is

0c:00.0 Network controller: Broadcom Corporation BCM4328 802.11a/b/g/n (rev 01)
	Subsystem: Dell Unknown device 0009
	Flags: bus master, fast devsel, latency 0, IRQ 17
	Memory at ecffc000 (64-bit, non-prefetchable) [size=16K]
	Memory at e0000000 (64-bit, prefetchable) [size=1M]
	Capabilities: [40] Power Management version 2
	Capabilities: [58] Message Signalled Interrupts: Mask- 64bit+ Queue=0/0 Enable-
	Capabilities: [d0] Express Endpoint IRQ 0
	Capabilities: [100] Advanced Error Reporting
	Capabilities: [13c] Virtual Channel
	Capabilities: [15c] Power Budgeting

Gerdau has been working on implementation of some of the code defined in the 802.11n PHY section of
the specs. I pointed him in the right direction, but have not seen his recent stuff so as not to
taint the driver from RE info.

Larry




From mb at bu3sch.de  Sun Dec  9 00:36:19 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 9 Dec 2007 00:36:19 +0100
Subject: SPROM rev 4
In-Reply-To: <475B272B.5020204@lwfinger.net>
References: <200712081922.47688.mb@bu3sch.de> <475B272B.5020204@lwfinger.net>
Message-ID: <200712090036.19451.mb@bu3sch.de>

On Sunday 09 December 2007 00:22:19 Larry Finger wrote:
> Michael Buesch wrote:
> > Hi Larry,
> > 
> > Do you have the data from a SPROM revision 4? I need a copy
> > to fix some things.
> > And do you know a device which includes a rev 4 SPROM?
> > I'd like to buy one.
> 
> The data from a program dump are as follows:
> 
> SPROM r4 dump
> 0x0000: 0x2801 0x0000 0x0009 0x1028 0x0000 0x0DBE 0xFF00 0x2BC4
> 0x0010: 0x2A64 0x2964 0x2C64 0x3CE7 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0020: 0x4328 0x8000 0x0002 0x0000 0x1001 0x1800 0x0000 0x0000
> 0x0030: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0040: 0x5372 0x004C 0x4A01 0x0000 0x0004 0x0000 0x0019 0x7DA5
> 0x0050: 0x1912 0x0000 0x0001 0x83FF 0xFFFF 0xFFFF 0x0303 0x0202
> 0x0060: 0xFFFF 0x3437 0x5B5B 0x1420 0x5B5B 0x0D0C 0x5B5B 0x1A1E
> 0x0070: 0x5B5B 0x3844 0x3838 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0080: 0x3E4E 0xFEC6 0x15D3 0xFB3D 0x0000 0x3E3C 0x3C3C 0xFE6C
> 0x0090: 0x1664 0xFA7B 0x0000 0xFE37 0x1401 0xFAE7 0x0000 0xFE5A
> 0x00A0: 0x147E 0xFAC7 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0x3E4E
> 0x00B0: 0xFEC1 0x15BC 0xFB2F 0x0000 0x3E3C 0x3C3C 0xFE69 0x1608
> 0x00C0: 0xFA81 0x0000 0xFE2A 0x1321 0xFB0B 0x0000 0xFE66 0x1595
> 0x00D0: 0xFA88 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x00E0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x00F0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0100: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0110: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0120: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x0130: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0x0000 0x0000 0x0000 0x0000
> 0x0140: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
> 0x0150: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
> 0x0160: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
> 0x0170: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
> 0x0180: 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000
> 0x0190: 0x0000 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x01A0: 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF 0xFFFF
> 0x01B0: 0xFFFF 0xFFFF 0xFFFF 0x9404
> 
> The only device that I know has this SPROM is a BCM4328 mini PCIe card that is in a Dell XPS M1710
> laptop owned by Michael Gerdau. The lspci -v output is
> 
> 0c:00.0 Network controller: Broadcom Corporation BCM4328 802.11a/b/g/n (rev 01)
> 	Subsystem: Dell Unknown device 0009
> 	Flags: bus master, fast devsel, latency 0, IRQ 17
> 	Memory at ecffc000 (64-bit, non-prefetchable) [size=16K]
> 	Memory at e0000000 (64-bit, prefetchable) [size=1M]
> 	Capabilities: [40] Power Management version 2
> 	Capabilities: [58] Message Signalled Interrupts: Mask- 64bit+ Queue=0/0 Enable-
> 	Capabilities: [d0] Express Endpoint IRQ 0
> 	Capabilities: [100] Advanced Error Reporting
> 	Capabilities: [13c] Virtual Channel
> 	Capabilities: [15c] Power Budgeting
> 
> Gerdau has been working on implementation of some of the code defined in the 802.11n PHY section of
> the specs. I pointed him in the right direction, but have not seen his recent stuff so as not to
> taint the driver from RE info.

Cool, Thanks.

Michael:
Can you send me the code you have? I am going to buy various N devices.
So I want to avoid duplicating work.

-- 
Greetings Michael.


From mb at bu3sch.de  Sun Dec  9 11:57:21 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 9 Dec 2007 11:57:21 +0100
Subject: b43 continues to have issue with APs at times
In-Reply-To: <5b9417770712090001t631bb650l531fbb7efb1cc80c@mail.gmail.com>
References: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
	<200712082135.11685.mb@bu3sch.de>
	<5b9417770712090001t631bb650l531fbb7efb1cc80c@mail.gmail.com>
Message-ID: <200712091157.22000.mb@bu3sch.de>

On Sunday 09 December 2007 09:01:26 John H. wrote:
> no, i stopped using ndiswrapper a while back because I wanted to use
> b43, but I did not have this issue then.

But ndiswrapper doesn't use mac80211, right?
Do you see this issue with other _mac80211_ drivers?

> On Dec 8, 2007 2:35 PM, Michael Buesch <mb at bu3sch.de> wrote:
> >
> > On Saturday 08 December 2007 21:22:37 John H. wrote:
> > > I have this problem at two different locations with two different
> > > access points.  2.6.23.1 kernel, and sometimes until I actually power
> > > down the AP and restart it, wpa_supplicant and such just times out on
> > > the AP.
> > >
> > > Any ideas?
> > >
> > >
> >
> > I think that's rather a mac80211 or supplicant issue.
> > I think roaming should handle this.
> > Do you see this with other drivers, too?
> >
> > --
> > Greetings Michael.
> >
> 
> 



-- 
Greetings Michael.


From mgerdau at tiscali.de  Sun Dec  9 12:31:40 2007
From: mgerdau at tiscali.de (Michael Gerdau)
Date: Sun, 9 Dec 2007 12:31:40 +0100
Subject: SPROM rev 4
In-Reply-To: <200712090036.19451.mb@bu3sch.de>
References: <200712081922.47688.mb@bu3sch.de> <475B272B.5020204@lwfinger.net>
	<200712090036.19451.mb@bu3sch.de>
Message-ID: <200712091231.52033.mgerdau@tiscali.de>

> Can you send me the code you have? I am going to buy various N devices.
> So I want to avoid duplicating work.

Yes, sure.
I'll do a bit of cleaning up and mail it to you (either tonight or
tomorrow).

I also have a few areas where I feel I'm stuck (this being my very first
kernel/driver project ever) and I obviously would highly appreciate
comments.

Last not least I am still not too fluent with using git, especially
git in combination with quilt, so please bear with me here as well.

Best,
Michael
-- 
 Michael Gerdau       email: mgerdau at tiscali.de
 GPG-keys available on request or at public keyserver
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071209/44c884d5/attachment.pgp>

From mb at bu3sch.de  Sun Dec  9 12:39:33 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 9 Dec 2007 12:39:33 +0100
Subject: SPROM rev 4
In-Reply-To: <200712091231.52033.mgerdau@tiscali.de>
References: <200712081922.47688.mb@bu3sch.de> <200712090036.19451.mb@bu3sch.de>
	<200712091231.52033.mgerdau@tiscali.de>
Message-ID: <200712091239.33721.mb@bu3sch.de>

On Sunday 09 December 2007 12:31:40 Michael Gerdau wrote:
> > Can you send me the code you have? I am going to buy various N devices.
> > So I want to avoid duplicating work.
> 
> Yes, sure.
> I'll do a bit of cleaning up and mail it to you (either tonight or
> tomorrow).
> 
> I also have a few areas where I feel I'm stuck (this being my very first
> kernel/driver project ever) and I obviously would highly appreciate
> comments.
> 
> Last not least I am still not too fluent with using git, especially
> git in combination with quilt, so please bear with me here as well.

Great.

It would be great if you have some time to further continue development
on the driver. We always need new developers who know what they do. :)

-- 
Greetings Michael.


From mb at bu3sch.de  Sun Dec  9 12:40:05 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 9 Dec 2007 12:40:05 +0100
Subject: b43 continues to have issue with APs at times
In-Reply-To: <5b9417770712090337q48381adbt8a670fd5fd153563@mail.gmail.com>
References: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
	<200712091157.22000.mb@bu3sch.de>
	<5b9417770712090337q48381adbt8a670fd5fd153563@mail.gmail.com>
Message-ID: <200712091240.06060.mb@bu3sch.de>

On Sunday 09 December 2007 12:37:27 John H. wrote:
> i dont know what other ones i would have used.  bcm43xx never worked
> right, really, and had bandwidth limitations.
> 
> Right now I am downloading over a wireless lan and getting 1mb/s.
> Why?  That just makes no sense.

Because it's broken?


-- 
Greetings Michael.


From mgerdau at tiscali.de  Sun Dec  9 16:36:21 2007
From: mgerdau at tiscali.de (Michael Gerdau)
Date: Sun, 9 Dec 2007 16:36:21 +0100
Subject: SPROM rev 4
In-Reply-To: <200712091239.33721.mb@bu3sch.de>
References: <200712081922.47688.mb@bu3sch.de>
	<200712091231.52033.mgerdau@tiscali.de>
	<200712091239.33721.mb@bu3sch.de>
Message-ID: <200712091636.34307.mgerdau@tiscali.de>

> It would be great if you have some time to further continue development
> on the driver. We always need new developers who know what they do. :)

Not sure I do qualify w/r to the "who know what they do" part but I'm
willing to try :)

Best,
Michael
-- 
 Michael Gerdau       email: mgerdau at tiscali.de
 GPG-keys available on request or at public keyserver
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071209/ece4ba1c/attachment.pgp>

From mb at bu3sch.de  Sun Dec  9 22:34:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 9 Dec 2007 22:34:59 +0100
Subject: [PATCH] b43: Fix ofdmtab write regression
Message-ID: <200712092235.00042.mb@bu3sch.de>

commit f04b3787bbce4567e28069a9ec97dcd804626ac7 introduced
a regression for the ofdmtable writing.

It incorrectly removed the writing of the high 16bits for
a 32bit table write and initialized the direction identifier
too late.

This patch does also some cleanups to make the code much more
readable and adds a few comments, so non rocket scientists are
also able to understand what this address caching is all about.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-09 20:50:43.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-09 20:56:55.000000000 +0100
@@ -545,12 +545,18 @@
 
 	u16 initval;		//FIXME rename?
 
-	/* OFDM address read/write caching for hardware auto-increment. */
-	u16 ofdm_addr;
-	u8 ofdm_valid; /* 0: invalid, 1: read, 2: write */
-
 	/* PHY TX errors counter. */
 	atomic_t txerr_cnt;
+
+	/* The device does address auto increment for the OFDM tables.
+	 * We cache the previously used address here and omit the address
+	 * write on the next table access, if possible. */
+	u16 ofdmtab_addr; /* The address currently set in hardware. */
+	enum { /* The last data flow direction. */
+		B43_OFDMTAB_DIRECTION_UNKNOWN = 0,
+		B43_OFDMTAB_DIRECTION_READ,
+		B43_OFDMTAB_DIRECTION_WRITE,
+	} ofdmtab_addr_direction;
 };
 
 /* Data structures for DMA transmission, per 80211 core. */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-09 20:50:43.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-09 21:01:27.000000000 +0100
@@ -2266,12 +2266,6 @@
 	b43_write16(dev, B43_MMIO_POWERUP_DELAY,
 		    dev->dev->bus->chipco.fast_pwrup_delay);
 
-	/* OFDM address caching. */
-	phy->ofdm_valid = 0;
-
-	/* PHY TX errors counter. */
-	atomic_set(&phy->txerr_cnt, B43_PHY_TX_BADNESS_LIMIT);
-
 	err = 0;
 	b43dbg(dev->wl, "Chip initialized\n");
 out:
@@ -3198,6 +3192,12 @@
 	phy->channel = 0xFF;
 
 	phy->hardware_power_control = !!modparam_hwpctl;
+
+	/* PHY TX errors counter. */
+	atomic_set(&phy->txerr_cnt, B43_PHY_TX_BADNESS_LIMIT);
+
+	/* OFDM-table address caching. */
+	phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_UNKNOWN;
 }
 
 static void setup_struct_wldev_for_init(struct b43_wldev *dev)
Index: wireless-2.6/drivers/net/wireless/b43/tables.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/tables.c	2007-12-09 20:50:43.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/tables.c	2007-12-09 20:55:01.000000000 +0100
@@ -381,13 +381,17 @@
 	u16 addr;
 
 	addr = table + offset;
-	if (addr - 1 != phy->ofdm_addr || phy->ofdm_valid != 1) {
+	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_READ) ||
+	    (addr - 1 != phy->ofdmtab_addr)) {
+		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
-		phy->ofdm_valid = 1;
+		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_READ;
 	}
-	phy->ofdm_addr = addr;
+	phy->ofdmtab_addr = addr;
 
 	return b43_phy_read(dev, B43_PHY_OTABLEI);
+
+	/* Some compiletime assertions... */
 	assert_sizes();
 }
 
@@ -398,11 +402,13 @@
 	u16 addr;
 
 	addr = table + offset;
-	if (addr - 1 != phy->ofdm_addr || phy->ofdm_valid != 2) {
+	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_WRITE) ||
+	    (addr -1 != phy->ofdmtab_addr)) {
+		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
-		phy->ofdm_valid = 2;
+		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_WRITE;
 	}
-	phy->ofdm_addr = addr;
+	phy->ofdmtab_addr = addr;
 	b43_phy_write(dev, B43_PHY_OTABLEI, value);
 }
 
@@ -413,11 +419,13 @@
 	u16 addr;
 
 	addr = table + offset;
-	if (addr - 1 != phy->ofdm_addr || phy->ofdm_valid != 1) {
+	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_READ) ||
+	    (addr - 1 != phy->ofdmtab_addr)) {
+		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
-		phy->ofdm_valid = 1;
+		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_READ;
 	}
-	phy->ofdm_addr = addr;
+	phy->ofdmtab_addr = addr;
 	ret = b43_phy_read(dev, B43_PHY_OTABLEQ);
 	ret <<= 16;
 	ret |= b43_phy_read(dev, B43_PHY_OTABLEI);
@@ -432,13 +440,16 @@
 	u16 addr;
 
 	addr = table + offset;
-	if (addr - 1 != phy->ofdm_addr || phy->ofdm_valid != 2) {
+	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_WRITE) ||
+	    (addr - 1 != phy->ofdmtab_addr)) {
+		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
-		phy->ofdm_valid = 2;
+		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_WRITE;
 	}
-	phy->ofdm_addr = addr;
+	phy->ofdmtab_addr = addr;
 
 	b43_phy_write(dev, B43_PHY_OTABLEI, value);
+	b43_phy_write(dev, B43_PHY_OTABLEQ, (value >> 16));
 }
 
 u16 b43_gtab_read(struct b43_wldev *dev, u16 table, u16 offset)

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Dec 10 11:36:48 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 10 Dec 2007 11:36:48 +0100
Subject: b43 regression
Message-ID: <200712101136.48669.mb@bu3sch.de>

I have identified another regression introduced by
commit f04b3787bbce4567e28069a9ec97dcd804626ac7.

On my device it shows up as broken transmission after
a suspend/resume cycle. The workaround for it is to boot
a known good driver (in my case the vendor driver in OSX)
and then reboot (without turning the machine off) into the
broken driver.

It seems like we unintentionally removed some significant
initialization step in that patch. I could not identify it, yet.
The patch I sent yesterday did fix two other bugs, but not this one.

I am trying to find the reason for this.
If someone wants to help searching, the best way would be to look
at that patch I mentioned above and compare the stuff that it
removes to the stuff that it adds. There must be some tiny line
that it removes but does not re-add it at another place.
Four eyes see more than two.

I have no idea how this bug could be related to the few bugreports
in the redhat bugzilla. Though, one could test that by trying a
kernel that does not include the patch.

Sorry for the inconvenience.

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Dec 10 15:16:18 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 10 Dec 2007 15:16:18 +0100
Subject: b43/ssb: sprom antenna fixes
Message-ID: <200712101516.18169.mb@bu3sch.de>

Here are the antenna related fixes for the sprom.

-- 
Greetings Michael.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 005-ssb-fix-antenna-stuff.patch
Type: text/x-diff
Size: 12971 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071210/84756b18/attachment.patch>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 006-b43-fix-allowed-antenna-selection.patch
Type: text/x-diff
Size: 3719 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071210/84756b18/attachment-0001.patch>

From Larry.Finger at lwfinger.net  Mon Dec 10 18:08:12 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 10 Dec 2007 09:08:12 -0800
Subject: rfkill-input is not automatically loaded 
Message-ID: <475D727C.7000302@lwfinger.net>

Ivo and Dmitry,

I have finally figured out why the b43 rfkill LED handling routine works on some systems, and not on 
others. It works as long as rfkill-input is built-in, or if the module is loaded, but this module is 
not automatically loaded even though rfkill.ko has been loaded, and rfkill->toggle_radio points to a 
valid routine. Of course, that routine is never called.

I'm sure there is a way to force loading of this module, but I have not figured it out. I would 
appreciate any pointers.

Thanks,

Larry


From mb at bu3sch.de  Mon Dec 10 18:17:38 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 10 Dec 2007 18:17:38 +0100
Subject: rfkill-input is not automatically loaded
In-Reply-To: <475D727C.7000302@lwfinger.net>
References: <475D727C.7000302@lwfinger.net>
Message-ID: <200712101817.38988.mb@bu3sch.de>

On Monday 10 December 2007 18:08:12 Larry Finger wrote:
> Ivo and Dmitry,
> 
> I have finally figured out why the b43 rfkill LED handling routine works on some systems, and not on 
> others. It works as long as rfkill-input is built-in, or if the module is loaded, but this module is 
> not automatically loaded even though rfkill.ko has been loaded, and rfkill->toggle_radio points to a 
> valid routine. Of course, that routine is never called.
> 
> I'm sure there is a way to force loading of this module, but I have not figured it out. I would 
> appreciate any pointers.

I'd say the drivers (b43) should try to load and pin the module.
Failure to do so should not interrupt loading the driver and registering
the rfkill switch, though. See request_module().

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Dec 10 18:19:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 10 Dec 2007 18:19:30 +0100
Subject: rfkill-input is not automatically loaded
In-Reply-To: <200712101817.38988.mb@bu3sch.de>
References: <475D727C.7000302@lwfinger.net> <200712101817.38988.mb@bu3sch.de>
Message-ID: <200712101819.30726.mb@bu3sch.de>

On Monday 10 December 2007 18:17:38 Michael Buesch wrote:
> On Monday 10 December 2007 18:08:12 Larry Finger wrote:
> > Ivo and Dmitry,
> > 
> > I have finally figured out why the b43 rfkill LED handling routine works on some systems, and not on 
> > others. It works as long as rfkill-input is built-in, or if the module is loaded, but this module is 
> > not automatically loaded even though rfkill.ko has been loaded, and rfkill->toggle_radio points to a 
> > valid routine. Of course, that routine is never called.
> > 
> > I'm sure there is a way to force loading of this module, but I have not figured it out. I would 
> > appreciate any pointers.
> 
> I'd say the drivers (b43) should try to load and pin the module.

Ok, well. Probably not pin it. But load it.

> Failure to do so should not interrupt loading the driver and registering
> the rfkill switch, though. See request_module().
> 



-- 
Greetings Michael.


From mb at bu3sch.de  Mon Dec 10 19:16:14 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 10 Dec 2007 19:16:14 +0100
Subject: [RFC/T V2] b43: Fix rfkill radio LED
In-Reply-To: <475d7609.nURYtfeh6HSdh0Nd%Larry.Finger@lwfinger.net>
References: <475d7609.nURYtfeh6HSdh0Nd%Larry.Finger@lwfinger.net>
Message-ID: <200712101916.14311.mb@bu3sch.de>

On Monday 10 December 2007 18:23:21 Larry Finger wrote:
> This version of the rfkill switch patch is pretty straight forward. Please
> comment on the dropping of wl->mutex before rfkill initialization. This is
> the only way I could avoid the circular locking without a much earlier
> rfkill initialization.

I think that's not acceptable, as it introduces a nasty (although unlikely)
race condition with the band switch. I will think about it and will fix
it myself then. If there's no way to properly fix it, I think it may also
be OK to live with this damn unlikely race.

Please also add the call to request_module() into the rfkill init and test
if it works properly. After that, please send the complete patch back to me
and I will try to fix the locking issue.

Anyway, this patch looks nice. Good work.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Mon Dec 10 20:22:22 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 10 Dec 2007 11:22:22 -0800
Subject: [RFC/T V2] b43: Fix rfkill radio LED
In-Reply-To: <200712101916.14311.mb@bu3sch.de>
References: <475d7609.nURYtfeh6HSdh0Nd%Larry.Finger@lwfinger.net>
	<200712101916.14311.mb@bu3sch.de>
Message-ID: <475D91EE.6050909@lwfinger.net>

Michael Buesch wrote:
> 
> I think that's not acceptable, as it introduces a nasty (although unlikely)
> race condition with the band switch. I will think about it and will fix
> it myself then. If there's no way to properly fix it, I think it may also
> be OK to live with this damn unlikely race.
> 
> Please also add the call to request_module() into the rfkill init and test
> if it works properly. After that, please send the complete patch back to me
> and I will try to fix the locking issue.

The request_module() call is in the version I just sent you. If rfkill-input is a module, it loads
correctly. If the code is built-in or if the code was not built at al, it generates an error;
therefore, my error message is a little ambiguous. If I use the CONFIG variables, I could generate
really proper messages, but I decided to skip that part.

Larry



From comphappy at gmail.com  Tue Dec 11 02:14:05 2007
From: comphappy at gmail.com (Brennan Ashton)
Date: Mon, 10 Dec 2007 17:14:05 -0800
Subject: b43 regression
In-Reply-To: <200712101136.48669.mb@bu3sch.de>
References: <200712101136.48669.mb@bu3sch.de>
Message-ID: <b2d05de20712101714x38c2dec6la9c4f496732b053d@mail.gmail.com>

On Dec 10, 2007 2:36 AM, Michael Buesch <mb at bu3sch.de> wrote:
> I have identified another regression introduced by
> commit f04b3787bbce4567e28069a9ec97dcd804626ac7.
>
> On my device it shows up as broken transmission after
> a suspend/resume cycle. The workaround for it is to boot
> a known good driver (in my case the vendor driver in OSX)
> and then reboot (without turning the machine off) into the
> broken driver.
>
> It seems like we unintentionally removed some significant
> initialization step in that patch. I could not identify it, yet.
> The patch I sent yesterday did fix two other bugs, but not this one.
>
> I am trying to find the reason for this.
> If someone wants to help searching, the best way would be to look
> at that patch I mentioned above and compare the stuff that it
> removes to the stuff that it adds. There must be some tiny line
> that it removes but does not re-add it at another place.
> Four eyes see more than two.
>
> I have no idea how this bug could be related to the few bugreports
> in the redhat bugzilla. Though, one could test that by trying a
> kernel that does not include the patch.
>
> Sorry for the inconvenience.
>
> --
> Greetings Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
RE:
https://bugzilla.redhat.com/show_bug.cgi?id=412861
I downloaded the source for 2.6.23.8-63.fc8.src.rpm the package that
things started to stop working at, and could not find any part of this
patch applied, so at least for that bug it is something else.

-- 
Brennan Ashton
Bellingham, Washington

"The box said, 'Requires Windows XP or better'. So I installed Linux"


From mb at bu3sch.de  Tue Dec 11 12:02:33 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 11 Dec 2007 12:02:33 +0100
Subject: b43 regression
In-Reply-To: <b2d05de20712101714x38c2dec6la9c4f496732b053d@mail.gmail.com>
References: <200712101136.48669.mb@bu3sch.de>
	<b2d05de20712101714x38c2dec6la9c4f496732b053d@mail.gmail.com>
Message-ID: <200712111202.34101.mb@bu3sch.de>

On Tuesday 11 December 2007 02:14:05 Brennan Ashton wrote:
> https://bugzilla.redhat.com/show_bug.cgi?id=412861
> I downloaded the source for 2.6.23.8-63.fc8.src.rpm the package that
> things started to stop working at, and could not find any part of this
> patch applied, so at least for that bug it is something else.
> 

Please find out which patch broke it then. Nobody but you can do this.

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 11 13:43:50 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 11 Dec 2007 13:43:50 +0100
Subject: [PATCH RFT] b43: Fix for broken transmission
Message-ID: <200712111343.50943.mb@bu3sch.de>

This patch fixes the transmission problems introduced by
commit f04b3787bbce4567e28069a9ec97dcd804626ac7

It depends on
[PATCH] b43: Fix ofdmtab write regression

I'm not sure if the dummy read is really required.
The old code does it. I think it can't hurt and can possibly
fix some write posting problems (hardware bugs or whatever. Who knows).

Please test this.

NOT-signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-2.6/drivers/net/wireless/b43/wa.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/wa.c	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/wa.c	2007-12-11 13:35:26.000000000 +0100
@@ -123,10 +123,16 @@ static void b43_wa_rssi_lt(struct b43_wl
 {
 	int i;
 
+#if 0
 	for (i = 0; i < 8; i++)
 		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i + 8);
 	for (i = 8; i < 16; i++)
 		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i - 8);
+#endif
+	/* FIXME: Current specs are wrong. The following loop matches the
+	 * old specs, which works great on my device. --mb */
+	for (i = 0; i < 64; i++)
+		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i);
 }
 
 static void b43_wa_analog(struct b43_wldev *dev)
@@ -306,16 +312,16 @@ static void b43_wa_crs_ed(struct b43_wld
 	struct b43_phy *phy = &dev->phy;
 
 	if (phy->rev == 1) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x4F19);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x4F19);
 	} else if (phy->rev == 2) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x1861);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0271);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
 				  | 0x0800);
 	} else {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x0098);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x0070);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x0098);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0070);
 		b43_phy_write(dev, B43_PHY_OFDM(0xC9), 0x0080);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
@@ -441,7 +447,7 @@ static void b43_wa_altagc(struct b43_wld
 		}
 	}
 	b43_phy_write(dev, B43_PHY_DIVSRCHIDX,
-		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x7F7F) | 0x7874);
+		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x8080) | 0x7874);
 	b43_phy_write(dev, B43_PHY_OFDM(0x8E), 0x1C00);
 	if (phy->rev == 1) {
 		b43_phy_write(dev, B43_PHY_DIVP1P2GAIN,
@@ -466,6 +472,7 @@ static void b43_wa_altagc(struct b43_wld
 		b43_phy_write(dev, B43_PHY_OFDM(0x26),
 			b43_phy_read(dev, B43_PHY_OFDM(0x26)) & ~0x1000);
 	}
+	b43_phy_read(dev, B43_PHY_VERSION_OFDM); /* Dummy read */
 }
 
 static void b43_wa_tr_ltov(struct b43_wldev *dev) /* TR Lookup Table Original Values */
Index: wireless-2.6/drivers/net/wireless/b43/phy.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/phy.h	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/phy.h	2007-12-11 12:57:40.000000000 +0100
@@ -25,7 +25,7 @@ struct b43_phy;
 #define  B43_PHY_BBANDCFG_RXANT		0x180	/* RX Antenna selection */
 #define  B43_PHY_BBANDCFG_RXANT_SHIFT	7
 #define B43_PHY_PWRDOWN			B43_PHY_OFDM(0x03)	/* Powerdown */
-#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 */
+#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 (phy.rev 1 only) */
 #define B43_PHY_LNAHPFCTL		B43_PHY_OFDM(0x1C)	/* LNA/HPF control */
 #define B43_PHY_LPFGAINCTL		B43_PHY_OFDM(0x20)	/* LPF Gain control */
 #define B43_PHY_ADIVRELATED		B43_PHY_OFDM(0x27)	/* FIXME rename */
@@ -69,8 +69,8 @@ struct b43_phy;
 #define B43_PHY_DIVP1P2GAIN		B43_PHY_OFDM(0xAB)
 #define B43_PHY_DIVSRCHGAINBACK		B43_PHY_OFDM(0xAD)	/* Divider search gain back */
 #define B43_PHY_DIVSRCHGAINCHNG		B43_PHY_OFDM(0xAE)	/* Divider search gain change */
-#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (rev 1 only) */
-#define B43_PHY_CRSTHRES2_R1		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (rev 1 only) */
+#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (phy.rev >= 2 only) */
+#define B43_PHY_CRSTHRES2		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (phy.rev >= 2 only) */
 #define B43_PHY_TSSIP_LTBASE		B43_PHY_OFDM(0x380)	/* TSSI power lookup table base */
 #define B43_PHY_DC_LTBASE		B43_PHY_OFDM(0x3A0)	/* DC lookup table base */
 #define B43_PHY_GAIN_LTBASE		B43_PHY_OFDM(0x3C0)	/* Gain lookup table base */
Index: wireless-2.6/drivers/net/wireless/b43/tables.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:39.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:40.000000000 +0100
@@ -403,7 +403,7 @@ void b43_ofdmtab_write16(struct b43_wlde
 
 	addr = table + offset;
 	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_WRITE) ||
-	    (addr -1 != phy->ofdmtab_addr)) {
+	    (addr - 1 != phy->ofdmtab_addr)) {
 		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
 		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_WRITE;

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 11 16:22:53 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 11 Dec 2007 16:22:53 +0100
Subject: [PATCH RFT] b43: Fix for broken transmission
In-Reply-To: <200712111343.50943.mb@bu3sch.de>
References: <200712111343.50943.mb@bu3sch.de>
Message-ID: <200712111622.54086.mb@bu3sch.de>

On Tuesday 11 December 2007 13:43:50 Michael Buesch wrote:
> This patch fixes the transmission problems introduced by
> commit f04b3787bbce4567e28069a9ec97dcd804626ac7
> 
> It depends on
> [PATCH] b43: Fix ofdmtab write regression
> 
> I'm not sure if the dummy read is really required.
> The old code does it. I think it can't hurt and can possibly
> fix some write posting problems (hardware bugs or whatever. Who knows).
> 
> Please test this.
> 
> NOT-signed-off-by: Michael Buesch <mb at bu3sch.de>

Here's an updated version that should fix even more bugs:
http://bu3sch.de/patches/wireless-2.6/20071211-1622/patches/005-b43-fix-init-rewrite-breakage.patch

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 11 22:53:23 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 11 Dec 2007 22:53:23 +0100
Subject: b43 continues to have issue with APs at times
In-Reply-To: <5b9417770712111341t746920c4jee69ef8b498c0f94@mail.gmail.com>
References: <5b9417770712081222y4f0ab1va51910faf16fb068@mail.gmail.com>
	<200712091240.06060.mb@bu3sch.de>
	<5b9417770712111341t746920c4jee69ef8b498c0f94@mail.gmail.com>
Message-ID: <200712112253.24062.mb@bu3sch.de>

On Tuesday 11 December 2007 22:41:49 John H. wrote:
> Is that a question?

Not really.
You know the history of this driver? I mean. It's good
that it works at all. If you need better performance
someone has to fix it, probably. You could start with it. :)

> On Dec 9, 2007 5:40 AM, Michael Buesch <mb at bu3sch.de> wrote:
> > On Sunday 09 December 2007 12:37:27 John H. wrote:
> > > i dont know what other ones i would have used.  bcm43xx never worked
> > > right, really, and had bandwidth limitations.
> > >
> > > Right now I am downloading over a wireless lan and getting 1mb/s.
> > > Why?  That just makes no sense.
> >
> > Because it's broken?

-- 
Greetings Michael.


From comphappy at gmail.com  Wed Dec 12 04:16:22 2007
From: comphappy at gmail.com (Brennan Ashton)
Date: Tue, 11 Dec 2007 19:16:22 -0800
Subject: b43 regression
In-Reply-To: <200712111202.34101.mb@bu3sch.de>
References: <200712101136.48669.mb@bu3sch.de>
	<b2d05de20712101714x38c2dec6la9c4f496732b053d@mail.gmail.com>
	<200712111202.34101.mb@bu3sch.de>
Message-ID: <b2d05de20712111916o7e7b0395j974c06591de38965@mail.gmail.com>

On Dec 11, 2007 3:02 AM, Michael Buesch <mb at bu3sch.de> wrote:
> On Tuesday 11 December 2007 02:14:05 Brennan Ashton wrote:
> > https://bugzilla.redhat.com/show_bug.cgi?id=412861
> > I downloaded the source for 2.6.23.8-63.fc8.src.rpm the package that
> > things started to stop working at, and could not find any part of this
> > patch applied, so at least for that bug it is something else.
> >
>
> Please find out which patch broke it then. Nobody but you can do this.

What do you use to hammer the card with data to see if if fails?  I
have been just surfing the web, and moving data back and forth, but it
is very inefficient and a poor form of a test. I think I may have
narrowed down the kernel were it starting failing, but I want to make
sure.

-- 
Brennan Ashton
Bellingham, Washington

"The box said, 'Requires Windows XP or better'. So I installed Linux"


From larry.finger at lwfinger.net  Wed Dec 12 08:49:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 11 Dec 2007 23:49:00 -0800
Subject: [PATCH RFT] b43: Fix for broken transmission
In-Reply-To: <200712111622.54086.mb@bu3sch.de>
References: <200712111343.50943.mb@bu3sch.de> <200712111622.54086.mb@bu3sch.de>
Message-ID: <475F926C.2000003@lwfinger.net>

Michael Buesch wrote:
> On Tuesday 11 December 2007 13:43:50 Michael Buesch wrote:
>> This patch fixes the transmission problems introduced by
>> commit f04b3787bbce4567e28069a9ec97dcd804626ac7
>>
>> It depends on
>> [PATCH] b43: Fix ofdmtab write regression
>>
>> I'm not sure if the dummy read is really required.
>> The old code does it. I think it can't hurt and can possibly
>> fix some write posting problems (hardware bugs or whatever. Who knows).
>>
>> Please test this.
>>
>> NOT-signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> Here's an updated version that should fix even more bugs:
> http://bu3sch.de/patches/wireless-2.6/20071211-1622/patches/005-b43-fix-init-rewrite-breakage.patch

This patch (and its predecessor) seem to make transmission at the OFDM rates a bit more reliable on 
my BCM4311/2 card.

Larry


From proski at gnu.org  Wed Dec 12 09:21:26 2007
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 12 Dec 2007 03:21:26 -0500
Subject: [PATCH RFT] b43: Fix for broken transmission
In-Reply-To: <475F926C.2000003@lwfinger.net>
References: <200712111343.50943.mb@bu3sch.de>
	<200712111622.54086.mb@bu3sch.de> <475F926C.2000003@lwfinger.net>
Message-ID: <20071212032126.f62e3tx3c408ocgo@webmail.spamcop.net>

Quoting Larry Finger <larry.finger at lwfinger.net>:

> Michael Buesch wrote:
>> Here's an updated version that should fix even more bugs:
>> http://bu3sch.de/patches/wireless-2.6/20071211-1622/patches/005-b43-fix-init-rewrite-breakage.patch

I had to omit the last part (for tables.c) - it's unrelated, cosmetic  
and doesn't apply to wireless-2.6/everything.

> This patch (and its predecessor) seem to make transmission at the   
> OFDM rates a bit more reliable on
> my BCM4311/2 card.

It's working fine on BCM4318 on PowerPC.  I haven't done any specific  
comparisons, but it used to disconnect a lot (at least one an hour)  
with a small antenna, so I installed a bigger antenna, but then gave  
up and switched to using another wireless device (rtl8185).

Right now, it's been working for over 2 hours with a small antenna  
(although it's a different antenna borrowed from rtl8185) and no  
disconnects.  Scanning finds 5 APs, which is the most I have seen here.

-- 
Regards,
Pavel Roskin


From stefano.brivio at polimi.it  Wed Dec 12 10:06:41 2007
From: stefano.brivio at polimi.it (stefano.brivio at polimi.it)
Date: Wed, 12 Dec 2007 10:06:41 +0100
Subject: [PATCH RFT] b43: Fix for broken transmission
In-Reply-To: <200712111622.54086.mb@bu3sch.de>
References: <200712111343.50943.mb@bu3sch.de> <200712111622.54086.mb@bu3sch.de>
Message-ID: <20071212100641.v2o9hosmwwgoo4gk@webmail.polimi.it>

Citando Michael Buesch <mb at bu3sch.de>:

> On Tuesday 11 December 2007 13:43:50 Michael Buesch wrote:
>> This patch fixes the transmission problems introduced by
>> commit f04b3787bbce4567e28069a9ec97dcd804626ac7
>>
>> It depends on
>> [PATCH] b43: Fix ofdmtab write regression
>>
>> I'm not sure if the dummy read is really required.
>> The old code does it. I think it can't hurt and can possibly
>> fix some write posting problems (hardware bugs or whatever. Who knows).
>>
>> Please test this.
>>
>> NOT-signed-off-by: Michael Buesch <mb at bu3sch.de>
>
> Here's an updated version that should fix even more bugs:
> http://bu3sch.de/patches/wireless-2.6/20071211-1622/patches/005-b43-fix-init-rewrite-breakage.patch

It completely fixes my 4309. Thank you for fixing my obnoxious  
regression. John, I think that this should go into the tree as soon as  
possible (well, as soon as Michael sign it off).


--
Ciao
Stefano





From mb at bu3sch.de  Wed Dec 12 11:42:45 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 11:42:45 +0100
Subject: b43 regression
In-Reply-To: <b2d05de20712111916o7e7b0395j974c06591de38965@mail.gmail.com>
References: <200712101136.48669.mb@bu3sch.de> <200712111202.34101.mb@bu3sch.de>
	<b2d05de20712111916o7e7b0395j974c06591de38965@mail.gmail.com>
Message-ID: <200712121142.45386.mb@bu3sch.de>

On Wednesday 12 December 2007 04:16:22 Brennan Ashton wrote:
> On Dec 11, 2007 3:02 AM, Michael Buesch <mb at bu3sch.de> wrote:
> > On Tuesday 11 December 2007 02:14:05 Brennan Ashton wrote:
> > > https://bugzilla.redhat.com/show_bug.cgi?id=412861
> > > I downloaded the source for 2.6.23.8-63.fc8.src.rpm the package that
> > > things started to stop working at, and could not find any part of this
> > > patch applied, so at least for that bug it is something else.
> > >
> >
> > Please find out which patch broke it then. Nobody but you can do this.
> 
> What do you use to hammer the card with data to see if if fails?  I

You can use iperf or simply wget some file from a http server in the
network.


-- 
Greetings Michael.


From mb at bu3sch.de  Wed Dec 12 11:46:48 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 11:46:48 +0100
Subject: [PATCH RFT] b43: Fix for broken transmission
In-Reply-To: <20071212032126.f62e3tx3c408ocgo@webmail.spamcop.net>
References: <200712111343.50943.mb@bu3sch.de> <475F926C.2000003@lwfinger.net>
	<20071212032126.f62e3tx3c408ocgo@webmail.spamcop.net>
Message-ID: <200712121146.49198.mb@bu3sch.de>

On Wednesday 12 December 2007 09:21:26 Pavel Roskin wrote:
> Quoting Larry Finger <larry.finger at lwfinger.net>:
> 
> > Michael Buesch wrote:
> >> Here's an updated version that should fix even more bugs:
> >> http://bu3sch.de/patches/wireless-2.6/20071211-1622/patches/005-b43-fix-init-rewrite-breakage.patch
> 
> I had to omit the last part (for tables.c) - it's unrelated, cosmetic  
> and doesn't apply to wireless-2.6/everything.

This patch depends on
[PATCH] b43: Fix ofdmtab write regression
And that is not just cosmetic.

> > This patch (and its predecessor) seem to make transmission at the   
> > OFDM rates a bit more reliable on
> > my BCM4311/2 card.
> 
> It's working fine on BCM4318 on PowerPC.  I haven't done any specific  
> comparisons, but it used to disconnect a lot (at least one an hour)  
> with a small antenna, so I installed a bigger antenna, but then gave  
> up and switched to using another wireless device (rtl8185).
> 
> Right now, it's been working for over 2 hours with a small antenna  
> (although it's a different antenna borrowed from rtl8185) and no  
> disconnects.  Scanning finds 5 APs, which is the most I have seen here.

Cool, thanks.

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Dec 12 19:50:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 19:50:11 +0100
Subject: [PATCH] b43: Fix for broken transmission
Message-ID: <200712121950.12079.mb@bu3sch.de>

This patch fixes the transmission problems introduced by
commit f04b3787bbce4567e28069a9ec97dcd804626ac7

I'm not sure if the dummy read is really required.
The old code does it. I think it can't hurt and can possibly
fix some write posting problems (hardware bugs or whatever. Who knows).

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-2.6/drivers/net/wireless/b43/wa.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/wa.c	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/wa.c	2007-12-11 13:35:26.000000000 +0100
@@ -123,10 +123,16 @@ static void b43_wa_rssi_lt(struct b43_wl
 {
 	int i;
 
+#if 0
 	for (i = 0; i < 8; i++)
 		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i + 8);
 	for (i = 8; i < 16; i++)
 		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i - 8);
+#endif
+	/* FIXME: Current specs are wrong. The following loop matches the
+	 * old specs, which works great on my device. --mb */
+	for (i = 0; i < 64; i++)
+		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i);
 }
 
 static void b43_wa_analog(struct b43_wldev *dev)
@@ -306,16 +312,16 @@ static void b43_wa_crs_ed(struct b43_wld
 	struct b43_phy *phy = &dev->phy;
 
 	if (phy->rev == 1) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x4F19);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x4F19);
 	} else if (phy->rev == 2) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x1861);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0271);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
 				  | 0x0800);
 	} else {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x0098);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x0070);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x0098);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0070);
 		b43_phy_write(dev, B43_PHY_OFDM(0xC9), 0x0080);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
@@ -441,7 +447,7 @@ static void b43_wa_altagc(struct b43_wld
 		}
 	}
 	b43_phy_write(dev, B43_PHY_DIVSRCHIDX,
-		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x7F7F) | 0x7874);
+		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x8080) | 0x7874);
 	b43_phy_write(dev, B43_PHY_OFDM(0x8E), 0x1C00);
 	if (phy->rev == 1) {
 		b43_phy_write(dev, B43_PHY_DIVP1P2GAIN,
@@ -466,6 +472,7 @@ static void b43_wa_altagc(struct b43_wld
 		b43_phy_write(dev, B43_PHY_OFDM(0x26),
 			b43_phy_read(dev, B43_PHY_OFDM(0x26)) & ~0x1000);
 	}
+	b43_phy_read(dev, B43_PHY_VERSION_OFDM); /* Dummy read */
 }
 
 static void b43_wa_tr_ltov(struct b43_wldev *dev) /* TR Lookup Table Original Values */
Index: wireless-2.6/drivers/net/wireless/b43/phy.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/phy.h	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/phy.h	2007-12-11 12:57:40.000000000 +0100
@@ -25,7 +25,7 @@ struct b43_phy;
 #define  B43_PHY_BBANDCFG_RXANT		0x180	/* RX Antenna selection */
 #define  B43_PHY_BBANDCFG_RXANT_SHIFT	7
 #define B43_PHY_PWRDOWN			B43_PHY_OFDM(0x03)	/* Powerdown */
-#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 */
+#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 (phy.rev 1 only) */
 #define B43_PHY_LNAHPFCTL		B43_PHY_OFDM(0x1C)	/* LNA/HPF control */
 #define B43_PHY_LPFGAINCTL		B43_PHY_OFDM(0x20)	/* LPF Gain control */
 #define B43_PHY_ADIVRELATED		B43_PHY_OFDM(0x27)	/* FIXME rename */
@@ -69,8 +69,8 @@ struct b43_phy;
 #define B43_PHY_DIVP1P2GAIN		B43_PHY_OFDM(0xAB)
 #define B43_PHY_DIVSRCHGAINBACK		B43_PHY_OFDM(0xAD)	/* Divider search gain back */
 #define B43_PHY_DIVSRCHGAINCHNG		B43_PHY_OFDM(0xAE)	/* Divider search gain change */
-#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (rev 1 only) */
-#define B43_PHY_CRSTHRES2_R1		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (rev 1 only) */
+#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (phy.rev >= 2 only) */
+#define B43_PHY_CRSTHRES2		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (phy.rev >= 2 only) */
 #define B43_PHY_TSSIP_LTBASE		B43_PHY_OFDM(0x380)	/* TSSI power lookup table base */
 #define B43_PHY_DC_LTBASE		B43_PHY_OFDM(0x3A0)	/* DC lookup table base */
 #define B43_PHY_GAIN_LTBASE		B43_PHY_OFDM(0x3C0)	/* Gain lookup table base */
Index: wireless-2.6/drivers/net/wireless/b43/tables.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:39.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:40.000000000 +0100
@@ -403,7 +403,7 @@ void b43_ofdmtab_write16(struct b43_wlde
 
 	addr = table + offset;
 	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_WRITE) ||
-	    (addr -1 != phy->ofdmtab_addr)) {
+	    (addr - 1 != phy->ofdmtab_addr)) {
 		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
 		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_WRITE;

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Dec 12 19:53:44 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 19:53:44 +0100
Subject: [PATCH RFT] b43: Fix rfkill radio LED
Message-ID: <200712121953.44939.mb@bu3sch.de>

I tried to fix the locking breakage and also cleaned up a few other things.
Please test this Larry. If that works, I will immediately send it to John.

Thanks.




Subject: b43: Fix rfkill radio LED

From:	Larry Finger <Larry.Finger at lwfinger.net>

This fixes Bug #9414

Since addition of the rfkill callback, the LED associated with the off
switch on the radio has not worked for several reasons:

(1) Essential data in the rfkill structure were missing.
(2) The rfkill structure was initialized after the LED initialization.
(3) There was a minor memory leak if the radio LED structure was inited.

Once the above problems were fixed, additional difficulties were noted:

(4) The radio LED was in the wrong state at startup.
(5) The radio switch had to be manipulated twice for each state change.
(6) A circular mutex locking situation existed.
(7) If rfkill-input is built as a module, it is not automatically loaded.

This patch fixes all of the above.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/rfkill.c	2007-12-09 21:33:18.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/rfkill.c	2007-12-12 19:34:03.000000000 +0100
@@ -25,6 +25,8 @@
 #include "rfkill.h"
 #include "b43.h"
 
+#include <linux/kmod.h>
+
 
 /* Returns TRUE, if the radio is enabled in hardware. */
 static bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
@@ -50,7 +52,10 @@ static void b43_rfkill_poll(struct input
 	bool report_change = 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED)) {
+		mutex_unlock(&wl->mutex);
+		return;
+	}
 	enabled = b43_is_hw_radio_enabled(dev);
 	if (unlikely(enabled != dev->radio_hw_enable)) {
 		dev->radio_hw_enable = enabled;
@@ -60,8 +65,12 @@ static void b43_rfkill_poll(struct input
 	}
 	mutex_unlock(&wl->mutex);
 
-	if (unlikely(report_change))
-		input_report_key(poll_dev->input, KEY_WLAN, enabled);
+	/* send the radio switch event to the system - note both a key press
+	 * and a release are required */
+	if (unlikely(report_change)) {
+		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 /* Called when the RFKILL toggled in software. */
@@ -69,13 +78,14 @@ static int b43_rfkill_soft_toggle(void *
 {
 	struct b43_wldev *dev = data;
 	struct b43_wl *wl = dev->wl;
-	int err = 0;
+	int err = -EBUSY;
 
 	if (!wl->rfkill.registered)
 		return 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (b43_status(dev) < B43_STAT_INITIALIZED)
+		goto out_unlock;
 	switch (state) {
 	case RFKILL_STATE_ON:
 		if (!dev->radio_hw_enable) {
@@ -133,9 +143,26 @@ void b43_rfkill_init(struct b43_wldev *d
 	rfk->poll_dev->poll = b43_rfkill_poll;
 	rfk->poll_dev->poll_interval = 1000; /* msecs */
 
+	rfk->poll_dev->input->name = rfk->name;
+	rfk->poll_dev->input->id.bustype = BUS_HOST;
+	rfk->poll_dev->input->id.vendor = dev->dev->bus->boardinfo.vendor;
+	rfk->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rfk->poll_dev->input->keybit);
+
 	err = rfkill_register(rfk->rfkill);
 	if (err)
 		goto err_free_polldev;
+
+#ifdef CONFIG_RFKILL_INPUT_MODULE
+	/* B43 RF-kill isn't useful without the rfkill-input subsystem.
+	 * Try to load the module. */
+	err = request_module("rfkill-input");
+	if (err) {
+		b43warn(wl, "Failed to load the rfkill-input module. "
+			"The built-in radio LED will not work.\n");
+	}
+#endif /* CONFIG_RFKILL_INPUT_MODULE */
+
 	err = input_register_polled_device(rfk->poll_dev);
 	if (err)
 		goto err_unreg_rfk;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-12 18:29:34.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-12 19:39:20.000000000 +0100
@@ -2165,7 +2165,6 @@ static void b43_mgmtframe_txantenna(stru
 static void b43_chip_exit(struct b43_wldev *dev)
 {
 	b43_radio_turn_off(dev, 1);
-	b43_leds_exit(dev);
 	b43_gpio_cleanup(dev);
 	/* firmware is released later */
 }
@@ -2193,11 +2192,10 @@ static int b43_chip_init(struct b43_wlde
 	err = b43_gpio_init(dev);
 	if (err)
 		goto out;	/* firmware is released later */
-	b43_leds_init(dev);
 
 	err = b43_upload_initvals(dev);
 	if (err)
-		goto err_leds_exit;
+		goto err_gpio_clean;
 	b43_radio_turn_on(dev);
 
 	b43_write16(dev, 0x03E6, 0x0000);
@@ -2273,8 +2271,7 @@ out:
 
 err_radio_off:
 	b43_radio_turn_off(dev, 1);
-err_leds_exit:
-	b43_leds_exit(dev);
+err_gpio_clean:
 	b43_gpio_cleanup(dev);
 	return err;
 }
@@ -3301,10 +3298,7 @@ static void b43_wireless_core_exit(struc
 		return;
 	b43_set_status(dev, B43_STAT_UNINIT);
 
-	mutex_unlock(&dev->wl->mutex);
-	b43_rfkill_exit(dev);
-	mutex_lock(&dev->wl->mutex);
-
+	b43_leds_exit(dev);
 	b43_rng_exit(dev->wl);
 	b43_pio_free(dev);
 	b43_dma_free(dev);
@@ -3426,12 +3420,12 @@ static int b43_wireless_core_init(struct
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	b43_rfkill_init(dev);
 	b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-      out:
+	b43_leds_init(dev);
+out:
 	return err;
 
       err_chip_exit:
@@ -3520,6 +3514,10 @@ static int b43_op_start(struct ieee80211
 	int did_init = 0;
 	int err = 0;
 
+	/* First register RFkill.
+	 * LEDs that are registered later depend on it. */
+	b43_rfkill_init(dev);
+
 	mutex_lock(&wl->mutex);
 
 	if (b43_status(dev) < B43_STAT_INITIALIZED) {
@@ -3549,6 +3547,8 @@ static void b43_op_stop(struct ieee80211
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
 
+	b43_rfkill_exit(dev);
+
 	mutex_lock(&wl->mutex);
 	if (b43_status(dev) >= B43_STAT_STARTED)
 		b43_wireless_core_stop(dev);
Index: wireless-2.6/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/leds.c	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/leds.c	2007-12-12 19:40:56.000000000 +0100
@@ -163,6 +163,9 @@ static void b43_map_led(struct b43_wldev
 		b43_register_led(dev, &dev->led_radio, name,
 				 b43_rfkill_led_name(dev),
 				 led_index, activelow);
+		/* Sync the RF-kill LED state with the switch state. */
+		if (dev->radio_hw_enable)
+			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
@@ -232,4 +235,5 @@ void b43_leds_exit(struct b43_wldev *dev
 	b43_unregister_led(&dev->led_tx);
 	b43_unregister_led(&dev->led_rx);
 	b43_unregister_led(&dev->led_assoc);
+	b43_unregister_led(&dev->led_radio);
 }


From larry.finger at lwfinger.net  Wed Dec 12 20:52:11 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 12 Dec 2007 11:52:11 -0800
Subject: My Laptop
In-Reply-To: <Pine.LNX.4.64.0712121357160.18810@fairfax.gathman.org>
References: <475EFF79.5030405@bellsouth.net>
	<Pine.LNX.4.64.0712121357160.18810@fairfax.gathman.org>
Message-ID: <47603BEB.8060302@lwfinger.net>

Stuart D. Gathman wrote:
> Broadcom wireless is only partially reverse engineered.  I tried the
> b43 driver in FC8 on the BCM94311MCG in my new laptop.  It worked, with
> WPA even, but I got kernel exceptions, DMA exception, and eventually the system
> froze.  I would say it is not ready for prime time.  (I will be looking for
> where to helpfully report the exceptions for those trying to debug
> the thing.  I suspect donations of relevant hardware are most useful.)
> No problems with the zd1211 driver and USB key.

I'm sorry that you had troubles with the BCM94311MCG in your laptop, but I think most of your 
problems are fixed in driver b43 in any of the 2.6.24-rcX kernels. In any case, the place to report 
such problems is bcm43xx-dev at lists.berlios.de.

I have both rev 1 and 2 of that PCIe card for my laptop, and I have no kernel or DMA exceptions, the 
system never freezes, and my throughput is higher with the b43 driver than with Windows using the 
Broadcom driver.

Larry




From mb at bu3sch.de  Wed Dec 12 22:03:22 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 22:03:22 +0100
Subject: [PATCH] b43: Fix for broken transmission
In-Reply-To: <200712121950.12079.mb@bu3sch.de>
References: <200712121950.12079.mb@bu3sch.de>
Message-ID: <200712122203.22491.mb@bu3sch.de>

On Wednesday 12 December 2007 19:50:11 Michael Buesch wrote:
> This patch fixes the transmission problems introduced by
> commit f04b3787bbce4567e28069a9ec97dcd804626ac7
> 
> I'm not sure if the dummy read is really required.
> The old code does it. I think it can't hurt and can possibly
> fix some write posting problems (hardware bugs or whatever. Who knows).
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 

Ah, crap. This was the wrong one. Give me a second and I will send the correct one.


-- 
Greetings Michael.


From mb at bu3sch.de  Wed Dec 12 22:05:18 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 12 Dec 2007 22:05:18 +0100
Subject: [PATCH #2] b43: Fix for broken transmission
Message-ID: <200712122205.19240.mb@bu3sch.de>

This patch fixes the transmission problems introduced by
commit f04b3787bbce4567e28069a9ec97dcd804626ac7

I'm not sure if the dummy read is really required.
The old code does it. I think it can't hurt and can possibly
fix some write posting problems (hardware bugs or whatever. Who knows).

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-2.6/drivers/net/wireless/b43/wa.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/wa.c	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/wa.c	2007-12-11 16:18:44.000000000 +0100
@@ -123,17 +123,24 @@ static void b43_wa_rssi_lt(struct b43_wl
 {
 	int i;
 
-	for (i = 0; i < 8; i++)
-		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i + 8);
-	for (i = 8; i < 16; i++)
-		b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i - 8);
+	if (0 /* FIXME: For APHY.rev=2 this might be needed */) {
+		for (i = 0; i < 8; i++)
+			b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i + 8);
+		for (i = 8; i < 16; i++)
+			b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i - 8);
+	} else {
+		for (i = 0; i < 64; i++)
+			b43_ofdmtab_write16(dev, B43_OFDMTAB_RSSI, i, i);
+	}
 }
 
 static void b43_wa_analog(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
+	u16 ofdmrev;
 
-	if (phy->analog > 2) {
+	ofdmrev = b43_phy_read(dev, B43_PHY_VERSION_OFDM) & B43_PHYVER_VERSION;
+	if (ofdmrev > 2) {
 		if (phy->type == B43_PHYTYPE_A)
 			b43_phy_write(dev, B43_PHY_PWRDOWN, 0x1808);
 		else
@@ -306,16 +313,16 @@ static void b43_wa_crs_ed(struct b43_wld
 	struct b43_phy *phy = &dev->phy;
 
 	if (phy->rev == 1) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x4F19);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x4F19);
 	} else if (phy->rev == 2) {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x1861);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x1861);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0271);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
 				  | 0x0800);
 	} else {
-		b43_phy_write(dev, B43_PHY_CRSTHRES1_R1, 0x0098);
-		b43_phy_write(dev, B43_PHY_CRSTHRES2_R1, 0x0070);
+		b43_phy_write(dev, B43_PHY_CRSTHRES1, 0x0098);
+		b43_phy_write(dev, B43_PHY_CRSTHRES2, 0x0070);
 		b43_phy_write(dev, B43_PHY_OFDM(0xC9), 0x0080);
 		b43_phy_write(dev, B43_PHY_ANTDWELL,
 				  b43_phy_read(dev, B43_PHY_ANTDWELL)
@@ -441,7 +448,7 @@ static void b43_wa_altagc(struct b43_wld
 		}
 	}
 	b43_phy_write(dev, B43_PHY_DIVSRCHIDX,
-		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x7F7F) | 0x7874);
+		(b43_phy_read(dev, B43_PHY_DIVSRCHIDX) & 0x8080) | 0x7874);
 	b43_phy_write(dev, B43_PHY_OFDM(0x8E), 0x1C00);
 	if (phy->rev == 1) {
 		b43_phy_write(dev, B43_PHY_DIVP1P2GAIN,
@@ -466,6 +473,7 @@ static void b43_wa_altagc(struct b43_wld
 		b43_phy_write(dev, B43_PHY_OFDM(0x26),
 			b43_phy_read(dev, B43_PHY_OFDM(0x26)) & ~0x1000);
 	}
+	b43_phy_read(dev, B43_PHY_VERSION_OFDM); /* Dummy read */
 }
 
 static void b43_wa_tr_ltov(struct b43_wldev *dev) /* TR Lookup Table Original Values */
Index: wireless-2.6/drivers/net/wireless/b43/phy.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/phy.h	2007-12-11 01:08:40.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/phy.h	2007-12-11 14:07:59.000000000 +0100
@@ -25,7 +25,7 @@ struct b43_phy;
 #define  B43_PHY_BBANDCFG_RXANT		0x180	/* RX Antenna selection */
 #define  B43_PHY_BBANDCFG_RXANT_SHIFT	7
 #define B43_PHY_PWRDOWN			B43_PHY_OFDM(0x03)	/* Powerdown */
-#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 */
+#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0x06)	/* CRS Threshold 1 (phy.rev 1 only) */
 #define B43_PHY_LNAHPFCTL		B43_PHY_OFDM(0x1C)	/* LNA/HPF control */
 #define B43_PHY_LPFGAINCTL		B43_PHY_OFDM(0x20)	/* LPF Gain control */
 #define B43_PHY_ADIVRELATED		B43_PHY_OFDM(0x27)	/* FIXME rename */
@@ -69,8 +69,8 @@ struct b43_phy;
 #define B43_PHY_DIVP1P2GAIN		B43_PHY_OFDM(0xAB)
 #define B43_PHY_DIVSRCHGAINBACK		B43_PHY_OFDM(0xAD)	/* Divider search gain back */
 #define B43_PHY_DIVSRCHGAINCHNG		B43_PHY_OFDM(0xAE)	/* Divider search gain change */
-#define B43_PHY_CRSTHRES1_R1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (rev 1 only) */
-#define B43_PHY_CRSTHRES2_R1		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (rev 1 only) */
+#define B43_PHY_CRSTHRES1		B43_PHY_OFDM(0xC0)	/* CRS Threshold 1 (phy.rev >= 2 only) */
+#define B43_PHY_CRSTHRES2		B43_PHY_OFDM(0xC1)	/* CRS Threshold 2 (phy.rev >= 2 only) */
 #define B43_PHY_TSSIP_LTBASE		B43_PHY_OFDM(0x380)	/* TSSI power lookup table base */
 #define B43_PHY_DC_LTBASE		B43_PHY_OFDM(0x3A0)	/* DC lookup table base */
 #define B43_PHY_GAIN_LTBASE		B43_PHY_OFDM(0x3C0)	/* Gain lookup table base */
Index: wireless-2.6/drivers/net/wireless/b43/tables.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:39.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/tables.c	2007-12-11 12:57:40.000000000 +0100
@@ -403,7 +403,7 @@ void b43_ofdmtab_write16(struct b43_wlde
 
 	addr = table + offset;
 	if ((phy->ofdmtab_addr_direction != B43_OFDMTAB_DIRECTION_WRITE) ||
-	    (addr -1 != phy->ofdmtab_addr)) {
+	    (addr - 1 != phy->ofdmtab_addr)) {
 		/* The hardware has a different address in memory. Update it. */
 		b43_phy_write(dev, B43_PHY_OTABLECTL, addr);
 		phy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_WRITE;

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Dec 12 23:15:24 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 12 Dec 2007 14:15:24 -0800
Subject: [PATCH RFT] b43: Fix rfkill radio LED
In-Reply-To: <200712121953.44939.mb@bu3sch.de>
References: <200712121953.44939.mb@bu3sch.de>
Message-ID: <47605D7C.3040302@lwfinger.net>

Michael Buesch wrote:
> I tried to fix the locking breakage and also cleaned up a few other things.
> Please test this Larry. If that works, I will immediately send it to John.

Michael,

With the rfkill_init at the beginning of b43_op_start(), the LED is on and stays on - it is no
longer toggled when the switch is moved. I still get the "Radio hardware status changed to
DISABLED/ENABLED" messages and soft_toggle() is called; however, there are no calls to
b43_led_turn_on() nor b43_led_turn_off associated with changing the switch. Somehow, the
initialization of the LEDs is not quite attached to the rfkill_init the way it was in my code.

Larry



From linux-ra at anet.at  Wed Dec 12 23:48:10 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Wed, 12 Dec 2007 23:48:10 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
Message-ID: <1942722038.20071212234810@anet.at>

Hi,

I have just updated the kernel of Fedora 8 running on my iBook G4 from
the latest official one (2.6.23.8-63) to the latest testing version
(2.6.23.9-90). This solved all the "ioctl[SIOCSIWAUTH]: Operation not
supported" errors which occured after wpa_supplicant issued the
"wpa_driver_wext_set_drop_unencrypted" command (or whatever wording
would be correct) using the b43 driver on a Broadcom 4306 WLAN MiniPCI
card. Good news.

However, the same error is still there after the
"wpa_driver_wext_set_countermeasures" command. Is this problem
expected to be solved, too?

Before starting wpa_supplicant:
[root at localhost ~]# dmesg | egrep 'b43|ssb|wlan0|wmaster0'
ssb: SPROM revision 1 detected.
ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
b43-phy0: Broadcom 4306 WLAN found
b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43-phy0 debug: Loading firmware version 351.126 (2006-07-29 05:54:02)
Registered led device: b43-phy0:tx
Registered led device: b43-phy0:rx
b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=42, tgt=62). Disabling TX power adjustment.
b43-phy0 debug: Chip initialized
b43-phy0 debug: 30-bit DMA initialized
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
ADDRCONF(NETDEV_UP): wlan0: link is not ready

Additional dmesg after starting wpa_supplicant:
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: RX authentication from 00:11:22:33:44:55 (alg=0 transaction=2 status=0)
wlan0: authenticated
wlan0: associate with AP 00:11:22:33:44:55
wlan0: RX AssocResp from 00:11:22:33:44:55 (capab=0x431 status=0 aid=1)
wlan0: associated
wlan0: switched to short barker preamble (BSSID=00:11:22:33:44:55)
ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
wlan0: disassociate(reason=3)

wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: authentication with AP 00:11:22:33:44:55 timed out
wlan0: no IPv6 routers present
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:22:33:44:55
wlan0: RX authentication from 00:11:22:33:44:55 (alg=0 transaction=2 status=0)
wlan0: authenticated
wlan0: associate with AP 00:11:22:33:44:55
wlan0: authentication frame received from 00:11:22:33:44:55, but not in authenticate state - ignored
wlan0: RX ReassocResp from 00:11:22:33:44:55 (capab=0x431 status=0 aid=1)
wlan0: associated
wlan0: switched to short barker preamble (BSSID=00:11:22:33:44:55)
wlan0: disassociate(reason=3)

What is reason 3 for disassociating?

Thanks,
rob.
--



From mb at bu3sch.de  Thu Dec 13 00:20:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 13 Dec 2007 00:20:30 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <1942722038.20071212234810@anet.at>
References: <1942722038.20071212234810@anet.at>
Message-ID: <200712130020.30700.mb@bu3sch.de>

On Wednesday 12 December 2007 23:48:10 Robert Allerstorfer wrote:
> Before starting wpa_supplicant:
> [root at localhost ~]# dmesg | egrep 'b43|ssb|wlan0|wmaster0'
> ssb: SPROM revision 1 detected.
> ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
> b43-phy0: Broadcom 4306 WLAN found
> b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
> b43-phy0 debug: Loading firmware version 351.126 (2006-07-29 05:54:02)
> Registered led device: b43-phy0:tx
> Registered led device: b43-phy0:rx
> b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=42, tgt=62). Disabling TX power adjustment.

Hm, that's probably a false positive.
Please locate the function b43_phy_init_pctl() inside of
drivers/net/wireless/b43/phy.c
Locate these lines inside of the function:
		if (B43_DEBUG) {
			/* Current-Idle-TSSI sanity check. */
			if (abs(phy->cur_idle_tssi - phy->tgt_idle_tssi) >= 20) {
				b43dbg(dev->wl,
				       "!WARNING! Idle-TSSI phy->cur_idle_tssi "
				       "measuring failed. (cur=%d, tgt=%d). Disabling TX power "
				       "adjustment.\n", phy->cur_idle_tssi,
				       phy->tgt_idle_tssi);
				phy->cur_idle_tssi = 0;
			}
		}

Please change the
		if (B43_DEBUG) {
into
		if (0) {

> wlan0: Initial auth_alg=0
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: Initial auth_alg=0
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: authentication with AP 00:11:22:33:44:55 timed out
> wlan0: no IPv6 routers present
> wlan0: Initial auth_alg=0
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: Initial auth_alg=0
> wlan0: authenticate with AP 00:11:22:33:44:55
> wlan0: RX authentication from 00:11:22:33:44:55 (alg=0 transaction=2 status=0)
> wlan0: authenticated
> wlan0: associate with AP 00:11:22:33:44:55
> wlan0: authentication frame received from 00:11:22:33:44:55, but not in authenticate state - ignored
> wlan0: RX ReassocResp from 00:11:22:33:44:55 (capab=0x431 status=0 aid=1)
> wlan0: associated
> wlan0: switched to short barker preamble (BSSID=00:11:22:33:44:55)
> wlan0: disassociate(reason=3)
> 
> What is reason 3 for disassociating?

	WLAN_REASON_DEAUTH_LEAVING = 3,

But I don't know what LEAVING means in this case.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Thu Dec 13 06:27:33 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 12 Dec 2007 21:27:33 -0800
Subject: [PATCH] b43: Fix rfkill radio LED
Message-ID: <4760c2c5.asZDAI81Pdjz49hX%Larry.Finger@lwfinger.net>

Michael,

I finally found the problem. It turned out that b43_rfkill_soft_toggle()
was returning -EBUSY even when there was no error. I also changed the
logic in the request_module("rfkill-input") section. Now, the code is
only compiled if rfkill-input is not built-in.

AFAIK, it is ready for John, and should be pushed into Linus's tree as
well.

Larry
---

From:	Larry Finger <Larry.Finger at lwfinger.net>

This fixes Bug #9414

Since addition of the rfkill callback, the LED associated with the off
switch on the radio has not worked for several reasons:

(1) Essential data in the rfkill structure were missing.
(2) The rfkill structure was initialized after the LED initialization.
(3) There was a minor memory leak if the radio LED structure was inited.

Once the above problems were fixed, additional difficulties were noted:

(4) The radio LED was in the wrong state at startup.
(5) The radio switch had to be manipulated twice for each state change.
(6) A circular mutex locking situation existed.
(7) If rfkill-input is built as a module, it is not automatically loaded.

This patch fixes all of the above.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/rfkill.c
+++ wireless-2.6/drivers/net/wireless/b43/rfkill.c
@@ -25,6 +25,8 @@
 #include "rfkill.h"
 #include "b43.h"
 
+#include <linux/kmod.h>
+
 
 /* Returns TRUE, if the radio is enabled in hardware. */
 static bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
@@ -50,7 +52,10 @@ static void b43_rfkill_poll(struct input
 	bool report_change = 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED)) {
+		mutex_unlock(&wl->mutex);
+		return;
+	}
 	enabled = b43_is_hw_radio_enabled(dev);
 	if (unlikely(enabled != dev->radio_hw_enable)) {
 		dev->radio_hw_enable = enabled;
@@ -60,8 +65,12 @@ static void b43_rfkill_poll(struct input
 	}
 	mutex_unlock(&wl->mutex);
 
-	if (unlikely(report_change))
-		input_report_key(poll_dev->input, KEY_WLAN, enabled);
+	/* send the radio switch event to the system - note both a key press
+	 * and a release are required */
+	if (unlikely(report_change)) {
+		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 /* Called when the RFKILL toggled in software. */
@@ -69,13 +78,15 @@ static int b43_rfkill_soft_toggle(void *
 {
 	struct b43_wldev *dev = data;
 	struct b43_wl *wl = dev->wl;
-	int err = 0;
+	int err = -EBUSY;
 
 	if (!wl->rfkill.registered)
 		return 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (b43_status(dev) < B43_STAT_INITIALIZED)
+		goto out_unlock;
+	err = 0;
 	switch (state) {
 	case RFKILL_STATE_ON:
 		if (!dev->radio_hw_enable) {
@@ -133,9 +144,25 @@ void b43_rfkill_init(struct b43_wldev *d
 	rfk->poll_dev->poll = b43_rfkill_poll;
 	rfk->poll_dev->poll_interval = 1000; /* msecs */
 
+	rfk->poll_dev->input->name = rfk->name;
+	rfk->poll_dev->input->id.bustype = BUS_HOST;
+	rfk->poll_dev->input->id.vendor = dev->dev->bus->boardinfo.vendor;
+	rfk->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rfk->poll_dev->input->keybit);
+
 	err = rfkill_register(rfk->rfkill);
 	if (err)
 		goto err_free_polldev;
+
+#ifndef CONFIG_RFKILL_INPUT
+	/* B43 RF-kill isn't useful without the rfkill-input subsystem.
+	 * Try to load the module. */
+	err = request_module("rfkill-input");
+	if (err)
+		b43warn(wl, "Failed to load the rfkill-input module. "
+			"The built-in radio LED will not work.\n");
+#endif /* CONFIG_RFKILL_INPUT */
+
 	err = input_register_polled_device(rfk->poll_dev);
 	if (err)
 		goto err_unreg_rfk;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c
+++ wireless-2.6/drivers/net/wireless/b43/main.c
@@ -2165,7 +2165,6 @@ static void b43_mgmtframe_txantenna(stru
 static void b43_chip_exit(struct b43_wldev *dev)
 {
 	b43_radio_turn_off(dev, 1);
-	b43_leds_exit(dev);
 	b43_gpio_cleanup(dev);
 	/* firmware is released later */
 }
@@ -2193,11 +2192,10 @@ static int b43_chip_init(struct b43_wlde
 	err = b43_gpio_init(dev);
 	if (err)
 		goto out;	/* firmware is released later */
-	b43_leds_init(dev);
 
 	err = b43_upload_initvals(dev);
 	if (err)
-		goto err_leds_exit;
+		goto err_gpio_clean;
 	b43_radio_turn_on(dev);
 
 	b43_write16(dev, 0x03E6, 0x0000);
@@ -2273,8 +2271,7 @@ out:
 
 err_radio_off:
 	b43_radio_turn_off(dev, 1);
-err_leds_exit:
-	b43_leds_exit(dev);
+err_gpio_clean:
 	b43_gpio_cleanup(dev);
 	return err;
 }
@@ -3301,10 +3298,7 @@ static void b43_wireless_core_exit(struc
 		return;
 	b43_set_status(dev, B43_STAT_UNINIT);
 
-	mutex_unlock(&dev->wl->mutex);
-	b43_rfkill_exit(dev);
-	mutex_lock(&dev->wl->mutex);
-
+	b43_leds_exit(dev);
 	b43_rng_exit(dev->wl);
 	b43_pio_free(dev);
 	b43_dma_free(dev);
@@ -3426,12 +3420,12 @@ static int b43_wireless_core_init(struct
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	b43_rfkill_init(dev);
 	b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-      out:
+	b43_leds_init(dev);
+out:
 	return err;
 
       err_chip_exit:
@@ -3520,6 +3514,10 @@ static int b43_op_start(struct ieee80211
 	int did_init = 0;
 	int err = 0;
 
+	/* First register RFkill.
+	 * LEDs that are registered later depend on it. */
+	b43_rfkill_init(dev);
+
 	mutex_lock(&wl->mutex);
 
 	if (b43_status(dev) < B43_STAT_INITIALIZED) {
@@ -3549,6 +3547,8 @@ static void b43_op_stop(struct ieee80211
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
 
+	b43_rfkill_exit(dev);
+
 	mutex_lock(&wl->mutex);
 	if (b43_status(dev) >= B43_STAT_STARTED)
 		b43_wireless_core_stop(dev);
Index: wireless-2.6/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/leds.c
+++ wireless-2.6/drivers/net/wireless/b43/leds.c
@@ -163,6 +163,9 @@ static void b43_map_led(struct b43_wldev
 		b43_register_led(dev, &dev->led_radio, name,
 				 b43_rfkill_led_name(dev),
 				 led_index, activelow);
+		/* Sync the RF-kill LED state with the switch state. */
+		if (dev->radio_hw_enable)
+			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
@@ -232,4 +235,5 @@ void b43_leds_exit(struct b43_wldev *dev
 	b43_unregister_led(&dev->led_tx);
 	b43_unregister_led(&dev->led_rx);
 	b43_unregister_led(&dev->led_assoc);
+	b43_unregister_led(&dev->led_radio);
 }


From Larry.Finger at lwfinger.net  Thu Dec 13 06:32:11 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 12 Dec 2007 21:32:11 -0800
Subject: [PATCH] b43: Fix rfkill radio LED
Message-ID: <4760c3db.qCB1sy2b6EqODHqS%Larry.Finger@lwfinger.net>

Michael,

I finally found the problem. It turned out that b43_rfkill_soft_toggle()
was returning -EBUSY even when there was no error. I also changed the
logic in the request_module("rfkill-input") section. Now, the code is
only compiled if rfkill-input is not built-in.

AFAIK, it is ready for John, and should be pushed into Linus's tree as
well.

Larry
---

From:	Larry Finger <Larry.Finger at lwfinger.net>

This fixes Bug #9414

Since addition of the rfkill callback, the LED associated with the off
switch on the radio has not worked for several reasons:

(1) Essential data in the rfkill structure were missing.
(2) The rfkill structure was initialized after the LED initialization.
(3) There was a minor memory leak if the radio LED structure was inited.

Once the above problems were fixed, additional difficulties were noted:

(4) The radio LED was in the wrong state at startup.
(5) The radio switch had to be manipulated twice for each state change.
(6) A circular mutex locking situation existed.
(7) If rfkill-input is built as a module, it is not automatically loaded.

This patch fixes all of the above.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/rfkill.c
+++ wireless-2.6/drivers/net/wireless/b43/rfkill.c
@@ -25,6 +25,8 @@
 #include "rfkill.h"
 #include "b43.h"
 
+#include <linux/kmod.h>
+
 
 /* Returns TRUE, if the radio is enabled in hardware. */
 static bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
@@ -50,7 +52,10 @@ static void b43_rfkill_poll(struct input
 	bool report_change = 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED)) {
+		mutex_unlock(&wl->mutex);
+		return;
+	}
 	enabled = b43_is_hw_radio_enabled(dev);
 	if (unlikely(enabled != dev->radio_hw_enable)) {
 		dev->radio_hw_enable = enabled;
@@ -60,8 +65,12 @@ static void b43_rfkill_poll(struct input
 	}
 	mutex_unlock(&wl->mutex);
 
-	if (unlikely(report_change))
-		input_report_key(poll_dev->input, KEY_WLAN, enabled);
+	/* send the radio switch event to the system - note both a key press
+	 * and a release are required */
+	if (unlikely(report_change)) {
+		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 /* Called when the RFKILL toggled in software. */
@@ -69,13 +78,15 @@ static int b43_rfkill_soft_toggle(void *
 {
 	struct b43_wldev *dev = data;
 	struct b43_wl *wl = dev->wl;
-	int err = 0;
+	int err = -EBUSY;
 
 	if (!wl->rfkill.registered)
 		return 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (b43_status(dev) < B43_STAT_INITIALIZED)
+		goto out_unlock;
+	err = 0;
 	switch (state) {
 	case RFKILL_STATE_ON:
 		if (!dev->radio_hw_enable) {
@@ -133,9 +144,25 @@ void b43_rfkill_init(struct b43_wldev *d
 	rfk->poll_dev->poll = b43_rfkill_poll;
 	rfk->poll_dev->poll_interval = 1000; /* msecs */
 
+	rfk->poll_dev->input->name = rfk->name;
+	rfk->poll_dev->input->id.bustype = BUS_HOST;
+	rfk->poll_dev->input->id.vendor = dev->dev->bus->boardinfo.vendor;
+	rfk->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rfk->poll_dev->input->keybit);
+
 	err = rfkill_register(rfk->rfkill);
 	if (err)
 		goto err_free_polldev;
+
+#ifndef CONFIG_RFKILL_INPUT
+	/* B43 RF-kill isn't useful without the rfkill-input subsystem.
+	 * Try to load the module. */
+	err = request_module("rfkill-input");
+	if (err)
+		b43warn(wl, "Failed to load the rfkill-input module. "
+			"The built-in radio LED will not work.\n");
+#endif /* CONFIG_RFKILL_INPUT */
+
 	err = input_register_polled_device(rfk->poll_dev);
 	if (err)
 		goto err_unreg_rfk;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c
+++ wireless-2.6/drivers/net/wireless/b43/main.c
@@ -2165,7 +2165,6 @@ static void b43_mgmtframe_txantenna(stru
 static void b43_chip_exit(struct b43_wldev *dev)
 {
 	b43_radio_turn_off(dev, 1);
-	b43_leds_exit(dev);
 	b43_gpio_cleanup(dev);
 	/* firmware is released later */
 }
@@ -2193,11 +2192,10 @@ static int b43_chip_init(struct b43_wlde
 	err = b43_gpio_init(dev);
 	if (err)
 		goto out;	/* firmware is released later */
-	b43_leds_init(dev);
 
 	err = b43_upload_initvals(dev);
 	if (err)
-		goto err_leds_exit;
+		goto err_gpio_clean;
 	b43_radio_turn_on(dev);
 
 	b43_write16(dev, 0x03E6, 0x0000);
@@ -2273,8 +2271,7 @@ out:
 
 err_radio_off:
 	b43_radio_turn_off(dev, 1);
-err_leds_exit:
-	b43_leds_exit(dev);
+err_gpio_clean:
 	b43_gpio_cleanup(dev);
 	return err;
 }
@@ -3301,10 +3298,7 @@ static void b43_wireless_core_exit(struc
 		return;
 	b43_set_status(dev, B43_STAT_UNINIT);
 
-	mutex_unlock(&dev->wl->mutex);
-	b43_rfkill_exit(dev);
-	mutex_lock(&dev->wl->mutex);
-
+	b43_leds_exit(dev);
 	b43_rng_exit(dev->wl);
 	b43_pio_free(dev);
 	b43_dma_free(dev);
@@ -3426,12 +3420,12 @@ static int b43_wireless_core_init(struct
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	b43_rfkill_init(dev);
 	b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-      out:
+	b43_leds_init(dev);
+out:
 	return err;
 
       err_chip_exit:
@@ -3520,6 +3514,10 @@ static int b43_op_start(struct ieee80211
 	int did_init = 0;
 	int err = 0;
 
+	/* First register RFkill.
+	 * LEDs that are registered later depend on it. */
+	b43_rfkill_init(dev);
+
 	mutex_lock(&wl->mutex);
 
 	if (b43_status(dev) < B43_STAT_INITIALIZED) {
@@ -3549,6 +3547,8 @@ static void b43_op_stop(struct ieee80211
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
 
+	b43_rfkill_exit(dev);
+
 	mutex_lock(&wl->mutex);
 	if (b43_status(dev) >= B43_STAT_STARTED)
 		b43_wireless_core_stop(dev);
Index: wireless-2.6/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/leds.c
+++ wireless-2.6/drivers/net/wireless/b43/leds.c
@@ -163,6 +163,9 @@ static void b43_map_led(struct b43_wldev
 		b43_register_led(dev, &dev->led_radio, name,
 				 b43_rfkill_led_name(dev),
 				 led_index, activelow);
+		/* Sync the RF-kill LED state with the switch state. */
+		if (dev->radio_hw_enable)
+			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
@@ -232,4 +235,5 @@ void b43_leds_exit(struct b43_wldev *dev
 	b43_unregister_led(&dev->led_tx);
 	b43_unregister_led(&dev->led_rx);
 	b43_unregister_led(&dev->led_assoc);
+	b43_unregister_led(&dev->led_radio);
 }


From hs4233 at mail.mn-solutions.de  Thu Dec 13 09:27:43 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Thu, 13 Dec 2007 09:27:43 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712130020.30700.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>
Message-ID: <200712130927.43289.hs4233@mail.mn-solutions.de>

> > What is reason 3 for disassociating?
>
> 	WLAN_REASON_DEAUTH_LEAVING = 3,
>
> But I don't know what LEAVING means in this case.

If a client decides to roam, it can (not a must, after all the 
client can be in reception hole) send a de-auth mesage to the 
old AP.


From mb at bu3sch.de  Thu Dec 13 12:11:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 13 Dec 2007 12:11:47 +0100
Subject: [PATCH] b43: Fix rfkill radio LED
In-Reply-To: <4760c3db.qCB1sy2b6EqODHqS%Larry.Finger@lwfinger.net>
References: <4760c3db.qCB1sy2b6EqODHqS%Larry.Finger@lwfinger.net>
Message-ID: <200712131211.47867.mb@bu3sch.de>

On Thursday 13 December 2007 06:32:11 Larry Finger wrote:
> Michael,
> 
> I finally found the problem. It turned out that b43_rfkill_soft_toggle()
> was returning -EBUSY even when there was no error. I also changed the

Oh, damn. :)

> logic in the request_module("rfkill-input") section. Now, the code is

Ehm, no. Wait.
There was a
#ifdef CONFIG_RFKILL_INPUT_MODULE
That is only defined if rfkill-input is a module, right?

> only compiled if rfkill-input is not built-in.


-- 
Greetings Michael.


From linville at tuxdriver.com  Thu Dec 13 15:00:05 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 13 Dec 2007 09:00:05 -0500
Subject: My Laptop
In-Reply-To: <1197519178.17610.22.camel@vincent52.localdomain>
References: <475EFF79.5030405@bellsouth.net>
	<Pine.LNX.4.64.0712121357160.18810@fairfax.gathman.org>
	<47603BEB.8060302@lwfinger.net>
	<Pine.LNX.4.64.0712121654240.18810@fairfax.gathman.org>
	<1197519178.17610.22.camel@vincent52.localdomain>
Message-ID: <20071213140005.GB3083@tuxdriver.com>

On Wed, Dec 12, 2007 at 11:12:58PM -0500, Matthew Saltzman wrote:
> 
> On Wed, 2007-12-12 at 17:00 -0500, Stuart D. Gathman wrote:
> > On Wed, 12 Dec 2007, Larry Finger wrote:
> > 
> > > Stuart D. Gathman wrote:
> > >>      ...., but I got kernel exceptions, DMA exception, and eventually the
> > >>  system froze.  I would say it is not ready for prime time.  (I will be
> > >>  looking for where to helpfully report the exceptions for those trying to
> > >>  debug the thing.  I suspect donations of relevant hardware are most
> > >>  useful.) No problems with the zd1211 driver and USB key.
> > >
> > > I'm sorry that you had troubles with the BCM94311MCG in your laptop, but I 
> > > think most of your problems are fixed in driver b43 in any of the 2.6.24-rcX 
> > > kernels. In any case, the place to report such problems is 
> > > bcm43xx-dev at lists.berlios.de.
> > 
> > FC8 has 2.6.23.  I suppose FC9 might do the trick.  Or maybe they'll backport
> > some fixes.
> 
> Fedora generally releases kernel updates fairly quickly to track
> upstream (though they have patches to port forward before they are
> ready).  There's no 2.6.24 in updates-testing yet, however.
> kernel-2.6.23.9-85 is there.

Are you looking for wireless patches?  At this moment there are
no wireless bits in wireless-2.6 that are not in the latest Fedora
kernels in Koji.  The last one I built is here:

	http://koji.fedoraproject.org/koji/buildinfo?buildID=27585

Hth!

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Thu Dec 13 18:24:34 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 13 Dec 2007 09:24:34 -0800
Subject: [PATCH] b43: Fix rfkill radio LED
In-Reply-To: <200712131211.47867.mb@bu3sch.de>
References: <4760c3db.qCB1sy2b6EqODHqS%Larry.Finger@lwfinger.net>
	<200712131211.47867.mb@bu3sch.de>
Message-ID: <47616AD2.8070108@lwfinger.net>

Michael Buesch wrote:
> On Thursday 13 December 2007 06:32:11 Larry Finger wrote:
>> logic in the request_module("rfkill-input") section. Now, the code is
> 
> Ehm, no. Wait.
> There was a
> #ifdef CONFIG_RFKILL_INPUT_MODULE
> That is only defined if rfkill-input is a module, right?

Correct and CONFIG_RFKILL_INPUT is defined if the code is built_in. The "most correct" logic for 
this section would be:

if (built_in)
	all is OK.

if (module)
	load it.

If (!built_in && !module)
	warn that the LED will not work.

In the version I sent you, the logic is:

if (!built_in) {
	load module
	if (err)
		print message that it will not work
}

To my thinking, the second version is close enough. the only extra step it does is to try to load 
the module even when it has not been built, but it does end up with the warning being printed.

Larry


From mb at bu3sch.de  Thu Dec 13 18:58:46 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 13 Dec 2007 18:58:46 +0100
Subject: [PATCH] b43: Fix rfkill radio LED
In-Reply-To: <47616AD2.8070108@lwfinger.net>
References: <4760c3db.qCB1sy2b6EqODHqS%Larry.Finger@lwfinger.net>
	<200712131211.47867.mb@bu3sch.de> <47616AD2.8070108@lwfinger.net>
Message-ID: <200712131858.46552.mb@bu3sch.de>

On Thursday 13 December 2007 18:24:34 Larry Finger wrote:
> If (!built_in && !module)
> 	warn that the LED will not work.

This can not happen. b43 rfkill support is disabled, as it doesn't
make any sense without rfkill-input.

> In the version I sent you, the logic is:
> 
> if (!built_in) {
> 	load module
> 	if (err)
> 		print message that it will not work
> }

which is fine.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 01:43:15 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 01:43:15 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712131445.39770.mb@bu3sch.de>
	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
Message-ID: <200712140143.16451.mb@bu3sch.de>

On Friday 14 December 2007 01:05:00 Ray Lee wrote:
> Okay, I had to modprobe rfkill-input and rfkill by hand, didn't
> realize that. Hopefully that'll be automatic soon. Regardless, upon
> doing so, and loading ssb and b43, it sees my card, but is still not
> fully functional. iwconfig sees:
> 
> lo        no wireless extensions.
> eth0      no wireless extensions.
> tun0      no wireless extensions.
> eth1      no wireless extensions.
> wlan0_rename  IEEE 802.11g  ESSID:""
>           Mode:Managed  Channel:0  Access Point: Not-Associated
>           Tx-Power=0 dBm
>           Retry min limit:7   RTS thr:off   Fragment thr=2346 B
>           Link Quality:0  Signal level:0  Noise level:0
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> 
> (eth0 is ethernet, eth1 doesn't exist -- usually it's the wireless.)
> 
> `ifconfig` doesn't see eth1 or wlan0_rename.
> 
> What else might I be doing wrong?

I don't know. Try ifconfig -a
Or tell udev to not crap up your device names.

> Regardless, perhaps scheduling 
> bcm43xx for removal in 2.6.26 is a bit premature.

Oh come on. b43 is more than a year old now. How long should we wait?
Two or three? Forever?

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Fri Dec 14 03:09:26 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 13 Dec 2007 18:09:26 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to	mutex
In-Reply-To: <200712140143.16451.mb@bu3sch.de>
References: <20071213003028.676998182@mvista.com>	<200712131445.39770.mb@bu3sch.de>	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
	<200712140143.16451.mb@bu3sch.de>
Message-ID: <4761E5D6.7040801@lwfinger.net>

Michael Buesch wrote:
> On Friday 14 December 2007 01:05:00 Ray Lee wrote:
>> Okay, I had to modprobe rfkill-input and rfkill by hand, didn't
>> realize that. Hopefully that'll be automatic soon. Regardless, upon
>> doing so, and loading ssb and b43, it sees my card, but is still not
>> fully functional. iwconfig sees:
>>
>> lo        no wireless extensions.
>> eth0      no wireless extensions.
>> tun0      no wireless extensions.
>> eth1      no wireless extensions.
>> wlan0_rename  IEEE 802.11g  ESSID:""
>>           Mode:Managed  Channel:0  Access Point: Not-Associated
>>           Tx-Power=0 dBm
>>           Retry min limit:7   RTS thr:off   Fragment thr=2346 B
>>           Link Quality:0  Signal level:0  Noise level:0
>>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>>
>> (eth0 is ethernet, eth1 doesn't exist -- usually it's the wireless.)
>>
>> `ifconfig` doesn't see eth1 or wlan0_rename.
>>
>> What else might I be doing wrong?

Your udev rules are screwed up. In /etc/udev/rules.d/70-persistent-net.rules, you should have a line 
that looks like

SUBSYSTEM=="net", DRIVERS=="?*", ATTR{address}=="00:1a:73:6b:28:5a", ATTR{type}=="1", NAME="eth1"

with the MAC address for your device. You probably have the ATTR{type}=="1" clause missing.

Larry


From mb at bu3sch.de  Fri Dec 14 11:45:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 11:45:11 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <1197593750.898.34.camel@brick>
References: <20071213003028.676998182@mvista.com>
	<200712140143.16451.mb@bu3sch.de> <1197593750.898.34.camel@brick>
Message-ID: <200712141145.12442.mb@bu3sch.de>

On Friday 14 December 2007 01:55:50 Harvey Harrison wrote:
> On Fri, 2007-12-14 at 01:43 +0100, Michael Buesch wrote:
> > Oh come on. b43 is more than a year old now. How long should we wait?
> > Two or three? Forever?
> > 
> 
> Any pointers to the advantages of b43?

http://www.linuxwireless.org/en/users/Drivers/b43

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 11:49:46 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 11:49:46 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712131712t6f30ab88g48cc1af27a7a6ce9@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712140143.16451.mb@bu3sch.de>
	<2c0942db0712131712t6f30ab88g48cc1af27a7a6ce9@mail.gmail.com>
Message-ID: <200712141149.46945.mb@bu3sch.de>

On Friday 14 December 2007 02:12:25 Ray Lee wrote:
> Digging a little farther into it, it looks like b43 is barfing partway
> through init as the firmware file it's looking for has changed names.
> Perhaps that's the issue. I'll take a longer look at this all
> tomorrow.

http://www.linuxwireless.org/en/users/Drivers/b43#firmwareinstallation

> Well, it only hit the main kernel October 10th. That means no final
> point release of the kernel.org kernel has even had it included! So
> testing-wise, you still haven't hit the hordes yet. Scheduling a
> removal of bcm43xx (as painful as that code is [*]), seems either
> premature or very optimistic. So, how about scheduling the removal
> once you get a feel for the bug reports that'll come in once 2.6.24 is
> released.

So you volunteer to maintain bcm43xx? Fine. Thanks a lot.

>    [*] Yeah, even as a user the code is painful. It *still* locks my
> keyboard if I happen to disable the wireless while it's scanning. The
> sooner bcm43xx is dead, the better. But b43 is quite obviously not a
> full replacement for everyone.

I'm pretty sure it is.
Please carefully read the instructions on
http://www.linuxwireless.org/en/users/Drivers/b43
especially for firmware installation.
It will work very well.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 12:39:51 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 12:39:51 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071214111534.GD23964@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<200712141149.46945.mb@bu3sch.de> <20071214111534.GD23964@elte.hu>
Message-ID: <200712141239.51809.mb@bu3sch.de>

On Friday 14 December 2007 12:15:34 Ingo Molnar wrote:
> > So you volunteer to maintain bcm43xx? Fine. Thanks a lot.
> 
> it's sad that you are trying to force testers to upgrade to your new 
> driver by threatening to unsupport the old driver.

I dropped maintainance for bcm43xx over a year ago.
So I am not going to catch it up again. b43 works fine.
I don't see a reason to support bcm43xx anymore.
Currently bcm43xx is orphaned, as Larry couldn't support it
anymore due to other issues.

> The testers who did  
> nothing but reported that the new driver did not work on their hardware.

Which testers?
Ray Lee didn't even install the firmware. So it can't work by definition.
That is not my fault.

> You can write new drivers but you must not break existing users. That's 
> true for every single piece of the kernel. It is _your_ responsibility 
> to get that rule right - and if it does not work out of box (no matter 
> whom to blame, udev or the driver) you dont get to remove the driver 
> from the upstream kernel.

Ok. So we have to live with an orphaned driver. I am fine with that, too.

> Yes, you can then "unsupport it" in spite and be a prick about it in 
> general but that will only talk of your own personal qualities and will 
> sharply reduce your credibility as a maintainer (and eventually hinder 
> your ability to introduce new code) - users will still have the code 
> available and will have a chance to fix the driver that happens to work. 
> (and perhaps another, capable, but friendler maintainer arises.) And 
> that old code will be a clot to drag around, hindering your 'new' 
> wireless code all along.

So new code is included in the Linux kernel based only on political
considerations instead on technical?
I'm not sure what's the matter. Show me _one_ person for whom
bcm43xx works and b43/legacy does not. And I will immediately stop
removal of that driver and fix b43.

> I really dont know why it's so hard to understand: new is totally 
> useless if it does not work for old setups 100% of the time. And people 
> _WANT_ to use your new code, so it's not like you have to pull their 
> hairs to get your stuff tested. And YOU wrote the old code in large 
> part:
> 
>  $ git-authors drivers/net/wireless/bcm43xx/ | tail -10
>       2  Sam Ravnborg
>       3  David Howells
>       3  David Woodhouse
>       3  Joe Perches
>       4  Jeff Garzik
>       5  Daniel Drake
>       6  Stefano Brivio
>       9  John W. Linville
>      48  Larry Finger
>      80  Michael Buesch
> 
> so it's not like "someone else messed it up" and that you would be 
> incapable of getting it all work nicely and make the migration of users 
> smoother. And if udev is a hindrance to you, reduce your driver's 
> dependence on udev breakages.

I'm not sure what you are talking about.
If udev renames the device to something stupid (like wlan0_rename)
that is not my fault. That is the fault of a big Linux Distribution
messing udev config up.

Let's summarise it:
I don't know a single user for whom bcm43xx works but b43 does not.
In most cases b43 does work a _lot_ better than bcm43xx.
If you show me one person for whom bcm43xx works but b43 does not I
will stop removal of the driver.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 13:31:58 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 13:31:58 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071214121617.GE23964@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<200712141239.51809.mb@bu3sch.de> <20071214121617.GE23964@elte.hu>
Message-ID: <200712141331.59410.mb@bu3sch.de>

On Friday 14 December 2007 13:16:17 Ingo Molnar wrote:
> 
> * Michael Buesch <mb at bu3sch.de> wrote:
> 
> > > The testers who did nothing but reported that the new driver did not 
> > > work on their hardware.
> > 
> > Which testers?
> 
> right in this thread Ray Lee is reporting:
> 
> | | Digging a little farther into it, it looks like b43 is barfing 
> | | partway through init as the firmware file it's looking for has 
> | | changed names. Perhaps that's the issue. I'll take a longer look at 
> | | this all tomorrow.
> 
> you are really in denial of reality. Just re-read this thread. Upon 
> re-reading this thread, try to imagine that you are in place of Ray Lee 
> (might be hard), that you had a working bcm43xx driver and that now you 
> try to get b43 to work. You are not a kernel hacker who knows this 
> driver, just an advanced user who'd like to give you some more feedback 
> about your shiny new code.

This user did get the following messages in dmesg:

b43err(dev->wl, "Firmware file \"%s\" not found "
       "or load failed.\n", path);
b43err(wl, "You must go to "
       "http://linuxwireless.org/en/users/Drivers/b43#devicefirmware "
       "and download the correct firmware (version 4).\n");

I'm not sure how I can improve that even more. There is a full URL
describing how to get the device workin in _full_ detail.

Yes. I know people don't read messages and immediately report
a "regression". But that is not my fault. Not in this case.

It's not rocket science to get b43 working. The way firmware is
installed did not change at all. (b43-fwcutter is still used).
So it's the very same procedure that user X already successfully
did when installing bcm43xx.

What should I do to improve the situation? Writing the message
all in uppercase? Maybe. I can do a patch, if people finally start reading
it then.

> > Ray Lee didn't even install the firmware. So it can't work by 
> > definition. That is not my fault.
> 
> which questions your basic skills of reading or of empathy. Why is a 
> reasonable firmware blob not included in the kernel?

Because it's closed source.

> If not, why doesnt  
> the b43 driver warn in the dmesg (where Ray Lee did look) that no 
> firmware was loaded? These are basic driver usability issues, and of 
> course they are your fault too.

This is a proven false statement.

> > So new code is included in the Linux kernel based only on political 
> > considerations instead on technical?
> 
> huh? This is nothing "political". It's the basic rule of maintenance: 
> try to be a good maintainer, involve people, forgive their newbie 
> mistakes. It's like the driving principle of Intenret protocols: be 
> conservative at what you xmit and be liberal at what you rx.

That's not what my problem is here.
The problem is that every now and then people come up and say that
b43 is crap and doesn't work for them while bcm43xx does. In _every_
single case it was the user's fault. Mostly not reading the kernel
message I quoted above.

So I'm not sure what I have to do now? Defer removal of an obsolete
and unstable piece of junk because some people don't read kernel
logs in case something doesn't work?

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 13:59:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 13:59:11 +0100
Subject: [PATCH final] b43: Fix rfkill radio LED
Message-ID: <200712141359.12198.mb@bu3sch.de>

From:	Larry Finger <Larry.Finger at lwfinger.net>

This fixes Bug #9414

Since addition of the rfkill callback, the LED associated with the off
switch on the radio has not worked for several reasons:

(1) Essential data in the rfkill structure were missing.
(2) The rfkill structure was initialized after the LED initialization.
(3) There was a minor memory leak if the radio LED structure was inited.

Once the above problems were fixed, additional difficulties were noted:

(4) The radio LED was in the wrong state at startup.
(5) The radio switch had to be manipulated twice for each state change.
(6) A circular mutex locking situation existed.
(7) If rfkill-input is built as a module, it is not automatically loaded.

This patch fixes all of the above.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/rfkill.c	2007-12-14 13:47:36.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/rfkill.c	2007-12-14 13:50:37.000000000 +0100
@@ -25,6 +25,8 @@
 #include "rfkill.h"
 #include "b43.h"
 
+#include <linux/kmod.h>
+
 
 /* Returns TRUE, if the radio is enabled in hardware. */
 static bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
@@ -50,7 +52,10 @@ static void b43_rfkill_poll(struct input
 	bool report_change = 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED)) {
+		mutex_unlock(&wl->mutex);
+		return;
+	}
 	enabled = b43_is_hw_radio_enabled(dev);
 	if (unlikely(enabled != dev->radio_hw_enable)) {
 		dev->radio_hw_enable = enabled;
@@ -60,8 +65,12 @@ static void b43_rfkill_poll(struct input
 	}
 	mutex_unlock(&wl->mutex);
 
-	if (unlikely(report_change))
-		input_report_key(poll_dev->input, KEY_WLAN, enabled);
+	/* send the radio switch event to the system - note both a key press
+	 * and a release are required */
+	if (unlikely(report_change)) {
+		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 /* Called when the RFKILL toggled in software. */
@@ -69,13 +78,15 @@ static int b43_rfkill_soft_toggle(void *
 {
 	struct b43_wldev *dev = data;
 	struct b43_wl *wl = dev->wl;
-	int err = 0;
+	int err = -EBUSY;
 
 	if (!wl->rfkill.registered)
 		return 0;
 
 	mutex_lock(&wl->mutex);
-	B43_WARN_ON(b43_status(dev) < B43_STAT_INITIALIZED);
+	if (b43_status(dev) < B43_STAT_INITIALIZED)
+		goto out_unlock;
+	err = 0;
 	switch (state) {
 	case RFKILL_STATE_ON:
 		if (!dev->radio_hw_enable) {
@@ -133,9 +144,25 @@ void b43_rfkill_init(struct b43_wldev *d
 	rfk->poll_dev->poll = b43_rfkill_poll;
 	rfk->poll_dev->poll_interval = 1000; /* msecs */
 
+	rfk->poll_dev->input->name = rfk->name;
+	rfk->poll_dev->input->id.bustype = BUS_HOST;
+	rfk->poll_dev->input->id.vendor = dev->dev->bus->boardinfo.vendor;
+	rfk->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rfk->poll_dev->input->keybit);
+
 	err = rfkill_register(rfk->rfkill);
 	if (err)
 		goto err_free_polldev;
+
+#ifdef CONFIG_RFKILL_INPUT_MODULE
+	/* B43 RF-kill isn't useful without the rfkill-input subsystem.
+	 * Try to load the module. */
+	err = request_module("rfkill-input");
+	if (err)
+		b43warn(wl, "Failed to load the rfkill-input module. "
+			"The built-in radio LED will not work.\n");
+#endif /* CONFIG_RFKILL_INPUT */
+
 	err = input_register_polled_device(rfk->poll_dev);
 	if (err)
 		goto err_unreg_rfk;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-14 13:47:36.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-14 13:47:39.000000000 +0100
@@ -2165,7 +2165,6 @@ static void b43_mgmtframe_txantenna(stru
 static void b43_chip_exit(struct b43_wldev *dev)
 {
 	b43_radio_turn_off(dev, 1);
-	b43_leds_exit(dev);
 	b43_gpio_cleanup(dev);
 	/* firmware is released later */
 }
@@ -2193,11 +2192,10 @@ static int b43_chip_init(struct b43_wlde
 	err = b43_gpio_init(dev);
 	if (err)
 		goto out;	/* firmware is released later */
-	b43_leds_init(dev);
 
 	err = b43_upload_initvals(dev);
 	if (err)
-		goto err_leds_exit;
+		goto err_gpio_clean;
 	b43_radio_turn_on(dev);
 
 	b43_write16(dev, 0x03E6, 0x0000);
@@ -2273,8 +2271,7 @@ out:
 
 err_radio_off:
 	b43_radio_turn_off(dev, 1);
-err_leds_exit:
-	b43_leds_exit(dev);
+err_gpio_clean:
 	b43_gpio_cleanup(dev);
 	return err;
 }
@@ -3301,10 +3298,7 @@ static void b43_wireless_core_exit(struc
 		return;
 	b43_set_status(dev, B43_STAT_UNINIT);
 
-	mutex_unlock(&dev->wl->mutex);
-	b43_rfkill_exit(dev);
-	mutex_lock(&dev->wl->mutex);
-
+	b43_leds_exit(dev);
 	b43_rng_exit(dev->wl);
 	b43_pio_free(dev);
 	b43_dma_free(dev);
@@ -3426,12 +3420,12 @@ static int b43_wireless_core_init(struct
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	b43_rfkill_init(dev);
 	b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-      out:
+	b43_leds_init(dev);
+out:
 	return err;
 
       err_chip_exit:
@@ -3520,6 +3514,10 @@ static int b43_op_start(struct ieee80211
 	int did_init = 0;
 	int err = 0;
 
+	/* First register RFkill.
+	 * LEDs that are registered later depend on it. */
+	b43_rfkill_init(dev);
+
 	mutex_lock(&wl->mutex);
 
 	if (b43_status(dev) < B43_STAT_INITIALIZED) {
@@ -3549,6 +3547,8 @@ static void b43_op_stop(struct ieee80211
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
 
+	b43_rfkill_exit(dev);
+
 	mutex_lock(&wl->mutex);
 	if (b43_status(dev) >= B43_STAT_STARTED)
 		b43_wireless_core_stop(dev);
Index: wireless-2.6/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/leds.c	2007-12-14 13:47:36.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/leds.c	2007-12-14 13:47:39.000000000 +0100
@@ -163,6 +163,9 @@ static void b43_map_led(struct b43_wldev
 		b43_register_led(dev, &dev->led_radio, name,
 				 b43_rfkill_led_name(dev),
 				 led_index, activelow);
+		/* Sync the RF-kill LED state with the switch state. */
+		if (dev->radio_hw_enable)
+			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
@@ -232,4 +235,5 @@ void b43_leds_exit(struct b43_wldev *dev
 	b43_unregister_led(&dev->led_tx);
 	b43_unregister_led(&dev->led_rx);
 	b43_unregister_led(&dev->led_assoc);
+	b43_unregister_led(&dev->led_radio);
 }


From mb at bu3sch.de  Fri Dec 14 14:04:23 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 14:04:23 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <1197637194.7549.10.camel@odie.local>
References: <20071213003028.676998182@mvista.com>
	<200712141331.59410.mb@bu3sch.de>
	<1197637194.7549.10.camel@odie.local>
Message-ID: <200712141404.24275.mb@bu3sch.de>

On Friday 14 December 2007 13:59:54 Simon Holm Th?gersen wrote:
> > This user did get the following messages in dmesg:
> > 
> > b43err(dev->wl, "Firmware file \"%s\" not found "
> >        "or load failed.\n", path);
> 
> So the question seems to be why b43 needs version 4, when b43legacy and
> bcm43x uses version 3?

That's really a question, right?

Well. linux-2.4 doesn't work with the linux-2.6 modutils.
Windows Vista doesn't work with Windows 98 device drivers.
That leads to this assumption:
b43 doesn't work with version 3 firmware but needs version 4.

Newer drivers supporting newer hardware need newer firmware.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 14:08:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 14:08:59 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071214125327.GA10995@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<200712141331.59410.mb@bu3sch.de> <20071214125327.GA10995@elte.hu>
Message-ID: <200712141409.00311.mb@bu3sch.de>

On Friday 14 December 2007 13:53:27 Ingo Molnar wrote:
> 
> * Michael Buesch <mb at bu3sch.de> wrote:
> 
> > This user did get the following messages in dmesg:
> > 
> > b43err(dev->wl, "Firmware file \"%s\" not found "
> >        "or load failed.\n", path);
> > b43err(wl, "You must go to "
> >        "http://linuxwireless.org/en/users/Drivers/b43#devicefirmware "
> >        "and download the correct firmware (version 4).\n");
> > 
> > I'm not sure how I can improve that even more. There is a full URL 
> > describing how to get the device workin in _full_ detail.
> 
> well i dont have this hardware, but the following description in this 
> thread seems to contradict that:
> 
> || Well, doing an `rmmod bcm43xx ; modprobe ssb b43` gives me nothing in 
> || dmesg other than lines related to the bcm43xx driver. 
> || iwconfig/ifconfig do not see the interface either.

Let's quote another of Ray's statements:
"And ifconfig -a does indeed show it, sorry about that."

So if he did then try to initialize that device, that clearly
_did_ show up in a standard place where network devices are
expected to show up, he did see the message I quoted.
Well, what if he did not try to initialize the device by doing
an "ifconfig wlanX up"? That can hardly be my fault, right?

-- 
Greetings Michael.


From linville at tuxdriver.com  Fri Dec 14 15:14:46 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 14 Dec 2007 09:14:46 -0500
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <20071214105624.GC23964@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<200712131445.39770.mb@bu3sch.de>
	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
	<200712140143.16451.mb@bu3sch.de> <20071214105624.GC23964@elte.hu>
Message-ID: <20071214141446.GA3096@tuxdriver.com>

On Fri, Dec 14, 2007 at 11:56:24AM +0100, Ingo Molnar wrote:
> 
> * Michael Buesch <mb at bu3sch.de> wrote:

> > Oh come on. b43 is more than a year old now. How long should we wait? 
> > Two or three? Forever?
> 
> possibly forever, if you dont get obvious regressions like "my wlan does 
> not work" (reported in this very thread), resolved. Pushing the blame to 
> udev (in a rather unfriendly way) wont give users a working system and 
> wont get you many new testers for the new driver either.

It is true that Michael can be a little unpleasant at times.
The colloquialism that comes to mind is that he "does not suffer fools
lightly".  Hopefully he will take your counseling to heart and learn
to be a bit more moderate in his tone.  FWIW, he is still young. :-)

That said, it is also true that the b43[legacy] driver[s] do a more
than adequate job of replacing the old bcm43xx driver provided that
one (re-)installs the proper firmware.  And I know of no other driver
that goes to more trouble to tell you how to get the proper firmware
installed than this one.

The bcm43xx driver will be added to the feature removal schedule
in 2.6.25.  Proper judgment will be used in deciding the actual date
of its removal.  In the meantime hopefully every distribution will
have or obtain a working udev configuration.  If things don't work
out as planned then we will re-evaluate.

Let's stop this now please.

John
-- 
John W. Linville
linville at tuxdriver.com


From stefano.brivio at polimi.it  Fri Dec 14 15:40:22 2007
From: stefano.brivio at polimi.it (stefano.brivio at polimi.it)
Date: Fri, 14 Dec 2007 15:40:22 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <20071214141446.GA3096@tuxdriver.com>
References: <20071213003028.676998182@mvista.com>
	<200712131445.39770.mb@bu3sch.de>
	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
	<200712140143.16451.mb@bu3sch.de> <20071214105624.GC23964@elte.hu>
	<20071214141446.GA3096@tuxdriver.com>
Message-ID: <20071214154022.v5w0eqwwiogws8cw@webmail.polimi.it>

"John W. Linville" <linville at tuxdriver.com> wrote:

> On Fri, Dec 14, 2007 at 11:56:24AM +0100, Ingo Molnar wrote:
>>
>> * Michael Buesch <mb at bu3sch.de> wrote:
>
>> > Oh come on. b43 is more than a year old now. How long should we wait?
>> > Two or three? Forever?
>>
>> possibly forever, if you dont get obvious regressions like "my wlan does
>> not work" (reported in this very thread), resolved. Pushing the blame to
>> udev (in a rather unfriendly way) wont give users a working system and
>> wont get you many new testers for the new driver either.
>
> It is true that Michael can be a little unpleasant at times.
> The colloquialism that comes to mind is that he "does not suffer fools
> lightly".  Hopefully he will take your counseling to heart and learn
> to be a bit more moderate in his tone.  FWIW, he is still young. :-)

No way. He's just inhuman. :P

> That said, it is also true that the b43[legacy] driver[s] do a more
> than adequate job of replacing the old bcm43xx driver provided that
> one (re-)installs the proper firmware.  And I know of no other driver
> that goes to more trouble to tell you how to get the proper firmware
> installed than this one.
>
> The bcm43xx driver will be added to the feature removal schedule
> in 2.6.25.  Proper judgment will be used in deciding the actual date
> of its removal.  In the meantime hopefully every distribution will
> have or obtain a working udev configuration.  If things don't work
> out as planned then we will re-evaluate.
>
> Let's stop this now please.

Agreed. As a b43legacy maintainer, I'd be happy to know if Ingo  
suggests other ways to smooth out the transition. I haven't read  
proposals yet.


--
Ciao
Stefano





From celejar at gmail.com  Fri Dec 14 17:04:30 2007
From: celejar at gmail.com (Celejar)
Date: Fri, 14 Dec 2007 11:04:30 -0500
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <4761E5D6.7040801@lwfinger.net>
References: <20071213003028.676998182@mvista.com>
	<200712131445.39770.mb@bu3sch.de>
	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>
	<200712140143.16451.mb@bu3sch.de> <4761E5D6.7040801@lwfinger.net>
Message-ID: <20071214110430.983813fd.celejar@gmail.com>

On Thu, 13 Dec 2007 18:09:26 -0800
Larry Finger <larry.finger at lwfinger.net> wrote:

> Michael Buesch wrote:
> > On Friday 14 December 2007 01:05:00 Ray Lee wrote:
> >> Okay, I had to modprobe rfkill-input and rfkill by hand, didn't
> >> realize that. Hopefully that'll be automatic soon. Regardless, upon
> >> doing so, and loading ssb and b43, it sees my card, but is still not
> >> fully functional. iwconfig sees:
> >>
> >> lo        no wireless extensions.
> >> eth0      no wireless extensions.
> >> tun0      no wireless extensions.
> >> eth1      no wireless extensions.
> >> wlan0_rename  IEEE 802.11g  ESSID:""
> >>           Mode:Managed  Channel:0  Access Point: Not-Associated
> >>           Tx-Power=0 dBm
> >>           Retry min limit:7   RTS thr:off   Fragment thr=2346 B
> >>           Link Quality:0  Signal level:0  Noise level:0
> >>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
> >>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> >>
> >> (eth0 is ethernet, eth1 doesn't exist -- usually it's the wireless.)
> >>
> >> `ifconfig` doesn't see eth1 or wlan0_rename.
> >>
> >> What else might I be doing wrong?
> 
> Your udev rules are screwed up. In /etc/udev/rules.d/70-persistent-net.rules, you should have a line 
> that looks like
> 
> SUBSYSTEM=="net", DRIVERS=="?*", ATTR{address}=="00:1a:73:6b:28:5a", ATTR{type}=="1", NAME="eth1"
> 
> with the MAC address for your device. You probably have the ATTR{type}=="1" clause missing.

I have a 4318, which I've been using for some time with ndiswrapper
(bcm43xx doesn't work very well with it, you know and as I've reported
on this list).  I finally decided to take the plunge and try b43, so I
installed 2.6.24-rc4 (vanilla from kernel.org), and began getting
chaos, similar to the OP's.  I pretty much gave up, when I saw your
suggestion that the problem is broken udev rules.  Sure enough, here is
(was) my persistent-net.rules:

# This file was automatically generated by the /lib/udev/write_net_rules
# program, probably run by the persistent-net-generator.rules rules file.
#
# You can modify it, as long as you keep each rule on a single line.
# MAC addresses must be written in lowercase.

# PCI device 0x14e4:0x4318 (bcm43xx)
SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:19:7d:06:a5:44",
NAME="eth0"

# PCI device 0x14e4:0x170c (b44)
SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:16:d4:5e:1e:9c",
NAME="eth1"

# PCI device 0x168c:0x0013 (ath_pci)
SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:40:f4:e5:07:7e",
ATTRS{type}=="1", NAME="ath0"

The two Broadcom lines (wired and wireless cards builtin to my Acer
Aspire 3690-2672 laptop) don't contain the 'ATTRS{type}=="1"' clause,
while the Atheros line (for a PCMCIA card) does.  Adding the clause to
the Broadcom wireless line fixed the problem, and it now seems to be
working perfectly (no screen flicker, which I had seen with bcm43xx),
so thanks.

My questions:

A)  I have only a very basic understanding of udev; what does that
clause mean?  I couldn't figure it out by googling or looking in the
basic udev docs.

B)  I'm running Debian Sid; I assume the installer wrote the builtin
cards' lines and the running system the subsequently inserted PCMCIA
line.  Is this a bug?  Do you know where I should report it?  I have
never (until my addition of your clause) touched the ruls file.

C)  I wasn't seeing this device naming problem with my old kernels
(2.6.18 - 2.6.22) and bcm43xx / ndiswrapper.  Is this a 2.6.24 thing,
or a b43 thing, or some combination thereof, or something else entirely?

Thanks to you and all the devs for all your Broadcom work!

> Larry

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From mb at bu3sch.de  Fri Dec 14 17:49:33 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 17:49:33 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712140806p61ec06d5nf3289dab938fd93a@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712141409.00311.mb@bu3sch.de>
	<2c0942db0712140806p61ec06d5nf3289dab938fd93a@mail.gmail.com>
Message-ID: <200712141749.33708.mb@bu3sch.de>

On Friday 14 December 2007 17:06:39 Ray Lee wrote:
> Hi all. Perhaps I can inject some facts into this?
> 
> On Dec 14, 2007 5:08 AM, Michael Buesch <mb at bu3sch.de> wrote:
> > > > This user did get the following messages in dmesg:
> > > >
> > > > b43err(dev->wl, "Firmware file \"%s\" not found "
> > > >        "or load failed.\n", path);
> > > > b43err(wl, "You must go to "
> > > >        "http://linuxwireless.org/en/users/Drivers/b43#devicefirmware "
> > > >        "and download the correct firmware (version 4).\n");
> > > >
> > > > I'm not sure how I can improve that even more. There is a full URL
> > > > describing how to get the device workin in _full_ detail.
> 
> Yes, but only if you load rfkill-input and rfkill by hand, prior.

I'm not sure what you are doing there.
Do you have module autoloading disabled?
This all works perfectly well on all of my systems. And I never heared
such a problem before.

If you have a PCI device probing works as follows:
The PCI table is in ssb. So as soon as your kernel detects the PCI device
it will load ssb. ssb will register the PCI device. That will trigger
an udev event for the contained 802.11 core to get probed. This will load
b43.

So, I'm not sure where's the issue with my code here.

> That I'm one of the first people to hit that makes me think that your
> testing base so far has been miniscule.

The driver is shipped by Fedora since quite some time.

> > > || Well, doing an `rmmod bcm43xx ; modprobe ssb b43` gives me nothing in
> > > || dmesg other than lines related to the bcm43xx driver.
> > > || iwconfig/ifconfig do not see the interface either.
> 
> See above. Without a modprobe of rfkill, rfkill-input that is the case.

You can't do
modprobe ssb b43
This will be interpreted as modprobe of "ssb" with the module
parameter "b43". At least by my modutils.

If you do
modprobe b43
it will automatically load _all_ required modules.
It works perfectly well on my systems.
Try it. Simply type "modprobe b43". It will also work for you.

> Heeeeellooooo? I tried that. It failed. What *I'm* talking about here
> is that this everyone needs to be aware that this is *not* a drop in
> replacement for bcm43xx, and if I'm having problems (not a kernel
> hacker, but I make my living writing code), then sheesh, you're gonna
> have a flood of people needing hand-holding on this.

All problems so far were not related to the b43 sourcecode at all.
And I think I can not be held responsible for unrelated code or bugs
in the operating system scripts.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 17:59:58 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 17:59:58 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712140845p1dfd8b23va13525b75224f4c0@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<2c0942db0712140827x38e5d971sbdb3d5864fc32364@mail.gmail.com>
	<2c0942db0712140845p1dfd8b23va13525b75224f4c0@mail.gmail.com>
Message-ID: <200712141759.59273.mb@bu3sch.de>

On Friday 14 December 2007 17:45:52 Ray Lee wrote:
> On Dec 14, 2007 8:27 AM, Ray Lee <ray-lk at madrabbit.org> wrote:
> > On Dec 14, 2007 6:40 AM,  <stefano.brivio at polimi.it> wrote:
> > > Agreed. As a b43legacy maintainer, I'd be happy to know if Ingo
> > > suggests other ways to smooth out the transition. I haven't read
> > > proposals yet.
> >
> > This isn't rocket science guys. Put a file in somewhere in your tree
> > called ReleaseAnnouncement or something, and ask Linus to adjust his
> > kernel release process to include the contents of `cat $( find . -name
> > ReleaseAnnouncement )` in the release message he sends out. Clear out
> > the file after the release.
> >
> > Include things such as "bcm43xx is scheduled for removal. build both
> > b43 and b43legacy as a replacement. Be sure to download the latest
> > firmware from $URL and follow the instructions there to extract the
> > correct latest firmware necessary for your chip. There are known
> > incompatibilities with old udev versions, please ensure blah blah
> > blah."
> 
> Or even better, keep the history, and show the diff of the old versus
> new in the release announcement, with an appropriate sed 's/+/ /' or
> somesuch.
> 
> <shrug> I'm sure you all will figure something out. Regardless, my
> point is a higher level changelog that is human readable would be
> helpful. (There are thousands of per-commit changelog entries to read,
> it's beyond what I have the time to do when testing a new kernel).
> Also, it seems distributing the release announcement work would be as
> helpful as distributing the code development work.

In my opinion this all is the work of the distributions and not the
work of the kernel developers. Distributions have to make sure that
everything works after a kernel update. Yes I know that this is difficult
with b43, as the firmware is closed source. But this can be worked
around by explicitely prompting the user when the kernel is updated.
This is all distribution stuff.

What if you want to compile your own kernel? Well, then you are on
your own anyway. You have to track kernel changes anyway.
And I am pretty sure that it really is simple to track kernel changes.
Get your favourite kernel news site. It will tell you the changes
without this magic ReleaseAnnouncement file stuff.
I mean. There are news sites (even not specific ones for the kernel)
that reported the bcm43xx->b43 change weeks ago. There must be some
place where they get this information from without magic files. ;)

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 19:22:04 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 19:22:04 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712141001l6ad77657q1dceee5cb872a979@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712141749.33708.mb@bu3sch.de>
	<2c0942db0712141001l6ad77657q1dceee5cb872a979@mail.gmail.com>
Message-ID: <200712141922.04677.mb@bu3sch.de>

On Friday 14 December 2007 19:01:51 Ray Lee wrote:
> No, I don't have module autoloading disabled. modprobe-ing b43
> automatically loads ssb. Neither, however, will load rfkill or
> rfkill-input. And if they aren't loaded, then b43/ssb are *completely*
> silent during load. Nothing to dmesg at all.

That is a bug in your distribution. I cannot fix this.
Maybe the module is blacklisted or whatever. This is _not_ a b43 bug.

> > This all works perfectly well on all of my systems. And I never heared
> > such a problem before.
> 
> WTF? Please read *YOUR OWN MESSAGE* to the bcm43xx-dev list:
> 
> https://lists.berlios.de/pipermail/bcm43xx-dev/2007-December/006456.html
> 
> I'm going to blame this on you being tired or something, okay? But in
> the meantime, could you *PLEASE* start giving me the benefit of the
> doubt?

The message you quote describes a _completely_ unrelated bug.
Besides that the bug described in the message does _not_ prevent
the device from working. It does _just_ prevent some random LED from
blinking. I'd not call that a big issue.
To say it again: This message was about loading "rfkill-input" _after_
b43 was loaded successfully.

Please carefully read the messages before using them to prove me wrong.

> > If you have a PCI device probing works as follows:
> > The PCI table is in ssb. So as soon as your kernel detects the PCI device
> > it will load ssb. ssb will register the PCI device. That will trigger
> > an udev event for the contained 802.11 core to get probed. This will load
> > b43.
> >
> > So, I'm not sure where's the issue with my code here.
> 
> There's a patch from Larry Finger to address this and other issues. It
> hasn't made it's way fully upstream yet. Please read your message
> here, in particular item number seven on Larry's list:
> 
> https://lists.berlios.de/pipermail/bcm43xx-dev/2007-December/006472.html

1) I sent this patch out today for inclusion in the kernel
2) This is a _completely_ unrelated issue.
   It is about "rfkill-input" being not loaded. NOT about
   "b43" or "rfkill" not being loaded.

> > If you do
> > modprobe b43
> > it will automatically load _all_ required modules.
> > It works perfectly well on my systems.
> > Try it. Simply type "modprobe b43". It will also work for you.
> 
> As I've said multiple times earlier in this thread, I did try that and
> it didn't work. Do you believe me now?

Ok, Please find out why it doesn't work.

> > > Heeeeellooooo? I tried that. It failed. What *I'm* talking about here
> > > is that this everyone needs to be aware that this is *not* a drop in
> > > replacement for bcm43xx, and if I'm having problems (not a kernel
> > > hacker, but I make my living writing code), then sheesh, you're gonna
> > > have a flood of people needing hand-holding on this.
> >
> > All problems so far were not related to the b43 sourcecode at all.
> > And I think I can not be held responsible for unrelated code or bugs
> > in the operating system scripts.
> 
> So, do you want a scorecard on this?
> 
> One problem related to b43 source code, patch exists, has yet to be
> merged upstream.

Yeah. A problem preventing a LED from blinking.
That's a real regression.... Come on. Stop that bullshit.

> One problem related to udev rules, that may or may not be fixed in the
> latest udev. I have udev version 113, which is the latest shipped in
> Ubuntu's nightly development snapshots (hardy heron). I see that
> version 117 of udev is available on kernel.org, but mine is from the
> end of June. One would think that wouldn't be so old as to be a
> complete deal breaker. Especially as bcm43xx works fine with my udev.

How can I fix that?

> With udev rules hand-edited to include the ATTRS{type}==1 Larry
> pointed out (thanks Larry), b43 also seems to create an odd extra
> device, wmaster0.

That's not b43 specific. And it is not a bug. Ignore wmaster.
It is not useful for anything from userspace.

> Same MAC as eth1, my wireless. It's just an odd 
> thing that wasn't there before with bcm43xx. May be good, may be bad,
> dunno.

Blame your distribution, please.

> And yeah, in my opinion, making the kernel play well with up-to-date
> userspace actually *is* part of your job, but then again, what do I
> know.

How the hell do I workaround broken udev scripts from within the kernel?

> Michael, you're a good guy, I believe that. You're doing unglamorous
> and mostly thankless work, and I am thankful for it. I'm afraid the
> only way I could make it glamorous is to offer to send you a fancy
> feathered outfit to wear while coding :-). But try to meet us testers
> halfway, okay? Please keep in mind that I'm really only trying to
> help.

Yeah. So PLEASE point out real bugs in MY code and do not bother
me with other peoples bugs that I simply can not fix.
In the list above there was exactly one bug for which I am responsible.
And I already sent a fix for this one.

> Now I'm going to go off, sit in the sun, sip some coffee, and think
> happy thoughts of kittens playing with yarn for a while.

Have fun.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 19:38:09 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 19:38:09 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071214175910.GA27078@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<200712141759.59273.mb@bu3sch.de> <20071214175910.GA27078@elte.hu>
Message-ID: <200712141938.10733.mb@bu3sch.de>

On Friday 14 December 2007 18:59:10 Ingo Molnar wrote:
> 
> * Michael Buesch <mb at bu3sch.de> wrote:
> 
> > In my opinion this all is the work of the distributions and not the 
> > work of the kernel developers. Distributions have to make sure that 
> > everything works after a kernel update. [...]
> 
> actually, not. The the task of kernel developers is to KEEP OLD 
> DISTRIBUTIONS WORKING WITH NEW DRIVERS. Or the "old" driver stays around 
> until eternity, because the new one is just BROKEN.

What exactly prevents an old distribution from using new b43
given that they fix their broken udev scripts first?

(I cannot fix their broken scripts from within the kernel.)

> Take a look at CONFIG_COMPAT_VDSO for example - one single version of 
> glibc was released in a distro that depended on a kernel vDSO bug. So 
> we'll keep that aspect of the vDSO perhaps forever. Simple as that. 
> Stuff must just work. Whatever it takes. Best is if you add in new stuff 
> without the user noticing _ANYTHING_ but that the kernel version bumped. 
> If the maintainers of the other 7 million lines of kernel code can get 
> this right then the wireless code should be able to do it too. Ok?
> 
> all this "distributors will have to sort out the mess" talk is nonsense, 
> and i really hope you do not truly believe in that crap. If your 
> attitude is prevalent in the wireless development community then it's in 
> worse shape than i thought :-(

Sorry if I didn't chose my wording correctly. But I was only talking
about the development of drivers. It is correct that userspace ABI has
to be preserved, but that is not an issue at all to drivers.
I was talking about things like installing the right firmware for
the new driver. It is the job of the distributors to install the new
firmware when they introduce a new driver. It is the job of the distributors
to test their userland scripts and configuration stuff with that driver
and fix their stuff. It is _not_ my job to fix random distribution
udev scripts or explaining over and over again to people how the firmware
is installed. Either distributions have to install it automatically
or people simply have to read one or two lines of documentation.
That's just what I wanted to say.

Of course it is _my_ job to preserve ABI. I did never want to question that.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 20:05:20 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 20:05:20 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712141045nf7bf730l677936614f7db736@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712141922.04677.mb@bu3sch.de>
	<2c0942db0712141045nf7bf730l677936614f7db736@mail.gmail.com>
Message-ID: <200712142005.21375.mb@bu3sch.de>

On Friday 14 December 2007 19:45:02 Ray Lee wrote:
> > > One problem related to b43 source code, patch exists, has yet to be
> > > merged upstream.
> >
> > Yeah. A problem preventing a LED from blinking.
> > That's a real regression.... Come on. Stop that bullshit.
> 
> I'm going to say this one last time. If rfkill and rfkill-input aren't
> manually loaded before sb and b43, not one damn thing comes out in
> dmesg. Nothing. Nada. Zilch. Zero. Bupkis. Zot. Null. The only way to
> find out that those modules had to be loaded by hand was to go read
> the bcm43xx-dev archives. Once those were loaded, messages came out in
> dmesg pointing me to the URL for updated firmware.

I'm sorry. The patch that _you_ quoted fixes a blinking LED
and nothing else. It does _not_ fix loading of rfkill or b43 in any way.
It does, however, fix loading of rfkill-input. But the b43 module
operation does _not_ depend in any way on the rfkill-input module, except
the tiny LED that doesn't blink if it's not loaded.
I hope you understood now that the thread on bcm43xx-dev was NOT about
your requirement to load rfkill before b43.

> I have complete current userspace as of yesterday's Ubuntu Hardy Heron
> development archives.

Ok. I will install a copy of Ubuntu Hardy Heron and check if I can
reproduce this.
However the fact that this does not happen on older Ubuntu platforms
and does not happen on Fedora leads to the conclusion that it
is a bug in Hardy Heron that I am not responsible for.

And you also do realise that Hardy Heron is the current development
version of Ubuntu? Development versions have bugs.

> One last thing. I've been nice to you. Please be nice to me.

If you simply stop blaming bugs on me that I am not responsible for
at all, that is a deal. What about filing a bug at the ubuntu bugzilla?

PS:
Note that Ubuntu is known to break the broadcom driver every now and then.
But I can not change that.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 20:38:57 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 20:38:57 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712141125g65422bc5r83c83a2ce81cc58a@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712142005.21375.mb@bu3sch.de>
	<2c0942db0712141125g65422bc5r83c83a2ce81cc58a@mail.gmail.com>
Message-ID: <200712142038.58400.mb@bu3sch.de>

On Friday 14 December 2007 20:25:39 Ray Lee wrote:
> > I'm sorry. The patch that _you_ quoted fixes a blinking LED
> > and nothing else.
> 
> Well, you're wrong. Sorry, but that's just the way it is. See below.
> 
> > It does _not_ fix loading of rfkill or b43 in any way.
> > It does, however, fix loading of rfkill-input. But the b43 module
> > operation does _not_ depend in any way on the rfkill-input module, except
> > the tiny LED that doesn't blink if it's not loaded.
> > I hope you understood now that the thread on bcm43xx-dev was NOT about
> > your requirement to load rfkill before b43.
> 
> *AGAIN*, please read your message here, in particular item number
> seven on Larry's list:
> 
> https://lists.berlios.de/pipermail/bcm43xx-dev/2007-December/006472.html
> 
> For the last fscking time, if rfkill and rfkill-input are not loaded,
> not one line comes out in dmesg when b43 and ssb are loaded. In
> particular, your pretty little message about needing newer firmware
> also does not print. So, yeah, not loading rfkill{,-input} *does*
> cause issues with b43 working, as there's no damn way to find out
> what's broken!

Guy... .
I KNOW what the patch above does.
What do you think does the following line?
	err = request_module("rfkill-input");
Does it load the "rfkill-input" or the "rfkill" module.
That's the million dollar question. You only have one try.

This patch is NOT about the "rfkill" module. I don't know how
often I have to say that. It is _obvious_.

Let's also quote Larry's sevenths point here, that you referred to
now for the second time:
" (7) If rfkill-input is built as a module, it is not automatically loaded."

I am not sure how I can make this any more clear.
It does load the "rfkill-input" module from within b43.
It does NOT load "rfkill"
It does NOT load "rfkill-input" BEFORE b43 was loaded.

This patch does exactly ONE thing. It does make sure a LED does blink.
Nothing more.
I signed this patch off. So you can be 100% sure I know what it does.
I do NOT sign off patches for which I don't know what they do.

> > > I have complete current userspace as of yesterday's Ubuntu Hardy Heron
> > > development archives.
> >
> > Ok. I will install a copy of Ubuntu Hardy Heron and check if I can
> > reproduce this.
> 
> I'm not asking you to do that, this particular bug will be fixed by
> Larry's patch, whether you believe that or not.

Did you try that?
How can b43 load get fixed by a patch that adds a request_module()
to the b43 module? That is a chicken and egg problem!

> > However the fact that this does not happen on older Ubuntu platforms
> > and does not happen on Fedora leads to the conclusion that it
> > is a bug in Hardy Heron that I am not responsible for.
> 
> The kernel does not exist in a vacuum. It's the kernel's job to make
> sure it works with properly written userspace. Broken userspace, sure,
> then we can talk about breaking it.

yes properly written userspace.

> > And you also do realise that Hardy Heron is the current development
> > version of Ubuntu? Development versions have bugs.
> 
> Oy vay. I'm not an idiot. Yes, it's the current develoment version.
> But tracking the latest kernel.org kernel has in the past required the
> latest develoment version of the distribution, so I upgrade it as
> well.

I am running wireless-2.6 on feisty. So the kernel does _not_ require
an update of the distribution.
q.e.d.

> I'm not blaming it on you. I'm merely reporting a fucking
> incompatibility. Read my messages again from the top, and stop taking
> this all so damn personally, will you?

You are telling me that I don't understand patches that I sign off
and I should not take this personally?
That is challenging.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Dec 14 21:13:08 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 14 Dec 2007 21:13:08 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <2c0942db0712141155n40ba60agde79e436aa5cb8f2@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712142038.58400.mb@bu3sch.de>
	<2c0942db0712141155n40ba60agde79e436aa5cb8f2@mail.gmail.com>
Message-ID: <200712142113.09119.mb@bu3sch.de>

On Friday 14 December 2007 20:55:43 Ray Lee wrote:
> Oh. My. God.
> 
> Michael. I have a degree in Physics. I placed sixth in the world
> finals of the ACM Collegiate programming contest in 1999, Cal Poly
> Team Gold. ( http://icpc.baylor.edu/past/icpc99/Finals/Tour/Win/Win.html
> , I'm the guy all the way to the right. ) I ported the 2.4 kernel to a
> custom ppc platform, including writing drivers for various hardware on
> it ( http://patinc.com ). I'm the guy who did all the software for a
> linux-based Voice over IP call center (
> http://broncocommunications.com/ ).

Nice. I am one of the main b43 developers and I wrote most of the code.
I know most of the code from the top of my head.
Besides that my weiner is bigger than yours. :P

> To answer your question, it requests the rfkill-input module. But
> under the version I'm trying, rfkill-input is not automatically
> loaded.

It is not an issue. You can even rmmod rfkill-input in FULL operation.
It will not disturb the operation, except that an LED stops working.
Try it! (I _did_ try it).

> I've pointed to the mailing list URL that proves that. So, I 
> loaded rfkill and rfkill-input by hand. Perhaps rfkill wasn't
> necessary, I don't know, and I don't care. But once I did that, *then
> and only then* did your damn b43 driver start printing out any
> messages to dmesg at all, which then let me download the latest
> firmware, and continue moving forward.

The b43 does print _nothing_ on modprobe. That is _correct_ behaviour.
b43 does print the firmware message after "ifconfig up".
Might it be possible that this was coincidence and you messed
with modprobe rfkill and ifconfig up and finally saw the message?

> > You are telling me that I don't understand patches that I sign off
> > and I should not take this personally?
> > That is challenging.
> 
> I'm saying the patch you signed off on has a side-effect that will fix
> my issue. And even if I *were* saying that, the most you should take

Ok. So please revert that patch and try to reproduce the breakage.
Does that work?

> from it is that you are human and sometimes may make mistakes, just

I am inhuman. We all know that.
(That was a joke that you probably don't understand. But you can google
for "bcw vs. bcm43xx" :) )

Ray, I _do_ want to understand what is going on in your machine.
I _have_ to understand it. But I currently do not understand how the
quoted patch could fix modprobe of b43 or rfkill. I'd simply call that
impossible.
Impossible because the patch does change a few function called _inside_
of the b43 module. How could that fix load of the b43 module? (Note that
we are not changing some modprobe magic like the ID table).

So could you please try to reproduce the breakage by reverting that
patch again? Just to make really sure it is this patch fixing the issue
and not just some coincidence.

Thanks for your help.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Fri Dec 14 21:30:10 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 14 Dec 2007 12:30:10 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to	mutex
In-Reply-To: <20071214110430.983813fd.celejar@gmail.com>
References: <20071213003028.676998182@mvista.com>	<200712131445.39770.mb@bu3sch.de>	<2c0942db0712131604m41c34da9hf3122b0603f3af96@mail.gmail.com>	<200712140143.16451.mb@bu3sch.de>
	<4761E5D6.7040801@lwfinger.net>
	<20071214110430.983813fd.celejar@gmail.com>
Message-ID: <4762E7D2.1040301@lwfinger.net>

Celejar wrote:
> 
> 
> # This file was automatically generated by the /lib/udev/write_net_rules
> # program, probably run by the persistent-net-generator.rules rules file.
> #
> # You can modify it, as long as you keep each rule on a single line.
> # MAC addresses must be written in lowercase.
> 
> # PCI device 0x14e4:0x4318 (bcm43xx)
> SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:19:7d:06:a5:44",
> NAME="eth0"
> 
> # PCI device 0x14e4:0x170c (b44)
> SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:16:d4:5e:1e:9c",
> NAME="eth1"
> 
> # PCI device 0x168c:0x0013 (ath_pci)
> SUBSYSTEM=="net", DRIVERS=="?*", ATTRS{address}=="00:40:f4:e5:07:7e",
> ATTRS{type}=="1", NAME="ath0"
> 
> The two Broadcom lines (wired and wireless cards builtin to my Acer
> Aspire 3690-2672 laptop) don't contain the 'ATTRS{type}=="1"' clause,
> while the Atheros line (for a PCMCIA card) does.  Adding the clause to
> the Broadcom wireless line fixed the problem, and it now seems to be
> working perfectly (no screen flicker, which I had seen with bcm43xx),
> so thanks.
> 
> My questions:
> 
> A)  I have only a very basic understanding of udev; what does that
> clause mean?  I couldn't figure it out by googling or looking in the
> basic udev docs.
> 
> B)  I'm running Debian Sid; I assume the installer wrote the builtin
> cards' lines and the running system the subsequently inserted PCMCIA
> line.  Is this a bug?  Do you know where I should report it?  I have
> never (until my addition of your clause) touched the ruls file.
> 
> C)  I wasn't seeing this device naming problem with my old kernels
> (2.6.18 - 2.6.22) and bcm43xx / ndiswrapper.  Is this a 2.6.24 thing,
> or a b43 thing, or some combination thereof, or something else entirely?

It is a mac80211-introduced "problem". With bcm43xx-softmac, there is only a single device 
presented, and one does not care what type it is when it is renamed. With mac80211 (used by b43), at 
least two devices are available, wmaster0 with type==0x801, and wlan0 with type==1. Without the 
ATTRS{type==1} clause, wmaster=>eth1 and wlan0=>wlan0_rename. With the clause, only wlan0 is subject 
to renaming and all works OK.

On some distros, merely deleting the rename rule gets the correct one written upon reboot. Sorry, I 
don't know which ones fit that category. I would expect that it depends on the version of udev that 
is included.

If I were you, I would put it on Debian's bug-reporting system. Be sure that your message makes the 
problem associated with any wireless driver that uses mac80211. As I said before, the problem is 
more general than for b43.

Larry


From Larry.Finger at lwfinger.net  Fri Dec 14 23:37:32 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 14 Dec 2007 14:37:32 -0800
Subject: [PATCH] b43legacy: Fix rfkill radio LED
Message-ID: <476305ac.iFHvMMhxQ+7JhQxX%Larry.Finger@lwfinger.net>

From:	Larry Finger <Larry.Finger at lwfinger.net>

This fixes Bug #9414 for b43legacy. This patch is the equivalent of one
submitted earlier for b43.

Since addition of the rfkill callback, the LED associated with the off
switch on the radio has not worked for several reasons:

(1) Essential data in the rfkill structure were missing.
(2) The rfkill structure was initialized after the LED initialization.
(3) There was a minor memory leak if the radio LED structure was inited.

Once the above problems were fixed, additional difficulties were noted:

(4) The radio LED was in the wrong state at startup.
(5) The radio switch had to be manipulated twice for each state change.
(6) A circular mutex locking situation existed.
(7) If rfkill-input is built as a module, it is not automatically loaded.

This patch fixes all of the above and removes a couple of sparse warnings.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/b43legacy/rfkill.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43legacy/rfkill.c
+++ wireless-2.6/drivers/net/wireless/b43legacy/rfkill.c
@@ -26,6 +26,8 @@
 #include "radio.h"
 #include "b43legacy.h"
 
+#include <linux/kmod.h>
+
 
 /* Returns TRUE, if the radio is enabled in hardware. */
 static bool b43legacy_is_hw_radio_enabled(struct b43legacy_wldev *dev)
@@ -51,7 +53,10 @@ static void b43legacy_rfkill_poll(struct
 	bool report_change = 0;
 
 	mutex_lock(&wl->mutex);
-	B43legacy_WARN_ON(b43legacy_status(dev) < B43legacy_STAT_INITIALIZED);
+	if (unlikely(b43legacy_status(dev) < B43legacy_STAT_INITIALIZED)) {
+		mutex_unlock(&wl->mutex);
+		return;
+	}
 	enabled = b43legacy_is_hw_radio_enabled(dev);
 	if (unlikely(enabled != dev->radio_hw_enable)) {
 		dev->radio_hw_enable = enabled;
@@ -61,8 +66,12 @@ static void b43legacy_rfkill_poll(struct
 	}
 	mutex_unlock(&wl->mutex);
 
-	if (unlikely(report_change))
-		input_report_key(poll_dev->input, KEY_WLAN, enabled);
+	/* send the radio switch event to the system - note both a key press
+	 * and a release are required */
+	if (unlikely(report_change)) {
+		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 /* Called when the RFKILL toggled in software.
@@ -71,13 +80,15 @@ static int b43legacy_rfkill_soft_toggle(
 {
 	struct b43legacy_wldev *dev = data;
 	struct b43legacy_wl *wl = dev->wl;
-	int err = 0;
+	int err = -EBUSY;
 
 	if (!wl->rfkill.registered)
 		return 0;
 
 	mutex_lock(&wl->mutex);
-	B43legacy_WARN_ON(b43legacy_status(dev) < B43legacy_STAT_INITIALIZED);
+	if (b43legacy_status(dev) < B43legacy_STAT_INITIALIZED)
+		goto out_unlock;
+	err = 0;
 	switch (state) {
 	case RFKILL_STATE_ON:
 		if (!dev->radio_hw_enable) {
@@ -103,11 +114,11 @@ out_unlock:
 
 char * b43legacy_rfkill_led_name(struct b43legacy_wldev *dev)
 {
-	struct b43legacy_wl *wl = dev->wl;
+	struct b43legacy_rfkill *rfk = &(dev->wl->rfkill);
 
-	if (!wl->rfkill.rfkill)
+	if (!rfk->registered)
 		return NULL;
-	return rfkill_get_led_name(wl->rfkill.rfkill);
+	return rfkill_get_led_name(rfk->rfkill);
 }
 
 void b43legacy_rfkill_init(struct b43legacy_wldev *dev)
@@ -116,53 +127,13 @@ void b43legacy_rfkill_init(struct b43leg
 	struct b43legacy_rfkill *rfk = &(wl->rfkill);
 	int err;
 
-	if (rfk->rfkill) {
-		err = rfkill_register(rfk->rfkill);
-		if (err) {
-			b43legacywarn(wl, "Failed to register RF-kill button\n");
-			goto err_free_rfk;
-		}
-	}
-	if (rfk->poll_dev) {
-		err = input_register_polled_device(rfk->poll_dev);
-		if (err) {
-			b43legacywarn(wl, "Failed to register RF-kill polldev\n");
-			goto err_free_polldev;
-		}
-	}
-
-	return;
-err_free_rfk:
-	rfkill_free(rfk->rfkill);
-	rfk->rfkill = NULL;
-err_free_polldev:
-	input_free_polled_device(rfk->poll_dev);
-	rfk->poll_dev = NULL;
-}
-
-void b43legacy_rfkill_exit(struct b43legacy_wldev *dev)
-{
-	struct b43legacy_rfkill *rfk = &(dev->wl->rfkill);
-
-	if (rfk->poll_dev)
-		input_unregister_polled_device(rfk->poll_dev);
-	if (rfk->rfkill)
-		rfkill_unregister(rfk->rfkill);
-}
-
-void b43legacy_rfkill_alloc(struct b43legacy_wldev *dev)
-{
-	struct b43legacy_wl *wl = dev->wl;
-	struct b43legacy_rfkill *rfk = &(wl->rfkill);
+	rfk->registered = 0;
 
+	rfk->rfkill = rfkill_allocate(dev->dev->dev, RFKILL_TYPE_WLAN);
+	if (!rfk->rfkill)
+		goto out_error;
 	snprintf(rfk->name, sizeof(rfk->name),
 		 "b43legacy-%s", wiphy_name(wl->hw->wiphy));
-
-	rfk->rfkill = rfkill_allocate(dev->dev->dev, RFKILL_TYPE_WLAN);
-	if (!rfk->rfkill) {
-		b43legacywarn(wl, "Failed to allocate RF-kill button\n");
-		return;
-	}
 	rfk->rfkill->name = rfk->name;
 	rfk->rfkill->state = RFKILL_STATE_ON;
 	rfk->rfkill->data = dev;
@@ -170,20 +141,64 @@ void b43legacy_rfkill_alloc(struct b43le
 	rfk->rfkill->user_claim_unsupported = 1;
 
 	rfk->poll_dev = input_allocate_polled_device();
-	if (rfk->poll_dev) {
-		rfk->poll_dev->private = dev;
-		rfk->poll_dev->poll = b43legacy_rfkill_poll;
-		rfk->poll_dev->poll_interval = 1000; /* msecs */
-	} else
-		b43legacywarn(wl, "Failed to allocate RF-kill polldev\n");
+	if (!rfk->poll_dev)
+		goto err_free_rfk;
+	rfk->poll_dev->private = dev;
+	rfk->poll_dev->poll = b43legacy_rfkill_poll;
+	rfk->poll_dev->poll_interval = 1000; /* msecs */
+
+	rfk->poll_dev->input->name = rfk->name;
+	rfk->poll_dev->input->id.bustype = BUS_HOST;
+	rfk->poll_dev->input->id.vendor = dev->dev->bus->boardinfo.vendor;
+	rfk->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rfk->poll_dev->input->keybit);
+
+	err = rfkill_register(rfk->rfkill);
+	if (err)
+		goto err_free_polldev;
+
+#ifdef CONFIG_RFKILL_INPUT_MODULE
+	/* B43legacy RF-kill isn't useful without the rfkill-input subsystem.
+	 * Try to load the module. */
+	err = request_module("rfkill-input");
+	if (err)
+		b43legacywarn(wl, "Failed to load the rfkill-input module. "
+			"The built-in radio LED will not work.\n");
+#endif /* CONFIG_RFKILL_INPUT */
+
+	err = input_register_polled_device(rfk->poll_dev);
+	if (err)
+		goto err_unreg_rfk;
+
+	rfk->registered = 1;
+
+	return;
+err_unreg_rfk:
+	rfkill_unregister(rfk->rfkill);
+err_free_polldev:
+	input_free_polled_device(rfk->poll_dev);
+	rfk->poll_dev = NULL;
+err_free_rfk:
+	rfkill_free(rfk->rfkill);
+	rfk->rfkill = NULL;
+out_error:
+	rfk->registered = 0;
+	b43legacywarn(wl, "RF-kill button init failed\n");
 }
 
-void b43legacy_rfkill_free(struct b43legacy_wldev *dev)
+void b43legacy_rfkill_exit(struct b43legacy_wldev *dev)
 {
 	struct b43legacy_rfkill *rfk = &(dev->wl->rfkill);
 
+	if (!rfk->registered)
+		return;
+	rfk->registered = 0;
+
+	input_unregister_polled_device(rfk->poll_dev);
+	rfkill_unregister(rfk->rfkill);
 	input_free_polled_device(rfk->poll_dev);
 	rfk->poll_dev = NULL;
 	rfkill_free(rfk->rfkill);
 	rfk->rfkill = NULL;
 }
+
Index: wireless-2.6/drivers/net/wireless/b43legacy/leds.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43legacy/leds.c
+++ wireless-2.6/drivers/net/wireless/b43legacy/leds.c
@@ -165,6 +165,9 @@ static void b43legacy_map_led(struct b43
 		b43legacy_register_led(dev, &dev->led_radio, name,
 				 b43legacy_rfkill_led_name(dev),
 				 led_index, activelow);
+		/* Sync the RF-kill LED state with the switch state. */
+		if (dev->radio_hw_enable)
+			b43legacy_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43legacy_LED_WEIRD:
 	case B43legacy_LED_ASSOC:
@@ -234,4 +237,5 @@ void b43legacy_leds_exit(struct b43legac
 	b43legacy_unregister_led(&dev->led_tx);
 	b43legacy_unregister_led(&dev->led_rx);
 	b43legacy_unregister_led(&dev->led_assoc);
+	b43legacy_unregister_led(&dev->led_radio);
 }
Index: wireless-2.6/drivers/net/wireless/b43legacy/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43legacy/main.c
+++ wireless-2.6/drivers/net/wireless/b43legacy/main.c
@@ -1999,7 +1999,6 @@ static void b43legacy_mgmtframe_txantenn
 static void b43legacy_chip_exit(struct b43legacy_wldev *dev)
 {
 	b43legacy_radio_turn_off(dev, 1);
-	b43legacy_leds_exit(dev);
 	b43legacy_gpio_cleanup(dev);
 	/* firmware is released later */
 }
@@ -2029,11 +2028,10 @@ static int b43legacy_chip_init(struct b4
 	err = b43legacy_gpio_init(dev);
 	if (err)
 		goto out; /* firmware is released later */
-	b43legacy_leds_init(dev);
 
 	err = b43legacy_upload_initvals(dev);
 	if (err)
-		goto err_leds_exit;
+		goto err_gpio_clean;
 	b43legacy_radio_turn_on(dev);
 
 	b43legacy_write16(dev, 0x03E6, 0x0000);
@@ -2115,8 +2113,7 @@ out:
 
 err_radio_off:
 	b43legacy_radio_turn_off(dev, 1);
-err_leds_exit:
-	b43legacy_leds_exit(dev);
+err_gpio_clean:
 	b43legacy_gpio_cleanup(dev);
 	goto out;
 }
@@ -2973,10 +2970,7 @@ static void b43legacy_wireless_core_exit
 	cancel_work_sync(&dev->restart_work);
 	mutex_lock(&wl->mutex);
 
-	mutex_unlock(&dev->wl->mutex);
-	b43legacy_rfkill_exit(dev);
-	mutex_lock(&dev->wl->mutex);
-
+	b43legacy_leds_exit(dev);
 	b43legacy_rng_exit(dev->wl);
 	b43legacy_pio_free(dev);
 	b43legacy_dma_free(dev);
@@ -3142,11 +3136,11 @@ static int b43legacy_wireless_core_init(
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43legacy_upload_card_macaddress(dev);
 	b43legacy_security_init(dev);
-	b43legacy_rfkill_init(dev);
 	b43legacy_rng_init(wl);
 
 	b43legacy_set_status(dev, B43legacy_STAT_INITIALIZED);
 
+	b43legacy_leds_init(dev);
 out:
 	return err;
 
@@ -3235,6 +3229,10 @@ static int b43legacy_op_start(struct iee
 	int did_init = 0;
 	int err = 0;
 
+	/* First register RFkill.
+	 * LEDs that are registered later depend on it. */
+	b43legacy_rfkill_init(dev);
+
 	mutex_lock(&wl->mutex);
 
 	if (b43legacy_status(dev) < B43legacy_STAT_INITIALIZED) {
@@ -3264,6 +3262,8 @@ static void b43legacy_op_stop(struct iee
 	struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
 	struct b43legacy_wldev *dev = wl->current_dev;
 
+	b43legacy_rfkill_exit(dev);
+
 	mutex_lock(&wl->mutex);
 	if (b43legacy_status(dev) >= B43legacy_STAT_STARTED)
 		b43legacy_wireless_core_stop(dev);


From rjw at sisk.pl  Sat Dec 15 01:51:47 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sat, 15 Dec 2007 01:51:47 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <200712141404.24275.mb@bu3sch.de>
References: <20071213003028.676998182@mvista.com>
	<1197637194.7549.10.camel@odie.local>
	<200712141404.24275.mb@bu3sch.de>
Message-ID: <200712150151.49025.rjw@sisk.pl>

On Friday, 14 of December 2007, Michael Buesch wrote:
> On Friday 14 December 2007 13:59:54 Simon Holm Th?gersen wrote:
> > > This user did get the following messages in dmesg:
> > > 
> > > b43err(dev->wl, "Firmware file \"%s\" not found "
> > >        "or load failed.\n", path);
> > 
> > So the question seems to be why b43 needs version 4, when b43legacy and
> > bcm43x uses version 3?
> 
> That's really a question, right?
> 
> Well. linux-2.4 doesn't work with the linux-2.6 modutils.
> Windows Vista doesn't work with Windows 98 device drivers.
> That leads to this assumption:
> b43 doesn't work with version 3 firmware but needs version 4.
> 
> Newer drivers supporting newer hardware need newer firmware.

Actually, can you explain why, from the technical point of view, the version 4
firware is better than version 3, please?

Rafael


From larry.finger at lwfinger.net  Sat Dec 15 01:58:09 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 14 Dec 2007 16:58:09 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to	mutex
In-Reply-To: <200712150151.49025.rjw@sisk.pl>
References: <20071213003028.676998182@mvista.com>	<1197637194.7549.10.camel@odie.local>	<200712141404.24275.mb@bu3sch.de>
	<200712150151.49025.rjw@sisk.pl>
Message-ID: <476326A1.6090404@lwfinger.net>

Rafael J. Wysocki wrote:
> 
> Actually, can you explain why, from the technical point of view, the version 4
> firware is better than version 3, please?

I will be very interested in Michael's answer to this question; however, my experience is that it 
doesn't make much difference if your device is supported by both V3 and V4 firmware. This impression 
was obtained by comparing BCM4318 and BCM4311/1 devices with b43 and b43legacy.

Note that 802.11b and early BCM4306 devices are not supported by V4 firmware. Similarly, with 
BCM4311/2 and newer devices V3 firmware fails. As Michael said "newer drivers supporting newer 
hardware need newer firmware".

Larry


From rjw at sisk.pl  Sat Dec 15 02:25:50 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sat, 15 Dec 2007 02:25:50 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <200712141938.10733.mb@bu3sch.de>
References: <20071213003028.676998182@mvista.com>
	<20071214175910.GA27078@elte.hu> <200712141938.10733.mb@bu3sch.de>
Message-ID: <200712150225.52183.rjw@sisk.pl>

On Friday, 14 of December 2007, Michael Buesch wrote:
> On Friday 14 December 2007 18:59:10 Ingo Molnar wrote:
> > 
> > * Michael Buesch <mb at bu3sch.de> wrote:
> > 
> > > In my opinion this all is the work of the distributions and not the 
> > > work of the kernel developers. Distributions have to make sure that 
> > > everything works after a kernel update. [...]
> > 
> > actually, not. The the task of kernel developers is to KEEP OLD 
> > DISTRIBUTIONS WORKING WITH NEW DRIVERS. Or the "old" driver stays around 
> > until eternity, because the new one is just BROKEN.
> 
> What exactly prevents an old distribution from using new b43
> given that they fix their broken udev scripts first?
> 
> (I cannot fix their broken scripts from within the kernel.)

Well, we talked about that some time ago, didn't we?

The rule is this: if one uses kernel 2.6.x from kernel.org _successfully_
with certain distribution (whatever it is), then one is supposed to be able to
take the kernel 2.6.(x+1), install it on that distribution and use it without
any major configuration changes.  If this rule is not followed, people will
stop testing kernel.org kernels and we'll all suffer from that.

Now, in my not so humble opinion, switching from bcm43xx to b43 _is_ a major
configuration change (I did it, so please don't try to discuss with my
experience) and forcing users to do that breaks the rule above.

> > Take a look at CONFIG_COMPAT_VDSO for example - one single version of 
> > glibc was released in a distro that depended on a kernel vDSO bug. So 
> > we'll keep that aspect of the vDSO perhaps forever. Simple as that. 
> > Stuff must just work. Whatever it takes. Best is if you add in new stuff 
> > without the user noticing _ANYTHING_ but that the kernel version bumped. 
> > If the maintainers of the other 7 million lines of kernel code can get 
> > this right then the wireless code should be able to do it too. Ok?
> > 
> > all this "distributors will have to sort out the mess" talk is nonsense, 
> > and i really hope you do not truly believe in that crap. If your 
> > attitude is prevalent in the wireless development community then it's in 
> > worse shape than i thought :-(
> 
> Sorry if I didn't chose my wording correctly. But I was only talking
> about the development of drivers. It is correct that userspace ABI has
> to be preserved, but that is not an issue at all to drivers.
> I was talking about things like installing the right firmware for
> the new driver. It is the job of the distributors to install the new
> firmware when they introduce a new driver.

Yes, as far as new distributions are concerned.  However, we _want_ kernel.org
kernels to work with the old ones too.  Yes, WE DO.

> It is the job of the distributors to test their userland scripts and
> configuration stuff with that driver and fix their stuff. It is _not_ my job
> to fix random distribution udev scripts or explaining over and over again to
> people how the firmware is installed.

Given specific software environment (it may be a home-made system compiled
from sources or whatever), if installing a new kernel forces me to reconfigure
it in any significant way to obtain the functionality that I previously had,
the problem is with the kernel.  No less, no more.

> Either distributions have to install it automatically or people simply have
> to read one or two lines of documentation.  That's just what I wanted to say.

It's not that simple.  For example, regression testing will be a major PITA
if one needs to switch back and forth from the new driver to the old one in the
process.

> Of course it is _my_ job to preserve ABI. I did never want to question that.

Greetings,
Rafael


From larry.finger at lwfinger.net  Sat Dec 15 03:27:58 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 14 Dec 2007 18:27:58 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <520b60a90712141759h65f1e63ei65ba00887a930d06@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>	
	<1197637194.7549.10.camel@odie.local>	
	<200712141404.24275.mb@bu3sch.de> <200712150151.49025.rjw@sisk.pl>	
	<476326A1.6090404@lwfinger.net>
	<520b60a90712141759h65f1e63ei65ba00887a930d06@mail.gmail.com>
Message-ID: <47633BAE.6040604@lwfinger.net>

mvtodevnull at gmail.com wrote:
> 
> Could this be the reason my BCM94311MCG rev 1 receives such terrible
> performance with b43 but works well with bcm43xx? The device is
> 802.11b/g but my router is 802.11b. I filed a report on this issue
> here: https://bugzilla.redhat.com/show_bug.cgi?id=413291

No. On my BCM4311/1, my transfer rate peaked at about 12 Mbs with bcm43xx, but increased to 20 Mbs 
with b43. These tests were done with iperf with a server running running on a second computer 
connected by wire to my router. These rates are for 802.11g. When my interface was locked at 11 Mbs, 
the transfer rate was the expected 5.3-5.5 Mbs with both drivers.

> I was told by Michael that I would have to fix it myself, and I am
> trying, but the learning curve is a little steep. If this is relevant,
> I might at least have some direction to go in.

I suspect that mac80211 is doing something that your router does not like. Do you have any chance to 
capture the traffic between your computer and the router by using a second wireless computer running 
kismet or wireshark? A look at the differences between b43 and bcm43xx should show the reason.

Larry





From larry.finger at lwfinger.net  Sat Dec 15 08:18:50 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 14 Dec 2007 23:18:50 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <520b60a90712142039t539faeddo68e73816fe1b3237@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>	
	<1197637194.7549.10.camel@odie.local>	
	<200712141404.24275.mb@bu3sch.de> <200712150151.49025.rjw@sisk.pl>	
	<476326A1.6090404@lwfinger.net>	
	<520b60a90712141759h65f1e63ei65ba00887a930d06@mail.gmail.com>	
	<47633BAE.6040604@lwfinger.net>	
	<520b60a90712142037j14d54de5nf5657ab2927fb3f5@mail.gmail.com>
	<520b60a90712142039t539faeddo68e73816fe1b3237@mail.gmail.com>
Message-ID: <47637FDA.2030303@lwfinger.net>

mvtodevnull at gmail.com wrote:
> On Dec 14, 2007 11:37 PM,  <mvtodevnull at gmail.com> wrote:
>> I'll attach these logs since I can't read much into them.
> 
> I should do what I say...
> 

It will take a while to finish looking over those logs, but are you using ipv6? If not, please 
blacklist the ipv6 module to prevent it from loading - add the line 'blacklist ipv6' to file 
/etc/modprobe.d/blacklist. In some cases, ipv6 can cause timeouts even though you do not have any 
ipv6 routers.

Larry



From mb at bu3sch.de  Sat Dec 15 11:57:43 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 15 Dec 2007 11:57:43 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <200712150151.49025.rjw@sisk.pl>
References: <20071213003028.676998182@mvista.com>
	<200712141404.24275.mb@bu3sch.de> <200712150151.49025.rjw@sisk.pl>
Message-ID: <200712151157.44278.mb@bu3sch.de>

On Saturday 15 December 2007 01:51:47 Rafael J. Wysocki wrote:
> On Friday, 14 of December 2007, Michael Buesch wrote:
> > On Friday 14 December 2007 13:59:54 Simon Holm Th?gersen wrote:
> > > > This user did get the following messages in dmesg:
> > > > 
> > > > b43err(dev->wl, "Firmware file \"%s\" not found "
> > > >        "or load failed.\n", path);
> > > 
> > > So the question seems to be why b43 needs version 4, when b43legacy and
> > > bcm43x uses version 3?
> > 
> > That's really a question, right?
> > 
> > Well. linux-2.4 doesn't work with the linux-2.6 modutils.
> > Windows Vista doesn't work with Windows 98 device drivers.
> > That leads to this assumption:
> > b43 doesn't work with version 3 firmware but needs version 4.
> > 
> > Newer drivers supporting newer hardware need newer firmware.
> 
> Actually, can you explain why, from the technical point of view, the version 4
> firware is better than version 3, please?

version 4 is the new firmware released by broadcom. They obviously won't
support and write any version 3 firmware anymore. So we are forced to
switch to version 4 firmware to support the newest hardware (like N-PHY
in the future). It's really as simple as that.
The difference between v3 and v4 is basically the driver API. It changed
a lot and it is nontrivial to support both v3 and v4 in one driver.
So we decided to stay with v3 for legacy devices and take v4 for any newer
devices. We have to live with that crap until someone comes up
with an opensource firmware. :)

-- 
Greetings Michael.


From linville at tuxdriver.com  Sat Dec 15 22:43:00 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Sat, 15 Dec 2007 16:43:00 -0500
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <200712150225.52183.rjw@sisk.pl>
References: <20071213003028.676998182@mvista.com>
	<20071214175910.GA27078@elte.hu> <200712141938.10733.mb@bu3sch.de>
	<200712150225.52183.rjw@sisk.pl>
Message-ID: <20071215214300.GC3096@tuxdriver.com>

On Sat, Dec 15, 2007 at 02:25:50AM +0100, Rafael J. Wysocki wrote:
> On Friday, 14 of December 2007, Michael Buesch wrote:

> > Either distributions have to install it automatically or people simply have
> > to read one or two lines of documentation.  That's just what I wanted to say.
> 
> It's not that simple.  For example, regression testing will be a major PITA
> if one needs to switch back and forth from the new driver to the old one in the
> process.

Not really true -- a single system can easily have firmware installed
for b43, b43legacy, and bcm43xx at the same time and switch back and
forth between them.

Given a functioning udev configuration, the persistent naming even
works so that your device stays as 'eth1' when switching to and
fro bcm43xx.  I really think everyone is overstating the problem.

John
-- 
John W. Linville
linville at tuxdriver.com


From rjw at sisk.pl  Sun Dec 16 00:18:43 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sun, 16 Dec 2007 00:18:43 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <200712151157.44278.mb@bu3sch.de>
References: <20071213003028.676998182@mvista.com>
	<200712150151.49025.rjw@sisk.pl> <200712151157.44278.mb@bu3sch.de>
Message-ID: <200712160018.45613.rjw@sisk.pl>

On Saturday, 15 of December 2007, Michael Buesch wrote:
> On Saturday 15 December 2007 01:51:47 Rafael J. Wysocki wrote:
> > On Friday, 14 of December 2007, Michael Buesch wrote:
> > > On Friday 14 December 2007 13:59:54 Simon Holm Th?gersen wrote:
> > > > > This user did get the following messages in dmesg:
> > > > > 
> > > > > b43err(dev->wl, "Firmware file \"%s\" not found "
> > > > >        "or load failed.\n", path);
> > > > 
> > > > So the question seems to be why b43 needs version 4, when b43legacy and
> > > > bcm43x uses version 3?
> > > 
> > > That's really a question, right?
> > > 
> > > Well. linux-2.4 doesn't work with the linux-2.6 modutils.
> > > Windows Vista doesn't work with Windows 98 device drivers.
> > > That leads to this assumption:
> > > b43 doesn't work with version 3 firmware but needs version 4.
> > > 
> > > Newer drivers supporting newer hardware need newer firmware.
> > 
> > Actually, can you explain why, from the technical point of view, the version 4
> > firware is better than version 3, please?
> 
> version 4 is the new firmware released by broadcom. They obviously won't
> support and write any version 3 firmware anymore. So we are forced to
> switch to version 4 firmware to support the newest hardware (like N-PHY
> in the future). It's really as simple as that.

I see, thanks.

> The difference between v3 and v4 is basically the driver API. It changed
> a lot and it is nontrivial to support both v3 and v4 in one driver.
> So we decided to stay with v3 for legacy devices and take v4 for any newer
> devices.

This is reasonable, yes.

> We have to live with that crap until someone comes up with an opensource
> firmware. :) 

Well, the only problem with that is I suspect there are some "newer" cards that
work better with v3 firmware, although they are supposed to support both.

Greetings,
Rafael


From rjw at sisk.pl  Sun Dec 16 00:26:19 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sun, 16 Dec 2007 00:26:19 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071215214300.GC3096@tuxdriver.com>
References: <20071213003028.676998182@mvista.com>
	<200712150225.52183.rjw@sisk.pl>
	<20071215214300.GC3096@tuxdriver.com>
Message-ID: <200712160026.20730.rjw@sisk.pl>

On Saturday, 15 of December 2007, John W. Linville wrote:
> On Sat, Dec 15, 2007 at 02:25:50AM +0100, Rafael J. Wysocki wrote:
> > On Friday, 14 of December 2007, Michael Buesch wrote:
> 
> > > Either distributions have to install it automatically or people simply have
> > > to read one or two lines of documentation.  That's just what I wanted to say.
> > 
> > It's not that simple.  For example, regression testing will be a major PITA
> > if one needs to switch back and forth from the new driver to the old one in the
> > process.
> 
> Not really true -- a single system can easily have firmware installed
> for b43, b43legacy, and bcm43xx at the same time and switch back and
> forth between them.
> 
> Given a functioning udev configuration, the persistent naming even
> works so that your device stays as 'eth1' when switching to and
> fro bcm43xx.

Well, this last bit doesn't work on my openSUSE 10.3.  Honest, guv. ;-)

> I really think everyone is overstating the problem.

You might be right.

Greetings,
Rafael
 


From mb at bu3sch.de  Sun Dec 16 00:27:19 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 16 Dec 2007 00:27:19 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <200712160018.45613.rjw@sisk.pl>
References: <20071213003028.676998182@mvista.com>
	<200712151157.44278.mb@bu3sch.de> <200712160018.45613.rjw@sisk.pl>
Message-ID: <200712160027.19950.mb@bu3sch.de>

On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
> Well, the only problem with that is I suspect there are some "newer" cards that
> work better with v3 firmware, although they are supposed to support both.

And I suspect that you are wrong until you show me one. :)

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sun Dec 16 03:30:16 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 15 Dec 2007 18:30:16 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to	mutex
In-Reply-To: <200712160027.19950.mb@bu3sch.de>
References: <20071213003028.676998182@mvista.com>	<200712151157.44278.mb@bu3sch.de>
	<200712160018.45613.rjw@sisk.pl> <200712160027.19950.mb@bu3sch.de>
Message-ID: <47648DB8.1080205@lwfinger.net>

Michael Buesch wrote:
> On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
>> Well, the only problem with that is I suspect there are some "newer" cards that
>> work better with v3 firmware, although they are supposed to support both.
> 
> And I suspect that you are wrong until you show me one. :)

The BCM4311/1 card used to work better with bcm43xx than it did with b43; however, since the power 
control problem was "solved" in b43, there is very little difference. When I built my special system 
to use the BCM4311 with b43legacy, there was no difference.

I don't know of any cards that work better with bcm43xx than with b43. Of course, that is comparing 
SoftMAC with mac80211. There is, of course, no comparison.

Larry




From mb at bu3sch.de  Sun Dec 16 12:13:15 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 16 Dec 2007 12:13:15 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	=?iso-8859-1?q?to=09mutex?=
In-Reply-To: <47648DB8.1080205@lwfinger.net>
References: <20071213003028.676998182@mvista.com>
	<200712160027.19950.mb@bu3sch.de> <47648DB8.1080205@lwfinger.net>
Message-ID: <200712161213.15701.mb@bu3sch.de>

On Sunday 16 December 2007 03:30:16 Larry Finger wrote:
> Michael Buesch wrote:
> > On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
> >> Well, the only problem with that is I suspect there are some "newer" cards that
> >> work better with v3 firmware, although they are supposed to support both.
> > 
> > And I suspect that you are wrong until you show me one. :)
> 
> The BCM4311/1 card used to work better with bcm43xx than it did with b43; however, since the power 
> control problem was "solved" in b43, there is very little difference. When I built my special system 
> to use the BCM4311 with b43legacy, there was no difference.
> 
> I don't know of any cards that work better with bcm43xx than with b43. Of course, that is comparing 
> SoftMAC with mac80211. There is, of course, no comparison.

This was about version 3 firmware vs version 4 firmware.
I doubt the firmware makes any difference at all.

-- 
Greetings Michael.


From mb at bu3sch.de  Sun Dec 16 12:23:00 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 16 Dec 2007 12:23:00 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <20071216092243.GB27280@elte.hu>
References: <20071213003028.676998182@mvista.com>
	<20071215214300.GC3096@tuxdriver.com>
	<20071216092243.GB27280@elte.hu>
Message-ID: <200712161223.01374.mb@bu3sch.de>

On Sunday 16 December 2007 10:22:43 Ingo Molnar wrote:
> 
> * John W. Linville <linville at tuxdriver.com> wrote:
> 
> > > It's not that simple.  For example, regression testing will be a 
> > > major PITA if one needs to switch back and forth from the new driver 
> > > to the old one in the process.
> > 
> > Not really true -- a single system can easily have firmware installed 
> > for b43, b43legacy, and bcm43xx at the same time and switch back and 
> > forth between them.
> 
> as long as the version 4 firmware blob is present in the system, will 
> testers have a fully fluid test- and work-flow when migrating across 
> from bcm43xx to b43, without any other changes to an existing Linux 
> installation? (i.e. no udev tweaks, no forced upgrades of components, 
> etc.)
> 
> Will it Just Work in bisection as well, when a tester's kernel 
> flip/flops between bcm43xx and b43 - like it does for the other 3000+ 
> drivers in the kernel?
> 
> Note that we are _NOT_ interested in "might" or "can" scenarios. We are 
> interested in preserving the _existing_ bcm43xx installed base and how 
> much of a seemless migration the b43 transition will be. _THAT_ is what 
> the "no regressions" upstream rule is about, not the "ideal distro" 
> scenario you outline above. It is YOUR total obligation as a kernel 
> maintainer to ensure that you dont break old installations. How hard is 
> that to understand? This is not rocket science.

I see no reason for b43 to break, if the firmware is properly installed.
In fact, almost all installation related bugreports we receive are
caused by missing or incorrectly installed firmware.
I would really _like_ to make installing firmware easier or make the
whole need for it vanish, but I simply can not at this point.
But anyway, installing it is not rocket science, either. The only thing
you have to know is where your distribution stores the firmware image files.
If you know that it's a matter of invoking one b43-fwcutter command
to install it. This process can be automated in the distribution's rpm
or deb package scripts.

b43lagacy/ssb is completely featured with module autoload support.
So if you have firmware installed it will automatically load all required
modules and create the network device(s) for it without any user interaction.

If that doesn't work, then stupid distributions are shipping braindamaged
udev scripts that pin a mac address to a specific driver name (see another
mail in this thread). I can _not_ fix this from within the kernel and
I will absolutely shift all responsibility and blame for this to the
maintainers of the distribution's udev scripts.
That's not a b43 specific problem then. Other drivers do break with these
scripts, too.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Sun Dec 16 14:56:59 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 16 Dec 2007 14:56:59 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <200712160027.19950.mb@bu3sch.de>
	(sfid-20071215_232959_683038_2539BF80)
References: <20071213003028.676998182@mvista.com>
	<200712151157.44278.mb@bu3sch.de> <200712160018.45613.rjw@sisk.pl>
	<200712160027.19950.mb@bu3sch.de>
	(sfid-20071215_232959_683038_2539BF80)
Message-ID: <1197813419.16079.66.camel@johannes.berg>


On Sun, 2007-12-16 at 00:27 +0100, Michael Buesch wrote:
> On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
> > Well, the only problem with that is I suspect there are some "newer" cards that
> > work better with v3 firmware, although they are supposed to support both.

Impossible. The firmware is only the MAC.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071216/50a01a5a/attachment.pgp>

From rjw at sisk.pl  Sun Dec 16 15:35:25 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sun, 16 Dec 2007 15:35:25 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <1197813419.16079.66.camel@johannes.berg>
References: <20071213003028.676998182@mvista.com>
	<200712160027.19950.mb@bu3sch.de>
	<1197813419.16079.66.camel@johannes.berg>
Message-ID: <200712161535.27261.rjw@sisk.pl>

On Sunday, 16 of December 2007, Johannes Berg wrote:
> 
> On Sun, 2007-12-16 at 00:27 +0100, Michael Buesch wrote:
> > On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
> > > Well, the only problem with that is I suspect there are some "newer" cards that
> > > work better with v3 firmware, although they are supposed to support both.
> 
> Impossible. The firmware is only the MAC.

OK

Thanks,
Rafael


From johannes at sipsolutions.net  Sun Dec 16 15:18:13 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 16 Dec 2007 15:18:13 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <200712161535.27261.rjw@sisk.pl>
References: <20071213003028.676998182@mvista.com>
	<200712160027.19950.mb@bu3sch.de>
	<1197813419.16079.66.camel@johannes.berg>
	<200712161535.27261.rjw@sisk.pl>
Message-ID: <1197814693.16079.68.camel@johannes.berg>


> > On Sun, 2007-12-16 at 00:27 +0100, Michael Buesch wrote:
> > > On Sunday 16 December 2007 00:18:43 Rafael J. Wysocki wrote:
> > > > Well, the only problem with that is I suspect there are some "newer" cards that
> > > > work better with v3 firmware, although they are supposed to support both.
> > 
> > Impossible. The firmware is only the MAC.
> 
> OK

I should probably mention though that of course it is (in theory!)
possible that the card works better with bcm43xx, it just never has
happened for all I know.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071216/20dc1d65/attachment.pgp>

From gavron at wetwork.net  Mon Dec 17 01:50:06 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Sun, 16 Dec 2007 17:50:06 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
Message-ID: <4765C7BE.9010905@wetwork.net>

First, thanks for making the LED light up again, Larry and Michael.

If I use the kill-switch both the WiFi and the BT LEDs go off.
When I switch back on the BT LED lights but the WiFi does not.
Dmesg shows:
Dec 16 17:43:30 egdell kernel: input: b43-phy0 as /class/input/input11
Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:tx
Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:rx
Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:radio
Dec 16 17:43:31 egdell kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
Dec 16 17:44:17 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
becomes ready
Dec 16 17:44:45 egdell kernel: usb 1-2.4: USB disconnect, address 4
Dec 16 17:44:45 egdell kernel: b43-phy0: Radio hardware status changed 
to DISABLED
Dec 16 17:44:49 egdell kernel: b43-phy0: Radio turned on by software
Dec 16 17:44:49 egdell kernel: b43-phy0: The hardware RF-kill button 
still turns the radio physically off. Press the button to turn it on.
Dec 16 17:44:58 egdell kernel: usb 1-2.4: new full speed USB device 
using ehci_hcd and address 6
Dec 16 17:44:58 egdell kernel: usb 1-2.4: configuration #1 chosen from 1 
choice
Dec 16 17:44:58 egdell kernel: b43-phy0: Radio hardware status changed 
to ENABLED
Dec 16 17:45:01 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
becomes ready
Dec 16 17:45:02 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
becomes ready

Reloading b43 (modprobe -r b43 && modprobe b43) restores the WiFi LED.

Having glanced at Michael's last patch to avoid the race condition... I 
know that code is beyond me.

Ehud


From linux-ra at anet.at  Mon Dec 17 02:46:29 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Mon, 17 Dec 2007 02:46:29 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712130020.30700.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>
Message-ID: <968046380.20071217024629@anet.at>

On Thu, 13 Dec 2007, 00:20 GMT+01 Michael Buesch wrote:

> On Wednesday 12 December 2007 23:48:10 Robert Allerstorfer wrote:
>> Before starting wpa_supplicant:
>> [root at localhost ~]# dmesg | egrep 'b43|ssb|wlan0|wmaster0'
>> ssb: SPROM revision 1 detected.
>> ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
>> b43-phy0: Broadcom 4306 WLAN found
>> b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
>> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
>> b43-phy0 debug: Loading firmware version 351.126 (2006-07-29 05:54:02)
>> Registered led device: b43-phy0:tx
>> Registered led device: b43-phy0:rx
>> b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=42, tgt=62). Disabling TX power adjustment.

> Hm, that's probably a false positive.
> Please locate the function b43_phy_init_pctl() inside of
> drivers/net/wireless/b43/phy.c
> Locate these lines inside of the function:
>                 if (B43_DEBUG) {
>                         /* Current-Idle-TSSI sanity check. */
>                         if (abs(phy->cur_idle_tssi - phy->tgt_idle_tssi) >= 20) {
>                                 b43dbg(dev->wl,
>                                        "!WARNING! Idle-TSSI phy->cur_idle_tssi "
>                                        "measuring failed. (cur=%d, tgt=%d). Disabling TX power "
>                                        "adjustment.\n", phy->cur_idle_tssi,
>                                        phy->tgt_idle_tssi);
>                                 phy->cur_idle_tssi = 0;
>                         }
>                 }

> Please change the
>                 if (B43_DEBUG) {
> into
>                 if (0) {

The strange thing is that the "b43-phy0 debug: !WARNING!..." line
disappeared from the dmesg output after I replaced ssb.ko by a
self-compiled version (and - of course - rebooted).

All other kernel files have kept exactly the same (originating from
kernel-2.6.23.9-90.fc8.ppc.rpm grabbed from
http://koji.fedoraproject.org/). The original ssb.ko has been built
without defining CONFIG_SSB_DEBUG, while I turned CONFIG_SSB_DEBUG on.
Executing "dmesg | egrep 'b43|ssb|wlan0|wmaster0'" now begins with the
following 5 additional lines:
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x04, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x02, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x02, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x09, vendor 0x4243)

According to http://linuxwireless.org/en/users/Drivers/b43 "the full
MAC core version is printed in the kernel logs when "SSB debugging" is
enabled in KConfig and the driver finds a board." So, could someone
please explain which of the 5 SSB debug dmesg lines prints "the full
MAC core version"? I am curios about this to be sure if my system
needs the b43 or the b43legacy driver.

Thanks.




From larry.finger at lwfinger.net  Mon Dec 17 07:52:17 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 16 Dec 2007 22:52:17 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <520b60a90712161817uaa2d1a8y5dfb13b586ca30ad@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>	
	<200712141404.24275.mb@bu3sch.de> <200712150151.49025.rjw@sisk.pl>	
	<476326A1.6090404@lwfinger.net>	
	<520b60a90712141759h65f1e63ei65ba00887a930d06@mail.gmail.com>	
	<47633BAE.6040604@lwfinger.net>	
	<520b60a90712142037j14d54de5nf5657ab2927fb3f5@mail.gmail.com>	
	<520b60a90712142039t539faeddo68e73816fe1b3237@mail.gmail.com>	
	<47637FDA.2030303@lwfinger.net>	
	<520b60a90712150438p1f0ae40bt5975b494ab75203c@mail.gmail.com>
	<520b60a90712161817uaa2d1a8y5dfb13b586ca30ad@mail.gmail.com>
Message-ID: <47661CA1.3080808@lwfinger.net>

mvtodevnull at gmail.com wrote:
> On Dec 15, 2007 7:38 AM,  <mvtodevnull at gmail.com> wrote:
>> I'll build latest wireless git without ipv6 late tonight.
> 
> Ok, built and tested, and it's actually faster! Although still not as
> fast as bcm43xx or softmac or whatever the problem is, I was getting a
> steady 200 kB/s (as opposed to 500 kB/s for bcm43xx with the same
> file/server). I'm not sure if it was the absence of ipv6 or the
> commits included in updating my git repository though. Either way, I'm
> fairly happy that I'm out of dial-up speed territory.
> 
> It'd be nice to be able to fully shake loose whatever is causing the
> speed drain - and I call it a drain since sometimes the connection
> starts out much faster, but slowly throttles down to whatever speed
> it'll stick at (used to be 40 kB/s, but now is 200 kB/s). It does seem
> to be like a cap or limit, as in if I download two files, each one
> will download at 100 kB/s.
> 
> If anyone can help I'd really appreciate it. I know that bcm43xx will
> someday be dropped, and when that day comes, it'd be nice if people
> with this hardware have at least similar performance with b43 (myself
> especially).

One major difference between bcm43xx-SoftMAC and b43-mac80211 is that the former always used a fixed
rate; whereas mac80211 tries to adjust the bit rate according to the transmission conditions.
Perhaps it isn't working quite right in your case because of some peculiarity of your AP. IIRC, you
have an 802.11b AP. If so, you will get the same bit speed behavior for mac80211 as for bcdm43xx by
issuing a 'sudo iwconfig eth1 rate 11M' command.

Larry


From larry.finger at lwfinger.net  Mon Dec 17 08:06:22 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 16 Dec 2007 23:06:22 -0800
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4765C7BE.9010905@wetwork.net>
References: <4765C7BE.9010905@wetwork.net>
Message-ID: <47661FEE.7050400@lwfinger.net>

Ehud Gavron wrote:
> First, thanks for making the LED light up again, Larry and Michael.
> 
> If I use the kill-switch both the WiFi and the BT LEDs go off.
> When I switch back on the BT LED lights but the WiFi does not.
> Dmesg shows:
> Dec 16 17:43:30 egdell kernel: input: b43-phy0 as /class/input/input11
> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:tx
> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:rx
> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:radio
> Dec 16 17:43:31 egdell kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
> Dec 16 17:44:17 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
> becomes ready
> Dec 16 17:44:45 egdell kernel: usb 1-2.4: USB disconnect, address 4
> Dec 16 17:44:45 egdell kernel: b43-phy0: Radio hardware status changed 
> to DISABLED
> Dec 16 17:44:49 egdell kernel: b43-phy0: Radio turned on by software
> Dec 16 17:44:49 egdell kernel: b43-phy0: The hardware RF-kill button 
> still turns the radio physically off. Press the button to turn it on.
> Dec 16 17:44:58 egdell kernel: usb 1-2.4: new full speed USB device 
> using ehci_hcd and address 6
> Dec 16 17:44:58 egdell kernel: usb 1-2.4: configuration #1 chosen from 1 
> choice
> Dec 16 17:44:58 egdell kernel: b43-phy0: Radio hardware status changed 
> to ENABLED
> Dec 16 17:45:01 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
> becomes ready
> Dec 16 17:45:02 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
> becomes ready
> 
> Reloading b43 (modprobe -r b43 && modprobe b43) restores the WiFi LED.
> 
> Having glanced at Michael's last patch to avoid the race condition... I 
> know that code is beyond me.

As long as you are using the latest "everything" branch wireless-2.6, and rfkill-input is built for
your system, it would seem that KEY_WLAN (238) is not the code needed to turn your radio LED on. Is
it possible for you to check that out?

Larry


From gavron at wetwork.net  Mon Dec 17 08:09:15 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Mon, 17 Dec 2007 00:09:15 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <47661FEE.7050400@lwfinger.net>
References: <4765C7BE.9010905@wetwork.net> <47661FEE.7050400@lwfinger.net>
Message-ID: <4766209B.5040106@wetwork.net>



Larry Finger wrote:
> Ehud Gavron wrote:
>   
>> First, thanks for making the LED light up again, Larry and Michael.
>>
>> If I use the kill-switch both the WiFi and the BT LEDs go off.
>> When I switch back on the BT LED lights but the WiFi does not.
>> Dmesg shows:
>> Dec 16 17:43:30 egdell kernel: input: b43-phy0 as /class/input/input11
>> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:tx
>> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:rx
>> Dec 16 17:43:31 egdell kernel: Registered led device: b43-phy0:radio
>> Dec 16 17:43:31 egdell kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
>> Dec 16 17:44:17 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
>> becomes ready
>> Dec 16 17:44:45 egdell kernel: usb 1-2.4: USB disconnect, address 4
>> Dec 16 17:44:45 egdell kernel: b43-phy0: Radio hardware status changed 
>> to DISABLED
>> Dec 16 17:44:49 egdell kernel: b43-phy0: Radio turned on by software
>> Dec 16 17:44:49 egdell kernel: b43-phy0: The hardware RF-kill button 
>> still turns the radio physically off. Press the button to turn it on.
>> Dec 16 17:44:58 egdell kernel: usb 1-2.4: new full speed USB device 
>> using ehci_hcd and address 6
>> Dec 16 17:44:58 egdell kernel: usb 1-2.4: configuration #1 chosen from 1 
>> choice
>> Dec 16 17:44:58 egdell kernel: b43-phy0: Radio hardware status changed 
>> to ENABLED
>> Dec 16 17:45:01 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
>> becomes ready
>> Dec 16 17:45:02 egdell kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link 
>> becomes ready
>>
>> Reloading b43 (modprobe -r b43 && modprobe b43) restores the WiFi LED.
>>
>> Having glanced at Michael's last patch to avoid the race condition... I 
>> know that code is beyond me.
>>     
>
> As long as you are using the latest "everything" branch wireless-2.6, and rfkill-input is built for
> your system, it would seem that KEY_WLAN (238) is not the code needed to turn your radio LED on. Is
> it possible for you to check that out?
>
> Larry
>   
Larry, I'm using the latest "everything" branch.  How do I find that code?

E


From johannes at sipsolutions.net  Mon Dec 17 10:05:41 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 17 Dec 2007 10:05:41 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <968046380.20071217024629@anet.at>
	(sfid-20071217_021554_614048_381C61EA)
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>  <968046380.20071217024629@anet.at>
	(sfid-20071217_021554_614048_381C61EA)
Message-ID: <1197882341.4885.12.camel@johannes.berg>


> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x04, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
                MAC core ID       ^^^^^^^^
                MAC core revision           ^^^^^^^^
             
> According to http://linuxwireless.org/en/users/Drivers/b43 "the full
> MAC core version is printed in the kernel logs when "SSB debugging" is
> enabled in KConfig and the driver finds a board." So, could someone
> please explain which of the 5 SSB debug dmesg lines prints "the full
> MAC core version"? I am curios about this to be sure if my system
> needs the b43 or the b43legacy driver.

The MAC core revision is >=5 so you need b43.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071217/60c3e9e5/attachment.pgp>

From mb at bu3sch.de  Mon Dec 17 10:49:05 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 10:49:05 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <520b60a90712162317r5c2f2569gbd75c09742ff5493@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<47661CA1.3080808@lwfinger.net>
	<520b60a90712162317r5c2f2569gbd75c09742ff5493@mail.gmail.com>
Message-ID: <200712171049.06291.mb@bu3sch.de>

On Monday 17 December 2007 08:17:58 mvtodevnull at gmail.com wrote:
> On Dec 17, 2007 1:52 AM, Larry Finger <larry.finger at lwfinger.net> wrote:
> >
> > One major difference between bcm43xx-SoftMAC and b43-mac80211 is that the former always used a fixed
> > rate; whereas mac80211 tries to adjust the bit rate according to the transmission conditions.
> > Perhaps it isn't working quite right in your case because of some peculiarity of your AP. IIRC, you
> > have an 802.11b AP. If so, you will get the same bit speed behavior for mac80211 as for bcdm43xx by
> > issuing a 'sudo iwconfig eth1 rate 11M' command.
> 
> I don't know what happened before, but after a reboot, I can't repeat
> the 200 kB/s speed. It's back down to 40 kB/s, just like originally. I
> didn't move the laptop, or the ap, the only thing I can think of that
> might have changed is the noise level. FWIW, link quality is
> consistently the same or better with b43.
> 
> Anyway, I'd noticed before that the bit rate starts at 1 Mb/s and
> quickly scales to 11 Mb/s, but I tried setting it manually anyway and
> didn't see any change. In fact, I set the rate to 5.5 Mb/s as well as
> 1 Mb/s and the download speed was the same with all three (around
> 30-40 kB/s).

Are you working with wireless-2.6's #everything branch?

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Dec 17 11:00:00 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 11:00:00 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <968046380.20071217024629@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>
	<968046380.20071217024629@anet.at>
Message-ID: <200712171100.00503.mb@bu3sch.de>

On Monday 17 December 2007 02:46:29 Robert Allerstorfer wrote:
> On Thu, 13 Dec 2007, 00:20 GMT+01 Michael Buesch wrote:
> 
> > On Wednesday 12 December 2007 23:48:10 Robert Allerstorfer wrote:
> >> Before starting wpa_supplicant:
> >> [root at localhost ~]# dmesg | egrep 'b43|ssb|wlan0|wmaster0'
> >> ssb: SPROM revision 1 detected.
> >> ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
> >> b43-phy0: Broadcom 4306 WLAN found
> >> b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
> >> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
> >> b43-phy0 debug: Loading firmware version 351.126 (2006-07-29 05:54:02)
> >> Registered led device: b43-phy0:tx
> >> Registered led device: b43-phy0:rx
> >> b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=42, tgt=62). Disabling TX power adjustment.
> 
> > Hm, that's probably a false positive.
> > Please locate the function b43_phy_init_pctl() inside of
> > drivers/net/wireless/b43/phy.c
> > Locate these lines inside of the function:
> >                 if (B43_DEBUG) {
> >                         /* Current-Idle-TSSI sanity check. */
> >                         if (abs(phy->cur_idle_tssi - phy->tgt_idle_tssi) >= 20) {
> >                                 b43dbg(dev->wl,
> >                                        "!WARNING! Idle-TSSI phy->cur_idle_tssi "
> >                                        "measuring failed. (cur=%d, tgt=%d). Disabling TX power "
> >                                        "adjustment.\n", phy->cur_idle_tssi,
> >                                        phy->tgt_idle_tssi);
> >                                 phy->cur_idle_tssi = 0;
> >                         }
> >                 }
> 
> > Please change the
> >                 if (B43_DEBUG) {
> > into
> >                 if (0) {
> 
> The strange thing is that the "b43-phy0 debug: !WARNING!..." line
> disappeared from the dmesg output after I replaced ssb.ko by a
> self-compiled version (and - of course - rebooted).

Which version of ssb were you using before and which one are you using now?
Can you make a diff -u?

> All other kernel files have kept exactly the same (originating from
> kernel-2.6.23.9-90.fc8.ppc.rpm grabbed from
> http://koji.fedoraproject.org/). The original ssb.ko has been built
> without defining CONFIG_SSB_DEBUG, while I turned CONFIG_SSB_DEBUG on.
> Executing "dmesg | egrep 'b43|ssb|wlan0|wmaster0'" now begins with the
> following 5 additional lines:
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x04, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
                                            ^^^^^^^^
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x02, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x02, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x09, vendor 0x4243)
> 
> According to http://linuxwireless.org/en/users/Drivers/b43 "the full
> MAC core version is printed in the kernel logs when "SSB debugging" is
> enabled in KConfig and the driver finds a board." So, could someone
> please explain which of the 5 SSB debug dmesg lines prints "the full
> MAC core version"?

rev 5

> I am curios about this to be sure if my system 
> needs the b43 or the b43legacy driver.

It will automatically load the right one.

-- 
Greetings Michael.


From linux-ra at anet.at  Mon Dec 17 13:36:28 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Mon, 17 Dec 2007 13:36:28 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <1197882341.4885.12.camel@johannes.berg>
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>
	<968046380.20071217024629@anet.at>
	(sfid-20071217_021554_614048_381C61EA)
	<1197882341.4885.12.camel@johannes.berg>
Message-ID: <857571662.20071217133628@anet.at>

On Mon, 17 Dec 2007, 10:05 GMT+01 Johannes Berg wrote:

>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
>                 MAC core ID       ^^^^^^^^
>                 MAC core revision           ^^^^^^^^

> The MAC core revision is >=5 so you need b43.

Thank you for making this clear.

rob.



From linux-ra at anet.at  Mon Dec 17 13:49:00 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Mon, 17 Dec 2007 13:49:00 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712171100.00503.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712130020.30700.mb@bu3sch.de>
	<968046380.20071217024629@anet.at>
	<200712171100.00503.mb@bu3sch.de>
Message-ID: <14237568.20071217134900@anet.at>

On Mon, 17 Dec 2007, 11:00 GMT+01 Michael Buesch wrote:

> On Monday 17 December 2007 02:46:29 Robert Allerstorfer wrote:
>> The strange thing is that the "b43-phy0 debug: !WARNING!..." line
>> disappeared from the dmesg output after I replaced ssb.ko by a
>> self-compiled version (and - of course - rebooted).

> Which version of ssb were you using before and which one are you using now?
> Can you make a diff -u?

Both ssb.ko binaries have been built from the same source, so their
versions must be the same. However, I have now found that replacing
ssb.ko had nothing to do with the b43-phy0 debug warning. After
rebooting several times, the output of "dmesg | egrep
'b43|ssb|wlan0|wmaster0'" sometimes contains such a warning line and
sometimes it doesn't. If it is there, the number NN of the "cur=NN"
part can differ. I have seen cur=42 or cur=38 so far:

b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
failed. (cur=42, tgt=62). Disabling TX power adjustment. 

b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
failed. (cur=38, tgt=62). Disabling TX power adjustment.

Why can this warning be different or ebven absent after each reboot?

Best,
rob.



From mb at bu3sch.de  Mon Dec 17 13:53:16 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 13:53:16 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <14237568.20071217134900@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171100.00503.mb@bu3sch.de> <14237568.20071217134900@anet.at>
Message-ID: <200712171353.16244.mb@bu3sch.de>

On Monday 17 December 2007 13:49:00 Robert Allerstorfer wrote:
> On Mon, 17 Dec 2007, 11:00 GMT+01 Michael Buesch wrote:
> 
> > On Monday 17 December 2007 02:46:29 Robert Allerstorfer wrote:
> >> The strange thing is that the "b43-phy0 debug: !WARNING!..." line
> >> disappeared from the dmesg output after I replaced ssb.ko by a
> >> self-compiled version (and - of course - rebooted).
> 
> > Which version of ssb were you using before and which one are you using now?
> > Can you make a diff -u?
> 
> Both ssb.ko binaries have been built from the same source, so their
> versions must be the same. However, I have now found that replacing
> ssb.ko had nothing to do with the b43-phy0 debug warning. After
> rebooting several times, the output of "dmesg | egrep
> 'b43|ssb|wlan0|wmaster0'" sometimes contains such a warning line and
> sometimes it doesn't.

Expected. So try the workaround I suggested earlier.

> If it is there, the number NN of the "cur=NN" 
> part can differ. I have seen cur=42 or cur=38 so far:
> 
> b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
> failed. (cur=42, tgt=62). Disabling TX power adjustment. 
> 
> b43-phy0 debug: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
> failed. (cur=38, tgt=62). Disabling TX power adjustment.
> 
> Why can this warning be different or ebven absent after each reboot?

Because the "cur" value is a measured value which can have jitter.

-- 
Greetings Michael.


From linux-ra at anet.at  Mon Dec 17 14:43:37 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Mon, 17 Dec 2007 14:43:37 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712171353.16244.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712171100.00503.mb@bu3sch.de> <14237568.20071217134900@anet.at>
	<200712171353.16244.mb@bu3sch.de>
Message-ID: <972635701.20071217144337@anet.at>

On Mon, 17 Dec 2007, 13:53 GMT+01 Michael Buesch wrote:

> On Monday 17 December 2007 13:49:00 Robert Allerstorfer wrote:
>> After
>> rebooting several times, the output of "dmesg | egrep
>> 'b43|ssb|wlan0|wmaster0'" sometimes contains such a warning line and
>> sometimes it doesn't.

> Expected. So try the workaround I suggested earlier.

But shouldn't setting/unsetting B43_DEBUG only affect the verbosity
level of the kernel messages, but not change any functionality?

rob.



From mb at bu3sch.de  Mon Dec 17 14:46:20 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 14:46:20 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <972635701.20071217144337@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171353.16244.mb@bu3sch.de>
	<972635701.20071217144337@anet.at>
Message-ID: <200712171446.20770.mb@bu3sch.de>

On Monday 17 December 2007 14:43:37 Robert Allerstorfer wrote:
> On Mon, 17 Dec 2007, 13:53 GMT+01 Michael Buesch wrote:
> 
> > On Monday 17 December 2007 13:49:00 Robert Allerstorfer wrote:
> >> After
> >> rebooting several times, the output of "dmesg | egrep
> >> 'b43|ssb|wlan0|wmaster0'" sometimes contains such a warning line and
> >> sometimes it doesn't.
> 
> > Expected. So try the workaround I suggested earlier.
> 
> But shouldn't setting/unsetting B43_DEBUG only affect the verbosity
> level of the kernel messages, but not change any functionality?

No.

-- 
Greetings Michael.


From linux-ra at anet.at  Mon Dec 17 15:09:32 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Mon, 17 Dec 2007 15:09:32 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712171446.20770.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712171353.16244.mb@bu3sch.de>
	<972635701.20071217144337@anet.at>
	<200712171446.20770.mb@bu3sch.de>
Message-ID: <1724934625.20071217150932@anet.at>

On Mon, 17 Dec 2007, 14:46 GMT+01 Michael Buesch wrote:

> On Monday 17 December 2007 14:43:37 Robert Allerstorfer wrote:
>> But shouldn't setting/unsetting B43_DEBUG only affect the verbosity
>> level of the kernel messages, but not change any functionality?

> No.

Aha, reading the corresponding section of Kconfig (in the Fedora build
system of my ppc machine residing in
/usr/src/redhat/BUILD/kernel-2.6.23/linux-2.6.23.ppc/drivers/net/wireless/b43/) gave me the impression that it would:

config B43_DEBUG
        bool "Broadcom 43xx debugging"
        depends on B43
        ---help---
          Broadcom 43xx debugging messages.

          Say Y, if you want to find out why the driver does not
          work for yo

So that means enabling Broadcom 43xx debugging may disable
functionality?

rob.





From mb at bu3sch.de  Mon Dec 17 15:14:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 15:14:47 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <1724934625.20071217150932@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171446.20770.mb@bu3sch.de>
	<1724934625.20071217150932@anet.at>
Message-ID: <200712171514.48013.mb@bu3sch.de>

On Monday 17 December 2007 15:09:32 Robert Allerstorfer wrote:
> On Mon, 17 Dec 2007, 14:46 GMT+01 Michael Buesch wrote:
> 
> > On Monday 17 December 2007 14:43:37 Robert Allerstorfer wrote:
> >> But shouldn't setting/unsetting B43_DEBUG only affect the verbosity
> >> level of the kernel messages, but not change any functionality?
> 
> > No.
> 
> Aha, reading the corresponding section of Kconfig (in the Fedora build
> system of my ppc machine residing in
> /usr/src/redhat/BUILD/kernel-2.6.23/linux-2.6.23.ppc/drivers/net/wireless/b43/) gave me the impression that it would:
> 
> config B43_DEBUG
>         bool "Broadcom 43xx debugging"
>         depends on B43
>         ---help---
>           Broadcom 43xx debugging messages.
> 
>           Say Y, if you want to find out why the driver does not
>           work for yo
> 
> So that means enabling Broadcom 43xx debugging may disable
> functionality?

Oh, come on...
It will enable or disable the driver debugging features. If you don't
like the word "messages" in the help text please submit a patch.

Please test what I suggested.

-- 
Greetings Michael.


From hs4233 at mail.mn-solutions.de  Mon Dec 17 15:28:55 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Mon, 17 Dec 2007 15:28:55 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <1724934625.20071217150932@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171446.20770.mb@bu3sch.de>
	<1724934625.20071217150932@anet.at>
Message-ID: <200712171528.56055.hs4233@mail.mn-solutions.de>

On Monday 17 December 2007 15:09:32 Robert Allerstorfer wrote:
>>> But shouldn't setting/unsetting B43_DEBUG only affect the
>>> verbosity level of the kernel messages, but not change any
>>> functionality? 

>> No.

> So that means enabling Broadcom 43xx debugging may disable
> functionality?

You're confused :-)


When you turn debugging on, you'll get a variety of additional 
debug messages into your kernel log. You expected them all to be 
identical, but they aren't necessarily. For example, the value 
after cur= is a value that has actually been measured, so don't 
assume that it stays all the time at exactly the same value. It 
depends on your (physical) circumstances what get's measured and 
printed.


The "No" was the answer to the last part of your question. "No, 
it should not change functionality" is a more verbose form.



Note that there might be rare situations where turning on debug 
messages change functionality: in the case of race-conditions. 
I'll leave the explanation of this to your google skills :-)


From mark.hagger at m-spatial.com  Mon Dec 17 15:39:04 2007
From: mark.hagger at m-spatial.com (Mark Hagger)
Date: Mon, 17 Dec 2007 14:39:04 +0000
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712171528.56055.hs4233@mail.mn-solutions.de>
References: <1942722038.20071212234810@anet.at>
	<200712171446.20770.mb@bu3sch.de> <1724934625.20071217150932@anet.at>
	<200712171528.56055.hs4233@mail.mn-solutions.de>
Message-ID: <1197902344.24235.633.camel@giga.cambridge.m-spatial.com>

On Mon, 2007-12-17 at 15:28 +0100, Holger Schurig wrote:

> 
> Note that there might be rare situations where turning on debug 
> messages change functionality: in the case of race-conditions. 
> I'll leave the explanation of this to your google skills :-)

It is of course a, shall we say, not uncommon problem in software
engineering that switching on debugging makes code work perfectly...at
which point you complain bitterly to the original complainant that the
bug they raised is in fact completely bogus.  Only to feel slightly
embarrassed later on...

Mark


> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 
> ________________________________________________________________________
> This email has been scanned for all known viruses by the MessageLabs SkyScan service.


________________________________________________________________________
This email has been scanned for all known viruses by the MessageLabs SkyScan service.


From gavron at wetwork.net  Mon Dec 17 18:45:06 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Mon, 17 Dec 2007 10:45:06 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <47661FEE.7050400@lwfinger.net>
References: <4765C7BE.9010905@wetwork.net> <47661FEE.7050400@lwfinger.net>
Message-ID: <4766B5A2.8010506@wetwork.net>



Larry Finger wrote:
> Ehud Gavron wrote:
>   
...
>> If I use the kill-switch both the WiFi and the BT LEDs go off.
>> When I switch back on the BT LED lights but the WiFi does not.
> As long as you are using the latest "everything" branch wireless-2.6, and rfkill-input is built for
> your system, it would seem that KEY_WLAN (238) is not the code needed to turn your radio LED on. Is
> it possible for you to check that out?
>
>   
The following corrects the problem:
sudo setkeycodes e011 238

I'm not sure why it's not defined permanently or why I need to manually 
define it, but I can google that offlist. It's not a b43 issue.

For reference on other Dell'isms:
http://giel.operation0.org/keyboard-soft-release/hotkey-setup/dell.hk

Ehud


From larry.finger at lwfinger.net  Mon Dec 17 20:06:05 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 17 Dec 2007 11:06:05 -0800
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4766209B.5040106@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <47661FEE.7050400@lwfinger.net>
	<4766209B.5040106@wetwork.net>
Message-ID: <4766C89D.3000701@lwfinger.net>

Ehud,

One possibility that I didn't think about before is that your LED mapping in the SPROM has some
quirk that is not handled properly. Please run the following two commands

SSB_SPROM=$(find /sys -name ssb_sprom)
sudo cat $SSB_SPROM > sprom.txt

and mail me the file sprom.txt that results.

Thanks,

Larry



From mb at bu3sch.de  Mon Dec 17 23:45:19 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 17 Dec 2007 23:45:19 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <520b60a90712171404v647d3d62h69e61d223040779b@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<520b60a90712170235p4c0bc0f5ybf64da0853f06d6@mail.gmail.com>
	<520b60a90712171404v647d3d62h69e61d223040779b@mail.gmail.com>
Message-ID: <200712172345.20710.mb@bu3sch.de>

On Monday 17 December 2007 23:04:37 mvtodevnull at gmail.com wrote:
> On Dec 17, 2007 5:35 AM,  <mvtodevnull at gmail.com> wrote:
> > If this is a mac80211 related problem, then other systems connecting
> > to the same ap and using mac80211 would also be affected? Like I said
> > earlier, there are five machines connecting to this ap, and I just
> > realized one of them has a ralink card that uses the rt2x00 driver,
> > which I believe is mac80211. That system doesn't have this problem,
> > which leads me to believe it may not be mac80211 after all, although I
> > wouldn't rule it out.
> >
> 
> This also doesn't seem to be related to firmware version. I forced my
> device to use b43legacy, and the results were identical with the
> version 3 firmware.

Ehm, excuse me.
What are you doing exactly? In this thread you told me you have
a device which requires b43:

> I don't know what happened before, but after a reboot, I can't repeat
> the 200 kB/s speed. It's back down to 40 kB/s, just like originally. I
> didn't move the laptop, or the ap, the only thing I can think of that
> might have changed is the noise level. FWIW, link quality is
> consistently the same or better with b43.

How the hell can you now "force it to use b43legacy"??

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 18 00:18:56 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 00:18:56 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <520b60a90712171512vcab7fb6of7732466ccb85996@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>
	<200712172345.20710.mb@bu3sch.de>
	<520b60a90712171512vcab7fb6of7732466ccb85996@mail.gmail.com>
Message-ID: <200712180018.57272.mb@bu3sch.de>

On Tuesday 18 December 2007 00:12:30 mvtodevnull at gmail.com wrote:
> On Dec 17, 2007 5:45 PM, Michael Buesch <mb at bu3sch.de> wrote:
> >
> > Ehm, excuse me.
> > What are you doing exactly? In this thread you told me you have
> > a device which requires b43:
> >
> 
> Well, I'm not sure what you mean by "requires" b43, but I did say that
> the device uses the b43 driver.

Requires means requires.

> Sorry, I should have been more specific. I figured since the device
> could use bcm43xx, it could also use b43legacy, so I copied the
> entries in b43_ssb_tbl[] to b43legacy_ssb_tbl[] and rebuilt the
> b43legacy driver. I removed the b43 and ssb modules, and inserted the
> b43legacy module. Afterwards, I noticed b43 had still been autoloaded,
> so I removed it (I checked dmesg and only b43legacy had initialized
> anyway) , and proceeded to use the b43legacy driver with the version 3
> firmware. And like I said, it works exactly like the b43 driver with
> the version 4 firmware.

I'm not sure what you are trying to show with this hack.
It's been said several times in this thread that the firmware has
nothing to do with the device radio.
So it won't affect the transmit rate or something like that.

Note that the difference between b43 and b43legacy is NOT that the
driver is "legacy". It is called legacy because it does _only_ support
legacy _devices_. So if you hack it to drive a new card it will only
work by luck (luck as in there might be some code left over which
is able to initialize the device somehow.). My point being, we removed
code for new devices from b43legacy and are probably going to remove
even more stuff in the future. So there is simply no point in testing
any new device with b43legacy.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Tue Dec 18 02:16:15 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 17 Dec 2007 17:16:15 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <520b60a90712162317r5c2f2569gbd75c09742ff5493@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>	
	<476326A1.6090404@lwfinger.net>	
	<520b60a90712141759h65f1e63ei65ba00887a930d06@mail.gmail.com>	
	<47633BAE.6040604@lwfinger.net>	
	<520b60a90712142037j14d54de5nf5657ab2927fb3f5@mail.gmail.com>	
	<520b60a90712142039t539faeddo68e73816fe1b3237@mail.gmail.com>	
	<47637FDA.2030303@lwfinger.net>	
	<520b60a90712150438p1f0ae40bt5975b494ab75203c@mail.gmail.com>	
	<520b60a90712161817uaa2d1a8y5dfb13b586ca30ad@mail.gmail.com>	
	<47661CA1.3080808@lwfinger.net>
	<520b60a90712162317r5c2f2569gbd75c09742ff5493@mail.gmail.com>
Message-ID: <47671F5F.5020400@lwfinger.net>

mvtodevnull at gmail.com wrote:
> 
> I don't know what happened before, but after a reboot, I can't repeat
> the 200 kB/s speed. It's back down to 40 kB/s, just like originally. I
> didn't move the laptop, or the ap, the only thing I can think of that
> might have changed is the noise level. FWIW, link quality is
> consistently the same or better with b43.
> 
> Anyway, I'd noticed before that the bit rate starts at 1 Mb/s and
> quickly scales to 11 Mb/s, but I tried setting it manually anyway and
> didn't see any change. In fact, I set the rate to 5.5 Mb/s as well as
> 1 Mb/s and the download speed was the same with all three (around
> 30-40 kB/s).

I hope that you have now convinced yourself that you should be using b43 and not messing around
forcing b43legacy to use a device for which it was not intended. I left that back door in the code
because I wanted to test b43legacy on a computer that could build a kernel in 20 minutes, as
compared to the 12 hours that my old laptop with the device that needs b43legacy. I forgot to clean
up the code as I should have.

You should concentrate on what in your environment changed when you rebooted. If you can get the 200
kBs rate back, please note the noise and signal levels as compared to the values when you are
restricted to 40 kBs.

Is it possible for you to test your laptop on another AP?

Larry




From john.j35 at gmail.com  Tue Dec 18 05:39:45 2007
From: john.j35 at gmail.com (John Pierce)
Date: Mon, 17 Dec 2007 22:39:45 -0600
Subject: Lost wireless device?
In-Reply-To: <aa73b9a0709241817w3f2303ddoe3487c92f865700e@mail.gmail.com>
References: <aa73b9a0709211952n284fa902oa7fe84174f2b53b7@mail.gmail.com>
	<aa73b9a0709212134k5458b799p146c0bd740fe70a4@mail.gmail.com>
	<aa73b9a0709231756y38a364c2jcaf8135663f0de8c@mail.gmail.com>
	<46F713B8.5030806@lwfinger.net>
	<aa73b9a0709231906s3bd7a2a0h3fbf5a751b531488@mail.gmail.com>
	<46F7D12C.8010400@lwfinger.net>
	<aa73b9a0709241024o7cbb2bc3m93a539320e507f4f@mail.gmail.com>
	<aa73b9a0709241742g57e8f878nac52d599ade24396@mail.gmail.com>
	<39a6589b0709241800m469be516x504f8c870a2150fb@mail.gmail.com>
	<aa73b9a0709241817w3f2303ddoe3487c92f865700e@mail.gmail.com>
Message-ID: <aa73b9a0712172039p1049bafel768ab859055558a8@mail.gmail.com>

Larry, I know I am waking up an old thread, but I have a development I
thought was interesting and I need some guidance.

This device:

03:00.0 Network controller: Broadcom Corporation Dell Wireless 1390
WLAN Mini-PCI Card (rev 01)

quit showing up in fedora 7 and never appeared in fedora 8, however, I
just installed opensuse 10.3 on the second drive and it
has reappeared.

I did the standard update after the initial install and it disappeared again.

The original kernel was replaced by this one,

2.6.22.13-0.3-default

This is what I am thinking, I am going to cp the
/lib/modules/2.6.22.13-0.3-default to a safe location and then do a
scratch install
of opensuse 10.3 and maybe compare the kernels and their modules.  Is
this possible and would it yield the reason why this device
exists under one kernel and not another?

Shoudl I be talking to the kernel devel list or maybe opensuse devel list?

It seems that nothing is physically wrong with the machine if one
kernel sees the device and not another.

Also, just a side note, I did an install of vista to factory state and
as soon as the nvidia430 updates were applied the radio light went
off.

Any thoughts.

-- 
John
Registered Linux User 263680, get counted at
http://counter.li.org


From gavron at wetwork.net  Tue Dec 18 06:02:18 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Mon, 17 Dec 2007 22:02:18 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4766C89D.3000701@lwfinger.net>
References: <4765C7BE.9010905@wetwork.net> <47661FEE.7050400@lwfinger.net>
	<4766209B.5040106@wetwork.net> <4766C89D.3000701@lwfinger.net>
Message-ID: <4767545A.9000604@wetwork.net>

We worked out the SPROM is the same... but here are some interesting twists.

When switched off
1. The LED is switched off by hardware, not b43
2. B43 does send the event as expected but the LED is already off

When switch on
1. The LED is not switched on by hardware
2. B43 does send the event as expected but the LED does not turn on

When the code to pop the LED is triggered more often as in
When I changed in rfkill.c
if (unlikely(report_change)) {

to
if (!unlikely(report_change)) {

Then the LED came on and off every two seconds or so until I set the 
switch to OFF at which point the LED stayed off but the events kept 
happening.  (I put debug messages before and after also spitting out 
poll_dev->input to check its value for corruption.  It was all good).

I can manually trigger the event (on or off) using setkeycodes, so I suspect
a possible DELAY of the LED coming on after a B43 enable event... for 
hardware that needs it... would fix it.

Thoughts?

Ehud


Larry Finger wrote:
> Ehud,
>
> One possibility that I didn't think about before is that your LED mapping in the SPROM has some
> quirk that is not handled properly. Please run the following two commands
>
> SSB_SPROM=$(find /sys -name ssb_sprom)
> sudo cat $SSB_SPROM > sprom.txt
>
> and mail me the file sprom.txt that results.
>
> Thanks,
>
> Larry
>   


From gavron at wetwork.net  Tue Dec 18 06:42:56 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Mon, 17 Dec 2007 22:42:56 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767545A.9000604@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <47661FEE.7050400@lwfinger.net>
	<4766209B.5040106@wetwork.net> <4766C89D.3000701@lwfinger.net>
	<4767545A.9000604@wetwork.net>
Message-ID: <47675DE0.3030001@wetwork.net>

A little test code answered my own question.  I don't know if this is 
the best way to do it, but this patch fixes the problem.

Ehud

--- drivers/net/wireless/b43/rfkill.c.orig      2007-12-17 
22:39:31.000000000 -0700
+++ drivers/net/wireless/b43/rfkill.c   2007-12-17 22:39:54.000000000 -0700
@@ -68,6 +68,7 @@ static void b43_rfkill_poll(struct input
        /* send the radio switch event to the system - note both a key press
         * and a release are required */
        if (unlikely(report_change)) {
+               msleep(1);      /* sleep 400usec to allow slow hardware 
to enable the LED */
                input_report_key(poll_dev->input, KEY_WLAN, 1);
                input_report_key(poll_dev->input, KEY_WLAN, 0);
        }


Ehud Gavron wrote:
> We worked out the SPROM is the same... but here are some interesting twists.
>
> When switched off
> 1. The LED is switched off by hardware, not b43
> 2. B43 does send the event as expected but the LED is already off
>
> When switch on
> 1. The LED is not switched on by hardware
> 2. B43 does send the event as expected but the LED does not turn on
>
> When the code to pop the LED is triggered more often as in
> When I changed in rfkill.c
> if (unlikely(report_change)) {
>
> to
> if (!unlikely(report_change)) {
>
> Then the LED came on and off every two seconds or so until I set the 
> switch to OFF at which point the LED stayed off but the events kept 
> happening.  (I put debug messages before and after also spitting out 
> poll_dev->input to check its value for corruption.  It was all good).
>
> I can manually trigger the event (on or off) using setkeycodes, so I suspect
> a possible DELAY of the LED coming on after a B43 enable event... for 
> hardware that needs it... would fix it.
>
> Thoughts?
>
> Ehud
>
>
> Larry Finger wrote:
>   
>> Ehud,
>>
>> One possibility that I didn't think about before is that your LED mapping in the SPROM has some
>> quirk that is not handled properly. Please run the following two commands
>>
>> SSB_SPROM=$(find /sys -name ssb_sprom)
>> sudo cat $SSB_SPROM > sprom.txt
>>
>> and mail me the file sprom.txt that results.
>>
>> Thanks,
>>
>> Larry
>>   
>>     
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   


From mb at bu3sch.de  Tue Dec 18 10:33:06 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 10:33:06 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <47675DE0.3030001@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <4767545A.9000604@wetwork.net>
	<47675DE0.3030001@wetwork.net>
Message-ID: <200712181033.07120.mb@bu3sch.de>

On Tuesday 18 December 2007 06:42:56 Ehud Gavron wrote:
> A little test code answered my own question.  I don't know if this is 
> the best way to do it, but this patch fixes the problem.
> 
> Ehud
> 
> --- drivers/net/wireless/b43/rfkill.c.orig      2007-12-17 
> 22:39:31.000000000 -0700
> +++ drivers/net/wireless/b43/rfkill.c   2007-12-17 22:39:54.000000000 -0700
> @@ -68,6 +68,7 @@ static void b43_rfkill_poll(struct input
>         /* send the radio switch event to the system - note both a key press
>          * and a release are required */
>         if (unlikely(report_change)) {
> +               msleep(1);      /* sleep 400usec to allow slow hardware 
> to enable the LED */
>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
>         }

I'm sorry, I did not understand your previous mail.
What exactly does this fix? Can you explain in one or two sentences?

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Dec 18 10:39:14 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 02:39:14 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181033.07120.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <4767545A.9000604@wetwork.net>
	<47675DE0.3030001@wetwork.net> <200712181033.07120.mb@bu3sch.de>
Message-ID: <47679542.7010401@wetwork.net>

When the hardware switch is changed from OFF to ON there is a period of 
time before the hardware enables the LED to work at all.
During this period of time the KEY_WLAN sequence has no effect.  This 
means the LED is not turned on.

With the delay, the hardware has time to enable the LED (but not turn it 
on), and then the KEY_WLAN sequence turns the LED on.

----
Or, looking at it from a user's perspective:
1. Without this patch, SWITCH OFF, SWITCH ON, the LED stays off and 
never comes back on without a modprobe -r b43 && modprobe b43
2. With this patch, SWITCH OFF, SWITCH ON, the LED comes back on and 
works the way it's supposed to.

Ehud

Michael Buesch wrote:
> On Tuesday 18 December 2007 06:42:56 Ehud Gavron wrote:
>   
>> A little test code answered my own question.  I don't know if this is 
>> the best way to do it, but this patch fixes the problem.
>>
>> Ehud
>>
>> --- drivers/net/wireless/b43/rfkill.c.orig      2007-12-17 
>> 22:39:31.000000000 -0700
>> +++ drivers/net/wireless/b43/rfkill.c   2007-12-17 22:39:54.000000000 -0700
>> @@ -68,6 +68,7 @@ static void b43_rfkill_poll(struct input
>>         /* send the radio switch event to the system - note both a key press
>>          * and a release are required */
>>         if (unlikely(report_change)) {
>> +               msleep(1);      /* sleep 400usec to allow slow hardware 
>> to enable the LED */
>>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
>>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
>>         }
>>     
>
> I'm sorry, I did not understand your previous mail.
> What exactly does this fix? Can you explain in one or two sentences?
>
>   


From mb at bu3sch.de  Tue Dec 18 11:43:39 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 11:43:39 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <47679542.7010401@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181033.07120.mb@bu3sch.de>
	<47679542.7010401@wetwork.net>
Message-ID: <200712181143.40013.mb@bu3sch.de>

On Tuesday 18 December 2007 10:39:14 Ehud Gavron wrote:
> When the hardware switch is changed from OFF to ON there is a period of 
> time before the hardware enables the LED to work at all.
> During this period of time the KEY_WLAN sequence has no effect.  This 
> means the LED is not turned on.
> 
> With the delay, the hardware has time to enable the LED (but not turn it 
> on), and then the KEY_WLAN sequence turns the LED on.
> 

> >> +               msleep(1);      /* sleep 400usec to allow slow hardware 
> >> to enable the LED */

Ok, but why the inconsistent comment? 400usec vs. 1msec

I'm not sure why this helps at all. We poll every 1000ms.
So why does it fix the LED to wait an additional microsecond?
Note that this function call is _not_ triggered by pressing the button.
It is polled, so completely asynchronous.

Is it possible that we have some race condition in software somewhere
instead?

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Dec 18 12:33:19 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 04:33:19 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181143.40013.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181033.07120.mb@bu3sch.de>
	<47679542.7010401@wetwork.net> <200712181143.40013.mb@bu3sch.de>
Message-ID: <4767AFFF.7080202@wetwork.net>



Michael Buesch wrote:
> On Tuesday 18 December 2007 10:39:14 Ehud Gavron wrote:
>   
>> When the hardware switch is changed from OFF to ON there is a period of 
>> time before the hardware enables the LED to work at all.
>> During this period of time the KEY_WLAN sequence has no effect.  This 
>> means the LED is not turned on.
>>
>> With the delay, the hardware has time to enable the LED (but not turn it 
>> on), and then the KEY_WLAN sequence turns the LED on.
>>
>>     
>
>   
>>>> +               msleep(1);      /* sleep 400usec to allow slow hardware 
>>>> to enable the LED */
>>>>         
>
> Ok, but why the inconsistent comment? 400usec vs. 1msec
>   
That came straight out of phy.c.  I was looking for a method of doing a 
wait consistent with the rest of the code.
> I'm not sure why this helps at all. We poll every 1000ms.
> So why does it fix the LED to wait an additional microsecond?
>   
I don't know.
> Note that this function call is _not_ triggered by pressing the button.
> It is polled, so completely asynchronous.
>   
Ok.  I do know that without the wait the function IS called, but the LED 
does not turn on. 
> Is it possible that we have some race condition in software somewhere
> instead?
>   
I can't see how.  When I put debug messages in,  I can see the KEY_WLAN 
going out and I've verified the pointer hasn't changed, but the LED does 
not turn on.  The same sequence one second (or later) works every time 
and the LED goes on or off at will.

If I manually turn the LED on (with the keyboard sequence for KEY_WLAN), 
rfkill will turn the LED off when I turn the radio off consistently but 
without the wait will never turn the LED back on.

If I try the keyboard sequence while the radio is off the LED will not 
come on... leading me to suspect the hardware is preventing it from 
coming on, not anything in the software.


BTW "I can't see how." also means "I don't know the code."


E


From linux-ra at anet.at  Tue Dec 18 12:36:02 2007
From: linux-ra at anet.at (Robert Allerstorfer)
Date: Tue, 18 Dec 2007 12:36:02 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <200712171514.48013.mb@bu3sch.de>
References: <1942722038.20071212234810@anet.at>
	<200712171446.20770.mb@bu3sch.de>
	<1724934625.20071217150932@anet.at>
	<200712171514.48013.mb@bu3sch.de>
Message-ID: <345588434.20071218123602@anet.at>

On Mon, 17 Dec 2007, 15:14 GMT+01 Michael Buesch wrote:

> Please test what I suggested.

done. I have recompiled and replaced the original b43.ko from
'kernel-2.6.23.9-90.fc8.src.rpm', with the modified 'phy.c' ["if
(B43_DEBUG)" changed to "if (0)" on line 741]. Using Fedora's build
mechanism, I had to built the entire (baseonly) kernel which took over
2 hours. 

Of course, there is now no more "Disabling TX power adjustment"
warning in dmesg, but I can't see any other different behavior. I
still can't connect to the WPA2 access point. dmesg still says

wlan0: RX ReassocResp from 00:11:22:33:44:55 (capab=0x431 status=0 aid=1)
wlan0: associated
wlan0: switched to short barker preamble (BSSID=00:11:22:33:44:55)
wlan0: disassociate(reason=3)

and the debug output of wpa_supplicant still contains

wpa_driver_wext_set_countermeasures
ioctl[SIOCSIWAUTH]: Operation not supported

What can I do to get it working one day?

rob.



From gavron at wetwork.net  Tue Dec 18 12:37:04 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 04:37:04 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767AFFF.7080202@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181033.07120.mb@bu3sch.de>
	<47679542.7010401@wetwork.net> <200712181143.40013.mb@bu3sch.de>
	<4767AFFF.7080202@wetwork.net>
Message-ID: <4767B0E0.8090706@wetwork.net>



Ehud Gavron wrote:
>
> If I manually turn the LED on (with the keyboard sequence for 
> KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
> consistently but without the wait will never turn the LED back on.
That makes no sense; let me rephrase.

I can turn the LED on manually.  Then when I turn the radio switch off, 
rfkill turns the LED off every time.
So the "LED OFF by rfkill" works fine.

No matter what I do... without that delay, rfkill will not turn the LED 
back on, despite the event clearly being called by code.



From mb at bu3sch.de  Tue Dec 18 13:21:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 13:21:37 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767B0E0.8090706@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <4767AFFF.7080202@wetwork.net>
	<4767B0E0.8090706@wetwork.net>
Message-ID: <200712181321.37627.mb@bu3sch.de>

On Tuesday 18 December 2007 12:37:04 Ehud Gavron wrote:
> 
> Ehud Gavron wrote:
> >
> > If I manually turn the LED on (with the keyboard sequence for 
> > KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
> > consistently but without the wait will never turn the LED back on.
> That makes no sense; let me rephrase.
> 
> I can turn the LED on manually.  Then when I turn the radio switch off, 
> rfkill turns the LED off every time.
> So the "LED OFF by rfkill" works fine.
> 
> No matter what I do... without that delay, rfkill will not turn the LED 
> back on, despite the event clearly being called by code.
> 
> 
> 

What happens if you completely remove the code that sends the two events?

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Dec 18 13:31:20 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 05:31:20 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181321.37627.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <4767AFFF.7080202@wetwork.net>
	<4767B0E0.8090706@wetwork.net> <200712181321.37627.mb@bu3sch.de>
Message-ID: <4767BD98.6060004@wetwork.net>



Michael Buesch wrote:
> On Tuesday 18 December 2007 12:37:04 Ehud Gavron wrote:
>   
>> Ehud Gavron wrote:
>>     
>>> If I manually turn the LED on (with the keyboard sequence for 
>>> KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
>>> consistently but without the wait will never turn the LED back on.
>>>       
>> That makes no sense; let me rephrase.
>>
>> I can turn the LED on manually.  Then when I turn the radio switch off, 
>> rfkill turns the LED off every time.
>> So the "LED OFF by rfkill" works fine.
>>
>> No matter what I do... without that delay, rfkill will not turn the LED 
>> back on, despite the event clearly being called by code.
>>
>>
>>
>>     
>
> What happens if you completely remove the code that sends the two events?
>
>   
The LED never comes on. 

I can make it come on/off with the key function, and if it's on and the 
radio is turned off the LED goes off.

In other words I'm sure the hardware is turning the LED (and the BT LED) 
off.
I'm also sure the hardware is not turning the LED back on.

What other tests would you like me to do?

Thanks

Ehud


From mb at bu3sch.de  Tue Dec 18 13:37:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 13:37:37 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767BD98.6060004@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181321.37627.mb@bu3sch.de>
	<4767BD98.6060004@wetwork.net>
Message-ID: <200712181337.38211.mb@bu3sch.de>

On Tuesday 18 December 2007 13:31:20 Ehud Gavron wrote:
> 
> Michael Buesch wrote:
> > On Tuesday 18 December 2007 12:37:04 Ehud Gavron wrote:
> >   
> >> Ehud Gavron wrote:
> >>     
> >>> If I manually turn the LED on (with the keyboard sequence for 
> >>> KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
> >>> consistently but without the wait will never turn the LED back on.
> >>>       
> >> That makes no sense; let me rephrase.
> >>
> >> I can turn the LED on manually.  Then when I turn the radio switch off, 
> >> rfkill turns the LED off every time.
> >> So the "LED OFF by rfkill" works fine.
> >>
> >> No matter what I do... without that delay, rfkill will not turn the LED 
> >> back on, despite the event clearly being called by code.
> >>
> >>
> >>
> >>     
> >
> > What happens if you completely remove the code that sends the two events?
> >
> >   
> The LED never comes on. 
> 
> I can make it come on/off with the key function, and if it's on and the 
> radio is turned off the LED goes off.
> 
> In other words I'm sure the hardware is turning the LED (and the BT LED) 
> off.
> I'm also sure the hardware is not turning the LED back on.
> 
> What other tests would you like me to do?

I have no idea. But I don't understand why waiting a random time up to 1000ms fails
and a random time up to 1000ms + 1ms succeeds.
Where did you take that 400us wait in phy.c get from?

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 18 14:13:29 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 14:13:29 +0100
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <345588434.20071218123602@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171514.48013.mb@bu3sch.de>
	<345588434.20071218123602@anet.at>
Message-ID: <200712181413.29569.mb@bu3sch.de>

On Tuesday 18 December 2007 12:36:02 Robert Allerstorfer wrote:
> On Mon, 17 Dec 2007, 15:14 GMT+01 Michael Buesch wrote:
> 
> > Please test what I suggested.
> 
> done. I have recompiled and replaced the original b43.ko from
> 'kernel-2.6.23.9-90.fc8.src.rpm', with the modified 'phy.c' ["if
> (B43_DEBUG)" changed to "if (0)" on line 741]. Using Fedora's build
> mechanism, I had to built the entire (baseonly) kernel which took over
> 2 hours. 
> 
> Of course, there is now no more "Disabling TX power adjustment"
> warning in dmesg, but I can't see any other different behavior. I
> still can't connect to the WPA2 access point. dmesg still says
> 
> wlan0: RX ReassocResp from 00:11:22:33:44:55 (capab=0x431 status=0 aid=1)
> wlan0: associated
> wlan0: switched to short barker preamble (BSSID=00:11:22:33:44:55)
> wlan0: disassociate(reason=3) 

Uhm, that seems to be some mac80211 problem.
The driver is obviously able to transmit and receive data properly.
Otherwise it would not be able to associate.

> 
> and the debug output of wpa_supplicant still contains
> 
> wpa_driver_wext_set_countermeasures
> ioctl[SIOCSIWAUTH]: Operation not supported
> 
> What can I do to get it working one day?
> 
> rob.

-- 
Greetings Michael.


From linville at tuxdriver.com  Tue Dec 18 15:04:08 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 18 Dec 2007 09:04:08 -0500
Subject: Lost wireless device?
In-Reply-To: <aa73b9a0712172039p1049bafel768ab859055558a8@mail.gmail.com>
References: <aa73b9a0709212134k5458b799p146c0bd740fe70a4@mail.gmail.com>
	<aa73b9a0709231756y38a364c2jcaf8135663f0de8c@mail.gmail.com>
	<46F713B8.5030806@lwfinger.net>
	<aa73b9a0709231906s3bd7a2a0h3fbf5a751b531488@mail.gmail.com>
	<46F7D12C.8010400@lwfinger.net>
	<aa73b9a0709241024o7cbb2bc3m93a539320e507f4f@mail.gmail.com>
	<aa73b9a0709241742g57e8f878nac52d599ade24396@mail.gmail.com>
	<39a6589b0709241800m469be516x504f8c870a2150fb@mail.gmail.com>
	<aa73b9a0709241817w3f2303ddoe3487c92f865700e@mail.gmail.com>
	<aa73b9a0712172039p1049bafel768ab859055558a8@mail.gmail.com>
Message-ID: <20071218140408.GA27611@tuxdriver.com>

On Mon, Dec 17, 2007 at 10:39:45PM -0600, John Pierce wrote:
> Larry, I know I am waking up an old thread, but I have a development I
> thought was interesting and I need some guidance.
> 
> This device:
> 
> 03:00.0 Network controller: Broadcom Corporation Dell Wireless 1390
> WLAN Mini-PCI Card (rev 01)
> 
> quit showing up in fedora 7 and never appeared in fedora 8, however, I
> just installed opensuse 10.3 on the second drive and it
> has reappeared.
> 
> I did the standard update after the initial install and it disappeared again.

If the device does not show-up for lspci then it is probably not
a driver issue.  I would suspect a changed BIOS setting but you
didn't mention the BIOS in between your various kernels so that
seems unlikely.

The only thing that leaves that I can conjur at the moment is an
ACPI problem -- probably bad ACPI code in your BIOS but possibly
a bug in the Linux ACPI interpreter.  If you boot with "acpi=off"
on the kernel command line, does the device either always show-up or
never show-up between the various kernels?

John
-- 
John W. Linville
linville at tuxdriver.com


From gavron at wetwork.net  Tue Dec 18 15:41:04 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 07:41:04 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181337.38211.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181321.37627.mb@bu3sch.de>
	<4767BD98.6060004@wetwork.net> <200712181337.38211.mb@bu3sch.de>
Message-ID: <4767DC00.3090704@wetwork.net>



Michael Buesch wrote:
> On Tuesday 18 December 2007 13:31:20 Ehud Gavron wrote:
>   
>> Michael Buesch wrote:
>>     
>>> On Tuesday 18 December 2007 12:37:04 Ehud Gavron wrote:
>>>   
>>>       
>>>> Ehud Gavron wrote:
>>>>     
>>>>         
>>>>> If I manually turn the LED on (with the keyboard sequence for 
>>>>> KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
>>>>> consistently but without the wait will never turn the LED back on.
>>>>>       
>>>>>           
>>>> That makes no sense; let me rephrase.
>>>>
>>>> I can turn the LED on manually.  Then when I turn the radio switch off, 
>>>> rfkill turns the LED off every time.
>>>> So the "LED OFF by rfkill" works fine.
>>>>
>>>> No matter what I do... without that delay, rfkill will not turn the LED 
>>>> back on, despite the event clearly being called by code.
>>>>
>>>>
>>>>
>>>>     
>>>>         
>>> What happens if you completely remove the code that sends the two events?
>>>
>>>   
>>>       
>> The LED never comes on. 
>>
>> I can make it come on/off with the key function, and if it's on and the 
>> radio is turned off the LED goes off.
>>
>> In other words I'm sure the hardware is turning the LED (and the BT LED) 
>> off.
>> I'm also sure the hardware is not turning the LED back on.
>>
>> What other tests would you like me to do?
>>     
>
> I have no idea. But I don't understand why waiting a random time up to 1000ms fails
> and a random time up to 1000ms + 1ms succeeds.
>   
You are right.  Here are the tests I've done:
1. msleep(0) doesn't work.   msleep(1) or higher does
2. remove msleep and set the poll interval to 3000ms, and I turn the 
radio on... and 2-3 seconds later b43 says "ENABLED" but the LED does 
not work.
3. the code in b43_rfkill_poll between the "ENABLED" message and where 
I'm putting the msleep() is one mutex unlock which was acquired ten 
lines previously so I can't see how that's relevant. 

Unless there's some weird race condition where  releasing the mutex 
allows something else to happen which in its first 1msec prevents the 
keyboard event... I don't get it.

Would there be any harm in moving the mutex to after the 
input_report_key sequence? 

Ehud



From mb at bu3sch.de  Tue Dec 18 16:46:18 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 16:46:18 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767DC00.3090704@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181337.38211.mb@bu3sch.de>
	<4767DC00.3090704@wetwork.net>
Message-ID: <200712181646.19410.mb@bu3sch.de>

On Tuesday 18 December 2007 15:41:04 Ehud Gavron wrote:
> 
> Michael Buesch wrote:
> > On Tuesday 18 December 2007 13:31:20 Ehud Gavron wrote:
> >   
> >> Michael Buesch wrote:
> >>     
> >>> On Tuesday 18 December 2007 12:37:04 Ehud Gavron wrote:
> >>>   
> >>>       
> >>>> Ehud Gavron wrote:
> >>>>     
> >>>>         
> >>>>> If I manually turn the LED on (with the keyboard sequence for 
> >>>>> KEY_WLAN), rfkill will turn the LED off when I turn the radio off 
> >>>>> consistently but without the wait will never turn the LED back on.
> >>>>>       
> >>>>>           
> >>>> That makes no sense; let me rephrase.
> >>>>
> >>>> I can turn the LED on manually.  Then when I turn the radio switch off, 
> >>>> rfkill turns the LED off every time.
> >>>> So the "LED OFF by rfkill" works fine.
> >>>>
> >>>> No matter what I do... without that delay, rfkill will not turn the LED 
> >>>> back on, despite the event clearly being called by code.
> >>>>
> >>>>
> >>>>
> >>>>     
> >>>>         
> >>> What happens if you completely remove the code that sends the two events?
> >>>
> >>>   
> >>>       
> >> The LED never comes on. 
> >>
> >> I can make it come on/off with the key function, and if it's on and the 
> >> radio is turned off the LED goes off.
> >>
> >> In other words I'm sure the hardware is turning the LED (and the BT LED) 
> >> off.
> >> I'm also sure the hardware is not turning the LED back on.
> >>
> >> What other tests would you like me to do?
> >>     
> >
> > I have no idea. But I don't understand why waiting a random time up to 1000ms fails
> > and a random time up to 1000ms + 1ms succeeds.
> >   
> You are right.  Here are the tests I've done:
> 1. msleep(0) doesn't work.   msleep(1) or higher does
> 2. remove msleep and set the poll interval to 3000ms, and I turn the 
> radio on... and 2-3 seconds later b43 says "ENABLED" but the LED does 
> not work.
> 3. the code in b43_rfkill_poll between the "ENABLED" message and where 
> I'm putting the msleep() is one mutex unlock which was acquired ten 
> lines previously so I can't see how that's relevant. 
> 
> Unless there's some weird race condition where  releasing the mutex 
> allows something else to happen which in its first 1msec prevents the 
> keyboard event... I don't get it.
> 
> Would there be any harm in moving the mutex to after the 
> input_report_key sequence? 

It is possible that reading the "hw radio enabled" bit from
hardware has some sideeffect that needs one msec to trigger.
But I doubt this myself. :)

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Dec 18 17:14:54 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 09:14:54 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181646.19410.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181337.38211.mb@bu3sch.de>
	<4767DC00.3090704@wetwork.net> <200712181646.19410.mb@bu3sch.de>
Message-ID: <4767F1FE.3050003@wetwork.net>

I've trimmed some of this.

Michael Buesch wrote:
>>> I have no idea. But I don't understand why waiting a random time up to 1000ms fails
>>> and a random time up to 1000ms + 1ms succeeds.
>>>   
The patch I submitted had a newbie-error.  Right before making the patch 
I removed the debug messages.  As it turns out it's not the msleep that 
makes the difference.  It's having TWO debug messages AND the msleep.


Yes, I know that sounds stupid.  Here are the kernels I built to test 
this stupid theory:
/boot/vmlinuz-2.6.24-rc5-1dm
/boot/vmlinuz-2.6.24-rc5-m1.dm
/boot/vmlinuz-2.6.24-rc5-dm.dm
/boot/vmlinuz-2.6.24-rc5-dm.m1
/boot/vmlinuz-2.6.24-rc5-duh


DM=display message
M1=msleep(1)
DUH=go back to square one, display message; msleep(1) ; display message.


This DOES WORK and DOES TURN ON THE LED.  However...
Here's the really funny thing.  Here are the messages:

b43-phy0: Radio hardware status changed to ENABLED
b43-phy0: EHUD: LED coming on

And here's the code:

        if (unlikely(report_change)) {
                b43info(wl,"EHUD: sleeping\n");
                msleep(1);
                b43info(wl,"EHUD: LED coming on\n);
                input_report_key(poll_dev->input, KEY_WLAN, 1);
                input_report_key(poll_dev->input, KEY_WLAN, 0);
        }

So my question (other than why do I need two messages and one msleep to 
get my LED lit) is... what happened to the "EHUD: sleeping" debug 
message?  It never showed up on the console.  I did this several times.  
The full dmesg is attached.

Ehud

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dmesg.txt
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071218/174af401/attachment.txt>

From mb at bu3sch.de  Tue Dec 18 18:29:34 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 18:29:34 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767F1FE.3050003@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181646.19410.mb@bu3sch.de>
	<4767F1FE.3050003@wetwork.net>
Message-ID: <200712181829.35010.mb@bu3sch.de>

On Tuesday 18 December 2007 17:14:54 Ehud Gavron wrote:
> I've trimmed some of this.
> 
> Michael Buesch wrote:
> >>> I have no idea. But I don't understand why waiting a random time up to 1000ms fails
> >>> and a random time up to 1000ms + 1ms succeeds.
> >>>   
> The patch I submitted had a newbie-error.  Right before making the patch 
> I removed the debug messages.  As it turns out it's not the msleep that 
> makes the difference.  It's having TWO debug messages AND the msleep.
> 
> 
> Yes, I know that sounds stupid.  Here are the kernels I built to test 
> this stupid theory:
> /boot/vmlinuz-2.6.24-rc5-1dm
> /boot/vmlinuz-2.6.24-rc5-m1.dm
> /boot/vmlinuz-2.6.24-rc5-dm.dm
> /boot/vmlinuz-2.6.24-rc5-dm.m1
> /boot/vmlinuz-2.6.24-rc5-duh
> 
> 
> DM=display message
> M1=msleep(1)
> DUH=go back to square one, display message; msleep(1) ; display message.
> 
> 
> This DOES WORK and DOES TURN ON THE LED.  However...
> Here's the really funny thing.  Here are the messages:
> 
> b43-phy0: Radio hardware status changed to ENABLED
> b43-phy0: EHUD: LED coming on
> 
> And here's the code:
> 
>         if (unlikely(report_change)) {
>                 b43info(wl,"EHUD: sleeping\n");
>                 msleep(1);
>                 b43info(wl,"EHUD: LED coming on\n);
>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
>         }
> 
> So my question (other than why do I need two messages and one msleep to 
> get my LED lit) is... what happened to the "EHUD: sleeping" debug 
> message?  It never showed up on the console.  I did this several times.  
> The full dmesg is attached.
> 
> Ehud
> 
> 

This smells like a compiler bug.
Can you try an older compiler version?
(Most distros ship several versions)

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 18 18:33:43 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 18:33:43 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181829.35010.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <4767F1FE.3050003@wetwork.net>
	<200712181829.35010.mb@bu3sch.de>
Message-ID: <200712181833.44377.mb@bu3sch.de>

On Tuesday 18 December 2007 18:29:34 Michael Buesch wrote:
> > And here's the code:
> > 
> >         if (unlikely(report_change)) {
> >                 b43info(wl,"EHUD: sleeping\n");
> >                 msleep(1);
> >                 b43info(wl,"EHUD: LED coming on\n);
> >                 input_report_key(poll_dev->input, KEY_WLAN, 1);
> >                 input_report_key(poll_dev->input, KEY_WLAN, 0);
> >         }
> > 
> > So my question (other than why do I need two messages and one msleep to 
> > get my LED lit) is... what happened to the "EHUD: sleeping" debug 
> > message?  It never showed up on the console.  I did this several times.  
> > The full dmesg is attached.
> > 
> > Ehud
> > 
> > 
> 
> This smells like a compiler bug.
> Can you try an older compiler version?
> (Most distros ship several versions)
> 

Actually I do remember a gcc bug related to strict-aliasing.
What happens is that about two lines of source code are
skipped. So this might also apply here. We skip two lines.
But I don't remember the gcc bug #. :(

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Dec 18 18:36:56 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 18:36:56 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181833.44377.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181829.35010.mb@bu3sch.de>
	<200712181833.44377.mb@bu3sch.de>
Message-ID: <200712181836.56768.mb@bu3sch.de>

On Tuesday 18 December 2007 18:33:43 Michael Buesch wrote:
> On Tuesday 18 December 2007 18:29:34 Michael Buesch wrote:
> > > And here's the code:
> > > 
> > >         if (unlikely(report_change)) {
> > >                 b43info(wl,"EHUD: sleeping\n");
> > >                 msleep(1);
> > >                 b43info(wl,"EHUD: LED coming on\n);
> > >                 input_report_key(poll_dev->input, KEY_WLAN, 1);
> > >                 input_report_key(poll_dev->input, KEY_WLAN, 0);
> > >         }
> > > 
> > > So my question (other than why do I need two messages and one msleep to 
> > > get my LED lit) is... what happened to the "EHUD: sleeping" debug 
> > > message?  It never showed up on the console.  I did this several times.  
> > > The full dmesg is attached.
> > > 
> > > Ehud
> > > 
> > > 
> > 
> > This smells like a compiler bug.
> > Can you try an older compiler version?
> > (Most distros ship several versions)
> > 
> 
> Actually I do remember a gcc bug related to strict-aliasing.
> What happens is that about two lines of source code are
> skipped. So this might also apply here. We skip two lines.
> But I don't remember the gcc bug #. :(
> 

I think this is the one I was talking about:
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32328

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Tue Dec 18 18:49:30 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 18 Dec 2007 09:49:30 -0800
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4767F1FE.3050003@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181337.38211.mb@bu3sch.de>
	<4767DC00.3090704@wetwork.net> <200712181646.19410.mb@bu3sch.de>
	<4767F1FE.3050003@wetwork.net>
Message-ID: <4768082A.1050005@lwfinger.net>

Ehud Gavron wrote:
> I've trimmed some of this.
> 
> Michael Buesch wrote:
>>>> I have no idea. But I don't understand why waiting a random time up
>>>> to 1000ms fails
>>>> and a random time up to 1000ms + 1ms succeeds.
>>>>   
> The patch I submitted had a newbie-error.  Right before making the patch
> I removed the debug messages.  As it turns out it's not the msleep that
> makes the difference.  It's having TWO debug messages AND the msleep.
> 
> 
> Yes, I know that sounds stupid.  Here are the kernels I built to test
> this stupid theory:
> /boot/vmlinuz-2.6.24-rc5-1dm
> /boot/vmlinuz-2.6.24-rc5-m1.dm
> /boot/vmlinuz-2.6.24-rc5-dm.dm
> /boot/vmlinuz-2.6.24-rc5-dm.m1
> /boot/vmlinuz-2.6.24-rc5-duh
> 
> 
> DM=display message
> M1=msleep(1)
> DUH=go back to square one, display message; msleep(1) ; display message.
> 
> 
> This DOES WORK and DOES TURN ON THE LED.  However...
> Here's the really funny thing.  Here are the messages:
> 
> b43-phy0: Radio hardware status changed to ENABLED
> b43-phy0: EHUD: LED coming on
> 
> And here's the code:
> 
>        if (unlikely(report_change)) {
>                b43info(wl,"EHUD: sleeping\n");
>                msleep(1);
>                b43info(wl,"EHUD: LED coming on\n);
>                input_report_key(poll_dev->input, KEY_WLAN, 1);
>                input_report_key(poll_dev->input, KEY_WLAN, 0);
>        }
> 
> So my question (other than why do I need two messages and one msleep to
> get my LED lit) is... what happened to the "EHUD: sleeping" debug
> message?  It never showed up on the console.  I did this several times. 
> The full dmesg is attached.

I do not understand the disappearance of the "sleeping" message.

I have some questions. In the following excerpt from your dmesg, why do you get the USB disconnect
and reconnect? Is that part of the Bluetooth hardware? If you remove the debug messages and increase
the msleep delay to 10, does it work?

ADDRCONF(NETDEV_UP): eth0: link is not ready
input: b43-phy0 as /class/input/input11
Registered led device: b43-phy0:tx
Registered led device: b43-phy0:rx
Registered led device: b43-phy0:radio
ADDRCONF(NETDEV_UP): wlan0: link is not ready
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0: EHUD: LED coming on
usb 1-2.4: USB disconnect, address 4
usb 1-2.4: new full speed USB device using ehci_hcd and address 6
usb 1-2.4: configuration #1 chosen from 1 choice
b43-phy0: Radio hardware status changed to ENABLED
b43-phy0: EHUD: LED coming on
usb 1-2.4: USB disconnect, address 6
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0: EHUD: LED coming on
usb 1-2.4: new full speed USB device using ehci_hcd and address 7
usb 1-2.4: configuration #1 chosen from 1 choice
b43-phy0: Radio hardware status changed to ENABLED
b43-phy0: EHUD: LED coming on


From gavron at wetwork.net  Tue Dec 18 19:39:15 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 11:39:15 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181836.56768.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181829.35010.mb@bu3sch.de>
	<200712181833.44377.mb@bu3sch.de> <200712181836.56768.mb@bu3sch.de>
Message-ID: <476813D3.9090805@wetwork.net>



Michael Buesch wrote:
> On Tuesday 18 December 2007 18:33:43 Michael Buesch wrote:
>   
>> On Tuesday 18 December 2007 18:29:34 Michael Buesch wrote:
>>     
>>>> And here's the code:
>>>>
>>>>         if (unlikely(report_change)) {
>>>>                 b43info(wl,"EHUD: sleeping\n");
>>>>                 msleep(1);
>>>>                 b43info(wl,"EHUD: LED coming on\n);
>>>>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
>>>>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
>>>>         }
>>>>
>>>> So my question (other than why do I need two messages and one msleep to 
>>>> get my LED lit) is... what happened to the "EHUD: sleeping" debug 
>>>> message?  It never showed up on the console.  I did this several times.  
>>>> The full dmesg is attached.
>>>>
>>>> Ehud
>>>>
>>>>
>>>>         
>>> This smells like a compiler bug.
>>> Can you try an older compiler version?
>>> (Most distros ship several versions)
>>>
>>>       
>> Actually I do remember a gcc bug related to strict-aliasing.
>> What happens is that about two lines of source code are
>> skipped. So this might also apply here. We skip two lines.
>> But I don't remember the gcc bug #. :(
>>
>>     
>
> I think this is the one I was talking about:
> http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32328
>
>   
 From Bugzilla:
Known to Work: 4.1.2 4.3.0
 gcc --version
gcc (GCC) 4.1.2 20070925 (Red Hat 4.1.2-33)


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071218/19cc6f0d/attachment.bin>

From gavron at wetwork.net  Tue Dec 18 18:56:05 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 10:56:05 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <4768082A.1050005@lwfinger.net>
References: <4765C7BE.9010905@wetwork.net> <200712181337.38211.mb@bu3sch.de>
	<4767DC00.3090704@wetwork.net> <200712181646.19410.mb@bu3sch.de>
	<4767F1FE.3050003@wetwork.net> <4768082A.1050005@lwfinger.net>
Message-ID: <476809B5.5040100@wetwork.net>



Larry Finger wrote:
> Ehud Gavron wrote:
>   
>> I've trimmed some of this.
>>
>> Michael Buesch wrote:
>>     
>>>>> I have no idea. But I don't understand why waiting a random time up
>>>>> to 1000ms fails
>>>>> and a random time up to 1000ms + 1ms succeeds.
>>>>>   
>>>>>           
>> The patch I submitted had a newbie-error.  Right before making the patch
>> I removed the debug messages.  As it turns out it's not the msleep that
>> makes the difference.  It's having TWO debug messages AND the msleep.
>>
>>
>> Yes, I know that sounds stupid.  Here are the kernels I built to test
>> this stupid theory:
>> /boot/vmlinuz-2.6.24-rc5-1dm
>> /boot/vmlinuz-2.6.24-rc5-m1.dm
>> /boot/vmlinuz-2.6.24-rc5-dm.dm
>> /boot/vmlinuz-2.6.24-rc5-dm.m1
>> /boot/vmlinuz-2.6.24-rc5-duh
>>
>>
>> DM=display message
>> M1=msleep(1)
>> DUH=go back to square one, display message; msleep(1) ; display message.
>>
>>
>> This DOES WORK and DOES TURN ON THE LED.  However...
>> Here's the really funny thing.  Here are the messages:
>>
>> b43-phy0: Radio hardware status changed to ENABLED
>> b43-phy0: EHUD: LED coming on
>>
>> And here's the code:
>>
>>        if (unlikely(report_change)) {
>>                b43info(wl,"EHUD: sleeping\n");
>>                msleep(1);
>>                b43info(wl,"EHUD: LED coming on\n);
>>                input_report_key(poll_dev->input, KEY_WLAN, 1);
>>                input_report_key(poll_dev->input, KEY_WLAN, 0);
>>        }
>>
>> So my question (other than why do I need two messages and one msleep to
>> get my LED lit) is... what happened to the "EHUD: sleeping" debug
>> message?  It never showed up on the console.  I did this several times. 
>> The full dmesg is attached.
>>     
>
> I do not understand the disappearance of the "sleeping" message.
>
> I have some questions. In the following excerpt from your dmesg, why do you get the USB disconnect
> and reconnect? Is that part of the Bluetooth hardware?
Yes.
>  If you remove the debug messages and increase
> the msleep delay to 10, does it work?
>   
I will try that once I get back home from work, as well as Michael's 
suggestion for a different compiler.

Thanks,

Ehud


From mb at bu3sch.de  Tue Dec 18 19:58:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 19:58:11 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <476813D3.9090805@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181836.56768.mb@bu3sch.de>
	<476813D3.9090805@wetwork.net>
Message-ID: <200712181958.11553.mb@bu3sch.de>

On Tuesday 18 December 2007 19:39:15 Ehud Gavron wrote:
> 
> Michael Buesch wrote:
> > On Tuesday 18 December 2007 18:33:43 Michael Buesch wrote:
> >   
> >> On Tuesday 18 December 2007 18:29:34 Michael Buesch wrote:
> >>     
> >>>> And here's the code:
> >>>>
> >>>>         if (unlikely(report_change)) {
> >>>>                 b43info(wl,"EHUD: sleeping\n");
> >>>>                 msleep(1);
> >>>>                 b43info(wl,"EHUD: LED coming on\n);
> >>>>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
> >>>>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
> >>>>         }
> >>>>
> >>>> So my question (other than why do I need two messages and one msleep to 
> >>>> get my LED lit) is... what happened to the "EHUD: sleeping" debug 
> >>>> message?  It never showed up on the console.  I did this several times.  
> >>>> The full dmesg is attached.
> >>>>
> >>>> Ehud
> >>>>
> >>>>
> >>>>         
> >>> This smells like a compiler bug.
> >>> Can you try an older compiler version?
> >>> (Most distros ship several versions)
> >>>
> >>>       
> >> Actually I do remember a gcc bug related to strict-aliasing.
> >> What happens is that about two lines of source code are
> >> skipped. So this might also apply here. We skip two lines.
> >> But I don't remember the gcc bug #. :(
> >>
> >>     
> >
> > I think this is the one I was talking about:
> > http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32328
> >
> >   
>  From Bugzilla:
> Known to Work: 4.1.2 4.3.0
>  gcc --version
> gcc (GCC) 4.1.2 20070925 (Red Hat 4.1.2-33)
> 
> 
> 

Please check this anyway. This really looks like a compiler bug.
Why would it skip a printk otherwise?

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Dec 18 22:09:24 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 14:09:24 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712181958.11553.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181836.56768.mb@bu3sch.de>
	<476813D3.9090805@wetwork.net> <200712181958.11553.mb@bu3sch.de>
Message-ID: <47683704.8020104@wetwork.net>



Michael Buesch wrote:
> On Tuesday 18 December 2007 19:39:15 Ehud Gavron wrote:
>   
>> Michael Buesch wrote:
>>     
>>> On Tuesday 18 December 2007 18:33:43 Michael Buesch wrote:
>>>   
>>>       
>>>> On Tuesday 18 December 2007 18:29:34 Michael Buesch wrote:
>>>>     
>>>>         
>>>>>> And here's the code:
>>>>>>
>>>>>>         if (unlikely(report_change)) {
>>>>>>                 b43info(wl,"EHUD: sleeping\n");
>>>>>>                 msleep(1);
>>>>>>                 b43info(wl,"EHUD: LED coming on\n);
>>>>>>                 input_report_key(poll_dev->input, KEY_WLAN, 1);
>>>>>>                 input_report_key(poll_dev->input, KEY_WLAN, 0);
>>>>>>         }
>>>>>>
>>>>>> So my question (other than why do I need two messages and one msleep to 
>>>>>> get my LED lit) is... what happened to the "EHUD: sleeping" debug 
>>>>>> message?  It never showed up on the console.  I did this several times.  
>>>>>> The full dmesg is attached.
>>>>>>
>>>>>> Ehud
>>>>>>
>>>>>>
>>>>>>         
>>>>>>             
>>>>> This smells like a compiler bug.
>>>>> Can you try an older compiler version?
>>>>> (Most distros ship several versions)
>>>>>
>>>>>       
>>>>>           
>>>> Actually I do remember a gcc bug related to strict-aliasing.
>>>> What happens is that about two lines of source code are
>>>> skipped. So this might also apply here. We skip two lines.
>>>> But I don't remember the gcc bug #. :(
>>>>
>>>>     
>>>>         
>>> I think this is the one I was talking about:
>>> http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32328
>>>
>>>   
>>>       
>>  From Bugzilla:
>> Known to Work: 4.1.2 4.3.0
>>  gcc --version
>> gcc (GCC) 4.1.2 20070925 (Red Hat 4.1.2-33)
>>
>>
>>
>>     
>
> Please check this anyway. This really looks like a compiler bug.
> Why would it skip a printk otherwise?
>
>   
I did just check and you are right!  It is a compiler bug despite the 
version being supposedly safe.
two  msleep(0); 's got inlined out of the way and the KEY_WLAN code ran 
as it's supposed to.

I can't find gcc 4.3 on gnu's site and Fedora RPMs says 4.1.2 is the 
latest.  Any clues as to how best to proceed ?

Thanks

Ehud
PS Yes I realize this means it's not a b43 problem, but my problem with 
my compiler :)


From mb at bu3sch.de  Tue Dec 18 22:13:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 18 Dec 2007 22:13:37 +0100
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <47683704.8020104@wetwork.net>
References: <4765C7BE.9010905@wetwork.net> <200712181958.11553.mb@bu3sch.de>
	<47683704.8020104@wetwork.net>
Message-ID: <200712182213.37874.mb@bu3sch.de>

On Tuesday 18 December 2007 22:09:24 Ehud Gavron wrote:
> I did just check and you are right!  It is a compiler bug despite the 
> version being supposedly safe.
> two  msleep(0); 's got inlined out of the way and the KEY_WLAN code ran 
> as it's supposed to.
> 
> I can't find gcc 4.3 on gnu's site and Fedora RPMs says 4.1.2 is the 
> latest.  Any clues as to how best to proceed ?

Use an older one, maybe? 4.0 or 3.4.
3.4 used to be pretty good, actually.

> Ehud
> PS Yes I realize this means it's not a b43 problem, but my problem with 
> my compiler :)

Cool. Can you please report this into the redhat bugzilla?
Maybe also quote the gcc bug I quoted, as it might be possible
that redhat backported this bug to their version (distributions
often backport stuff from newer upstream versions).

-- 
Greetings Michael.


From gavron at wetwork.net  Wed Dec 19 02:51:08 2007
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 18 Dec 2007 18:51:08 -0700
Subject: 2.6.24-rc5 the LED does not come on after a switch-off switch-on
In-Reply-To: <200712182213.37874.mb@bu3sch.de>
References: <4765C7BE.9010905@wetwork.net> <200712181958.11553.mb@bu3sch.de>
	<47683704.8020104@wetwork.net> <200712182213.37874.mb@bu3sch.de>
Message-ID: <4768790C.1030802@wetwork.net>

Submitted.
E

Michael Buesch wrote:
> On Tuesday 18 December 2007 22:09:24 Ehud Gavron wrote:
>   
>> I did just check and you are right!  It is a compiler bug despite the 
>> version being supposedly safe.
>> two  msleep(0); 's got inlined out of the way and the KEY_WLAN code ran 
>> as it's supposed to.
>>
>> I can't find gcc 4.3 on gnu's site and Fedora RPMs says 4.1.2 is the 
>> latest.  Any clues as to how best to proceed ?
>>     
>
> Use an older one, maybe? 4.0 or 3.4.
> 3.4 used to be pretty good, actually.
>
>   
>> Ehud
>> PS Yes I realize this means it's not a b43 problem, but my problem with 
>> my compiler :)
>>     
>
> Cool. Can you please report this into the redhat bugzilla?
> Maybe also quote the gcc bug I quoted, as it might be possible
> that redhat backported this bug to their version (distributions
> often backport stuff from newer upstream versions).
>
>   


From larry.finger at lwfinger.net  Wed Dec 19 09:11:02 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 19 Dec 2007 00:11:02 -0800
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore
	to mutex
In-Reply-To: <520b60a90712181812l3fd6c4cbicece82a4487d0587@mail.gmail.com>
References: <20071213003028.676998182@mvista.com>	
	<520b60a90712142037j14d54de5nf5657ab2927fb3f5@mail.gmail.com>	
	<520b60a90712142039t539faeddo68e73816fe1b3237@mail.gmail.com>	
	<47637FDA.2030303@lwfinger.net>	
	<520b60a90712150438p1f0ae40bt5975b494ab75203c@mail.gmail.com>	
	<520b60a90712161817uaa2d1a8y5dfb13b586ca30ad@mail.gmail.com>	
	<47661CA1.3080808@lwfinger.net>	
	<520b60a90712162317r5c2f2569gbd75c09742ff5493@mail.gmail.com>	
	<47671F5F.5020400@lwfinger.net>	
	<520b60a90712171834n61b09f23rc4c907ce3e8458cf@mail.gmail.com>
	<520b60a90712181812l3fd6c4cbicece82a4487d0587@mail.gmail.com>
Message-ID: <4768D216.3000904@lwfinger.net>

mvtodevnull at gmail.com wrote:
> Larry, thanks for being so patient so far. Tomorrow I plan to take my
> laptop to somewhere with coffee and a wireless network. For now
> though, can you tell me if these messages could be related:
> PCI: Cannot allocate resource region 7 of bridge 0000:00:05.0
> PCI: Cannot allocate resource region 8 of bridge 0000:00:05.0

I don't know what these regions are, but I doubt if they have any relation to your problem.
> 
> or could tsc being marked as unstable have anything to do with the
> speed of network transfers?

Absolutely not.

Larry




From mb at bu3sch.de  Wed Dec 19 10:46:53 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 19 Dec 2007 10:46:53 +0100
Subject: [PATCH 3/3] net: wireless: bcm43xx: big_buffer_sem semaphore to
	mutex
In-Reply-To: <4768D216.3000904@lwfinger.net>
References: <20071213003028.676998182@mvista.com>
	<520b60a90712181812l3fd6c4cbicece82a4487d0587@mail.gmail.com>
	<4768D216.3000904@lwfinger.net>
Message-ID: <200712191046.54147.mb@bu3sch.de>

On Wednesday 19 December 2007 09:11:02 Larry Finger wrote:
> > 
> > or could tsc being marked as unstable have anything to do with the
> > speed of network transfers?
> 
> Absolutely not.

Well, if the clocksource of the machine is unstable it _can_ cause all kinds
of weird things. If you think something is broken in the tsc stuff, please
switch to using another clocksource.

-- 
Greetings Michael.


From sarcarsh at gmail.com  Sat Dec 22 17:19:05 2007
From: sarcarsh at gmail.com (sarcarsh)
Date: Sat, 22 Dec 2007 21:49:05 +0530
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
Message-ID: <476D38F9.4090802@gmail.com>

[I had sent this email a few minutes back from an unsubscribed id,
apologies if you are getting this twice]


Hello,

I am trying out Linux on my Dell D620 which has BCM94311MCG wlan card.

lspci gives:
0c:00.0 Network controller: Broadcom Corporation BCM94311MCG wlan
mini-PCI (rev 01)

I installed Ubuntu 7.10 and while this would not wor out-of-the-box,
with the help of the restricted-driver-manager my WLAN works fine with
the 2.6.22-14 stock kernel.

I downloaded and compiled the 2.6.24-rc5 kernel. The kernel compiled and
  I can boot into it and perform *most* operations. But my WLAN wont work.
I have been reading on the net and trying to form a picture of the
BCM43xx chipsets, their history of vendor-no-cooperation with Linux and
what people have done to bypass that.

My understanding is that this card has the BCM4311 chipset which is
supported directly by the kernel on the 2.6.24-rc line. I was expecting
this to be the case since I thought I compiled the kernel with the
BCM43xx options "on". Here's a snip:

shouryas at rush:~/fed$ grep BCM /boot/config-2.6.24-rc5
CONFIG_BT_HCIBCM203X=m
CONFIG_BCM43XX=m
CONFIG_BCM43XX_DEBUG=y
CONFIG_BCM43XX_DMA=y
CONFIG_BCM43XX_PIO=y
CONFIG_BCM43XX_DMA_AND_PIO_MODE=y
# CONFIG_BCM43XX_DMA_MODE is not set
# CONFIG_BCM43XX_PIO_MODE is not set
CONFIG_DVB_BCM3510=m

When I do an lsmod, I see..
shouryas at rush:~$ lsmod | grep -i bcm
bcm43xx               433312  0
ieee80211softmac       34944  1 bcm43xx
ieee80211              49900  2 bcm43xx,ieee80211softmac


I tried the ndiswrapper, by following the instructions on the Ubuntu
site (I even re-compiled ndiswrapper-1.51)
https://help.ubuntu.com/community/WifiDocs/Driver/bcm43xx/Feisty_No-Fluff#head-c8cbba1734885284e4f79c2054461c863169f1bf
but, no it won't work :-(


I found some good info on the Gnome Network-Manager list here:
http://www.nabble.com/My-Laptop-td14293457.html

So I tried unloading the bcm43xx module(s), and uninstall the XP driver
wrapped via ndiswrapper and then load b43 directly. But I get an error.

root at rush:/home/shouryas# rmmod bcm43xx
root at rush:/home/shouryas# ndiswrapper -l
bcmwl5 : driver installed
         device (14E4:4311) present (alternate driver: ssb)
root at rush:/home/shouryas# ndiswrapper -e bcmwl5
root at rush:/home/shouryas# ndiswrapper -l
root at rush:/home/shouryas# modprobe b43
FATAL: Error inserting b43
(/lib/modules/2.6.24-rc5/kernel/drivers/net/wireless/b43/b43.ko):
Unknown symbol in module, or unknown parameter (see dmesg)
root at rush:/home/shouryas# dmesg  /* giving the relvant snip here */
[ 6086.380829] b43: Unknown symbol ssb_bus_pcmciabus_register


--[At this point I apologize for this too-long email, I am trying to
make some headway myself and documenting my observations]--
I tried to see who should export the symbol ssb_bus_pcmciabus_register
Expectedly, no one does
root at rush:/proc# cat kallsyms | grep pcmcia | grep ssb
yields nothing.

So, I tried to look into the source:
Around line 656 of /home/shouryas/kernels/my2.6/drivers/ssb/main.c
#ifdef CONFIG_SSB_PCMCIAHOST
int ssb_bus_pcmciabus_register(struct ssb_bus *bus,
                                struct pcmcia_device *pcmcia_dev,
                                unsigned long baseaddr)
{
         int err;

         bus->bustype = SSB_BUSTYPE_PCMCIA;
         bus->host_pcmcia = pcmcia_dev;
         bus->ops = &ssb_pcmcia_ops;

         err = ssb_bus_register(bus, ssb_pcmcia_get_invariants, baseaddr);
         if (!err) {
                 ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane
found on "
                            "PCMCIA device %s\n", pcmcia_dev->devname);
         }

         return err;
}
EXPORT_SYMBOL(ssb_bus_pcmciabus_register);
#endif /* CONFIG_SSB_PCMCIAHOST */

I looked into my config file to see if CONFIG_SSB_PCMCIAHOST is defined.
It is !
root at rush:/proc# cat /boot/config | grep SSB
CONFIG_SSB_POSSIBLE=y
CONFIG_SSB=m
CONFIG_SSB_PCIHOST_POSSIBLE=y
CONFIG_SSB_PCIHOST=y
CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
CONFIG_SSB_PCMCIAHOST=y
# CONFIG_SSB_SILENT is not set
# CONFIG_SSB_DEBUG is not set
CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
CONFIG_SSB_DRIVER_PCICORE=y
# CONFIG_USB_OHCI_HCD_SSB is not set

Also, I looked into dmesg, and see the line
[   14.635610] ssb: Sonics Silicon Backplane found on PCI device
0000:0c:00.0

So, it seems that SSB_CONFIG_PCMCIA is defined (and no error in SSB 
detection hoepfully) but then why is the
symbol not exported ?


I would appreciate if you somebody could provide me some hints to where
to go and look for the problem. Maybe you can solve this immediately but
still I'd appreciate only hints so that I can play at least some part in
  resolving the situation.

I'd be happy to provide more info from my system.

Thanks and regards,
Shourya









From larry.finger at lwfinger.net  Sat Dec 22 19:25:01 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 22 Dec 2007 10:25:01 -0800
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <476D38F9.4090802@gmail.com>
References: <476D38F9.4090802@gmail.com>
Message-ID: <476D567D.3020401@lwfinger.net>

sarcarsh wrote:
> [I had sent this email a few minutes back from an unsubscribed id,
> apologies if you are getting this twice]
> 
> 
> Hello,
> 
> I am trying out Linux on my Dell D620 which has BCM94311MCG wlan card.
> 
> lspci gives:
> 0c:00.0 Network controller: Broadcom Corporation BCM94311MCG wlan
> mini-PCI (rev 01)
> 
> I installed Ubuntu 7.10 and while this would not wor out-of-the-box,
> with the help of the restricted-driver-manager my WLAN works fine with
> the 2.6.22-14 stock kernel.
> 
> I downloaded and compiled the 2.6.24-rc5 kernel. The kernel compiled and
>   I can boot into it and perform *most* operations. But my WLAN wont work.
> I have been reading on the net and trying to form a picture of the
> BCM43xx chipsets, their history of vendor-no-cooperation with Linux and
> what people have done to bypass that.
> 
> My understanding is that this card has the BCM4311 chipset which is
> supported directly by the kernel on the 2.6.24-rc line. I was expecting
> this to be the case since I thought I compiled the kernel with the
> BCM43xx options "on". Here's a snip:
> 
> shouryas at rush:~/fed$ grep BCM /boot/config-2.6.24-rc5
> CONFIG_BT_HCIBCM203X=m
> CONFIG_BCM43XX=m
> CONFIG_BCM43XX_DEBUG=y
> CONFIG_BCM43XX_DMA=y
> CONFIG_BCM43XX_PIO=y
> CONFIG_BCM43XX_DMA_AND_PIO_MODE=y
> # CONFIG_BCM43XX_DMA_MODE is not set
> # CONFIG_BCM43XX_PIO_MODE is not set
> CONFIG_DVB_BCM3510=m
> 
> When I do an lsmod, I see..
> shouryas at rush:~$ lsmod | grep -i bcm
> bcm43xx               433312  0
> ieee80211softmac       34944  1 bcm43xx
> ieee80211              49900  2 bcm43xx,ieee80211softmac
> 
> 
> I tried the ndiswrapper, by following the instructions on the Ubuntu
> site (I even re-compiled ndiswrapper-1.51)
> https://help.ubuntu.com/community/WifiDocs/Driver/bcm43xx/Feisty_No-Fluff#head-c8cbba1734885284e4f79c2054461c863169f1bf
> but, no it won't work :-(
> 
> 
> I found some good info on the Gnome Network-Manager list here:
> http://www.nabble.com/My-Laptop-td14293457.html
> 
> So I tried unloading the bcm43xx module(s), and uninstall the XP driver
> wrapped via ndiswrapper and then load b43 directly. But I get an error.
> 
> root at rush:/home/shouryas# rmmod bcm43xx
> root at rush:/home/shouryas# ndiswrapper -l
> bcmwl5 : driver installed
>          device (14E4:4311) present (alternate driver: ssb)
> root at rush:/home/shouryas# ndiswrapper -e bcmwl5
> root at rush:/home/shouryas# ndiswrapper -l
> root at rush:/home/shouryas# modprobe b43
> FATAL: Error inserting b43
> (/lib/modules/2.6.24-rc5/kernel/drivers/net/wireless/b43/b43.ko):
> Unknown symbol in module, or unknown parameter (see dmesg)
> root at rush:/home/shouryas# dmesg  /* giving the relvant snip here */
> [ 6086.380829] b43: Unknown symbol ssb_bus_pcmciabus_register
> 
> 
> --[At this point I apologize for this too-long email, I am trying to
> make some headway myself and documenting my observations]--
> I tried to see who should export the symbol ssb_bus_pcmciabus_register
> Expectedly, no one does
> root at rush:/proc# cat kallsyms | grep pcmcia | grep ssb
> yields nothing.
> 
> So, I tried to look into the source:
> Around line 656 of /home/shouryas/kernels/my2.6/drivers/ssb/main.c
> #ifdef CONFIG_SSB_PCMCIAHOST
> int ssb_bus_pcmciabus_register(struct ssb_bus *bus,
>                                 struct pcmcia_device *pcmcia_dev,
>                                 unsigned long baseaddr)
> {
>          int err;
> 
>          bus->bustype = SSB_BUSTYPE_PCMCIA;
>          bus->host_pcmcia = pcmcia_dev;
>          bus->ops = &ssb_pcmcia_ops;
> 
>          err = ssb_bus_register(bus, ssb_pcmcia_get_invariants, baseaddr);
>          if (!err) {
>                  ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane
> found on "
>                             "PCMCIA device %s\n", pcmcia_dev->devname);
>          }
> 
>          return err;
> }
> EXPORT_SYMBOL(ssb_bus_pcmciabus_register);
> #endif /* CONFIG_SSB_PCMCIAHOST */
> 
> I looked into my config file to see if CONFIG_SSB_PCMCIAHOST is defined.
> It is !
> root at rush:/proc# cat /boot/config | grep SSB
> CONFIG_SSB_POSSIBLE=y
> CONFIG_SSB=m
> CONFIG_SSB_PCIHOST_POSSIBLE=y
> CONFIG_SSB_PCIHOST=y
> CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
> CONFIG_SSB_PCMCIAHOST=y
> # CONFIG_SSB_SILENT is not set
> # CONFIG_SSB_DEBUG is not set
> CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
> CONFIG_SSB_DRIVER_PCICORE=y
> # CONFIG_USB_OHCI_HCD_SSB is not set
> 
> Also, I looked into dmesg, and see the line
> [   14.635610] ssb: Sonics Silicon Backplane found on PCI device
> 0000:0c:00.0
> 
> So, it seems that SSB_CONFIG_PCMCIA is defined (and no error in SSB 
> detection hoepfully) but then why is the
> symbol not exported ?
> 
> 
> I would appreciate if you somebody could provide me some hints to where
> to go and look for the problem. Maybe you can solve this immediately but
> still I'd appreciate only hints so that I can play at least some part in
>   resolving the situation.
> 
> I'd be happy to provide more info from my system.

You are making a number of mistakes. The biggest one is to try to use bcm43xx or b43 with
ndiswrapper. THEY ARE MUTUALLY EXCLUSIVE. If you want to use ndiswrapper, then we cannot help you.

A second minor mistake is to try to use bcm43xx when b43 is available. The actual hardware handling
is not that different; however, the MAC implementation in b43 (mac80211) is vastly superior to that
in bcm43xx (SoftMAC).

Please rebuild your 2.6.24-rc5 with bcm43xx disabled, but with ssb, mac80211 and b43 enabled. Please
enable ssb and b43 debugging. After the new kernel is built, installed and booted, check the output
of the following commands:

iwconfig
ifconfig

If ifconfig does not show eth1 or wlan1 (whatever your device is named) to be UP, then issue an
'ifup eth1' command, then

dmesg | grep ssb
dmesg | grep b43

Fix whatever problems that you can, then post the output of the last two.

Larry


From mb at bu3sch.de  Sat Dec 22 21:51:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 22 Dec 2007 21:51:30 +0100
Subject: [PATCH] ssb: Fix extraction of values from SPROM
Message-ID: <200712222151.30575.mb@bu3sch.de>

This fixes extraction of some values from the SPROM.
It mainly fixes extraction of antenna related values, which
is needed for another b43 fix sent later.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/ssb/pci.c
===================================================================
--- wireless-2.6.orig/drivers/ssb/pci.c	2007-12-14 13:15:42.000000000 +0100
+++ wireless-2.6/drivers/ssb/pci.c	2007-12-20 18:58:49.000000000 +0100
@@ -247,7 +247,7 @@ static void sprom_do_read(struct ssb_bus
 	int i;
 
 	for (i = 0; i < bus->sprom_size; i++)
-		sprom[i] = readw(bus->mmio + SSB_SPROM_BASE + (i * 2));
+		sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
 }
 
 static int sprom_do_write(struct ssb_bus *bus, const u16 *sprom)
@@ -297,10 +297,32 @@ err_ctlreg:
 	return err;
 }
 
+static s8 r123_extract_antgain(u8 sprom_revision, const u16 *in,
+			       u16 mask, u16 shift)
+{
+	u16 v;
+	u8 gain;
+
+	v = in[SPOFF(SSB_SPROM1_AGAIN)];
+	gain = (v & mask) >> shift;
+	if (gain == 0xFF)
+		gain = 2; /* If unset use 2dBm */
+	if (sprom_revision == 1) {
+		/* Convert to Q5.2 */
+		gain <<= 2;
+	} else {
+		/* Q5.2 Fractional part is stored in 0xC0 */
+		gain = ((gain & 0xC0) >> 6) | ((gain & 0x3F) << 2);
+	}
+
+	return (s8)gain;
+}
+
 static void sprom_extract_r123(struct ssb_sprom *out, const u16 *in)
 {
 	int i;
 	u16 v;
+	s8 gain;
 	u16 loc[3];
 
 	if (out->revision == 3) {			/* rev 3 moved MAC */
@@ -327,8 +349,15 @@ static void sprom_extract_r123(struct ss
 	SPEX(et0phyaddr, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET0A, 0);
 	SPEX(et1phyaddr, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET1A,
 	     SSB_SPROM1_ETHPHY_ET1A_SHIFT);
+	SPEX(et0mdcport, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET0M, 14);
+	SPEX(et1mdcport, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET1M, 15);
+	SPEX(board_rev, SSB_SPROM1_BINF, SSB_SPROM1_BINF_BREV, 0);
 	SPEX(country_code, SSB_SPROM1_BINF, SSB_SPROM1_BINF_CCODE,
 	     SSB_SPROM1_BINF_CCODE_SHIFT);
+	SPEX(ant_available_a, SSB_SPROM1_BINF, SSB_SPROM1_BINF_ANTA,
+	     SSB_SPROM1_BINF_ANTA_SHIFT);
+	SPEX(ant_available_bg, SSB_SPROM1_BINF, SSB_SPROM1_BINF_ANTBG,
+	     SSB_SPROM1_BINF_ANTBG_SHIFT);
 	SPEX(pa0b0, SSB_SPROM1_PA0B0, 0xFFFF, 0);
 	SPEX(pa0b1, SSB_SPROM1_PA0B1, 0xFFFF, 0);
 	SPEX(pa0b2, SSB_SPROM1_PA0B2, 0xFFFF, 0);
@@ -348,9 +377,22 @@ static void sprom_extract_r123(struct ss
 	     SSB_SPROM1_ITSSI_A_SHIFT);
 	SPEX(itssi_bg, SSB_SPROM1_ITSSI, SSB_SPROM1_ITSSI_BG, 0);
 	SPEX(boardflags_lo, SSB_SPROM1_BFLLO, 0xFFFF, 0);
-	SPEX(antenna_gain_a, SSB_SPROM1_AGAIN, SSB_SPROM1_AGAIN_A, 0);
-	SPEX(antenna_gain_bg, SSB_SPROM1_AGAIN, SSB_SPROM1_AGAIN_BG,
-	     SSB_SPROM1_AGAIN_BG_SHIFT);
+
+	/* Extract the antenna gain values. */
+	gain = r123_extract_antgain(out->revision, in,
+				    SSB_SPROM1_AGAIN_BG,
+				    SSB_SPROM1_AGAIN_BG_SHIFT);
+	out->antenna_gain.ghz24.a0 = gain;
+	out->antenna_gain.ghz24.a1 = gain;
+	out->antenna_gain.ghz24.a2 = gain;
+	out->antenna_gain.ghz24.a3 = gain;
+	gain = r123_extract_antgain(out->revision, in,
+				    SSB_SPROM1_AGAIN_A,
+				    SSB_SPROM1_AGAIN_A_SHIFT);
+	out->antenna_gain.ghz5.a0 = gain;
+	out->antenna_gain.ghz5.a1 = gain;
+	out->antenna_gain.ghz5.a2 = gain;
+	out->antenna_gain.ghz5.a3 = gain;
 }
 
 static void sprom_extract_r4(struct ssb_sprom *out, const u16 *in)
@@ -376,9 +418,10 @@ static void sprom_extract_r4(struct ssb_
 	     SSB_SPROM4_ETHPHY_ET1A_SHIFT);
 	SPEX(country_code, SSB_SPROM4_CCODE, 0xFFFF, 0);
 	SPEX(boardflags_lo, SSB_SPROM4_BFLLO, 0xFFFF, 0);
-	SPEX(antenna_gain_a, SSB_SPROM4_AGAIN, SSB_SPROM4_AGAIN_0, 0);
-	SPEX(antenna_gain_bg, SSB_SPROM4_AGAIN, SSB_SPROM4_AGAIN_1,
-	     SSB_SPROM4_AGAIN_1_SHIFT);
+	SPEX(ant_available_a, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_A,
+	     SSB_SPROM4_ANTAVAIL_A_SHIFT);
+	SPEX(ant_available_bg, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_BG,
+	     SSB_SPROM4_ANTAVAIL_BG_SHIFT);
 	SPEX(maxpwr_bg, SSB_SPROM4_MAXP_BG, SSB_SPROM4_MAXP_BG_MASK, 0);
 	SPEX(itssi_bg, SSB_SPROM4_MAXP_BG, SSB_SPROM4_ITSSI_BG,
 	     SSB_SPROM4_ITSSI_BG_SHIFT);
@@ -391,6 +434,19 @@ static void sprom_extract_r4(struct ssb_
 	SPEX(gpio2, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P2, 0);
 	SPEX(gpio3, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P3,
 	     SSB_SPROM4_GPIOB_P3_SHIFT);
+
+	/* Extract the antenna gain values. */
+	SPEX(antenna_gain.ghz24.a0, SSB_SPROM4_AGAIN01,
+	     SSB_SPROM4_AGAIN0, SSB_SPROM4_AGAIN0_SHIFT);
+	SPEX(antenna_gain.ghz24.a1, SSB_SPROM4_AGAIN01,
+	     SSB_SPROM4_AGAIN1, SSB_SPROM4_AGAIN1_SHIFT);
+	SPEX(antenna_gain.ghz24.a2, SSB_SPROM4_AGAIN23,
+	     SSB_SPROM4_AGAIN2, SSB_SPROM4_AGAIN2_SHIFT);
+	SPEX(antenna_gain.ghz24.a3, SSB_SPROM4_AGAIN23,
+	     SSB_SPROM4_AGAIN3, SSB_SPROM4_AGAIN3_SHIFT);
+	memcpy(&out->antenna_gain.ghz5, &out->antenna_gain.ghz24,
+	       sizeof(out->antenna_gain.ghz5));
+
 	/* TODO - get remaining rev 4 stuff needed */
 }
 
@@ -400,7 +456,7 @@ static int sprom_extract(struct ssb_bus 
 	memset(out, 0, sizeof(*out));
 
 	out->revision = in[size - 1] & 0x00FF;
-	ssb_printk(KERN_INFO PFX "SPROM revision %d detected.\n", out->revision);
+	ssb_dprintk(KERN_DEBUG PFX "SPROM revision %d detected.\n", out->revision);
 	if ((bus->chip_id & 0xFF00) == 0x4400) {
 		/* Workaround: The BCM44XX chip has a stupid revision
 		 * number stored in the SPROM.
@@ -445,9 +501,7 @@ static int ssb_pci_sprom_get(struct ssb_
 	err = sprom_check_crc(buf, bus->sprom_size);
 	if (err) {
 		/* check for rev 4 sprom - has special signature */
-		if (buf [32] == 0x5372) {
-			ssb_printk(KERN_WARNING PFX "Extracting a rev 4"
-				   " SPROM\n");
+		if (buf[32] == 0x5372) {
 			kfree(buf);
 			buf = kcalloc(SSB_SPROMSIZE_WORDS_R4, sizeof(u16),
 				      GFP_KERNEL);
Index: wireless-2.6/include/linux/ssb/ssb_regs.h
===================================================================
--- wireless-2.6.orig/include/linux/ssb/ssb_regs.h	2007-12-14 13:15:42.000000000 +0100
+++ wireless-2.6/include/linux/ssb/ssb_regs.h	2007-12-20 18:58:49.000000000 +0100
@@ -193,10 +193,10 @@
 #define  SSB_SPROM1_BINF_BREV		0x00FF	/* Board Revision */
 #define  SSB_SPROM1_BINF_CCODE		0x0F00	/* Country Code */
 #define  SSB_SPROM1_BINF_CCODE_SHIFT	8
-#define  SSB_SPROM1_BINF_ANTA		0x3000	/* Available A-PHY antennas */
-#define  SSB_SPROM1_BINF_ANTA_SHIFT	12
-#define  SSB_SPROM1_BINF_ANTBG		0xC000	/* Available B-PHY antennas */
-#define  SSB_SPROM1_BINF_ANTBG_SHIFT	14
+#define  SSB_SPROM1_BINF_ANTBG		0x3000	/* Available B-PHY and G-PHY antennas */
+#define  SSB_SPROM1_BINF_ANTBG_SHIFT	12
+#define  SSB_SPROM1_BINF_ANTA		0xC000	/* Available A-PHY antennas */
+#define  SSB_SPROM1_BINF_ANTA_SHIFT	14
 #define SSB_SPROM1_PA0B0		0x105E
 #define SSB_SPROM1_PA0B1		0x1060
 #define SSB_SPROM1_PA0B2		0x1062
@@ -221,9 +221,10 @@
 #define  SSB_SPROM1_ITSSI_A_SHIFT	8
 #define SSB_SPROM1_BFLLO		0x1072	/* Boardflags (low 16 bits) */
 #define SSB_SPROM1_AGAIN		0x1074	/* Antenna Gain (in dBm Q5.2) */
-#define  SSB_SPROM1_AGAIN_A		0x00FF	/* A-PHY */
-#define  SSB_SPROM1_AGAIN_BG		0xFF00	/* B-PHY and G-PHY */
-#define  SSB_SPROM1_AGAIN_BG_SHIFT	8
+#define  SSB_SPROM1_AGAIN_BG		0x00FF	/* B-PHY and G-PHY */
+#define  SSB_SPROM1_AGAIN_BG_SHIFT	0
+#define  SSB_SPROM1_AGAIN_A		0xFF00	/* A-PHY */
+#define  SSB_SPROM1_AGAIN_A_SHIFT	8
 
 /* SPROM Revision 2 (inherits from rev 1) */
 #define SSB_SPROM2_BFLHI		0x1038	/* Boardflags (high 16 bits) */
@@ -264,7 +265,7 @@
 #define  SSB_SPROM3_CCKPO_11M_SHIFT	12
 #define  SSB_SPROM3_OFDMGPO		0x107A	/* G-PHY OFDM Power Offset (4 bytes, BigEndian) */
 
-/* SPROM Revision 4 		entries with ?? in comment are unknown */
+/* SPROM Revision 4 */
 #define SSB_SPROM4_IL0MAC		0x104C	/* 6 byte MAC address for a/b/g/n */
 #define SSB_SPROM4_ET0MAC		0x1018	/* 6 bytes MAC address for Ethernet ?? */
 #define SSB_SPROM4_ET1MAC		0x1018	/* 6 bytes MAC address for 802.11a ?? */
@@ -275,13 +276,22 @@
 #define  SSB_SPROM4_ETHPHY_ET0M		(1<<14)	/* MDIO for enet0 */
 #define  SSB_SPROM4_ETHPHY_ET1M		(1<<15)	/* MDIO for enet1 */
 #define SSB_SPROM4_CCODE		0x1052	/* Country Code (2 bytes) */
-#define SSB_SPROM4_ANT_A		0x105D  /* A Antennas */
-#define SSB_SPROM4_ANT_BG		0x105C  /* B/G Antennas */
+#define SSB_SPROM4_ANTAVAIL		0x105D  /* Antenna available bitfields */
+#define SSB_SPROM4_ANTAVAIL_A		0x00FF	/* A-PHY bitfield */
+#define SSB_SPROM4_ANTAVAIL_A_SHIFT	0
+#define SSB_SPROM4_ANTAVAIL_BG		0xFF00	/* B-PHY and G-PHY bitfield */
+#define SSB_SPROM4_ANTAVAIL_BG_SHIFT	8
 #define SSB_SPROM4_BFLLO		0x1044	/* Boardflags (low 16 bits) */
-#define SSB_SPROM4_AGAIN		0x105E	/* Antenna Gain (in dBm Q5.2) */
-#define  SSB_SPROM4_AGAIN_0		0x00FF	/* Antenna 0 */
-#define  SSB_SPROM4_AGAIN_1		0xFF00	/* Antenna 1 */
-#define  SSB_SPROM4_AGAIN_1_SHIFT	8
+#define SSB_SPROM4_AGAIN01		0x105E	/* Antenna Gain (in dBm Q5.2) */
+#define  SSB_SPROM4_AGAIN0		0x00FF	/* Antenna 0 */
+#define  SSB_SPROM4_AGAIN0_SHIFT	0
+#define  SSB_SPROM4_AGAIN1		0xFF00	/* Antenna 1 */
+#define  SSB_SPROM4_AGAIN1_SHIFT	8
+#define SSB_SPROM4_AGAIN23		0x1060
+#define  SSB_SPROM4_AGAIN2		0x00FF	/* Antenna 2 */
+#define  SSB_SPROM4_AGAIN2_SHIFT	0
+#define  SSB_SPROM4_AGAIN3		0xFF00	/* Antenna 3 */
+#define  SSB_SPROM4_AGAIN3_SHIFT	8
 #define SSB_SPROM4_BFLHI		0x1046  /* Board Flags Hi */
 #define SSB_SPROM4_MAXP_BG		0x1080  /* Max Power BG in path 1 */
 #define  SSB_SPROM4_MAXP_BG_MASK	0x00FF  /* Mask for Max Power BG */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-20 18:53:57.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-20 18:58:49.000000000 +0100
@@ -3885,16 +3885,6 @@ static void b43_sprom_fixup(struct ssb_b
 	if (bus->boardinfo.vendor == PCI_VENDOR_ID_APPLE &&
 	    bus->boardinfo.type == 0x4E && bus->boardinfo.rev > 0x40)
 		bus->sprom.boardflags_lo |= B43_BFL_PACTRL;
-
-	/* Handle case when gain is not set in sprom */
-	if (bus->sprom.antenna_gain_a == 0xFF)
-		bus->sprom.antenna_gain_a = 2;
-	if (bus->sprom.antenna_gain_bg == 0xFF)
-		bus->sprom.antenna_gain_bg = 2;
-
-	/* Convert Antennagain values to Q5.2 */
-	bus->sprom.antenna_gain_a <<= 2;
-	bus->sprom.antenna_gain_bg <<= 2;
 }
 
 static void b43_wireless_exit(struct ssb_device *dev, struct b43_wl *wl)
Index: wireless-2.6/drivers/net/wireless/b43legacy/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43legacy/main.c	2007-12-20 18:53:57.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43legacy/main.c	2007-12-20 18:58:49.000000000 +0100
@@ -3573,11 +3573,6 @@ static void b43legacy_sprom_fixup(struct
 	    bus->boardinfo.type == 0x4E &&
 	    bus->boardinfo.rev > 0x40)
 		bus->sprom.boardflags_lo |= B43legacy_BFL_PACTRL;
-
-	/* Convert Antennagain values to Q5.2 */
-	if (bus->sprom.antenna_gain_bg == 0xFF)
-		bus->sprom.antenna_gain_bg = 2; /* if unset, use 2 dBm */
-	bus->sprom.antenna_gain_bg <<= 2;
 }
 
 static void b43legacy_wireless_exit(struct ssb_device *dev,
Index: wireless-2.6/drivers/net/wireless/b43legacy/phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43legacy/phy.c	2007-12-14 13:15:42.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43legacy/phy.c	2007-12-20 18:58:49.000000000 +0100
@@ -1859,7 +1859,7 @@ void b43legacy_phy_xmitpower(struct b43l
 	 * which accounts for the factor of 4 */
 #define REG_MAX_PWR 20
 	max_pwr = min(REG_MAX_PWR * 4
-		      - dev->dev->bus->sprom.antenna_gain_bg
+		      - dev->dev->bus->sprom.antenna_gain.ghz24.a0
 		      - 0x6, max_pwr);
 
 	/* find the desired power in Q5.2 - power_level is in dBm
Index: wireless-2.6/include/linux/ssb/ssb.h
===================================================================
--- wireless-2.6.orig/include/linux/ssb/ssb.h	2007-12-14 13:15:42.000000000 +0100
+++ wireless-2.6/include/linux/ssb/ssb.h	2007-12-20 18:58:49.000000000 +0100
@@ -22,7 +22,12 @@ struct ssb_sprom {
 	u8 et1mac[6];		/* MAC address for 802.11a */
 	u8 et0phyaddr;		/* MII address for enet0 */
 	u8 et1phyaddr;		/* MII address for enet1 */
+	u8 et0mdcport;		/* MDIO for enet0 */
+	u8 et1mdcport;		/* MDIO for enet1 */
+	u8 board_rev;		/* Board revision number from SPROM. */
 	u8 country_code;	/* Country Code */
+	u8 ant_available_a;	/* A-PHY antenna available bits (up to 4) */
+	u8 ant_available_bg;	/* B/G-PHY antenna available bits (up to 4) */
 	u16 pa0b0;
 	u16 pa0b1;
 	u16 pa0b2;
@@ -38,8 +43,18 @@ struct ssb_sprom {
 	u8 itssi_a;		/* Idle TSSI Target for A-PHY */
 	u8 itssi_bg;		/* Idle TSSI Target for B/G-PHY */
 	u16 boardflags_lo;	/* Boardflags (low 16 bits) */
-	u8 antenna_gain_a;	/* A-PHY Antenna gain (in dBm Q5.2) */
-	u8 antenna_gain_bg;	/* B/G-PHY Antenna gain (in dBm Q5.2) */
+
+	/* Antenna gain values for up to 4 antennas
+	 * on each band. Values in dBm/4 (Q5.2). Negative gain means the
+	 * loss in the connectors is bigger than the gain. */
+	struct {
+		struct {
+			s8 a0, a1, a2, a3;
+		} ghz24;	/* 2.4GHz band */
+		struct {
+			s8 a0, a1, a2, a3;
+		} ghz5;		/* 5GHz band */
+	} antenna_gain;
 
 	/* TODO - add any parameters needed from rev 2, 3, or 4 SPROMs */
 };


From mb at bu3sch.de  Sat Dec 22 21:54:20 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 22 Dec 2007 21:54:20 +0100
Subject: [PATCH] b43: Only select allowed TX and RX antennas
Message-ID: <200712222154.20424.mb@bu3sch.de>

This fixes antenna selection in b43. It adds a sanity check
for the antenna numbers we get from mac80211.

This patch depends on
[PATCH] ssb: Fix extraction of values from SPROM

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-12 19:55:48.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-12 19:55:53.000000000 +0100
@@ -2692,8 +2692,36 @@ static int b43_switch_phymode(struct b43
 	return err;
 }
 
-static int b43_antenna_from_ieee80211(u8 antenna)
+/* Check if the use of the antenna that ieee80211 told us to
+ * use is possible. This will fall back to DEFAULT.
+ * "antenna_nr" is the antenna identifier we got from ieee80211. */
+u8 b43_ieee80211_antenna_sanitize(struct b43_wldev *dev,
+				  u8 antenna_nr)
+{
+	u8 antenna_mask;
+
+	if (antenna_nr == 0) {
+		/* Zero means "use default antenna". That's always OK. */
+		return 0;
+	}
+
+	/* Get the mask of available antennas. */
+	if (dev->phy.gmode)
+		antenna_mask = dev->dev->bus->sprom.ant_available_bg;
+	else
+		antenna_mask = dev->dev->bus->sprom.ant_available_a;
+
+	if (!(antenna_mask & (1 << (antenna_nr - 1)))) {
+		/* This antenna is not available. Fall back to default. */
+		return 0;
+	}
+
+	return antenna_nr;
+}
+
+static int b43_antenna_from_ieee80211(struct b43_wldev *dev, u8 antenna)
 {
+	antenna = b43_ieee80211_antenna_sanitize(dev, antenna);
 	switch (antenna) {
 	case 0:		/* default/diversity */
 		return B43_ANTENNA_DEFAULT;
@@ -2713,14 +2741,10 @@ static int b43_op_config(struct ieee8021
 	struct b43_phy *phy;
 	unsigned long flags;
 	unsigned int new_phymode = 0xFFFF;
-	int antenna_tx;
-	int antenna_rx;
+	int antenna;
 	int err = 0;
 	u32 savedirqs;
 
-	antenna_tx = b43_antenna_from_ieee80211(conf->antenna_sel_tx);
-	antenna_rx = b43_antenna_from_ieee80211(conf->antenna_sel_rx);
-
 	mutex_lock(&wl->mutex);
 
 	/* Switch the PHY mode (if necessary). */
@@ -2781,8 +2805,10 @@ static int b43_op_config(struct ieee8021
 	}
 
 	/* Antennas for RX and management frame TX. */
-	b43_mgmtframe_txantenna(dev, antenna_tx);
-	b43_set_rx_antenna(dev, antenna_rx);
+	antenna = b43_antenna_from_ieee80211(dev, conf->antenna_sel_tx);
+	b43_mgmtframe_txantenna(dev, antenna);
+	antenna = b43_antenna_from_ieee80211(dev, conf->antenna_sel_rx);
+	b43_set_rx_antenna(dev, antenna);
 
 	/* Update templates for AP mode. */
 	if (b43_is_mode(wl, IEEE80211_IF_TYPE_AP))
Index: wireless-2.6/drivers/net/wireless/b43/main.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.h	2007-12-12 18:29:32.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.h	2007-12-12 19:55:53.000000000 +0100
@@ -96,6 +96,9 @@ static inline int b43_is_ofdm_rate(int r
 	return !b43_is_cck_rate(rate);
 }
 
+u8 b43_ieee80211_antenna_sanitize(struct b43_wldev *dev,
+				  u8 antenna_nr);
+
 void b43_tsf_read(struct b43_wldev *dev, u64 * tsf);
 void b43_tsf_write(struct b43_wldev *dev, u64 tsf);
 
Index: wireless-2.6/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/xmit.c	2007-12-12 18:29:32.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/xmit.c	2007-12-12 19:55:53.000000000 +0100
@@ -270,14 +270,15 @@ static void generate_txhdr_fw4(struct b4
 		phy_ctl |= B43_TX4_PHY_OFDM;
 	if (dev->short_preamble)
 		phy_ctl |= B43_TX4_PHY_SHORTPRMBL;
-	switch (txctl->antenna_sel_tx) {
-	case 0:
+
+	switch (b43_ieee80211_antenna_sanitize(dev, txctl->antenna_sel_tx)) {
+	case 0: /* Default */
 		phy_ctl |= B43_TX4_PHY_ANTLAST;
 		break;
-	case 1:
+	case 1: /* Antenna 0 */
 		phy_ctl |= B43_TX4_PHY_ANT0;
 		break;
-	case 2:
+	case 2: /* Antenna 1 */
 		phy_ctl |= B43_TX4_PHY_ANT1;
 		break;
 	default:


From mb at bu3sch.de  Sat Dec 22 21:56:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 22 Dec 2007 21:56:30 +0100
Subject: [PATCH] b43: Fix chip access validation for new devices
Message-ID: <200712222156.31112.mb@bu3sch.de>

This fixes chip access validation for newer devices
(4318 and up, I think)

This patch fixes probing of a PCMCIA based 4318 device.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-12 19:54:27.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-12 19:55:57.000000000 +0100
@@ -50,6 +50,9 @@
 #define B43_MMIO_XMITSTAT_1		0x174
 #define B43_MMIO_REV3PLUS_TSF_LOW	0x180	/* core rev >= 3 only */
 #define B43_MMIO_REV3PLUS_TSF_HIGH	0x184	/* core rev >= 3 only */
+#define B43_MMIO_TSF_CFP_REP		0x188
+#define B43_MMIO_TSF_CFP_START		0x18C
+#define B43_MMIO_TSF_CFP_MAXDUR		0x190
 
 /* 32-bit DMA */
 #define B43_MMIO_DMA32_BASE0		0x200
@@ -88,6 +91,8 @@
 #define B43_MMIO_RADIO_HWENABLED_LO	0x49A
 #define B43_MMIO_GPIO_CONTROL		0x49C
 #define B43_MMIO_GPIO_MASK		0x49E
+#define B43_MMIO_TSF_CFP_START_LOW	0x604
+#define B43_MMIO_TSF_CFP_START_HIGH	0x606
 #define B43_MMIO_TSF_0			0x632	/* core rev < 3 only */
 #define B43_MMIO_TSF_1			0x634	/* core rev < 3 only */
 #define B43_MMIO_TSF_2			0x636	/* core rev < 3 only */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-12 19:55:53.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-12 19:55:57.000000000 +0100
@@ -2408,32 +2408,42 @@ static void b43_periodic_tasks_setup(str
 	queue_delayed_work(dev->wl->hw->workqueue, work, 0);
 }
 
-/* Validate access to the chip (SHM) */
+/* Check if communication with the device works correctly. */
 static int b43_validate_chipaccess(struct b43_wldev *dev)
 {
-	u32 value;
-	u32 shm_backup;
+	u32 v, backup;
 
-	shm_backup = b43_shm_read32(dev, B43_SHM_SHARED, 0);
-	b43_shm_write32(dev, B43_SHM_SHARED, 0, 0xAA5555AA);
-	if (b43_shm_read32(dev, B43_SHM_SHARED, 0) != 0xAA5555AA)
-		goto error;
+	backup = b43_shm_read32(dev, B43_SHM_SHARED, 0);
+
+	/* Check for read/write and endianness problems. */
 	b43_shm_write32(dev, B43_SHM_SHARED, 0, 0x55AAAA55);
 	if (b43_shm_read32(dev, B43_SHM_SHARED, 0) != 0x55AAAA55)
 		goto error;
-	b43_shm_write32(dev, B43_SHM_SHARED, 0, shm_backup);
-
-	value = b43_read32(dev, B43_MMIO_MACCTL);
-	if ((value | B43_MACCTL_GMODE) !=
-	    (B43_MACCTL_GMODE | B43_MACCTL_IHR_ENABLED))
+	b43_shm_write32(dev, B43_SHM_SHARED, 0, 0xAA5555AA);
+	if (b43_shm_read32(dev, B43_SHM_SHARED, 0) != 0xAA5555AA)
 		goto error;
 
-	value = b43_read32(dev, B43_MMIO_GEN_IRQ_REASON);
-	if (value)
+	b43_shm_write32(dev, B43_SHM_SHARED, 0, backup);
+
+	if ((dev->dev->id.revision >= 3) && (dev->dev->id.revision <= 10)) {
+		/* The 32bit register shadows the two 16bit registers
+		 * with update sideeffects. Validate this. */
+		b43_write16(dev, B43_MMIO_TSF_CFP_START, 0xAAAA);
+		b43_write32(dev, B43_MMIO_TSF_CFP_START, 0xCCCCBBBB);
+		if (b43_read16(dev, B43_MMIO_TSF_CFP_START_LOW) != 0xBBBB)
+			goto error;
+		if (b43_read16(dev, B43_MMIO_TSF_CFP_START_HIGH) != 0xCCCC)
+			goto error;
+	}
+	b43_write32(dev, B43_MMIO_TSF_CFP_START, 0);
+
+	v = b43_read32(dev, B43_MMIO_MACCTL);
+	v |= B43_MACCTL_GMODE;
+	if (v != (B43_MACCTL_GMODE | B43_MACCTL_IHR_ENABLED))
 		goto error;
 
 	return 0;
-      error:
+error:
 	b43err(dev->wl, "Failed to validate the chipaccess\n");
 	return -ENODEV;
 }


From mb at bu3sch.de  Sat Dec 22 22:01:36 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 22 Dec 2007 22:01:36 +0100
Subject: [PATCH] ssb: Fix PCMCIA lowlevel register access
Message-ID: <200712222201.36705.mb@bu3sch.de>

This fixes lowlevel register access for PCMCIA based devices.

The patch also adds a temporary workaround for the device mac address.
It simply adds generation of a random address. The real SPROM extraction
will follow in another patch.
The temporary workaround will be removed then, but for now it's OK.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/ssb/pcmcia.c
===================================================================
--- wireless-2.6.orig/drivers/ssb/pcmcia.c	2007-12-09 21:33:20.000000000 +0100
+++ wireless-2.6/drivers/ssb/pcmcia.c	2007-12-09 22:16:59.000000000 +0100
@@ -94,7 +94,6 @@ int ssb_pcmcia_switch_core(struct ssb_bu
 			   struct ssb_device *dev)
 {
 	int err;
-	unsigned long flags;
 
 #if SSB_VERBOSE_PCMCIACORESWITCH_DEBUG
 	ssb_printk(KERN_INFO PFX
@@ -103,11 +102,9 @@ int ssb_pcmcia_switch_core(struct ssb_bu
 		   dev->core_index);
 #endif
 
-	spin_lock_irqsave(&bus->bar_lock, flags);
 	err = ssb_pcmcia_switch_coreidx(bus, dev->core_index);
 	if (!err)
 		bus->mapped_device = dev;
-	spin_unlock_irqrestore(&bus->bar_lock, flags);
 
 	return err;
 }
@@ -115,14 +112,12 @@ int ssb_pcmcia_switch_core(struct ssb_bu
 int ssb_pcmcia_switch_segment(struct ssb_bus *bus, u8 seg)
 {
 	int attempts = 0;
-	unsigned long flags;
 	conf_reg_t reg;
-	int res, err = 0;
+	int res;
 
 	SSB_WARN_ON((seg != 0) && (seg != 1));
 	reg.Offset = 0x34;
 	reg.Function = 0;
-	spin_lock_irqsave(&bus->bar_lock, flags);
 	while (1) {
 		reg.Action = CS_WRITE;
 		reg.Value = seg;
@@ -143,13 +138,11 @@ int ssb_pcmcia_switch_segment(struct ssb
 		udelay(10);
 	}
 	bus->mapped_pcmcia_seg = seg;
-out_unlock:
-	spin_unlock_irqrestore(&bus->bar_lock, flags);
-	return err;
+
+	return 0;
 error:
 	ssb_printk(KERN_ERR PFX "Failed to switch pcmcia segment\n");
-	err = -ENODEV;
-	goto out_unlock;
+	return -ENODEV;
 }
 
 static int select_core_and_segment(struct ssb_device *dev,
@@ -182,22 +175,33 @@ static int select_core_and_segment(struc
 static u16 ssb_pcmcia_read16(struct ssb_device *dev, u16 offset)
 {
 	struct ssb_bus *bus = dev->bus;
+	unsigned long flags;
+	int err;
+	u16 value = 0xFFFF;
 
-	if (unlikely(select_core_and_segment(dev, &offset)))
-		return 0xFFFF;
+	spin_lock_irqsave(&bus->bar_lock, flags);
+	err = select_core_and_segment(dev, &offset);
+	if (likely(!err))
+		value = readw(bus->mmio + offset);
+	spin_unlock_irqrestore(&bus->bar_lock, flags);
 
-	return readw(bus->mmio + offset);
+	return value;
 }
 
 static u32 ssb_pcmcia_read32(struct ssb_device *dev, u16 offset)
 {
 	struct ssb_bus *bus = dev->bus;
-	u32 lo, hi;
+	unsigned long flags;
+	int err;
+	u32 lo = 0xFFFFFFFF, hi = 0xFFFFFFFF;
 
-	if (unlikely(select_core_and_segment(dev, &offset)))
-		return 0xFFFFFFFF;
-	lo = readw(bus->mmio + offset);
-	hi = readw(bus->mmio + offset + 2);
+	spin_lock_irqsave(&bus->bar_lock, flags);
+	err = select_core_and_segment(dev, &offset);
+	if (likely(!err)) {
+		lo = readw(bus->mmio + offset);
+		hi = readw(bus->mmio + offset + 2);
+	}
+	spin_unlock_irqrestore(&bus->bar_lock, flags);
 
 	return (lo | (hi << 16));
 }
@@ -205,22 +209,31 @@ static u32 ssb_pcmcia_read32(struct ssb_
 static void ssb_pcmcia_write16(struct ssb_device *dev, u16 offset, u16 value)
 {
 	struct ssb_bus *bus = dev->bus;
+	unsigned long flags;
+	int err;
 
-	if (unlikely(select_core_and_segment(dev, &offset)))
-		return;
-	writew(value, bus->mmio + offset);
+	spin_lock_irqsave(&bus->bar_lock, flags);
+	err = select_core_and_segment(dev, &offset);
+	if (likely(!err))
+		writew(value, bus->mmio + offset);
+	mmiowb();
+	spin_unlock_irqrestore(&bus->bar_lock, flags);
 }
 
 static void ssb_pcmcia_write32(struct ssb_device *dev, u16 offset, u32 value)
 {
 	struct ssb_bus *bus = dev->bus;
+	unsigned long flags;
+	int err;
 
-	if (unlikely(select_core_and_segment(dev, &offset)))
-		return;
-	writeb((value & 0xFF000000) >> 24, bus->mmio + offset + 3);
-	writeb((value & 0x00FF0000) >> 16, bus->mmio + offset + 2);
-	writeb((value & 0x0000FF00) >> 8, bus->mmio + offset + 1);
-	writeb((value & 0x000000FF) >> 0, bus->mmio + offset + 0);
+	spin_lock_irqsave(&bus->bar_lock, flags);
+	err = select_core_and_segment(dev, &offset);
+	if (likely(!err)) {
+		writew((value & 0x0000FFFF), bus->mmio + offset);
+		writew(((value & 0xFFFF0000) >> 16), bus->mmio + offset + 2);
+	}
+	mmiowb();
+	spin_unlock_irqrestore(&bus->bar_lock, flags);
 }
 
 /* Not "static", as it's used in main.c */
@@ -231,10 +244,12 @@ const struct ssb_bus_ops ssb_pcmcia_ops 
 	.write32	= ssb_pcmcia_write32,
 };
 
+#include <linux/etherdevice.h>
 int ssb_pcmcia_get_invariants(struct ssb_bus *bus,
 			      struct ssb_init_invariants *iv)
 {
 	//TODO
+	random_ether_addr(iv->sprom.il0mac);
 	return 0;
 }
 
Index: wireless-2.6/include/linux/ssb/ssb.h
===================================================================
--- wireless-2.6.orig/include/linux/ssb/ssb.h	2007-12-09 22:16:39.000000000 +0100
+++ wireless-2.6/include/linux/ssb/ssb.h	2007-12-09 22:16:59.000000000 +0100
@@ -231,7 +231,8 @@ struct ssb_bus {
 	struct ssb_device *mapped_device;
 	/* Currently mapped PCMCIA segment. (bustype == SSB_BUSTYPE_PCMCIA only) */
 	u8 mapped_pcmcia_seg;
-	/* Lock for core and segment switching. */
+	/* Lock for core and segment switching.
+	 * On PCMCIA-host busses this is used to protect the whole MMIO access. */
 	spinlock_t bar_lock;
 
 	/* The bus this backplane is running on. */


From larry.finger at lwfinger.net  Sat Dec 22 22:55:38 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 22 Dec 2007 13:55:38 -0800
Subject: [PATCH] b43: Only select allowed TX and RX antennas
In-Reply-To: <200712222154.20424.mb@bu3sch.de>
References: <200712222154.20424.mb@bu3sch.de>
Message-ID: <476D87DA.5030908@lwfinger.net>

Michael Buesch wrote:
> This fixes antenna selection in b43. It adds a sanity check
> for the antenna numbers we get from mac80211.
> 
> This patch depends on
> [PATCH] ssb: Fix extraction of values from SPROM
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>

After applying the 4 patches you sent earlier, the compilation fails with

  CC [M]  drivers/ssb/main.o
drivers/net/wireless/b43/main.c: In function ?b43_ieee80211_antenna_sanitize?:
drivers/net/wireless/b43/main.c:2720: error: ?struct ssb_sprom? has no member named ?ant_available_bg?
drivers/net/wireless/b43/main.c:2722: error: ?struct ssb_sprom? has no member named ?ant_available_a?

These members of ssb_sprom are defined in the patch you sent to Felix Fietkau on Dec. 10, but not in
this patch set.

Larry



From mb at bu3sch.de  Sat Dec 22 23:08:05 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 22 Dec 2007 23:08:05 +0100
Subject: [PATCH] b43: Only select allowed TX and RX antennas
In-Reply-To: <476D87DA.5030908@lwfinger.net>
References: <200712222154.20424.mb@bu3sch.de> <476D87DA.5030908@lwfinger.net>
Message-ID: <200712222308.05818.mb@bu3sch.de>

On Saturday 22 December 2007 22:55:38 Larry Finger wrote:
> Michael Buesch wrote:
> > This fixes antenna selection in b43. It adds a sanity check
> > for the antenna numbers we get from mac80211.
> > 
> > This patch depends on
> > [PATCH] ssb: Fix extraction of values from SPROM
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> After applying the 4 patches you sent earlier, the compilation fails with
> 
>   CC [M]  drivers/ssb/main.o
> drivers/net/wireless/b43/main.c: In function ?b43_ieee80211_antenna_sanitize?:
> drivers/net/wireless/b43/main.c:2720: error: ?struct ssb_sprom? has no member named ?ant_available_bg?
> drivers/net/wireless/b43/main.c:2722: error: ?struct ssb_sprom? has no member named ?ant_available_a?
> 
> These members of ssb_sprom are defined in the patch you sent to Felix Fietkau on Dec. 10, but not in
> this patch set.

This patch was included in the series I just sent.
[PATCH] ssb: Fix extraction of values from SPROM

> Index: wireless-2.6/include/linux/ssb/ssb.h
> ===================================================================
> --- wireless-2.6.orig/include/linux/ssb/ssb.h   2007-12-14
> 13:15:42.000000000 +0100 +++ wireless-2.6/include/linux/ssb/ssb.h       
> 2007-12-20 18:58:49.000000000 +0100 @@ -22,7 +22,12 @@ struct ssb_sprom {
>         u8 et1mac[6];           /* MAC address for 802.11a */
>         u8 et0phyaddr;          /* MII address for enet0 */
>         u8 et1phyaddr;          /* MII address for enet1 */
> +       u8 et0mdcport;          /* MDIO for enet0 */
> +       u8 et1mdcport;          /* MDIO for enet1 */
> +       u8 board_rev;           /* Board revision number from SPROM. */
>         u8 country_code;        /* Country Code */
> +       u8 ant_available_a;     /* A-PHY antenna available bits (up to 4)
> +       u8 ant_available_bg;    /* B/G-PHY antenna available bits (up to

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sat Dec 22 23:29:48 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 22 Dec 2007 14:29:48 -0800
Subject: [PATCH] b43: Only select allowed TX and RX antennas
In-Reply-To: <476D87DA.5030908@lwfinger.net>
References: <200712222154.20424.mb@bu3sch.de> <476D87DA.5030908@lwfinger.net>
Message-ID: <476D8FDC.8050309@lwfinger.net>

Larry Finger wrote:
> Michael Buesch wrote:
>> This fixes antenna selection in b43. It adds a sanity check
>> for the antenna numbers we get from mac80211.
>>
>> This patch depends on
>> [PATCH] ssb: Fix extraction of values from SPROM
>>
>> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> After applying the 4 patches you sent earlier, the compilation fails with
> 
>   CC [M]  drivers/ssb/main.o
> drivers/net/wireless/b43/main.c: In function ?b43_ieee80211_antenna_sanitize?:
> drivers/net/wireless/b43/main.c:2720: error: ?struct ssb_sprom? has no member named ?ant_available_bg?
> drivers/net/wireless/b43/main.c:2722: error: ?struct ssb_sprom? has no member named ?ant_available_a?
> 
> These members of ssb_sprom are defined in the patch you sent to Felix Fietkau on Dec. 10, but not in
> this patch set.
> 
> Larry

Please ignore the noise in this message. I had mangled the first patch in the series of four. It now
compiles and I am about to start testing.

Larry


From geekypenguin at gmail.com  Sat Dec 22 23:52:17 2007
From: geekypenguin at gmail.com (Jory A. Pratt)
Date: Sat, 22 Dec 2007 16:52:17 -0600
Subject: Last 4 patches from Michael
In-Reply-To: <200712222151.30575.mb@bu3sch.de>
References: <200712222151.30575.mb@bu3sch.de>
Message-ID: <476D9521.9000401@gmail.com>

I have just tested the last four patches from Michael. Compilation is
fine and no regressions that I have seen as of yet. My 4306 and 4318 are
working just fine with the changes.

-Jory


From stefano.brivio at polimi.it  Sun Dec 23 04:10:57 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Sun, 23 Dec 2007 04:10:57 +0100
Subject: [PATCH] b43: Only select allowed TX and RX antennas
In-Reply-To: <200712222154.20424.mb@bu3sch.de>
References: <200712222154.20424.mb@bu3sch.de>
Message-ID: <20071223041057.074286bd@morte>

On Sat, 22 Dec 2007 21:54:20 +0100
Michael Buesch <mb at bu3sch.de> wrote:

> This fixes antenna selection in b43. It adds a sanity check
> for the antenna numbers we get from mac80211.

Just FYI. I'm going to port this patch to b43legacy, as soon as I figure
out exactly the differences between v3 and v4 firmware devices here.


-- 
Ciao
Stefano


From sarcarsh at gmail.com  Sun Dec 23 05:16:08 2007
From: sarcarsh at gmail.com (Shourya Sarcar)
Date: Sun, 23 Dec 2007 09:46:08 +0530
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <476D567D.3020401@lwfinger.net>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
Message-ID: <476DE108.6030306@gmail.com>

Larry Finger wrote:
> 
> You are making a number of mistakes. The biggest one is to try to use bcm43xx or b43 with
> ndiswrapper. THEY ARE MUTUALLY EXCLUSIVE. If you want to use ndiswrapper, then we cannot help you.

Thanks, got it ! I am focussing on getting b43 support now. ndiswrapper 
is not wrapping anything now.

> 
> A second minor mistake is to try to use bcm43xx when b43 is available. The actual hardware handling
> is not that different; however, the MAC implementation in b43 (mac80211) is vastly superior to that
> in bcm43xx (SoftMAC).

Thanks for pointing out. Only b43 from now !

> 
> Please rebuild your 2.6.24-rc5 with bcm43xx disabled, but with ssb, mac80211 and b43 enabled. Please
> enable ssb and b43 debugging. 

Did this and compiled 2.6.24-rc5 kernel cleanly. Rebooted.

After the new kernel is built, installed and booted, check the output
> of the following commands:
> 
> iwconfig
> ifconfig

shouryas at rush:~$ iwconfig
lo        no wireless extensions.

eth0      no wireless extensions.


> 
> If ifconfig does not show eth1 or wlan1 (whatever your device is named) to be UP, then issue an
> 'ifup eth1' command, then

root at rush:/home/shouryas# ifup eth1
Ignoring unknown interface eth1=eth1.
(Same for wlan0, wlan1)


> 
> dmesg | grep ssb
> dmesg | grep b43
> 
> Fix whatever problems that you can, then post the output of the last two.

root at rush:/home/shouryas# dmesg | grep "ssb\|b43"
[   43.324090] ssb: Sonics Silicon Backplane found on PCI device 
0000:0c:00.0
[   53.899968] b43: disagrees about version of symbol ssb_device_is_enabled
[   53.899974] b43: Unknown symbol ssb_device_is_enabled
[   53.900126] b43: disagrees about version of symbol 
ssb_pcicore_dev_irqvecs_enable
[   53.900129] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
[   53.900214] b43: disagrees about version of symbol ssb_bus_may_powerdown
[   53.900216] b43: Unknown symbol ssb_bus_may_powerdown
[   53.900500] b43: disagrees about version of symbol ssb_bus_unregister
[   53.900502] b43: Unknown symbol ssb_bus_unregister
[   53.900661] b43: disagrees about version of symbol ssb_set_devtypedata
[   53.900663] b43: Unknown symbol ssb_set_devtypedata
[   53.900850] b43: disagrees about version of symbol ssb_device_disable
[   53.900852] b43: Unknown symbol ssb_device_disable
[   53.901030] b43: disagrees about version of symbol ssb_dma_set_mask
[   53.901032] b43: Unknown symbol ssb_dma_set_mask
[   53.901320] b43: disagrees about version of symbol ssb_device_enable
[   53.901322] b43: Unknown symbol ssb_device_enable
[   53.901437] b43: disagrees about version of symbol ssb_driver_unregister
[   53.901439] b43: Unknown symbol ssb_driver_unregister
[   53.901577] b43: disagrees about version of symbol __ssb_driver_register
[   53.901579] b43: Unknown symbol __ssb_driver_register
[   53.901809] b43: Unknown symbol ssb_bus_pcmciabus_register
[   53.901891] b43: disagrees about version of symbol ssb_bus_powerup
[   53.901893] b43: Unknown symbol ssb_bus_powerup
[   53.902404] b43: disagrees about version of symbol ssb_dma_translation
[   53.902406] b43: Unknown symbol ssb_dma_translation


To confirm, I am building the 2.6.24-rc5 kernel and booting into the same.

> 
> Larry
> 

Some pointers appreciated.

Thanks in advance,
Shourya


From larry.finger at lwfinger.net  Sun Dec 23 07:13:41 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 22 Dec 2007 22:13:41 -0800
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <476DE108.6030306@gmail.com>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
	<476DE108.6030306@gmail.com>
Message-ID: <476DFC95.9010904@lwfinger.net>

Shourya Sarcar wrote:
> 
> root at rush:/home/shouryas# dmesg | grep "ssb\|b43"
> [   43.324090] ssb: Sonics Silicon Backplane found on PCI device
> 0000:0c:00.0
> [   53.899968] b43: disagrees about version of symbol ssb_device_is_enabled
> [   53.899974] b43: Unknown symbol ssb_device_is_enabled
> [   53.900126] b43: disagrees about version of symbol
> ssb_pcicore_dev_irqvecs_enable
> [   53.900129] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
> [   53.900214] b43: disagrees about version of symbol ssb_bus_may_powerdown
> [   53.900216] b43: Unknown symbol ssb_bus_may_powerdown
> [   53.900500] b43: disagrees about version of symbol ssb_bus_unregister
> [   53.900502] b43: Unknown symbol ssb_bus_unregister
> [   53.900661] b43: disagrees about version of symbol ssb_set_devtypedata
> [   53.900663] b43: Unknown symbol ssb_set_devtypedata
> [   53.900850] b43: disagrees about version of symbol ssb_device_disable
> [   53.900852] b43: Unknown symbol ssb_device_disable
> [   53.901030] b43: disagrees about version of symbol ssb_dma_set_mask
> [   53.901032] b43: Unknown symbol ssb_dma_set_mask
> [   53.901320] b43: disagrees about version of symbol ssb_device_enable
> [   53.901322] b43: Unknown symbol ssb_device_enable
> [   53.901437] b43: disagrees about version of symbol ssb_driver_unregister
> [   53.901439] b43: Unknown symbol ssb_driver_unregister
> [   53.901577] b43: disagrees about version of symbol __ssb_driver_register
> [   53.901579] b43: Unknown symbol __ssb_driver_register
> [   53.901809] b43: Unknown symbol ssb_bus_pcmciabus_register
> [   53.901891] b43: disagrees about version of symbol ssb_bus_powerup
> [   53.901893] b43: Unknown symbol ssb_bus_powerup
> [   53.902404] b43: disagrees about version of symbol ssb_dma_translation
> [   53.902406] b43: Unknown symbol ssb_dma_translation
> 
> 
> To confirm, I am building the 2.6.24-rc5 kernel and booting into the same.

I'm not sure about the problem, but something has gone wrong with your kernel build and/or the
install. After the 'make' step finished, did you issue a 'sudo make modules_install install'? If
not, that could make the symbol versions disagree.

Larry


From sarcarsh at gmail.com  Sun Dec 23 10:27:53 2007
From: sarcarsh at gmail.com (Shourya Sarcar)
Date: Sun, 23 Dec 2007 14:57:53 +0530
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <476DFC95.9010904@lwfinger.net>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>
Message-ID: <476E2A19.1080205@gmail.com>

Larry Finger wrote:

>> To confirm, I am building the 2.6.24-rc5 kernel and booting into the same.
> 
> I'm not sure about the problem, but something has gone wrong with your kernel build and/or the
> install. After the 'make' step finished, did you issue a 'sudo make modules_install install'? If
> not, that could make the symbol versions disagree.
> 
> Larry


Thanks Larry. Yes, I have done the make modules_install install part as
well. I am also tempted to thing that I missed a step or something in
the kernel build process, but this seems to be the only disgruntled module.

dmesg | grep "disagrees" | grep -v b43 ==> returns null


Now if I "rmmod ssb" and then "modprobe b43", then the module loads 
without issues. But does not "latch on" to the eth1 device (which is my 
usual wireless)

root at rush:/home/shouryas# iwconfig
lo        no wireless extensions.

eth0      no wireless extensions.

eth1      no wireless extensions.

wlan0_rename  IEEE 802.11g  ESSID:""
           Mode:Managed  Channel:0  Access Point: Not-Associated
           Tx-Power=0 dBm
           Retry min limit:7   RTS thr:off   Fragment thr=2346 B
           Encryption key:off
           Link Quality:0  Signal level:0  Noise level:0
           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
           Tx excessive retries:0  Invalid misc:0   Missed beacon:0




--------

Also attaching a snip from my .config file, if you could quickly take a
look and tell me if I am making some configuration mistake about ssb/b43
here:



shouryas at rush:~/kernels/my2.6$ grep -i "ssb\|bc*m*43" /boot/config
# CONFIG_BCM43XX is not set
CONFIG_B43=m
CONFIG_B43_PCI_AUTOSELECT=y
CONFIG_B43_PCICORE_AUTOSELECT=y
CONFIG_B43_PCMCIA=y
CONFIG_B43_RFKILL=y
CONFIG_B43_DEBUG=y
CONFIG_B43_DMA=y
CONFIG_B43_PIO=y
CONFIG_B43_DMA_AND_PIO_MODE=y
# CONFIG_B43_DMA_MODE is not set
# CONFIG_B43_PIO_MODE is not set
CONFIG_B43LEGACY=m
CONFIG_B43LEGACY_PCI_AUTOSELECT=y
CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
CONFIG_B43LEGACY_DEBUG=y
CONFIG_B43LEGACY_DMA=y
CONFIG_B43LEGACY_PIO=y
CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
# CONFIG_B43LEGACY_DMA_MODE is not set
# CONFIG_B43LEGACY_PIO_MODE is not set
CONFIG_SSB_POSSIBLE=y
CONFIG_SSB=m
CONFIG_SSB_PCIHOST_POSSIBLE=y
CONFIG_SSB_PCIHOST=y
CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
CONFIG_SSB_PCMCIAHOST=y
# CONFIG_SSB_SILENT is not set
CONFIG_SSB_DEBUG=y
CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
CONFIG_SSB_DRIVER_PCICORE=y
# CONFIG_USB_OHCI_HCD_SSB is not set




Thanks for your help,
Shourya




From johannes at sipsolutions.net  Sun Dec 23 10:40:27 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 23 Dec 2007 10:40:27 +0100
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <476E2A19.1080205@gmail.com>
	(sfid-20071223_092840_824491_0691F36B)
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>
	<476E2A19.1080205@gmail.com> (sfid-20071223_092840_824491_0691F36B)
Message-ID: <1198402827.4058.0.camel@johannes.berg>


> Now if I "rmmod ssb" and then "modprobe b43", then the module loads 
> without issues. But does not "latch on" to the eth1 device (which is my 
> usual wireless)

> wlan0_rename  IEEE 802.11g  ESSID:""
>            Mode:Managed  Channel:0  Access Point: Not-Associated
>            Tx-Power=0 dBm
>            Retry min limit:7   RTS thr:off   Fragment thr=2346 B
>            Encryption key:off
>            Link Quality:0  Signal level:0  Noise level:0
>            Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>            Tx excessive retries:0  Invalid misc:0   Missed beacon:0

That's a bug in your udev rules. Search the archives for this list,
Larry recently posted a very long and detailed explanation.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071223/ef5e70b9/attachment.pgp>

From johannes at sipsolutions.net  Sun Dec 23 11:09:27 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 23 Dec 2007 11:09:27 +0100
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <1198402827.4058.0.camel@johannes.berg>
	(sfid-20071223_094140_414357_81B4D191)
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>
	<476E2A19.1080205@gmail.com> (sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>
	(sfid-20071223_094140_414357_81B4D191)
Message-ID: <1198404567.4058.2.camel@johannes.berg>


> > wlan0_rename  IEEE 802.11g  ESSID:""
> >            Mode:Managed  Channel:0  Access Point: Not-Associated
> >            Tx-Power=0 dBm
> >            Retry min limit:7   RTS thr:off   Fragment thr=2346 B
> >            Encryption key:off
> >            Link Quality:0  Signal level:0  Noise level:0
> >            Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
> >            Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> 
> That's a bug in your udev rules. Search the archives for this list,
> Larry recently posted a very long and detailed explanation.

Meanwhile, you can of course use wlan0_rename just fine. Or rename it:

ip link set eth1 name wmaster0
ip link set wlan0_rename name eth1

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071223/fc33a657/attachment.pgp>

From sarcarsh at gmail.com  Sun Dec 23 11:50:21 2007
From: sarcarsh at gmail.com (Shourya Sarcar)
Date: Sun, 23 Dec 2007 16:20:21 +0530
Subject: Cannot get BCM94311MCG working against 2.6.24-rc5
In-Reply-To: <1198404567.4058.2.camel@johannes.berg>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>	
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>	
	<476E2A19.1080205@gmail.com>	
	(sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>	
	(sfid-20071223_094140_414357_81B4D191)
	<1198404567.4058.2.camel@johannes.berg>
Message-ID: <476E3D6D.1010203@gmail.com>

Johannes Berg wrote:
>>> wlan0_rename  IEEE 802.11g  ESSID:""
>>>            Mode:Managed  Channel:0  Access Point: Not-Associated
>>>            Tx-Power=0 dBm
>>>            Retry min limit:7   RTS thr:off   Fragment thr=2346 B
>>>            Encryption key:off
>>>            Link Quality:0  Signal level:0  Noise level:0
>>>            Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>>            Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>> That's a bug in your udev rules. Search the archives for this list,
>> Larry recently posted a very long and detailed explanation.
> 
> Meanwhile, you can of course use wlan0_rename just fine. Or rename it:
> 
> ip link set eth1 name wmaster0
> ip link set wlan0_rename name eth1
> 
> johannes

Thanks to you all, this email is reaching you via my wireless interface 
:-) Johannes, I edited the udev rules and then realized I also need to 
have firmware :) Did that. Things good.

But one problem still remains. When I boot in, the b43 modules does not 
load. It complains :
[   42.660654] ssb: Sonics Silicon Backplane found on PCI device 
0000:0c:00.0
[   53.325307] b43: disagrees about version of symbol ssb_device_is_enabled
[   53.325313] b43: Unknown symbol ssb_device_is_enabled
[   53.325466] b43: disagrees about version of symbol 
ssb_pcicore_dev_irqvecs_enable
[   53.325468] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
[   53.325553] b43: disagrees about version of symbol ssb_bus_may_powerdown
[   53.325555] b43: Unknown symbol ssb_bus_may_powerdown

< and more similar lines....>

So to load the module, I have to :
root at rush:/home/shouryas# rmmod ssb; modprobe b43

and then I get the wireless stuff fine.

Any thoughts on why at boot time the module linking would fail but 
happen OK subsequently ?

Anyway, thanks to Larry and you for your help.
Shourya







From sarcarsh at gmail.com  Sun Dec 23 13:36:31 2007
From: sarcarsh at gmail.com (Shourya Sarcar)
Date: Sun, 23 Dec 2007 18:06:31 +0530
Subject: [PATCH] ssb: Fix extraction of values from SPROM
In-Reply-To: <200712222151.30575.mb@bu3sch.de>
References: <200712222151.30575.mb@bu3sch.de>
Message-ID: <476E564F.4060307@gmail.com>

Michael Buesch wrote:
> This fixes extraction of some values from the SPROM.
> It mainly fixes extraction of antenna related values, which
> is needed for another b43 fix sent later.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> Index: wireless-2.6/drivers/ssb/pci.c
> ===================================================================
> --- wireless-2.6.orig/drivers/ssb/pci.c	2007-12-14 13:15:42.000000000 +0100
> +++ wireless-2.6/drivers/ssb/pci.c	2007-12-20 18:58:49.000000000 +0100
> 


Will these patches that you posted today work against the 2.6.24-rc5 
kernel or do I need to have a separate branch (wireless-2.6 ?) to test 
these. I am not sure if I will add much value but I would be happy to 
test these on my machine. (Dell D620 with a BCM94311MCG)

New on this list, so sorry if I am asking questions that are obvious or 
the info is published elsewhere.

Regards,
Shourya


From mb at bu3sch.de  Sun Dec 23 18:13:40 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 23 Dec 2007 18:13:40 +0100
Subject: [PATCH] ssb: Fix extraction of values from SPROM
In-Reply-To: <476E564F.4060307@gmail.com>
References: <200712222151.30575.mb@bu3sch.de> <476E564F.4060307@gmail.com>
Message-ID: <200712231813.40299.mb@bu3sch.de>

On Sunday 23 December 2007 13:36:31 Shourya Sarcar wrote:
> Michael Buesch wrote:
> > This fixes extraction of some values from the SPROM.
> > It mainly fixes extraction of antenna related values, which
> > is needed for another b43 fix sent later.
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> > 
> > Index: wireless-2.6/drivers/ssb/pci.c
> > ===================================================================
> > --- wireless-2.6.orig/drivers/ssb/pci.c	2007-12-14 13:15:42.000000000 +0100
> > +++ wireless-2.6/drivers/ssb/pci.c	2007-12-20 18:58:49.000000000 +0100
> > 
> 
> 
> Will these patches that you posted today work against the 2.6.24-rc5 
> kernel or do I need to have a separate branch (wireless-2.6 ?) to test 
> these. I am not sure if I will add much value but I would be happy to 
> test these on my machine. (Dell D620 with a BCM94311MCG)
> 
> New on this list, so sorry if I am asking questions that are obvious or 
> the info is published elsewhere.

All patches I send are against the wireless-2.6 tree branch #everything.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sun Dec 23 20:39:18 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 23 Dec 2007 11:39:18 -0800
Subject: Boot time module loading problem
In-Reply-To: <476E3D6D.1010203@gmail.com>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>	
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>	
	<476E2A19.1080205@gmail.com>	
	(sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>	
	(sfid-20071223_094140_414357_81B4D191)
	<1198404567.4058.2.camel@johannes.berg>
	<476E3D6D.1010203@gmail.com>
Message-ID: <476EB966.1020304@lwfinger.net>

With 2.6.24-rc5, a b43 user reports a problem at bootup. The b43 module, which should be loaded by
the ssb module, fails with the following type of message:

ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0
b43: disagrees about version of symbol ssb_device_is_enabled
b43: Unknown symbol ssb_device_is_enabled
b43: disagrees about version of symbol ssb_pcicore_dev_irqvecs_enable
b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
b43: disagrees about version of symbol ssb_bus_may_powerdown
b43: Unknown symbol ssb_bus_may_powerdown

< and more similar lines....>

If the user issues the commands

rmmod ssb; modprobe b43

then the modules are loaded correctly and the wireless device works.

What could be causing such a problem?

Larry



From johannes at sipsolutions.net  Sun Dec 23 21:05:12 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 23 Dec 2007 21:05:12 +0100
Subject: Boot time module loading problem
In-Reply-To: <476EB966.1020304@lwfinger.net>
	(sfid-20071223_194013_768138_E3188416)
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>
	<476E2A19.1080205@gmail.com> (sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>
	(sfid-20071223_094140_414357_81B4D191)
	<1198404567.4058.2.camel@johannes.berg>
	<476E3D6D.1010203@gmail.com>  <476EB966.1020304@lwfinger.net>
	(sfid-20071223_194013_768138_E3188416)
Message-ID: <1198440312.4487.3.camel@johannes.berg>


> What could be causing such a problem?

I would guess that user has "ssb" loaded from his initrd for some reason
and upgraded the modules by hand.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20071223/e7b306a6/attachment.pgp>

From mb at bu3sch.de  Sun Dec 23 22:25:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 23 Dec 2007 22:25:59 +0100
Subject: Boot time module loading problem
In-Reply-To: <476EB966.1020304@lwfinger.net>
References: <476D38F9.4090802@gmail.com> <476E3D6D.1010203@gmail.com>
	<476EB966.1020304@lwfinger.net>
Message-ID: <200712232226.00194.mb@bu3sch.de>

On Sunday 23 December 2007 20:39:18 Larry Finger wrote:
> With 2.6.24-rc5, a b43 user reports a problem at bootup. The b43 module, which should be loaded by
> the ssb module, fails with the following type of message:
> 
> ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0
> b43: disagrees about version of symbol ssb_device_is_enabled
> b43: Unknown symbol ssb_device_is_enabled
> b43: disagrees about version of symbol ssb_pcicore_dev_irqvecs_enable
> b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
> b43: disagrees about version of symbol ssb_bus_may_powerdown
> b43: Unknown symbol ssb_bus_may_powerdown

This is a module versioning warning.
I think it's caused by a b43 compiled against a different
kernel tree than the currently running ssb module.
Different may mean that only a tiny little thing was changed, which
might not affect the API at all. modversion will complain then.

I don't use module versioning, so I can't help you how to fix this.
I'd simply suggest turning off module versioning.

-- 
Greetings Michael.


From sarcarsh at gmail.com  Mon Dec 24 02:57:02 2007
From: sarcarsh at gmail.com (Shourya Sarcar)
Date: Mon, 24 Dec 2007 07:27:02 +0530
Subject: Boot time module loading problem
In-Reply-To: <476EB966.1020304@lwfinger.net>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>	
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>	
	<476E2A19.1080205@gmail.com>	
	(sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>	
	(sfid-20071223_094140_414357_81B4D191)
	<1198404567.4058.2.camel@johannes.berg>
	<476E3D6D.1010203@gmail.com> <476EB966.1020304@lwfinger.net>
Message-ID: <476F11EE.7070204@gmail.com>

Larry Finger wrote:
> With 2.6.24-rc5, a b43 user reports a problem at bootup. The b43
> module, which should be loaded by the ssb module, fails with the
> following type of message:
> 
> ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0 b43:
> disagrees about version of symbol ssb_device_is_enabled b43: Unknown
> symbol ssb_device_is_enabled b43: disagrees about version of symbol
> ssb_pcicore_dev_irqvecs_enable b43: Unknown symbol
> ssb_pcicore_dev_irqvecs_enable b43: disagrees about version of symbol
> ssb_bus_may_powerdown b43: Unknown symbol ssb_bus_may_powerdown
> 
> < and more similar lines....>
> 
> If the user issues the commands
> 
> rmmod ssb; modprobe b43
> 
> then the modules are loaded correctly and the wireless device works.
> 
> What could be causing such a problem?
> 
> Larry
> 

Larry, thanks for pursuing this. I upgraded to 2.6.24-rc6 last night and
I don't see this issue anymore. One might think that the clean remake
solved the problem (which I am pretty sure I did with rc5 as well); but 
still does not explain with 2.6.24-rc5, the module would not load on 
first attempt but then load after the manual:

# rmmod ssb;modprobe b43

Best regards,
Shourya






From larry.finger at lwfinger.net  Mon Dec 24 05:54:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 23 Dec 2007 20:54:00 -0800
Subject: Boot time module loading problem
In-Reply-To: <476F11EE.7070204@gmail.com>
References: <476D38F9.4090802@gmail.com> <476D567D.3020401@lwfinger.net>	
	<476DE108.6030306@gmail.com> <476DFC95.9010904@lwfinger.net>	
	<476E2A19.1080205@gmail.com>	
	(sfid-20071223_092840_824491_0691F36B)
	<1198402827.4058.0.camel@johannes.berg>	
	(sfid-20071223_094140_414357_81B4D191)
	<1198404567.4058.2.camel@johannes.berg>
	<476E3D6D.1010203@gmail.com> <476EB966.1020304@lwfinger.net>
	<476F11EE.7070204@gmail.com>
Message-ID: <476F3B68.9040702@lwfinger.net>

Shourya Sarcar wrote:
> Larry Finger wrote:
>> With 2.6.24-rc5, a b43 user reports a problem at bootup. The b43
>> module, which should be loaded by the ssb module, fails with the
>> following type of message:
>>
>> ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0 b43:
>> disagrees about version of symbol ssb_device_is_enabled b43: Unknown
>> symbol ssb_device_is_enabled b43: disagrees about version of symbol
>> ssb_pcicore_dev_irqvecs_enable b43: Unknown symbol
>> ssb_pcicore_dev_irqvecs_enable b43: disagrees about version of symbol
>> ssb_bus_may_powerdown b43: Unknown symbol ssb_bus_may_powerdown
>>
>> < and more similar lines....>
>>
>> If the user issues the commands
>>
>> rmmod ssb; modprobe b43
>>
>> then the modules are loaded correctly and the wireless device works.
>>
>> What could be causing such a problem?
>>
>> Larry
>>
> 
> Larry, thanks for pursuing this. I upgraded to 2.6.24-rc6 last night and
> I don't see this issue anymore. One might think that the clean remake
> solved the problem (which I am pretty sure I did with rc5 as well); but
> still does not explain with 2.6.24-rc5, the module would not load on
> first attempt but then load after the manual:
> 
> # rmmod ssb;modprobe b43

Johannes may have been right and that you had a stale initrd. I was going to have you try a 'sudo
mkinitrd', but it is now fixed.

Larry


From mb at bu3sch.de  Wed Dec 26 14:41:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 14:41:30 +0100
Subject: [PATCH] b43: Remove PIO support
Message-ID: <200712261441.30437.mb@bu3sch.de>

Remove b43 PIO support.
DMA works well on all supported devices. There's no reason to use PIO.
Additionally, new devices don't support PIO in hardware anymore.
b43 PIO support is dead and unused code.

After applying this patch please do
git rm drivers/net/wireless/b43/pio.h
git rm drivers/net/wireless/b43/pio.c
to remove the main PIO support code.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/Kconfig
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/Kconfig	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/Kconfig	2007-12-26 14:32:49.000000000 +0100
@@ -83,51 +83,3 @@ config B43_DEBUG
 
 	  Say Y, if you want to find out why the driver does not
 	  work for you.
-
-config B43_DMA
-	bool
-	depends on B43
-config B43_PIO
-	bool
-	depends on B43
-
-choice
-	prompt "Broadcom 43xx data transfer mode"
-	depends on B43
-	default B43_DMA_AND_PIO_MODE
-
-config B43_DMA_AND_PIO_MODE
-	bool "DMA + PIO"
-	select B43_DMA
-	select B43_PIO
-	---help---
-	  Include both, Direct Memory Access (DMA) and Programmed I/O (PIO)
-	  data transfer modes.
-	  The actually used mode is selectable through the module
-	  parameter "pio". If the module parameter is pio=0, DMA is used.
-	  Otherwise PIO is used. DMA is default.
-
-	  If unsure, choose this option.
-
-config B43_DMA_MODE
-	bool "DMA (Direct Memory Access) only"
-	select B43_DMA
-	---help---
-	  Only include Direct Memory Access (DMA).
-	  This reduces the size of the driver module, by omitting the PIO code.
-
-config B43_PIO_MODE
-	bool "PIO (Programmed I/O) only"
-	select B43_PIO
-	---help---
-	  Only include Programmed I/O (PIO).
-	  This reduces the size of the driver module, by omitting the DMA code.
-	  Please note that PIO transfers are slow (compared to DMA).
-
-	  Also note that not all devices of the 43xx series support PIO.
-	  The 4306 (Apple Airport Extreme and others) supports PIO, while
-	  the 4318 is known to _not_ support PIO.
-
-	  Only use PIO, if DMA does not work for you.
-
-endchoice
Index: wireless-2.6/drivers/net/wireless/b43/Makefile
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/Makefile	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/Makefile	2007-12-26 14:33:36.000000000 +0100
@@ -1,4 +1,3 @@
-# b43 core
 b43-y				+= main.o
 b43-y				+= tables.o
 b43-y				+= phy.o
@@ -6,16 +5,10 @@ b43-y				+= sysfs.o
 b43-y				+= xmit.o
 b43-y				+= lo.o
 b43-y				+= wa.o
-# b43 RFKILL button support
+b43-y				+= dma.o
 b43-$(CONFIG_B43_RFKILL)	+= rfkill.o
-# b43 LED support
 b43-$(CONFIG_B43_LEDS)		+= leds.o
-# b43 PCMCIA support
 b43-$(CONFIG_B43_PCMCIA)	+= pcmcia.o
-# b43 debugging
 b43-$(CONFIG_B43_DEBUG)		+= debugfs.o
-# b43 DMA and PIO
-b43-$(CONFIG_B43_DMA)		+= dma.o
-b43-$(CONFIG_B43_PIO)		+= pio.o
 
 obj-$(CONFIG_B43)		+= b43.o
Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 14:32:49.000000000 +0100
@@ -68,11 +68,6 @@
 #define B43_MMIO_DMA64_BASE3		0x2C0
 #define B43_MMIO_DMA64_BASE4		0x300
 #define B43_MMIO_DMA64_BASE5		0x340
-/* PIO */
-#define B43_MMIO_PIO1_BASE		0x300
-#define B43_MMIO_PIO2_BASE		0x310
-#define B43_MMIO_PIO3_BASE		0x320
-#define B43_MMIO_PIO4_BASE		0x330
 
 #define B43_MMIO_PHY_VER		0x3E0
 #define B43_MMIO_PHY_RADIO		0x3E2
@@ -577,14 +572,6 @@ struct b43_dma {
 	struct b43_dmaring *rx_ring3;	/* only available on core.rev < 5 */
 };
 
-/* Data structures for PIO transmission, per 80211 core. */
-struct b43_pio {
-	struct b43_pioqueue *queue0;
-	struct b43_pioqueue *queue1;
-	struct b43_pioqueue *queue2;
-	struct b43_pioqueue *queue3;
-};
-
 /* Context information for a noise calculation (Link Quality). */
 struct b43_noise_calculation {
 	u8 channel_at_start;
@@ -700,7 +687,6 @@ struct b43_wldev {
 	/* Saved init status for handling suspend. */
 	int suspend_init_status;
 
-	bool __using_pio;	/* Internal, use b43_using_pio(). */
 	bool bad_frames_preempt;	/* Use "Bad Frames Preemption" (default off) */
 	bool reg124_set_0x4;	/* Some variable to keep track of IRQ stuff. */
 	bool short_preamble;	/* TRUE, if short preamble is enabled. */
@@ -709,12 +695,9 @@ struct b43_wldev {
 
 	/* PHY/Radio device. */
 	struct b43_phy phy;
-	union {
-		/* DMA engines. */
-		struct b43_dma dma;
-		/* PIO engines. */
-		struct b43_pio pio;
-	};
+
+	/* DMA engines. */
+	struct b43_dma dma;
 
 	/* Various statistics about the physical device. */
 	struct b43_stats stats;
@@ -769,28 +752,6 @@ static inline struct b43_wl *hw_to_b43_w
 	return hw->priv;
 }
 
-/* Helper function, which returns a boolean.
- * TRUE, if PIO is used; FALSE, if DMA is used.
- */
-#if defined(CONFIG_B43_DMA) && defined(CONFIG_B43_PIO)
-static inline int b43_using_pio(struct b43_wldev *dev)
-{
-	return dev->__using_pio;
-}
-#elif defined(CONFIG_B43_DMA)
-static inline int b43_using_pio(struct b43_wldev *dev)
-{
-	return 0;
-}
-#elif defined(CONFIG_B43_PIO)
-static inline int b43_using_pio(struct b43_wldev *dev)
-{
-	return 1;
-}
-#else
-# error "Using neither DMA nor PIO? Confused..."
-#endif
-
 static inline struct b43_wldev *dev_to_b43_wldev(struct device *dev)
 {
 	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
Index: wireless-2.6/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/debugfs.c	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/debugfs.c	2007-12-26 14:32:49.000000000 +0100
@@ -34,7 +34,6 @@
 #include "main.h"
 #include "debugfs.h"
 #include "dma.h"
-#include "pio.h"
 #include "xmit.h"
 
 
Index: wireless-2.6/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/dma.c	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/dma.c	2007-12-26 14:32:49.000000000 +0100
@@ -915,11 +915,7 @@ static void b43_destroy_dmaring(struct b
 
 void b43_dma_free(struct b43_wldev *dev)
 {
-	struct b43_dma *dma;
-
-	if (b43_using_pio(dev))
-		return;
-	dma = &dev->dma;
+	struct b43_dma *dma = &dev->dma;
 
 	b43_destroy_dmaring(dma->rx_ring3);
 	dma->rx_ring3 = NULL;
@@ -954,16 +950,11 @@ int b43_dma_init(struct b43_wldev *dev)
 
 	err = ssb_dma_set_mask(dev->dev, dmamask);
 	if (err) {
-#ifdef B43_PIO
-		b43warn(dev->wl, "DMA for this device not supported. "
-			"Falling back to PIO\n");
-		dev->__using_pio = 1;
-		return -EAGAIN;
-#else
-		b43err(dev->wl, "DMA for this device not supported and "
-		       "no PIO support compiled in\n");
+		b43err(dev->wl, "The machine/kernel does not support "
+		       "the required DMA mask (0x%08X%08X)\n",
+		       (unsigned int)((dmamask & 0xFFFFFFFF00000000ULL) >> 32),
+		       (unsigned int)(dmamask & 0x00000000FFFFFFFFULL));
 		return -EOPNOTSUPP;
-#endif
 	}
 
 	err = -ENOMEM;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 14:32:49.000000000 +0100
@@ -46,7 +46,6 @@
 #include "debugfs.h"
 #include "phy.h"
 #include "dma.h"
-#include "pio.h"
 #include "sysfs.h"
 #include "xmit.h"
 #include "lo.h"
@@ -58,17 +57,6 @@ MODULE_AUTHOR("Stefano Brivio");
 MODULE_AUTHOR("Michael Buesch");
 MODULE_LICENSE("GPL");
 
-extern char *nvram_get(char *name);
-
-#if defined(CONFIG_B43_DMA) && defined(CONFIG_B43_PIO)
-static int modparam_pio;
-module_param_named(pio, modparam_pio, int, 0444);
-MODULE_PARM_DESC(pio, "enable(1) / disable(0) PIO mode");
-#elif defined(CONFIG_B43_DMA)
-# define modparam_pio	0
-#elif defined(CONFIG_B43_PIO)
-# define modparam_pio	1
-#endif
 
 static int modparam_bad_frames_preempt;
 module_param_named(bad_frames_preempt, modparam_bad_frames_preempt, int, 0444);
@@ -1447,20 +1435,12 @@ static void b43_interrupt_tasklet(struct
 		handle_irq_noise(dev);
 
 	/* Check the DMA reason registers for received data. */
-	if (dma_reason[0] & B43_DMAIRQ_RX_DONE) {
-		if (b43_using_pio(dev))
-			b43_pio_rx(dev->pio.queue0);
-		else
-			b43_dma_rx(dev->dma.rx_ring0);
-	}
+	if (dma_reason[0] & B43_DMAIRQ_RX_DONE)
+		b43_dma_rx(dev->dma.rx_ring0);
+	if (dma_reason[3] & B43_DMAIRQ_RX_DONE)
+		b43_dma_rx(dev->dma.rx_ring3);
 	B43_WARN_ON(dma_reason[1] & B43_DMAIRQ_RX_DONE);
 	B43_WARN_ON(dma_reason[2] & B43_DMAIRQ_RX_DONE);
-	if (dma_reason[3] & B43_DMAIRQ_RX_DONE) {
-		if (b43_using_pio(dev))
-			b43_pio_rx(dev->pio.queue3);
-		else
-			b43_dma_rx(dev->dma.rx_ring3);
-	}
 	B43_WARN_ON(dma_reason[4] & B43_DMAIRQ_RX_DONE);
 	B43_WARN_ON(dma_reason[5] & B43_DMAIRQ_RX_DONE);
 
@@ -1472,29 +1452,8 @@ static void b43_interrupt_tasklet(struct
 	spin_unlock_irqrestore(&dev->wl->irq_lock, flags);
 }
 
-static void pio_irq_workaround(struct b43_wldev *dev, u16 base, int queueidx)
-{
-	u16 rxctl;
-
-	rxctl = b43_read16(dev, base + B43_PIO_RXCTL);
-	if (rxctl & B43_PIO_RXCTL_DATAAVAILABLE)
-		dev->dma_reason[queueidx] |= B43_DMAIRQ_RX_DONE;
-	else
-		dev->dma_reason[queueidx] &= ~B43_DMAIRQ_RX_DONE;
-}
-
 static void b43_interrupt_ack(struct b43_wldev *dev, u32 reason)
 {
-	if (b43_using_pio(dev) &&
-	    (dev->dev->id.revision < 3) &&
-	    (!(reason & B43_IRQ_PIO_WORKAROUND))) {
-		/* Apply a PIO specific workaround to the dma_reasons */
-		pio_irq_workaround(dev, B43_MMIO_PIO1_BASE, 0);
-		pio_irq_workaround(dev, B43_MMIO_PIO2_BASE, 1);
-		pio_irq_workaround(dev, B43_MMIO_PIO3_BASE, 2);
-		pio_irq_workaround(dev, B43_MMIO_PIO4_BASE, 3);
-	}
-
 	b43_write32(dev, B43_MMIO_GEN_IRQ_REASON, reason);
 
 	b43_write32(dev, B43_MMIO_DMA0_REASON, dev->dma_reason[0]);
@@ -2225,14 +2184,6 @@ static int b43_chip_init(struct b43_wlde
 	b43_write32(dev, B43_MMIO_MACCTL, b43_read32(dev, B43_MMIO_MACCTL)
 		    | B43_MACCTL_INFRA);
 
-	if (b43_using_pio(dev)) {
-		b43_write32(dev, 0x0210, 0x00000100);
-		b43_write32(dev, 0x0230, 0x00000100);
-		b43_write32(dev, 0x0250, 0x00000100);
-		b43_write32(dev, 0x0270, 0x00000100);
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x0034, 0x0000);
-	}
-
 	/* Probe Response Timeout value */
 	/* FIXME: Default to 0, has to be set by ioctl probably... :-/ */
 	b43_shm_write16(dev, B43_SHM_SHARED, 0x0074, 0x0000);
@@ -2513,19 +2464,13 @@ static int b43_op_tx(struct ieee80211_hw
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
 	int err = -ENODEV;
-	unsigned long flags;
 
 	if (unlikely(!dev))
 		goto out;
 	if (unlikely(b43_status(dev) < B43_STAT_STARTED))
 		goto out;
 	/* DMA-TX is done without a global lock. */
-	if (b43_using_pio(dev)) {
-		spin_lock_irqsave(&wl->irq_lock, flags);
-		err = b43_pio_tx(dev, skb, ctl);
-		spin_unlock_irqrestore(&wl->irq_lock, flags);
-	} else
-		err = b43_dma_tx(dev, skb, ctl);
+	err = b43_dma_tx(dev, skb, ctl);
 out:
 	if (unlikely(err))
 		return NETDEV_TX_BUSY;
@@ -2551,10 +2496,7 @@ static int b43_op_get_tx_stats(struct ie
 		goto out;
 	spin_lock_irqsave(&wl->irq_lock, flags);
 	if (likely(b43_status(dev) >= B43_STAT_STARTED)) {
-		if (b43_using_pio(dev))
-			b43_pio_get_tx_stats(dev, stats);
-		else
-			b43_dma_get_tx_stats(dev, stats);
+		b43_dma_get_tx_stats(dev, stats);
 		err = 0;
 	}
 	spin_unlock_irqrestore(&wl->irq_lock, flags);
@@ -3336,7 +3278,6 @@ static void b43_wireless_core_exit(struc
 
 	b43_leds_exit(dev);
 	b43_rng_exit(dev->wl);
-	b43_pio_free(dev);
 	b43_dma_free(dev);
 	b43_chip_exit(dev);
 	b43_radio_turn_off(dev, 1);
@@ -3430,17 +3371,10 @@ static int b43_wireless_core_init(struct
 	/* Maximum Contention Window */
 	b43_shm_write16(dev, B43_SHM_SCRATCH, B43_SHM_SC_MAXCONT, 0x3FF);
 
-	do {
-		if (b43_using_pio(dev)) {
-			err = b43_pio_init(dev);
-		} else {
-			err = b43_dma_init(dev);
-			if (!err)
-				b43_qos_init(dev);
-		}
-	} while (err == -EAGAIN);
+	err = b43_dma_init(dev);
 	if (err)
 		goto err_chip_exit;
+	b43_qos_init(dev);
 
 //FIXME
 #if 1
@@ -3891,8 +3825,6 @@ static int b43_one_core_attach(struct ss
 	tasklet_init(&wldev->isr_tasklet,
 		     (void (*)(unsigned long))b43_interrupt_tasklet,
 		     (unsigned long)wldev);
-	if (modparam_pio)
-		wldev->__using_pio = 1;
 	INIT_LIST_HEAD(&wldev->list);
 
 	err = b43_wireless_core_attach(wldev);
Index: wireless-2.6/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/xmit.c	2007-12-26 14:31:03.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/xmit.c	2007-12-26 14:32:49.000000000 +0100
@@ -30,7 +30,7 @@
 #include "xmit.h"
 #include "phy.h"
 #include "dma.h"
-#include "pio.h"
+
 
 /* Extract the bitrate out of a CCK PLCP header. */
 static u8 b43_plcp_get_bitrate_cck(struct b43_plcp_hdr6 *plcp)
@@ -593,10 +593,7 @@ void b43_handle_txstatus(struct b43_wlde
 			dev->wl->ieee_stats.dot11RTSSuccessCount++;
 	}
 
-	if (b43_using_pio(dev))
-		b43_pio_handle_txstatus(dev, status);
-	else
-		b43_dma_handle_txstatus(dev, status);
+	b43_dma_handle_txstatus(dev, status);
 }
 
 /* Handle TX status report as received through DMA/PIO queues */
@@ -625,19 +622,13 @@ void b43_handle_hwtxstatus(struct b43_wl
 /* Stop any TX operation on the device (suspend the hardware queues) */
 void b43_tx_suspend(struct b43_wldev *dev)
 {
-	if (b43_using_pio(dev))
-		b43_pio_freeze_txqueues(dev);
-	else
-		b43_dma_tx_suspend(dev);
+	b43_dma_tx_suspend(dev);
 }
 
 /* Resume any TX operation on the device (resume the hardware queues) */
 void b43_tx_resume(struct b43_wldev *dev)
 {
-	if (b43_using_pio(dev))
-		b43_pio_thaw_txqueues(dev);
-	else
-		b43_dma_tx_resume(dev);
+	b43_dma_tx_resume(dev);
 }
 
 #if 0
Index: wireless-2.6/drivers/net/wireless/b43/dma.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/dma.h	2007-12-09 21:33:18.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/dma.h	2007-12-26 14:34:35.000000000 +0100
@@ -170,8 +170,6 @@ struct b43_dmadesc_generic {
 #define B43_DMA0_RX_BUFFERSIZE	(2304 + 100)
 #define B43_DMA3_RX_BUFFERSIZE	16
 
-#ifdef CONFIG_B43_DMA
-
 struct sk_buff;
 struct b43_private;
 struct b43_txstatus;
@@ -286,52 +284,4 @@ void b43_dma_handle_txstatus(struct b43_
 
 void b43_dma_rx(struct b43_dmaring *ring);
 
-#else /* CONFIG_B43_DMA */
-
-static inline int b43_dma_init(struct b43_wldev *dev)
-{
-	return 0;
-}
-static inline void b43_dma_free(struct b43_wldev *dev)
-{
-}
-static inline
-    int b43_dmacontroller_rx_reset(struct b43_wldev *dev,
-				   u16 dmacontroller_mmio_base, int dma64)
-{
-	return 0;
-}
-static inline
-    int b43_dmacontroller_tx_reset(struct b43_wldev *dev,
-				   u16 dmacontroller_mmio_base, int dma64)
-{
-	return 0;
-}
-static inline
-    void b43_dma_get_tx_stats(struct b43_wldev *dev,
-			      struct ieee80211_tx_queue_stats *stats)
-{
-}
-static inline
-    int b43_dma_tx(struct b43_wldev *dev,
-		   struct sk_buff *skb, struct ieee80211_tx_control *ctl)
-{
-	return 0;
-}
-static inline
-    void b43_dma_handle_txstatus(struct b43_wldev *dev,
-				 const struct b43_txstatus *status)
-{
-}
-static inline void b43_dma_rx(struct b43_dmaring *ring)
-{
-}
-static inline void b43_dma_tx_suspend(struct b43_wldev *dev)
-{
-}
-static inline void b43_dma_tx_resume(struct b43_wldev *dev)
-{
-}
-
-#endif /* CONFIG_B43_DMA */
 #endif /* B43_DMA_H_ */


From mb at bu3sch.de  Wed Dec 26 15:41:56 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 15:41:56 +0100
Subject: [PATCH, RFT] b43: Fix wakeup times
Message-ID: <200712261541.56807.mb@bu3sch.de>

Fix writing of some wakeup times.
The MMIO write does not change in functionality.
But I think the SHM writes are wrong. I think they are the old v3 firmware
API. It seems that this stuff moved in the v4 firmware API.
I guess that the old 0x416 offset is the PRETBTT offset in the new API.
That would make most sense to me. (We first write the PRETBTT MMIO register and
then a SHM location with the same value. So it would make sense so me if this
was the PRETBTT location).
The use of the new SH_SPUWKUP is also only a guess by me. It is SH_PRETBTT-2.
But this seems to make some sense to me.

Johannes, Joseph: Does this patch make sense? Can you probably check what
a recent vendor driver does?

Everybody, please test this patch for regressions.

NOT-signed-off-yet

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 14:32:49.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 15:24:53.000000000 +0100
@@ -88,6 +88,7 @@
 #define B43_MMIO_GPIO_MASK		0x49E
 #define B43_MMIO_TSF_CFP_START_LOW	0x604
 #define B43_MMIO_TSF_CFP_START_HIGH	0x606
+#define B43_MMIO_TSF_CFP_PRETBTT	0x612
 #define B43_MMIO_TSF_0			0x632	/* core rev < 3 only */
 #define B43_MMIO_TSF_1			0x634	/* core rev < 3 only */
 #define B43_MMIO_TSF_2			0x636	/* core rev < 3 only */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 14:32:49.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 15:33:22.000000000 +0100
@@ -3376,12 +3376,11 @@ static int b43_wireless_core_init(struct
 		goto err_chip_exit;
 	b43_qos_init(dev);
 
-//FIXME
-#if 1
-	b43_write16(dev, 0x0612, 0x0050);
-	b43_shm_write16(dev, B43_SHM_SHARED, 0x0416, 0x0050);
-	b43_shm_write16(dev, B43_SHM_SHARED, 0x0414, 0x01F4);
-#endif
+	/* Set the TSF CFP pre-TargetBeaconTransmissionTime (in microseconds). */
+	b43_write16(dev, B43_MMIO_TSF_CFP_PRETBTT, 80);
+	b43_shm_write16(dev, B43_SHM_SHARED, B43_SHM_SH_PRETBTT, 80);
+	/* Set the pre-wakeup for synthetic PU (in microseconds). */
+	b43_shm_write16(dev, B43_SHM_SHARED, B43_SHM_SH_SPUWKUP, 500);
 
 	b43_bluetooth_coext_enable(dev);
 


From mb at bu3sch.de  Wed Dec 26 16:20:07 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 16:20:07 +0100
Subject: [PATCH] b43: Add definitions for MAC Control register
Message-ID: <200712261620.08113.mb@bu3sch.de>

This adds some definitions for the MAC Control register
and uses them.
This basically is no functional change.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this can probably be applied for 2.6.25. I don't care much.
This is some pre-work to get to get AP and IBSS working better, which
won't happen earlier than 2.6.25 anyway.

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 15:24:53.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 16:04:13.000000000 +0100
@@ -35,8 +35,8 @@
 #define B43_MMIO_DMA4_IRQ_MASK		0x44
 #define B43_MMIO_DMA5_REASON		0x48
 #define B43_MMIO_DMA5_IRQ_MASK		0x4C
-#define B43_MMIO_MACCTL			0x120
-#define B43_MMIO_STATUS2_BITFIELD	0x124
+#define B43_MMIO_MACCTL			0x120	/* MAC control */
+#define B43_MMIO_MACCMD			0x124	/* MAC command */
 #define B43_MMIO_GEN_IRQ_REASON		0x128
 #define B43_MMIO_GEN_IRQ_MASK		0x12C
 #define B43_MMIO_RAM_CONTROL		0x130
@@ -320,6 +320,13 @@ enum {
 #define B43_MACCTL_DISCPMQ		0x40000000	/* Discard Power Management Queue */
 #define B43_MACCTL_GMODE		0x80000000	/* G Mode */
 
+/* MAC Command bitfield */
+#define B43_MACCMD_BEACON0_VALID	0x00000001	/* Beacon 0 in template RAM is busy/valid */
+#define B43_MACCMD_BEACON1_VALID	0x00000002	/* Beacon 1 in template RAM is busy/valid */
+#define B43_MACCMD_DFQ_VALID		0x00000004	/* Directed frame queue valid (IBSS PS mode, ATIM) */
+#define B43_MACCMD_CCA			0x00000008	/* Clear channel assessment */
+#define B43_MACCMD_BGNOISE		0x00000010	/* Background noise */
+
 /* 802.11 core specific TM State Low flags */
 #define B43_TMSLOW_GMODE		0x20000000	/* G Mode Enable */
 #define B43_TMSLOW_PLLREFSEL		0x00200000	/* PLL Frequency Reference Select */
@@ -689,6 +696,7 @@ struct b43_wldev {
 	int suspend_init_status;
 
 	bool bad_frames_preempt;	/* Use "Bad Frames Preemption" (default off) */
+	bool dfq_valid;		/* Directed frame queue valid (IBSS PS mode, ATIM) */
 	bool reg124_set_0x4;	/* Some variable to keep track of IRQ stuff. */
 	bool short_preamble;	/* TRUE, if short preamble is enabled. */
 	bool short_slot;	/* TRUE, if short slot timing is enabled. */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 15:33:22.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 16:09:05.000000000 +0100
@@ -993,9 +993,8 @@ static void b43_jssi_write(struct b43_wl
 static void b43_generate_noise_sample(struct b43_wldev *dev)
 {
 	b43_jssi_write(dev, 0x7F7F7F7F);
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD,
-		    b43_read32(dev, B43_MMIO_STATUS2_BITFIELD)
-		    | (1 << 4));
+	b43_write32(dev, B43_MMIO_MACCMD,
+		    b43_read32(dev, B43_MMIO_MACCMD) | B43_MACCMD_BGNOISE);
 	B43_WARN_ON(dev->noisecalc.channel_at_start != dev->phy.channel);
 }
 
@@ -1081,18 +1080,18 @@ static void handle_irq_tbtt_indication(s
 		if (1 /*FIXME: the last PSpoll frame was sent successfully */ )
 			b43_power_saving_ctl_bits(dev, 0);
 	}
-	dev->reg124_set_0x4 = 0;
 	if (b43_is_mode(dev->wl, IEEE80211_IF_TYPE_IBSS))
-		dev->reg124_set_0x4 = 1;
+		dev->dfq_valid = 1;
 }
 
 static void handle_irq_atim_end(struct b43_wldev *dev)
 {
-	if (!dev->reg124_set_0x4 /*FIXME rename this variable */ )
-		return;
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD,
-		    b43_read32(dev, B43_MMIO_STATUS2_BITFIELD)
-		    | 0x4);
+	if (dev->dfq_valid) {
+		b43_write32(dev, B43_MMIO_MACCMD,
+			    b43_read32(dev, B43_MMIO_MACCMD)
+			    | B43_MACCMD_DFQ_VALID);
+		dev->dfq_valid = 0;
+	}
 }
 
 static void handle_irq_pmq(struct b43_wldev *dev)
@@ -1271,7 +1270,7 @@ static int b43_refresh_cached_beacon(str
 
 static void b43_update_templates(struct b43_wldev *dev)
 {
-	u32 status;
+	u32 cmd;
 
 	B43_WARN_ON(!dev->cached_beacon);
 
@@ -1279,9 +1278,9 @@ static void b43_update_templates(struct 
 	b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
 	b43_write_probe_resp_template(dev, 0x268, 0x4A, B43_CCK_RATE_11MB);
 
-	status = b43_read32(dev, B43_MMIO_STATUS2_BITFIELD);
-	status |= 0x03;
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+	cmd = b43_read32(dev, B43_MMIO_MACCMD);
+	cmd |= B43_MACCMD_BEACON0_VALID | B43_MACCMD_BEACON1_VALID;
+	b43_write32(dev, B43_MMIO_MACCMD, cmd);
 }
 
 static void b43_refresh_templates(struct b43_wldev *dev, struct sk_buff *beacon)
@@ -1333,7 +1332,7 @@ static void handle_irq_beacon(struct b43
 		return;
 
 	dev->irq_savedstate &= ~B43_IRQ_BEACON;
-	status = b43_read32(dev, B43_MMIO_STATUS2_BITFIELD);
+	status = b43_read32(dev, B43_MMIO_MACCMD);
 
 	if (!dev->cached_beacon || ((status & 0x1) && (status & 0x2))) {
 		/* ACK beacon IRQ. */
@@ -1347,12 +1346,12 @@ static void handle_irq_beacon(struct b43
 	if (!(status & 0x1)) {
 		b43_write_beacon_template(dev, 0x68, 0x18, B43_CCK_RATE_1MB);
 		status |= 0x1;
-		b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+		b43_write32(dev, B43_MMIO_MACCMD, status);
 	}
 	if (!(status & 0x2)) {
 		b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
 		status |= 0x2;
-		b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+		b43_write32(dev, B43_MMIO_MACCMD, status);
 	}
 }
 
@@ -3177,8 +3176,8 @@ static void setup_struct_phy_for_init(st
 
 static void setup_struct_wldev_for_init(struct b43_wldev *dev)
 {
-	/* Flags */
-	dev->reg124_set_0x4 = 0;
+	dev->dfq_valid = 0;
+
 	/* Assume the radio is enabled. If it's not enabled, the state will
 	 * immediately get fixed on the first periodic work run. */
 	dev->radio_hw_enable = 1;


From mb at bu3sch.de  Wed Dec 26 16:26:36 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 16:26:36 +0100
Subject: [PATCH v2] b43: Add definitions for MAC Control register
Message-ID: <200712261626.36956.mb@bu3sch.de>

This adds some definitions for the MAC Control register
and uses them.
This basically is no functional change.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

This is patch version 2.
Forgot to run a quilt refresh. Sorry.

John, this can probably be applied for 2.6.25. I don't care much.
This is some pre-work to get to get AP and IBSS working better, which
won't happen earlier than 2.6.25 anyway.

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 15:24:53.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 16:12:38.000000000 +0100
@@ -35,8 +35,8 @@
 #define B43_MMIO_DMA4_IRQ_MASK		0x44
 #define B43_MMIO_DMA5_REASON		0x48
 #define B43_MMIO_DMA5_IRQ_MASK		0x4C
-#define B43_MMIO_MACCTL			0x120
-#define B43_MMIO_STATUS2_BITFIELD	0x124
+#define B43_MMIO_MACCTL			0x120	/* MAC control */
+#define B43_MMIO_MACCMD			0x124	/* MAC command */
 #define B43_MMIO_GEN_IRQ_REASON		0x128
 #define B43_MMIO_GEN_IRQ_MASK		0x12C
 #define B43_MMIO_RAM_CONTROL		0x130
@@ -320,6 +320,13 @@ enum {
 #define B43_MACCTL_DISCPMQ		0x40000000	/* Discard Power Management Queue */
 #define B43_MACCTL_GMODE		0x80000000	/* G Mode */
 
+/* MAC Command bitfield */
+#define B43_MACCMD_BEACON0_VALID	0x00000001	/* Beacon 0 in template RAM is busy/valid */
+#define B43_MACCMD_BEACON1_VALID	0x00000002	/* Beacon 1 in template RAM is busy/valid */
+#define B43_MACCMD_DFQ_VALID		0x00000004	/* Directed frame queue valid (IBSS PS mode, ATIM) */
+#define B43_MACCMD_CCA			0x00000008	/* Clear channel assessment */
+#define B43_MACCMD_BGNOISE		0x00000010	/* Background noise */
+
 /* 802.11 core specific TM State Low flags */
 #define B43_TMSLOW_GMODE		0x20000000	/* G Mode Enable */
 #define B43_TMSLOW_PLLREFSEL		0x00200000	/* PLL Frequency Reference Select */
@@ -689,7 +696,7 @@ struct b43_wldev {
 	int suspend_init_status;
 
 	bool bad_frames_preempt;	/* Use "Bad Frames Preemption" (default off) */
-	bool reg124_set_0x4;	/* Some variable to keep track of IRQ stuff. */
+	bool dfq_valid;		/* Directed frame queue valid (IBSS PS mode, ATIM) */
 	bool short_preamble;	/* TRUE, if short preamble is enabled. */
 	bool short_slot;	/* TRUE, if short slot timing is enabled. */
 	bool radio_hw_enable;	/* saved state of radio hardware enabled state */
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 15:33:22.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 16:09:05.000000000 +0100
@@ -993,9 +993,8 @@ static void b43_jssi_write(struct b43_wl
 static void b43_generate_noise_sample(struct b43_wldev *dev)
 {
 	b43_jssi_write(dev, 0x7F7F7F7F);
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD,
-		    b43_read32(dev, B43_MMIO_STATUS2_BITFIELD)
-		    | (1 << 4));
+	b43_write32(dev, B43_MMIO_MACCMD,
+		    b43_read32(dev, B43_MMIO_MACCMD) | B43_MACCMD_BGNOISE);
 	B43_WARN_ON(dev->noisecalc.channel_at_start != dev->phy.channel);
 }
 
@@ -1081,18 +1080,18 @@ static void handle_irq_tbtt_indication(s
 		if (1 /*FIXME: the last PSpoll frame was sent successfully */ )
 			b43_power_saving_ctl_bits(dev, 0);
 	}
-	dev->reg124_set_0x4 = 0;
 	if (b43_is_mode(dev->wl, IEEE80211_IF_TYPE_IBSS))
-		dev->reg124_set_0x4 = 1;
+		dev->dfq_valid = 1;
 }
 
 static void handle_irq_atim_end(struct b43_wldev *dev)
 {
-	if (!dev->reg124_set_0x4 /*FIXME rename this variable */ )
-		return;
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD,
-		    b43_read32(dev, B43_MMIO_STATUS2_BITFIELD)
-		    | 0x4);
+	if (dev->dfq_valid) {
+		b43_write32(dev, B43_MMIO_MACCMD,
+			    b43_read32(dev, B43_MMIO_MACCMD)
+			    | B43_MACCMD_DFQ_VALID);
+		dev->dfq_valid = 0;
+	}
 }
 
 static void handle_irq_pmq(struct b43_wldev *dev)
@@ -1271,7 +1270,7 @@ static int b43_refresh_cached_beacon(str
 
 static void b43_update_templates(struct b43_wldev *dev)
 {
-	u32 status;
+	u32 cmd;
 
 	B43_WARN_ON(!dev->cached_beacon);
 
@@ -1279,9 +1278,9 @@ static void b43_update_templates(struct 
 	b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
 	b43_write_probe_resp_template(dev, 0x268, 0x4A, B43_CCK_RATE_11MB);
 
-	status = b43_read32(dev, B43_MMIO_STATUS2_BITFIELD);
-	status |= 0x03;
-	b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+	cmd = b43_read32(dev, B43_MMIO_MACCMD);
+	cmd |= B43_MACCMD_BEACON0_VALID | B43_MACCMD_BEACON1_VALID;
+	b43_write32(dev, B43_MMIO_MACCMD, cmd);
 }
 
 static void b43_refresh_templates(struct b43_wldev *dev, struct sk_buff *beacon)
@@ -1333,7 +1332,7 @@ static void handle_irq_beacon(struct b43
 		return;
 
 	dev->irq_savedstate &= ~B43_IRQ_BEACON;
-	status = b43_read32(dev, B43_MMIO_STATUS2_BITFIELD);
+	status = b43_read32(dev, B43_MMIO_MACCMD);
 
 	if (!dev->cached_beacon || ((status & 0x1) && (status & 0x2))) {
 		/* ACK beacon IRQ. */
@@ -1347,12 +1346,12 @@ static void handle_irq_beacon(struct b43
 	if (!(status & 0x1)) {
 		b43_write_beacon_template(dev, 0x68, 0x18, B43_CCK_RATE_1MB);
 		status |= 0x1;
-		b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+		b43_write32(dev, B43_MMIO_MACCMD, status);
 	}
 	if (!(status & 0x2)) {
 		b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
 		status |= 0x2;
-		b43_write32(dev, B43_MMIO_STATUS2_BITFIELD, status);
+		b43_write32(dev, B43_MMIO_MACCMD, status);
 	}
 }
 
@@ -3177,8 +3176,8 @@ static void setup_struct_phy_for_init(st
 
 static void setup_struct_wldev_for_init(struct b43_wldev *dev)
 {
-	/* Flags */
-	dev->reg124_set_0x4 = 0;
+	dev->dfq_valid = 0;
+
 	/* Assume the radio is enabled. If it's not enabled, the state will
 	 * immediately get fixed on the first periodic work run. */
 	dev->radio_hw_enable = 1;


From mb at bu3sch.de  Wed Dec 26 17:47:10 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 17:47:10 +0100
Subject: [PATCH] b43: Fix upload of beacon packets to the hardware
Message-ID: <200712261747.10682.mb@bu3sch.de>

This fixes uploading of the beacon data and writing of the
TIM and DTIM offsets.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is 2.6.25 stuff.

Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 16:57:01.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 17:40:07.000000000 +0100
@@ -1146,15 +1146,58 @@ static void b43_write_beacon_template(st
 				      u16 ram_offset,
 				      u16 shm_size_offset, u8 rate)
 {
-	int len;
-	const u8 *data;
+	int i, len;
+	const struct ieee80211_mgmt *bcn;
+	const u8 *ie;
+	bool tim_found = 0;
 
-	B43_WARN_ON(!dev->cached_beacon);
-	len = min((size_t) dev->cached_beacon->len,
+	bcn = (const struct ieee80211_mgmt *)(dev->wl->current_beacon->data);
+	len = min((size_t) dev->wl->current_beacon->len,
 		  0x200 - sizeof(struct b43_plcp_hdr6));
-	data = (const u8 *)(dev->cached_beacon->data);
-	b43_write_template_common(dev, data,
+
+	b43_write_template_common(dev, (const u8 *)bcn,
 				  len, ram_offset, shm_size_offset, rate);
+
+	/* Find the position of the TIM and the DTIM_period value
+	 * and write them to SHM. */
+	ie = bcn->u.beacon.variable;
+	for (i = 0; i < len - 2; ) {
+		uint8_t ie_id, ie_len;
+
+		ie_id = ie[i];
+		ie_len = ie[i + 1];
+		if (ie_id == 5) {
+			u16 tim_position;
+			u16 dtim_period;
+			/* This is the TIM Information Element */
+
+			/* Check whether the ie_len is in the beacon data range. */
+			if (len < ie_len + 2 + i)
+				break;
+			/* A valid TIM is at least 4 bytes long. */
+			if (ie_len < 4)
+				break;
+			tim_found = 1;
+
+			tim_position = sizeof(struct b43_plcp_hdr6);
+			tim_position += offsetof(struct ieee80211_mgmt, u.beacon.variable);
+			tim_position += i;
+
+			dtim_period = ie[i + 3];
+
+			b43_shm_write16(dev, B43_SHM_SHARED,
+					B43_SHM_SH_TIMBPOS, tim_position);
+			b43_shm_write16(dev, B43_SHM_SHARED,
+					B43_SHM_SH_DTIMPER, dtim_period);
+			break;
+		}
+		i += ie_len + 2;
+	}
+	if (!tim_found) {
+		b43warn(dev->wl, "Did not find a valid TIM IE in "
+			"the beacon template packet. AP or IBSS operation "
+			"may be broken.\n");
+	}
 }
 
 static void b43_write_probe_resp_plcp(struct b43_wldev *dev,
@@ -1182,40 +1225,43 @@ static void b43_write_probe_resp_plcp(st
  * 2) Patching duration field
  * 3) Stripping TIM
  */
-static u8 *b43_generate_probe_resp(struct b43_wldev *dev,
-				   u16 * dest_size, u8 rate)
+static const u8 * b43_generate_probe_resp(struct b43_wldev *dev,
+					  u16 *dest_size, u8 rate)
 {
 	const u8 *src_data;
 	u8 *dest_data;
 	u16 src_size, elem_size, src_pos, dest_pos;
 	__le16 dur;
 	struct ieee80211_hdr *hdr;
+	size_t ie_start;
+
+	src_size = dev->wl->current_beacon->len;
+	src_data = (const u8 *)dev->wl->current_beacon->data;
 
-	B43_WARN_ON(!dev->cached_beacon);
-	src_size = dev->cached_beacon->len;
-	src_data = (const u8 *)dev->cached_beacon->data;
+	/* Get the start offset of the variable IEs in the packet. */
+	ie_start = offsetof(struct ieee80211_mgmt, u.probe_resp.variable);
+	B43_WARN_ON(ie_start != offsetof(struct ieee80211_mgmt, u.beacon.variable));
 
-	if (unlikely(src_size < 0x24)) {
-		b43dbg(dev->wl, "b43_generate_probe_resp: " "invalid beacon\n");
+	if (B43_WARN_ON(src_size < ie_start))
 		return NULL;
-	}
 
 	dest_data = kmalloc(src_size, GFP_ATOMIC);
 	if (unlikely(!dest_data))
 		return NULL;
 
-	/* 0x24 is offset of first variable-len Information-Element
-	 * in beacon frame.
-	 */
-	memcpy(dest_data, src_data, 0x24);
-	src_pos = dest_pos = 0x24;
-	for (; src_pos < src_size - 2; src_pos += elem_size) {
+	/* Copy the static data and all Information Elements, except the TIM. */
+	memcpy(dest_data, src_data, ie_start);
+	src_pos = ie_start;
+	dest_pos = ie_start;
+	for ( ; src_pos < src_size - 2; src_pos += elem_size) {
 		elem_size = src_data[src_pos + 1] + 2;
-		if (src_data[src_pos] != 0x05) {	/* TIM */
-			memcpy(dest_data + dest_pos, src_data + src_pos,
-			       elem_size);
-			dest_pos += elem_size;
+		if (src_data[src_pos] == 5) {
+			/* This is the TIM. */
+			continue;
 		}
+		memcpy(dest_data + dest_pos, src_data + src_pos,
+		       elem_size);
+		dest_pos += elem_size;
 	}
 	*dest_size = dest_pos;
 	hdr = (struct ieee80211_hdr *)dest_data;
@@ -1235,11 +1281,10 @@ static void b43_write_probe_resp_templat
 					  u16 ram_offset,
 					  u16 shm_size_offset, u8 rate)
 {
-	u8 *probe_resp_data;
+	const u8 *probe_resp_data;
 	u16 size;
 
-	B43_WARN_ON(!dev->cached_beacon);
-	size = dev->cached_beacon->len;
+	size = dev->wl->current_beacon->len;
 	probe_resp_data = b43_generate_probe_resp(dev, &size, rate);
 	if (unlikely(!probe_resp_data))
 		return;
@@ -1258,39 +1303,26 @@ static void b43_write_probe_resp_templat
 	kfree(probe_resp_data);
 }
 
-static int b43_refresh_cached_beacon(struct b43_wldev *dev,
-				     struct sk_buff *beacon)
+/* Asynchronously update the packet templates in template RAM. */
+static void b43_update_templates(struct b43_wl *wl, struct sk_buff *beacon)
 {
-	if (dev->cached_beacon)
-		kfree_skb(dev->cached_beacon);
-	dev->cached_beacon = beacon;
-
-	return 0;
-}
-
-static void b43_update_templates(struct b43_wldev *dev)
-{
-	u32 cmd;
-
-	B43_WARN_ON(!dev->cached_beacon);
+	unsigned long flags;
 
-	b43_write_beacon_template(dev, 0x68, 0x18, B43_CCK_RATE_1MB);
-	b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
-	b43_write_probe_resp_template(dev, 0x268, 0x4A, B43_CCK_RATE_11MB);
+	/* This is the top half of the ansynchronous beacon update.
+	 * The bottom half is the beacon IRQ.
+	 * Beacon update must be asynchronous to avoid sending an
+	 * invalid beacon. This can happen for example, if the firmware
+	 * transmits a beacon while we are updating it. */
 
-	cmd = b43_read32(dev, B43_MMIO_MACCMD);
-	cmd |= B43_MACCMD_BEACON0_VALID | B43_MACCMD_BEACON1_VALID;
-	b43_write32(dev, B43_MMIO_MACCMD, cmd);
-}
+	spin_lock_irqsave(&wl->irq_lock, flags);
 
-static void b43_refresh_templates(struct b43_wldev *dev, struct sk_buff *beacon)
-{
-	int err;
+	if (wl->current_beacon)
+		dev_kfree_skb_any(wl->current_beacon);
+	wl->current_beacon = beacon;
+	wl->beacon0_uploaded = 0;
+	wl->beacon1_uploaded = 0;
 
-	err = b43_refresh_cached_beacon(dev, beacon);
-	if (unlikely(err))
-		return;
-	b43_update_templates(dev);
+	spin_unlock_irqrestore(&wl->irq_lock, flags);
 }
 
 static void b43_set_ssid(struct b43_wldev *dev, const u8 * ssid, u8 ssid_len)
@@ -1326,33 +1358,34 @@ static void b43_set_beacon_int(struct b4
 
 static void handle_irq_beacon(struct b43_wldev *dev)
 {
-	u32 status;
+	struct b43_wl *wl = dev->wl;
+	u32 cmd;
 
-	if (!b43_is_mode(dev->wl, IEEE80211_IF_TYPE_AP))
+	if (!b43_is_mode(wl, IEEE80211_IF_TYPE_AP))
 		return;
 
-	dev->irq_savedstate &= ~B43_IRQ_BEACON;
-	status = b43_read32(dev, B43_MMIO_MACCMD);
+	/* This is the bottom half of the asynchronous beacon update. */
 
-	if (!dev->cached_beacon || ((status & 0x1) && (status & 0x2))) {
-		/* ACK beacon IRQ. */
-		b43_write32(dev, B43_MMIO_GEN_IRQ_REASON, B43_IRQ_BEACON);
-		dev->irq_savedstate |= B43_IRQ_BEACON;
-		if (dev->cached_beacon)
-			kfree_skb(dev->cached_beacon);
-		dev->cached_beacon = NULL;
-		return;
-	}
-	if (!(status & 0x1)) {
-		b43_write_beacon_template(dev, 0x68, 0x18, B43_CCK_RATE_1MB);
-		status |= 0x1;
-		b43_write32(dev, B43_MMIO_MACCMD, status);
-	}
-	if (!(status & 0x2)) {
-		b43_write_beacon_template(dev, 0x468, 0x1A, B43_CCK_RATE_1MB);
-		status |= 0x2;
-		b43_write32(dev, B43_MMIO_MACCMD, status);
+	cmd = b43_read32(dev, B43_MMIO_MACCMD);
+	if (!(cmd & B43_MACCMD_BEACON0_VALID)) {
+		if (!wl->beacon0_uploaded) {
+			b43_write_beacon_template(dev, 0x68, 0x18,
+						  B43_CCK_RATE_1MB);
+			b43_write_probe_resp_template(dev, 0x268, 0x4A,
+						      B43_CCK_RATE_11MB);
+			wl->beacon0_uploaded = 1;
+		}
+		cmd |= B43_MACCMD_BEACON0_VALID;
+	}
+	if (!(cmd & B43_MACCMD_BEACON1_VALID)) {
+		if (!wl->beacon1_uploaded) {
+			b43_write_beacon_template(dev, 0x468, 0x1A,
+						  B43_CCK_RATE_1MB);
+			wl->beacon1_uploaded = 1;
+		}
+		cmd |= B43_MACCMD_BEACON1_VALID;
 	}
+	b43_write32(dev, B43_MMIO_MACCMD, cmd);
 }
 
 static void handle_irq_ucode_debug(struct b43_wldev *dev)
@@ -2947,7 +2980,7 @@ static int b43_op_config_interface(struc
 			B43_WARN_ON(conf->type != IEEE80211_IF_TYPE_AP);
 			b43_set_ssid(dev, conf->ssid, conf->ssid_len);
 			if (conf->beacon)
-				b43_refresh_templates(dev, conf->beacon);
+				b43_update_templates(wl, conf->beacon);
 		}
 		b43_write_mac_bssid_templates(dev);
 	}
@@ -3285,6 +3318,11 @@ static void b43_wireless_core_exit(struc
 		kfree(phy->tssi2dbm);
 	kfree(phy->lo_control);
 	phy->lo_control = NULL;
+	if (dev->wl->current_beacon) {
+		dev_kfree_skb_any(dev->wl->current_beacon);
+		dev->wl->current_beacon = NULL;
+	}
+
 	ssb_device_disable(dev->dev, 0);
 	ssb_bus_may_powerdown(dev->dev->bus);
 }
@@ -3545,6 +3583,34 @@ out_unlock:
 	return err;
 }
 
+static int b43_op_beacon_set_tim(struct ieee80211_hw *hw, int aid, int set)
+{
+	struct b43_wl *wl = hw_to_b43_wl(hw);
+	struct sk_buff *beacon;
+
+	/* We could modify the existing beacon and set the aid bit in
+	 * the TIM field, but that would probably require resizing and
+	 * moving of data within the beacon template.
+	 * Simply request a new beacon and let mac80211 do the hard work. */
+	beacon = ieee80211_beacon_get(hw, wl->vif, NULL);
+	if (unlikely(!beacon))
+		return -ENOMEM;
+	b43_update_templates(wl, beacon);
+
+	return 0;
+}
+
+static int b43_op_ibss_beacon_update(struct ieee80211_hw *hw,
+				     struct sk_buff *beacon,
+				     struct ieee80211_tx_control *ctl)
+{
+	struct b43_wl *wl = hw_to_b43_wl(hw);
+
+	b43_update_templates(wl, beacon);
+
+	return 0;
+}
+
 static const struct ieee80211_ops b43_hw_ops = {
 	.tx			= b43_op_tx,
 	.conf_tx		= b43_op_conf_tx,
@@ -3559,6 +3625,8 @@ static const struct ieee80211_ops b43_hw
 	.start			= b43_op_start,
 	.stop			= b43_op_stop,
 	.set_retry_limit	= b43_op_set_retry_limit,
+	.set_tim		= b43_op_beacon_set_tim,
+	.beacon_update		= b43_op_ibss_beacon_update,
 };
 
 /* Hard-reset the chip. Do not call this directly.
Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 16:57:01.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 17:40:07.000000000 +0100
@@ -646,6 +646,12 @@ struct b43_wl {
 	u8 nr_devs;
 
 	bool radiotap_enabled;
+
+	/* The beacon we are currently using (AP or IBSS mode).
+	 * This beacon stuff is protected by the irq_lock. */
+	struct sk_buff *current_beacon;
+	bool beacon0_uploaded;
+	bool beacon1_uploaded;
 };
 
 /* Pointers to the firmware data and meta information about it. */
@@ -740,9 +746,6 @@ struct b43_wldev {
 	u8 max_nr_keys;
 	struct b43_key key[58];
 
-	/* Cached beacon template while uploading the template. */
-	struct sk_buff *cached_beacon;
-
 	/* Firmware data */
 	struct b43_firmware fw;
 


From mb at bu3sch.de  Wed Dec 26 18:04:14 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 18:04:14 +0100
Subject: [PATCH] b43: Fix template upload locking.
Message-ID: <200712261804.14899.mb@bu3sch.de>

This fixes the template upload locking.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is 2.6.25 stuff.

Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 17:57:08.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 18:01:03.000000000 +0100
@@ -1303,26 +1303,21 @@ static void b43_write_probe_resp_templat
 	kfree(probe_resp_data);
 }
 
-/* Asynchronously update the packet templates in template RAM. */
+/* Asynchronously update the packet templates in template RAM.
+ * Locking: Requires wl->irq_lock to be locked. */
 static void b43_update_templates(struct b43_wl *wl, struct sk_buff *beacon)
 {
-	unsigned long flags;
-
 	/* This is the top half of the ansynchronous beacon update.
 	 * The bottom half is the beacon IRQ.
 	 * Beacon update must be asynchronous to avoid sending an
 	 * invalid beacon. This can happen for example, if the firmware
 	 * transmits a beacon while we are updating it. */
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
-
 	if (wl->current_beacon)
 		dev_kfree_skb_any(wl->current_beacon);
 	wl->current_beacon = beacon;
 	wl->beacon0_uploaded = 0;
 	wl->beacon1_uploaded = 0;
-
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
 }
 
 static void b43_set_ssid(struct b43_wldev *dev, const u8 * ssid, u8 ssid_len)
@@ -3587,6 +3582,7 @@ static int b43_op_beacon_set_tim(struct 
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct sk_buff *beacon;
+	unsigned long flags;
 
 	/* We could modify the existing beacon and set the aid bit in
 	 * the TIM field, but that would probably require resizing and
@@ -3595,7 +3591,9 @@ static int b43_op_beacon_set_tim(struct 
 	beacon = ieee80211_beacon_get(hw, wl->vif, NULL);
 	if (unlikely(!beacon))
 		return -ENOMEM;
+	spin_lock_irqsave(&wl->irq_lock, flags);
 	b43_update_templates(wl, beacon);
+	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	return 0;
 }
@@ -3605,8 +3603,11 @@ static int b43_op_ibss_beacon_update(str
 				     struct ieee80211_tx_control *ctl)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
+	unsigned long flags;
 
+	spin_lock_irqsave(&wl->irq_lock, flags);
 	b43_update_templates(wl, beacon);
+	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	return 0;
 }


From mb at bu3sch.de  Wed Dec 26 18:26:17 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 26 Dec 2007 18:26:17 +0100
Subject: [PATCH] b43: Put multicast frames on the mcast queue
Message-ID: <200712261826.18164.mb@bu3sch.de>

This queues frames flagged as "send after DTIM" by mac80211
on the special multicast queue. The firmware will take care
to send the packet after the DTIM.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is 2.6.25 stuff.

Index: wireless-2.6/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/b43.h	2007-12-26 18:04:52.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/b43.h	2007-12-26 18:07:11.000000000 +0100
@@ -171,14 +171,17 @@ enum {
 #define B43_SHM_SH_SLOTT		0x0010	/* Slot time */
 #define B43_SHM_SH_DTIMPER		0x0012	/* DTIM period */
 #define B43_SHM_SH_NOSLPZNATDTIM	0x004C	/* NOSLPZNAT DTIM */
-/* SHM_SHARED beacon variables */
+/* SHM_SHARED beacon/AP variables */
 #define B43_SHM_SH_BTL0			0x0018	/* Beacon template length 0 */
 #define B43_SHM_SH_BTL1			0x001A	/* Beacon template length 1 */
 #define B43_SHM_SH_BTSFOFF		0x001C	/* Beacon TSF offset */
 #define B43_SHM_SH_TIMBPOS		0x001E	/* TIM B position in beacon */
+#define B43_SHM_SH_DTIMP		0x0012	/* DTIP period */
+#define B43_SHM_SH_MCASTCOOKIE		0x00A8	/* Last bcast/mcast frame ID */
 #define B43_SHM_SH_SFFBLIM		0x0044	/* Short frame fallback retry limit */
 #define B43_SHM_SH_LFFBLIM		0x0046	/* Long frame fallback retry limit */
 #define B43_SHM_SH_BEACPHYCTL		0x0054	/* Beacon PHY TX control word (see PHY TX control) */
+#define B43_SHM_SH_EXTNPHYCTL		0x00B0	/* Extended bytes for beacon PHY control (N) */
 /* SHM_SHARED ACK/CTS control */
 #define B43_SHM_SH_ACKCTSPHYCTL		0x0022	/* ACK/CTS PHY control word (see PHY TX control) */
 /* SHM_SHARED probe response variables */
@@ -612,9 +615,12 @@ struct b43_wl {
 	/* Pointer to the ieee80211 hardware data structure */
 	struct ieee80211_hw *hw;
 
-	spinlock_t irq_lock;
 	struct mutex mutex;
+	spinlock_t irq_lock;
+	/* Lock for LEDs access. */
 	spinlock_t leds_lock;
+	/* Lock for SHM access. */
+	spinlock_t shm_lock;
 
 	/* We can only have one operating interface (802.11 core)
 	 * at a time. General information about this interface follows.
Index: wireless-2.6/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/dma.c	2007-12-26 17:57:08.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/dma.c	2007-12-26 18:14:15.000000000 +0100
@@ -37,6 +37,8 @@
 #include <linux/pci.h>
 #include <linux/delay.h>
 #include <linux/skbuff.h>
+#include <linux/etherdevice.h>
+
 
 /* 32bit DMA ops. */
 static
@@ -315,26 +317,24 @@ static struct b43_dmaring *priority_to_t
 	case 3:
 		ring = dev->dma.tx_ring0;
 		break;
-	case 4:
-		ring = dev->dma.tx_ring4;
-		break;
-	case 5:
-		ring = dev->dma.tx_ring5;
-		break;
 	}
 
 	return ring;
 }
 
-/* Bcm43xx-ring to mac80211-queue mapping */
+/* b43-ring to mac80211-queue mapping */
 static inline int txring_to_priority(struct b43_dmaring *ring)
 {
-	static const u8 idx_to_prio[] = { 3, 2, 1, 0, 4, 5, };
+	static const u8 idx_to_prio[] = { 3, 2, 1, 0, };
+	unsigned int index;
 
 /*FIXME: have only one queue, for now */
 	return 0;
 
-	return idx_to_prio[ring->index];
+	index = ring->index;
+	if (B43_WARN_ON(index >= ARRAY_SIZE(idx_to_prio)))
+		index = 0;
+	return idx_to_prio[index];
 }
 
 u16 b43_dmacontroller_base(int dma64bit, int controller_idx)
@@ -1043,26 +1043,30 @@ static u16 generate_cookie(struct b43_dm
 	 * in the lower 12 bits.
 	 * Note that the cookie must never be 0, as this
 	 * is a special value used in RX path.
+	 * It can also not be 0xFFFF because that is special
+	 * for multicast frames.
 	 */
 	switch (ring->index) {
 	case 0:
-		cookie = 0xA000;
+		cookie = 0x1000;
 		break;
 	case 1:
-		cookie = 0xB000;
+		cookie = 0x2000;
 		break;
 	case 2:
-		cookie = 0xC000;
+		cookie = 0x3000;
 		break;
 	case 3:
-		cookie = 0xD000;
+		cookie = 0x4000;
 		break;
 	case 4:
-		cookie = 0xE000;
+		cookie = 0x5000;
 		break;
 	case 5:
-		cookie = 0xF000;
+		cookie = 0x6000;
 		break;
+	default:
+		B43_WARN_ON(1);
 	}
 	B43_WARN_ON(slot & ~0x0FFF);
 	cookie |= (u16) slot;
@@ -1078,22 +1082,22 @@ struct b43_dmaring *parse_cookie(struct 
 	struct b43_dmaring *ring = NULL;
 
 	switch (cookie & 0xF000) {
-	case 0xA000:
+	case 0x1000:
 		ring = dma->tx_ring0;
 		break;
-	case 0xB000:
+	case 0x2000:
 		ring = dma->tx_ring1;
 		break;
-	case 0xC000:
+	case 0x3000:
 		ring = dma->tx_ring2;
 		break;
-	case 0xD000:
+	case 0x4000:
 		ring = dma->tx_ring3;
 		break;
-	case 0xE000:
+	case 0x5000:
 		ring = dma->tx_ring4;
 		break;
-	case 0xF000:
+	case 0x6000:
 		ring = dma->tx_ring5;
 		break;
 	default:
@@ -1117,6 +1121,7 @@ static int dma_tx_fragment(struct b43_dm
 	struct b43_dmadesc_meta *meta;
 	struct b43_dmadesc_meta *meta_hdr;
 	struct sk_buff *bounce_skb;
+	u16 cookie;
 
 #define SLOTS_PER_PACKET  2
 	B43_WARN_ON(skb_shinfo(skb)->nr_frags);
@@ -1127,9 +1132,9 @@ static int dma_tx_fragment(struct b43_dm
 	memset(meta_hdr, 0, sizeof(*meta_hdr));
 
 	header = &(ring->txhdr_cache[slot * sizeof(struct b43_txhdr_fw4)]);
+	cookie = generate_cookie(ring, slot);
 	b43_generate_txhdr(ring->dev, header,
-			   skb->data, skb->len, ctl,
-			   generate_cookie(ring, slot));
+			   skb->data, skb->len, ctl, cookie);
 
 	meta_hdr->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
 					   sizeof(struct b43_txhdr_fw4), 1);
@@ -1169,14 +1174,20 @@ static int dma_tx_fragment(struct b43_dm
 
 	ops->fill_descriptor(ring, desc, meta->dmaaddr, skb->len, 0, 1, 1);
 
+	if (ctl->flags & IEEE80211_TXCTL_SEND_AFTER_DTIM) {
+		/* Tell the firmware about the cookie of the last
+		 * mcast frame, so it can clear the more-data bit in it. */
+		b43_shm_write16(ring->dev, B43_SHM_SHARED,
+				B43_SHM_SH_MCASTCOOKIE, cookie);
+	}
 	/* Now transfer the whole frame. */
 	wmb();
 	ops->poke_tx(ring, next_slot(ring, slot));
 	return 0;
 
-      out_free_bounce:
+out_free_bounce:
 	dev_kfree_skb_any(skb);
-      out_unmap_hdr:
+out_unmap_hdr:
 	unmap_descbuffer(ring, meta_hdr->dmaaddr,
 			 sizeof(struct b43_txhdr_fw4), 1);
 	return err;
@@ -1207,10 +1218,27 @@ int b43_dma_tx(struct b43_wldev *dev,
 	       struct sk_buff *skb, struct ieee80211_tx_control *ctl)
 {
 	struct b43_dmaring *ring;
+	struct ieee80211_hdr *hdr;
 	int err = 0;
 	unsigned long flags;
 
-	ring = priority_to_txring(dev, ctl->queue);
+	if (unlikely(skb->len < 2 + 2 + 6)) {
+		/* Too short, this can't be a valid frame. */
+		return -EINVAL;
+	}
+
+	hdr = (struct ieee80211_hdr *)skb->data;
+	if (ctl->flags & IEEE80211_TXCTL_SEND_AFTER_DTIM) {
+		/* The multicast ring will be sent after the DTIM */
+		ring = dev->dma.tx_ring4;
+		/* Set the more-data bit. Ucode will clear it on
+		 * the last frame for us. */
+		hdr->frame_control |= cpu_to_le16(IEEE80211_FCTL_MOREDATA);
+	} else {
+		/* Decide by priority where to put this frame. */
+		ring = priority_to_txring(dev, ctl->queue);
+	}
+
 	spin_lock_irqsave(&ring->lock, flags);
 	B43_WARN_ON(!ring->tx);
 	if (unlikely(free_slots(ring) < SLOTS_PER_PACKET)) {
@@ -1238,7 +1266,7 @@ int b43_dma_tx(struct b43_wldev *dev,
 			b43dbg(dev->wl, "Stopped TX ring %d\n", ring->index);
 		}
 	}
-      out_unlock:
+out_unlock:
 	spin_unlock_irqrestore(&ring->lock, flags);
 
 	return err;
Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 18:04:53.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-26 18:20:38.000000000 +0100
@@ -250,13 +250,12 @@ static void b43_ram_write(struct b43_wld
 	b43_write32(dev, B43_MMIO_RAM_DATA, val);
 }
 
-static inline
-    void b43_shm_control_word(struct b43_wldev *dev, u16 routing, u16 offset)
+static inline void b43_shm_control_word(struct b43_wldev *dev,
+					u16 routing, u16 offset)
 {
 	u32 control;
 
 	/* "offset" is the WORD offset. */
-
 	control = routing;
 	control <<= 16;
 	control |= offset;
@@ -265,8 +264,11 @@ static inline
 
 u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
 {
+	struct b43_wl *wl = dev->wl;
+	unsigned long flags;
 	u32 ret;
 
+	spin_lock_irqsave(&wl->shm_lock, flags);
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
@@ -277,20 +279,25 @@ u32 b43_shm_read32(struct b43_wldev *dev
 			b43_shm_control_word(dev, routing, (offset >> 2) + 1);
 			ret |= b43_read16(dev, B43_MMIO_SHM_DATA);
 
-			return ret;
+			goto out;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	ret = b43_read32(dev, B43_MMIO_SHM_DATA);
+out:
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
 
 	return ret;
 }
 
 u16 b43_shm_read16(struct b43_wldev * dev, u16 routing, u16 offset)
 {
+	struct b43_wl *wl = dev->wl;
+	unsigned long flags;
 	u16 ret;
 
+	spin_lock_irqsave(&wl->shm_lock, flags);
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
@@ -298,55 +305,63 @@ u16 b43_shm_read16(struct b43_wldev * de
 			b43_shm_control_word(dev, routing, offset >> 2);
 			ret = b43_read16(dev, B43_MMIO_SHM_DATA_UNALIGNED);
 
-			return ret;
+			goto out;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	ret = b43_read16(dev, B43_MMIO_SHM_DATA);
+out:
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
 
 	return ret;
 }
 
 void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
 {
+	struct b43_wl *wl = dev->wl;
+	unsigned long flags;
+
+	spin_lock_irqsave(&wl->shm_lock, flags);
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
-			mmiowb();
 			b43_write16(dev, B43_MMIO_SHM_DATA_UNALIGNED,
 				    (value >> 16) & 0xffff);
-			mmiowb();
 			b43_shm_control_word(dev, routing, (offset >> 2) + 1);
-			mmiowb();
 			b43_write16(dev, B43_MMIO_SHM_DATA, value & 0xffff);
-			return;
+			goto out;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
-	mmiowb();
 	b43_write32(dev, B43_MMIO_SHM_DATA, value);
+out:
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
 }
 
 void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
 {
+	struct b43_wl *wl = dev->wl;
+	unsigned long flags;
+
+	spin_lock_irqsave(&wl->shm_lock, flags);
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
-			mmiowb();
 			b43_write16(dev, B43_MMIO_SHM_DATA_UNALIGNED, value);
-			return;
+			goto out;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
-	mmiowb();
 	b43_write16(dev, B43_MMIO_SHM_DATA, value);
+out:
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
 }
 
 /* Read HostFlags */
@@ -3964,6 +3979,7 @@ static int b43_wireless_init(struct ssb_
 	wl->hw = hw;
 	spin_lock_init(&wl->irq_lock);
 	spin_lock_init(&wl->leds_lock);
+	spin_lock_init(&wl->shm_lock);
 	mutex_init(&wl->mutex);
 	INIT_LIST_HEAD(&wl->devlist);
 


From mb at bu3sch.de  Thu Dec 27 22:15:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 27 Dec 2007 22:15:11 +0100
Subject: [PATCH] b43: Fix tim search buffer overrun
Message-ID: <200712272215.12056.mb@bu3sch.de>

Use the length of the variable section of the beacon instead of the
whole beacon length for bounds checking.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/b43/main.c	2007-12-26 18:20:38.000000000 +0100
+++ wireless-2.6/drivers/net/wireless/b43/main.c	2007-12-27 22:05:07.000000000 +0100
@@ -1161,7 +1161,7 @@ static void b43_write_beacon_template(st
 				      u16 ram_offset,
 				      u16 shm_size_offset, u8 rate)
 {
-	int i, len;
+	unsigned int i, len, variable_len;
 	const struct ieee80211_mgmt *bcn;
 	const u8 *ie;
 	bool tim_found = 0;
@@ -1176,7 +1176,8 @@ static void b43_write_beacon_template(st
 	/* Find the position of the TIM and the DTIM_period value
 	 * and write them to SHM. */
 	ie = bcn->u.beacon.variable;
-	for (i = 0; i < len - 2; ) {
+	variable_len = len - offsetof(struct ieee80211_mgmt, u.beacon.variable);
+	for (i = 0; i < variable_len - 2; ) {
 		uint8_t ie_id, ie_len;
 
 		ie_id = ie[i];
@@ -1187,7 +1188,7 @@ static void b43_write_beacon_template(st
 			/* This is the TIM Information Element */
 
 			/* Check whether the ie_len is in the beacon data range. */
-			if (len < ie_len + 2 + i)
+			if (variable_len < ie_len + 2 + i)
 				break;
 			/* A valid TIM is at least 4 bytes long. */
 			if (ie_len < 4)


From dwmw2 at infradead.org  Sat Dec 29 11:36:27 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Sat, 29 Dec 2007 10:36:27 +0000
Subject: Operation "wpa_driver_wext_set_countermeasures" not supported
In-Reply-To: <345588434.20071218123602@anet.at>
References: <1942722038.20071212234810@anet.at>
	<200712171446.20770.mb@bu3sch.de> <1724934625.20071217150932@anet.at>
	<200712171514.48013.mb@bu3sch.de>  <345588434.20071218123602@anet.at>
Message-ID: <1198924587.5565.15.camel@shinybook.infradead.org>


On Tue, 2007-12-18 at 12:36 +0100, Robert Allerstorfer wrote:
> done. I have recompiled and replaced the original b43.ko from
> 'kernel-2.6.23.9-90.fc8.src.rpm', with the modified 'phy.c' ["if
> (B43_DEBUG)" changed to "if (0)" on line 741]. Using Fedora's build
> mechanism, I had to built the entire (baseonly) kernel which took over
> 2 hours. 

Er, why would you do such a thing? If you have the appropriate
kernel-devel package installed, you only need to rebuild the driver
itself, by putting it into a directory on its own and running 
make -C /lib/modules/`uname -r`/build SUBDIRS=`pwd` modules
which has been the way to build out-of-tree modules for as long as I can
remember.

-- 
dwmw2



