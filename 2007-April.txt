From stefano.brivio at polimi.it  Fri Apr 20 17:21:43 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 20 Apr 2007 17:21:43 +0200
Subject: [PATCH] [RFT #2] PCI-E support
Message-ID: <20070420172143.4abc8133@localhost>

As nobody still tested my patchset for PCI-E support and minor PCI fixes, I
guess it could be easier if I would send an all-in-one patch against
2.6.17-rc4. Please test the attached patch (revised after Michael's
coments) :)


--
Ciao
Stefano
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pcie.patch
Type: text/x-patch
Size: 15626 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070420/9e0ab147/attachment.bin>

From mb at bu3sch.de  Wed Apr  4 22:08:13 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 4 Apr 2007 22:08:13 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
Message-ID: <200704041945.21447.mb@bu3sch.de>

I, Michael Buesch, am one of the maintainers of the GPL'd Linux
wireless LAN driver for the Broadcom chip (bcm43xx).
The Copyright holders of bcm43xx (which includes me) want to talk
to you, OpenBSD bcw developers, about possible GPL license and therefore
Copyright violations in your bcw driver.

We believe that you might have directly copied code
out of bcm43xx (licensed under GPL v2), without our explicit permission,
into bcw (licensed under BSD license).
There are implementation details in bcm43xx that appear exactly
the same in bcw. These implementation details clearly don't come
from the open specifications at bcm-specs.sipsolutions.net
or bcm-v4.sipsolutions.net.

We have always made and still make a great effort to keep our code clean
of any Copyright issues (cleanroom design). Please make sure you also do.

A few examples follow of what we think might be GPL violations.
This list is far from being complete.

BCW_PHY_STACKSAVE()
BCW_ILT_STACKSAVE()
bcw_stack_save()
bcw_stack_restore()
These functions are a possible implementation of the specs when
they say "backup/restore a value".
Yet, it looks like you had exactly the same idea implementing this
generic description that I had.

bcw_set_opmode()
This function does not appear in the specifications.
I think Jiri Benc wrote it initially (and gave it its name) and
I extended it.

bcw_leds_switch_all()
is not in the specs, but a pure implementation detail of bcm43xx.

bcw_sprom_read()
This is obviously copied. Even the error message string is similiar.

bcw_phy_calc_loopback_gain()
I think it's no coincidence that you also decided to name the backup
variables like
	uint16_t backup_phy[15];
	uint16_t backup_radio[3];
	uint16_t backup_bband;

bcw_phy_init_pctl()
	uint16_t saved_batt = 0, saved_ratt = 0, saved_txctl1 = 0;
	int must_reset_txpower = 0;

bcw_phy_xmitpower()
Attenuation adjustment algorithms (while loops).

bcw_phy_lo_g_state()
This exactly matches bcm43xx, although the specs only have an abstract
description and diagram of the state machine.

bcw_phy_lo_g_deviation_subval()
/* XXX bcm43xx_voluntary_preempt() ? */
Nice comment there.
You might want to grep bcw for the string "bcm43xx"
and you will find more of them.


... and all the rest.


We'd like to have this issue resolved.
In general we are not against having a free (and BSD licensed) driver
in the BSD operating system. But you _have_ to cooperate with us if you'd
like to take our code and relicense it under BSD license. We intentionally
put the code under GPL license. We did _not_ do this, because "everybody
does this". We did this, among other reasons, because we
[citing Michael, Mon, 26 Dec 2005 13:03:44 +0100]
"don't think we should allow proprietary vendors to take our code
and close it again."

[citing Michael, Date unknown]
"What if Broadcom decides to take our LO measure state machine and
put it into the original driver? (The Rev Engineers told me they have
a very different weird solution for this in their code).
I really don't want to see this happen."

We'd like to offer you to start cooperating with us.
We respect you and your Copyright. You should also do so on our work.

We would not be opposed to relicensing parts of our code under the BSD
license on an explicit case-by-case base.
So if you ask "May I use this and that function" and if I own the
Copyright on that particular function, I will approve or deny your request.
Other Copyright holders of the bcm43xx code might act the same way.

We're not out for blood, just for a fair resolution.
We'd like you to start contacting us to resolve the issue now.

Have a nice day.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Thu Apr  5 00:35:51 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 05 Apr 2007 00:35:51 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704042222.l34MMYCr009965@cvs.openbsd.org>
References: <200704042222.l34MMYCr009965@cvs.openbsd.org>
Message-ID: <1175726151.7388.58.camel@johannes.berg>

On Wed, 2007-04-04 at 16:22 -0600, Theo de Raadt wrote:

> > "What if Broadcom decides to take our LO measure state machine and
> > put it into the original driver? (The Rev Engineers told me they have
> > a very different weird solution for this in their code).
> > I really don't want to see this happen."
> 
> For the record, I want to warn you that you CANNOT COPYRIGHT
> A STATE MACHINE, which is what the above sentence implies.

That was in a different discussion, quoted out of context. Another part
of Michael's email gives some context:

> bcw_phy_lo_g_state()
> This exactly matches bcm43xx, although the specs only have an abstract
> description and diagram of the state machine.

Hence, it'd be only fair to say that he did, in fact, talk about the
expression/implementation of the state machine.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070405/0864d80f/attachment.pgp>

From stefano.brivio at polimi.it  Thu Apr  5 02:18:05 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 5 Apr 2007 02:18:05 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704042139.l34LdX54017048@cvs.openbsd.org>
References: <200704041945.21447.mb@bu3sch.de>
	<200704042139.l34LdX54017048@cvs.openbsd.org>
Message-ID: <20070405021805.5da85e5e@localhost>

[I'm another bcm43xx maintainer and copyright holder.]

On Wed, 04 Apr 2007 15:39:33 -0600
Theo de Raadt <deraadt at cvs.openbsd.org> wrote:

> Yes, this driver has other problems though.  To begin with, it does
> not even run yet, in any sense.  Since it is not actual using code,
> there will be those who argue that the full impact of the GPL does not
> come to bear yet -- noone is "using" the code yet.

Actually, I would be really happy if somebody was "using" the code. We (the
bcm43xx developers) already discussed about dual licensing on Dec,
2005, because we wanted *BSD as well to benefit from our effort. We
then decided not to dual-license any code, because of the reasons
Michael already explained. I thought Michael already expressed our concerns
about BSD license clearly enough, but it looks like he didn't. We aren't
talking about "usage" here, we just don't want proprietary vendors (i.e.
Broadcom) to benefit from our work. I think that we may have different
points of view on this issue, but I think as well that you can understand
our concerns.

> Because right now, in that mail, you've pretty much done Broadcom's
> job for them.  You've told the entire BSD community who may want to
> use a driver for this chip later, that because of a few GPL issues you

That's not what I would call "a few GPL issues". Really.

> are willing to use very strong words -- published very widely -- to
> disrupt the efforts of one guy who is trying to do things for them.

You are assuming that we want to disrupt his efforts. I think that this
blatant violation is a big bug for OpenBSD, and it looks you agree on this.
Do you believe in full disclosure, don't you?

> And, you are going to do this using the GPL, even.  You did not
> privately mail that developer.  No, you basically went public with it.

The bcw developers went public with it. This code was submitted to a
public CVS. With multiple commits. Copying comments. Maintaining
whitespace and variable names. Not even trying to hide that.

> That is how about half the user and developer community will see it.
> They will see your widely posted mail as an overly strong position.
> 
> And you have probably royally pissed of a developer working in
> parallel in the same problem space as youself.  Would you be happy to
> receive a mail like you just sent?  No, you would be really disturbed,
> to your soul.

Personally, I think that what would be more disturbing to my soul is
releasing GPL'd code under a different and incompatible license without even
asking people who wrote it.

> So next time, talk to the specific people, so you don't come off
> as being mean, ok?

Who is mean here? Again, we aren't out for blood. I don't care for who is
mean here. But if you do, you should be a bit more careful before insulting
people. Plus, I think the mail was sent to the specific people for this
issue. Would you please tell me who is not "specific" here?


--
Ciao
Stefano


From josejx at gentoo.org  Thu Apr  5 02:52:37 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Wed, 04 Apr 2007 20:52:37 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050029.l350TiP6025711@cvs.openbsd.org>
References: <200704050029.l350TiP6025711@cvs.openbsd.org>
Message-ID: <46144855.9020503@gentoo.org>

> Johannes Berg <johannes at sipsolutions.net>
> Joseph Jezak <josejx at gentoo.org>

We are two members of the reverse engineering team as can be
verified by looking at the specification.

> This infighting between two teams trying to support the same chipset
> is a complete mockery of the publicness of the original reverse
> engineering effort. 

As one of the reverse engineers, the reason for the openness of
writing the specification was to ensure that the Chinese Wall method
was maintained.

To date, I have not been contacted by any of the bcw programmers
regarding clarification of the specification, but I would welcome
any questions they might have.

-Joe


From stefano.brivio at polimi.it  Thu Apr  5 02:59:56 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 5 Apr 2007 02:59:56 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050029.l350TiP6025711@cvs.openbsd.org>
References: <20070405021805.5da85e5e@localhost>
	<200704050029.l350TiP6025711@cvs.openbsd.org>
Message-ID: <20070405025956.7b85639c@localhost>

[I'll just try to help further discussion providing IMHO useful information.
It looks like you didn't even read my message before replying, but that's
not the problem. The problem is that repeating again the same things
doesn't lead anywhere, so I hope somebody else will contribute to
discussion.]

On Wed, 04 Apr 2007 18:29:44 -0600
Theo de Raadt <deraadt at cvs.openbsd.org> wrote:

> How about we start with the following people, who do not seem like the
> specific people to mail.
> 
> Martin Langer <martin-langer at gmx.de>

He's a bcm43xx copyright holder.

> Danny van Dyk <kugelfang at gentoo.org>

He's a bcm43xx copyright holder.

> Andreas Jaggi <andreas.jaggi at waterwave.ch>

He's a bcm43xx copyright holder.

> Larry Finger <larry.finger at lwfinger.net>

He's a bcm43xx copyright holder.

> Quaker.Fang at sun.com

He's an OpenSolaris developer interested in bcw for developing a driver for
Broadcom wireless devices. We thought it would be nice to tell him about
this issue.

> Johannes Berg <johannes at sipsolutions.net>

He's a reverse engineer, he may help with discussion.

> Joseph Jezak <josejx at gentoo.org>

He's a reverse engineer, he may help with discussion.

> John Linville <linville at tuxdriver.com>

He's the Linux kernel maintainer for the wireless subsystem.

> Greg kh <greg at kroah.com>

He is the current Linux kernel maintainer for the PCI, USB, I?C, driver
core and the sysfs kernel subsystems.

> bcm43xx-dev at lists.berlios.de

bcm43xx developers.

> linux-wireless at vger.kernel.org

Linux wireless developers.

> license-violation at gpl-violations.org

"In the past 16 months, gpl-violations.org has helped uncover and negotiate
more than 30 out-of-court settlement agreements."

> Copyrighted whitespaces and variable names, you mean, right?

No.


--
Ciao
Stefano


From stefano.brivio at polimi.it  Thu Apr  5 03:40:58 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 5 Apr 2007 03:40:58 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050112.l351C7Ev016627@cvs.openbsd.org>
References: <20070405025956.7b85639c@localhost>
	<200704050112.l351C7Ev016627@cvs.openbsd.org>
Message-ID: <20070405034058.5fba1a90@localhost>

[Please stop this. This doesn't lead anywhere. But as long as you need
answers, I'll try to provide you with them.]

On Wed, 04 Apr 2007 19:12:06 -0600
Theo de Raadt <deraadt at cvs.openbsd.org> wrote:

> > > Copyrighted whitespaces and variable names, you mean, right?
> > 
> > No.
> 
> What does that "No." mean.  Are you being obtuse?  I am quoting you:

[...]

> If whitespacing and variable names do not matter for the larger issue
> at hand, then I suggest you don't bring it up.  Why would you bring it
> up?  Because you want to accuse.  You don't want to see these issues
> solved in the right way (whatever that will be).  You want to accuse,
> by bringing up whitespace.  Why else would you bring up whitespace?

I don't want to accuse anybody. Please see the context. I was trying to
explain why I think bcw developers went public about this issue even
before we noticed about it, and this seems to imply direct copy. (But hey,
I'm not against direct copy, even! I just agree with Michael about this.)

> It should be obvious to anyone who actually goes and reads it, that
> the remainder Marcus' driver shows that he IS TRYING TO TAKE A GOOD
> FAITH APPROACH TOWARDS LICENSING.

I _think_ and hope this.

> Michael's initial overly public statemen did not dispute Marcus
> obviously tried to do the right thing, but your agressiveness DOES
> dispute it.  Your sentence:
> 
> > Not even trying to hide that.
> 
> Is exceedingly agressive.  If you have an agenda here, please make
> it clear.

I'm really sorry if this has been perceived as aggressive. I don't want to
be aggressive. See above, for the reason why I wrote this sentence.
 
> Right about now I think you (Stefano) don't understand that every word
> you say is leading certain people to abandon even trying to write an
> alternative Broadcom driver.

I can't really agree with this. I think you should at least explain why.

> And ... if what you really want is that another Broadcom driver does
> not come into existance, then just say so.  If that is your agenda,
> say so loud and clear, so that we can know.

My agenda:
https://lists.berlios.de/pipermail/bcm43xx-dev/2005-December/000816.html


--
Ciao
Stefano


From josejx at gentoo.org  Thu Apr  5 04:07:18 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Wed, 04 Apr 2007 22:07:18 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050156.l351uhvX006182@cvs.openbsd.org>
References: <200704050156.l351uhvX006182@cvs.openbsd.org>
Message-ID: <461459D6.2050806@gentoo.org>

Theo de Raadt wrote:
>>> Johannes Berg <johannes at sipsolutions.net>
>>> Joseph Jezak <josejx at gentoo.org>
>> We are two members of the reverse engineering team as can be
>> verified by looking at the specification.
> 
> And how exactly does seeing this public flogging involve you?
> 
> Do you feel that Marcus should give up his efforts?
> 

No.  You seem to have deleted the portion of my email where I
suggested that the bcw programmers should feel free to contact us
(the reverse engineers) about any issues with implementing the specs
as written.   I've re-copied that text below:

> To date, I have not been contacted by any of the bcw programmers
> regarding clarification of the specification, but I would welcome
> any questions they might have.

-Joe


From will.dyson at gmail.com  Thu Apr  5 06:03:11 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu,  5 Apr 2007 00:03:11 -0400
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
Message-ID: <11757457917-git-send-email-will.dyson@gmail.com>

From: will <will at zod.(none)>

Check result of dma_map_single(), print warnings and propagate errors up the
call stack.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   39 +++++++++++++++-----
 1 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d53679d..4abc6c8 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -525,9 +525,11 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring *ring,
 		return -ENOMEM;
 	dmaaddr = map_descbuffer(ring, skb->data,
 				 ring->rx_buffersize, 0);
+	if (dma_mapping_error(dmaaddr))
+		return -EIO;
+
 	meta->skb = skb;
 	meta->dmaaddr = dmaaddr;
-
 	ring->ops->fill_descriptor(ring, desc, dmaaddr,
 				   ring->rx_buffersize, 0, 0, 0);
 
@@ -552,8 +554,10 @@ static int alloc_initial_descbuffers(struct bcm43xx_dmaring *ring)
 		desc = ring->ops->idx2desc(ring, i, &meta);
 
 		err = setup_rx_descbuffer(ring, desc, meta, GFP_KERNEL);
-		if (err)
+		if (err) {
+			printk(KERN_ERR PFX "Failed to allocate initial descbuffers\n");
 			goto err_unwind;
+		}
 	}
 	mb();
 	ring->used_slots = ring->nr_slots;
@@ -1017,7 +1021,7 @@ struct bcm43xx_dmaring * parse_cookie(struct bcm43xx_wldev *dev,
 	return ring;
 }
 
-static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
+static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 			    struct sk_buff *skb,
 			    struct ieee80211_tx_control *ctl)
 {
@@ -1026,23 +1030,26 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	int slot;
 	struct bcm43xx_dmadesc_generic *desc;
 	struct bcm43xx_dmadesc_meta *meta;
+	struct bcm43xx_dmadesc_meta *meta_hdr;
 
 #define SLOTS_PER_PACKET  2
 	assert(skb_shinfo(skb)->nr_frags == 0);
 
 	/* Get a slot for the header. */
 	slot = request_slot(ring);
-	desc = ops->idx2desc(ring, slot, &meta);
-	memset(meta, 0, sizeof(*meta));
+	desc = ops->idx2desc(ring, slot, &meta_hdr);
+	memset(meta_hdr, 0, sizeof(*meta_hdr));
 
 	header = &(ring->txhdr_cache[slot * sizeof(struct bcm43xx_txhdr_fw4)]);
 	bcm43xx_generate_txhdr(ring->dev, header,
 			       skb->data, skb->len, ctl,
 			       generate_cookie(ring, slot));
 
-	meta->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
+	meta_hdr->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
 				       sizeof(struct bcm43xx_txhdr_fw4), 1);
-	ops->fill_descriptor(ring, desc, meta->dmaaddr,
+	if (dma_mapping_error(meta_hdr->dmaaddr))
+		return -EIO;
+	ops->fill_descriptor(ring, desc, meta_hdr->dmaaddr,
 			     sizeof(struct bcm43xx_txhdr_fw4), 1, 0, 0);
 
 	/* Get a slot for the payload. */
@@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 
 	memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
 	meta->skb = skb;
-	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 	meta->is_last_fragment = 1;
+	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+	if(dma_mapping_error(meta->dmaaddr))
+		goto out_unmap_hdr;
 
 	ops->fill_descriptor(ring, desc, meta->dmaaddr,
 			     skb->len, 0, 1, 1);
@@ -1061,6 +1070,12 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	/* Now transfer the whole frame. */
 	wmb();
 	ops->poke_tx(ring, next_slot(ring, slot));
+	return 0;
+
+out_unmap_hdr:
+	unmap_descbuffer(ring, meta_hdr->dmaaddr,
+			sizeof(struct bcm43xx_txhdr_fw4), 1);
+	return -EIO;
 }
 
 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
@@ -1068,6 +1083,7 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
 		   struct ieee80211_tx_control *ctl)
 {
 	struct bcm43xx_dmaring *ring = dev->dma.tx_ring1;
+	int err = 0;
 
 	assert(ring->tx);
 	if (unlikely(free_slots(ring) < SLOTS_PER_PACKET)) {
@@ -1078,7 +1094,12 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
 		return NETDEV_TX_BUSY;
 	}
 
-	dma_tx_fragment(ring, skb, ctl);
+	err = dma_tx_fragment(ring, skb, ctl);
+	if (unlikely(err)) {
+		printkl(KERN_ERR PFX "DMA tx mapping failure\n");
+		return NETDEV_TX_BUSY;
+	}
+
 	ring->nr_tx_packets++;
 	if (free_slots(ring) < SLOTS_PER_PACKET) {
 		/* FIXME: we currently only have one queue */
-- 
1.5.0.3



From will.dyson at gmail.com  Thu Apr  5 06:10:15 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu,  5 Apr 2007 00:10:15 -0400
Subject: [PATCH 2/3] bcm43xx_mac80211: Fix error path memory leak
Message-ID: <11757462153021-git-send-email-will.dyson@gmail.com>

From: Will Dyson <will_dyson at gmail.com>

When doing setup for the dma ring, the txhdr_cache must be freed if there is an
error after it is allocated.

Signed-off-by: Will Dyson <will_dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index 4abc6c8..1dc95a7 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -777,7 +777,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 
 	err = alloc_ringmemory(ring);
 	if (err)
-		goto err_kfree_meta;
+		goto err_kfree_txhdr_cache;
 	err = dmacontroller_setup(ring);
 	if (err)
 		goto err_free_ringmemory;
@@ -787,6 +787,8 @@ out:
 
 err_free_ringmemory:
 	free_ringmemory(ring);
+err_kfree_txhdr_cache:
+	kfree(ring->txhdr_cache);
 err_kfree_meta:
 	kfree(ring->meta);
 err_kfree_ring:
-- 
1.5.0.3



From will.dyson at gmail.com  Thu Apr  5 06:11:17 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu,  5 Apr 2007 00:11:17 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
Message-ID: <11757462773949-git-send-email-will.dyson@gmail.com>

From: Will Dyson <will_dyson at gmail.com>

When DMA mapping for RX fails because of the limitation, retry the allocation
in ZONE_DMA. When the network stack passes us TX buffers that cannot be mapped
because of the limitation, allocate a bounce buffer in ZONE_DMA and copy the
packet there.

Signed-off-by: Will Dyson <will_dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   73 ++++++++++++++++++-
 1 files changed, 69 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index 1dc95a7..faefdc4 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -525,8 +525,24 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring *ring,
 		return -ENOMEM;
 	dmaaddr = map_descbuffer(ring, skb->data,
 				 ring->rx_buffersize, 0);
-	if (dma_mapping_error(dmaaddr))
+	if (dma_mapping_error(dmaaddr)) {
+		/* ugh. try to realloc in zone_dma */
+		gfp_flags &= ~GFP_KERNEL;
+		gfp_flags |= GFP_DMA;
+
+		dev_kfree_skb_any(skb);
+		
+		skb = __dev_alloc_skb(ring->rx_buffersize, gfp_flags);
+		if (unlikely(!skb))
+			return -ENOMEM;
+		dmaaddr = map_descbuffer(ring, skb->data,
+					 ring->rx_buffersize, 0);
+	}
+	
+	if (dma_mapping_error(dmaaddr)) {
+		dev_kfree_skb_any(skb);
 		return -EIO;
+	}
 
 	meta->skb = skb;
 	meta->dmaaddr = dmaaddr;
@@ -731,6 +747,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 	struct bcm43xx_dmaring *ring;
 	int err;
 	int nr_slots;
+	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
@@ -750,6 +767,32 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 					    GFP_KERNEL);
 		if (!ring->txhdr_cache)
 			goto err_kfree_meta;
+
+		/* test for ability to dma to txhdr_cache */
+		dma_test = dma_map_single(dev->dev->dev,
+				ring->txhdr_cache, sizeof(struct bcm43xx_txhdr_fw4),
+				DMA_TO_DEVICE);
+		
+		if (dma_mapping_error(dma_test)) {
+			/* ugh realloc */
+			kfree(ring->txhdr_cache);
+			ring->txhdr_cache = kcalloc(nr_slots,
+							sizeof(struct bcm43xx_txhdr_fw4),
+							GFP_DMA);
+			if (!ring->txhdr_cache)
+				goto err_kfree_meta;
+
+			dma_test = dma_map_single(dev->dev->dev,
+					ring->txhdr_cache, sizeof(struct bcm43xx_txhdr_fw4),
+					DMA_TO_DEVICE);
+
+			if (dma_mapping_error(dma_test))
+				goto err_kfree_txhdr_cache;
+		}
+
+		dma_unmap_single(dev->dev->dev,
+				dma_test, sizeof(struct bcm43xx_txhdr_fw4),
+				DMA_TO_DEVICE);
 	}
 
 	ring->dev = dev;
@@ -1030,9 +1073,11 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	const struct bcm43xx_dma_ops *ops = ring->ops;
 	u8 *header;
 	int slot;
+	int err;
 	struct bcm43xx_dmadesc_generic *desc;
 	struct bcm43xx_dmadesc_meta *meta;
 	struct bcm43xx_dmadesc_meta *meta_hdr;
+	struct sk_buff *bounce_skb;
 
 #define SLOTS_PER_PACKET  2
 	assert(skb_shinfo(skb)->nr_frags == 0);
@@ -1062,9 +1107,27 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
 	meta->skb = skb;
 	meta->is_last_fragment = 1;
+
 	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
-	if(dma_mapping_error(meta->dmaaddr))
-		goto out_unmap_hdr;
+
+	/* create a bounce buffer in zone_dma on mapping failure. */
+	if (dma_mapping_error(meta->dmaaddr)) {
+		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC|GFP_DMA);
+		if (!bounce_skb) {
+			err = -ENOMEM;
+			goto out_unmap_hdr;
+		}
+
+		memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
+		dev_kfree_skb_any(skb);
+		skb = bounce_skb;
+		meta->skb = skb;
+		meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+		if (dma_mapping_error(meta->dmaaddr)) {
+			err = -EIO;
+			goto out_free_bounce;
+		}
+	}
 
 	ops->fill_descriptor(ring, desc, meta->dmaaddr,
 			     skb->len, 0, 1, 1);
@@ -1074,10 +1137,12 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	ops->poke_tx(ring, next_slot(ring, slot));
 	return 0;
 
+out_free_bounce:
+	dev_kfree_skb_any(skb);
 out_unmap_hdr:
 	unmap_descbuffer(ring, meta_hdr->dmaaddr,
 			sizeof(struct bcm43xx_txhdr_fw4), 1);
-	return -EIO;
+	return err;
 }
 
 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
-- 
1.5.0.3



From will.dyson at gmail.com  Thu Apr  5 06:20:39 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 5 Apr 2007 00:20:39 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <11757462773949-git-send-email-will.dyson@gmail.com>
References: <11757462773949-git-send-email-will.dyson@gmail.com>
Message-ID: <8e6f94720704042120j5b136846pcb613010dbb84210@mail.gmail.com>

On 4/5/07, Will Dyson <will.dyson at gmail.com> wrote:
> From: Will Dyson <will_dyson at gmail.com>

Well. Looks like I generated these with a  typo  in my email. You'd
think I'd learn not to do this stuff late at night....

Anyway, this should address the previous comments. It'll always try
GFP_KERNEL first, and only fall back to GFP_DMA if that fails. Also,
it no  longer tries to change the way that we keep track of the dma
capabilities of the chip.

-- 
Will Dyson


From mb at bu3sch.de  Thu Apr  5 18:41:56 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 18:41:56 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050029.l350TiP6025711@cvs.openbsd.org>
References: <200704050029.l350TiP6025711@cvs.openbsd.org>
Message-ID: <200704051841.58475.mb@bu3sch.de>

On Thursday 05 April 2007 02:29, Theo de Raadt wrote:
> > Who is mean here? Again, we aren't out for blood. I don't care for who is
> > mean here. But if you do, you should be a bit more careful before insulting
> > people.
> 
> OH i get it.  I'm insulting you, but you guys are not mean by taking it
> widely public.  No private mail received anyone.

I'm sorry. This GPL violation is too obvious.
Compare the code. Many functions are 1:1 copied. The author of
bcw can't tell me that he did not intentionally violate the GPL
and our copyright.

> If Marcus Glocker just gives up now, and aborts his efforts, I would
> not be surprised.  I'd be a bit dissapointed but then it is just the
> increasingly rare Broadcom chipset.

Marcus Glocker is free to contact us to get a clean relicensing
agreement on the code. I wrote that in the first mail.

> If he quit, I would understand his position completely, based on the
> first contact with him about this issue BEING A PUBLIC DRAG THROUGH
> THE MUD BY YOU GUYS.

Your code is public. We respond in your public GPL violation in
a public mail.

> This infighting between two teams trying to support the same chipset
> is a complete mockery of the publicness of the original reverse
> engineering effort.  My guess is that Michael is thinking very
> carefully about whether starting the discussion in public was the
> right thing to do, but I am very sure that Stefano jumping in to lob a
> second volley of mud helps noone's cause, especially Michael's cause.
> Stefano, if you want this resolved nicely, I suggest you think before
> you send more mail.

Please don't attack Stefano. This leads to nothing.
He is also a copyright holder of large amounts of bcm43xx code.

> > Maintaining whitespace and variable names. 
> 
> Copyrighted whitespaces and variable names, you mean, right?

We are not talking about variable names of whitespaces.
We are talking about copied code and algorithms.
The examples I brought were just examples.

-- 
Greetings Michael.


From pmarks at purdue.edu  Thu Apr  5 20:39:49 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Thu, 5 Apr 2007 14:39:49 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051832.l35IWcXk001005@cvs.openbsd.org>
References: <200704052030.03939.mb@bu3sch.de>
	<200704051832.l35IWcXk001005@cvs.openbsd.org>
Message-ID: <8e5b27790704051139o23ef991ar8140454bfca7692@mail.gmail.com>

> > > Your postings have been simply inhuman.

If it weren't for people who devote their lives to software at the
expense of human interaction, then in all likelihood the Free Software
movement as we know it wouldn't exist today.  He's not inhuman, just a
different kind of human.  (imho of course)


From mb at bu3sch.de  Thu Apr  5 18:47:05 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 18:47:05 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <20070405054107.GB7660@gollum.nazgul.ch>
References: <200704041945.21447.mb@bu3sch.de>
	<20070405054107.GB7660@gollum.nazgul.ch>
Message-ID: <200704051847.05778.mb@bu3sch.de>

On Thursday 05 April 2007 07:41, Marcus Glocker wrote:
> I wanted to make some quick progress (maybe too quick), and rewrite
> the functions in question after seeing some first success, e.g.
> receivment of first frames, which isn't the case right now.  But
> still, the specs for some functions are so strict, writing tons
> of registers in a strict order, some parts will still look similar.

To make it clear. We are not issueing any copyright claims on
these magic register sequences.
This is only about algorithms and so on. I mentioned the LO state
machine, for example.

> The last thing I want is to start a license war with you guys,
> and also I don't want to harm OpenBSD further with this issue.
> And of course we want to solve that license issue ASAP.
> 
> So, I am suggestion three options:
> 
> 	1. You give me some time and I try to rewrite the code
> 	   in question.  We keep in touch, and maybe we can split
> 	   up both parties in freedom afterwards.
> 
> 	2. Same as option one, but if my time resources keep
> 	   shrinking like they do right now, spending weekends
> 	   in the office and I can't fix up the driver soon,
> 	   I'll drop the driver.
> 
> 	3. We don't come to a point and I'll plain drop the driver
> 	   directly, very soon.

	4. bcm43xx people review the driver and think about relicensing
	   (parts of) bcw, so you don't have to rewrite it.
	   We don't want to distrurb bcw development, but we don't like
	   the harsh way of taking code without permission and asking
	   for permission afterwards.
	   If you want to have more code relicensed, please ask on a
	   case-by-case base _before_ importing it into bcw.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 18:57:26 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 18:57:26 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704042139.l34LdX54017048@cvs.openbsd.org>
References: <200704042139.l34LdX54017048@cvs.openbsd.org>
Message-ID: <200704051857.27471.mb@bu3sch.de>

On Wednesday 04 April 2007 23:39, Theo de Raadt wrote:
> It will be resolved in our tree, but it is up to him which way he does
> it.  But when you approach issues like this with comments like "We'd
> like you to start contacting us to resolve the issue now" and your
> first mail is cc'd to a couple hundred people.... in the future,
> please think more carefully, ok?

No. I'd like _you_ to make "your" developers aware of the issue
that you'd like to have the openbsd tree clean, in the first place.

> And you have probably royally pissed of a developer working in
> parallel in the same problem space as youself.  Would you be happy to
> receive a mail like you just sent?

Why would someone send me a mail about copyright violations in bcm43xx,
if there aren't any, to the best of my knowledge?

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 18:59:46 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 18:59:46 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704042222.l34MMYCr009965@cvs.openbsd.org>
References: <200704042222.l34MMYCr009965@cvs.openbsd.org>
Message-ID: <200704051859.47207.mb@bu3sch.de>

On Thursday 05 April 2007 00:22, Theo de Raadt wrote:
> >  [citing Michael, Date unknown]
> > "What if Broadcom decides to take our LO measure state machine and
> > put it into the original driver? (The Rev Engineers told me they have
> > a very different weird solution for this in their code).
> > I really don't want to see this happen."
> 
> For the record, I want to warn you that you CANNOT COPYRIGHT
> A STATE MACHINE, which is what the above sentence implies.

> You can copyright the actual way it is written ('expression'), but you

We explicitely takled about the IMPLEMENTATION. An Implementation _is_
"the way it is written". Fullstop.

> Whoever Michael is, that comment above about using the GPL as a patent
> like tool is crazy.  And if you think that the GPL has any binding
> against Broadcom copying the idea of your state machine, you are
> quite deluded.

Please read my mail more carefully in the first place, please.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:03:49 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:03:49 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704050210.l352AjfE027920@cvs.openbsd.org>
References: <200704050210.l352AjfE027920@cvs.openbsd.org>
Message-ID: <200704051903.50427.mb@bu3sch.de>

On Thursday 05 April 2007 04:10, Theo de Raadt wrote:
> Do you feel that Marcus should give up his efforts?

To say it clearly: No!

No, he should _not_ give up. The opposite is true.
He should start to contact us to get relicensing permission from
us to speed up bcw development and stay legal.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:14:10 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:14:10 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051648.l35GmYT9003711@cvs.openbsd.org>
References: <200704051648.l35GmYT9003711@cvs.openbsd.org>
Message-ID: <200704051914.10999.mb@bu3sch.de>

On Thursday 05 April 2007 18:48, Theo de Raadt wrote:
> I personally believe that you made a very poor choice by publically
> attacking a developer who did not even have working code yet.  You chose

The GPL is not about "working code", it's about distribution.
And you did distribute our code under the BSD license, which is
a GPL violation.
I think this is dangerous, because the code is tainted and it
may even taint other codebases. For example if someone working
for opensolaris choses to import bcw into solaris, as he's rightfully
got the opinion that bcw is BSD licensed.

> not to mail him privately and point out your concerns.
> 
> Marcus has chosen to give up.

I want to publically state the I do NOT FEEL GUILTY for this.

I offered several ways to solve the issue that would help bcw development
(offering to relicense my code).
If Marcus gave up that's a pity. But that's his choice. I respect that,
although I hoped to get a better solution.

> Can you please stop mailing us about this?  It's over.  Your beloved
> license has been protected, and it's over.

I tried to make clear that this is NOT about the "GPL Religion",
but you obviously did not get it.
To say it again. We did _not_ choose the GPL, because "everybody
does this" or because we are bound to the GPL in any way.
We had good reasons to chose it, but we _always_ left the opportunity
to have parts of it relicensed for you guys.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:31:10 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:31:10 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <20070405163434.GA18477@gollum.nazgul.ch>
References: <200704041945.21447.mb@bu3sch.de>
	<20070405054107.GB7660@gollum.nazgul.ch>
	<20070405163434.GA18477@gollum.nazgul.ch>
Message-ID: <200704051931.11044.mb@bu3sch.de>

On Thursday 05 April 2007 18:34, Marcus Glocker wrote:
> OK, I decided to go for option 3:
> 
> ***
> 
> From: Marcus Glocker <mglocker at cvs.openbsd.org>                                 
> To: source-changes at cvs.openbsd.org                                              
> Date: Thu, 5 Apr 2007 10:25:25 -0600 (MDT)                                      
> Subject: CVS: cvs.openbsd.org: src                                              
>   
> CVSROOT:        /cvs
> Module name:    src
> Changes by:     mglocker at cvs.openbsd.org        2007/04/05 10:25:25
>   
> Modified files:
>         sys/conf       : files
>         sys/dev/pci    : files.pci
>         sys/dev/cardbus: files.cardbus
> Removed files:
>         share/man/man4 : bcw.4
>         sys/dev/ic     : bcw.c bcwreg.h bcwvar.h
>         sys/dev/pci    : if_bcw_pci.c
>         sys/dev/cardbus: if_bcw_cardbus.c
>   
> Log message:
> After been attacked by Michael Buesch <mb at bu3sch.de> because we initially
> were using some of their routines in the bcw driver, I decided to stop
> working on it.  To avoid any further license chit chat I plain drop the
> driver.
> 
> ***
> 
> Happy now?
> 
> It's a pleasure to see how the OpenSource community stands together,
> and starting public wars instead of talking directly to the people
> involved.

I don't understand your reaction, really.
If you were really interrested in doing a Broadcom wireless driver for
openbsd, you would have chosen the option to relicense some code (and
therefore drop only that code which I refuse to relicense), which I gave
you.

It's a pity. I'd like you to sleep a night over this and rethink
your decision tomorrow.
Feel free to contact us to get code relicensed _before_ you re-add
it to the repository. This will make you and us happy and I'm sure
you'll have a working driver soon.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:35:35 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:35:35 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051700.l35H0Cc7027001@cvs.openbsd.org>
References: <200704051700.l35H0Cc7027001@cvs.openbsd.org>
Message-ID: <200704051935.36264.mb@bu3sch.de>

On Thursday 05 April 2007 19:00, Theo de Raadt wrote:
> > No. I'd like _you_ to make "your" developers aware of the issue
> > that you'd like to have the openbsd tree clean, in the first place.
> 
> I make developers aware.  Marcus was aware.  He made a few mistakes.
> You don't believe him.
> 
> That's fine.  We don't believe your public flogging was the kind and
> right way to approach this whole problem.
> 
> But the issue is over.  The code has been entirely deleted.
> 
> I hope you are happy.  I am sure Marcus is not happy, because he's
> thrown away about 800 hours of hobby work.  But it is easier for him
> to just abandon this, based on the strength of your initial mail.

I'm sorry if the mail sounded too strong. This was not intentional.
But I think I made a great effort to make this clear, though.
I am not out for blood.

> I mean, if I were him, why would I bother going on,

To get your broadcom cards working on bsd??
Really, there's no single other reason to write a driver.

> when there are 
> accusations about copyright being based on white space, variable
> names which are the same, or simple "save the registers" algorithms
> which you feel are too similar.

I did _never_ base by arguments on these things. I explicitely
marked these things in the mail as being EXAMPLES for the most
obvious 1:1 copying going on.

> I'd say he did the right thing to give up.

Only if you don't need a Broadcom wireless driver.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:40:03 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:40:03 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051705.l35H5KRn019095@cvs.openbsd.org>
References: <200704051705.l35H5KRn019095@cvs.openbsd.org>
Message-ID: <200704051940.04407.mb@bu3sch.de>

On Thursday 05 April 2007 19:05, Theo de Raadt wrote:
> > He should start to contact us to get relicensing permission from
> > us to speed up bcw development and stay legal.
> 
> What bullshit.  He should contact you, when he does not known that
> he's been found to have made mistakes?
> 
> Do you even know the word 'mistake'?
> 
> If you make a mistake, sometimes you don't know it has been made
> until someone tells you that you have made a mistake.

I can't see how you can copy code from bcm43xx to bcw by mistake.
Really, I want to explicitely state that in my opinion the 1:1
copying was going on intentionally. This is impossible to be
a mistake.
Theo, please _do_ compare the code of bcw and bcm43xx. You will find
tons of 1:1 copied code.

> And you are surprised about what has happened?

Yes I am. I thought you were really interrested in having a Broadcom
wireless driver for openbsd.

> Are you living in 
> a cave?  Are you not human?  Don't you know how people behave when
> they are publically attacked, and not treated with respectful private
> discussion to point out their mistakes?

This was not a mistake. bcw developers obviously intentionally
copied our code. If you read the bcw commit logs and compare
bcm43xx and bcw code you will see what I mean. Yes, _really_ do this!
Compare it and you'll get my point.

> His deletion of the code has happened for one reason and one reason
> alone -- your way of trying to handle this.

I don't agree to this.
This sounds more like he lost interrest in getting a clean Broadcom
wireless driver.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 19:53:32 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 19:53:32 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051725.l35HPJXt014600@cvs.openbsd.org>
References: <200704051725.l35HPJXt014600@cvs.openbsd.org>
Message-ID: <200704051953.33685.mb@bu3sch.de>

On Thursday 05 April 2007 19:25, Theo de Raadt wrote:
> But when dealing with a parallel open source effort, you went right to
> the jugular.  I bet you deal nicer with companies.

There was no deal with you!
You simply took the code.

> But you, sir, are not in the group of people who try to nicely get
> problems results.  You publically kick people who make mistakes.

I do not believe this can be called a mistake. It was intentional.
You cannot copy code by mistake.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 20:30:03 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 20:30:03 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051800.l35I0reU004087@cvs.openbsd.org>
References: <200704051800.l35I0reU004087@cvs.openbsd.org>
Message-ID: <200704052030.03939.mb@bu3sch.de>

On Thursday 05 April 2007 20:00, Theo de Raadt wrote:
> The most striking thing about this is that I am sure you guys are
> treating Marcus worse than you would treat a company using your code
> against license.  You would privately mail a company, I am sure of it.

This is the proof that you read mails in the way you want
them to be. You should indead read my mail and _not_ interpret
your personal foobar into my words.

We do not treat Marcus bad in any way.
The opposite is true. We offered the explicit opportunity to
get (some of the) code relicensed, if he starts to work together
with us.

> Your postings have been simply inhuman.
> 
> And I will go out of my way to ensure that anyone in the future
> understands that is our viewpoint on this.

fine.

-- 
Greetings Michael.


From stefano.brivio at polimi.it  Thu Apr  5 21:08:44 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 5 Apr 2007 21:08:44 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051842.l35IgYRu017570@cvs.openbsd.org>
References: <200704052040.36016.mb@bu3sch.de>
	<200704051842.l35IgYRu017570@cvs.openbsd.org>
Message-ID: <20070405210844.04dc96b0@localhost>

On Thu, 05 Apr 2007 12:42:34 -0600
Theo de Raadt <deraadt at cvs.openbsd.org> wrote:

> Again, your assumption is that he did it on purpose, and thus, you
> are calling him a thief.

 _____ _   _ ___ _____ _____ _
|_   _| | | |_ _| ____|  ___| |
  | | | |_| || ||  _| | |_  | |
  | | |  _  || || |___|  _| |_|
  |_| |_| |_|___|_____|_|   (_)

Oops, sorry! Now we really said it! Really sorry! I'm now offering to send
out chocolate and flowers so you stop crying and understand that we really
love you!


--
Ciao
Stefano


From mb at bu3sch.de  Thu Apr  5 20:47:10 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 20:47:10 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051832.l35IWcXk001005@cvs.openbsd.org>
References: <200704051832.l35IWcXk001005@cvs.openbsd.org>
Message-ID: <200704052047.11737.mb@bu3sch.de>

On Thursday 05 April 2007 20:32, Theo de Raadt wrote:
> Or are you now going to say that all the functions he
> is using are OK to use?

No!
I decide this on a case-by-case base as you OpenBSD guys contact
me and ask "Is it OK to you to use this particular fraction of code...".
I wrote that in the very first mail.

> No, you wanted him to come begging,

I want you to respect my copyright. Fullstop.
And if he wants to use my GPL code in his BSD project, he has no
other legal opportunity than asking me for permission.
Same goes for other code that is copyrighted by the other bcm43xx
developers.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 20:40:35 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 20:40:35 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051828.l35ISZHQ030939@cvs.openbsd.org>
References: <200704051828.l35ISZHQ030939@cvs.openbsd.org>
Message-ID: <200704052040.36016.mb@bu3sch.de>

On Thursday 05 April 2007 20:28, Theo de Raadt wrote:
> > > But when dealing with a parallel open source effort, you went right to
> > > the jugular.  I bet you deal nicer with companies.
> > 
> > There was no deal with you!
> 
> I don't understand this sentence of yours.

There was no agreement with you to use my code.

> Do you make deals with companies?

Not yet. Maybe in future. Who knows...

> Do you do those deals publically?

That depends on what the company does.
If the company illegally distributes my code to the public,
I _will_ contact them in public as well.

If they contact me in private _before_ distributing the code,
I will respond in private.

The exact same thing would have been true for you.
But you did _not_ do any effort to contact me before distributing
my code.

> What are you saying?
> 
> Was Marcus suppose do to have some sort of deal with you?

The deal was: He asks for relicensing-permission on
a particular faction of my code and I ACK or deny it.

I explained the exact deal more than once.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 21:09:00 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 21:09:00 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051848.l35ImrcP028396@cvs.openbsd.org>
References: <200704051848.l35ImrcP028396@cvs.openbsd.org>
Message-ID: <200704052109.00797.mb@bu3sch.de>

I won't reply to your mail anymore, as you are not interrested
in a real solution to this. Instead you write things like that:

On Thursday 05 April 2007 20:48, Theo de Raadt wrote:
> You are a very poor example of humankind.

Which has absolutely nothing to do with the issue of
copyright and GPL violation.

I could say similiar things to you, but I don't.
I wrote the initial mail to get the issue resolved, but
not insult you.

Yet, you think it's my turn to be "human" and so on.
But why did _you_ not be human and asked before using
our stuff? Ah, I know, it was a mistake...
At least in your opinion.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 21:33:01 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 21:33:01 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <11757457917-git-send-email-will.dyson@gmail.com>
References: <11757457917-git-send-email-will.dyson@gmail.com>
Message-ID: <200704052133.01653.mb@bu3sch.de>

On Thursday 05 April 2007 06:03, Will Dyson wrote:
> @@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
>  
>  	memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
>  	meta->skb = skb;
> -	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
>  	meta->is_last_fragment = 1;
> +	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> +	if(dma_mapping_error(meta->dmaaddr))

Codingstyle. Space between if and (

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 21:35:29 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 21:35:29 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <11757462773949-git-send-email-will.dyson@gmail.com>
References: <11757462773949-git-send-email-will.dyson@gmail.com>
Message-ID: <200704052135.30110.mb@bu3sch.de>

On Thursday 05 April 2007 06:11, Will Dyson wrote:
> @@ -525,8 +525,24 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring *ring,
>  		return -ENOMEM;
>  	dmaaddr = map_descbuffer(ring, skb->data,
>  				 ring->rx_buffersize, 0);
> -	if (dma_mapping_error(dmaaddr))
> +	if (dma_mapping_error(dmaaddr)) {
> +		/* ugh. try to realloc in zone_dma */
> +		gfp_flags &= ~GFP_KERNEL;
> +		gfp_flags |= GFP_DMA;

This is wrong. The line
gfp_flags &= ~GFP_KERNEL;
should be deleted.

> +		if (dma_mapping_error(dma_test)) {
> +			/* ugh realloc */
> +			kfree(ring->txhdr_cache);
> +			ring->txhdr_cache = kcalloc(nr_slots,
> +							sizeof(struct bcm43xx_txhdr_fw4),
> +							GFP_DMA);

GFP_KERNEL | GFP_DMA

> +	/* create a bounce buffer in zone_dma on mapping failure. */
> +	if (dma_mapping_error(meta->dmaaddr)) {
> +		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC|GFP_DMA);

Whitespace around the |

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Apr  5 21:25:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 21:25:11 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051913.l35JDww5000087@cvs.openbsd.org>
References: <200704051913.l35JDww5000087@cvs.openbsd.org>
Message-ID: <200704052125.12599.mb@bu3sch.de>

On Thursday 05 April 2007 21:13, Theo de Raadt wrote:
> I am not the only one with the belief that your process sucked.
> And neither is the person below.  Many people see it that way.

> ---
> From: Jason Dixon <jason at dixongroup.net>
> Subject: Re: CVS: cvs.openbsd.org: src 
> Date: Thu, 5 Apr 2007 14:56:37 -0400
> To: source-changes at cvs.openbsd.org
> X-Mailer: Apple Mail (2.752.3)
> X-Virus-Scanned: by amavisd-new using ClamAV at dixongroup.net
> X-Loop: source-changes at openbsd.org
> Precedence: list
> Sender: owner-source-changes at openbsd.org

> The way they chose to "notify" Marcus shows a complete lack of  
> respect for Marcus.

The way OpenBSD folks used our code was a complete lack of respect
for us. Fullstop.

> As Theo expressed in the thread, there is NO   
> DOUBT that they would have notified a corporation privately.  Why  
> would you treat an individual, working on the code out of their own  
> desire, with less respect?

This is a lie.
Read the whole thread again!

-- 
Greetings Michael.


From proski at gnu.org  Thu Apr  5 21:31:27 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 05 Apr 2007 15:31:27 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051848.l35ImrcP028396@cvs.openbsd.org>
References: <200704051848.l35ImrcP028396@cvs.openbsd.org>
Message-ID: <1175801487.19303.52.camel@dv>

On Thu, 2007-04-05 at 12:48 -0600, Theo de Raadt wrote:

> No, your message offered that he can come begging, because that is the
> best that thieves may do.
> 
> Come little dog, come beg for forgiveness.
> 
> You are a very poor example of humankind.

Theo,

I'm a member of linux-wireless list, an occasional contributor to
bcm43xx and a MadWifi developer.

It has been a few months ago that I was feeling bad for another OpenBSD
driver developer.  The MadWifi team asked him to relicense parts of the
driver (so called openhal) under GPL so that if would be easier for us
to erase the boundary between the HAL and the rest of MadWifi and
eventually integrate it into the Linux kernel.

We got a message from you, which was rather abusive, and it just made
impossible for that OpenBSD developer to do anything but to deny our
request.  I was feeling bad for him, because it was his code.  I would
not want to be in a similar situation.

Now you are asking us to be sensitive towards somebody who just took the
code under GPL and put it under BSD license without asking any
questions, nicely or otherwise.

I'm sorry, but your Harlequin show is woefully unconvincing and
out-of-date.  Knowing something about you, I think a "sensitive OpenBSD
developer" is an oxymoron.

I don't want to fan the flames anymore, so it's probably my one and only
posting regarding this topic, unless you give me a good reason to reply.
But please don't try.

-- 
Regards,
Pavel Roskin



From stefano.brivio at polimi.it  Thu Apr  5 21:35:22 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 5 Apr 2007 21:35:22 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704052125.12599.mb@bu3sch.de>
References: <200704051913.l35JDww5000087@cvs.openbsd.org>
	<200704052125.12599.mb@bu3sch.de>
Message-ID: <20070405213522.22a8526a@localhost>

On Thu, 5 Apr 2007 21:25:11 +0200
Michael Buesch <mb at bu3sch.de> wrote:

> This is a lie.
> Read the whole thread again!

He will never do. He has to maintain his outstanding messages/time ratio.

It's awesome that there are people on this world who can think so fast. Or
who don't even need to.


--
Ciao
Stefano


From gene.heskett at verizon.net  Thu Apr  5 22:21:59 2007
From: gene.heskett at verizon.net (Gene Heskett)
Date: Thu, 05 Apr 2007 16:21:59 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051847.05778.mb@bu3sch.de>
References: <200704041945.21447.mb@bu3sch.de>
	<20070405054107.GB7660@gollum.nazgul.ch>
	<200704051847.05778.mb@bu3sch.de>
Message-ID: <200704051621.59937.gene.heskett@verizon.net>

On Thursday 05 April 2007, Michael Buesch wrote:
>On Thursday 05 April 2007 07:41, Marcus Glocker wrote:
>> I wanted to make some quick progress (maybe too quick), and rewrite
>> the functions in question after seeing some first success, e.g.
>> receivment of first frames, which isn't the case right now.  But
>> still, the specs for some functions are so strict, writing tons
>> of registers in a strict order, some parts will still look similar.
>
>To make it clear. We are not issueing any copyright claims on
>these magic register sequences.
>This is only about algorithms and so on. I mentioned the LO state
>machine, for example.
>
>> The last thing I want is to start a license war with you guys,
>> and also I don't want to harm OpenBSD further with this issue.
>> And of course we want to solve that license issue ASAP.
>>
>> So, I am suggestion three options:
>>
>> 	1. You give me some time and I try to rewrite the code
>> 	   in question.  We keep in touch, and maybe we can split
>> 	   up both parties in freedom afterwards.
>>
>> 	2. Same as option one, but if my time resources keep
>> 	   shrinking like they do right now, spending weekends
>> 	   in the office and I can't fix up the driver soon,
>> 	   I'll drop the driver.
>>
>> 	3. We don't come to a point and I'll plain drop the driver
>> 	   directly, very soon.
>
>	4. bcm43xx people review the driver and think about relicensing
>	   (parts of) bcw, so you don't have to rewrite it.
>	   We don't want to distrurb bcw development, but we don't like
>	   the harsh way of taking code without permission and asking
>	   for permission afterwards.
>	   If you want to have more code relicensed, please ask on a
>	   case-by-case base _before_ importing it into bcw.

I find the lack of being able to read both sides of this thread without 
being subscribed to the BSD lists rather upsetting.  Please, if one side 
of this fight is going to carry on this discussion on a public list, then 
both sides should.

-- 
Cheers, Gene
"There are four boxes to be used in defense of liberty:
 soap, ballot, jury, and ammo. Please use in that order."
-Ed Howdershelt (Author)
Beauty and harmony are as necessary to you as the very breath of life.


From johannes at sipsolutions.net  Thu Apr  5 23:31:51 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 05 Apr 2007 23:31:51 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051621.59937.gene.heskett@verizon.net>
References: <200704041945.21447.mb@bu3sch.de>
	<20070405054107.GB7660@gollum.nazgul.ch>
	<200704051847.05778.mb@bu3sch.de>
	<200704051621.59937.gene.heskett@verizon.net>
Message-ID: <1175808712.3489.12.camel@johannes.berg>

On Thu, 2007-04-05 at 16:21 -0400, Gene Heskett wrote:

> I find the lack of being able to read both sides of this thread without 
> being subscribed to the BSD lists rather upsetting.  Please, if one side 
> of this fight is going to carry on this discussion on a public list, then 
> both sides should.

This list is just not accepting their posts. Go read them at
http://thread.gmane.org/gmane.linux.kernel.wireless.general/1558

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070405/08af299c/attachment.pgp>

From mb at bu3sch.de  Thu Apr  5 23:35:07 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Apr 2007 23:35:07 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051621.59937.gene.heskett@verizon.net>
References: <200704041945.21447.mb@bu3sch.de> <200704051847.05778.mb@bu3sch.de>
	<200704051621.59937.gene.heskett@verizon.net>
Message-ID: <200704052335.08082.mb@bu3sch.de>

On Thursday 05 April 2007 22:21, Gene Heskett wrote:
> On Thursday 05 April 2007, Michael Buesch wrote:
> >On Thursday 05 April 2007 07:41, Marcus Glocker wrote:
> >> I wanted to make some quick progress (maybe too quick), and rewrite
> >> the functions in question after seeing some first success, e.g.
> >> receivment of first frames, which isn't the case right now.  But
> >> still, the specs for some functions are so strict, writing tons
> >> of registers in a strict order, some parts will still look similar.
> >
> >To make it clear. We are not issueing any copyright claims on
> >these magic register sequences.
> >This is only about algorithms and so on. I mentioned the LO state
> >machine, for example.
> >
> >> The last thing I want is to start a license war with you guys,
> >> and also I don't want to harm OpenBSD further with this issue.
> >> And of course we want to solve that license issue ASAP.
> >>
> >> So, I am suggestion three options:
> >>
> >> 	1. You give me some time and I try to rewrite the code
> >> 	   in question.  We keep in touch, and maybe we can split
> >> 	   up both parties in freedom afterwards.
> >>
> >> 	2. Same as option one, but if my time resources keep
> >> 	   shrinking like they do right now, spending weekends
> >> 	   in the office and I can't fix up the driver soon,
> >> 	   I'll drop the driver.
> >>
> >> 	3. We don't come to a point and I'll plain drop the driver
> >> 	   directly, very soon.
> >
> >	4. bcm43xx people review the driver and think about relicensing
> >	   (parts of) bcw, so you don't have to rewrite it.
> >	   We don't want to distrurb bcw development, but we don't like
> >	   the harsh way of taking code without permission and asking
> >	   for permission afterwards.
> >	   If you want to have more code relicensed, please ask on a
> >	   case-by-case base _before_ importing it into bcw.
> 
> I find the lack of being able to read both sides of this thread without 
> being subscribed to the BSD lists rather upsetting.  Please, if one side 
> of this fight is going to carry on this discussion on a public list, then 
> both sides should.

http://thread.gmane.org/gmane.linux.kernel.wireless.general/1558

-- 
Greetings Michael.


From gene.heskett at verizon.net  Fri Apr  6 00:54:33 2007
From: gene.heskett at verizon.net (Gene Heskett)
Date: Thu, 05 Apr 2007 18:54:33 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704052335.08082.mb@bu3sch.de>
References: <200704041945.21447.mb@bu3sch.de>
	<200704051621.59937.gene.heskett@verizon.net>
	<200704052335.08082.mb@bu3sch.de>
Message-ID: <200704051854.33536.gene.heskett@verizon.net>

On Thursday 05 April 2007, Michael Buesch wrote:
>On Thursday 05 April 2007 22:21, Gene Heskett wrote:
>> On Thursday 05 April 2007, Michael Buesch wrote:
>> >On Thursday 05 April 2007 07:41, Marcus Glocker wrote:
>> >> I wanted to make some quick progress (maybe too quick), and rewrite
>> >> the functions in question after seeing some first success, e.g.
>> >> receivment of first frames, which isn't the case right now.  But
>> >> still, the specs for some functions are so strict, writing tons
>> >> of registers in a strict order, some parts will still look similar.
>> >
>> >To make it clear. We are not issueing any copyright claims on
>> >these magic register sequences.
>> >This is only about algorithms and so on. I mentioned the LO state
>> >machine, for example.
>> >
>> >> The last thing I want is to start a license war with you guys,
>> >> and also I don't want to harm OpenBSD further with this issue.
>> >> And of course we want to solve that license issue ASAP.
>> >>
>> >> So, I am suggestion three options:
>> >>
>> >> 	1. You give me some time and I try to rewrite the code
>> >> 	   in question.  We keep in touch, and maybe we can split
>> >> 	   up both parties in freedom afterwards.
>> >>
>> >> 	2. Same as option one, but if my time resources keep
>> >> 	   shrinking like they do right now, spending weekends
>> >> 	   in the office and I can't fix up the driver soon,
>> >> 	   I'll drop the driver.
>> >>
>> >> 	3. We don't come to a point and I'll plain drop the driver
>> >> 	   directly, very soon.
>> >
>> >	4. bcm43xx people review the driver and think about relicensing
>> >	   (parts of) bcw, so you don't have to rewrite it.
>> >	   We don't want to distrurb bcw development, but we don't like
>> >	   the harsh way of taking code without permission and asking
>> >	   for permission afterwards.
>> >	   If you want to have more code relicensed, please ask on a
>> >	   case-by-case base _before_ importing it into bcw.
>>
>> I find the lack of being able to read both sides of this thread
>> without being subscribed to the BSD lists rather upsetting.  Please,
>> if one side of this fight is going to carry on this discussion on a
>> public list, then both sides should.
>
>http://thread.gmane.org/gmane.linux.kernel.wireless.general/1558

Now having read the full thread, and considering Theo's widely known 
personality, then add in that I was once chastized for asking what I 
considered to be a valid question at the time, by none other than 
Michael, I must say that both of you need to come to the table with 
productive ideas and quit acting like children.

Did you, Theo, ever consider that the refusable to cross license the other 
code mentioned, just might have a teeny wee bit of a bearing on how 
Micheal would respond when, after requesting some BSD code and being told 
to go fish, that Michael in turn might be more than a little upset to 
find his code, essentialy verbatum but sans credits in a BSD cvs repo?

I think Michael reacted relatively peacefully considering that the code is 
in the wild now, without his copyright.

Think about it, both of you, and then do the right thing for both 
distributions.  IMO, deleting the offending code was, in this case not 
the optimum path to have traveled, particularly since bsd needs that 
code.  There are a couple dozen boatloads of machines out there using 
this chipset.  Including a lappy I bought a year ago.

-- 
Cheers, Gene
"There are four boxes to be used in defense of liberty:
 soap, ballot, jury, and ammo. Please use in that order."
-Ed Howdershelt (Author)
The clash of ideas is the sound of freedom.


From mb at bu3sch.de  Fri Apr  6 01:09:05 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Apr 2007 01:09:05 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <200704051854.33536.gene.heskett@verizon.net>
References: <200704041945.21447.mb@bu3sch.de> <200704052335.08082.mb@bu3sch.de>
	<200704051854.33536.gene.heskett@verizon.net>
Message-ID: <200704060109.05574.mb@bu3sch.de>

On Friday 06 April 2007 00:54, Gene Heskett wrote:
> Now having read the full thread, and considering Theo's widely known 
> personality, then add in that I was once chastized for asking what I 
> considered to be a valid question at the time, by none other than 
> Michael, I must say that both of you need to come to the table with 
> productive ideas and quit acting like children.

The copyright violation issue is solved.
I stopped responsing to the discussion. The issue is solved for me.
If they want to have a broadcom driver in their openbsd they have to
either write it on their own or contact us to get permission to use
code. It's their turn. Although I don't expect them to contact us.

> Did you, Theo, ever consider that the refusable to cross license the other 
> code mentioned, just might have a teeny wee bit of a bearing on how 
> Micheal would respond when, after requesting some BSD code and being told 
> to go fish, that Michael in turn might be more than a little upset to 
> find his code, essentialy verbatum but sans credits in a BSD cvs repo?
> 
> I think Michael reacted relatively peacefully considering that the code is 
> in the wild now, without his copyright.

You forgot to CC Theo ;)

> Think about it, both of you, and then do the right thing for both 
> distributions.  IMO, deleting the offending code was, in this case not 
> the optimum path to have traveled, particularly since bsd needs that 
> code.  There are a couple dozen boatloads of machines out there using 
> this chipset.  Including a lappy I bought a year ago.

I am 100% sure that was the worst decision they could do.
But I did not force this on them in any way. It was their decision.
And I respect that.

-- 
Greetings Michael.


From will.dyson at gmail.com  Fri Apr  6 03:35:44 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 5 Apr 2007 21:35:44 -0400
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <200704052133.01653.mb@bu3sch.de>
References: <11757457917-git-send-email-will.dyson@gmail.com>
	<200704052133.01653.mb@bu3sch.de>
Message-ID: <8e6f94720704051835s1481b028xb7b5238b810a642b@mail.gmail.com>

On 4/5/07, Michael Buesch <mb at bu3sch.de> wrote:
> On Thursday 05 April 2007 06:03, Will Dyson wrote:
> > @@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
> >
> >       memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
> >       meta->skb = skb;
> > -     meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> >       meta->is_last_fragment = 1;
> > +     meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> > +     if(dma_mapping_error(meta->dmaaddr))
>
> Codingstyle. Space between if and (

Sigh. I did try ./scripts/Lindent, by the way. Pretty useless. It
tries to change almost every line.

Is there a set of indent args that will actually help with this,
without generating so much noise that I can't see what I messed up?

-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting


From zajec5polish at gmail.com  Fri Apr  6 09:40:21 2007
From: zajec5polish at gmail.com (=?ISO-8859-2?Q?Rafa=B3_Mi=B3ecki?=)
Date: Fri, 6 Apr 2007 09:40:21 +0200
Subject: Problem with connecting on bcm4318
Message-ID: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>

Hello everyone :-)

I would like to report a problem with connecting to network using
bcm43xx module. It is quite hard to connect because I usualy receive
an error from KNetworkManager: "Could not connect to the network
zajec_linksys".

I have to try again, and again... After a few times it connects and
then it works perfect. Speed is OK, and connection is stable - I can
be connected for hours.

I wonder if there is something you could do to improve connecting? I made a
tail -f /var/log/messages > zajec.bcm43xx.log
when trying to connect.

Software/hardware I use:

lspci -v:
06:05.0 Network controller: Broadcom Corporation BCM4318 [AirForce One
54g] 802.11g Wireless LAN Controller (rev 02)
        Subsystem: AMBIT Microsystem Corp. Aspire 3022WLMi, 5024WLMi
        Flags: bus master, fast devsel, latency 64, IRQ 21
        Memory at c0204000 (32-bit, non-prefetchable) [size=8K]

uname -r:
2.6.21-rc5-14-default

It is openSUSE 10.2 distro with additional kernel from
http://software.opensuse.org/download/Kernel:/HEAD/openSUSE_10.2/


From zajec5polish at gmail.com  Fri Apr  6 09:42:27 2007
From: zajec5polish at gmail.com (=?ISO-8859-2?Q?Rafa=B3_Mi=B3ecki?=)
Date: Fri, 6 Apr 2007 09:42:27 +0200
Subject: Problem with connecting on bcm4318
In-Reply-To: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
References: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
Message-ID: <14b026160704060042l480dd026ie53adae27b754569@mail.gmail.com>

I forgot zajec.bcm43xx.log
-------------- next part --------------
A non-text attachment was scrubbed...
Name: zajec.bcm43xx.log
Type: application/octet-stream
Size: 28944 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070406/f9d14107/attachment.obj>

From mathias.demare at gmail.com  Fri Apr  6 10:52:41 2007
From: mathias.demare at gmail.com (=?ISO-8859-1?Q?Mathias_De_Mar=E9?=)
Date: Fri, 6 Apr 2007 10:52:41 +0200
Subject: Problem with connecting on bcm4318
In-Reply-To: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
References: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
Message-ID: <375c60f40704060152q1403ec49ueb16f03814901e08@mail.gmail.com>

I have this problem too, from time to time. If I remember correctly, it's
got something to do with the power issues of the 4318 (but don't quote me on
that, I'm not entirely sure).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070406/ac42af0a/attachment.html>

From mb at bu3sch.de  Fri Apr  6 11:15:20 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Apr 2007 11:15:20 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <8e6f94720704051835s1481b028xb7b5238b810a642b@mail.gmail.com>
References: <11757457917-git-send-email-will.dyson@gmail.com>
	<200704052133.01653.mb@bu3sch.de>
	<8e6f94720704051835s1481b028xb7b5238b810a642b@mail.gmail.com>
Message-ID: <200704061115.20826.mb@bu3sch.de>

On Friday 06 April 2007 03:35, Will Dyson wrote:
> On 4/5/07, Michael Buesch <mb at bu3sch.de> wrote:
> > On Thursday 05 April 2007 06:03, Will Dyson wrote:
> > > @@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
> > >
> > >       memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
> > >       meta->skb = skb;
> > > -     meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> > >       meta->is_last_fragment = 1;
> > > +     meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> > > +     if(dma_mapping_error(meta->dmaaddr))
> >
> > Codingstyle. Space between if and (
> 
> Sigh. I did try ./scripts/Lindent, by the way. Pretty useless. It
> tries to change almost every line.

Yeah, lindent is useless when patching existing code.

> Is there a set of indent args that will actually help with this,
> without generating so much noise that I can't see what I messed up?

I'm sorry, I don't know.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Fri Apr  6 21:15:01 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 06 Apr 2007 14:15:01 -0500
Subject: Problem with connecting on bcm4318
In-Reply-To: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
References: <14b026160704060040t30bb48f0x230155689ed07fd6@mail.gmail.com>
Message-ID: <46169C35.7030303@lwfinger.net>

Rafa? Mi?ecki wrote:
> Hello everyone :-)
> 
> I would like to report a problem with connecting to network using
> bcm43xx module. It is quite hard to connect because I usualy receive
> an error from KNetworkManager: "Could not connect to the network
> zajec_linksys".
> 
> I have to try again, and again... After a few times it connects and
> then it works perfect. Speed is OK, and connection is stable - I can
> be connected for hours.
> 
> I wonder if there is something you could do to improve connecting? I made a
> tail -f /var/log/messages > zajec.bcm43xx.log
> when trying to connect.
> 
> Software/hardware I use:
> 
> lspci -v:
> 06:05.0 Network controller: Broadcom Corporation BCM4318 [AirForce One
> 54g] 802.11g Wireless LAN Controller (rev 02)
>         Subsystem: AMBIT Microsystem Corp. Aspire 3022WLMi, 5024WLMi
>         Flags: bus master, fast devsel, latency 64, IRQ 21
>         Memory at c0204000 (32-bit, non-prefetchable) [size=8K]
> 
> uname -r:
> 2.6.21-rc5-14-default

I also use openSUSE 10.2 and tried to load the kernel that you are using, but I got an RPM conflict 
with a couple of apparmor components. I chose not to try to fix those.

There are a couple of patches that did not make it into 2.6.21-rc5 (and will not be in 2.6.21) that 
help the 4318. You can find them at ftp://lwfinger.dynalias.org/patches/combined_2.6.21-rc5.patch. 
Using them will require rebuilding your kernel from either the openSUSE or kernel.org kernels. Of 
course, kernels from kernel.org do not have the openSUSE patches; however, they work just fine. You 
won't be using apparmor and will get some messages about missing IOCTL's, but otherwise they are OK.

You can ignore the kernel messages about illegal lo pairs. They indicate a non-fatal problem with 
the driver, but it still works for me on my 4318. Mine is a PCMCIA card with the same revision as 
yours. It associates and authenticates every time on the first try using NM.

When you are inquiring about a problem with connecting, the output of iwconfig is also useful.

Larry


From Larry.Finger at lwfinger.net  Sat Apr  7 02:01:30 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 06 Apr 2007 19:01:30 -0500
Subject: Kernel NULL pointer when loading bcm43xx-mac80211 with fwpostfix
	= ".fw4"
Message-ID: <4616DF5A.7040800@lwfinger.net>

The current mb and wireless-dev git trees both get a kernel NULL pointer in "param_set_copystring" 
when modprobe'ing bcm43xx-mac80211 with a line of 'options bcm43xx-mac80211 fwpostfix = ".fw4"' in 
/etc/modprobe.conf.local. This construction used to work and still does for bcm43xx-softmac. I 
compared the code between the two versions and cannot see any real differences. Any suggestions?

Larry


From humtum at tpg.com.au  Sat Apr  7 14:39:41 2007
From: humtum at tpg.com.au (Brian Graham)
Date: Sat, 07 Apr 2007 22:39:41 +1000
Subject: New wireless card - Asus WL-100GE
Message-ID: <4617910D.3060800@tpg.com.au>

The card is an Asus WL-100GE
lspci output
06:00.0 0280: 14e4:4318 (rev 02)
    Subsystem: 1043:100f
    Flags: bus master, fast devsel, latency 64, IRQ 16
    Memory at 34000000 (32-bit, non-prefetchable) [size=8K]

There seems to be some sort or radio initialization problem, it can't 
connect to the access point unless the connection is reset.  The 
connection seems to work fine after that.  This was done is the 
following dmesg log

[    0.000000] Linux version 2.6.21-rc5-custom2 (root at brian-laptop) (gcc 
version 4.1.2 (Ubuntu 4.1.2-0ubuntu4)) #1 SMP Thu Apr 5 16:01:36 EST 2007

<snip>

[   19.668000] pccard: CardBus card inserted into slot 0
[   19.668000] PM: Adding info for pci:0000:06:00.0
[   19.760000] cs: IO port probe 0x100-0x3af: clean.
[   19.764000] cs: IO port probe 0x3e0-0x4ff: clean.
[   19.764000] cs: IO port probe 0x820-0x8ff: excluding 0x878-0x87f
[   19.764000] cs: IO port probe 0xc00-0xcf7: excluding 0xc00-0xc07 
0xc10-0xc17 0xc50-0xc57 0xc68-0xc6f 0xcd0-0xcdf
[   19.764000] cs: IO port probe 0xa00-0xaff: clean.
[   19.828000] ieee80211_crypt: registered algorithm 'NULL'
[   19.856000] ieee80211: 802.11 data/management/control stack, git-1.1.13
[   19.856000] ieee80211: Copyright (C) 2004-2005 Intel Corporation 
<jketreno at linux.intel.com>
[   19.960000] bcm43xx driver
[   19.960000] PCI: Enabling device 0000:06:00.0 (0000 -> 0002)
[   19.960000] ACPI: PCI Interrupt 0000:06:00.0[A] -> GSI 17 (level, 
low) -> IRQ 16
[   19.960000] PCI: Setting latency timer of device 0000:06:00.0 to 64
[   19.968000] bcm43xx: Chip ID 0x4318, rev 0x2
[   19.968000] bcm43xx: Number of cores: 4
[   19.968000] bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
[   19.968000] bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
[   19.968000] bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
[   19.968000] bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
[   19.972000] bcm43xx: PHY connected
[   19.972000] bcm43xx: Detected PHY: Analog: 3, Type 2, Revision 7
[   19.972000] bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 
2050 Rev: 8)
[   19.972000] bcm43xx: Radio turned off
[   19.972000] bcm43xx: Radio turned off
[   19.972000] PM: Adding info for No Bus:eth1
[   19.988000] bcm43xx: PHY connected
[   19.988000] PM: Adding info for No Bus:0000:06:00.0
[   20.032000] PM: Removing info for No Bus:0000:06:00.0
[   20.032000] PM: Adding info for No Bus:0000:06:00.0
[   20.036000] PM: Removing info for No Bus:0000:06:00.0
[   20.036000] PM: Adding info for No Bus:0000:06:00.0
[   20.052000] PM: Removing info for No Bus:0000:06:00.0
[   20.052000] PM: Adding info for No Bus:0000:06:00.0
[   20.056000] PM: Removing info for No Bus:0000:06:00.0
[   20.116000] bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
[   20.124000] bcm43xx: Radio turned on
[   20.124000] bcm43xx: Radio enabled by hardware
[   20.140000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   20.292000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   20.296000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   20.296000] bcm43xx: Chip initialized
[   20.296000] bcm43xx: 32-bit DMA initialized
[   20.296000] bcm43xx: Keys cleared
[   20.296000] bcm43xx: Selected 802.11 core (phytype 2)
[   20.296000] PM: Adding info for No Bus:hw_random
[   20.304000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   20.528000] fuse init (API version 7.8)
[   20.528000] PM: Adding info for No Bus:fuse
[   20.620000] lp: driver loaded but no devices found
[   20.652000] Adding 1317288k swap on 
/dev/disk/by-uuid/a7087cad-5a7a-4892-85be-b9f7d9d44232.  Priority:-1 
extents:1 across:1317288k
[   20.828000] EXT3 FS on hda1, internal journal
[   25.108000] PM: Adding info for No Bus:vcs4
[   25.108000] PM: Adding info for No Bus:vcsa4
[   25.108000] PM: Adding info for No Bus:vcs5
[   25.108000] PM: Adding info for No Bus:vcsa5
[   25.112000] PM: Adding info for No Bus:vcs2
[   25.112000] PM: Adding info for No Bus:vcsa2
[   25.112000] PM: Adding info for No Bus:vcs3
[   25.112000] PM: Adding info for No Bus:vcsa3
[   25.124000] PM: Adding info for No Bus:vcs6
[   25.124000] PM: Adding info for No Bus:vcsa6
[   25.344000] toshiba_acpi: Unknown parameter `hotkeys_over_acpi'
[   25.360000] ibm_acpi: ec object not found
[   25.460000] ACPI: Battery Slot [BAT1] (battery present)
[   25.488000] ACPI: Video Device [VGA] (multi-head: yes  rom: no  post: no)
[   25.504000] ACPI: AC Adapter [ACAD] (on-line)
[   25.580000] No dock devices found.
[   25.636000] input: Power Button (FF) as /class/input/input4
[   25.652000] ACPI: Power Button (FF) [PWRF]
[   25.692000] input: Power Button (CM) as /class/input/input5
[   25.704000] ACPI: Power Button (CM) [PWRB]
[   25.748000] input: Sleep Button (CM) as /class/input/input6
[   25.760000] ACPI: Sleep Button (CM) [SLPB]
[   25.800000] input: Lid Switch as /class/input/input7
[   25.816000] ACPI: Lid Switch [LID]
[   26.304000] powernow-k8: Found 1 Mobile AMD Sempron(tm) Processor 
3000+ processors (version 2.00.00)
[   26.304000] powernow-k8:    0 : fid 0xa (1800 MHz), vid 0xa
[   26.304000] powernow-k8:    1 : fid 0x8 (1600 MHz), vid 0xc
[   26.304000] powernow-k8:    2 : fid 0x0 (800 MHz), vid 0x13
[   28.480000] tsdev (compaq touchscreen emulation) is scheduled for 
removal.
[   28.480000] See Documentation/feature-removal-schedule.txt for details.
[   28.640000] tsdev (compaq touchscreen emulation) is scheduled for 
removal.
[   28.640000] See Documentation/feature-removal-schedule.txt for details.
[   30.404000] Capability LSM initialized
[   30.556000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   30.724000] SoftMAC: Open Authentication completed with 00:40:05:5a:8f:9f
[   31.444000] PM: Adding info for No Bus:vcs7
[   31.444000] PM: Adding info for No Bus:vcsa7
[   31.668000] PM: Removing info for No Bus:vcs7
[   31.668000] PM: Removing info for No Bus:vcsa7
[   31.744000] PM: Adding info for No Bus:vcs7
[   31.744000] PM: Adding info for No Bus:vcsa7
[   33.024000] ppdev: user-space parallel port driver
[   37.500000] NET: Registered protocol family 10
[   37.504000] lo: Disabled Privacy Extensions
[   37.504000] ADDRCONF(NETDEV_UP): eth0: link is not ready
[   38.924000] apm: BIOS not found.
[   39.204000] Bluetooth: Core ver 2.11
[   39.204000] PM: Adding info for platform:bluetooth
[   39.204000] NET: Registered protocol family 31
[   39.204000] Bluetooth: HCI device and connection manager initialized
[   39.204000] Bluetooth: HCI socket layer initialized
[   39.272000] Bluetooth: L2CAP ver 2.8
[   39.272000] Bluetooth: L2CAP socket layer initialized
[   39.416000] Bluetooth: RFCOMM socket layer initialized
[   39.416000] Bluetooth: RFCOMM TTY layer initialized
[   39.416000] Bluetooth: RFCOMM ver 1.8
[   43.200000] Clocksource tsc unstable (delta = -80060859 ns)
[   47.664000] eth1: no IPv6 routers present
[   59.212000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   59.212000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   59.212000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   59.212000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   70.348000] ADDRCONF(NETDEV_CHANGE): eth1: link becomes ready
[   70.364000] PM: Removing info for No Bus:hw_random
[   70.364000] bcm43xx: Radio turned off
[   70.364000] bcm43xx: DMA-32 0x0200 (RX) max used slots: 1/64
[   70.364000] bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
[   70.364000] bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
[   70.364000] bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
[   70.364000] bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
[   70.364000] bcm43xx: DMA-32 0x0220 (TX) max used slots: 2/512
[   70.364000] bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
[   70.368000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   72.036000] PM: Adding info for No Bus:0000:06:00.0
[   72.040000] PM: Removing info for No Bus:0000:06:00.0
[   72.044000] PM: Adding info for No Bus:0000:06:00.0
[   72.052000] PM: Removing info for No Bus:0000:06:00.0
[   72.052000] PM: Adding info for No Bus:0000:06:00.0
[   72.064000] PM: Removing info for No Bus:0000:06:00.0
[   72.064000] PM: Adding info for No Bus:0000:06:00.0
[   72.068000] PM: Removing info for No Bus:0000:06:00.0
[   72.128000] bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
[   72.136000] bcm43xx: Radio turned on
[   72.136000] bcm43xx: Radio enabled by hardware
[   72.152000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   72.316000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   72.320000] bcm43xx: Chip initialized
[   72.320000] bcm43xx: 32-bit DMA initialized
[   72.320000] bcm43xx: Keys cleared
[   72.320000] bcm43xx: Selected 802.11 core (phytype 2)
[   72.320000] PM: Adding info for No Bus:hw_random
[   72.328000] bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: 
drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1477:bcm43xx_find_lopair()
[   72.340000] ADDRCONF(NETDEV_UP): eth1: link is not ready
[   72.480000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   72.480000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   72.480000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   72.480000] bcm43xx: set security called, .level = 0, .enabled = 0, 
.encrypt = 0
[   72.488000] SoftMAC: Open Authentication completed with 00:40:05:5a:8f:9f
[   72.496000] ADDRCONF(NETDEV_CHANGE): eth1: link becomes ready

Good luck

Brian



From mb at bu3sch.de  Sat Apr  7 15:51:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Apr 2007 15:51:37 +0200
Subject: Kernel NULL pointer when loading bcm43xx-mac80211 with fwpostfix
	= ".fw4"
In-Reply-To: <4616DF5A.7040800@lwfinger.net>
References: <4616DF5A.7040800@lwfinger.net>
Message-ID: <200704071551.37888.mb@bu3sch.de>

On Saturday 07 April 2007 02:01, Larry Finger wrote:
> The current mb and wireless-dev git trees both get a kernel NULL pointer in "param_set_copystring" 
> when modprobe'ing bcm43xx-mac80211 with a line of 'options bcm43xx-mac80211 fwpostfix = ".fw4"' in 
> /etc/modprobe.conf.local. This construction used to work and still does for bcm43xx-softmac. I 
> compared the code between the two versions and cannot see any real differences. Any suggestions?

Uhm, fwpostfix=.fw4 works fine for me when I pass it to modprobe.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Sat Apr  7 17:10:55 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sat, 07 Apr 2007 17:10:55 +0200
Subject: Kernel NULL pointer when loading bcm43xx-mac80211 with
	fwpostfix  = ".fw4"
In-Reply-To: <200704071551.37888.mb@bu3sch.de>
References: <4616DF5A.7040800@lwfinger.net> <200704071551.37888.mb@bu3sch.de>
Message-ID: <1175958655.8459.8.camel@johannes.berg>

On Sat, 2007-04-07 at 15:51 +0200, Michael Buesch wrote:
> On Saturday 07 April 2007 02:01, Larry Finger wrote:
> > The current mb and wireless-dev git trees both get a kernel NULL pointer in "param_set_copystring" 
> > when modprobe'ing bcm43xx-mac80211 with a line of 'options bcm43xx-mac80211 fwpostfix = ".fw4"' in 
> > /etc/modprobe.conf.local. This construction used to work and still does for bcm43xx-softmac. I 
> > compared the code between the two versions and cannot see any real differences. Any suggestions?
> 
> Uhm, fwpostfix=.fw4 works fine for me when I pass it to modprobe.

I use
$ cat /etc/modprobe.d/bcm43xx 
options bcm43xx-mac80211 fwpostfix=-v4
options bcm43xx_mac80211 fwpostfix=-v4
options bcm43xx fwpostfix=-v3

and it works great.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070407/cee4994b/attachment.pgp>

From mb at bu3sch.de  Sat Apr  7 17:20:39 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Apr 2007 17:20:39 +0200
Subject: Please pull from http://bu3sch.de/git/wireless-dev.git/ for-linville
Message-ID: <200704071720.39487.mb@bu3sch.de>

The following changes since commit 32bfb29ad13f7451c3a09f092430b30133fc6739:
  Johannes Berg:
        fix debugfs compile w/o debug counters

are found in the git repository at:

  http://bu3sch.de/git/wireless-dev.git/ for-linville

Mostly bugfixes.

Michael Buesch:
      bcm43xx-mac80211: Fix 2050 radio init value restore for lb gain devices.
      bcm43xx-mac80211: vstack: Fix slight bug and add debugging
      bcm43xx-mac80211: Add more VStack debugging.
      bcm43xx-mac80211: Remove old unsupported devs from the PCI list.
      bcm43xx-mac80211: Update my email address.
      bcm43xx-mac80211: LO setup: Registers are ORed, not overwritten.
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      bcm43xx-mac80211: Fix extlna flag for 2050 init
      ssb: Do pci core init on attach stage.
      ssb: use container_of for the dev-wrapper.
      ssb: kfree devwrap (not dev) in dev register error path.
      bcm43xx-mac80211: Fix hwencryption breakage for latest firmware.
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      bcm43xx-mac80211: Replace vstack in LO setup by a data structure.
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      bcm43xx-mac80211: Remove the "vstack" and its remaining uses.

 drivers/net/wireless/mac80211/bcm43xx/Makefile     |   16 +-
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h    |   33 ++-
 .../wireless/mac80211/bcm43xx/bcm43xx_debugfs.c    |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_leds.c   |    2 
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c |  177 ++++++++++--------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_main.c   |   86 +++++-----
 .../net/wireless/mac80211/bcm43xx/bcm43xx_main.h   |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_pcmcia.c |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_phy.c    |  119 ++++++++------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_pio.c    |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_power.c  |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_power.h  |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_sysfs.c  |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_tables.c |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_vstack.c |  202 -----------------------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_vstack.h |   83 ---------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c   |   12 -
 .../net/wireless/mac80211/bcm43xx/bcm43xx_xmit.h   |   35 ++++
 drivers/ssb/main.c                                 |   14 +
 include/linux/ssb/ssb.h                            |    4 
 21 files changed, 307 insertions(+), 494 deletions(-)
 delete mode 100644 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_vstack.c
 delete mode 100644 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_vstack.h

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sat Apr  7 19:44:02 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 07 Apr 2007 12:44:02 -0500
Subject: Kernel NULL pointer when loading bcm43xx-mac80211 with	fwpostfix
	= ".fw4"
In-Reply-To: <1175958655.8459.8.camel@johannes.berg>
References: <4616DF5A.7040800@lwfinger.net> <200704071551.37888.mb@bu3sch.de>
	<1175958655.8459.8.camel@johannes.berg>
Message-ID: <4617D862.7010202@lwfinger.net>

Johannes Berg wrote:
> On Sat, 2007-04-07 at 15:51 +0200, Michael Buesch wrote:
>> On Saturday 07 April 2007 02:01, Larry Finger wrote:
>>> The current mb and wireless-dev git trees both get a kernel NULL pointer in "param_set_copystring" 
>>> when modprobe'ing bcm43xx-mac80211 with a line of 'options bcm43xx-mac80211 fwpostfix = ".fw4"' in 
>>> /etc/modprobe.conf.local. This construction used to work and still does for bcm43xx-softmac. I 
>>> compared the code between the two versions and cannot see any real differences. Any suggestions?
>> Uhm, fwpostfix=.fw4 works fine for me when I pass it to modprobe.
> 
> I use
> $ cat /etc/modprobe.d/bcm43xx 
> options bcm43xx-mac80211 fwpostfix=-v4
> options bcm43xx_mac80211 fwpostfix=-v4
> options bcm43xx fwpostfix=-v3
> 
> and it works great.

My bad. As shown above, I had white space around the equals - a no-no. Removing it fixed the 
problem. The examples both of you showed gave me the clue.

Thanks,

Larry


From mb at bu3sch.de  Sat Apr  7 19:45:30 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Apr 2007 19:45:30 +0200
Subject: Kernel NULL pointer when loading bcm43xx-mac80211
	=?iso-8859-1?q?with=09fwpostfix_=3D?= ".fw4"
In-Reply-To: <4617D862.7010202@lwfinger.net>
References: <4616DF5A.7040800@lwfinger.net>
	<1175958655.8459.8.camel@johannes.berg>
	<4617D862.7010202@lwfinger.net>
Message-ID: <200704071945.30680.mb@bu3sch.de>

On Saturday 07 April 2007 19:44, Larry Finger wrote:
> Johannes Berg wrote:
> > On Sat, 2007-04-07 at 15:51 +0200, Michael Buesch wrote:
> >> On Saturday 07 April 2007 02:01, Larry Finger wrote:
> >>> The current mb and wireless-dev git trees both get a kernel NULL pointer in "param_set_copystring" 
> >>> when modprobe'ing bcm43xx-mac80211 with a line of 'options bcm43xx-mac80211 fwpostfix = ".fw4"' in 
> >>> /etc/modprobe.conf.local. This construction used to work and still does for bcm43xx-softmac. I 
> >>> compared the code between the two versions and cannot see any real differences. Any suggestions?
> >> Uhm, fwpostfix=.fw4 works fine for me when I pass it to modprobe.
> > 
> > I use
> > $ cat /etc/modprobe.d/bcm43xx 
> > options bcm43xx-mac80211 fwpostfix=-v4
> > options bcm43xx_mac80211 fwpostfix=-v4
> > options bcm43xx fwpostfix=-v3
> > 
> > and it works great.
> 
> My bad. As shown above, I had white space around the equals - a no-no. Removing it fixed the 
> problem. The examples both of you showed gave me the clue.

Hm, probably a bug in the modparam subsystem, though.
I'd say it shouldn't crash, at least.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sat Apr  7 20:00:05 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 07 Apr 2007 13:00:05 -0500
Subject: [PATCH] bcm43xx-mac80211: Fix error in initiallizing max RSSI and max
	signal
Message-ID: <4617dc25.vXqEEvwca/gaq2Cw%Larry.Finger@lwfinger.net>

In bcm43xx-mac80211, the max_rssi and max_signal values sent to mac80211 are reversed.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This is wireless-dev material.

Michael,

It can also be applied to the mb tree.

Larry

 bcm43xx_main.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3760,8 +3760,8 @@ static int bcm43xx_wireless_init(struct 
 		    IEEE80211_HW_MONITOR_DURING_OPER |
 		    IEEE80211_HW_DEVICE_HIDES_WEP |
 		    IEEE80211_HW_WEP_INCLUDE_IV;
-	hw->max_rssi = -110;
-	hw->max_signal = BCM43xx_RX_MAX_SSI;
+	hw->max_signal = -110;
+	hw->max_rssi = BCM43xx_RX_MAX_SSI;
 	hw->max_noise = -110;
 	hw->queues = 1;
 	SET_IEEE80211_DEV(hw, dev->dev);


From mb at bu3sch.de  Sat Apr  7 20:47:23 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Apr 2007 20:47:23 +0200
Subject: [PATCH] bcm43xx-mac80211: Fix error in initiallizing max RSSI and
	max signal
In-Reply-To: <4617dc25.vXqEEvwca/gaq2Cw%Larry.Finger@lwfinger.net>
References: <4617dc25.vXqEEvwca/gaq2Cw%Larry.Finger@lwfinger.net>
Message-ID: <200704072047.24192.mb@bu3sch.de>

On Saturday 07 April 2007 20:00, Larry Finger wrote:
> In bcm43xx-mac80211, the max_rssi and max_signal values sent to mac80211 are reversed.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> John,
> 
> This is wireless-dev material.

I applied it to my tree, thanks.

> Michael,
> 
> It can also be applied to the mb tree.
> 
> Larry
> 
>  bcm43xx_main.c |    4 ++--
>  1 file changed, 2 insertions(+), 2 deletions(-)
> 
> Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> ===================================================================
> --- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> +++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> @@ -3760,8 +3760,8 @@ static int bcm43xx_wireless_init(struct 
>  		    IEEE80211_HW_MONITOR_DURING_OPER |
>  		    IEEE80211_HW_DEVICE_HIDES_WEP |
>  		    IEEE80211_HW_WEP_INCLUDE_IV;
> -	hw->max_rssi = -110;
> -	hw->max_signal = BCM43xx_RX_MAX_SSI;
> +	hw->max_signal = -110;
> +	hw->max_rssi = BCM43xx_RX_MAX_SSI;
>  	hw->max_noise = -110;
>  	hw->queues = 1;
>  	SET_IEEE80211_DEV(hw, dev->dev);
> -
> To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
> the body of a message to majordomo at vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> 
> 

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sat Apr  7 20:54:35 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 07 Apr 2007 13:54:35 -0500
Subject: [PATCH] bcm43xx: Fix 802.11b/g scan limits to match regulatory
	requirements
Message-ID: <4617e8eb.8Y1vYMQ0EdBtHlLP%Larry.Finger@lwfinger.net>

In 802.11b/g mode, bcm43xx actively scans channels 1-14 no matter what locale has been set,
either in the sprom or by the locale option. This behaviorviolates regulatory rules
everywhere in the world except Japan. This patch changes the default range to the correct
value if the locale has been set, and to channels 1-13 if no locale has been set.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This should be applied to wireless-2.6.

Larry

 bcm43xx_main.c |   20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -946,6 +946,7 @@ static int bcm43xx_geo_init(struct bcm43
 	u8 channel;
 	struct bcm43xx_phyinfo *phy;
 	const char *iso_country;
+	u8 max_bg_channel;
 
 	geo = kzalloc(sizeof(*geo), GFP_KERNEL);
 	if (!geo)
@@ -967,6 +968,23 @@ static int bcm43xx_geo_init(struct bcm43
 	}
 	iso_country = bcm43xx_locale_iso(bcm->sprom.locale);
 
+/* set the maximum channel based on locale set in sprom or witle locale option */
+	switch (bcm->sprom.locale) {
+	case BCM43xx_LOCALE_THAILAND:
+	case BCM43xx_LOCALE_ISRAEL:
+	case BCM43xx_LOCALE_JORDAN:
+	case BCM43xx_LOCALE_USA_CANADA_ANZ:
+	case BCM43xx_LOCALE_USA_LOW:
+		max_bg_channel = 11;
+		break;
+	case BCM43xx_LOCALE_JAPAN:
+	case BCM43xx_LOCALE_JAPAN_HIGH:
+		max_bg_channel = 14;
+		break;
+	default:
+		max_bg_channel = 13;
+	}
+
  	if (have_a) {
 		for (i = 0, channel = IEEE80211_52GHZ_MIN_CHANNEL;
 		      channel <= IEEE80211_52GHZ_MAX_CHANNEL; channel++) {
@@ -978,7 +996,7 @@ static int bcm43xx_geo_init(struct bcm43
 	}
 	if (have_bg) {
 		for (i = 0, channel = IEEE80211_24GHZ_MIN_CHANNEL;
-		      channel <= IEEE80211_24GHZ_MAX_CHANNEL; channel++) {
+		      channel <= max_bg_channel; channel++) {
 			chan = &geo->bg[i++];
 			chan->freq = bcm43xx_channel_to_freq_bg(channel);
 			chan->channel = channel;


From Larry.Finger at lwfinger.net  Sat Apr  7 21:11:03 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 07 Apr 2007 14:11:03 -0500
Subject: [PATCH] bcm43xx: Fix PPC machine checks and update to match
	loopback gain specifications
Message-ID: <4617ecc7.9X3JbqlkkIIRu2i3%Larry.Finger@lwfinger.net>

The specifications for loopback_gain calculation and for G PHY initialization
have been updated. This patch implements them and fixes a machine check error
that occurs for PPC architecture with a phy->rev of 1.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This should be applied to wireless-2.6. Because of the machine check on PPC
that it fixes, I think it should also be sent to 'upstream-fixes'.

Larry

 bcm43xx_phy.c |   57 ++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 32 insertions(+), 25 deletions(-)

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -983,7 +983,7 @@ static void bcm43xx_calc_loopback_gain(s
 {
 	struct bcm43xx_phyinfo *phy = bcm43xx_current_phy(bcm);
 	struct bcm43xx_radioinfo *radio = bcm43xx_current_radio(bcm);
-	u16 backup_phy[15];
+	u16 backup_phy[15] = {0};
 	u16 backup_radio[3];
 	u16 backup_bband;
 	u16 i;
@@ -994,8 +994,10 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[1] = bcm43xx_phy_read(bcm, 0x0001);
 	backup_phy[2] = bcm43xx_phy_read(bcm, 0x0811);
 	backup_phy[3] = bcm43xx_phy_read(bcm, 0x0812);
-	backup_phy[4] = bcm43xx_phy_read(bcm, 0x0814);
-	backup_phy[5] = bcm43xx_phy_read(bcm, 0x0815);
+	if (phy->rev != 1) {
+		backup_phy[4] = bcm43xx_phy_read(bcm, 0x0814);
+		backup_phy[5] = bcm43xx_phy_read(bcm, 0x0815);
+	}
 	backup_phy[6] = bcm43xx_phy_read(bcm, 0x005A);
 	backup_phy[7] = bcm43xx_phy_read(bcm, 0x0059);
 	backup_phy[8] = bcm43xx_phy_read(bcm, 0x0058);
@@ -1023,14 +1025,16 @@ static void bcm43xx_calc_loopback_gain(s
 			  bcm43xx_phy_read(bcm, 0x0811) | 0x0001);
 	bcm43xx_phy_write(bcm, 0x0812,
 			  bcm43xx_phy_read(bcm, 0x0812) & 0xFFFE);
-	bcm43xx_phy_write(bcm, 0x0814,
-			  bcm43xx_phy_read(bcm, 0x0814) | 0x0001);
-	bcm43xx_phy_write(bcm, 0x0815,
-			  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFE);
-	bcm43xx_phy_write(bcm, 0x0814,
-			  bcm43xx_phy_read(bcm, 0x0814) | 0x0002);
-	bcm43xx_phy_write(bcm, 0x0815,
-			  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFD);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(bcm, 0x0814,
+				  bcm43xx_phy_read(bcm, 0x0814) | 0x0001);
+		bcm43xx_phy_write(bcm, 0x0815,
+				  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFE);
+		bcm43xx_phy_write(bcm, 0x0814,
+				  bcm43xx_phy_read(bcm, 0x0814) | 0x0002);
+		bcm43xx_phy_write(bcm, 0x0815,
+				  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFD);
+	}
 	bcm43xx_phy_write(bcm, 0x0811,
 			  bcm43xx_phy_read(bcm, 0x0811) | 0x000C);
 	bcm43xx_phy_write(bcm, 0x0812,
@@ -1053,10 +1057,12 @@ static void bcm43xx_calc_loopback_gain(s
 				  bcm43xx_phy_read(bcm, 0x000A)
 				  | 0x2000);
 	}
-	bcm43xx_phy_write(bcm, 0x0814,
-			  bcm43xx_phy_read(bcm, 0x0814) | 0x0004);
-	bcm43xx_phy_write(bcm, 0x0815,
-			  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFB);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(bcm, 0x0814,
+				  bcm43xx_phy_read(bcm, 0x0814) | 0x0004);
+		bcm43xx_phy_write(bcm, 0x0815,
+				  bcm43xx_phy_read(bcm, 0x0815) & 0xFFFB);
+	}
 	bcm43xx_phy_write(bcm, 0x0003,
 			  (bcm43xx_phy_read(bcm, 0x0003)
 			   & 0xFF9F) | 0x0040);
@@ -1143,8 +1149,10 @@ static void bcm43xx_calc_loopback_gain(s
 		}
 	}
 
-	bcm43xx_phy_write(bcm, 0x0814, backup_phy[4]);
-	bcm43xx_phy_write(bcm, 0x0815, backup_phy[5]);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(bcm, 0x0814, backup_phy[4]);
+		bcm43xx_phy_write(bcm, 0x0815, backup_phy[5]);
+	}
 	bcm43xx_phy_write(bcm, 0x005A, backup_phy[6]);
 	bcm43xx_phy_write(bcm, 0x0059, backup_phy[7]);
 	bcm43xx_phy_write(bcm, 0x0058, backup_phy[8]);
@@ -1193,24 +1201,23 @@ static void bcm43xx_phy_initg(struct bcm
 		bcm43xx_phy_write(bcm, 0x0811, 0x0000);
 		bcm43xx_phy_write(bcm, 0x0015, 0x00C0);
 	}
-	if (phy->rev >= 3) {
+	if (phy->rev > 5) {
 		bcm43xx_phy_write(bcm, 0x0811, 0x0400);
 		bcm43xx_phy_write(bcm, 0x0015, 0x00C0);
 	}
 	if (phy->rev >= 2 && phy->connected) {
 		tmp = bcm43xx_phy_read(bcm, 0x0400) & 0xFF;
-		if (tmp < 6) {
+		if (tmp ==3 || tmp == 5) {
 			bcm43xx_phy_write(bcm, 0x04C2, 0x1816);
 			bcm43xx_phy_write(bcm, 0x04C3, 0x8006);
-			if (tmp != 3) {
+			if (tmp == 5) {
 				bcm43xx_phy_write(bcm, 0x04CC,
 						  (bcm43xx_phy_read(bcm, 0x04CC)
 						   & 0x00FF) | 0x1F00);
 			}
 		}
-	}
-	if (phy->rev < 3 && phy->connected)
 		bcm43xx_phy_write(bcm, 0x047E, 0x0078);
+	}
 	if (radio->revision == 8) {
 		bcm43xx_phy_write(bcm, 0x0801, bcm43xx_phy_read(bcm, 0x0801) | 0x0080);
 		bcm43xx_phy_write(bcm, 0x043E, bcm43xx_phy_read(bcm, 0x043E) | 0x0004);
@@ -1237,7 +1244,7 @@ static void bcm43xx_phy_initg(struct bcm
 		if (phy->rev >= 6) {
 			bcm43xx_phy_write(bcm, 0x0036,
 					  (bcm43xx_phy_read(bcm, 0x0036)
-					   & 0xF000) | (radio->txctl2 << 12));
+					   & 0x0FFF) | (radio->txctl2 << 12));
 		}
 		if (bcm->sprom.boardflags & BCM43xx_BFL_PACTRL)
 			bcm43xx_phy_write(bcm, 0x002E, 0x8075);
@@ -1248,7 +1255,7 @@ static void bcm43xx_phy_initg(struct bcm
 		else
 			bcm43xx_phy_write(bcm, 0x002F, 0x0202);
 	}
-	if (phy->connected) {
+	if (phy->connected || phy->rev >= 2) {
 		bcm43xx_phy_lo_adjust(bcm, 0);
 		bcm43xx_phy_write(bcm, 0x080F, 0x8078);
 	}
@@ -1262,7 +1269,7 @@ static void bcm43xx_phy_initg(struct bcm
 		 */
 		bcm43xx_nrssi_hw_update(bcm, 0xFFFF);
 		bcm43xx_calc_nrssi_threshold(bcm);
-	} else if (phy->connected) {
+	} else if (phy->connected || phy->rev >= 2) {
 		if (radio->nrssi[0] == -1000) {
 			assert(radio->nrssi[1] == -1000);
 			bcm43xx_calc_nrssi_slope(bcm);


From Larry.Finger at lwfinger.net  Sun Apr  8 07:04:42 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 00:04:42 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
Message-ID: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>

In mac80211 the 'qual' and 'level' values are interchanged. The patch also
places the 'qual' value on a 0 - 100 scale and calculated using the formula
contained in iwlib.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John and Michael,

This fix is meant for the wireless-dev and mb git trees.

Larry

 ieee80211_ioctl.c |   16 +++++++++++-----
 ieee80211_sta.c   |    9 +++++++--
 2 files changed, 18 insertions(+), 7 deletions(-)

Index: wireless-mb/net/mac80211/ieee80211_sta.c
===================================================================
--- wireless-mb.orig/net/mac80211/ieee80211_sta.c
+++ wireless-mb/net/mac80211/ieee80211_sta.c
@@ -2822,8 +2822,10 @@ ieee80211_sta_scan_result(struct net_dev
 
 	memset(&iwe, 0, sizeof(iwe));
 	iwe.cmd = IWEVQUAL;
-	iwe.u.qual.qual = bss->signal;
-	iwe.u.qual.level = bss->rssi;
+	iwe.u.qual.level = bss->signal;
+	if (unlikely(local->hw.max_rssi == 0))
+		local->hw.max_rssi = 100;
+	iwe.u.qual.qual = (100 * bss->rssi) / local->hw.max_rssi;
 	iwe.u.qual.noise = bss->noise;
 	iwe.u.qual.updated = local->wstats_flags;
 	current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
Index: wireless-mb/net/mac80211/ieee80211_ioctl.c
===================================================================
--- wireless-mb.orig/net/mac80211/ieee80211_ioctl.c
+++ wireless-mb/net/mac80211/ieee80211_ioctl.c
@@ -1593,12 +1593,12 @@ static int ieee80211_ioctl_giwrange(stru
 	range->min_frag = 256;
 	range->max_frag = 2346;
 
-	range->max_qual.qual = local->hw.max_signal;
-	range->max_qual.level = local->hw.max_rssi;
+	range->max_qual.qual = 100;
+	range->max_qual.level = local->hw.max_signal;
 	range->max_qual.noise = local->hw.max_noise;
 	range->max_qual.updated = local->wstats_flags;
 
-	range->avg_qual.qual = local->hw.max_signal/2;
+	range->avg_qual.qual = 50;
 	range->avg_qual.level = 0;
 	range->avg_qual.noise = 0;
 	range->avg_qual.updated = local->wstats_flags;
@@ -3087,8 +3087,10 @@ static struct iw_statistics *ieee80211_g
 		wstats->qual.noise = 0;
 		wstats->qual.updated = IW_QUAL_ALL_INVALID;
 	} else {
-		wstats->qual.level = sta->last_rssi;
-		wstats->qual.qual = sta->last_signal;
+		if (unlikely(local->hw.max_rssi == 0))
+			local->hw.max_rssi = 100;
+		wstats->qual.qual = (100 * sta->last_rssi) / local->hw.max_rssi;
+		wstats->qual.level = sta->last_signal;
 		wstats->qual.noise = sta->last_noise;
 		wstats->qual.updated = local->wstats_flags;
 		sta_info_put(sta);


From johannes at sipsolutions.net  Sun Apr  8 10:05:49 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 08 Apr 2007 10:05:49 +0200
Subject: Kernel NULL pointer when loading bcm43xx-mac80211
	with	fwpostfix = ".fw4"
In-Reply-To: <4617D862.7010202@lwfinger.net>
References: <4616DF5A.7040800@lwfinger.net> <200704071551.37888.mb@bu3sch.de>
	<1175958655.8459.8.camel@johannes.berg>
	<4617D862.7010202@lwfinger.net>
Message-ID: <1176019549.8459.12.camel@johannes.berg>

On Sat, 2007-04-07 at 12:44 -0500, Larry Finger wrote:

> My bad. As shown above, I had white space around the equals - a no-no. Removing it fixed the 
> problem. The examples both of you showed gave me the clue.

Interesting. So you really had three parameters: "fwpostfix", "=" and
".fw4". I guess that it fell over parsing the "=" one but I'm not
inclined to try right now. Maybe I'll look later.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070408/c8d3cbd9/attachment.pgp>

From mistamaila at gmail.com  Sun Apr  8 10:42:33 2007
From: mistamaila at gmail.com (John H.)
Date: Sun, 8 Apr 2007 03:42:33 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
Message-ID: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>

uname -a
Linux laptop 2.6.20-1.2933.fc6 #1 SMP Mon Mar 19 11:38:26 EDT 2007
i686 i686 i386 GNU/Linux

0b:00.0 Network controller: Broadcom Corporation Dell Wireless 1390
WLAN Mini-PCI Card (rev 01)

I get 97k/s download from speed test using bcm-43xx, I reboot to XP
and I get over 4700kb/s.

What do I do?


From johannes at sipsolutions.net  Sun Apr  8 10:54:17 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 08 Apr 2007 10:54:17 +0200
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
Message-ID: <1176022457.8459.21.camel@johannes.berg>

On Sun, 2007-04-08 at 03:42 -0500, John H. wrote:

> What do I do?

Apply Larry's patches. I don't remember the URL and can't find it easily
right now, you'll find it with some searching on this mailing list.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070408/21622220/attachment.pgp>

From mistamaila at gmail.com  Sun Apr  8 11:05:08 2007
From: mistamaila at gmail.com (John H.)
Date: Sun, 8 Apr 2007 04:05:08 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176022457.8459.21.camel@johannes.berg>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
Message-ID: <5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>

Thanks.
http://www.mail-archive.com/bcm43xx-dev at lists.berlios.de/msg03201.html

I am assuming that one is enough for the speed difference?  Will these
patches be in next kernel releases?

On 4/8/07, Johannes Berg <johannes at sipsolutions.net> wrote:
> On Sun, 2007-04-08 at 03:42 -0500, John H. wrote:
>
> > What do I do?
>
> Apply Larry's patches. I don't remember the URL and can't find it easily
> right now, you'll find it with some searching on this mailing list.
>
> johannes
>
>


From johannes at sipsolutions.net  Sun Apr  8 11:48:44 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sun, 08 Apr 2007 11:48:44 +0200
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
Message-ID: <1176025724.8459.28.camel@johannes.berg>

On Sun, 2007-04-08 at 04:05 -0500, John H. wrote:
> Thanks.
> http://www.mail-archive.com/bcm43xx-dev at lists.berlios.de/msg03201.html

That's not the one I was thinking of, does it apply? Look for his
combined patches.

> I am assuming that one is enough for the speed difference?  

Don't really know.

> Will these
> patches be in next kernel releases?

Yeah, should already be if you use .21-rc6 or so.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070408/4ff92d45/attachment.pgp>

From geekypenguin at gmail.com  Sun Apr  8 15:19:19 2007
From: geekypenguin at gmail.com (Jory A. Pratt)
Date: Sun, 08 Apr 2007 08:19:19 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176022457.8459.21.camel@johannes.berg>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
Message-ID: <4618EBD7.1050303@gmail.com>

Johannes Berg wrote:
> On Sun, 2007-04-08 at 03:42 -0500, John H. wrote:
>
>   
>> What do I do?
>>     
>
> Apply Larry's patches. I don't remember the URL and can't find it easily
> right now, you'll find it with some searching on this mailing list.
>
> johannes
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   
ftp://lwfinger.dynalias.org/patches 

this is where you can find all the patches that you should be using at 
any given time that are not included in mainline kernel or will not be 
included into mainline before final is released for 2.6.21.

Jory


From larry.finger at lwfinger.net  Sun Apr  8 15:41:48 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 08:41:48 -0500
Subject: Kernel NULL pointer when loading bcm43xx-mac80211	with	fwpostfix
	= ".fw4"
In-Reply-To: <1176019549.8459.12.camel@johannes.berg>
References: <4616DF5A.7040800@lwfinger.net>	 <200704071551.37888.mb@bu3sch.de>
	<1175958655.8459.8.camel@johannes.berg>	
	<4617D862.7010202@lwfinger.net>
	<1176019549.8459.12.camel@johannes.berg>
Message-ID: <4618F11C.9050908@lwfinger.net>

Johannes Berg wrote:
> On Sat, 2007-04-07 at 12:44 -0500, Larry Finger wrote:
> 
>> My bad. As shown above, I had white space around the equals - a no-no. Removing it fixed the 
>> problem. The examples both of you showed gave me the clue.
> 
> Interesting. So you really had three parameters: "fwpostfix", "=" and
> ".fw4". I guess that it fell over parsing the "=" one but I'm not
> inclined to try right now. Maybe I'll look later.

I posted the oops on LKML at 7:27PM CST on Saturday and received a fix 2.5 hours later 
(http://www.ussg.iu.edu/hypermail/linux/kernel/0704.0/2750.html). With that change, it generates an 
error and refuses to load the offending module, but no oops. I'm not surprised that a solution was 
prepared; however, the timing was very surprising. Imagine how long it would have taken Micro$oft to 
produce a fix! Too bad Open Source is such a problem for the world. ;-)

Larry


From mb at bu3sch.de  Sun Apr  8 15:50:22 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Apr 2007 15:50:22 +0200
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <20070408132743.GA12836@slim.vantronix.net>
References: <200704041945.21447.mb@bu3sch.de>
	<20070408132743.GA12836@slim.vantronix.net>
Message-ID: <200704081550.22579.mb@bu3sch.de>

On Sunday 08 April 2007 15:27, Reyk Floeter wrote:
> You either totally misinterpreted my statements or you just want to
> spread the FUD that every OpenBSD developer is mind-controlled by
> Theo. I involved Theo _after_ I denied the various requests to change
> the license of my driver because the various people didn't stop to
> repeat their requests. You involved lawyers to question my code.
> 
> Instead of attacking developers of non-GPL free software, you should
> point your lawyers into another direction to think about ways to
> include GPL-compatible BSD/ISC code in the Linux kernel without the
> need for relicensing it. Talk to the Linux maintainers to change this
> stupid Dual GPL/* policy.
> 
> It is your choice, you can also rewrite the "OpenHAL" and take my code
> as a reference. The copyright does not protect the "idea" of the
> implementation or the algorithms. Feel free to read my code, interpret
> it and express it differently.

Excuse my ignorance, please, but I don't see where the real problem is.
What's the problem with taking openHAL and putting it into the yet to
be written GPLed linux atheros driver, while preserving your copyright
notices. I don't see how this could violate the BSD license.

Such stuff is going on day by day. One good example of BSD code put into
code with another license was MS with the NT TCP stack. At least of my
knowledge that was the FreeBSD stack, until they rewrote it.

So, what's the problem, really? Create a derivative work, where
the original openHAL parts are still de-facto BSD licensed, but the rest
is GPLed.

> From my point of view GPL software is non-free because I cannot simply
> reuse it in my code. It may work within the Linux world, but everybody
> else is restricted from using it. This is especially a problem when we
> depend on the Linux drivers as the only reference to write drivers for
> OpenBSD.

Well, so is the license. Put your work under the GPL and you are
free to use the code. (Or alternatively ask the copyright holder(s)
to relicense).

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sun Apr  8 16:02:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 09:02:00 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176025724.8459.28.camel@johannes.berg>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg>
Message-ID: <4618F5D8.301@lwfinger.net>

Johannes Berg wrote:
> On Sun, 2007-04-08 at 04:05 -0500, John H. wrote:
>> Thanks.
>> http://www.mail-archive.com/bcm43xx-dev at lists.berlios.de/msg03201.html
> 
> That's not the one I was thinking of, does it apply? Look for his
> combined patches.
> 
>> I am assuming that one is enough for the speed difference?  
> 
> Don't really know.
> 
>> Will these
>> patches be in next kernel releases?
> 
> Yeah, should already be if you use .21-rc6 or so.

The patch that makes the biggest change in speed is in 2.6.21-rc1 and later. There are additional 
improvements that won't be in mainline until 2.6.22-rc1. This is a consequence of the development 
model for Linux. Once a new release is available, there is a period (usually 2 weeks) where any new 
features and code enhancements are accepted. Once the -rc1 stage is reached, only bug fixes are 
accepted. Any feature enhancements such as an updating of the specifications are not considered a 
bug fix unless they fix a kernel crash. As you can imagine, there are usually code improvements that 
miss the window, thus are waiting to be included in mainline. These are always available at 
ftp://lwfinger.dynalias.org/patches in the form of a patch file named combined_2.6.xx.y.patch. The 
code base in Linville's wireless-2.6 git tree is usually up to date as well.

BTW, my 4311 gets download speeds of up to 1700 Mbs and uploads of 750 Mbs. We still have room for 
improvement as Windows gets an upload of 1900 Mbs, but at least the 4311 is faster than my broadband 
line with 7 Mbs down and 0.5 Mbs up.

Larry


From larry.finger at lwfinger.net  Sun Apr  8 16:16:04 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 09:16:04 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
Message-ID: <4618F924.1010800@lwfinger.net>

John,

One "trivial", counter-intuitive suggestion until you get an updated kernel is to set your rate to 1 
Mbs using iwconfig. For some reason, that cuts the error rate in transmissions, and both your 
download and upload speeds will improve.

Larry



From mistamaila at gmail.com  Sun Apr  8 18:17:28 2007
From: mistamaila at gmail.com (John H.)
Date: Sun, 8 Apr 2007 11:17:28 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <4618F5D8.301@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
Message-ID: <5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>

Thanks.

I was looking for some binary solution for now, as my fedora kernel is
Linux laptop 2.6.20-1.2933.fc6 #1 SMP Mon Mar 19 11:38:26 EDT 2007
i686 i686 i386 GNU/Linux

And I have stopped compiling own kernels due to lack of time.

However, it seems that is not possible.
Thanks though.


On 4/8/07, Larry Finger <larry.finger at lwfinger.net> wrote:
> Johannes Berg wrote:
> > On Sun, 2007-04-08 at 04:05 -0500, John H. wrote:
> >> Thanks.
> >> http://www.mail-archive.com/bcm43xx-dev at lists.berlios.de/msg03201.html
> >
> > That's not the one I was thinking of, does it apply? Look for his
> > combined patches.
> >
> >> I am assuming that one is enough for the speed difference?
> >
> > Don't really know.
> >
> >> Will these
> >> patches be in next kernel releases?
> >
> > Yeah, should already be if you use .21-rc6 or so.
>
> The patch that makes the biggest change in speed is in 2.6.21-rc1 and later. There are additional
> improvements that won't be in mainline until 2.6.22-rc1. This is a consequence of the development
> model for Linux. Once a new release is available, there is a period (usually 2 weeks) where any new
> features and code enhancements are accepted. Once the -rc1 stage is reached, only bug fixes are
> accepted. Any feature enhancements such as an updating of the specifications are not considered a
> bug fix unless they fix a kernel crash. As you can imagine, there are usually code improvements that
> miss the window, thus are waiting to be included in mainline. These are always available at
> ftp://lwfinger.dynalias.org/patches in the form of a patch file named combined_2.6.xx.y.patch. The
> code base in Linville's wireless-2.6 git tree is usually up to date as well.
>
> BTW, my 4311 gets download speeds of up to 1700 Mbs and uploads of 750 Mbs. We still have room for
> improvement as Windows gets an upload of 1900 Mbs, but at least the 4311 is faster than my broadband
> line with 7 Mbs down and 0.5 Mbs up.
>
> Larry
>


From proski at gnu.org  Sun Apr  8 19:06:27 2007
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 08 Apr 2007 13:06:27 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <20070408132743.GA12836@slim.vantronix.net>
References: <200704041945.21447.mb@bu3sch.de>
	<20070408132743.GA12836@slim.vantronix.net>
Message-ID: <20070408130627.ov4v0g08csgggwws@webmail.spamcop.net>

Hello, Reyk!

Quoting Reyk Floeter <reyk at openbsd.org>:

> I'm sure that somebody forwarded the mails from our private
> discussions to you where I clearly denied the requests to change the
> license of my driver. I do not believe in dual licensing, and it would
> make my driver less free. It does not add a benefit for us but it does
> introduce additional problems. I don't want to take care of GPL
> licensing issues, and I do not want to distinguish between BSD/ISC
> code on the one hand and GPL code on the other hand.
[skip]
> But you make an idiot out of me
>
> You either totally misinterpreted my statements or you just want to
> spread the FUD that every OpenBSD developer is mind-controlled by
> Theo. I involved Theo _after_ I denied the various requests to change
> the license of my driver because the various people didn't stop to
> repeat their requests. You involved lawyers to question my code.

OK, I appreciate your explanation.  Indeed, I knew only a part of the story, and
what I knew is very different from what you are writing now.

I did avoid your name and the words like "mind-controlled" in the original post.
 I'm sorry that your name was mentioned in the discussion and that you are
feeling uneasy about my comments.

If you re-read my post, you'll see that I was actually sympathizing with you.

I would really like to stop this thread, because it's watched by too many
people, and any wrong word can do more damage.  I do hope that we'll cooperate
on the blob-free Atheros driver.

--
Regards,
Pavel Roskin


From larry.finger at lwfinger.net  Mon Apr  9 00:26:11 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 17:26:11 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704081135.33106.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704081135.33106.flamingice@sourmilk.net>
Message-ID: <46196C03.4070003@lwfinger.net>

Michael Wu wrote:
> On Sunday 08 April 2007 01:04, Larry Finger wrote:
>> In mac80211 the 'qual' and 'level' values are interchanged. The patch also
>> places the 'qual' value on a 0 - 100 scale and calculated using the formula
>> contained in iwlib.
>>
> NACK. Qual (arbitrary signal quality) and level (RSSI) values are correct and 
> userspace is responsible for scaling any statistics values.

I disagree. For the wireless extensions output, the maximum values are set implicitly in the
iw_range struct. In addition, the level is always in dBm (a negative number), whereas the RSSI is an
arbitrary positive number. Because the maximum value is driver dependent, it must be specified when
the driver initializes the MAC layer.

In any case, the current code is broken. Without my patch, an iwconfig command with bcm43xx-mac80211
produces the line:

Link Quality=216/146  Signal level=-197 dBm  Noise level=-63 dBm

We could argue about the Link Quality, although the x/146 looks pretty strange. The Signal level of
-197 dBm is impossible. With my patch, the same version of bcm43xx gets the line

Link Quality=90/100  Signal level=-36 dBm  Noise level=-69 dBm

That Signal level matches what comes from both bcm43xx-softmac and the Windows driver running under
ndiswrapper.

Larry




From larry.finger at lwfinger.net  Mon Apr  9 01:32:32 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 18:32:32 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704081902.23238.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704081135.33106.flamingice@sourmilk.net>
	<46196C03.4070003@lwfinger.net>
	<200704081902.23238.flamingice@sourmilk.net>
Message-ID: <46197B90.8050408@lwfinger.net>

Michael Wu wrote:
> On Sunday 08 April 2007 18:26, Larry Finger wrote:
>> Link Quality=216/146  Signal level=-197 dBm  Noise level=-63 dBm
>>
> Is this before or after your "bcm43xx-mac80211: Fix error in initiallizing max 
> RSSI and max signal" patch?
> 
> -Michael Wu


This is after that patch.

Larry


From larry.finger at lwfinger.net  Mon Apr  9 02:02:47 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 19:02:47 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704081941.18921.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704081902.23238.flamingice@sourmilk.net>
	<46197B90.8050408@lwfinger.net>
	<200704081941.18921.flamingice@sourmilk.net>
Message-ID: <461982A7.30901@lwfinger.net>

Michael Wu wrote:
> On Sunday 08 April 2007 19:32, Larry Finger wrote:
>> Michael Wu wrote:
>>> Is this before or after your "bcm43xx-mac80211: Fix error in
>>> initiallizing max RSSI and max signal" patch?
>>>
>> This is after that patch.
>>
> So what do the statistics look like without that patch?

Link Quality=219/60  Signal level=-200 dBm  Noise level=-69 dBm

Larry


From larry.finger at lwfinger.net  Mon Apr  9 02:20:16 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 19:20:16 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	
	<1176022457.8459.21.camel@johannes.berg>	
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
Message-ID: <461986C0.6000700@lwfinger.net>

John H. wrote:
> Thanks.
> 
> I was looking for some binary solution for now, as my fedora kernel is
> Linux laptop 2.6.20-1.2933.fc6 #1 SMP Mon Mar 19 11:38:26 EDT 2007
> i686 i686 i386 GNU/Linux
> 
> And I have stopped compiling own kernels due to lack of time.
> 
> However, it seems that is not possible.

Within the rules of new kernel releases - no. If you don't build new kernels, you will have to wait 
until Fedora issues a 2.6.21 kernel.

Did you try the 'iwconfig eth1 rate 1M' trick? It should make the performance be usable.

Larry




From dwmw2 at infradead.org  Mon Apr  9 02:52:22 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Sun, 08 Apr 2007 20:52:22 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
Message-ID: <1176079943.3208.22.camel@shinybook.infradead.org>

On Sun, 2007-04-08 at 11:17 -0500, John H. wrote:
> I was looking for some binary solution for now, as my fedora kernel is
> Linux laptop 2.6.20-1.2933.fc6 #1 SMP Mon Mar 19 11:38:26 EDT 2007
> i686 i686 i386 GNU/Linux
> 
> And I have stopped compiling own kernels due to lack of time.

Why would you rebuild the whole kernel and not just the bcm43xx driver?

-- 
dwmw2



From evanfoss at gmail.com  Mon Apr  9 03:12:16 2007
From: evanfoss at gmail.com (evan foss)
Date: Sun, 8 Apr 2007 21:12:16 -0400
Subject: OpenBSD bcw: Possible GPL license violation issues
In-Reply-To: <4a55afb80704081748p751c4eb8uf84c65262062879d@mail.gmail.com>
References: <200704041945.21447.mb@bu3sch.de>
	<20070408132743.GA12836@slim.vantronix.net>
	<20070408130627.ov4v0g08csgggwws@webmail.spamcop.net>
	<4a55afb80704081748p751c4eb8uf84c65262062879d@mail.gmail.com>
Message-ID: <4a55afb80704081812u5e9547a3u33e3ce44ff0bc1c8@mail.gmail.com>

Your argument has hit slashdot.
http://bsd.slashdot.org/article.pl?sid=07/04/07/1618239&from=rss

-- 
http://www.coe.neu.edu/~efoss/
http://evanfoss.googlepages.com/


From stefano.brivio at polimi.it  Mon Apr  9 04:07:14 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 9 Apr 2007 04:07:14 +0200
Subject: [RFC] PHY setup in v4 specs implementation
Message-ID: <20070409040714.7aedbd9e@localhost>

I'm going to move all v4 workarounds needed for the A and G PHY setup into a
separate file (draft inlined here), as it'll easily get to ~1000 lines, and
I wouldn't really want to make a mess out of _phy.c. These workarounds
are strictly needed for A PHY support (which I'm currently working on)
and could yield as well better performances for G PHY. I'm developing
this just for mac80211, and when I'm done with this patchset I'll drop
my bcm43xx-softmac MAINTAINERS line. Please comment on that before I do. ;)


-- 
Ciao
Stefano

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
===================================================================
--- /dev/null
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
@@ -0,0 +1,398 @@
+/*
+
+  Broadcom BCM43xx wireless driver
+
+  Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
+  Copyright (c) 2005, 2006, 2007 Stefano Brivio <st3 at riseup.net>
+  Copyright (c) 2005, 2006, 2007 Michael Buesch <mbuesch at freenet.de>
+  Copyright (c) 2005, 2006 Danny van Dyk <kugelfang at gentoo.org>
+  Copyright (c) 2005, 2006 Andreas Jaggi <andreas.jaggi at waterwave.ch>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+static void bcm43xx_wa_papd(struct bcm43xx_wldev *dev)
+{
+	u16 backup;
+
+	backup = bcm43xx_ofdmtab_read16(dev, 0x000E, 12);
+	bcm43xx_ofdmtab_write16(dev, 0x000E, 12, 7);
+	bcm43xx_ofdmtab_write16(dev, 0x000F, 7, 0);
+	bcm43xx_dummy_transmission(dev);
+	bcm43xx_ofdmtab_write16(dev, 0x000E, 12, backup);
+}
+
+static void bcm43xx_wa_auxclipthr(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x008E | BCM43xx_PHYROUTE_OFDM_GPHY, 0x3800);
+}
+
+static void bcm43xx_wa_afcdac(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x0035, 0x03FF);
+	bcm43xx_phy_write(dev, 0x0036, 0x0400);
+}
+
+static void bcm43xx_wa_txdc_offset(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, 0x000E, 0x0051);
+}
+
+static void bcm43xx_wa_initgains(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x001C | BCM43xx_PHYROUTE_OFDM_GPHY, 0xFFFF);
+	bcm43xx_phy_write(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		bcm43xx_phy_read(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY) & 0xFF0F);
+	if (dev->phy->rev <= 2)
+		bcm43xx_ofdmtab_write16(dev, 0x000F, 0x000C, 0x1FBF);
+	bcm43xx_radio_write16(dev, 0x0002, 0x1FBF);
+}
+
+static void bcm43xx_wa_divider(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x002B, bcm43xx_phy_read(dev, 0x002B) ~ 0x0100);
+	bcm43xx_phy_write(dev, 0x008E, 0x58C1);
+}
+
+static void bcm43xx_wa_gt(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy->rev <= 2) {
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 3, 15);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 4, 31);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 5, 42);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 6, 48);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 7, 58);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 0, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 1, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 3, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 4, 21);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 5, 21);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 6, 25);
+		bcm43xx_ofdmtab_write16(dev, 0x0001, 4, 3);
+		bcm43xx_ofdmtab_write16(dev, 0x0001, 5, 3);
+		bcm43xx_ofdmtab_write16(dev, 0x0001, 6, 7);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 0, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 1, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 3, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 4, 21);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 5, 21);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 6, 25);
+	}
+}
+
+static void bcm43xx_wa_analog(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev > 2) {
+		if (phy->type == BCM43xx_PHYTYPE_G)
+				bcm43xx_phy_write(dev, 0x0003 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x1000);
+		else
+				bcm43xx_phy_write(dev, 0x0003 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x1808);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 3, 0x1044);
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 4, 0x7201);
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 6, 0x0040);
+	}
+}
+
+static void bcm43xx_wa_dac(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy->analog == 1)
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 1,
+			bcm43xx_ofdmtab_read16(dev, 0x000C, 1) ~ 0x0034 | 0x0008);
+	else
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 1,
+			bcm43xx_ofdmtab_read16(dev, 0x000C, 1) ~ 0x0078 | 0x0010);
+}
+
+static void bcm43xx_wa_txlna_gain(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, 0x000E, 13, 0x0000);
+}
+
+static void bcm43xx_wa_crs_reset(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x002C, 0x0064);
+}
+
+static void bcm43xx_wa_2060txlna_gain(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_hf_write(dev, 0x00001000);
+}
+
+static void bcm43xx_wa_lms(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x0055,
+		(bcm43xx_phy_read(dev, 0x0055) & 0xFFC0) | 0x0004);
+}
+
+static void bcm43xx_wa_mixedsignal(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, 0x000C, 1, 3);
+}
+
+static void bcm43xx_wa_iqadc(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy->analog == 4)
+		bcm43xx_ofdmtab_write16(dev, 0x000C, 0,
+			bcm43xx_ofdmtab_read16(dev, 0x000C, 0) ~ 0xF000);
+}
+
+static void bcm43xx_wa_crs_ed(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev == 1)
+		bcm43xx_phy_write(dev, 0x0006 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x4F19);
+	else if (phy->rev == 2) {
+		bcm43xx_phy_write(dev, 0x00C0 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x1861);
+		bcm43xx_phy_write(dev, 0x00C1 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0271);
+		bcm43xx_phy_write(dev, 0x0028 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x0028 | BCM43xx_PHYROUTE_OFDM_GPHY) | 0x0800);
+	} else {
+		bcm43xx_phy_write(dev, 0x00C0 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0098);
+		bcm43xx_phy_write(dev, 0x00C1 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0070);
+		bcm43xx_phy_write(dev, 0x00C9 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0080);
+		bcm43xx_phy_write(dev, 0x0028 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x0028 | BCM43xx_PHYROUTE_OFDM_GPHY) | 0x0800);
+	}
+}
+
+static void bcm43xx_wa_crs_thr(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x0029 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x0029 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x03C0 | 0xD000);
+}
+
+static void bcm43xx_wa_crs_blank(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x002C | BCM43xx_PHYROUTE_OFDM_GPHY, 0x005A);
+}
+
+static void bcm43xx_wa_cck_shiftbits(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x00A7 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0026);
+}
+
+static void bcm43xx_wa_wrssi_offset(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy_rev == 1)
+		for (i = 0; i < 32; i++)
+			bcm43xx_ofdmtab_write16(dev, 4, i, 0x0820);
+	else
+		for (i = 4; i < 20; i++)
+			bcm43xx_ofdmtab_write16(dev, 21, i, 0x0020);
+}
+
+static void bcm43xx_wa_twpuoff_rxpuon(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, 0x000F, 2, 15);
+	bcm43xx_ofdmtab_write16(dev, 0x000F, 3, 20);
+}
+
+static void bcm43xx_wa_altagc(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev == 1) {
+		bcm43xx_ofdmtab_write16(dev, 0x0013, 0, 254);
+		bcm43xx_ofdmtab_write16(dev, 0x0013, 1, 13);
+		bcm43xx_ofdmtab_write16(dev, 0x0013, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0013, 3, 25);
+		bcm43xx_ofdmtab_write16(dev, 0x0006, 0, 0x2710);
+		bcm43xx_ofdmtab_write16(dev, 0x0006, 1, 0x9B83);
+		bcm43xx_ofdmtab_write16(dev, 0x0006, 2, 0x9B83);
+		bcm43xx_ofdmtab_write16(dev, 0x0006, 3, 0x0F8D);
+		bcm43xx_phy_write(dev, 0x0055 | BCM43xx_PHYROUTE_OFDM_GPHY, 4);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 0, 254);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 1, 13);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, 0x0000, 3, 25);
+	}
+
+	bcm43xx_phy_write(dev, 0x00A5 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x00A5 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0xFF00) | 0x5700);
+	bcm43xx_phy_write(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x007F) | 0x000F);
+	bcm43xx_phy_write(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x3F80) | 0x2880);
+	bcm43xx_phy_write(dev, 0x008C | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x008C | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0xF000) | 0x7000);
+	bcm43xx_radio_write16(dev, 0x007A,
+		bcm43xx_radio_read16(dev, 0x007A) | 0x0008);
+	bcm43xx_phy_write(dev, 0x00A0 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x00A0 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x000F) | 0x0008);
+	bcm43xx_phy_write(dev, 0x00A1 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x00A1 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x0F00) | 0x0800);
+	bcm43xx_phy_write(dev, 0x0012 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0012 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x0F00) | 0x0700);
+	bcm43xx_phy_write(dev, 0x0010 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0010 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x0F00) | 0x0100);
+	if (phy->rev == 1)
+		bcm43xx_phy_write(dev, 0x0012 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			(bcm43xx_phy_read(dev, 0x0012 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x000F) | 0x0007);
+	bcm43xx_phy_write(dev, 0x0088 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0088 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x001C);
+	bcm43xx_phy_write(dev, 0x0088 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0088 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x3F00) | 0x0200);
+	bcm43xx_phy_write(dev, 0x0096 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0096 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x001C);
+	bcm43xx_phy_write(dev, 0x0089 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0089 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x0020);
+	bcm43xx_phy_write(dev, 0x0089 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0089 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x3F00) | 0x0200);
+	bcm43xx_phy_write(dev, 0x0082 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0082 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x002E);
+	bcm43xx_phy_write(dev, 0x0096 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0096 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0xFF00) | 0x1A00);
+	bcm43xx_phy_write(dev, 0x0081 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0081 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x0028);
+	bcm43xx_phy_write(dev, 0x0081 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x0081 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0xFF00) | 0x2C00);
+	if (phy->rev == 1) {
+		bcm43xx_phy_write(dev, 0x0030 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x092B);
+		bcm43xx_phy_write(dev, 0x001B | BCM43xx_PHYROUTE_OFDM_GPHY,
+			(bcm43xx_phy_read(dev, 0x001B | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x001E) | 0x0002);
+	} else {
+		bcm43xx_phy_write(dev, 0x001B | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x001B | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x001E);
+		bcm43xx_phy_write(dev, 0x001F | BCM43xx_PHYROUTE_OFDM_GPHY, 0x287A);
+		bcm43xx_phy_write(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			(bcm43xx_phy_read(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x000F) | 0x0004;
+		if (phy->rev >= 6) {
+			bcm43xx_phy_write(dev, 0x0022 | BCM43xx_PHYROUTE_OFDM_GPHY, 0x287A);
+			bcm43xx_phy_write(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY,
+				(bcm43xx_phy_read(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0xF000) | 0x3000);
+		}
+	}
+	bcm43xx_phy_write(dev, 0x00A8 | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x00A8 | BCM43xx_PHYROUTE_OFDM_GPHY) & 0x7F7F) | 0x7874);
+	bcm43xx_phy_write(dev, 0x008E | BCM43xx_PHYROUTE_OFDM_GPHY, 0x1C00);
+	if (phy->rev == 1) {
+		bcm43xx_phy_write(dev, 0x00AB | BCM43xx_PHYROUTE_OFDM_GPHY,
+			(bcm43xx_phy_read(dev, 0x00AB | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x0F00) | 0x0600);
+		bcm43xx_phy_write(dev, 0x008B | BCM43xx_PHYROUTE_OFDM_GPHY, 0x005E);
+		bcm43xx_phy_write(dev, 0x008C | BCM43xx_PHYROUTE_OFDM_GPHY,
+			(bcm43xx_phy_read(dev, 0x008C | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x00FF) | 0x001E);
+		bcm43xx_phy_write(dev, 0x008D | BCM43xx_PHYROUTE_OFDM_GPHY, 0x0002);
+		bcm43xx_ofdmtab_write16(dev, 0x0015, 0, 0);
+		bcm43xx_ofdmtab_write16(dev, 0x0015, 1, 7);
+		bcm43xx_ofdmtab_write16(dev, 0x0015, 2, 16);
+		bcm43xx_ofdmtab_write16(dev, 0x0015, 3, 28);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 0, 0);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 1, 7);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 2, 16);
+		bcm43xx_ofdmtab_write16(dev, 0x0002, 3, 28);
+	}
+	if (phy->rev >= 6)
+	{
+		bcm43xx_phy_write(dev, 0x0026 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x0026 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x0003);
+		bcm43xx_phy_write(dev, 0x0026 | BCM43xx_PHYROUTE_OFDM_GPHY,
+			bcm43xx_phy_read(dev, 0x0026 | BCM43xx_PHYROUTE_OFDM_GPHY) ~ 0x1000);
+	}
+}
+
+static void bcm43xx_wa_tr_ltov(struct bcm43xx_wldev *dev)
+{ // TR Lookup Table Original Values
+	bcm43xx_gtab_write(dev, 0x002E, 0x0298, 0xC480);
+}
+
+static void bcm43xx_wa_cpll_nonpilot(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, 0x0011, 4, 0);
+	bcm43xx_ofdmtab_write16(dev, 0x0011, 5, 0);
+}
+
+static void bcm43xx_wa_rssi_adc(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy->analog == 4)
+		bcm43xx_phy_write(dev, 0x00DC, 0x7454);
+}
+
+static void bcm43xx_wa_boards_a(struct bcm43xx_wldev *dev)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+
+	if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+	    bus->board_type == SSB_BOARD_BU4306 &&
+	    bus->board_rev < 0x30) {
+		bcm43xx_phy_write(dev, 0x0010, 0xE000);
+		bcm43xx_phy_write(dev, 0x0013, 0x0140);
+		bcm43xx_phy_write(dev, 0x0014, 0x0280);
+	} else {
+		if (bus->board_type == SSB_BOARD_MP4318 &&
+		    bus->board_rev < 0x20) {
+			bcm43xx_phy_write(dev, 0x0013, 0x0210);
+			bcm43xx_phy_write(dev, 0x0014, 0x0840);
+		} else {
+			bcm43xx_phy_write(dev, 0x0013, 0x0140);
+			bcm43xx_phy_write(dev, 0x0014, 0x0280);
+		}
+		if (dev->phy->rev <= 4)
+			bcm43xx_phy_write(dev, 0x0010, 0xE000);
+		else
+			bcm43xx_phy_write(dev, 0x0010, 0x2000);
+		bcm43xx_ofdmtab_write16(dev, 0x000E, 8, 0x0039);
+		bcm43xx_ofdmtab_write16(dev, 0x000F, 7, 0x0040);
+	}
+}
+
+static void bcm43xx_wa_boards_g(struct bcm43xx_wldev *dev)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (bus->board_vendor != SSB_BOARDVENDOR_BCM ||
+	    bus->board_type != SSB_BOARD_BU4306 ||
+	    bus->board_rev != 0x17) {
+		if (phy->rev < 2) {
+			bcm43xx_ofdmtab_write16(dev, 0x0014, 1, 0x0002);
+			bcm43xx_ofdmtab_write16(dev, 0x0014, 2, 0x0001);
+		} else {
+			bcm43xx_ofdmtab_write16(dev, 0x0001, 1, 0x0002);
+			bcm43xx_ofdmtab_write16(dev, 0x0001, 2, 0x0001);
+			if (bus->sprom.r1.boardflags_lo & BCM43xx_BFL_EXTLNA &&
+			    phy->rev >= 7) {
+				bcm43xx_phy_write(dev, 0x0011 | BCM43xx_PHYROUTE_EXT_GPHY,
+					bcm43xx_phy_read(dev, 0x0011 | BCM43xx_PHYROUTE_EXT_GPHY) & 0xF7FF);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0020, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0021, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0022, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0023, 0x0000);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0000, 0x0000);
+				bcm43xx_ofdmtab_write16(dev, 0x0001, 0x0003, 0x0002);
+			}
+		}
+	}
+	if (bus->sprom.r1.boardflags_lo & BCM43xx_BFL_FEM)
+	{
+		bcm43xx_phy_write(dev, 0x0003 | BCM43xx_PHYROUTE_EXT_GPHY, 0x3120);
+		bcm43xx_phy_write(dev, 0x0004 | BCM43xx_PHYROUTE_EXT_GPHY, 0xC480);
+	}
+}
+
+void bcm43xx_wa_all(struct bcm43xx_wldev *dev)
+{
+	//TODO --will be called by setup functions in _phy.c
+}
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
===================================================================
--- /dev/null
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
@@ -0,0 +1 @@
+


From larry.finger at lwfinger.net  Mon Apr  9 05:54:54 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Apr 2007 22:54:54 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704082031.59934.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704081941.18921.flamingice@sourmilk.net>
	<461982A7.30901@lwfinger.net>
	<200704082031.59934.flamingice@sourmilk.net>
Message-ID: <4619B90E.1030403@lwfinger.net>

Michael Wu wrote:
> On Sunday 08 April 2007 20:02, Larry Finger wrote:
>> Link Quality=219/60  Signal level=-200 dBm  Noise level=-69 dBm
>>
> Try the attached patch without your "bcm43xx-mac80211: Fix error in 
> initiallizing max RSSI and max signal" patch.
> 
> -Michael Wu

Why would I want to do this? If the community agrees on anything, it is that the signal is given in 
dBm (i.e. a negative number) and that the rssi is a positive number. The firmware in the bcm43xx 
chips return a quantity that looks like an rssi with a received packet, and bcm43xx_rssi_postprocess 
turns that into a quantity that looks like dBm. Your patch reverses those designations and mixes up 
the two quantities. Again I ask "Why"?

Larry



From will.dyson at gmail.com  Mon Apr  9 06:36:22 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Mon,  9 Apr 2007 00:36:22 -0400
Subject: [PATCH 2/3] bcm43xx-mac80211: Fix error path memory leak
In-Reply-To: <1176093383234-git-send-email-will.dyson@gmail.com>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
Message-ID: <11760933831510-git-send-email-will.dyson@gmail.com>

When doing setup for the dma ring, the txhdr_cache must be freed if there is an
error after it is allocated.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index c0f83b7..d93e219 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -777,7 +777,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 
 	err = alloc_ringmemory(ring);
 	if (err)
-		goto err_kfree_meta;
+		goto err_kfree_txhdr_cache;
 	err = dmacontroller_setup(ring);
 	if (err)
 		goto err_free_ringmemory;
@@ -787,6 +787,8 @@ out:
 
 err_free_ringmemory:
 	free_ringmemory(ring);
+err_kfree_txhdr_cache:
+	kfree(ring->txhdr_cache);
 err_kfree_meta:
 	kfree(ring->meta);
 err_kfree_ring:
-- 
1.5.1



From will.dyson at gmail.com  Mon Apr  9 06:36:23 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Mon,  9 Apr 2007 00:36:23 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <11760933831510-git-send-email-will.dyson@gmail.com>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
	<11760933831510-git-send-email-will.dyson@gmail.com>
Message-ID: <117609338375-git-send-email-will.dyson@gmail.com>

When DMA mapping for RX fails because of the limitation, retry the allocation
in ZONE_DMA. When the network stack passes us TX buffers that cannot be mapped
because of the limitation, allocate a bounce buffer in ZONE_DMA and copy the
packet there.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   71 ++++++++++++++++++-
 1 files changed, 67 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d93e219..51a2def 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -525,8 +525,23 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring *ring,
 		return -ENOMEM;
 	dmaaddr = map_descbuffer(ring, skb->data,
 				 ring->rx_buffersize, 0);
-	if (dma_mapping_error(dmaaddr))
+	if (dma_mapping_error(dmaaddr)) {
+		/* ugh. try to realloc in zone_dma */
+		gfp_flags |= GFP_DMA;
+
+		dev_kfree_skb_any(skb);
+
+		skb = __dev_alloc_skb(ring->rx_buffersize, gfp_flags);
+		if (unlikely(!skb))
+			return -ENOMEM;
+		dmaaddr = map_descbuffer(ring, skb->data,
+					 ring->rx_buffersize, 0);
+	}
+
+	if (dma_mapping_error(dmaaddr)) {
+		dev_kfree_skb_any(skb);
 		return -EIO;
+	}
 
 	meta->skb = skb;
 	meta->dmaaddr = dmaaddr;
@@ -731,6 +746,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 	struct bcm43xx_dmaring *ring;
 	int err;
 	int nr_slots;
+	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
@@ -750,6 +766,32 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
 					    GFP_KERNEL);
 		if (!ring->txhdr_cache)
 			goto err_kfree_meta;
+
+		/* test for ability to dma to txhdr_cache */
+		dma_test = dma_map_single(dev->dev->dev,
+				ring->txhdr_cache, sizeof(struct bcm43xx_txhdr_fw4),
+				DMA_TO_DEVICE);
+
+		if (dma_mapping_error(dma_test)) {
+			/* ugh realloc */
+			kfree(ring->txhdr_cache);
+			ring->txhdr_cache = kcalloc(nr_slots,
+							sizeof(struct bcm43xx_txhdr_fw4),
+							GFP_KERNEL | GFP_DMA);
+			if (!ring->txhdr_cache)
+				goto err_kfree_meta;
+
+			dma_test = dma_map_single(dev->dev->dev,
+					ring->txhdr_cache, sizeof(struct bcm43xx_txhdr_fw4),
+					DMA_TO_DEVICE);
+
+			if (dma_mapping_error(dma_test))
+				goto err_kfree_txhdr_cache;
+		}
+
+		dma_unmap_single(dev->dev->dev,
+				dma_test, sizeof(struct bcm43xx_txhdr_fw4),
+				DMA_TO_DEVICE);
 	}
 
 	ring->dev = dev;
@@ -1030,9 +1072,11 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	const struct bcm43xx_dma_ops *ops = ring->ops;
 	u8 *header;
 	int slot;
+	int err;
 	struct bcm43xx_dmadesc_generic *desc;
 	struct bcm43xx_dmadesc_meta *meta;
 	struct bcm43xx_dmadesc_meta *meta_hdr;
+	struct sk_buff *bounce_skb;
 
 #define SLOTS_PER_PACKET  2
 	assert(skb_shinfo(skb)->nr_frags == 0);
@@ -1062,9 +1106,26 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
 	meta->skb = skb;
 	meta->is_last_fragment = 1;
+
 	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
-	if (dma_mapping_error(meta->dmaaddr))
-		goto out_unmap_hdr;
+	/* create a bounce buffer in zone_dma on mapping failure. */
+	if (dma_mapping_error(meta->dmaaddr)) {
+		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC | GFP_DMA);
+		if (!bounce_skb) {
+			err = -ENOMEM;
+			goto out_unmap_hdr;
+		}
+
+		memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
+		dev_kfree_skb_any(skb);
+		skb = bounce_skb;
+		meta->skb = skb;
+		meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+		if (dma_mapping_error(meta->dmaaddr)) {
+			err = -EIO;
+			goto out_free_bounce;
+		}
+	}
 
 	ops->fill_descriptor(ring, desc, meta->dmaaddr,
 			     skb->len, 0, 1, 1);
@@ -1074,10 +1135,12 @@ static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	ops->poke_tx(ring, next_slot(ring, slot));
 	return 0;
 
+out_free_bounce:
+	dev_kfree_skb_any(skb);
 out_unmap_hdr:
 	unmap_descbuffer(ring, meta_hdr->dmaaddr,
 			sizeof(struct bcm43xx_txhdr_fw4), 1);
-	return -EIO;
+	return err;
 }
 
 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
-- 
1.5.1



From will.dyson at gmail.com  Mon Apr  9 06:36:21 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Mon,  9 Apr 2007 00:36:21 -0400
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
Message-ID: <1176093383234-git-send-email-will.dyson@gmail.com>

Check result of dma_map_single(), print warnings and propagate errors up the
call stack.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   39 +++++++++++++++-----
 1 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d53679d..c0f83b7 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -525,9 +525,11 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring *ring,
 		return -ENOMEM;
 	dmaaddr = map_descbuffer(ring, skb->data,
 				 ring->rx_buffersize, 0);
+	if (dma_mapping_error(dmaaddr))
+		return -EIO;
+
 	meta->skb = skb;
 	meta->dmaaddr = dmaaddr;
-
 	ring->ops->fill_descriptor(ring, desc, dmaaddr,
 				   ring->rx_buffersize, 0, 0, 0);
 
@@ -552,8 +554,10 @@ static int alloc_initial_descbuffers(struct bcm43xx_dmaring *ring)
 		desc = ring->ops->idx2desc(ring, i, &meta);
 
 		err = setup_rx_descbuffer(ring, desc, meta, GFP_KERNEL);
-		if (err)
+		if (err) {
+			printk(KERN_ERR PFX "Failed to allocate initial descbuffers\n");
 			goto err_unwind;
+		}
 	}
 	mb();
 	ring->used_slots = ring->nr_slots;
@@ -1017,7 +1021,7 @@ struct bcm43xx_dmaring * parse_cookie(struct bcm43xx_wldev *dev,
 	return ring;
 }
 
-static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
+static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
 			    struct sk_buff *skb,
 			    struct ieee80211_tx_control *ctl)
 {
@@ -1026,23 +1030,26 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	int slot;
 	struct bcm43xx_dmadesc_generic *desc;
 	struct bcm43xx_dmadesc_meta *meta;
+	struct bcm43xx_dmadesc_meta *meta_hdr;
 
 #define SLOTS_PER_PACKET  2
 	assert(skb_shinfo(skb)->nr_frags == 0);
 
 	/* Get a slot for the header. */
 	slot = request_slot(ring);
-	desc = ops->idx2desc(ring, slot, &meta);
-	memset(meta, 0, sizeof(*meta));
+	desc = ops->idx2desc(ring, slot, &meta_hdr);
+	memset(meta_hdr, 0, sizeof(*meta_hdr));
 
 	header = &(ring->txhdr_cache[slot * sizeof(struct bcm43xx_txhdr_fw4)]);
 	bcm43xx_generate_txhdr(ring->dev, header,
 			       skb->data, skb->len, ctl,
 			       generate_cookie(ring, slot));
 
-	meta->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
+	meta_hdr->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
 				       sizeof(struct bcm43xx_txhdr_fw4), 1);
-	ops->fill_descriptor(ring, desc, meta->dmaaddr,
+	if (dma_mapping_error(meta_hdr->dmaaddr))
+		return -EIO;
+	ops->fill_descriptor(ring, desc, meta_hdr->dmaaddr,
 			     sizeof(struct bcm43xx_txhdr_fw4), 1, 0, 0);
 
 	/* Get a slot for the payload. */
@@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 
 	memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
 	meta->skb = skb;
-	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 	meta->is_last_fragment = 1;
+	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+	if (dma_mapping_error(meta->dmaaddr))
+		goto out_unmap_hdr;
 
 	ops->fill_descriptor(ring, desc, meta->dmaaddr,
 			     skb->len, 0, 1, 1);
@@ -1061,6 +1070,12 @@ static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
 	/* Now transfer the whole frame. */
 	wmb();
 	ops->poke_tx(ring, next_slot(ring, slot));
+	return 0;
+
+out_unmap_hdr:
+	unmap_descbuffer(ring, meta_hdr->dmaaddr,
+			sizeof(struct bcm43xx_txhdr_fw4), 1);
+	return -EIO;
 }
 
 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
@@ -1068,6 +1083,7 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
 		   struct ieee80211_tx_control *ctl)
 {
 	struct bcm43xx_dmaring *ring = dev->dma.tx_ring1;
+	int err = 0;
 
 	assert(ring->tx);
 	if (unlikely(free_slots(ring) < SLOTS_PER_PACKET)) {
@@ -1078,7 +1094,12 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
 		return NETDEV_TX_BUSY;
 	}
 
-	dma_tx_fragment(ring, skb, ctl);
+	err = dma_tx_fragment(ring, skb, ctl);
+	if (unlikely(err)) {
+		printkl(KERN_ERR PFX "DMA tx mapping failure\n");
+		return NETDEV_TX_BUSY;
+	}
+
 	ring->nr_tx_packets++;
 	if (free_slots(ring) < SLOTS_PER_PACKET) {
 		/* FIXME: we currently only have one queue */
-- 
1.5.1



From larry.finger at lwfinger.net  Mon Apr  9 07:06:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 00:06:33 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704090043.34436.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704082031.59934.flamingice@sourmilk.net>
	<4619B90E.1030403@lwfinger.net>
	<200704090043.34436.flamingice@sourmilk.net>
Message-ID: <4619C9D9.5070507@lwfinger.net>

Michael Wu wrote:
> On Sunday 08 April 2007 23:54, Larry Finger wrote:
>> Why would I want to do this?
> Did it fix the output?

With that patch as the only one applied to wireless-dev, I get

Link Quality=69/60  Signal level=-37 dBm  Noise level=-70 dBm

Larry



From dan.pasanen at gmail.com  Mon Apr  9 07:36:39 2007
From: dan.pasanen at gmail.com (Dan Pasanen)
Date: Mon, 9 Apr 2007 00:36:39 -0500
Subject: Good news on Dell Mini-PCI 1390
Message-ID: <4f8d9c0c0704082236l2e20a775tf1292939a040db59@mail.gmail.com>

Tonight I downloaded the 2.6.20.6 kernel and the combined patch from
ftp://lwfinger.dynalias.org/patches . Patched the kernel source and rebooted
into the new kernel. I used to get decent speeds with just a regular
2.6.20.5 kernel, but I still used my LAN cable. I dont need it anymore, that
patch works great.  Thanks to everyone in the bcm43xx devel team.  You guys
are good =D

-Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070409/4dff4606/attachment.html>

From mistamaila at gmail.com  Mon Apr  9 07:52:07 2007
From: mistamaila at gmail.com (John H.)
Date: Mon, 9 Apr 2007 00:52:07 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176079943.3208.22.camel@shinybook.infradead.org>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
Message-ID: <5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>

I ended up just using the following...

http://www.howtoforge.com/kernel_compilation_fedora

Can I get a patched version of the bcm43xx source and just compile that?

On 4/8/07, David Woodhouse <dwmw2 at infradead.org> wrote:
> On Sun, 2007-04-08 at 11:17 -0500, John H. wrote:
> > I was looking for some binary solution for now, as my fedora kernel is
> > Linux laptop 2.6.20-1.2933.fc6 #1 SMP Mon Mar 19 11:38:26 EDT 2007
> > i686 i686 i386 GNU/Linux
> >
> > And I have stopped compiling own kernels due to lack of time.
>
> Why would you rebuild the whole kernel and not just the bcm43xx driver?
>
> --
> dwmw2
>
>


From larry.finger at lwfinger.net  Mon Apr  9 08:06:26 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 01:06:26 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
Message-ID: <4619D7E2.9090103@lwfinger.net>

John H. wrote:
> I ended up just using the following...
> 
> http://www.howtoforge.com/kernel_compilation_fedora
> 
> Can I get a patched version of the bcm43xx source and just compile that?

I scanned the reference quickly, but I think you have downloaded the Fedora kernel sources. If so, 
in step 2.3 you should use the line 'wget 
ftp://lwfinger.dynalias.org/patches/combined_2.6.20.2.patch' (I think I recall that you were using 
2.6.20.2.). You will need to modify 'kernel-2.6.spec' to change the name of the patch, then rebuild 
as stated. This will get you a patched set of bcm43xx source files.

Larry


From dwmw2 at infradead.org  Mon Apr  9 08:08:45 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 09 Apr 2007 02:08:45 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <4619D7E2.9090103@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<4619D7E2.9090103@lwfinger.net>
Message-ID: <1176098926.3208.37.camel@shinybook.infradead.org>

On Mon, 2007-04-09 at 01:06 -0500, Larry Finger wrote:
> I scanned the reference quickly, but I think you have downloaded the Fedora kernel sources. If so, 
> in step 2.3 you should use the line 'wget 
> ftp://lwfinger.dynalias.org/patches/combined_2.6.20.2.patch' (I think I recall that you were using 
> 2.6.20.2.). You will need to modify 'kernel-2.6.spec' to change the name of the patch, then rebuild 
> as stated. This will get you a patched set of bcm43xx source files. 

But really, even if you _wanted_ to rebuild your kernel that reference
is giving bad advice; you'd do better to check the RPM sources out from
CVS and make them that way.

It's doubly bad for not starting with "YOU REALLY DON'T WANT TO BUILD
YOUR OWN KERNEL" in big letters.

Just build bcm43xx as an out-of-tree module, to work against the kernel
which is shipped with Fedora. You don't need to rebuild the kernel.

-- 
dwmw2



From larry.finger at lwfinger.net  Mon Apr  9 08:18:21 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 01:18:21 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176098926.3208.37.camel@shinybook.infradead.org>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	<1176079943.3208.22.camel@shinybook.infradead.org>	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>	<4619D7E2.9090103@lwfinger.net>
	<1176098926.3208.37.camel@shinybook.infradead.org>
Message-ID: <4619DAAD.3030805@lwfinger.net>

David Woodhouse wrote:
> 
> But really, even if you _wanted_ to rebuild your kernel that reference
> is giving bad advice; you'd do better to check the RPM sources out from
> CVS and make them that way.
> 
> It's doubly bad for not starting with "YOU REALLY DON'T WANT TO BUILD
> YOUR OWN KERNEL" in big letters.
> 
> Just build bcm43xx as an out-of-tree module, to work against the kernel
> which is shipped with Fedora. You don't need to rebuild the kernel.

I have started a project to build an out-of-tree version of bcm43xx, but it isn't ready for prime time.

Larry


From mb at bu3sch.de  Mon Apr  9 12:41:32 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 9 Apr 2007 12:41:32 +0200
Subject: [RFC] PHY setup in v4 specs implementation
In-Reply-To: <20070409040714.7aedbd9e@localhost>
References: <20070409040714.7aedbd9e@localhost>
Message-ID: <200704091241.32301.mb@bu3sch.de>

On Monday 09 April 2007 04:07, Stefano Brivio wrote:
> I'm going to move all v4 workarounds needed for the A and G PHY setup into a
> separate file (draft inlined here), as it'll easily get to ~1000 lines, and
> I wouldn't really want to make a mess out of _phy.c. These workarounds
> are strictly needed for A PHY support (which I'm currently working on)
> and could yield as well better performances for G PHY. I'm developing
> this just for mac80211, and when I'm done with this patchset I'll drop
> my bcm43xx-softmac MAINTAINERS line. Please comment on that before I do. ;)
> 

Next time please insert the patch before the --  signature marker, as
some mailclients auto-strip that on reply ;)


+static void bcm43xx_wa_initgains(struct bcm43xx_wldev *dev)
+{
+???????bcm43xx_phy_write(dev, 0x001C | BCM43xx_PHYROUTE_OFDM_GPHY, 0xFFFF);
+???????bcm43xx_phy_write(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY,
+???????????????bcm43xx_phy_read(dev, 0x0020 | BCM43xx_PHYROUTE_OFDM_GPHY) & 0xFF0F);
+???????if (dev->phy->rev <= 2)

Did you actually compile this? phy is not a pointer.

+static void bcm43xx_wa_tr_ltov(struct bcm43xx_wldev *dev)
+{ // TR Lookup Table Original Values
+???????bcm43xx_gtab_write(dev, 0x002E, 0x0298, 0xC480);
+}

Put that comment in front of the function and use /* */ style.

+static void bcm43xx_wa_boards_g(struct bcm43xx_wldev *dev)
+{
+???????struct ssb_bus *bus = dev->dev->bus;
+???????struct bcm43xx_phy *phy = &dev->phy;
+
+???????if (bus->board_vendor != SSB_BOARDVENDOR_BCM ||
+??????? ? ?bus->board_type != SSB_BOARD_BU4306 ||
+??????? ? ?bus->board_rev != 0x17) {
+???????????????if (phy->rev < 2) {
+???????????????????????bcm43xx_ofdmtab_write16(dev, 0x0014, 1, 0x0002);
+???????????????????????bcm43xx_ofdmtab_write16(dev, 0x0014, 2, 0x0001);
+???????????????} else {
+???????????????????????bcm43xx_ofdmtab_write16(dev, 0x0001, 1, 0x0002);
+???????????????????????bcm43xx_ofdmtab_write16(dev, 0x0001, 2, 0x0001);
+???????????????????????if (bus->sprom.r1.boardflags_lo & BCM43xx_BFL_EXTLNA &&
+??????????????????????? ? ?phy->rev >= 7) {

Put () around the bitwise &. (I think the compiler even complains about this).

-- 
Greetings Michael.


From stefano.brivio at polimi.it  Mon Apr  9 12:59:13 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 9 Apr 2007 12:59:13 +0200
Subject: [RFC] PHY setup in v4 specs implementation
In-Reply-To: <200704091241.32301.mb@bu3sch.de>
References: <20070409040714.7aedbd9e@localhost>
	<200704091241.32301.mb@bu3sch.de>
Message-ID: <20070409125913.40a82afb@localhost>

Thanks for your comments. But it's a draft. It wasn't supposed to build or
to be correct. I just asked to comment about the whole thing. Thanks.


-- 
Ciao
Stefano


From stefano.brivio at polimi.it  Mon Apr  9 13:13:07 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 9 Apr 2007 13:13:07 +0200
Subject: [RFC] PHY setup in v4 specs implementation
In-Reply-To: <200704091241.32301.mb@bu3sch.de>
References: <20070409040714.7aedbd9e@localhost>
	<200704091241.32301.mb@bu3sch.de>
Message-ID: <20070409131307.1f1fa864@localhost>

On Mon, 9 Apr 2007 12:41:32 +0200
Michael Buesch <mb at bu3sch.de> wrote:

> Put () around the bitwise &. (I think the compiler even complains about
> this).

Not needed, anyway. gcc doesn't complain and & has precedence over &&.


--
Ciao
Stefano


From dwmw2 at infradead.org  Mon Apr  9 16:37:43 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 09 Apr 2007 10:37:43 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <4619DAAD.3030805@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<4619D7E2.9090103@lwfinger.net>
	<1176098926.3208.37.camel@shinybook.infradead.org>
	<4619DAAD.3030805@lwfinger.net>
Message-ID: <1176129464.3208.40.camel@shinybook.infradead.org>

On Mon, 2007-04-09 at 01:18 -0500, Larry Finger wrote:
> I have started a project to build an out-of-tree version of bcm43xx,
> but it isn't ready for prime time. 

'cp -r drivers/net/wireless/bcm43xx ~/bcm43xx-for-hacking-on' usually
works for me. Then it's just

$ cd ~/bcm43xx-for-hacking-on
$ make -C /lib/modules/`uname -r`/build SUBDIRS=`pwd` modules


-- 
dwmw2



From larry.finger at lwfinger.net  Mon Apr  9 17:08:52 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 10:08:52 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
Message-ID: <461A5704.3080900@lwfinger.net>

John H. wrote:
> I ended up just using the following...
> 
> http://www.howtoforge.com/kernel_compilation_fedora
> 
> Can I get a patched version of the bcm43xx source and just compile that?

I just put a standalone tarball for the latest version of bcm43xx-softmac onto my FTP site at 
ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2. You should download it, unpack it, 
cd to bcm43xx-softmac-sa, issue a make command, and finish with a 'sudo make install'. That should 
build and install new versions of bcm43xx.ko and the various parts of ieee80211 and 
ieee80211-softmac. The make files have not been thoroughly tested, and I welcome your comments 
and/or difficulties.

Larry


From larry.finger at lwfinger.net  Mon Apr  9 17:49:38 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 10:49:38 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <1176120428.2693.12.camel@localhost.localdomain>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>	
	<200704082031.59934.flamingice@sourmilk.net>	
	<4619B90E.1030403@lwfinger.net>	
	<200704090043.34436.flamingice@sourmilk.net>
	<1176120428.2693.12.camel@localhost.localdomain>
Message-ID: <461A6092.20701@lwfinger.net>

Dan Williams wrote:
> On Mon, 2007-04-09 at 00:43 -0400, Michael Wu wrote:
>> Yes, I did reverse your conventions, but it makes more sense this way. (R)SSI 
>> is always valid to assign to (struct iw_quality).level and signal ((struct 
>> iw_quality).qual) is quite arbitrary and cannot be specified in specific 
>> units.
>>
>> Signal should be probably be renamed to qual to make it more clear that it is 
>> arbitrary.
> 
> In WE, qual is arbitrary within a few limits:
> 
> a) qual _must_ change on a linear scale
> b) a valid max_qual.qual must be set
> c) qual must fall within the bounds of [0, max_qual.qual] inclusive

Note that the quantity supplied by the bcm43xx firmware (called jssi in the code) varies linearly 
with the strength of the signal, whereas the quantity derived from it in bcm43xx_rssi_postprocess is 
quasi logarithmic. The statement in a) above would argue against reversal of my conventions. What 
happens in the other drivers that use mac80211?
> 
> If you report 'level' in dBm, you must set the IW_QUAL_DBM flag.
> Otherwise, 'level' _may_ be assumed to be RSSI.  If 'level' is dBm,
> max_qual.level must be 0.  If 'level' is RSSI, max_qual.level must be
> greater than 0, and level must fall within the bounds of [0,
> max_qual.level] inclusive.  Replace 'level' with 'noise' here for the
> rules for noise.
> 
> I don't particularly care if level/noise is RSSI _as long as_ you give
> the max RSSI for your part.  Different radio parts have different max
> RSSI values, and if you're writing a driver you sure better know them or
> figure some reasonable ones out by experimentation.  RSSI is entirely
> vendor defined and does _not_ conform to any rules.  Therefore we need
> the max RSSI to get usable signal strength reports from your part.
> 
> I know that 0 dBm isn't actually the upper bound, but in practice most
> people aren't going to get parts that go above that.  0 dBm should be
> considered a _limitation_ of WEXT that we obviously fix with
> cfg80211/nl80211 when we bring some sanity to signal strength reporting.

If the IW_QUAL_DBM flag is set, the "maximum" for that quantity is actually interpreted as a minimum 
and the range is interpreted as [maximum..0] using s8 arithmetic.

> Again, if you report level in RSSI, you must provide the max RSSI for
> your part in max_qual.level.

Agreed.

Larry



From Larry.Finger at lwfinger.net  Mon Apr  9 18:24:41 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 11:24:41 -0500
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
Message-ID: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>

There are messages arising from ieee80211_crypt that spam the logs of
casual users. These are changed to be logged only if the user specifically
requests the IEEE80211_DEBUG_DROP messages. In either case, the error/drop count
is incremented.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/net/ieee80211/ieee80211_crypt_tkip.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_crypt_tkip.c
+++ wireless-2.6/net/ieee80211/ieee80211_crypt_tkip.c
@@ -465,7 +465,7 @@ static int ieee80211_tkip_decrypt(struct
 
 	if (tkip_replay_check(iv32, iv16, tkey->rx_iv32, tkey->rx_iv16)) {
 		if (net_ratelimit()) {
-			printk(KERN_DEBUG "TKIP: replay detected: STA=" MAC_FMT
+			IEEE80211_DEBUG_DROP("TKIP: replay detected: STA=" MAC_FMT
 			       " previous TSC %08x%04x received TSC "
 			       "%08x%04x\n", MAC_ARG(hdr->addr2),
 			       tkey->rx_iv32, tkey->rx_iv16, iv32, iv16);
@@ -507,7 +507,7 @@ static int ieee80211_tkip_decrypt(struct
 			tkey->rx_phase1_done = 0;
 		}
 		if (net_ratelimit()) {
-			printk(KERN_DEBUG "TKIP: ICV error detected: STA="
+			IEEE80211_DEBUG_DROP("TKIP: ICV error detected: STA="
 			       MAC_FMT "\n", MAC_ARG(hdr->addr2));
 		}
 		tkey->dot11RSNAStatsTKIPICVErrors++;
Index: wireless-2.6/net/ieee80211/ieee80211_crypt_ccmp.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_crypt_ccmp.c
+++ wireless-2.6/net/ieee80211/ieee80211_crypt_ccmp.c
@@ -338,7 +338,7 @@ static int ieee80211_ccmp_decrypt(struct
 
 	if (ccmp_replay_check(pn, key->rx_pn)) {
 		if (net_ratelimit()) {
-			printk(KERN_DEBUG "CCMP: replay detected: STA=" MAC_FMT
+			IEEE80211_DEBUG_DROP("CCMP: replay detected: STA=" MAC_FMT
 			       " previous PN %02x%02x%02x%02x%02x%02x "
 			       "received PN %02x%02x%02x%02x%02x%02x\n",
 			       MAC_ARG(hdr->addr2), MAC_ARG(key->rx_pn),


From larry.finger at lwfinger.net  Mon Apr  9 21:10:37 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 14:10:37 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461A6D7D.5090009@Wetwork.Net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>
Message-ID: <461A8FAD.7060206@lwfinger.net>

Ehud Gavron wrote:
> Feedback: the make files work.
> 
> However...  this version of the driver is unusable.  It's worse than the 
> one I downloaded March 30th (latest 2.6.20).  Dell 1390 (BCM4311).  By 
> worse I mean that I won't stay associated with an AP; it reverts to 
> previous ESSID even after associating with new AP new ESSID, and it 
> reverts to having previous WEP key set even with explicit "iwconfig eth1 
> key off".  It also keeps turning the interface off (dmesg: bcm43xx: 
> Radio turned off) and requires ifconfig eth1 up to get it refired.
> Most important: an rmmod bcm43xx hung the system completely and it 
> needed a cold-start to continue.
> Tested at the Golden Nugget and McCarran airport... so I know it's not 
> any idosyncracy of MY networks ;)

Perhaps that is your penalty for computing rather than gambling. :-) I'm a resident of Nevada and we 
need the gaming tax income.

I don't know about the system hang when rmmod'ing the driver. I do that all the time here without 
any problems. There probably is some time window that you were unlucky enough to hit. Issuing an 
ifdown before the rmmod should fix that.

I have not tested trying to change AP's. What support software were you using? Was it just plain 
ifup/ifdown or something else like NetworkManager? Have you been able to associate with several AP's 
with the older version?

I don't know of anything in either bcm43xx or softmac that would cause it to try automatic roaming 
or change the ESSID. Perhaps someone else in the list knows better.

Larry



From larry.finger at lwfinger.net  Mon Apr  9 23:12:19 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 16:12:19 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704091316.23661.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<1176120428.2693.12.camel@localhost.localdomain>
	<461A6092.20701@lwfinger.net>
	<200704091316.23661.flamingice@sourmilk.net>
Message-ID: <461AAC33.4030409@lwfinger.net>

Michael Wu wrote:
> rt2x00 does not use qual. All other drivers in tree that use qual 
> (zd1211rw-mac80211, rtl8187) use the current convention.
> 
> I don't see anything in those 4 points that would argue against the current 
> conventions in mac80211. In fact, it sounds like you are arguing for it since 
> jssi, which you said is linear, goes to qual (after my patch is applied) 
> which wants a linear number.

The code is internally consistent. Now it is only the usage of the (r)ssi name to describe the 
logarithmic numbers that is confusing. Would you entertain a patch that changed (r)ssi to level in 
the structs and drivers to reduce the confusion? I have such a patch that works with 
bcm43xx-mac80211. In addition, all other drivers compile.

Larry


From gavron at Wetwork.Net  Tue Apr 10 00:01:38 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 09 Apr 2007 15:01:38 -0700
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461A8FAD.7060206@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>
	<461A8FAD.7060206@lwfinger.net>
Message-ID: <461AB7C2.4010600@Wetwork.Net>

Possibly.  I'll ensure an ifdown before rmmod in the future.  Upon my 
return to home it associated and wep'ized but was still unable to 
exchange traffic (rxcount and txcount incrementing on if, wireshark sees 
traffic, but the interface refuses to stay ifconfig'd up with an ip.  
Turns radio off. Makes ip go away.  Solid 85/100 on the iwconfig.  rmmod 
bcm43xx; ndiswrapper works.)

Removed new modules from the ftp download, make modules_install in the 
kernel source tree from 03/30, modprobe bcm43xx... works ok. 

Plain iwconfig/ifconfig not even using network-scripts.  Various APs at 
the Golden Nugget, McCarran, and now my house.  Work fine with older 
code.  Work with ndiswrapper.  Did not work with newer code, although 
like I said it wasn't that it "failed" but rather wouldn't stay up long 
enough to pass IP packets or keep the address on the interface.

Let me know what other diagnostics/tests I can run... I just got back 
from five days in Vegas, so I need a drink and some debugging to unwind ;)

Ehud

Larry Finger wrote:
> Ehud Gavron wrote:
>   
>> Feedback: the make files work.
>>
>> However...  this version of the driver is unusable.  It's worse than the 
>> one I downloaded March 30th (latest 2.6.20).  Dell 1390 (BCM4311).  By 
>> worse I mean that I won't stay associated with an AP; it reverts to 
>> previous ESSID even after associating with new AP new ESSID, and it 
>> reverts to having previous WEP key set even with explicit "iwconfig eth1 
>> key off".  It also keeps turning the interface off (dmesg: bcm43xx: 
>> Radio turned off) and requires ifconfig eth1 up to get it refired.
>> Most important: an rmmod bcm43xx hung the system completely and it 
>> needed a cold-start to continue.
>> Tested at the Golden Nugget and McCarran airport... so I know it's not 
>> any idosyncracy of MY networks ;)
>>     
>
> Perhaps that is your penalty for computing rather than gambling. :-) I'm a resident of Nevada and we 
> need the gaming tax income.
>
> I don't know about the system hang when rmmod'ing the driver. I do that all the time here without 
> any problems. There probably is some time window that you were unlucky enough to hit. Issuing an 
> ifdown before the rmmod should fix that.
>
> I have not tested trying to change AP's. What support software were you using? Was it just plain 
> ifup/ifdown or something else like NetworkManager? Have you been able to associate with several AP's 
> with the older version?
>
> I don't know of anything in either bcm43xx or softmac that would cause it to try automatic roaming 
> or change the ESSID. Perhaps someone else in the list knows better.
>
> Larry
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070409/a828699f/attachment.bin>

From larry.finger at lwfinger.net  Tue Apr 10 01:27:44 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 18:27:44 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AB7C2.4010600@Wetwork.Net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>
	<461A8FAD.7060206@lwfinger.net> <461AB7C2.4010600@Wetwork.Net>
Message-ID: <461ACBF0.6040600@lwfinger.net>

Ehud Gavron wrote:
> Possibly.  I'll ensure an ifdown before rmmod in the future.  Upon my 
> return to home it associated and wep'ized but was still unable to 
> exchange traffic (rxcount and txcount incrementing on if, wireshark sees 
> traffic, but the interface refuses to stay ifconfig'd up with an ip.  
> Turns radio off. Makes ip go away.  Solid 85/100 on the iwconfig.  rmmod 
> bcm43xx; ndiswrapper works.)
> 
> Removed new modules from the ftp download, make modules_install in the 
> kernel source tree from 03/30, modprobe bcm43xx... works ok.
> Plain iwconfig/ifconfig not even using network-scripts.  Various APs at 
> the Golden Nugget, McCarran, and now my house.  Work fine with older 
> code.  Work with ndiswrapper.  Did not work with newer code, although 
> like I said it wasn't that it "failed" but rather wouldn't stay up long 
> enough to pass IP packets or keep the address on the interface.
> 
> Let me know what other diagnostics/tests I can run... I just got back 
> from five days in Vegas, so I need a drink and some debugging to unwind ;)

Obviously, you weren't in Vegas for fun. After 5 days there, I usually need to take a break from 
drinking, and my mind isn't really good for debugging.

If you could, I would appreciate you grabbing the appropriate combined patch for your kernel and 
testing it. The code should be the same as what was in the tarball, but who knows.

Thanks,

Larry



From proski at gnu.org  Tue Apr 10 02:05:43 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 20:05:43 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461A5704.3080900@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net>
Message-ID: <1176163543.9159.51.camel@dv>

On Mon, 2007-04-09 at 10:08 -0500, Larry Finger wrote:
> John H. wrote:
> > I ended up just using the following...
> > 
> > http://www.howtoforge.com/kernel_compilation_fedora
> > 
> > Can I get a patched version of the bcm43xx source and just compile that?
> 
> I just put a standalone tarball for the latest version of bcm43xx-softmac onto my FTP site at 
> ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2. You should download it, unpack it, 
> cd to bcm43xx-softmac-sa, issue a make command, and finish with a 'sudo make install'. That should 
> build and install new versions of bcm43xx.ko and the various parts of ieee80211 and 
> ieee80211-softmac. The make files have not been thoroughly tested, and I welcome your comments 
> and/or difficulties.

Just a quick feedback on that package.

Please don't include Module.symvers, your version is not useful for
anyone else.  It will be generated is needed.

I'm getting a compile error:
/home/proski/src/bcm43xx-softmac-sa/bcm43xx/bcm43xx.h:896:3: error:
#error "Using neither DMA nor PIO? Confused..."

I think the best solution would be to define both 
CONFIG_BCM43XX_DMA and CONFIG_BCM43XX_PIO.  You make want to make it
configurable, but then don't compile bcm43xx_pio.c and bcm43xx_dma.c
unconditionally.

The debugfs requirement seems to defeat the whole purpose of the
standalone distribution.

BCM43xx_NR_LOGGED_XMITSTATUS is defined only if CONFIG_BCM43XX_DEBUG is
defined, but bcm43xx_debugfs.c uses it unconditionally.

There may be more compile problems, but I gave up at this point.

Speaking of the build system, you may want to have a warning in case if
anything that is compiled as a module (either bcm43xx or softmac) is
already available and linked into the kernel.  Make sure the checks
don't affect "make clean" and similar maintenance commands.

-- 
Regards,
Pavel Roskin



From proski at gnu.org  Tue Apr 10 02:15:30 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 20:15:30 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461A8FAD.7060206@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>
	<461A8FAD.7060206@lwfinger.net>
Message-ID: <1176164130.9159.58.camel@dv>

On Mon, 2007-04-09 at 14:10 -0500, Larry Finger wrote:

> I have not tested trying to change AP's. What support software were you using? Was it just plain 
> ifup/ifdown or something else like NetworkManager? Have you been able to associate with several AP's 
> with the older version?

I've seen bcm43xx go crazy when I specify AP manually or make it
re-associate.  In one case, I observed the card sending packet using the
old AP as the BSSID and the new AP and the destination address.  "iwpriv
ethX ap auto" makes the AP show as "Invalid" with no possibility to
recover.

My rule is to always unload bcm43xx before trying to associate to
another AP and to never set AP manually.

I realize that it's an issue with softmac, and that softmac in the
kernel is not the latest.  Perhaps it should be upgraded, but I'm not
very good at convincing people, and I'm vary of starting another massive
tread before I catch up with my e-mail queue.

-- 
Regards,
Pavel Roskin



From gavron at Wetwork.Net  Tue Apr 10 02:52:43 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 09 Apr 2007 17:52:43 -0700
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176163543.9159.51.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
Message-ID: <461ADFDB.8070400@Wetwork.Net>

Removed module.symvers. Make; make install.  rmmod bcm43xx hung (yes I 
forgot to ifconfig down ;) reboot... module now works perfectly.

I am unable to see the behavior I saw before: namely ifconfig rxcount 
goes to 0, txcount goes low, radio off, radio on, rxcount+, txcount+++, 
dhcp works, give it a second, down again. repeats.

Right now what I'm seeing is a perfectly working system.  I have moved 
different APs within the same ESSID (WEP enabled) and no problems are 
evident. 
I'm getting TCP throughput of 7Mbps (on my Comcast 6Mbps link) and I 
haven't configured any in-LAN testing facilities (yet. The night is young.)


Ehud
PS I know that newbies get the respect of somewhere between Peter who 
cried Wolf and zero.  I swear it really (repeatedly) didn't work, and 
now with that one (insignificant...) change it works perfectly.  The 
reboot is not a factor as I'd done three on the old system.  (Golden 
Nugget.  Overnight.  McCarran.  Home.)

Pavel Roskin wrote:
> On Mon, 2007-04-09 at 10:08 -0500, Larry Finger wrote:
>   
>> John H. wrote:
>>     
>>> I ended up just using the following...
>>>
>>> http://www.howtoforge.com/kernel_compilation_fedora
>>>
>>> Can I get a patched version of the bcm43xx source and just compile that?
>>>       
>> I just put a standalone tarball for the latest version of bcm43xx-softmac onto my FTP site at 
>> ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2. You should download it, unpack it, 
>> cd to bcm43xx-softmac-sa, issue a make command, and finish with a 'sudo make install'. That should 
>> build and install new versions of bcm43xx.ko and the various parts of ieee80211 and 
>> ieee80211-softmac. The make files have not been thoroughly tested, and I welcome your comments 
>> and/or difficulties.
>>     
>
> Just a quick feedback on that package.
>
> Please don't include Module.symvers, your version is not useful for
> anyone else.  It will be generated is needed.
>
> I'm getting a compile error:
> /home/proski/src/bcm43xx-softmac-sa/bcm43xx/bcm43xx.h:896:3: error:
> #error "Using neither DMA nor PIO? Confused..."
>
> I think the best solution would be to define both 
> CONFIG_BCM43XX_DMA and CONFIG_BCM43XX_PIO.  You make want to make it
> configurable, but then don't compile bcm43xx_pio.c and bcm43xx_dma.c
> unconditionally.
>
> The debugfs requirement seems to defeat the whole purpose of the
> standalone distribution.
>
> BCM43xx_NR_LOGGED_XMITSTATUS is defined only if CONFIG_BCM43XX_DEBUG is
> defined, but bcm43xx_debugfs.c uses it unconditionally.
>
> There may be more compile problems, but I gave up at this point.
>
> Speaking of the build system, you may want to have a warning in case if
> anything that is compiled as a module (either bcm43xx or softmac) is
> already available and linked into the kernel.  Make sure the checks
> don't affect "make clean" and similar maintenance commands.
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070409/67442023/attachment.bin>

From larry.finger at lwfinger.net  Tue Apr 10 02:59:12 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 19:59:12 -0500
Subject: [PATCH] mac80211: Report correct wireless statistics
In-Reply-To: <200704091902.14301.flamingice@sourmilk.net>
References: <461877ea.cyxM3SSnr6WhYkjX%Larry.Finger@lwfinger.net>
	<200704091316.23661.flamingice@sourmilk.net>
	<461AAC33.4030409@lwfinger.net>
	<200704091902.14301.flamingice@sourmilk.net>
Message-ID: <461AE160.6060404@lwfinger.net>

Michael Wu wrote:
>>
> Absolutely - it is confusing since dBm can also be specified in addition to 
> RSSI. Renaming signal to qual or something along those lines would also be 
> useful IMHO, but if you're okay with it as it stands, I don't mind it.

I changed signal to qual and (r)ssi to level. Once these changes were made, iwconfig gives me the 
following:

Link Quality=57/100  Signal level=-37 dBm  Noise level=-70 dBm

The patch is pretty large and touches a lot of files, but if one is to be able to bisect around it, 
it has to be a single commit. As the patch entitled "[PATCH] bcm43xx-mac80211: Fix error in 
initiallizing max RSSI and max signal" has been accepted into Michael Buesch's tree, I have assumed 
that it is already included.

Larry
---

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3760,7 +3760,7 @@ static int bcm43xx_wireless_init(struct
  		    IEEE80211_HW_MONITOR_DURING_OPER |
  		    IEEE80211_HW_DEVICE_HIDES_WEP |
  		    IEEE80211_HW_WEP_INCLUDE_IV;
-	hw->max_signal = -110;
+	hw->max_qual = 100;
  	hw->max_rssi = BCM43xx_RX_MAX_SSI;
  	hw->max_noise = -110;
  	hw->queues = 1;
Index: wireless-dev/include/net/mac80211.h
===================================================================
--- wireless-dev.orig/include/net/mac80211.h
+++ wireless-dev/include/net/mac80211.h
@@ -227,8 +227,8 @@ struct ieee80211_rx_status {
  	int freq; /* receive frequency in Mhz */
  	int channel;
  	int phymode;
-	int ssi;
-	int signal; /* used as qual in statistics reporting */
+	int level;  /* used in statistics reporting */
+	int qual; /* used in statistics reporting */
  	int noise;
  	int antenna;
  	int rate;
@@ -540,7 +540,7 @@ struct ieee80211_hw {
  	/* Maximum values for various statistics.
  	 * Leave at 0 to indicate no support. Use negative numbers for dBm. */
  	s8 max_rssi;
-	s8 max_signal;
+	s8 max_qual;
  	s8 max_noise;

  	/* Number of available hardware TX queues for data packets.
Index: wireless-dev/net/mac80211/ieee80211.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211.c
+++ wireless-dev/net/mac80211/ieee80211.c
@@ -2705,7 +2705,7 @@ ieee80211_fill_frame_info(struct ieee802
  		fi->antenna = htonl(status->antenna);
  		fi->priority = 0xffffffff; /* no clue */
  		fi->ssi_type = htonl(ieee80211_ssi_raw);
-		fi->ssi_signal = htonl(status->ssi);
+		fi->ssi_signal = htonl(status->level);
  		fi->ssi_noise = 0x00000000;
  		fi->encoding = 0;
  	} else {
@@ -3352,10 +3352,10 @@ ieee80211_rx_h_sta_process(struct ieee80

  	sta->rx_fragments++;
  	sta->rx_bytes += rx->skb->len;
-	sta->last_rssi = (sta->last_rssi * 15 +
-			  rx->u.rx.status->ssi) / 16;
-	sta->last_signal = (sta->last_signal * 15 +
-			    rx->u.rx.status->signal) / 16;
+	sta->last_level = (sta->last_level * 15 +
+			  rx->u.rx.status->level) / 16;
+	sta->last_qual = (sta->last_qual * 15 +
+			    rx->u.rx.status->qual) / 16;
  	sta->last_noise = (sta->last_noise * 15 +
  			   rx->u.rx.status->noise) / 16;

@@ -4643,7 +4643,7 @@ int ieee80211_register_hw(struct ieee802

  	local->wstats_flags |= local->hw.max_rssi ?
  			       IW_QUAL_LEVEL_UPDATED : IW_QUAL_LEVEL_INVALID;
-	local->wstats_flags |= local->hw.max_signal ?
+	local->wstats_flags |= local->hw.max_qual ?
  			       IW_QUAL_QUAL_UPDATED : IW_QUAL_QUAL_INVALID;
  	local->wstats_flags |= local->hw.max_noise ?
  			       IW_QUAL_NOISE_UPDATED : IW_QUAL_NOISE_INVALID;
Index: wireless-dev/net/mac80211/ieee80211_sta.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_sta.c
+++ wireless-dev/net/mac80211/ieee80211_sta.c
@@ -1192,8 +1192,8 @@ static void ieee80211_rx_mgmt_assoc_resp
  		}
  		bss = ieee80211_rx_bss_get(dev, ifsta->bssid);
  		if (bss) {
-			sta->last_rssi = bss->rssi;
-			sta->last_signal = bss->signal;
+			sta->last_level = bss->level;
+			sta->last_qual = bss->qual;
  			sta->last_noise = bss->noise;
  			ieee80211_rx_bss_put(dev, bss);
  		}
@@ -1582,8 +1582,8 @@ static void ieee80211_rx_bss_info(struct
  	}
  	bss->timestamp = timestamp;
  	bss->last_update = jiffies;
-	bss->rssi = rx_status->ssi;
-	bss->signal = rx_status->signal;
+	bss->level = rx_status->level;
+	bss->qual = rx_status->qual;
  	bss->noise = rx_status->noise;
  	if (!beacon)
  		bss->probe_resp++;
@@ -2060,7 +2060,7 @@ static int ieee80211_sta_config_auth(str
  	struct ieee80211_local *local = wdev_priv(dev->ieee80211_ptr);
  	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
  	struct ieee80211_sta_bss *bss, *selected = NULL;
-	int top_rssi = 0, freq;
+	int top_level = 0, freq;

  	if (!ifsta->auto_channel_sel && !ifsta->auto_bssid_sel &&
  	    !ifsta->auto_ssid_sel) {
@@ -2090,9 +2090,9 @@ static int ieee80211_sta_config_auth(str
  		    !ieee80211_sta_match_ssid(ifsta, bss->ssid, bss->ssid_len))
  			continue;

-		if (top_rssi < bss->rssi) {
+		if (top_level < bss->level) {
  			selected = bss;
-			top_rssi = bss->rssi;
+			top_level = bss->level;
  		}
  	}
  	if (selected)
@@ -2822,8 +2822,8 @@ ieee80211_sta_scan_result(struct net_dev

  	memset(&iwe, 0, sizeof(iwe));
  	iwe.cmd = IWEVQUAL;
-	iwe.u.qual.qual = bss->signal;
-	iwe.u.qual.level = bss->rssi;
+	iwe.u.qual.qual = bss->qual;
+	iwe.u.qual.level = bss->level;
  	iwe.u.qual.noise = bss->noise;
  	iwe.u.qual.updated = local->wstats_flags;
  	current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
@@ -2908,7 +2908,7 @@ ieee80211_sta_scan_result(struct net_dev

  		memset(&iwe, 0, sizeof(iwe));
  		iwe.cmd = IWEVCUSTOM;
-		sprintf(buf, "rssi=%d", bss->rssi);
+		sprintf(buf, "level=%d", bss->level);
  		iwe.u.data.length = strlen(buf);
  		current_ev = iwe_stream_add_point(current_ev, end_buf, &iwe,
  						  buf);
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
@@ -460,7 +460,7 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
  	u16 phystat0, phystat3, chanstat, mactime;
  	u32 macstat;
  	u16 chanid;
-	u8 jssi;
+	u8 qual;
  	int padding;

  	memset(&status, 0, sizeof(status));
@@ -468,7 +468,7 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
  	/* Get metadata about the frame from the header. */
  	phystat0 = le16_to_cpu(rxhdr->phy_status0);
  	phystat3 = le16_to_cpu(rxhdr->phy_status3);
-	jssi = rxhdr->jssi;
+	qual = rxhdr->jssi;
  	macstat = le32_to_cpu(rxhdr->mac_status);
  	mactime = le16_to_cpu(rxhdr->mac_time);
  	chanstat = le16_to_cpu(rxhdr->channel);
@@ -529,12 +529,12 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
  		}
  	}

-	status.signal = bcm43xx_rssi_postprocess(dev, jssi,
+	status.level = bcm43xx_rssi_postprocess(dev, qual,
  					      (phystat0 & BCM43xx_RX_PHYST0_OFDM),
  					      (phystat0 & BCM43xx_RX_PHYST0_GAINCTL),
  					      (phystat3 & BCM43xx_RX_PHYST3_TRSTATE));
  	status.noise = dev->stats.link_noise;
-	status.ssi = jssi;
+	status.qual = qual;
  	if (phystat0 & BCM43xx_RX_PHYST0_OFDM)
  		status.rate = bcm43xx_plcp_get_bitrate_ofdm(plcp);
  	else
Index: wireless-dev/net/mac80211/debugfs_sta.c
===================================================================
--- wireless-dev.orig/net/mac80211/debugfs_sta.c
+++ wireless-dev/net/mac80211/debugfs_sta.c
@@ -76,8 +76,8 @@ STA_FILE(txrate, txrate, RATE);
  STA_FILE(last_txrate, last_txrate, RATE);
  STA_FILE(tx_retry_failed, tx_retry_failed, LU);
  STA_FILE(tx_retry_count, tx_retry_count, LU);
-STA_FILE(last_rssi, last_rssi, D);
-STA_FILE(last_signal, last_signal, D);
+STA_FILE(last_level, last_level, D);
+STA_FILE(last_qual, last_qual, D);
  STA_FILE(last_noise, last_noise, D);
  STA_FILE(channel_use, channel_use, D);
  STA_FILE(wep_weak_iv_count, wep_weak_iv_count, D);
Index: wireless-dev/net/mac80211/ieee80211_i.h
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_i.h
+++ wireless-dev/net/mac80211/ieee80211_i.h
@@ -82,7 +82,7 @@ struct ieee80211_sta_bss {
  	int hw_mode;
  	int channel;
  	int freq;
-	int rssi, signal, noise;
+	int level, qual, noise;
  	u8 *wpa_ie;
  	size_t wpa_ie_len;
  	u8 *rsn_ie;
Index: wireless-dev/net/mac80211/ieee80211_ioctl.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_ioctl.c
+++ wireless-dev/net/mac80211/ieee80211_ioctl.c
@@ -445,7 +445,7 @@ static int ieee80211_ioctl_get_info_sta(
  		skb_queue_len(&sta->ps_tx_buf);
  	param->u.get_info_sta.tx_retry_failed = sta->tx_retry_failed;
  	param->u.get_info_sta.tx_retry_count = sta->tx_retry_count;
-	param->u.get_info_sta.last_rssi = sta->last_rssi;
+	param->u.get_info_sta.last_rssi = sta->last_level;
  	param->u.get_info_sta.last_ack_rssi = sta->last_ack_rssi[2];

  	sta_info_put(sta);
@@ -1593,12 +1593,12 @@ static int ieee80211_ioctl_giwrange(stru
  	range->min_frag = 256;
  	range->max_frag = 2346;

-	range->max_qual.qual = local->hw.max_signal;
+	range->max_qual.qual = local->hw.max_qual;
  	range->max_qual.level = local->hw.max_rssi;
  	range->max_qual.noise = local->hw.max_noise;
  	range->max_qual.updated = local->wstats_flags;

-	range->avg_qual.qual = local->hw.max_signal/2;
+	range->avg_qual.qual = local->hw.max_qual/2;
  	range->avg_qual.level = 0;
  	range->avg_qual.noise = 0;
  	range->avg_qual.updated = local->wstats_flags;
@@ -3084,8 +3084,8 @@ static struct iw_statistics *ieee80211_g
  		wstats->qual.noise = 0;
  		wstats->qual.updated = IW_QUAL_ALL_INVALID;
  	} else {
-		wstats->qual.level = sta->last_rssi;
-		wstats->qual.qual = sta->last_signal;
+		wstats->qual.level = sta->last_level;
+		wstats->qual.qual = sta->last_qual;
  		wstats->qual.noise = sta->last_noise;
  		wstats->qual.updated = local->wstats_flags;
  		sta_info_put(sta);
Index: wireless-dev/net/mac80211/sta_info.h
===================================================================
--- wireless-dev.orig/net/mac80211/sta_info.h
+++ wireless-dev/net/mac80211/sta_info.h
@@ -82,8 +82,8 @@ struct sta_info {
  	unsigned long rx_fragments; /* number of received MPDUs */
  	unsigned long rx_dropped; /* number of dropped MPDUs from this STA */

-	int last_rssi; /* RSSI of last received frame from this STA */
-	int last_signal; /* signal of last received frame from this STA */
+	int last_level; /* level of last received frame from this STA */
+	int last_qual; /* qual of last received frame from this STA */
  	int last_noise; /* noise of last received frame from this STA */
  	int last_ack_rssi[3]; /* RSSI of last received ACKs from this STA */
  	unsigned long last_ack;
Index: wireless-dev/drivers/net/wireless/mac80211/adm8211/adm8211.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/adm8211/adm8211.c
+++ wireless-dev/drivers/net/wireless/mac80211/adm8211/adm8211.c
@@ -540,9 +540,9 @@ static void adm8211_interrupt_rci(struct
  			struct ieee80211_rx_status rx_status = {0};

  			if (priv->revid < ADM8211_REV_CA)
-				rx_status.ssi = rssi;
+				rx_status.level = rssi;
  			else
-				rx_status.ssi = 100 - rssi;
+				rx_status.level = 100 - rssi;

  			if (rate <= 4)
  				rx_status.rate = rate_tbl[rate];
Index: wireless-dev/drivers/net/wireless/mac80211/p54/prism54common.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/p54/prism54common.c
+++ wireless-dev/drivers/net/wireless/mac80211/p54/prism54common.c
@@ -282,7 +282,7 @@ static void p54_rx_data(struct ieee80211
  	struct ieee80211_rx_status rx_status = {0};
  	u16 freq = le16_to_cpu(hdr->freq);

-	rx_status.ssi = hdr->rssi;	/* TODO: check this */
+	rx_status.level = hdr->rssi;	/* TODO: check this */
  	rx_status.rate = min(hdr->rate + 1, 12);	/* TODO: check this */
  	rx_status.channel = freq == 2484 ? 14 : (freq - 2407)/5;
  	rx_status.freq = freq;
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
@@ -1742,7 +1742,7 @@ static void rt2500pci_rxdone(struct work
  		 * Update link statistics
  		 */
  		rt2x00_update_link_rssi(&rt2x00dev->link,
-			rt2x00dev->rx_status.ssi);
+			rt2x00dev->rx_status.level);

  skip_entry:
  		rt2x00_set_field32(&word0, RXD_W0_OWNER_NIC, 1);
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
@@ -1702,7 +1702,7 @@ static void rt2500usb_interrupt_rxdone(s
  	/*
  	 * Update link statistics
  	 */
-	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.ssi);
+	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.level);

  skip_entry:
  	if (!GET_FLAG(ring->rt2x00dev, DEVICE_ENABLED_RADIO))
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
@@ -157,7 +157,7 @@ void rt2x00lib_update_rx_stats(struct rt
  	}

  	rt2x00dev->rx_status.rate = val;
-	rt2x00dev->rx_status.ssi = rssi;
+	rt2x00dev->rx_status.level = rssi;
  	rt2x00dev->rx_status.noise = rt2x00_get_link_noise(&rt2x00dev->link);
  }
  EXPORT_SYMBOL_GPL(rt2x00lib_update_rx_stats);
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
@@ -2047,7 +2047,7 @@ static void rt61pci_rxdone(struct work_s
  		 * Update link statistics
  		 */
  		rt2x00_update_link_rssi(&rt2x00dev->link,
-			rt2x00dev->rx_status.ssi);
+			rt2x00dev->rx_status.level);

  skip_entry:
  		rt2x00_set_field32(&word0, RXD_W0_OWNER_NIC, 1);
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
@@ -1858,7 +1858,7 @@ static void rt73usb_interrupt_rxdone(str
  	/*
  	 * Update link statistics
  	 */
-	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.ssi);
+	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.level);

  skip_entry:
  	if (!GET_FLAG(ring->rt2x00dev, DEVICE_ENABLED_RADIO))
Index: wireless-dev/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
+++ wireless-dev/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
@@ -161,8 +161,8 @@ static void rtl8187_rx_cb(struct urb *ur
  	}

  	rx_status.antenna = (hdr->signal >> 7) & 1;
-	rx_status.signal = 64 - min(hdr->noise, (u8)64);
-	rx_status.ssi = signal;
+	rx_status.qual = 64 - min(hdr->noise, (u8)64);
+	rx_status.level = signal;
  	rx_status.rate = priv->rates[rate].rate;
  	rx_status.freq = dev->conf.freq;
  	rx_status.channel = dev->conf.channel;
@@ -609,7 +609,7 @@ static int __devinit rtl8187_probe(struc
  	dev->extra_tx_headroom = sizeof(struct rtl8187_tx_hdr);
  	dev->queues = 1;
  	dev->max_rssi = 65;
-	dev->max_signal = 64;
+	dev->max_qual = 64;

  	for (i = 0; i < 2; i++)
  		if ((err = ieee80211_register_hwmode(dev, &priv->modes[i])))
Index: wireless-dev/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
+++ wireless-dev/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
@@ -407,8 +407,8 @@ static int fill_rx_stats(struct ieee8021
  	stats->channel = _zd_chip_get_channel(&mac->chip);
  	stats->freq = zd_channels[stats->channel - 1].freq;
  	stats->phymode = MODE_IEEE80211G;
-	stats->ssi = zd_rx_strength_percent(status->signal_strength);
-	stats->signal = zd_rx_qual_percent(buffer,
+	stats->level = zd_rx_strength_percent(status->signal_strength);
+	stats->qual = zd_rx_qual_percent(buffer,
  		                          length - sizeof(struct rx_status),
  		                          status);
  	stats->rate = zd_rx_rate(buffer, status);
@@ -453,7 +453,7 @@ static int filter_ack(struct ieee80211_h
  	if (control) {
  		memcpy(&status.control, control, sizeof(status.control));
  		status.flags = IEEE80211_TX_STATUS_ACK;
-		status.ack_signal = stats->ssi;
+		status.ack_signal = stats->level;
  		ieee80211_tx_status_irqsafe(dev, skb, &status);
  		kfree(control);
  	} else
@@ -631,7 +631,7 @@ struct ieee80211_hw *zd_mac_alloc(struct
  	dev->flags = IEEE80211_HW_RX_INCLUDES_FCS |
  		     IEEE80211_HW_WEP_INCLUDE_IV;
  	dev->max_rssi = 100;
-	dev->max_signal = 100;
+	dev->max_qual = 100;

  	dev->queues = 1;
  	dev->extra_tx_headroom = sizeof(struct zd_ctrlset);

----





From proski at gnu.org  Tue Apr 10 03:04:45 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 21:04:45 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461ADFDB.8070400@Wetwork.Net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net>
Message-ID: <1176167085.4065.26.camel@dv>

On Mon, 2007-04-09 at 17:52 -0700, Ehud Gavron wrote:
> Removed module.symvers. Make; make install.  rmmod bcm43xx hung (yes I 
> forgot to ifconfig down ;) reboot... module now works perfectly.

This means that you already have CONFIG_BCM43XX_DEBUG defined
in .config, right?  I guess you had to recompile the kernel anyway, or
at least reconfigure it.  That's not how a _standalone_ driver should
work, in my opinion.

> I am unable to see the behavior I saw before: namely ifconfig rxcount 
> goes to 0, txcount goes low, radio off, radio on, rxcount+, txcount+++, 
> dhcp works, give it a second, down again. repeats.
> 
> Right now what I'm seeing is a perfectly working system.  I have moved 
> different APs within the same ESSID (WEP enabled) and no problems are 
> evident. 
> I'm getting TCP throughput of 7Mbps (on my Comcast 6Mbps link) and I 
> haven't configured any in-LAN testing facilities (yet. The night is young.)

Yes, the current bcm43xx is pretty good at data transfer.  And it
doesn't crash my Mac anymore, even though I put my oldest card there,
just to make things harder.  And it works with a bizarre Linksys AP to
which bcm43xx_mac80211 won't connect.

Just be careful with rates of 48 and 54 Mbps, they are still unstable.
The default 24 Mbps is a good default for me.

-- 
Regards,
Pavel Roskin



From gavron at Wetwork.Net  Tue Apr 10 03:12:39 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 09 Apr 2007 18:12:39 -0700
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176167085.4065.26.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
Message-ID: <461AE487.1060501@Wetwork.Net>

Yes, it's a kernel from source, renamed to the current fc6 uname-r for a 
closed video driver.
[root at egdell linux]# cd /usr/src/linux && grep -i bcm .config | grep -i 
debug
CONFIG_BCM43XX_DEBUG=y
CONFIG_BCM43XX_MAC80211_DEBUG=y

Ehud

Pavel Roskin wrote:
> On Mon, 2007-04-09 at 17:52 -0700, Ehud Gavron wrote:
>   
>> Removed module.symvers. Make; make install.  rmmod bcm43xx hung (yes I 
>> forgot to ifconfig down ;) reboot... module now works perfectly.
>>     
>
> This means that you already have CONFIG_BCM43XX_DEBUG defined
> in .config, right?  I guess you had to recompile the kernel anyway, or
> at least reconfigure it.  That's not how a _standalone_ driver should
> work, in my opinion.
>
>   
>> I am unable to see the behavior I saw before: namely ifconfig rxcount 
>> goes to 0, txcount goes low, radio off, radio on, rxcount+, txcount+++, 
>> dhcp works, give it a second, down again. repeats.
>>
>> Right now what I'm seeing is a perfectly working system.  I have moved 
>> different APs within the same ESSID (WEP enabled) and no problems are 
>> evident. 
>> I'm getting TCP throughput of 7Mbps (on my Comcast 6Mbps link) and I 
>> haven't configured any in-LAN testing facilities (yet. The night is young.)
>>     
>
> Yes, the current bcm43xx is pretty good at data transfer.  And it
> doesn't crash my Mac anymore, even though I put my oldest card there,
> just to make things harder.  And it works with a bizarre Linksys AP to
> which bcm43xx_mac80211 won't connect.
>
> Just be careful with rates of 48 and 54 Mbps, they are still unstable.
> The default 24 Mbps is a good default for me.
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070409/69f255ba/attachment.bin>

From larry.finger at lwfinger.net  Tue Apr 10 03:48:47 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 20:48:47 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176163543.9159.51.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	<1176022457.8459.21.camel@johannes.berg>	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	<1176079943.3208.22.camel@shinybook.infradead.org>	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>	<461A5704.3080900@lwfinger.net>
	<1176163543.9159.51.camel@dv>
Message-ID: <461AECFF.90204@lwfinger.net>

Pavel Roskin wrote:

Thanks for the feedback. I knew it wasn't ready, but I appreciate your comments.
> 
> Just a quick feedback on that package.
> 
> Please don't include Module.symvers, your version is not useful for
> anyone else.  It will be generated is needed.

Done.

> I'm getting a compile error:
> /home/proski/src/bcm43xx-softmac-sa/bcm43xx/bcm43xx.h:896:3: error:
> #error "Using neither DMA nor PIO? Confused..."
> 
> I think the best solution would be to define both 
> CONFIG_BCM43XX_DMA and CONFIG_BCM43XX_PIO.  You make want to make it
> configurable, but then don't compile bcm43xx_pio.c and bcm43xx_dma.c
> unconditionally.

I made PIO to be conditional and fixed it for conditional compilation of bcm43xx_pio.c. DMA mode is 
always turned on.

> The debugfs requirement seems to defeat the whole purpose of the
> standalone distribution.

It is conditional and now turned off.

> BCM43xx_NR_LOGGED_XMITSTATUS is defined only if CONFIG_BCM43XX_DEBUG is
> defined, but bcm43xx_debugfs.c uses it unconditionally.

That was a type in the makefile.

> There may be more compile problems, but I gave up at this point.
> 
> Speaking of the build system, you may want to have a warning in case if
> anything that is compiled as a module (either bcm43xx or softmac) is
> already available and linked into the kernel.  Make sure the checks
> don't affect "make clean" and similar maintenance commands.

I'm not sure how to do this, but will do some more investigation.

There is a new version on the FTP site. I would appreciate seeing if that will work for you.

Larry




From larry.finger at lwfinger.net  Tue Apr 10 03:58:43 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 20:58:43 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176167085.4065.26.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	
	<1176022457.8459.21.camel@johannes.berg>	
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	
	<1176079943.3208.22.camel@shinybook.infradead.org>	
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>	
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>	
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
Message-ID: <461AEF53.4010800@lwfinger.net>

Pavel Roskin wrote:
> On Mon, 2007-04-09 at 17:52 -0700, Ehud Gavron wrote:
>> Removed module.symvers. Make; make install.  rmmod bcm43xx hung (yes I 
>> forgot to ifconfig down ;) reboot... module now works perfectly.
> 
> This means that you already have CONFIG_BCM43XX_DEBUG defined
> in .config, right?  I guess you had to recompile the kernel anyway, or
> at least reconfigure it.  That's not how a _standalone_ driver should
> work, in my opinion.

That was a typo.

>> I am unable to see the behavior I saw before: namely ifconfig rxcount 
>> goes to 0, txcount goes low, radio off, radio on, rxcount+, txcount+++, 
>> dhcp works, give it a second, down again. repeats.
>>
>> Right now what I'm seeing is a perfectly working system.  I have moved 
>> different APs within the same ESSID (WEP enabled) and no problems are 
>> evident. 
>> I'm getting TCP throughput of 7Mbps (on my Comcast 6Mbps link) and I 
>> haven't configured any in-LAN testing facilities (yet. The night is young.)
> 
> Yes, the current bcm43xx is pretty good at data transfer.  And it
> doesn't crash my Mac anymore, even though I put my oldest card there,
> just to make things harder.  And it works with a bizarre Linksys AP to
> which bcm43xx_mac80211 won't connect.

Do you think that is a Linksys AP problem? I cannot get mac80211 to connect to my WRT54G V5 AP?

> Just be careful with rates of 48 and 54 Mbps, they are still unstable.
> The default 24 Mbps is a good default for me.

The sweet spot for my 4311 is at 36 Mbs, but 24 is better for most cards. That is why it is the default.

Larry


From larry.finger at lwfinger.net  Tue Apr 10 04:12:55 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 21:12:55 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176164130.9159.58.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	
	<1176022457.8459.21.camel@johannes.berg>	
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	
	<1176079943.3208.22.camel@shinybook.infradead.org>	
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>	
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>	
	<461A8FAD.7060206@lwfinger.net> <1176164130.9159.58.camel@dv>
Message-ID: <461AF2A7.4070003@lwfinger.net>

Pavel Roskin wrote:
> 
> I realize that it's an issue with softmac, and that softmac in the
> kernel is not the latest.  Perhaps it should be upgraded, but I'm not
> very good at convincing people, and I'm vary of starting another massive
> tread before I catch up with my e-mail queue.
> 

Would you care to elaborate? If there is any SoftMAC development outside the kernel, I know nothing 
about it.

Larry



From proski at gnu.org  Tue Apr 10 04:28:45 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 22:28:45 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AF2A7.4070003@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>
	<461A8FAD.7060206@lwfinger.net> <1176164130.9159.58.camel@dv>
	<461AF2A7.4070003@lwfinger.net>
Message-ID: <1176172125.7996.12.camel@dv>

On Mon, 2007-04-09 at 21:12 -0500, Larry Finger wrote:
> Pavel Roskin wrote:
> > 
> > I realize that it's an issue with softmac, and that softmac in the
> > kernel is not the latest.  Perhaps it should be upgraded, but I'm not
> > very good at convincing people, and I'm vary of starting another massive
> > tread before I catch up with my e-mail queue.
> > 
> 
> Would you care to elaborate? If there is any SoftMAC development outside the kernel, I know nothing 
> about it.

More specifically:

Problem 1.

I set ESSID to one value.  The driver associates to the AP with that
ESSID (let's call it AP1).  I set ESSID to another value.  The driver
associates to AP2.  dhclient is not working.  I'm looking at the packets
in Wireshark.  I see packets with ToDS set, with addr1 of AP1, addr2 of
the Broadcom card and addr3 of AP2.  It's like the driver is sending the
packets to the new AP via the old one!

Problem 2.

iwconfig eth1 ap some_mac_addr
iwconfig eth1 ap auto
iwconfig eth1 shows AP as Invalid

I know that SoftMAC in the kernel is 1.1.13 (it calls itself
"git-1.1.13" in include/net/ieee80211.h).  The latest version released
by Intel is 1.2.17: http://ieee80211.sourceforge.net/downloads.php

If I'll fix the kernel version, I'm likely to be fixing fixed bugs.  I
was going to ask why SoftMAC is not being updated in the kernel, but I'm
afraid of triggering a flamewar (e.g. if Intel wants is and others
resist).

-- 
Regards,
Pavel Roskin



From gavron at Wetwork.Net  Tue Apr 10 04:33:26 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 09 Apr 2007 19:33:26 -0700
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AEF53.4010800@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
	<461AEF53.4010800@lwfinger.net>
Message-ID: <461AF776.5040602@Wetwork.Net>

I am also unable to get bcm43xx to connect to my WRT54G (which I pulled 
out of the network kit to do this test).  It connects just fine to the 
Buffalo WBR54Gs.  (The case does not have any ID other than WRT54G... no 
version number or anything.) 

Ehud

Larry Finger wrote:
>
> Do you think that is a Linksys AP problem? I cannot get mac80211 to connect to my WRT54G V5 AP?
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070409/56045f69/attachment.bin>

From proski at gnu.org  Tue Apr 10 04:45:42 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 22:45:42 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AECFF.90204@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461AECFF.90204@lwfinger.net>
Message-ID: <1176173142.7996.22.camel@dv>

On Mon, 2007-04-09 at 20:48 -0500, Larry Finger wrote:

> > Speaking of the build system, you may want to have a warning in case if
> > anything that is compiled as a module (either bcm43xx or softmac) is
> > already available and linked into the kernel.  Make sure the checks
> > don't affect "make clean" and similar maintenance commands.
> 
> I'm not sure how to do this, but will do some more investigation.

Actually, your makefiles only rely on the kernel build system for
compilation, so checking is not an issue.

This patch would do the check.  but it's a bit on the strict side.  It
will disallow compilation of the driver only if ieee80211 is in the
kernel.  But it may be a good thing because ieee80211 may be without
SoftMAC or incompatible, and distros won't link it statically.

Signed-off-by: Pavel Roskin <proski at gnu.org>

--- bcm43xx/Makefile
+++ bcm43xx/Makefile
@@ -32,6 +32,10 @@
 ifneq ($(KERNELRELEASE),)
 # call from kernel build system
 
+ifeq ($(CONFIG_BCM43XX),y)
+$(error CONFIG_BCM43XX is already in the kernel)
+endif
+
 obj-m := bcm43xx.o
 bcm43xx-objs := bcm43xx_main.o bcm43xx_dma.o $(DEBUGFS_OBJ) \
 		bcm43xx_radio.o bcm43xx_phy.o \
--- ieee80211/Makefile
+++ ieee80211/Makefile
@@ -20,6 +20,10 @@
 ifneq ($(KERNELRELEASE),)
 # call from kernel build system
 
+ifeq ($(CONFIG_IEEE80211),y)
+$(error CONFIG_IEEE80211 is already in the kernel)
+endif
+
 obj-m := ieee80211.o
 obj-m += ieee80211_crypt.o
 obj-m += ieee80211_crypt_wep.o

> There is a new version on the FTP site. I would appreciate seeing if that will work for you.

Yes, it's compiling just fine!  You'll hear from me again if there are
any runtime issues.

-- 
Regards,
Pavel Roskin



From proski at gnu.org  Tue Apr 10 04:59:14 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 22:59:14 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AEF53.4010800@lwfinger.net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
	<461AEF53.4010800@lwfinger.net>
Message-ID: <1176173954.2998.2.camel@dv>

On Mon, 2007-04-09 at 20:58 -0500, Larry Finger wrote: 
> Pavel Roskin wrote:
> > Yes, the current bcm43xx is pretty good at data transfer.  And it
> > doesn't crash my Mac anymore, even though I put my oldest card there,
> > just to make things harder.  And it works with a bizarre Linksys AP to
> > which bcm43xx_mac80211 won't connect.
> 
> Do you think that is a Linksys AP problem? I cannot get mac80211 to connect to my WRT54G V5 AP?

I was assuming it to be a power problem, following Michaels's comments,
but I do intend to revisit the issue.

I keep a patch in my tree that disables 802.11g rates for
bcm43xx_mac80211, but it's a separate issue.  Using higher rates just
delays the time when data transfer starts working, but that Linksys AP
won't work ever.  Besides, the patched bcm43xx_mac80211 is just as good
as bcm43xx with other AP's at the similar distance (10m).

-- 
Regards,
Pavel Roskin



From proski at gnu.org  Tue Apr 10 05:05:45 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 09 Apr 2007 23:05:45 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AF776.5040602@Wetwork.Net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<1176022457.8459.21.camel@johannes.berg>
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>
	<1176025724.8459.28.camel@johannes.berg> <4618F5D8.301@lwfinger.net>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
	<461AEF53.4010800@lwfinger.net>  <461AF776.5040602@Wetwork.Net>
Message-ID: <1176174345.2998.9.camel@dv>

On Mon, 2007-04-09 at 19:33 -0700, Ehud Gavron wrote:
> I am also unable to get bcm43xx to connect to my WRT54G (which I pulled 
> out of the network kit to do this test).  It connects just fine to the 
> Buffalo WBR54Gs.  (The case does not have any ID other than WRT54G... no 
> version number or anything.) 

I'm afraid you are talking of a different driver unless you mistyped
bcm43xx_mac80211 as bcm43xx.

Brand names are especially misleading for wireless equipment.  All that
matters in most case is the chipset, maybe the AP software, but not the
brand name outside the box.  Just because the same brand name is
involved, it's only slightly suggests a connection between those cases.
But is you are using a different driver with a different firmware and
different MAC implementation, it suggests quite strongly that the
problems are unrelated.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Tue Apr 10 05:19:09 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Apr 2007 22:19:09 -0500
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <1176172125.7996.12.camel@dv>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>	
	<1176022457.8459.21.camel@johannes.berg>	
	<5b9417770704080205s60a34b82i96b436746409af55@mail.gmail.com>	
	<1176025724.8459.28.camel@johannes.berg>
	<4618F5D8.301@lwfinger.net>	
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>	
	<1176079943.3208.22.camel@shinybook.infradead.org>	
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>	
	<461A5704.3080900@lwfinger.net> <461A6D7D.5090009@Wetwork.Net>	
	<461A8FAD.7060206@lwfinger.net> <1176164130.9159.58.camel@dv>	
	<461AF2A7.4070003@lwfinger.net> <1176172125.7996.12.camel@dv>
Message-ID: <461B022D.2040503@lwfinger.net>

Pavel Roskin wrote:
> On Mon, 2007-04-09 at 21:12 -0500, Larry Finger wrote:
>> Pavel Roskin wrote:
>>> I realize that it's an issue with softmac, and that softmac in the
>>> kernel is not the latest.  Perhaps it should be upgraded, but I'm not
>>> very good at convincing people, and I'm vary of starting another massive
>>> tread before I catch up with my e-mail queue.
>>>
>> Would you care to elaborate? If there is any SoftMAC development outside the kernel, I know nothing 
>> about it.
> 
> More specifically:
> 
> Problem 1.
> 
> I set ESSID to one value.  The driver associates to the AP with that
> ESSID (let's call it AP1).  I set ESSID to another value.  The driver
> associates to AP2.  dhclient is not working.  I'm looking at the packets
> in Wireshark.  I see packets with ToDS set, with addr1 of AP1, addr2 of
> the Broadcom card and addr3 of AP2.  It's like the driver is sending the
> packets to the new AP via the old one!
> 
> Problem 2.
> 
> iwconfig eth1 ap some_mac_addr
> iwconfig eth1 ap auto
> iwconfig eth1 shows AP as Invalid
> 
> I know that SoftMAC in the kernel is 1.1.13 (it calls itself
> "git-1.1.13" in include/net/ieee80211.h).  The latest version released
> by Intel is 1.2.17: http://ieee80211.sourceforge.net/downloads.php

That is ieee80211, not ieee80211_softmac - a critical difference. I looked at the latest ieee80211 
on Intel's website. The only differences are local patches in my version, and code needed to handle 
older kernel versions.

> If I'll fix the kernel version, I'm likely to be fixing fixed bugs.  I
> was going to ask why SoftMAC is not being updated in the kernel, but I'm
> afraid of triggering a flamewar (e.g. if Intel wants is and others
> resist).

There will be no flamewar. Intel issued ieee80211 with a GPL and made it available.

There is little development on SoftMAC as it is EOL'd and will be pulled from the kernel as soon as 
mac80211 enters mainline.

Larry


From radarsat1 at gmail.com  Tue Apr 10 06:32:08 2007
From: radarsat1 at gmail.com (Stephen Sinclair)
Date: Tue, 10 Apr 2007 00:32:08 -0400
Subject: bcm-43xx HORRIBLY slow with 4311 card and 2.6.20
In-Reply-To: <461AF776.5040602@Wetwork.Net>
References: <5b9417770704080142q7f4e3bf0xe4563dcd43084b9c@mail.gmail.com>
	<5b9417770704080917h9530f64h29b1d929685f3201@mail.gmail.com>
	<1176079943.3208.22.camel@shinybook.infradead.org>
	<5b9417770704082252q74090077j1175e9caca8682c6@mail.gmail.com>
	<461A5704.3080900@lwfinger.net> <1176163543.9159.51.camel@dv>
	<461ADFDB.8070400@Wetwork.Net> <1176167085.4065.26.camel@dv>
	<461AEF53.4010800@lwfinger.net> <461AF776.5040602@Wetwork.Net>
Message-ID: <9b3e2dc20704092132t6b48f89age8c2dcc1343c6f3f@mail.gmail.com>

For the record, i am using my 4311 with bcm43xx and my WRT54G v6
router.  it works fine for me.  Though previously it often stopped
working and I would have to reset it (the router that is), but it has
worked far better since I just recently updated its firmware from the
linksys website.

Steve


On 4/9/07, Ehud Gavron <gavron at wetwork.net> wrote:
> I am also unable to get bcm43xx to connect to my WRT54G (which I pulled
> out of the network kit to do this test).  It connects just fine to the
> Buffalo WBR54Gs.  (The case does not have any ID other than WRT54G... no
> version number or anything.)
>
> Ehud
>
> Larry Finger wrote:
> >
> > Do you think that is a Linksys AP problem? I cannot get mac80211 to connect to my WRT54G V5 AP?
> >
> >
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
>


From mistamaila at gmail.com  Tue Apr 10 17:25:23 2007
From: mistamaila at gmail.com (John H.)
Date: Tue, 10 Apr 2007 10:25:23 -0500
Subject: problems with advanced wpa
Message-ID: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>

My school uses the following setup in wpa_supplicant, which I don't
even need to use with NetworkManager.  However, this does not work
with bcm43xx even with latest patches, but it does work with
ndiswrapper.  NetworkManager blatantly says, with bcm43xx driver,
"encryption not supported,..." or something.

bcm43xx works fine with wpa_supplicant and networkmanager with wpa1...

network={
        ssid="university"
        key_mgmt=WPA-EAP
        pairwise=TKIP
        group=TKIP
        scan_ssid=1
        eap=PEAP
        identity="myuser"
        password="mypass"
#       ca_cert="/etc/cert/ca.pem"
#       phase1="peaplabel=1"
       phase2="auth=MSCHAPV2"
}


Is there any way to get around this and use bcm43xx with this network
at this time?  Again, it works fine with ndiswrapper.


From ubq7 at stud.uni-karlsruhe.de  Tue Apr 10 17:50:31 2007
From: ubq7 at stud.uni-karlsruhe.de (Hendrik Sattler)
Date: Tue, 10 Apr 2007 17:50:31 +0200
Subject: problems with advanced wpa
In-Reply-To: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
References: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
Message-ID: <200704101750.31690.ubq7@stud.uni-karlsruhe.de>

Am Dienstag 10 April 2007 17:25 schrieb John H.:
> My school uses the following setup in wpa_supplicant, which I don't
> even need to use with NetworkManager.  However, this does not work
> with bcm43xx even with latest patches, but it does work with
> ndiswrapper.  NetworkManager blatantly says, with bcm43xx driver,
> "encryption not supported,..." or something.
>
> bcm43xx works fine with wpa_supplicant and networkmanager with wpa1...
>
> network={
>         ssid="university"
>         key_mgmt=WPA-EAP
>         pairwise=TKIP
>         group=TKIP
>         scan_ssid=1
>         eap=PEAP
>         identity="myuser"
>         password="mypass"
> #       ca_cert="/etc/cert/ca.pem"
> #       phase1="peaplabel=1"
>        phase2="auth=MSCHAPV2"
> }

Interesting because according to networkmanager lists, phase2 is not supported 
by them.
Did this change lately? If not, you _have_ to use wpa_supplicant manually.

HS


From mistamaila at gmail.com  Tue Apr 10 17:56:23 2007
From: mistamaila at gmail.com (John H.)
Date: Tue, 10 Apr 2007 10:56:23 -0500
Subject: problems with advanced wpa
In-Reply-To: <200704101750.31690.ubq7@stud.uni-karlsruhe.de>
References: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
	<200704101750.31690.ubq7@stud.uni-karlsruhe.de>
Message-ID: <5b9417770704100856r20351e6dn51d0d38fcb6e6cd9@mail.gmail.com>

How is it, with ndiswrapper, networkmanager can do it?  Is it a
limitation in bcm43xx?

On 4/10/07, Hendrik Sattler <ubq7 at stud.uni-karlsruhe.de> wrote:
> Am Dienstag 10 April 2007 17:25 schrieb John H.:
> > My school uses the following setup in wpa_supplicant, which I don't
> > even need to use with NetworkManager.  However, this does not work
> > with bcm43xx even with latest patches, but it does work with
> > ndiswrapper.  NetworkManager blatantly says, with bcm43xx driver,
> > "encryption not supported,..." or something.
> >
> > bcm43xx works fine with wpa_supplicant and networkmanager with wpa1...
> >
> > network={
> >         ssid="university"
> >         key_mgmt=WPA-EAP
> >         pairwise=TKIP
> >         group=TKIP
> >         scan_ssid=1
> >         eap=PEAP
> >         identity="myuser"
> >         password="mypass"
> > #       ca_cert="/etc/cert/ca.pem"
> > #       phase1="peaplabel=1"
> >        phase2="auth=MSCHAPV2"
> > }
>
> Interesting because according to networkmanager lists, phase2 is not supported
> by them.
> Did this change lately? If not, you _have_ to use wpa_supplicant manually.
>
> HS
>


From larry.finger at lwfinger.net  Tue Apr 10 18:45:35 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 10 Apr 2007 11:45:35 -0500
Subject: problems with advanced wpa
In-Reply-To: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
References: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
Message-ID: <461BBF2F.8000304@lwfinger.net>

John H. wrote:
> My school uses the following setup in wpa_supplicant, which I don't
> even need to use with NetworkManager.  However, this does not work
> with bcm43xx even with latest patches, but it does work with
> ndiswrapper.  NetworkManager blatantly says, with bcm43xx driver,
> "encryption not supported,..." or something.

Exact error message, please!

> bcm43xx works fine with wpa_supplicant and networkmanager with wpa1...
> 
> network={
>         ssid="university"
>         key_mgmt=WPA-EAP
>         pairwise=TKIP
>         group=TKIP
>         scan_ssid=1
>         eap=PEAP
>         identity="myuser"
>         password="mypass"
> #       ca_cert="/etc/cert/ca.pem"
> #       phase1="peaplabel=1"
>        phase2="auth=MSCHAPV2"
> }

Have you tried using ifup/ifdown rather than NM to control the device with the above info in 
wpa_supplicant.conf? You don't mention your distro and it is difficult to know where your control 
files are located.

Larry


From celeron55 at gmail.com  Tue Apr 10 18:44:25 2007
From: celeron55 at gmail.com (Perttu Ahola)
Date: Tue, 10 Apr 2007 19:44:25 +0300
Subject: Packet Injection
Message-ID: <20070410194425.2e898c66@localhost>

Is it possible to get packet injection to work with bcm43xx?

---
Perttu Ahola


From mb at bu3sch.de  Tue Apr 10 20:09:41 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 10 Apr 2007 20:09:41 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <1176093383234-git-send-email-will.dyson@gmail.com>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
Message-ID: <200704102009.41696.mb@bu3sch.de>

Series applied, thanks.
All untested, of course, as I don't have such a machine.

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Apr 10 20:12:42 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 10 Apr 2007 20:12:42 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <1176093383234-git-send-email-will.dyson@gmail.com>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
Message-ID: <200704102012.43038.mb@bu3sch.de>

Series applied, thanks.
All untested, of course, as I don't have such a machine.

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Apr 10 20:15:14 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 10 Apr 2007 20:15:14 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <200704102012.43038.mb@bu3sch.de>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
	<200704102012.43038.mb@bu3sch.de>
Message-ID: <200704102015.14170.mb@bu3sch.de>

What the hell? I CCed Will, but somebody stripped it off on
its way from my server to the list...

On Tuesday 10 April 2007 20:12, Michael Buesch wrote:
> Series applied, thanks.
> All untested, of course, as I don't have such a machine.
> 

-- 
Greetings Michael.


From dwmw2 at infradead.org  Wed Apr 11 06:19:26 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Wed, 11 Apr 2007 00:19:26 -0400
Subject: Machine checks with bcm43xx-mac80211
Message-ID: <1176265166.3831.8.camel@shinybook.infradead.org>

I figured if people were going to start working more on the mac80211
driver than the softmac one, I probably ought to start reporting the
cases where it kills my machine. So I hacked up ssb_pci_{read,write}16
to use outw instead of readw and thus get their machine checks trapped.

This is what I found...

shinybook /home/dwmw2 # head -20 dmesg.txt
 ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
 ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
 ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
 ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
 ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
 ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
 ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
 ssb: Ignoring additional 802.11 core
 ssb: Switching to PCI core, index 4
 bcm43xx_mac80211: Broadcom 4306 WLAN found
 ssb: Switching to IEEE 802.11 core, index 1
 phy_read (adjusted) 10...phy_write 10 to 161e...ok
 phy_read (adjusted) 11...phy_write 11 to 198...ok
 phy_write 15 to aa00...ok
 bcm43xx_mac80211: Radio turned off
 phy_write 15 to e300...ok
 phy_write 812 to 2030...ok
 phy_write 812 to 2032...ok
 phy_write 812 to 2033...ok
 phy_write 15 to f300...ok
shinybook /home/dwmw2 # grep bad dmesg.txt | sort -u
 phy_read (adjusted) 429...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 814...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 47f...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 48a...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 4a0...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 4a1...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 4a2...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 814...<7>IN from bad port f54c53fe at f22b7dc0
 phy_read (adjusted) 815...<7>IN from bad port f54c53fe at f22b7dc0'

There's also a _lot_ of 'eth1: received unknown management frame - stype=13'

Full(ish) log from /var/log/messages at http://david.woodhou.se/mac80211-dmesg.txt
-- 
dwmw2
 



From dwmw2 at infradead.org  Wed Apr 11 06:47:13 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Wed, 11 Apr 2007 00:47:13 -0400
Subject: Machine checks with bcm43xx-mac80211
In-Reply-To: <1176265166.3831.8.camel@shinybook.infradead.org>
References: <1176265166.3831.8.camel@shinybook.infradead.org>
Message-ID: <1176266833.3831.33.camel@shinybook.infradead.org>

On Wed, 2007-04-11 at 00:19 -0400, David Woodhouse wrote:
> I figured if people were going to start working more on the mac80211
> driver than the softmac one, I probably ought to start reporting the
> cases where it kills my machine. So I hacked up ssb_pci_{read,write}16
> to use outw instead of readw and thus get their machine checks
> trapped.
> 
> This is what I found...

Then the performance was poor and NetworkManager kept getting
disconnected. I'd have tried forcing the rate down to 11Mb/s or lower,
but my iwconfig didn't seem to work because it was too old. I'll
investigate that later.

I saw this at one point too..

> <3>bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
> failed. (cur=0, tgt=62). Disabling TX power adjustment.

I also didn't get IPv6 addresses by RA... at least until I tried to
investigate. Perhaps it was the tcpdump which made it work -- perhaps
multicast is broken and I only picked up the address when I put it in
promiscuous mode?

-- 
dwmw2



From larry.finger at lwfinger.net  Wed Apr 11 07:13:52 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Apr 2007 00:13:52 -0500
Subject: Machine checks with bcm43xx-mac80211
In-Reply-To: <1176265166.3831.8.camel@shinybook.infradead.org>
References: <1176265166.3831.8.camel@shinybook.infradead.org>
Message-ID: <461C6E90.6090300@lwfinger.net>

David,

David Woodhouse wrote:
> I figured if people were going to start working more on the mac80211
> driver than the softmac one, I probably ought to start reporting the
> cases where it kills my machine. So I hacked up ssb_pci_{read,write}16
> to use outw instead of readw and thus get their machine checks trapped.
> 
> This is what I found...

Please try the patch below to see if it fixes the machine checks. It is the equivalent of what we
used in bcm43xx-softmac to get rid of them.

Thanks,

Larry


Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -1362,7 +1362,7 @@ static void bcm43xx_phy_initb6(struct bc
  static void bcm43xx_calc_loopback_gain(struct bcm43xx_wldev *dev)
  {
  	struct bcm43xx_phy *phy = &dev->phy;
-	u16 backup_phy[16];
+	u16 backup_phy[16] = {0};
  	u16 backup_radio[3];
  	u16 backup_bband;
  	u16 i, j, loop_i_max;
@@ -1373,8 +1373,10 @@ static void bcm43xx_calc_loopback_gain(s
  	backup_phy[1] = bcm43xx_phy_read(dev, BCM43xx_PHY_CCKBBANDCFG);
  	backup_phy[2] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
  	backup_phy[3] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
-	backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
-	backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	if (phy->rev != 1) {
+		backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
+		backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	}
  	backup_phy[6] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x5A));
  	backup_phy[7] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x59));
  	backup_phy[8] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x58));
@@ -1402,14 +1404,16 @@ static void bcm43xx_calc_loopback_gain(s
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0001);
  	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	}
  	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
  	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
@@ -1426,10 +1430,12 @@ static void bcm43xx_calc_loopback_gain(s

  	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x0A),
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x0A)) | 0x2000);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	}
  	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x03),
  			  (bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x03))
  			   & 0xFF9F) | 0x40);
@@ -1522,8 +1528,10 @@ exit_loop1:
  		trsw_rx = 0x18;
  exit_loop2:

-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	}
  	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), backup_phy[6]);
  	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), backup_phy[7]);
  	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), backup_phy[8]);
@@ -1576,7 +1584,7 @@ static void bcm43xx_phy_initg(struct bcm
  		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER, 0x400);
  		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xC0);
  	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev != 1) {
  		tmp = bcm43xx_phy_read(dev, BCM43xx_PHY_VERSION_OFDM);
  		tmp &= BCM43xx_PHYVER_VERSION;
  		if (tmp == 3 || tmp == 5) {
@@ -1635,7 +1643,7 @@ static void bcm43xx_phy_initg(struct bcm
  		else
  			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2F), 0x202);
  	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev != 1) {
  		bcm43xx_lo_adjust(dev);
  		bcm43xx_phy_write(dev, BCM43xx_PHY_LO_MASK, 0x8078);
  	}
@@ -1649,8 +1657,8 @@ static void bcm43xx_phy_initg(struct bcm
  		 */
  		bcm43xx_nrssi_hw_update(dev, 0xFFFF);//FIXME?
  		bcm43xx_calc_nrssi_threshold(dev);
-	} else {
-		if (phy->gmode && phy->nrssi[0] == -1000) {
+	} else if (phy->gmode && phy->rev != 1) {
+		if (phy->nrssi[0] == -1000) {
  			assert(phy->nrssi[1] == -1000);
  			bcm43xx_calc_nrssi_slope(dev);
  		} else


---------


From johannes at sipsolutions.net  Wed Apr 11 13:11:14 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 11 Apr 2007 13:11:14 +0200
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
In-Reply-To: <200704102015.14170.mb@bu3sch.de>
References: <1176093383234-git-send-email-will.dyson@gmail.com>
	<200704102012.43038.mb@bu3sch.de>  <200704102015.14170.mb@bu3sch.de>
Message-ID: <1176289874.14149.18.camel@johannes.berg>

On Tue, 2007-04-10 at 20:15 +0200, Michael Buesch wrote:
> What the hell? I CCed Will, but somebody stripped it off on
> its way from my server to the list...

I'm fairly sure that sometimes mailman does that, I've seen it happen to
BenH on linuxppc-dev a lot. Not sure what's causing it though, seems a
mailman bug (it does munge headers too much anyway)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070411/82a9c867/attachment.pgp>

From celeron55 at gmail.com  Wed Apr 11 13:27:05 2007
From: celeron55 at gmail.com (Perttu Ahola)
Date: Wed, 11 Apr 2007 14:27:05 +0300
Subject: Packet Injection
Message-ID: <20070411142705.0415c1a0@localhost>

Is it possible to get packet injection to work with bcm43xx?

---
Perttu Ahola


From johannes at sipsolutions.net  Wed Apr 11 13:46:23 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 11 Apr 2007 13:46:23 +0200
Subject: Packet Injection
In-Reply-To: <20070411142705.0415c1a0@localhost>
References: <20070411142705.0415c1a0@localhost>
Message-ID: <1176291983.14149.23.camel@johannes.berg>

On Wed, 2007-04-11 at 14:27 +0300, Perttu Ahola wrote:
> Is it possible to get packet injection to work with bcm43xx?

No. And don't spam the list.

And please guys, don't contend my no, I don't want to see a huge thread
about this again. If he was able to use google he'd not have asked.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070411/6b017fc2/attachment.pgp>

From dwmw2 at infradead.org  Wed Apr 11 17:34:04 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Wed, 11 Apr 2007 11:34:04 -0400
Subject: Machine checks with bcm43xx-mac80211
In-Reply-To: <461C6E90.6090300@lwfinger.net>
References: <1176265166.3831.8.camel@shinybook.infradead.org>
	<461C6E90.6090300@lwfinger.net>
Message-ID: <1176305644.2736.10.camel@shinybook.infradead.org>

On Wed, 2007-04-11 at 00:13 -0500, Larry Finger wrote: 
> David Woodhouse wrote:
> > I figured if people were going to start working more on the mac80211
> > driver than the softmac one, I probably ought to start reporting the
> > cases where it kills my machine. So I hacked up ssb_pci_{read,write}16
> > to use outw instead of readw and thus get their machine checks trapped.
> > 
> > This is what I found...
> 
> Please try the patch below to see if it fixes the machine checks. It is the equivalent of what we
> used in bcm43xx-softmac to get rid of them.

Yeah, that works -- at least, it avoids the machine checks. I still
don't get much connectivity though. Just running tcpdump isn't enough to
make it pick up and IPv6 address, and it's missing a lot of incoming
Legacy IP packets too. In fact I don't seem to get _any_ incoming
packets if I bring it up manually; it only works at all when I let
NetworkManager bring it up.

I'll investigate more in a nicer environment when I get home tomorrow --
testing it in the OLPC office sitting underneath a ceiling with about 20
XO machines running as mesh portals probably isn't fair :)

-- 
dwmw2



From larry.finger at lwfinger.net  Wed Apr 11 17:53:53 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Apr 2007 10:53:53 -0500
Subject: Machine checks with bcm43xx-mac80211
In-Reply-To: <1176305644.2736.10.camel@shinybook.infradead.org>
References: <1176265166.3831.8.camel@shinybook.infradead.org>	<461C6E90.6090300@lwfinger.net>
	<1176305644.2736.10.camel@shinybook.infradead.org>
Message-ID: <461D0491.6000601@lwfinger.net>

David Woodhouse wrote:
> On Wed, 2007-04-11 at 00:13 -0500, Larry Finger wrote: 
>> Please try the patch below to see if it fixes the machine checks. It is the equivalent of what we
>> used in bcm43xx-softmac to get rid of them.
> 
> Yeah, that works -- at least, it avoids the machine checks. I still
> don't get much connectivity though. Just running tcpdump isn't enough to
> make it pick up and IPv6 address, and it's missing a lot of incoming
> Legacy IP packets too. In fact I don't seem to get _any_ incoming
> packets if I bring it up manually; it only works at all when I let
> NetworkManager bring it up.

Thanks for testing. I cannot help you with connectivity, etc. as I still have not gotten the newest 
versions of bcm43xx-mac80211 to associate with my AP. In the Kismet dumps taken from my second 
laptop sitting very close to the first, I see that the AP only ACK's about 1/4 of the transmissions. 
This is very likely a signal strength issue.

I'll formalize the machine-check patch and send it to John and Michael.

Larry


From Larry.Finger at lwfinger.net  Wed Apr 11 18:08:53 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Apr 2007 11:08:53 -0500
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
 PHYs
Message-ID: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>

On PPC architecture with phy->rev == 1, machine checks occur during
initialization of the "Extended G PHY registers". This problem was
also seen on bcm43xx-softmac, and was fixed by conditionally skipping
over certain reads/writes of these registers.  The same solution has been
applied here with testing by David Woodhouse.  Note: These modifications
are not found in the specifications, but are needed for PPC.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John and Michael,

This patch will apply to both the wireless-dev and the mb trees.

Larry

 bcm43xx_phy.c |   50 +++++++++++++++++++++++++++++---------------------
 1 file changed, 29 insertions(+), 21 deletions(-)

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -1362,7 +1362,7 @@ static void bcm43xx_phy_initb6(struct bc
 static void bcm43xx_calc_loopback_gain(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 backup_phy[16];
+	u16 backup_phy[16] = {0};
 	u16 backup_radio[3];
 	u16 backup_bband;
 	u16 i, j, loop_i_max;
@@ -1373,8 +1373,10 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[1] = bcm43xx_phy_read(dev, BCM43xx_PHY_CCKBBANDCFG);
 	backup_phy[2] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
 	backup_phy[3] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
-	backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
-	backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	if (phy->rev != 1) {
+		backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
+		backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	}
 	backup_phy[6] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x5A));
 	backup_phy[7] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x59));
 	backup_phy[8] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x58));
@@ -1402,14 +1404,16 @@ static void bcm43xx_calc_loopback_gain(s
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0001);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
@@ -1426,10 +1430,12 @@ static void bcm43xx_calc_loopback_gain(s
 
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x0A),
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x0A)) | 0x2000);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x03),
 			  (bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x03))
 			   & 0xFF9F) | 0x40);
@@ -1522,8 +1528,10 @@ exit_loop1:
 		trsw_rx = 0x18;
 exit_loop2:
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), backup_phy[6]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), backup_phy[7]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), backup_phy[8]);
@@ -1576,7 +1584,7 @@ static void bcm43xx_phy_initg(struct bcm
 		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER, 0x400);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xC0);
 	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev >= 2) {
 		tmp = bcm43xx_phy_read(dev, BCM43xx_PHY_VERSION_OFDM);
 		tmp &= BCM43xx_PHYVER_VERSION;
 		if (tmp == 3 || tmp == 5) {
@@ -1635,7 +1643,7 @@ static void bcm43xx_phy_initg(struct bcm
 		else
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2F), 0x202);
 	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev != 1) {
 		bcm43xx_lo_adjust(dev);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_LO_MASK, 0x8078);
 	}
@@ -1649,8 +1657,8 @@ static void bcm43xx_phy_initg(struct bcm
 		 */
 		bcm43xx_nrssi_hw_update(dev, 0xFFFF);//FIXME?
 		bcm43xx_calc_nrssi_threshold(dev);
-	} else {
-		if (phy->gmode && phy->nrssi[0] == -1000) {
+	} else if (phy->gmode && phy->rev != 1) {
+		if (phy->nrssi[0] == -1000) {
 			assert(phy->nrssi[1] == -1000);
 			bcm43xx_calc_nrssi_slope(dev);
 		} else


From mistamaila at gmail.com  Wed Apr 11 18:17:35 2007
From: mistamaila at gmail.com (John H.)
Date: Wed, 11 Apr 2007 11:17:35 -0500
Subject: problems with advanced wpa
In-Reply-To: <461BBF2F.8000304@lwfinger.net>
References: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>
	<461BBF2F.8000304@lwfinger.net>
Message-ID: <5b9417770704110917r22d65562rb1d21f21973f07ce@mail.gmail.com>

Sorry, fc6.

Yes, I tried what you suggested today, and attached is the resulting
problems with wpa_supplicant.  I switched over to ndiswrapper and it
worked right away:(

wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant.conf -iwlan0 -Dwext

Trying to associate with 00:12:d9:ac:55:c0 (SSID='schoolssid' freq=0 MHz)

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

Trying to associate with 00:12:d9:ac:55:c0 (SSID='schoolssid' freq=0 MHz)

Associated with 00:12:d9:ac:55:c0

CTRL-EVENT-EAP-STARTED EAP authentication started

CTRL-EVENT-EAP-METHOD EAP method 25 (PEAP) selected

EAP-MSCHAPV2: Authentication succeeded

CTRL-EVENT-EAP-SUCCESS EAP authentication completed successfully

WPA: Key negotiation completed with 00:12:d9:ac:55:c0 [PTK=TKIP GTK=TKIP]

CTRL-EVENT-CONNECTED - Connection to 00:12:d9:ac:55:c0 completed (auth)

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

Trying to associate with 00:12:d9:ac:55:c0 (SSID='schoolssid' freq=0 MHz)

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

Trying to associate with 00:12:d9:ac:55:c0 (SSID='schoolssid' freq=0 MHz)

Associated with 00:12:d9:ac:55:c0

CTRL-EVENT-EAP-STARTED EAP authentication started

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

Trying to associate with 00:12:d9:6a:8a:40 (SSID='schoolssid' freq=0 MHz)

Trying to associate with 00:12:d9:6a:8a:40 (SSID='schoolssid' freq=0 MHz)

Trying to associate with 00:12:d9:6a:8a:40 (SSID='schoolssid' freq=0 MHz)

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

WPA: No SSID info found (msg 1 of 4).

WPA: No Ack bit in key_info

WPA: Invalid EAPOL-Key MIC - dropping packet

WPA: No Ack bit in key_info

Authentication with 00:00:00:00:00:00 timed out.

Trying to associate with 00:12:d9:6a:8a:40 (SSID='schoolssid' freq=0 MHz)

Trying to associate with 00:12:d9:6a:8a:40 (SSID='schoolssid' freq=0 MHz)

CTRL-EVENT-DISCONNECTED - Disconnect event - remove keys

CTRL-EVENT-TERMINATING - signal 2 received




On 4/10/07, Larry Finger <larry.finger at lwfinger.net> wrote:
> John H. wrote:
> > My school uses the following setup in wpa_supplicant, which I don't
> > even need to use with NetworkManager.  However, this does not work
> > with bcm43xx even with latest patches, but it does work with
> > ndiswrapper.  NetworkManager blatantly says, with bcm43xx driver,
> > "encryption not supported,..." or something.
>
> Exact error message, please!
>
> > bcm43xx works fine with wpa_supplicant and networkmanager with wpa1...
> >
> > network={
> >         ssid="university"
> >         key_mgmt=WPA-EAP
> >         pairwise=TKIP
> >         group=TKIP
> >         scan_ssid=1
> >         eap=PEAP
> >         identity="myuser"
> >         password="mypass"
> > #       ca_cert="/etc/cert/ca.pem"
> > #       phase1="peaplabel=1"
> >        phase2="auth=MSCHAPV2"
> > }
>
> Have you tried using ifup/ifdown rather than NM to control the device with the above info in
> wpa_supplicant.conf? You don't mention your distro and it is difficult to know where your control
> files are located.
>
> Larry
>


From larry.finger at lwfinger.net  Wed Apr 11 18:39:24 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Apr 2007 11:39:24 -0500
Subject: problems with advanced wpa
In-Reply-To: <5b9417770704110917r22d65562rb1d21f21973f07ce@mail.gmail.com>
References: <5b9417770704100825s7f4d79fn7c8725558bde17b5@mail.gmail.com>	<461BBF2F.8000304@lwfinger.net>
	<5b9417770704110917r22d65562rb1d21f21973f07ce@mail.gmail.com>
Message-ID: <461D0F3C.5020006@lwfinger.net>

John H. wrote:
> Sorry, fc6.
> 
> Yes, I tried what you suggested today, and attached is the resulting
> problems with wpa_supplicant.  I switched over to ndiswrapper and it
> worked right away:(
> 
> wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant.conf -iwlan0 -Dwext
> 

Could you please try both bcm43xx and ndiswrapper with -ddd added to the above wpa_supplicant line? 
That will get us the full debug information from the supplicant. Does wpa_supplicant.conf contain 
the information in your first E-mail?

Thanks,

Larry



From mb at bu3sch.de  Wed Apr 11 19:22:26 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 11 Apr 2007 19:22:26 +0200
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
	PHYs
In-Reply-To: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
Message-ID: <200704111922.27087.mb@bu3sch.de>

On Wednesday 11 April 2007 18:08, Larry Finger wrote:
> On PPC architecture with phy->rev == 1, machine checks occur during
> initialization of the "Extended G PHY registers". This problem was
> also seen on bcm43xx-softmac, and was fixed by conditionally skipping
> over certain reads/writes of these registers.  The same solution has been
> applied here with testing by David Woodhouse.  Note: These modifications
> are not found in the specifications, but are needed for PPC.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> John and Michael,
> 
> This patch will apply to both the wireless-dev and the mb trees.

Applied to my tree, thanks.
http://bu3sch.de/gitweb?p=wireless-dev.git;a=commitdiff;h=e25588a08a1b7e0d500c30dd0ccee76d318fe72d

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Wed Apr 11 18:08:53 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Apr 2007 11:08:53 -0500
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
 PHYs
Message-ID: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>

On PPC architecture with phy->rev == 1, machine checks occur during
initialization of the "Extended G PHY registers". This problem was
also seen on bcm43xx-softmac, and was fixed by conditionally skipping
over certain reads/writes of these registers.  The same solution has been
applied here with testing by David Woodhouse.  Note: These modifications
are not found in the specifications, but are needed for PPC.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John and Michael,

This patch will apply to both the wireless-dev and the mb trees.

Larry

 bcm43xx_phy.c |   50 +++++++++++++++++++++++++++++---------------------
 1 file changed, 29 insertions(+), 21 deletions(-)

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -1362,7 +1362,7 @@ static void bcm43xx_phy_initb6(struct bc
 static void bcm43xx_calc_loopback_gain(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 backup_phy[16];
+	u16 backup_phy[16] = {0};
 	u16 backup_radio[3];
 	u16 backup_bband;
 	u16 i, j, loop_i_max;
@@ -1373,8 +1373,10 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[1] = bcm43xx_phy_read(dev, BCM43xx_PHY_CCKBBANDCFG);
 	backup_phy[2] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
 	backup_phy[3] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
-	backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
-	backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	if (phy->rev != 1) {
+		backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
+		backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	}
 	backup_phy[6] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x5A));
 	backup_phy[7] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x59));
 	backup_phy[8] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x58));
@@ -1402,14 +1404,16 @@ static void bcm43xx_calc_loopback_gain(s
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0001);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
@@ -1426,10 +1430,12 @@ static void bcm43xx_calc_loopback_gain(s
 
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x0A),
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x0A)) | 0x2000);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x03),
 			  (bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x03))
 			   & 0xFF9F) | 0x40);
@@ -1522,8 +1528,10 @@ exit_loop1:
 		trsw_rx = 0x18;
 exit_loop2:
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	if (phy->rev != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), backup_phy[6]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), backup_phy[7]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), backup_phy[8]);
@@ -1576,7 +1584,7 @@ static void bcm43xx_phy_initg(struct bcm
 		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER, 0x400);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xC0);
 	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev >= 2) {
 		tmp = bcm43xx_phy_read(dev, BCM43xx_PHY_VERSION_OFDM);
 		tmp &= BCM43xx_PHYVER_VERSION;
 		if (tmp == 3 || tmp == 5) {
@@ -1635,7 +1643,7 @@ static void bcm43xx_phy_initg(struct bcm
 		else
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2F), 0x202);
 	}
-	if (phy->gmode) {
+	if (phy->gmode && phy->rev != 1) {
 		bcm43xx_lo_adjust(dev);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_LO_MASK, 0x8078);
 	}
@@ -1649,8 +1657,8 @@ static void bcm43xx_phy_initg(struct bcm
 		 */
 		bcm43xx_nrssi_hw_update(dev, 0xFFFF);//FIXME?
 		bcm43xx_calc_nrssi_threshold(dev);
-	} else {
-		if (phy->gmode && phy->nrssi[0] == -1000) {
+	} else if (phy->gmode && phy->rev != 1) {
+		if (phy->nrssi[0] == -1000) {
 			assert(phy->nrssi[1] == -1000);
 			bcm43xx_calc_nrssi_slope(dev);
 		} else
-
To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
the body of a message to majordomo at vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html




From linville at tuxdriver.com  Thu Apr 12 15:31:32 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 12 Apr 2007 09:31:32 -0400
Subject: BCM43xx_LOCALE_USA_CANADA_ANZ correct? -- Re: Please pull
	'upstream-fixes' branch of wireless-2.6
Message-ID: <20070412133132.GA17205@tuxdriver.com>

BCM43xx_LOCALE_USA_CANADA_ANZ a correct grouping?

John

----- Forwarded message from "stevie.glass" <stevie.glass at gmail.com> -----

> DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
>         d=gmail.com; s=beta;
>         h=domainkey-signature:received:received:message-id:date:from:reply-to:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding;
>         b=b/L4/k3Vj3gsfNabz0EfEE6pG2gAFJyPx+52Mcx3IuMfpM7cFY2sv/jbixkmWSJQcARwPoiHFNmv8mC4k8cwgpd/pxeHDznfl+sRmG0EH2Od3cSc9wFXkvZE2CyLJwUj88acjE3W8JODmYDO8ha7p0fA0ySae3ExOQyzuSZ+xZA=
> DomainKey-Signature: a=rsa-sha1; c=nofws;
>         d=gmail.com; s=beta;
>         h=received:message-id:date:from:reply-to:user-agent:mime-version:to:subject:references:in-reply-to:content-type:content-transfer-encoding;
>         b=c13rHvw5Z5QAZnP6CrA3+XeeF4D8Zdi7GRjiZK3vAoqYZ78O8yNQ6bkAzpi1pKGhbffVx3bGd44Ok057V3PWVhsMjncGr5jMKiiAEQJRpDpKIB++oimQXCPHjGCxUQwesBr2V/yvL06CcBZKsupeD7hHAvo2CeVCLWCuSmcwiGM=
> Date: Wed, 11 Apr 2007 08:16:59 +1000
> From: "stevie.glass" <stevie.glass at gmail.com>
> Reply-To: stevie.glass at gmail.com
> User-Agent: Icedove 1.5.0.10 (X11/20070329)
> To: "John W. Linville" <linville at tuxdriver.com>
> Subject: Re: Please pull 'upstream-fixes' branch of wireless-2.6
> In-Reply-To: <20070410202337.GC14123 at tuxdriver.com>
> X-Spam-Status: No, score=-2.6 required=3.0 tests=AWL,BAYES_00,SPF_HELO_PASS,
> 	SPF_PASS autolearn=unavailable version=3.1.8-gr0
> X-Spam-Checker-Version: SpamAssassin 3.1.8-gr0 (2007-02-13) on ra.tuxdriver.com
> 
> Hi John,
> 
> Apols for unsolicted email but I was looking through your patch and this
> caught my eye:
> > +/* set the maximum channel based on locale set in sprom or witle locale option */
> > +	switch (bcm->sprom.locale) {
> > +	case BCM43xx_LOCALE_THAILAND:
> > +	case BCM43xx_LOCALE_ISRAEL:
> > +	case BCM43xx_LOCALE_JORDAN:
> > +	case BCM43xx_LOCALE_USA_CANADA_ANZ:
> > +	case BCM43xx_LOCALE_USA_LOW:
> > +		max_bg_channel = 11;
> > +		break;
> > +	case BCM43xx_LOCALE_JAPAN:
> > +	case BCM43xx_LOCALE_JAPAN_HIGH:
> > +		max_bg_channel = 14;
> > +		break;
> > +	default:
> > +		max_bg_channel = 13;
> > +	}
> > +
> >   
> Specifically BCM43xx_LOCALE_USA_CANADA_ANZ. A/NZ is certainly not the
> same as USA/Canada - in Australia we get 13 channels not 11 of US/Canada.
> 
> I'm sure this is because I don't know your driver but just in case you
> do need to split out an ANZ definition I thought I'd shout up.
> 
> Steve

----- End forwarded message -----

-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Thu Apr 12 16:52:17 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Apr 2007 09:52:17 -0500
Subject: BCM43xx_LOCALE_USA_CANADA_ANZ correct? -- Re: Please
	pull	'upstream-fixes' branch of wireless-2.6
In-Reply-To: <20070412133132.GA17205@tuxdriver.com>
References: <20070412133132.GA17205@tuxdriver.com>
Message-ID: <461E47A1.3010606@lwfinger.net>

John W. Linville wrote:
> BCM43xx_LOCALE_USA_CANADA_ANZ a correct grouping?

John,

Those categories were copied from the data in the SPROM on the BCM43xx chips, which are obviously 
out of date. That said, it is likely that the code will do the right thing in Australia and New 
Zealand as most of the cards have a 0 in the locale field of the SPROM, which falls through to the 
default case of the switch.

Larry

> John
> 
>>
>> Hi John,
>>
>> Apols for unsolicted email but I was looking through your patch and this
>> caught my eye:
>>> +/* set the maximum channel based on locale set in sprom or witle locale option */
>>> +	switch (bcm->sprom.locale) {
>>> +	case BCM43xx_LOCALE_THAILAND:
>>> +	case BCM43xx_LOCALE_ISRAEL:
>>> +	case BCM43xx_LOCALE_JORDAN:
>>> +	case BCM43xx_LOCALE_USA_CANADA_ANZ:
>>> +	case BCM43xx_LOCALE_USA_LOW:
>>> +		max_bg_channel = 11;
>>> +		break;
>>> +	case BCM43xx_LOCALE_JAPAN:
>>> +	case BCM43xx_LOCALE_JAPAN_HIGH:
>>> +		max_bg_channel = 14;
>>> +		break;
>>> +	default:
>>> +		max_bg_channel = 13;
>>> +	}
>>> +
>>>   
>> Specifically BCM43xx_LOCALE_USA_CANADA_ANZ. A/NZ is certainly not the
>> same as USA/Canada - in Australia we get 13 channels not 11 of US/Canada.
>>
>> I'm sure this is because I don't know your driver but just in case you
>> do need to split out an ANZ definition I thought I'd shout up.
>>
>> Steve
> 
> ----- End forwarded message -----
> 



From phil at datenspionage.de  Thu Apr 12 19:22:08 2007
From: phil at datenspionage.de (Philipp E. Letschert)
Date: Thu, 12 Apr 2007 19:22:08 +0200
Subject: HP Compaq nx6325 - new users experience
Message-ID: <20070412172207.GA4337@datenspionage.de>

Hi all,


HP Compaq nx6325 laptop was already on the list for a few times, so I
would like to add my experiences:

Im using kernel 2.6.21-rc6 with combined_2.6.21-rc6.patch applied.

lspci -vn reports:
30:00.0 0280: 14e4:4312 (rev 01)

dmesg after modprobe bcm43xx and ifconfig eth1 up:
bcm43xx driver
ACPI: PCI Interrupt 0000:30:00.0[A] -> GSI 18 (level, low) -> IRQ 20
PCI: Setting latency timer of device 0000:30:00.0 to 64
bcm43xx: Chip ID 0x4311, rev 0x1
bcm43xx: Number of cores: 4
bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
bcm43xx: PHY connected
bcm43xx: Detected PHY: Analog: 4, Type 2, Revision 8
bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
bcm43xx: Radio turned off
bcm43xx: Radio turned off
bcm43xx: PHY connected
bcm43xx: Microcode rev 0x118, pl 0x17 (2004-05-06  21:34:00)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 32-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)

First question:
Shouldnt the driver report Chip ID 0x4312 as lspci does? 

Second: How important is the firmware version? Im using 3.70.22.0, as
recommended by Larry, but was also able to load 3.100.65.1, so I don't
know if this has an impact on the driver.

btw, if it helps for development of 4.x support, the latest HP driver
for the nx6325 is located at
http://ftp.hp.com/pub/softpaq/sp34001-34500/sp34152.exe with firmware
version 4.100.15.5.


LED functionality:

after `ifconfig eth1 up' the LED turns on, and using the WLAN keyboard
switch turns the LED on and off. But this has no impact on the driver,
WLAN seems to work, even with LED turned off.

Using ndiswrapper, the LED turns on right after loading the module and
the keyboard switch turns LED on and off and additionally
enables/disables the device.

With both drivers, when rebooting the laptop with LED switched on, it
stays on, even when no driver is loaded and no device is available. So I
manually unload the driver during shutdown, so the LED goes off before
rebooting.


Device corruption:

this has been mentioned on the list before, and was also observed here:
When using 2.6.20 unpatched kernel and rebooting the laptop with bcm43xx
loaded and interface up, the device gets somehow corrupted.
After rebooting it was impossible to get the device working again.
Neither with bcm43xx nor ndiswrapper, power off didnt help either. The
only solution I found was to select 'Restore Defaults'->'Save' in the
laptops BIOS, and the device did work again. (The laptop BIOS version is
F.06)

However this issue has been resolved using 2.6.21-rc6 with combined
patch applied.

  
Rate settings:

setting a rate with iwconfig seems to have no effect, its always 1M
(with ndiswrapper its always 54M). But this could be a result of
unsupported wireless extensions?

Warning: Driver for device eth1 has been compiled with version 22
of Wireless Extension, while this program supports up to version 20.
Some things may be broken...


As I'm a new user, thats all I can report for the moment, I have no
experience in stabilty, performance, encryption settings for the bcm43xx
driver yet.


Regards, Philipp


From larry.finger at lwfinger.net  Thu Apr 12 20:08:31 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Apr 2007 13:08:31 -0500
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <20070412172207.GA4337@datenspionage.de>
References: <20070412172207.GA4337@datenspionage.de>
Message-ID: <461E759F.4080102@lwfinger.net>

Philipp E. Letschert wrote:
> Hi all,
> 
> 
> HP Compaq nx6325 laptop was already on the list for a few times, so I
> would like to add my experiences:
> 
> Im using kernel 2.6.21-rc6 with combined_2.6.21-rc6.patch applied.
> 
> lspci -vn reports:
> 30:00.0 0280: 14e4:4312 (rev 01)
> 
> dmesg after modprobe bcm43xx and ifconfig eth1 up:
> bcm43xx driver
> ACPI: PCI Interrupt 0000:30:00.0[A] -> GSI 18 (level, low) -> IRQ 20
> PCI: Setting latency timer of device 0000:30:00.0 to 64
> bcm43xx: Chip ID 0x4311, rev 0x1
> bcm43xx: Number of cores: 4
> bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
> bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
> bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
> bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
> bcm43xx: PHY connected
> bcm43xx: Detected PHY: Analog: 4, Type 2, Revision 8
> bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
> bcm43xx: Radio turned off
> bcm43xx: Radio turned off
> bcm43xx: PHY connected
> bcm43xx: Microcode rev 0x118, pl 0x17 (2004-05-06  21:34:00)
> bcm43xx: Radio turned on
> bcm43xx: Radio enabled by hardware
> bcm43xx: Chip initialized
> bcm43xx: 32-bit DMA initialized
> bcm43xx: Keys cleared
> bcm43xx: Selected 802.11 core (phytype 2)
> 
> First question:
> Shouldnt the driver report Chip ID 0x4312 as lspci does? 

No. The PCI id is different from the chip ID. Actually the programming of the device is mostly 
dependent on PHY and radio parameters.

> Second: How important is the firmware version? Im using 3.70.22.0, as
> recommended by Larry, but was also able to load 3.100.65.1, so I don't
> know if this has an impact on the driver.

It shouldn't matter.

> btw, if it helps for development of 4.x support, the latest HP driver
> for the nx6325 is located at
> http://ftp.hp.com/pub/softpaq/sp34001-34500/sp34152.exe with firmware
> version 4.100.15.5.
> 
> 
> LED functionality:
> 
> after `ifconfig eth1 up' the LED turns on, and using the WLAN keyboard
> switch turns the LED on and off. But this has no impact on the driver,
> WLAN seems to work, even with LED turned off.
> 
> Using ndiswrapper, the LED turns on right after loading the module and
> the keyboard switch turns LED on and off and additionally
> enables/disables the device.

In bcm43xx, the LED will never turn on until after the interface is brought up. That is deliberate. 
Are there any messages about "Radio hardware status changed" in the dmesg output? My laptop with a 
4311 has a switch on the front lip, not on the keyboard, the LED changes with the switch and the 
radio is disabled by the hardware. If yours behaves differently, we should change it, but if the 
hardware status changes do not propagate, I'm not sure what we can do.

> With both drivers, when rebooting the laptop with LED switched on, it
> stays on, even when no driver is loaded and no device is available. So I
> manually unload the driver during shutdown, so the LED goes off before
> rebooting.

That is a manifestation of the same problem.

> Device corruption:
> 
> this has been mentioned on the list before, and was also observed here:
> When using 2.6.20 unpatched kernel and rebooting the laptop with bcm43xx
> loaded and interface up, the device gets somehow corrupted.
> After rebooting it was impossible to get the device working again.
> Neither with bcm43xx nor ndiswrapper, power off didnt help either. The
> only solution I found was to select 'Restore Defaults'->'Save' in the
> laptops BIOS, and the device did work again. (The laptop BIOS version is
> F.06)
> 
> However this issue has been resolved using 2.6.21-rc6 with combined
> patch applied.

No PCIe device works on an unpatched 2.6.20 kernel. You need 2.6.20.4 or later. The reason is that 
PCIe interrupts are not passed on, which obviously confuses your BIOS, and jams up interrupts on the 
appropriate IRQ line. I'm surprised that turning off the power didn't get it reset.

> Rate settings:
> 
> setting a rate with iwconfig seems to have no effect, its always 1M
> (with ndiswrapper its always 54M). But this could be a result of
> unsupported wireless extensions?
> 
> Warning: Driver for device eth1 has been compiled with version 22
> of Wireless Extension, while this program supports up to version 20.
> Some things may be broken...

No - The VERSION message is just a standard one. With 2.6.21-rc6, the rate is initialized at 24M. If 
it has been downgraded to 1M, it must be a consequence of the strength of your signal. What are the 
signal strengths, etc. shown by iwconfig?

Larry




From linville at tuxdriver.com  Thu Apr 12 20:00:47 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 12 Apr 2007 14:00:47 -0400
Subject: BCM43xx_LOCALE_USA_CANADA_ANZ correct? -- Re: Please
	pull	'upstream-fixes' branch of wireless-2.6
In-Reply-To: <461E47A1.3010606@lwfinger.net>
References: <20070412133132.GA17205@tuxdriver.com>
	<461E47A1.3010606@lwfinger.net>
Message-ID: <20070412180047.GA3597@tuxdriver.com>

On Thu, Apr 12, 2007 at 09:52:17AM -0500, Larry Finger wrote:
> John W. Linville wrote:
> >BCM43xx_LOCALE_USA_CANADA_ANZ a correct grouping?

> Those categories were copied from the data in the SPROM on the BCM43xx 
> chips, which are obviously out of date. That said, it is likely that the 
> code will do the right thing in Australia and New Zealand as most of the 
> cards have a 0 in the locale field of the SPROM, which falls through to the 
> default case of the switch.

Cool, thanks...

-- 
John W. Linville
linville at tuxdriver.com


From evanfoss at gmail.com  Fri Apr 13 01:38:36 2007
From: evanfoss at gmail.com (evan foss)
Date: Thu, 12 Apr 2007 19:38:36 -0400
Subject: Finally working! :)
Message-ID: <4a55afb80704121638q207a4be4x6e6ce4e8bd5d24e8@mail.gmail.com>

Thank you all very much. For the first time my BCM4311 based card
actually works. It is a little unstable by that might be the access
point. I am testing it on my universities heavily loaded network. The
range is not as good as in windows but this is just amazing. I have
listed my machines rough spec. Thank you all for your work.

Compaq Presario V3019US
BCM4311
AMD64 with SMP
linux-2.6.20.6 with patch
udev-104-r12

(My earlier udev had a fw loading bug)

-- 
http://www.coe.neu.edu/~efoss/
http://evanfoss.googlepages.com/


From phil at datenspionage.de  Fri Apr 13 01:49:20 2007
From: phil at datenspionage.de (Philipp E. Letschert)
Date: Fri, 13 Apr 2007 01:49:20 +0200
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <461E759F.4080102@lwfinger.net>
References: <20070412172207.GA4337@datenspionage.de>
	<461E759F.4080102@lwfinger.net>
Message-ID: <20070412234920.GA2250@datenspionage.de>

Larry Finger schrieb am Do, 12.04.2007 (13:08:31 -0500):
> Philipp E. Letschert wrote:
> >LED functionality:
> >
> >after `ifconfig eth1 up' the LED turns on, and using the WLAN keyboard
> >switch turns the LED on and off. But this has no impact on the driver,
> >WLAN seems to work, even with LED turned off.
> >
> >Using ndiswrapper, the LED turns on right after loading the module and
> >the keyboard switch turns LED on and off and additionally
> >enables/disables the device.
> 
> In bcm43xx, the LED will never turn on until after the interface is brought 
> up. That is deliberate. Are there any messages about "Radio hardware status 
> changed" in the dmesg output? My laptop with a 4311 has a switch on the 
> front lip, not on the keyboard, the LED changes with the switch and the 
> radio is disabled by the hardware. If yours behaves differently, we should 
> change it, but if the hardware status changes do not propagate, I'm not 
> sure what we can do.
> 
> >With both drivers, when rebooting the laptop with LED switched on, it
> >stays on, even when no driver is loaded and no device is available. So I
> >manually unload the driver during shutdown, so the LED goes off before
> >rebooting.
> 
> That is a manifestation of the same problem.
> 
> >Device corruption:
> >
> >this has been mentioned on the list before, and was also observed here:
> >When using 2.6.20 unpatched kernel and rebooting the laptop with bcm43xx
> >loaded and interface up, the device gets somehow corrupted.
> >After rebooting it was impossible to get the device working again.
> >Neither with bcm43xx nor ndiswrapper, power off didnt help either. The
> >only solution I found was to select 'Restore Defaults'->'Save' in the
> >laptops BIOS, and the device did work again. (The laptop BIOS version is
> >F.06)
> >
> >However this issue has been resolved using 2.6.21-rc6 with combined
> >patch applied.
> 
> No PCIe device works on an unpatched 2.6.20 kernel. You need 2.6.20.4 or 
> later. The reason is that PCIe interrupts are not passed on, which 
> obviously confuses your BIOS, and jams up interrupts on the appropriate IRQ 
> line. I'm surprised that turning off the power didn't get it reset.

I finally found out what my "corruption bug" was about:

In kernel 2.6.20.4 the LED didn't work, when pressing the switch (btw. it
is not directly on the keyboard, but a separate switch right above, with
an integrated LED) and there were no "Radio hardware status changed" messages.
So I assumed the switch doesnt work at all. But that was wrong, I silently
disabled the device (with the LED still on) and it stayed disabled, even when
turning power off.
All I should have done, was to press the switch once more (even with LED
already on), instead of resetting the BIOS. Finding this kept me busy for
a few hours...

In patched 2.6.21-rc6 LED works fine, and the "Radio hardware status
changed" messages show up. Again I was wrong in thinking the switch
doesnt turn off the device properly. It just doesnt switch off immediately.
After pressing and the LED is off, you still have a result from "iwlist
scan" for a some seconds, before the device is finally disabled -
bad tester I am.

I try to describe the LEDs behaviour:
 1. Initial boot, hardware enabled, LED is off, no module loaded
 2. modprobe bcm43xx, ifconfig ethx up
 3. LED is on, Device is working
 4. Reboot
 5. Hardware enabled, LED is on, no module loaded
 6. modprobe bcm43xx
 7. LED goes off
 8. ifconfig ethx up
 9. LED goes on, device is working
10. pressing WLAN switch
11. LED goes off, device is not working
12. Power off, Boot
13. Hardware disabled, LED is off, no module loaded
14. modprobe bcm43xx, ifconfig ethx up
15. LED doesn't turn on, hardware still disabled, device not working
16. pressing WLAN switch
17. LED goes on, device is working

This is all ok and I dont know if other devices are the same, but I
could imagine a different behaviour:

- loading the module initially disables the hardware, never mind if it
  was enabled or disabled before

- doing ifconfig ethx up enables hardware (and LED)
  or
  pressing WLAN switch enables hardware and does ifconfig ethx up

- doing ifconfig ethx down disables hardware
  or
  pressing WLAN switch disables hardware and does ifconfig ethx down

- doing a reboot disables the hardware and turns the LED off.


> >Rate settings:
> >
> >setting a rate with iwconfig seems to have no effect, its always 1M
> >(with ndiswrapper its always 54M). But this could be a result of
> >unsupported wireless extensions?
> >
> >Warning: Driver for device eth1 has been compiled with version 22
> >of Wireless Extension, while this program supports up to version 20.
> >Some things may be broken...
> 
> No - The VERSION message is just a standard one. With 2.6.21-rc6, the rate 
> is initialized at 24M. If it has been downgraded to 1M, it must be a 
> consequence of the strength of your signal. What are the signal strengths, 
> etc. shown by iwconfig?

Ah, I had no AP associated, so no signal strength and no rate changing.

Thanks for helping and all the explanation!


Regards,
Philipp



From linville at tuxdriver.com  Fri Apr 13 02:09:50 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 12 Apr 2007 20:09:50 -0400
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
	PHYs
In-Reply-To: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
Message-ID: <20070413000950.GC3470@tuxdriver.com>

On Wed, Apr 11, 2007 at 11:08:53AM -0500, Larry Finger wrote:
> On PPC architecture with phy->rev == 1, machine checks occur during
> initialization of the "Extended G PHY registers". This problem was
> also seen on bcm43xx-softmac, and was fixed by conditionally skipping
> over certain reads/writes of these registers.  The same solution has been
> applied here with testing by David Woodhouse.  Note: These modifications
> are not found in the specifications, but are needed for PPC.

I added this patch to the Fedora rawhide kernels, but our Fedora QA
lead reports that he still has this crash:

	http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233011

I had diagnosed this to be the same crash as this patch was supposed
to address.  Was I in error?

He also reports that the problem still occurs on my FC7 test kernels,
which are very close to the current rawhide kernels but with the most
recent round of wireless-dev updates added.

	http://people.redhat.com/linville/kernels/fc7/

Any thoughts?

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Fri Apr 13 02:53:24 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Apr 2007 19:53:24 -0500
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <20070412234920.GA2250@datenspionage.de>
References: <20070412172207.GA4337@datenspionage.de>	<461E759F.4080102@lwfinger.net>
	<20070412234920.GA2250@datenspionage.de>
Message-ID: <461ED484.4090308@lwfinger.net>

Philipp,

I can give you a little further info about the LED and the switch. The switch controls the radio, 
but it doesn't actually control the LED. The status is reported through a single bit that is 
read-only from the processor. In addition, the switch doesn't cause an interrupt. What happens is 
that the bcm43xx driver runs a periodic thread that is scheduled every one second. Among other 
things, it compares the hardware bit with a saved setting. If the bit changes, the appropriate 
message is logged and the LED control bits are changed. That is why there is a delay from the time 
the switch is pressed until the light changes state. The radio, however is turned off immediately. 
Your description matches exactly what is programmed.

I am currently working on a patch to turn off the LED when the driver is unloaded either by rmmod or 
by rebooting. So far it isn't working.

Larry


From proski at gnu.org  Fri Apr 13 02:57:05 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 12 Apr 2007 20:57:05 -0400
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
	PHYs
In-Reply-To: <20070413000950.GC3470@tuxdriver.com>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413000950.GC3470@tuxdriver.com>
Message-ID: <1176425825.2588.58.camel@dv>

On Thu, 2007-04-12 at 20:09 -0400, John W. Linville wrote:
> I added this patch to the Fedora rawhide kernels, but our Fedora QA
> lead reports that he still has this crash:
> 
> 	http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233011
> 
> I had diagnosed this to be the same crash as this patch was supposed
> to address.  Was I in error?

I also observed the machine check with the current mb branch this
morning, although I didn't have a chance to capture it, so I wanted to
reported it later when I would have the details.

I was testing the patch on a G4 PowerMac.  I also have a G3 PowerMac
where I tested older versions, and I intend to test the current code on
it as well.

> Any thoughts?

Apparently more changes are needed.  I don't think the latest patch
needs to be reverted.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Fri Apr 13 03:22:01 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Apr 2007 20:22:01 -0500
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev
	1 PHYs
In-Reply-To: <20070413000950.GC3470@tuxdriver.com>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413000950.GC3470@tuxdriver.com>
Message-ID: <461EDB39.6080806@lwfinger.net>

John W. Linville wrote:
> On Wed, Apr 11, 2007 at 11:08:53AM -0500, Larry Finger wrote:
>> On PPC architecture with phy->rev == 1, machine checks occur during
>> initialization of the "Extended G PHY registers". This problem was
>> also seen on bcm43xx-softmac, and was fixed by conditionally skipping
>> over certain reads/writes of these registers.  The same solution has been
>> applied here with testing by David Woodhouse.  Note: These modifications
>> are not found in the specifications, but are needed for PPC.
> 
> I added this patch to the Fedora rawhide kernels, but our Fedora QA
> lead reports that he still has this crash:
> 
> 	http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233011
> 
> I had diagnosed this to be the same crash as this patch was supposed
> to address.  Was I in error?
> 
> He also reports that the problem still occurs on my FC7 test kernels,
> which are very close to the current rawhide kernels but with the most
> recent round of wireless-dev updates added.

I suspect the machine check is from the same kind of problem; however, the soft lockup is different. 
It is always possible that it changes the behavior. There is also the different program flow in 
mac80211. I just put in the ones that failed in softmac.

Your tester needs to get a copy of David's hack that prints out the address of the offending 
register. That is the only way to tell what is happening. Once we know the address, then it will be 
a matter of getting printk's into the code to tell which one is failing.

Larry


From johannes at sipsolutions.net  Fri Apr 13 08:58:31 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 13 Apr 2007 08:58:31 +0200
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <20070412172207.GA4337@datenspionage.de>
References: <20070412172207.GA4337@datenspionage.de>
Message-ID: <1176447511.7052.79.camel@johannes.berg>

On Thu, 2007-04-12 at 19:22 +0200, Philipp E. Letschert wrote:

> Warning: Driver for device eth1 has been compiled with version 22
> of Wireless Extension, while this program supports up to version 20.
> Some things may be broken...

That's fine, we just cycled to version 22 in the kernel and userspace
doesn't even support that yet afaik ;)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070413/471a6273/attachment.pgp>

From phil at datenspionage.de  Fri Apr 13 10:30:27 2007
From: phil at datenspionage.de (Philipp E. Letschert)
Date: Fri, 13 Apr 2007 10:30:27 +0200
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <461ED484.4090308@lwfinger.net>
References: <20070412172207.GA4337@datenspionage.de>
	<461E759F.4080102@lwfinger.net>
	<20070412234920.GA2250@datenspionage.de>
	<461ED484.4090308@lwfinger.net>
Message-ID: <20070413083027.GA4104@datenspionage.de>

Larry Finger schrieb am Do, 12.04.2007 (19:53:24 -0500):
> Philipp,
> 
> I can give you a little further info about the LED and the switch. The 
> switch controls the radio, but it doesn't actually control the LED. The 
> status is reported through a single bit that is read-only from the 
> processor. In addition, the switch doesn't cause an interrupt. What happens 
> is that the bcm43xx driver runs a periodic thread that is scheduled every 
> one second. Among other things, it compares the hardware bit with a saved 
> setting. If the bit changes, the appropriate message is logged and the LED 
> control bits are changed. That is why there is a delay from the time the 
> switch is pressed until the light changes state. The radio, however is 
> turned off immediately. Your description matches exactly what is programmed.

Great, so it is just a hardware limitation...
Understanding this, I would personally prefer, that the driver turns on
the LED and brings up the interface, when loaded and detecting the radio
enabled. If the user doesnt like this, he can permanently turn off WLAN
using the switch?

> 
> I am currently working on a patch to turn off the LED when the driver is 
> unloaded either by rmmod or by rebooting. So far it isn't working.

turning off the LED, when doing a rmmod already works.

Philipp



From stefano.brivio at polimi.it  Fri Apr 13 11:36:38 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 13 Apr 2007 11:36:38 +0200
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
	PHYs
In-Reply-To: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
Message-ID: <20070413113638.10db9767@localhost>

On Wed, 11 Apr 2007 11:08:53 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> On PPC architecture with phy->rev == 1, machine checks occur during
> initialization of the "Extended G PHY registers". This problem was
> also seen on bcm43xx-softmac, and was fixed by conditionally skipping
> over certain reads/writes of these registers.  The same solution has been
> applied here with testing by David Woodhouse.  Note: These modifications
> are not found in the specifications, but are needed for PPC.

I don't think this patch has to be reverted, but I still think that it's
better to notice the reverse engineers team about failing operations
and understand the real problem rather than hiding it. Which works in some
cases, but sometimes just hide other bugs.

I'm almost done with rewriting the whole A/G/N setup and init routines,
following the new v4 specs. This issue could even be related.


-- 
Ciao
Stefano


From aatrof at gmail.com  Fri Apr 13 13:36:08 2007
From: aatrof at gmail.com (Aleksander Trofimowicz)
Date: Fri, 13 Apr 2007 13:36:08 +0200
Subject: HP Compaq nx6325 - new users experience
Message-ID: <759d30a60704130436j3f348a78o9a58ad390190770e@mail.gmail.com>

> I am currently working on a patch to turn off the LED when the driver is unloaded
> either by rmmod or by rebooting. So far it isn't working.
>
On hp nx6325 the same switch/LED controls/indicates a state of WLAN
and Bluetooth transreceivers. I think that the current separation
between antennas activated by a switch and drivers is a good thing.
Primarily for security reasons.
-- 
at


From ftoledo at docksud.com.ar  Fri Apr 13 16:04:24 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Fri, 13 Apr 2007 11:04:24 -0300
Subject: IRQ_READY timeout again
Message-ID: <200704131104.27687.ftoledo@docksud.com.ar>

its wan on 2.6.20.6 + combined patch
bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0220 (TX) max used slots: 14/512
bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
SoftMAC: Associate: Scanning for networks first.
SoftMAC: Associate: failed to initiate scan. Is device up?
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
SoftMAC: Queueing Authentication Request to 00:0d:88:91:3e:7b
SoftMAC: Cannot associate without being authenticated, requested 
authentication
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Already associating or associated to 00:0d:88:91:3e:7b
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Already requested authentication, waiting...
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
ragnarok at ntbkragnarok:~$ 

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070413/474c6ceb/attachment.pgp>

From phil at datenspionage.de  Fri Apr 13 16:50:25 2007
From: phil at datenspionage.de (Philipp E. Letschert)
Date: Fri, 13 Apr 2007 16:50:25 +0200
Subject: HP Compaq nx6325 - new users experience
In-Reply-To: <759d30a60704130436j3f348a78o9a58ad390190770e@mail.gmail.com>
References: <759d30a60704130436j3f348a78o9a58ad390190770e@mail.gmail.com>
Message-ID: <20070413145025.GA5005@datenspionage.de>

Aleksander Trofimowicz schrieb am Fr, 13.04.2007 (13:36:08 +0200):
> > I am currently working on a patch to turn off the LED when the driver is unloaded
> > either by rmmod or by rebooting. So far it isn't working.
> >
> On hp nx6325 the same switch/LED controls/indicates a state of WLAN
> and Bluetooth transreceivers. I think that the current separation
> between antennas activated by a switch and drivers is a good thing.
> Primarily for security reasons.

I have only the WLAN built in, Bluetooth is an optional feature on the
nx6325. The same switch/LED controlling both devices has implications I
was not aware of..

Philipp



From larry.finger at lwfinger.net  Fri Apr 13 17:06:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Apr 2007 10:06:00 -0500
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev
	1 PHYs
In-Reply-To: <20070413113638.10db9767@localhost>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413113638.10db9767@localhost>
Message-ID: <461F9C58.6050106@lwfinger.net>

Stefano Brivio wrote:
> On Wed, 11 Apr 2007 11:08:53 -0500
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> 
>> On PPC architecture with phy->rev == 1, machine checks occur during
>> initialization of the "Extended G PHY registers". This problem was
>> also seen on bcm43xx-softmac, and was fixed by conditionally skipping
>> over certain reads/writes of these registers.  The same solution has been
>> applied here with testing by David Woodhouse.  Note: These modifications
>> are not found in the specifications, but are needed for PPC.
> 
> I don't think this patch has to be reverted, but I still think that it's
> better to notice the reverse engineers team about failing operations
> and understand the real problem rather than hiding it. Which works in some
> cases, but sometimes just hide other bugs.
> 
> I'm almost done with rewriting the whole A/G/N setup and init routines,
> following the new v4 specs. This issue could even be related.

I agree that it would be better if we could follow the specs and not have the machine check problem. 
My impression is that early versions of the bcm43xx driver did not have this difficulty, but that it 
appeared after a relatively recent change in the G init specs. BTW, these were the changes that 
greatly improved performance, particularly on the phy->rev = 8 devices. Perhaps the Broadcom 
software abandoned/ignored the phy->rev = 1 units running on PPC hardware, which seems to be the 
only combination that shows the problem. I don't know about MIPS hardware, but the problem is not 
seen on x86 architecture.

I look forward to your rewrite of the setup and init routines. Perhaps they will even let my 4311 
work with mac80211, but I will be very surprised if the PPC machine check problem goes away.

Larry


From johannes at sipsolutions.net  Fri Apr 13 17:17:46 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 13 Apr 2007 17:17:46 +0200
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 
	1 PHYs
In-Reply-To: <461F9C58.6050106@lwfinger.net>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413113638.10db9767@localhost>  <461F9C58.6050106@lwfinger.net>
Message-ID: <1176477466.7052.114.camel@johannes.berg>

On Fri, 2007-04-13 at 10:06 -0500, Larry Finger wrote:

> I look forward to your rewrite of the setup and init routines. Perhaps they will even let my 4311 
> work with mac80211, but I will be very surprised if the PPC machine check problem goes away.

With phy rev == 1, the gmode bit is assumed unset when initialising a G
PHY. Maybe that is the crucial difference. David will send me some
backtraces of this problem, once he does I'll look at it again.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070413/834b0629/attachment.pgp>

From ftoledo at docksud.com.ar  Fri Apr 13 23:10:01 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Fri, 13 Apr 2007 18:10:01 -0300
Subject: IRQ_READY timeout again
Message-ID: <200704131810.04812.ftoledo@docksud.com.ar>

its wan on 2.6.20.6 + combined patch
bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0220 (TX) max used slots: 14/512
bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
SoftMAC: Associate: Scanning for networks first.
SoftMAC: Associate: failed to initiate scan. Is device up?
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
SoftMAC: Queueing Authentication Request to 00:0d:88:91:3e:7b
SoftMAC: Cannot associate without being authenticated, requested 
authentication
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Already associating or associated to 00:0d:88:91:3e:7b
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
SoftMAC: Already requested authentication, waiting...
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
SoftMAC: Sent Authentication Request to 00:0d:88:91:3e:7b.
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
ragnarok at ntbkragnarok:~$ 

when happen and previus that this issue occurs, the connection seems die, but 
i still receive the "new ap found" or "network disapear" fom the 
kdenetworkmanager

ps. sorry i resend this message , it has error when send.
-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070413/2e8094e3/attachment.pgp>

From larry.finger at lwfinger.net  Sat Apr 14 00:07:03 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Apr 2007 17:07:03 -0500
Subject: IRQ_READY timeout again
In-Reply-To: <200704131810.04812.ftoledo@docksud.com.ar>
References: <200704131810.04812.ftoledo@docksud.com.ar>
Message-ID: <461FFF07.1040406@lwfinger.net>

Fernando Toledo wrote:
> its wan on 2.6.20.6 + combined patch
> bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
> bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
> bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
> bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
> bcm43xx: DMA-32 0x0220 (TX) max used slots: 14/512
> bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
> SoftMAC: Associate: Scanning for networks first.
> SoftMAC: Associate: failed to initiate scan. Is device up?
> bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
> bcm43xx: IRQ_READY timeout
> bcm43xx: core_up for active 802.11 core failed (-19)
> bcm43xx: IRQ_READY timeout
> bcm43xx: core_up for active 802.11 core failed (-19)

What happened before the above messages? The "max used slots" messages only occur when the device is 
stopping. Please go to /var/log/messages, find where this occurred, and send the section before 
these messages.

Larry


From derinkaya at gmail.com  Sat Apr 14 12:53:31 2007
From: derinkaya at gmail.com (Esref Derinkaya)
Date: Sat, 14 Apr 2007 13:53:31 +0300
Subject: hp dv2125nr laptop wireless problem. radio turned off.
Message-ID: <7f0b39c50704140353p4d4078e8s18fefde44628ee7@mail.gmail.com>

Hello,

I am using Slackware 10.1 on HP Pavilion dv2125nr Laptop but i am not able
to use wireless card.

What is wrong? According to devices section at bcm43xx.berlios.de my chip ID
defined as "unstable".  Unstable means works sometimes or never?

Here are the outputs...

# uname -a
Linux darkstar 2.6.20.6 #2 SMP Fri Apr 13 21:38:26 EEST 2007 i686 unknown
unknown GNU/Linux

# lspci -v -d 14e4:4311
01:00.0 Network controller: Broadcom Corporation: Unknown device 4311 (rev
01)
 Subsystem: Hewlett-Packard Company: Unknown device 1363
 Flags: bus master, fast devsel, latency 0, IRQ 20
 Memory at c3000000 (32-bit, non-prefetchable) [size=16K]
 Capabilities: [40] Power Management version 2
 Capabilities: [58] Message Signalled Interrupts: 64bit- Queue=0/0 Enable-
 Capabilities: [d0] #10 [0011]

# dmesg | grep bcm43
bcm43xx driver
bcm43xx: Chip ID 0x4311, rev 0x1
bcm43xx: Number of cores: 4
bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
bcm43xx: PHY connected
bcm43xx: Detected PHY: Version: 4, Type 2, Revision 8
bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
bcm43xx: Radio turned off
bcm43xx: Radio turned off


# iwconfig eth1
eth1      IEEE 802.11b/g  ESSID:off/any  Nickname:"Broadcom 4311"
          Mode:Managed  Access Point: FF:FF:FF:FF:FF:FF
          RTS thr:off   Fragment thr:off
          Encryption key:off
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/7aac438c/attachment.html>

From phil at datenspionage.de  Sat Apr 14 14:30:35 2007
From: phil at datenspionage.de (Philipp E. Letschert)
Date: Sat, 14 Apr 2007 14:30:35 +0200
Subject: hp dv2125nr laptop wireless problem. radio turned off.
In-Reply-To: <7f0b39c50704140353p4d4078e8s18fefde44628ee7@mail.gmail.com>
References: <7f0b39c50704140353p4d4078e8s18fefde44628ee7@mail.gmail.com>
Message-ID: <20070414123035.GA2407@datenspionage.de>

Esref Derinkaya schrieb am Sa, 14.04.2007 (13:53:31 +0300):
> Hello,
> 
> I am using Slackware 10.1 on HP Pavilion dv2125nr Laptop but i am not able
> to use wireless card.
> 
> What is wrong? According to devices section at bcm43xx.berlios.de my chip ID
> defined as "unstable".  Unstable means works sometimes or never?

The driver works. As I understood by having a quick look at the mailing list
archives, there are still issues with performance and special setups, that is
currently beeing worked on. At least you should be able to have an
result from "iwlist scan" and connect to your AP.

> 
> Here are the outputs...
> 
> # uname -a
> Linux darkstar 2.6.20.6 #2 SMP Fri Apr 13 21:38:26 EEST 2007 i686 unknown
> unknown GNU/Linux
> 
> # lspci -v -d 14e4:4311
> 01:00.0 Network controller: Broadcom Corporation: Unknown device 4311 (rev
> 01)
> Subsystem: Hewlett-Packard Company: Unknown device 1363
> Flags: bus master, fast devsel, latency 0, IRQ 20
> Memory at c3000000 (32-bit, non-prefetchable) [size=16K]
> Capabilities: [40] Power Management version 2
> Capabilities: [58] Message Signalled Interrupts: 64bit- Queue=0/0 Enable-
> Capabilities: [d0] #10 [0011]
> 
> # dmesg | grep bcm43
> bcm43xx driver
> bcm43xx: Chip ID 0x4311, rev 0x1
> bcm43xx: Number of cores: 4
> bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
> bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
> bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
> bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
> bcm43xx: PHY connected
> bcm43xx: Detected PHY: Version: 4, Type 2, Revision 8
> bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
> bcm43xx: Radio turned off
> bcm43xx: Radio turned off

It seems you have not loaded the firmware required by the driver. A
short description of the procedure is here:
http://gentoo-wiki.com/HARDWARE_BCM43xx
ftp://lwfinger.dynalias.org/Driver_Locations might be useful when using
bcm43xx-fwcutter. The firmware version shouldn't matter, as long as its
3.x.

ftp://lwfinger.dynalias.org/patches/ gives you some recent improvements
of the driver, but patching your kernel should not be necessarily
needed.

> 
> # iwconfig eth1
> eth1      IEEE 802.11b/g  ESSID:off/any  Nickname:"Broadcom 4311"
>          Mode:Managed  Access Point: FF:FF:FF:FF:FF:FF
>          RTS thr:off   Fragment thr:off
>          Encryption key:off

dont forget an "ifconfig eth1 up" after loading the driver. Your dmesg output
should then have the following additional lines:

bcm43xx: PHY connected
bcm43xx: Microcode rev 0x123, pl 0x21 (2005-01-22  19:48:06)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 32-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)




Regards,
Philipp



From ftoledo at docksud.com.ar  Sat Apr 14 15:53:02 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sat, 14 Apr 2007 10:53:02 -0300
Subject: IRQ_READY timeout again
In-Reply-To: <461FFF07.1040406@lwfinger.net>
References: <200704131810.04812.ftoledo@docksud.com.ar>
	<461FFF07.1040406@lwfinger.net>
Message-ID: <200704141053.05210.ftoledo@docksud.com.ar>

El Viernes, 13 de Abril de 2007 19:07, escribi?:
> Fernando Toledo wrote:
> > its wan on 2.6.20.6 + combined patch
> > bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
> > bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
> > bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
> > bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
> > bcm43xx: DMA-32 0x0220 (TX) max used slots: 14/512
> > bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
> > SoftMAC: Associate: Scanning for networks first.
> > SoftMAC: Associate: failed to initiate scan. Is device up?
> > bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
> > bcm43xx: IRQ_READY timeout
> > bcm43xx: core_up for active 802.11 core failed (-19)
> > bcm43xx: IRQ_READY timeout
> > bcm43xx: core_up for active 802.11 core failed (-19)
>
> What happened before the above messages? The "max used slots" messages only
> occur when the device is stopping. Please go to /var/log/messages, find
> where this occurred, and send the section before these messages.
>
> Larry
Hi, larry,
i attach , the dmesg and syslog output 
i now at fisl8 (fisl.softwarelivre.org), here have a lot of networks to 
connect (~20), i think that the card stop working for network have too much 
traffic.

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dmesg.gz
Type: application/x-gzip
Size: 6391 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/6a8d6f47/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: syslog.gz
Type: application/x-gzip
Size: 11856 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/6a8d6f47/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/6a8d6f47/attachment.pgp>

From Larry.Finger at lwfinger.net  Sat Apr 14 17:33:58 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 10:33:58 -0500
Subject: Changes to devices page at bcm43xx.berlios.de
Message-ID: <4620F466.70205@lwfinger.net>

I don't know who handles updates to http://bcm43xx.berlios.de, but the devices page should be 
revised. The entry for the 4311 and 4312 b/g should indicate that they are "Supported with kernel 
2.6.20.6, or later.

The second section should include the following card:

Output of lspci -v:

01:00.0 Network controller: Broadcom Corporation Dell Wireless 1390 WLAN Mini-PCI Card (rev 01)
         Subsystem: Hewlett-Packard Company Unknown device 1363
         Flags: bus master, fast devsel, latency 0, IRQ 19
         Memory at c3000000 (32-bit, non-prefetchable) [size=16K]
         Capabilities: [40] Power Management version 2
         Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- Queue=0/0 Enable-
         Capabilities: [d0] Express Legacy Endpoint IRQ 0
         Capabilities: [100] Advanced Error Reporting
         Capabilities: [13c] Virtual Channel

Output of lspci -n:

01:00.0 Class 0280: 14e4:4311 (rev 01)

Thanks,

Larry


From mathias.demare at gmail.com  Sat Apr 14 17:51:10 2007
From: mathias.demare at gmail.com (=?ISO-8859-1?Q?Mathias_De_Mar=E9?=)
Date: Sat, 14 Apr 2007 17:51:10 +0200
Subject: bcm43xx.berlios.de -- Support page?
Message-ID: <375c60f40704140851m6aee9d4apa20873c27c91f6e7@mail.gmail.com>

On a slightly related note: what happened to the support forum? (
http://bcm43xx.spugna.org/ ) It doesn't seem to be online anymore.

Mathias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/6af6c785/attachment.html>

From derinkaya at gmail.com  Sat Apr 14 18:05:47 2007
From: derinkaya at gmail.com (Esref Derinkaya)
Date: Sat, 14 Apr 2007 19:05:47 +0300
Subject: hp dv2125nr laptop wireless problem. radio turned off.
In-Reply-To: <20070414123035.GA2407@datenspionage.de>
References: <7f0b39c50704140353p4d4078e8s18fefde44628ee7@mail.gmail.com>
	<20070414123035.GA2407@datenspionage.de>
Message-ID: <7f0b39c50704140905v47b98fb9j32e168ad4e2aecf2@mail.gmail.com>

After I changed the firmware files and doing "ifconfig eth1 up" everything
is worked perfectly!

Thanks a lot. :-)

2007/4/14, Philipp E. Letschert <phil at datenspionage.de>:
>
> Esref Derinkaya schrieb am Sa, 14.04.2007 (13:53:31 +0300):
> > Hello,
> >
> > I am using Slackware 10.1 on HP Pavilion dv2125nr Laptop but i am not
> able
> > to use wireless card.
> >
> > What is wrong? According to devices section at bcm43xx.berlios.de my
> chip ID
> > defined as "unstable".  Unstable means works sometimes or never?
>
> The driver works. As I understood by having a quick look at the mailing
> list
> archives, there are still issues with performance and special setups, that
> is
> currently beeing worked on. At least you should be able to have an
> result from "iwlist scan" and connect to your AP.
>
> >
> > Here are the outputs...
> >
> > # uname -a
> > Linux darkstar 2.6.20.6 #2 SMP Fri Apr 13 21:38:26 EEST 2007 i686
> unknown
> > unknown GNU/Linux
> >
> > # lspci -v -d 14e4:4311
> > 01:00.0 Network controller: Broadcom Corporation: Unknown device 4311
> (rev
> > 01)
> > Subsystem: Hewlett-Packard Company: Unknown device 1363
> > Flags: bus master, fast devsel, latency 0, IRQ 20
> > Memory at c3000000 (32-bit, non-prefetchable) [size=16K]
> > Capabilities: [40] Power Management version 2
> > Capabilities: [58] Message Signalled Interrupts: 64bit- Queue=0/0
> Enable-
> > Capabilities: [d0] #10 [0011]
> >
> > # dmesg | grep bcm43
> > bcm43xx driver
> > bcm43xx: Chip ID 0x4311, rev 0x1
> > bcm43xx: Number of cores: 4
> > bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
> > bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
> > bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
> > bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
> > bcm43xx: PHY connected
> > bcm43xx: Detected PHY: Version: 4, Type 2, Revision 8
> > bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
> > bcm43xx: Radio turned off
> > bcm43xx: Radio turned off
>
> It seems you have not loaded the firmware required by the driver. A
> short description of the procedure is here:
> http://gentoo-wiki.com/HARDWARE_BCM43xx
> ftp://lwfinger.dynalias.org/Driver_Locations might be useful when using
> bcm43xx-fwcutter. The firmware version shouldn't matter, as long as its
> 3.x.
>
> ftp://lwfinger.dynalias.org/patches/ gives you some recent improvements
> of the driver, but patching your kernel should not be necessarily
> needed.
>
> >
> > # iwconfig eth1
> > eth1      IEEE 802.11b/g  ESSID:off/any  Nickname:"Broadcom 4311"
> >          Mode:Managed  Access Point: FF:FF:FF:FF:FF:FF
> >          RTS thr:off   Fragment thr:off
> >          Encryption key:off
>
> dont forget an "ifconfig eth1 up" after loading the driver. Your dmesg
> output
> should then have the following additional lines:
>
> bcm43xx: PHY connected
> bcm43xx: Microcode rev 0x123, pl 0x21 (2005-01-22  19:48:06)
> bcm43xx: Radio turned on
> bcm43xx: Radio enabled by hardware
> bcm43xx: Chip initialized
> bcm43xx: 32-bit DMA initialized
> bcm43xx: Keys cleared
> bcm43xx: Selected 802.11 core (phytype 2)
>
>
>
>
> Regards,
> Philipp
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/2d94c0cd/attachment.html>

From stefano.brivio at polimi.it  Sat Apr 14 18:38:32 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Sat, 14 Apr 2007 18:38:32 +0200
Subject: Changes to devices page at bcm43xx.berlios.de
In-Reply-To: <4620F466.70205@lwfinger.net>
References: <4620F466.70205@lwfinger.net>
Message-ID: <20070414183832.77ba87ca@localhost>

On Sat, 14 Apr 2007 10:33:58 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> I don't know who handles updates to http://bcm43xx.berlios.de,

It's me. I would really like to drop most pages there and put links to
http://linuxwireless.org. Johannes even imported the device list to
http://linuxwireless.org/en/users/Devices/PCI (not working right now) which
is a wiki, so everybody can update it.

I'd say that the only page we should keep on berlios is the one about
donations, and that we should move links to documentation to linuxwireless.

> but the
> devices page should be revised. The entry for the 4311 and 4312 b/g
> should indicate that they are "Supported with kernel 2.6.20.6, or later.

Will do.


-- 
Ciao
Stefano


From stefano.brivio at polimi.it  Sat Apr 14 18:43:55 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Sat, 14 Apr 2007 18:43:55 +0200
Subject: bcm43xx.berlios.de -- Support page?
In-Reply-To: <375c60f40704140851m6aee9d4apa20873c27c91f6e7@mail.gmail.com>
References: <375c60f40704140851m6aee9d4apa20873c27c91f6e7@mail.gmail.com>
Message-ID: <20070414184355.5a76d0b2@localhost>

On Sat, 14 Apr 2007 17:51:10 +0200
"Mathias De Mar?" <mathias.demare at gmail.com> wrote:

> On a slightly related note: what happened to the support forum? (
> http://bcm43xx.spugna.org/ ) It doesn't seem to be online anymore.

The guy who maintains it had been sick and disappeared from some time. I'm
going to contact him and solve this issue ASAP.


--
Ciao
Stefano


From andrew.james.barr at gmail.com  Sat Apr 14 18:57:56 2007
From: andrew.james.barr at gmail.com (Andrew J. Barr)
Date: Sat, 14 Apr 2007 12:57:56 -0400
Subject: some questions about bcm43xx-mac80211
Message-ID: <46210814.8050807@gmail.com>

I am using the wireless-dev kernel tree (2.6.21-rc6) on a PowerBook G4. 
I have a few questions about the bcm43xx-mac80211 driver that is in this 
kernel:

- apparently the latest wireless-tools package (29-pre17) is not even 
new enough for this driver (version 22 of WE for the driver vs. version 
21 for the userland tools). I don't see the bitrate in the output of 
iwconfig. How can I find out the current bitrate that I am connected at?

- any hope of making this driver work with NetworkManager? When I use it 
  NetworkManager doesn't see any wireless devices, but I've been 
connected  to my residential wireless network (WPA-Enterprise/TKIP) for 
a few minutes via wpa_supplicant and Debian's /etc/network/interfaces 
infrastructure with no major issues.

Also if someone could explain the device naming logic to me--I have a 
'eth2' that doesn't do anything and a wlan0_rename device that seems to 
be the wireless device--I'd appreciate it too. With the mainline bcm43xx 
my wireless radio was 'eth2' and there was no 'wlan0_rename'.

Thanks in advance and great work on getting the Broadcom chips to work 
in Linux.

Regards,
Andrew Barr


From Larry.Finger at lwfinger.net  Sat Apr 14 20:13:10 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:13:10 -0500
Subject: [PATCH 1/4] Mac80211: Add new names for statistics variables
Message-ID: <462119b6.sR44k/X6U4ToSXkJ%Larry.Finger@lwfinger.net>

Patch 1/4: Add new names for stats variables to the various structs in mac80211.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-dev/include/net/mac80211.h
===================================================================
--- wireless-dev.orig/include/net/mac80211.h
+++ wireless-dev/include/net/mac80211.h
@@ -229,6 +229,8 @@ struct ieee80211_rx_status {
 	int phymode;
 	int ssi;
 	int signal; /* used as qual in statistics reporting */
+	int level;  /* used in statistics reporting */
+	int qual; /* used in statistics reporting */
 	int noise;
 	int antenna;
 	int rate;
@@ -543,7 +545,9 @@ struct ieee80211_hw {
 	/* Maximum values for various statistics.
 	 * Leave at 0 to indicate no support. Use negative numbers for dBm. */
 	s8 max_rssi;
+	s8 max_level;
 	s8 max_signal;
+	s8 max_qual;
 	s8 max_noise;
 
 	/* Number of available hardware TX queues for data packets.
Index: wireless-dev/net/mac80211/sta_info.h
===================================================================
--- wireless-dev.orig/net/mac80211/sta_info.h
+++ wireless-dev/net/mac80211/sta_info.h
@@ -85,6 +85,8 @@ struct sta_info {
 
 	int last_rssi; /* RSSI of last received frame from this STA */
 	int last_signal; /* signal of last received frame from this STA */
+	int last_level; /* level of last received frame from this STA */
+	int last_qual; /* qual of last received frame from this STA */
 	int last_noise; /* noise of last received frame from this STA */
 	int last_ack_rssi[3]; /* RSSI of last received ACKs from this STA */
 	unsigned long last_ack;
Index: wireless-dev/net/mac80211/ieee80211.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211.c
+++ wireless-dev/net/mac80211/ieee80211.c
@@ -4211,7 +4211,7 @@ void ieee80211_rx_irqsafe(struct ieee802
 {
 	struct ieee80211_local *local = hw_to_local(hw);
 
-	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
+//	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
 
 	skb->dev = local->mdev;
 	/* copy status into skb->cb for use by tasklet */
Index: wireless-dev/net/mac80211/ieee80211_i.h
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_i.h
+++ wireless-dev/net/mac80211/ieee80211_i.h
@@ -82,7 +82,8 @@ struct ieee80211_sta_bss {
 	int hw_mode;
 	int channel;
 	int freq;
-	int rssi, signal, noise;
+	int rssi, signal;
+	int level, qual, noise;
 	u8 *wpa_ie;
 	size_t wpa_ie_len;
 	u8 *rsn_ie;


From Larry.Finger at lwfinger.net  Sat Apr 14 20:14:07 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:14:07 -0500
Subject: [PATCH 2/4] mac80211: Convert mac80211 to new statistics variable
	names
Message-ID: <462119ef.lAQ+Tavshbt8KWl2%Larry.Finger@lwfinger.net>

Patch 2/4: Convert mac80211 routines to use the new stats variable names.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-dev/net/mac80211/ieee80211.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211.c
+++ wireless-dev/net/mac80211/ieee80211.c
@@ -2854,7 +2854,7 @@ ieee80211_fill_frame_info(struct ieee802
 		fi->antenna = htonl(status->antenna);
 		fi->priority = 0xffffffff; /* no clue */
 		fi->ssi_type = htonl(ieee80211_ssi_raw);
-		fi->ssi_signal = htonl(status->ssi);
+		fi->ssi_signal = htonl(status->level);
 		fi->ssi_noise = 0x00000000;
 		fi->encoding = 0;
 	} else {
@@ -3501,10 +3501,10 @@ ieee80211_rx_h_sta_process(struct ieee80
 
 	sta->rx_fragments++;
 	sta->rx_bytes += rx->skb->len;
-	sta->last_rssi = (sta->last_rssi * 15 +
-			  rx->u.rx.status->ssi) / 16;
-	sta->last_signal = (sta->last_signal * 15 +
-			    rx->u.rx.status->signal) / 16;
+	sta->last_level = (sta->last_level * 15 +
+			  rx->u.rx.status->level) / 16;
+	sta->last_qual = (sta->last_qual * 15 +
+			    rx->u.rx.status->qual) / 16;
 	sta->last_noise = (sta->last_noise * 15 +
 			   rx->u.rx.status->noise) / 16;
 
@@ -4800,13 +4800,13 @@ int ieee80211_register_hw(struct ieee802
 
 	local->hw.conf.beacon_int = 1000;
 
-	local->wstats_flags |= local->hw.max_rssi ?
+	local->wstats_flags |= local->hw.max_level ?
 			       IW_QUAL_LEVEL_UPDATED : IW_QUAL_LEVEL_INVALID;
-	local->wstats_flags |= local->hw.max_signal ?
+	local->wstats_flags |= local->hw.max_qual ?
 			       IW_QUAL_QUAL_UPDATED : IW_QUAL_QUAL_INVALID;
 	local->wstats_flags |= local->hw.max_noise ?
 			       IW_QUAL_NOISE_UPDATED : IW_QUAL_NOISE_INVALID;
-	if (local->hw.max_rssi < 0 || local->hw.max_noise < 0)
+	if (local->hw.max_level < 0 || local->hw.max_noise < 0)
 		local->wstats_flags |= IW_QUAL_DBM;
 
 	result = sta_info_start(local);
Index: wireless-dev/net/mac80211/ieee80211_sta.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_sta.c
+++ wireless-dev/net/mac80211/ieee80211_sta.c
@@ -1219,8 +1219,8 @@ static void ieee80211_rx_mgmt_assoc_resp
 		}
 		bss = ieee80211_rx_bss_get(dev, ifsta->bssid);
 		if (bss) {
-			sta->last_rssi = bss->rssi;
-			sta->last_signal = bss->signal;
+			sta->last_level = bss->level;
+			sta->last_qual = bss->qual;
 			sta->last_noise = bss->noise;
 			ieee80211_rx_bss_put(dev, bss);
 		}
@@ -1641,8 +1641,8 @@ static void ieee80211_rx_bss_info(struct
 	}
 	bss->timestamp = timestamp;
 	bss->last_update = jiffies;
-	bss->rssi = rx_status->ssi;
-	bss->signal = rx_status->signal;
+	bss->level = rx_status->level;
+	bss->qual = rx_status->qual;
 	bss->noise = rx_status->noise;
 	if (!beacon)
 		bss->probe_resp++;
@@ -2219,7 +2219,7 @@ static int ieee80211_sta_config_auth(str
 	struct ieee80211_local *local = wdev_priv(dev->ieee80211_ptr);
 	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	struct ieee80211_sta_bss *bss, *selected = NULL;
-	int top_rssi = 0, freq;
+	int top_level = 0, freq;
 
 	if (!ifsta->auto_channel_sel && !ifsta->auto_bssid_sel &&
 	    !ifsta->auto_ssid_sel) {
@@ -2249,9 +2249,9 @@ static int ieee80211_sta_config_auth(str
 		    !ieee80211_sta_match_ssid(ifsta, bss->ssid, bss->ssid_len))
 			continue;
 
-		if (top_rssi < bss->rssi) {
+		if (top_level < bss->level) {
 			selected = bss;
-			top_rssi = bss->rssi;
+			top_level = bss->level;
 		}
 	}
 	if (selected)
@@ -2981,8 +2981,8 @@ ieee80211_sta_scan_result(struct net_dev
 
 	memset(&iwe, 0, sizeof(iwe));
 	iwe.cmd = IWEVQUAL;
-	iwe.u.qual.qual = bss->signal;
-	iwe.u.qual.level = bss->rssi;
+	iwe.u.qual.qual = bss->qual;
+	iwe.u.qual.level = bss->level;
 	iwe.u.qual.noise = bss->noise;
 	iwe.u.qual.updated = local->wstats_flags;
 	current_ev = iwe_stream_add_event(current_ev, end_buf, &iwe,
Index: wireless-dev/net/mac80211/ieee80211_ioctl.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_ioctl.c
+++ wireless-dev/net/mac80211/ieee80211_ioctl.c
@@ -443,7 +443,7 @@ static int ieee80211_ioctl_get_info_sta(
 		skb_queue_len(&sta->ps_tx_buf);
 	param->u.get_info_sta.tx_retry_failed = sta->tx_retry_failed;
 	param->u.get_info_sta.tx_retry_count = sta->tx_retry_count;
-	param->u.get_info_sta.last_rssi = sta->last_rssi;
+	param->u.get_info_sta.last_rssi = sta->last_level;
 	param->u.get_info_sta.last_ack_rssi = sta->last_ack_rssi[2];
 
 	sta_info_put(sta);
@@ -1590,12 +1590,12 @@ static int ieee80211_ioctl_giwrange(stru
 	range->num_encoding_sizes = 2;
 	range->max_encoding_tokens = NUM_DEFAULT_KEYS;
 
-	range->max_qual.qual = local->hw.max_signal;
+	range->max_qual.qual = local->hw.max_qual;
 	range->max_qual.level = local->hw.max_rssi;
 	range->max_qual.noise = local->hw.max_noise;
 	range->max_qual.updated = local->wstats_flags;
 
-	range->avg_qual.qual = local->hw.max_signal/2;
+	range->avg_qual.qual = local->hw.max_qual/2;
 	range->avg_qual.level = 0;
 	range->avg_qual.noise = 0;
 	range->avg_qual.updated = local->wstats_flags;
@@ -3091,8 +3091,8 @@ static struct iw_statistics *ieee80211_g
 		wstats->qual.noise = 0;
 		wstats->qual.updated = IW_QUAL_ALL_INVALID;
 	} else {
-		wstats->qual.level = sta->last_rssi;
-		wstats->qual.qual = sta->last_signal;
+		wstats->qual.level = sta->last_level;
+		wstats->qual.qual = sta->last_qual;
 		wstats->qual.noise = sta->last_noise;
 		wstats->qual.updated = local->wstats_flags;
 		sta_info_put(sta);
Index: wireless-dev/net/mac80211/debugfs_sta.c
===================================================================
--- wireless-dev.orig/net/mac80211/debugfs_sta.c
+++ wireless-dev/net/mac80211/debugfs_sta.c
@@ -76,8 +76,8 @@ STA_FILE(txrate, txrate, RATE);
 STA_FILE(last_txrate, last_txrate, RATE);
 STA_FILE(tx_retry_failed, tx_retry_failed, LU);
 STA_FILE(tx_retry_count, tx_retry_count, LU);
-STA_FILE(last_rssi, last_rssi, D);
-STA_FILE(last_signal, last_signal, D);
+STA_FILE(last_level, last_level, D);
+STA_FILE(last_qual, last_qual, D);
 STA_FILE(last_noise, last_noise, D);
 STA_FILE(channel_use, channel_use, D);
 STA_FILE(wep_weak_iv_count, wep_weak_iv_count, D);


From Larry.Finger at lwfinger.net  Sat Apr 14 20:14:41 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:14:41 -0500
Subject: [PATCH 3/4] mac80211 - drivers: Convert drivers that use mac80211 to
	new statistics variable names
Message-ID: <46211a11.o2MyXN/RwAenmIMD%Larry.Finger@lwfinger.net>

Patch 3/4: Convert drivers that use 80211 to new stats variable names.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3757,8 +3757,8 @@ static int bcm43xx_wireless_init(struct 
 		    IEEE80211_HW_MONITOR_DURING_OPER |
 		    IEEE80211_HW_DEVICE_HIDES_WEP |
 		    IEEE80211_HW_WEP_INCLUDE_IV;
-	hw->max_signal = -110;
-	hw->max_rssi = BCM43xx_RX_MAX_SSI;
+	hw->max_qual = 100;
+	hw->max_level = BCM43xx_RX_MAX_LEVEL;
 	hw->max_noise = -110;
 	hw->queues = 1;
 	SET_IEEE80211_DEV(hw, dev->dev);
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
@@ -456,7 +456,7 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
 	u16 phystat0, phystat3, chanstat, mactime;
 	u32 macstat;
 	u16 chanid;
-	u8 jssi;
+	u8 qual;
 	int padding;
 
 	memset(&status, 0, sizeof(status));
@@ -464,7 +464,7 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
 	/* Get metadata about the frame from the header. */
 	phystat0 = le16_to_cpu(rxhdr->phy_status0);
 	phystat3 = le16_to_cpu(rxhdr->phy_status3);
-	jssi = rxhdr->jssi;
+	qual = rxhdr->jssi;
 	macstat = le32_to_cpu(rxhdr->mac_status);
 	mactime = le16_to_cpu(rxhdr->mac_time);
 	chanstat = le16_to_cpu(rxhdr->channel);
@@ -525,12 +525,12 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
 		}
 	}
 
-	status.signal = bcm43xx_rssi_postprocess(dev, jssi,
+	status.level = bcm43xx_rssi_postprocess(dev, qual,
 					      (phystat0 & BCM43xx_RX_PHYST0_OFDM),
 					      (phystat0 & BCM43xx_RX_PHYST0_GAINCTL),
 					      (phystat3 & BCM43xx_RX_PHYST3_TRSTATE));
 	status.noise = dev->stats.link_noise;
-	status.ssi = jssi;
+	status.qual = qual;
 	if (phystat0 & BCM43xx_RX_PHYST0_OFDM)
 		status.rate = bcm43xx_plcp_get_bitrate_ofdm(plcp);
 	else
Index: wireless-dev/drivers/net/wireless/mac80211/adm8211/adm8211.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/adm8211/adm8211.c
+++ wireless-dev/drivers/net/wireless/mac80211/adm8211/adm8211.c
@@ -65,7 +65,7 @@ ADM8211_IER_TDUIE | ADM8211_IER_GPTIE)
 #define PLCP_SIGNAL_5M5		0x37
 #define PLCP_SIGNAL_11M		0x6e
 
-#define ADM8211_RX_MAX_SSI	100
+#define ADM8211_RX_MAX_LEVEL	100
 
 struct adm8211_tx_hdr {
 	u8 da[6];
@@ -540,9 +540,9 @@ static void adm8211_interrupt_rci(struct
 			struct ieee80211_rx_status rx_status = {0};
 
 			if (priv->revid < ADM8211_REV_CA)
-				rx_status.ssi = rssi;
+				rx_status.level = rssi;
 			else
-				rx_status.ssi = 100 - rssi;
+				rx_status.level = 100 - rssi;
 
 			if (rate <= 4)
 				rx_status.rate = rate_tbl[rate];
@@ -2002,7 +2002,7 @@ static int __devinit adm8211_probe(struc
 	// however, IEEE80211_HW_RX_INCLUDES_FCS in promisc mode
 
 	dev->channel_change_time = 1000;
-	dev->max_rssi = ADM8211_RX_MAX_SSI;// FIXME - This is an approximation
+	dev->max_level = ADM8211_RX_MAX_LEVEL;// FIXME - This is an approximation
 
 	priv->modes[0].mode = MODE_IEEE80211B;
 	/* channel info filled in by adm8211_read_eeprom */
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.c
@@ -1751,7 +1751,7 @@ static void rt2500pci_rxdone(struct work
 		 * Update link statistics
 		 */
 		rt2x00_update_link_rssi(&rt2x00dev->link,
-			rt2x00dev->rx_status.ssi);
+			rt2x00dev->rx_status.level);
 
 skip_entry:
 		rt2x00_set_field32(&word0, RXD_W0_OWNER_NIC, 1);
@@ -2195,10 +2195,10 @@ static int rt2500pci_init_eeprom(struct 
 	 * Read the RSSI <-> dBm offset information.
 	 */
 	rt2x00_eeprom_read(rt2x00dev, EEPROM_CALIBRATE_OFFSET, &eeprom);
-	rt2x00dev->hw->max_rssi =
+	rt2x00dev->hw->max_level =
 		rt2x00_get_field16(eeprom, EEPROM_CALIBRATE_OFFSET_RSSI);
-	if (rt2x00dev->hw->max_rssi < 0 || rt2x00dev->hw->max_rssi == (s8)0xff)
-		rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	if (rt2x00dev->hw->max_level < 0 || rt2x00dev->hw->max_level == (s8)0xff)
+		rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 
 	return 0;
 }
@@ -2533,7 +2533,7 @@ static int rt2500pci_init_hw(struct rt2x
 		IEEE80211_HW_NO_TKIP_WMM_HWACCEL |
 		IEEE80211_HW_MONITOR_DURING_OPER;
 	rt2x00dev->hw->extra_tx_headroom = 0;
-	rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 	rt2x00dev->hw->max_noise = MAX_RX_NOISE;
 	rt2x00dev->hw->queues = RING_NUM_TX;
 
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.c
@@ -1711,7 +1711,7 @@ static void rt2500usb_interrupt_rxdone(s
 	/*
 	 * Update link statistics
 	 */
-	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.ssi);
+	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.level);
 
 skip_entry:
 	if (!GET_FLAG(ring->rt2x00dev, DEVICE_ENABLED_RADIO))
@@ -2040,10 +2040,10 @@ static int rt2500usb_init_eeprom(struct 
 	 * Read the RSSI <-> dBm offset information.
 	 */
 	rt2x00_eeprom_read(rt2x00dev, EEPROM_CALIBRATE_OFFSET, &eeprom);
-	rt2x00dev->hw->max_rssi =
+	rt2x00dev->hw->max_level =
 		rt2x00_get_field16(eeprom, EEPROM_CALIBRATE_OFFSET_RSSI);
-	if (rt2x00dev->hw->max_rssi < 0 || rt2x00dev->hw->max_rssi == (s8)0xff)
-		rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	if (rt2x00dev->hw->max_level < 0 || rt2x00dev->hw->max_level == (s8)0xff)
+		rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 
 	return 0;
 }
@@ -2377,7 +2377,7 @@ static int rt2500usb_init_hw(struct rt2x
 		IEEE80211_HW_NO_TKIP_WMM_HWACCEL |
 		IEEE80211_HW_MONITOR_DURING_OPER;
 	rt2x00dev->hw->extra_tx_headroom = TXD_DESC_SIZE;
-	rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 	rt2x00dev->hw->max_noise = MAX_RX_NOISE;
 	rt2x00dev->hw->queues = RING_NUM_TX;
 
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2x00dev.c
@@ -157,7 +157,7 @@ void rt2x00lib_update_rx_stats(struct rt
 	}
 
 	rt2x00dev->rx_status.rate = val;
-	rt2x00dev->rx_status.ssi = rssi;
+	rt2x00dev->rx_status.level = rssi;
 	rt2x00dev->rx_status.noise = rt2x00_get_link_noise(&rt2x00dev->link);
 }
 EXPORT_SYMBOL_GPL(rt2x00lib_update_rx_stats);
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.c
@@ -2045,7 +2045,7 @@ static void rt61pci_rxdone(struct work_s
 		 * Update link statistics
 		 */
 		rt2x00_update_link_rssi(&rt2x00dev->link,
-			rt2x00dev->rx_status.ssi);
+			rt2x00dev->rx_status.level);
 
 skip_entry:
 		rt2x00_set_field32(&word0, RXD_W0_OWNER_NIC, 1);
@@ -2874,7 +2874,7 @@ static int rt61pci_init_hw(struct rt2x00
 		IEEE80211_HW_NO_TKIP_WMM_HWACCEL |
 		IEEE80211_HW_MONITOR_DURING_OPER;
 	rt2x00dev->hw->extra_tx_headroom = 0;
-	rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 	rt2x00dev->hw->max_noise = MAX_RX_NOISE;
 	rt2x00dev->hw->queues = RING_NUM_TX;
 
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.c
@@ -1857,7 +1857,7 @@ static void rt73usb_interrupt_rxdone(str
 	/*
 	 * Update link statistics
 	 */
-	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.ssi);
+	rt2x00_update_link_rssi(&rt2x00dev->link, rt2x00dev->rx_status.level);
 
 skip_entry:
 	if (!GET_FLAG(ring->rt2x00dev, DEVICE_ENABLED_RADIO))
@@ -2577,7 +2577,7 @@ static int rt73usb_init_hw(struct rt2x00
 		IEEE80211_HW_NO_TKIP_WMM_HWACCEL |
 		IEEE80211_HW_MONITOR_DURING_OPER;
 	rt2x00dev->hw->extra_tx_headroom = TXD_DESC_SIZE;
-	rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 	rt2x00dev->hw->max_noise = MAX_RX_NOISE;
 	rt2x00dev->hw->queues = RING_NUM_TX;
 
Index: wireless-dev/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
+++ wireless-dev/drivers/net/wireless/mac80211/rtl818x/rtl8187_dev.c
@@ -161,8 +161,8 @@ static void rtl8187_rx_cb(struct urb *ur
 	}
 
 	rx_status.antenna = (hdr->signal >> 7) & 1;
-	rx_status.signal = 64 - min(hdr->noise, (u8)64);
-	rx_status.ssi = signal;
+	rx_status.qual = 64 - min(hdr->noise, (u8)64);
+	rx_status.level = signal;
 	rx_status.rate = priv->rates[rate].rate;
 	rx_status.freq = dev->conf.freq;
 	rx_status.channel = dev->conf.channel;
@@ -608,8 +608,8 @@ static int __devinit rtl8187_probe(struc
 		     IEEE80211_HW_DATA_NULLFUNC_ACK;
 	dev->extra_tx_headroom = sizeof(struct rtl8187_tx_hdr);
 	dev->queues = 1;
-	dev->max_rssi = 65;
-	dev->max_signal = 64;
+	dev->max_level = 65;
+	dev->max_qual = 64;
 
 	for (i = 0; i < 2; i++)
 		if ((err = ieee80211_register_hwmode(dev, &priv->modes[i])))
Index: wireless-dev/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
+++ wireless-dev/drivers/net/wireless/mac80211/zd1211rw/zd_mac.c
@@ -407,8 +407,8 @@ static int fill_rx_stats(struct ieee8021
 	stats->channel = _zd_chip_get_channel(&mac->chip);
 	stats->freq = zd_channels[stats->channel - 1].freq;
 	stats->phymode = MODE_IEEE80211G;
-	stats->ssi = zd_rx_strength_percent(status->signal_strength);
-	stats->signal = zd_rx_qual_percent(buffer,
+	stats->level = zd_rx_strength_percent(status->signal_strength);
+	stats->qual = zd_rx_qual_percent(buffer,
 		                          length - sizeof(struct rx_status),
 		                          status);
 	stats->rate = zd_rx_rate(buffer, status);
@@ -453,7 +453,7 @@ static int filter_ack(struct ieee80211_h
 	if (control) {
 		memcpy(&status.control, control, sizeof(status.control));
 		status.flags = IEEE80211_TX_STATUS_ACK;
-		status.ack_signal = stats->ssi;
+		status.ack_signal = stats->level;
 		ieee80211_tx_status_irqsafe(dev, skb, &status);
 		kfree(control);
 	} else
@@ -633,8 +633,8 @@ struct ieee80211_hw *zd_mac_alloc(struct
 
 	dev->flags = IEEE80211_HW_RX_INCLUDES_FCS |
 		     IEEE80211_HW_WEP_INCLUDE_IV;
-	dev->max_rssi = 100;
-	dev->max_signal = 100;
+	dev->max_level = 100;
+	dev->max_qual = 100;
 
 	dev->queues = 1;
 	dev->extra_tx_headroom = sizeof(struct zd_ctrlset);
Index: wireless-dev/drivers/net/wireless/mac80211/p54/prism54common.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/p54/prism54common.c
+++ wireless-dev/drivers/net/wireless/mac80211/p54/prism54common.c
@@ -282,7 +282,7 @@ static void p54_rx_data(struct ieee80211
 	struct ieee80211_rx_status rx_status = {0};
 	u16 freq = le16_to_cpu(hdr->freq);
 
-	rx_status.ssi = hdr->rssi;	/* TODO: check this */
+	rx_status.level = hdr->rssi;	/* TODO: check this */
 	rx_status.rate = hdr->rate & 0x0f;
 	rx_status.channel = freq == 2484 ? 14 : (freq - 2407)/5;
 	rx_status.freq = freq;
@@ -782,7 +782,7 @@ struct ieee80211_hw *p54_init_common(siz
 		    IEEE80211_HW_DATA_NULLFUNC_ACK; /* TODO: check */
 		    /* IEEE80211_HW_MONITOR_DURING_OPER FIXME: check */
 	dev->channel_change_time = 1000;	/* TODO: find actual value */
-	dev->max_rssi = 100;
+	dev->max_level = 100;
 
 	dev->queues = 1;
 	dev->extra_tx_headroom = sizeof(struct p54_control_hdr) + 4 +
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
@@ -29,7 +29,7 @@
 
 #define BCM43xx_IO_SIZE			8192
 
-#define BCM43xx_RX_MAX_SSI		60
+#define BCM43xx_RX_MAX_LEVEL		60
 
 /* MMIO offsets */
 #define BCM43xx_MMIO_DMA0_REASON	0x20
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2400pci.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2400pci.c
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2400pci.c
@@ -2236,7 +2236,7 @@ static int rt2400pci_init_hw(struct rt2x
 		IEEE80211_HW_NO_TKIP_WMM_HWACCEL |
 		IEEE80211_HW_MONITOR_DURING_OPER;
 	rt2x00dev->hw->extra_tx_headroom = 0;
-	rt2x00dev->hw->max_rssi = MAX_RX_SSI;
+	rt2x00dev->hw->max_level = MAX_RX_LEVEL;
 	rt2x00dev->hw->max_noise = MAX_RX_NOISE;
 	rt2x00dev->hw->queues = RING_NUM_TX;
 
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2400pci.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2400pci.h
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2400pci.h
@@ -36,7 +36,7 @@
 /*
  * Max RSSI value, required for RSSI <-> dBm conversion.
  */
-#define MAX_RX_SSI			100
+#define MAX_RX_LEVEL			100
 #define MAX_RX_NOISE			-110
 
 /*
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500pci.h
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500pci.h
@@ -47,7 +47,7 @@
 /*
  * Max RSSI value, required for RSSI <-> dBm conversion.
  */
-#define MAX_RX_SSI			120
+#define MAX_RX_LEVEL			120
 #define MAX_RX_NOISE			-110
 
 /*
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt2500usb.h
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt2500usb.h
@@ -40,7 +40,7 @@
 /*
  * Max RSSI value, required for RSSI <-> dBm conversion.
  */
-#define MAX_RX_SSI			120
+#define MAX_RX_LEVEL			120
 #define MAX_RX_NOISE			-110
 
 /*
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt61pci.h
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt61pci.h
@@ -38,7 +38,7 @@
 /*
  * Max RSSI value, required for RSSI <-> dBm conversion.
  */
-#define MAX_RX_SSI			120
+#define MAX_RX_LEVEL			120
 #define MAX_RX_NOISE			-110
 
 /*
Index: wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/rt2x00/rt73usb.h
+++ wireless-dev/drivers/net/wireless/mac80211/rt2x00/rt73usb.h
@@ -38,7 +38,7 @@
 /*
  * Max RSSI value, required for RSSI <-> dBm conversion.
  */
-#define MAX_RX_SSI			120
+#define MAX_RX_LEVEL			120
 #define MAX_RX_NOISE			-110
 
 /*
Index: wireless-dev/net/mac80211/ieee80211_ioctl.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_ioctl.c
+++ wireless-dev/net/mac80211/ieee80211_ioctl.c
@@ -1591,7 +1591,7 @@ static int ieee80211_ioctl_giwrange(stru
 	range->max_encoding_tokens = NUM_DEFAULT_KEYS;
 
 	range->max_qual.qual = local->hw.max_qual;
-	range->max_qual.level = local->hw.max_rssi;
+	range->max_qual.level = local->hw.max_level;
 	range->max_qual.noise = local->hw.max_noise;
 	range->max_qual.updated = local->wstats_flags;
 


From Larry.Finger at lwfinger.net  Sat Apr 14 20:15:15 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:15:15 -0500
Subject: [PATCH 4/4] mac80211: Remove old names for statistics variables
Message-ID: <46211a33.JlaK27J9HyTa6JIz%Larry.Finger@lwfinger.net>

Patch 4/4: Remove old stats variables from mac80211 structs.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-dev/include/net/mac80211.h
===================================================================
--- wireless-dev.orig/include/net/mac80211.h
+++ wireless-dev/include/net/mac80211.h
@@ -227,8 +227,6 @@ struct ieee80211_rx_status {
 	int freq; /* receive frequency in Mhz */
 	int channel;
 	int phymode;
-	int ssi;
-	int signal; /* used as qual in statistics reporting */
 	int level;  /* used in statistics reporting */
 	int qual; /* used in statistics reporting */
 	int noise;
@@ -544,9 +542,7 @@ struct ieee80211_hw {
 	int channel_change_time;
 	/* Maximum values for various statistics.
 	 * Leave at 0 to indicate no support. Use negative numbers for dBm. */
-	s8 max_rssi;
 	s8 max_level;
-	s8 max_signal;
 	s8 max_qual;
 	s8 max_noise;
 
Index: wireless-dev/net/mac80211/ieee80211.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211.c
+++ wireless-dev/net/mac80211/ieee80211.c
@@ -4211,7 +4211,7 @@ void ieee80211_rx_irqsafe(struct ieee802
 {
 	struct ieee80211_local *local = hw_to_local(hw);
 
-//	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
+	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
 
 	skb->dev = local->mdev;
 	/* copy status into skb->cb for use by tasklet */
Index: wireless-dev/net/mac80211/ieee80211_i.h
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_i.h
+++ wireless-dev/net/mac80211/ieee80211_i.h
@@ -82,7 +82,6 @@ struct ieee80211_sta_bss {
 	int hw_mode;
 	int channel;
 	int freq;
-	int rssi, signal;
 	int level, qual, noise;
 	u8 *wpa_ie;
 	size_t wpa_ie_len;
Index: wireless-dev/net/mac80211/sta_info.h
===================================================================
--- wireless-dev.orig/net/mac80211/sta_info.h
+++ wireless-dev/net/mac80211/sta_info.h
@@ -83,10 +83,8 @@ struct sta_info {
 	unsigned long rx_fragments; /* number of received MPDUs */
 	unsigned long rx_dropped; /* number of dropped MPDUs from this STA */
 
-	int last_rssi; /* RSSI of last received frame from this STA */
-	int last_signal; /* signal of last received frame from this STA */
 	int last_level; /* level of last received frame from this STA */
-	int last_qual; /* qual of last received frame from this STA */
+	int last_qual; /* quality value of last received frame from this STA */
 	int last_noise; /* noise of last received frame from this STA */
 	int last_ack_rssi[3]; /* RSSI of last received ACKs from this STA */
 	unsigned long last_ack;


From Larry.Finger at lwfinger.net  Sat Apr 14 20:11:33 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:11:33 -0500
Subject: [PATCH 0/4] mac80211 and drivers: Improve wireless statistics
Message-ID: <46211955.4080006@lwfinger.net>

In wireless statistics reporting, three quantities related to the signal are reported: "qual" 
(linear with the signal), "level" (logarithmic), and "noise". In mac80211 and the drivers that use 
it, the first two have a mixture of internal names for those quantities. To reduce confusion, this 
series of patches make the internal names match the entity that is being kept.

So that any bisection of the source will always result in code that will compile, the patches are 
divided as follows:

1/4: The new names are added to the appropriate struct definitions in mac80211.
2/4: The mac80211 routines are modified to use the new names.
3/4: The drivers that use mac80211 are modified.
4/4: The old names are removed from the struct definitions.

These changes assume the prior application of patches "[PATCH] mac80211: remove redundant rssi 
information in scan results" by Michael Wu and "[PATCH] mac80211: Report correct wireless 
statistics" by Larry Finger.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---


From mb at bu3sch.de  Sat Apr 14 20:15:18 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Apr 2007 20:15:18 +0200
Subject: [PATCH 1/4] Mac80211: Add new names for statistics variables
In-Reply-To: <462119b6.sR44k/X6U4ToSXkJ%Larry.Finger@lwfinger.net>
References: <462119b6.sR44k/X6U4ToSXkJ%Larry.Finger@lwfinger.net>
Message-ID: <200704142015.18660.mb@bu3sch.de>

On Saturday 14 April 2007 20:13, Larry Finger wrote:
> Index: wireless-dev/net/mac80211/ieee80211.c
> ===================================================================
> --- wireless-dev.orig/net/mac80211/ieee80211.c
> +++ wireless-dev/net/mac80211/ieee80211.c
> @@ -4211,7 +4211,7 @@ void ieee80211_rx_irqsafe(struct ieee802
>  {
>  	struct ieee80211_local *local = hw_to_local(hw);
>  
> -	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
> +//	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));

Whoops?

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Sat Apr 14 20:24:37 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 13:24:37 -0500
Subject: [PATCH 1/4] Mac80211: Add new names for statistics variables
In-Reply-To: <200704142015.18660.mb@bu3sch.de>
References: <462119b6.sR44k/X6U4ToSXkJ%Larry.Finger@lwfinger.net>
	<200704142015.18660.mb@bu3sch.de>
Message-ID: <46211C65.1040406@lwfinger.net>

Michael Buesch wrote:
> On Saturday 14 April 2007 20:13, Larry Finger wrote:
>> Index: wireless-dev/net/mac80211/ieee80211.c
>> ===================================================================
>> --- wireless-dev.orig/net/mac80211/ieee80211.c
>> +++ wireless-dev/net/mac80211/ieee80211.c
>> @@ -4211,7 +4211,7 @@ void ieee80211_rx_irqsafe(struct ieee802
>>  {
>>  	struct ieee80211_local *local = hw_to_local(hw);
>>  
>> -	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
>> +//	BUILD_BUG_ON(sizeof(struct ieee80211_rx_status) > sizeof(skb->cb));
> 
> Whoops?

Yes, the BUILD_BUG_ON killed the compilation with both old and new names in the structs. Patch 4/4 
restores the statement.

Larry


From will.dyson at gmail.com  Sat Apr 14 22:29:47 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Sat, 14 Apr 2007 16:29:47 -0400
Subject: some questions about bcm43xx-mac80211
In-Reply-To: <46210814.8050807@gmail.com>
References: <46210814.8050807@gmail.com>
Message-ID: <8e6f94720704141329mce8d62ekb6fa32e60cd51d4d@mail.gmail.com>

On 4/14/07, Andrew J. Barr <andrew.james.barr at gmail.com> wrote:

> Also if someone could explain the device naming logic to me--I have a
> 'eth2' that doesn't do anything and a wlan0_rename device that seems to
> be the wireless device--I'd appreciate it too. With the mainline bcm43xx
> my wireless radio was 'eth2' and there was no 'wlan0_rename'.

The device renaming logic is not in the driver at all, but rather is
part of udev.

In Debian, there is a udev rule file
(etc/udev/persistent-net-generator.rules) which generates mappings
between device MAC addresses and network device names. It stores the
mappings in /etc/udev/rules.d/z25_persistent-net.rules.

When you first loaded the in-kernel bcm43xx driver, a persistent rule
was generated for your card's MAC address. When you then go and load
the bcm43xx_mac80211 driver, udev gets confused because the new driver
creates 2 interfaces with the same MAC address (wmaster0 and wlan0).
Wmaster0 happens to be created first, so udev matches this with the
interface name created previously and renames wmaster0 to eth0 (or
whatever the name was with the in-kernel driver). Then the real
interface shows up, and udev finds that the name is already taken, so
it renames wlan0 to wlan0_rename (and does not create a new persistent
rule).

The fix is to edit /etc/udev/rules.d/z25_persistent-net.rules, and add
ADDRS{type}="1" to the rule for your card (be sure to keep the parts
of the rule comma-separated). This will prevent it from matching the
wmaster0 interface, and cause your card to have the same name with
both drivers.

Alternatively, if you prefer to have the drivers get different
interface names, you can change the existing rule for your card so
that it only matches when the old driver is used. To do this, change
DRIVERS=="?*" to DRIVERS=="bcm43xx". Udev will then create a new rule
for the new driver.

Either way, the change will take effect when the driver is reloaded.

This will bite almost everyone who switches drivers. Do we have a FAQ
I can add this to?

-- 
Will Dyson


From andrew.james.barr at gmail.com  Sat Apr 14 22:38:58 2007
From: andrew.james.barr at gmail.com (Andrew J. Barr)
Date: Sat, 14 Apr 2007 16:38:58 -0400
Subject: some questions about bcm43xx-mac80211
In-Reply-To: <8e6f94720704141329mce8d62ekb6fa32e60cd51d4d@mail.gmail.com>
References: <46210814.8050807@gmail.com>
	<8e6f94720704141329mce8d62ekb6fa32e60cd51d4d@mail.gmail.com>
Message-ID: <46213BE2.5010205@gmail.com>

Hi, thanks for the tip-off. A few corrections:


Will Dyson wrote:
> The fix is to edit /etc/udev/rules.d/z25_persistent-net.rules, and add
> ADDRS{type}="1" to the rule for your card (be sure to keep the parts
> of the rule comma-separated). This will prevent it from matching the
> wmaster0 interface, and cause your card to have the same name with
> both drivers.

The text to add is actually:

ATTRS{type}=="1"

note different property name and use of "==" instead of "="

I think you have to run 'udevcontrol reload_rules' but I'm not sure if 
this is required.

Thank you again!

Andrew


From larry.finger at lwfinger.net  Sat Apr 14 23:02:13 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 16:02:13 -0500
Subject: [PATCH 0/4] mac80211 and drivers: Improve wireless statistics
In-Reply-To: <1ba2fa240704141300w2ec2beabm9cd1376c1b9ef2bb@mail.gmail.com>
References: <46211955.4080006@lwfinger.net>
	<1ba2fa240704141300w2ec2beabm9cd1376c1b9ef2bb@mail.gmail.com>
Message-ID: <46214155.20106@lwfinger.net>

Tomas Winkler wrote:
> Those are really bad names.
> __signal__ is not meaning a value __signal level__ or __signal
> strength__ means value
> __level__ is too general to describes anything
> RSSI on other hand is well defined. Maybe it's too hw/vendor dependent
> to use in stack
> but at least its names says what it is.
> Quality should be a relative number depends on maxim
> I don't think this renaming make things clearer
> Tomas

Perhaps my names are bad; however, the existing system is broken. With it, passing the rssi value 
and the signal strength from bcm43xx-mac80211 results the following output from iwconfig: "Link 
Quality=216/146  Signal level=-197 dBm  Noise level=-63 dBm". In bcm43xx-softmac, the code in the 
driver is identical and results in "Link Quality=90/100  Signal level=-36 dBm  Noise level=-69 dBm".

When I proposed a patch to fix mac80211, Michael Wu NACKed it and requested the name changes I 
propose here. I don't care what names things get, but it needs to be fixed!

Larry


From ftoledo at docksud.com.ar  Sun Apr 15 00:01:13 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sat, 14 Apr 2007 19:01:13 -0300
Subject: IRQ_READY timeout again
In-Reply-To: <46212CD9.3070900@lwfinger.net>
References: <200704131810.04812.ftoledo@docksud.com.ar>
	<46212CD9.3070900@lwfinger.net>
Message-ID: <200704141901.18291.ftoledo@docksud.com.ar>

El S?bado, 14 de Abril de 2007 16:34, escribi?:
> Fernando,
>
> Please apply the attached patch and send me any messages related to
> IRQ_READY.
>
> Thanks,
>
> Larryroot at ntbkragnarok:/usr/src/linux-2.6.20.6# patch -p1 </tmp/IRQ_READY 

patching file drivers/net/wireless/bcm43xx/bcm43xx_main.c
Hunk #1 succeeded at 2388 (offset -18 lines).
root at ntbkragnarok:/usr/src/linux-2.6.20.6# 

root at ntbkragnarok:/usr/src/linux-2.6.20.6# make modules 
  CHK     include/linux/version.h
  CHK     include/linux/utsrelease.h
  CC [M]  drivers/net/wireless/bcm43xx/bcm43xx_main.o
  LD [M]  drivers/net/wireless/bcm43xx/bcm43xx.o
  Building modules, stage 2.
  MODPOST 537 modules
  LD [M]  drivers/net/wireless/bcm43xx/bcm43xx.ko
root at ntbkragnarok:/usr/src/linux-2.6.20.6# 

i now testing, i still dont see this message, but i will disable the softmac 
debug , its boring my syslog and continue testing it
later i reply to report again.
thanks.

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/8e8db0dd/attachment.pgp>

From ftoledo at docksud.com.ar  Sun Apr 15 00:21:45 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sat, 14 Apr 2007 19:21:45 -0300
Subject: IRQ_READY timeout again
In-Reply-To: <46212CD9.3070900@lwfinger.net>
References: <200704131810.04812.ftoledo@docksud.com.ar>
	<46212CD9.3070900@lwfinger.net>
Message-ID: <200704141921.45512.ftoledo@docksud.com.ar>

El S?bado, 14 de Abril de 2007 16:34, escribi?:
> Fernando,
>
> Please apply the attached patch and send me any messages related to
> IRQ_READY.
>
> Thanks,
>
> Larry
second test, i disable the softmac debug to get the log more clear
i get the irq_timeout again grg.. (i will hope for help to develop in future, 
im still learning)
i remove and load the module and get conexion again
i attach the new log, if you need i will  send in private mail no load the 
list
-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dmesg.gz
Type: application/x-gzip
Size: 1906 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/86875f27/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070414/86875f27/attachment.pgp>

From Larry.Finger at lwfinger.net  Sun Apr 15 06:22:46 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Apr 2007 23:22:46 -0500
Subject: [PATCH] bcm43xx-mac80211: Make wireless statistics yield
	reasonable values
Message-ID: <4621a896.akSEX43I3VgRXr70%Larry.Finger@lwfinger.net>

The variables in mac80211 are confusing and should be renamed; however, that may take
some time to reach a consensus. In the meantime, these changes are needed to get
reasonable numbers from bcm43xx-mac80211.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This is wireless-dev material. The extensive renaming patches
that were submitted on 4/14 should be discarded.

Larry

 bcm43xx_main.c |    4 ++--
 bcm43xx_xmit.c |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c
@@ -525,12 +525,12 @@ void bcm43xx_rx(struct bcm43xx_wldev *de
 		}
 	}
 
-	status.signal = bcm43xx_rssi_postprocess(dev, jssi,
+	status.ssi = bcm43xx_rssi_postprocess(dev, jssi,
 					      (phystat0 & BCM43xx_RX_PHYST0_OFDM),
 					      (phystat0 & BCM43xx_RX_PHYST0_GAINCTL),
 					      (phystat3 & BCM43xx_RX_PHYST3_TRSTATE));
 	status.noise = dev->stats.link_noise;
-	status.ssi = jssi;
+	status.signal = jssi; /* this looks wrong, but is what mac80211 wants */
 	if (phystat0 & BCM43xx_RX_PHYST0_OFDM)
 		status.rate = bcm43xx_plcp_get_bitrate_ofdm(plcp);
 	else
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3757,8 +3757,8 @@ static int bcm43xx_wireless_init(struct 
 		    IEEE80211_HW_MONITOR_DURING_OPER |
 		    IEEE80211_HW_DEVICE_HIDES_WEP |
 		    IEEE80211_HW_WEP_INCLUDE_IV;
-	hw->max_rssi = -110;
-	hw->max_signal = BCM43xx_RX_MAX_SSI;
+	hw->max_signal = 100; /* This looks wrong, but is what mac80211 wants */
+	hw->max_rssi = BCM43xx_RX_MAX_SSI;
 	hw->max_noise = -110;
 	hw->queues = 1;
 	SET_IEEE80211_DEV(hw, dev->dev);


From larry.finger at lwfinger.net  Sun Apr 15 21:47:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 15 Apr 2007 14:47:00 -0500
Subject: [PATCH] bcm43xx-mac80211: Make wireless statistics yield
	reasonable values
In-Reply-To: <200704150050.48891.flamingice@sourmilk.net>
References: <4621a896.akSEX43I3VgRXr70%Larry.Finger@lwfinger.net>
	<200704150050.48891.flamingice@sourmilk.net>
Message-ID: <46228134.2020300@lwfinger.net>

Michael Wu wrote:
> On Sunday 15 April 2007 00:22, Larry Finger wrote:
>> -	hw->max_rssi = -110;
>> -	hw->max_signal = BCM43xx_RX_MAX_SSI;
>> +	hw->max_signal = 100; /* This looks wrong, but is what mac80211 wants */
>> +	hw->max_rssi = BCM43xx_RX_MAX_SSI;
> The number being passed into ssi is dBm, so why is the max being set to 60? It 
> should be set to the minimum dBm that the device can report, like -110 as it 
> was set before. Since SSI is actually being passed into signal, MAX_SSI 
> should go to max_signal.

You are correct that -110 would be better than -196, which is what 60 translates to given the s8 
arithmetic. Due to the internal workings of mac80211, the quantity in max_signal ends up as the 
denominator in the qual report of x/y. I would sooner give the users a percentage that parts per 60.

Larry


From dwmw2 at infradead.org  Mon Apr 16 02:06:38 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 16 Apr 2007 01:06:38 +0100
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 
	1 PHYs
In-Reply-To: <1176477466.7052.114.camel@johannes.berg>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413113638.10db9767@localhost>  <461F9C58.6050106@lwfinger.net>
	<1176477466.7052.114.camel@johannes.berg>
Message-ID: <1176681998.7929.81.camel@pmac.infradead.org>

On Fri, 2007-04-13 at 17:17 +0200, Johannes Berg wrote:
> With phy rev == 1, the gmode bit is assumed unset when initialising a
> G PHY. Maybe that is the crucial difference. David will send me some
> backtraces of this problem, once he does I'll look at it again.

http://david.woodhou.se/bcm43xx-mac80211.dmesg-3.txt 

The module itself is at http://david.woodhou.se/bcm43xx-mac80211.ko so
you can find line numbers where they're not immediately obvious.

-- 
dwmw2



From dwmw2 at infradead.org  Mon Apr 16 02:53:53 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 16 Apr 2007 01:53:53 +0100
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 
	1 PHYs
In-Reply-To: <1176681998.7929.81.camel@pmac.infradead.org>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413113638.10db9767@localhost>  <461F9C58.6050106@lwfinger.net>
	<1176477466.7052.114.camel@johannes.berg>
	<1176681998.7929.81.camel@pmac.infradead.org>
Message-ID: <1176684833.3304.9.camel@pmac.infradead.org>

On Mon, 2007-04-16 at 01:06 +0100, David Woodhouse wrote:
> On Fri, 2007-04-13 at 17:17 +0200, Johannes Berg wrote:
> > With phy rev == 1, the gmode bit is assumed unset when initialising a
> > G PHY. Maybe that is the crucial difference. David will send me some
> > backtraces of this problem, once he does I'll look at it again.
> 
> http://david.woodhou.se/bcm43xx-mac80211.dmesg-3.txt 
> 
> The module itself is at http://david.woodhou.se/bcm43xx-mac80211.ko so
> you can find line numbers where they're not immediately obvious.

That was without Larry's latest patch applied. If I apply Larry's patch,
we get fewer machine checks...

http://david.woodhou.se/bcm43xx-mac80211-lf.dmesg.txt 
http://david.woodhou.se/bcm43xx-mac80211-lf.ko

Strange, I thought that when I'd tested Larry's patch I was left with
_no_ machine checks. Perhaps at that point I still had a printk on every
PHY read or write and the machine checks were lost in the noise.

-- 
dwmw2



From dwmw2 at infradead.org  Mon Apr 16 03:04:07 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 16 Apr 2007 02:04:07 +0100
Subject: [PATCH] bcm43xx-mac80211: Fix machine checks on PPC with rev 1
	PHYs
In-Reply-To: <461EDB39.6080806@lwfinger.net>
References: <461d0815.ip3FDr8RDQXyCT4U%Larry.Finger@lwfinger.net>
	<20070413000950.GC3470@tuxdriver.com> <461EDB39.6080806@lwfinger.net>
Message-ID: <1176685447.3304.17.camel@pmac.infradead.org>

On Thu, 2007-04-12 at 20:22 -0500, Larry Finger wrote:
> Your tester needs to get a copy of David's hack that prints out the address of the offending 
> register. That is the only way to tell what is happening. Once we know the address, then it will be 
> a matter of getting printk's into the code to tell which one is failing. 

It's very simple... if we use inw instead of readw for the faulting I/O
access, then the machine check gets trapped. We can do this because on
PPC, PCI I/O is actually memory-mapped. The CPU doesn't have a separate
I/O space and instructions. So we just compensate for the address at
which PCI I/O is mapped, and abuse inw().

Then we make bcm43xx_phy_read() print the register it tried to access
whenever it gets 0xFFFF, and stick a WARN_ON(1) in the machine check
handler when it detects a machine check caused by an I/O access...

--- ../linux-2.6.20.ppc64/./drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-14 21:51:02.000000000 +0100
+++ ./drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-16 01:39:44.000000000 +0100
@@ -269,10 +270,13 @@ static inline u16 adjust_phyreg_for_phyt
 u16 bcm43xx_phy_read(struct bcm43xx_wldev *dev, u16 offset)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-
+	uint16_t foo;
 	offset = adjust_phyreg_for_phytype(phy, offset);
 	bcm43xx_write16(dev, BCM43xx_MMIO_PHY_CONTROL, offset);
-	return bcm43xx_read16(dev, BCM43xx_MMIO_PHY_DATA);
+	foo = bcm43xx_read16(dev, BCM43xx_MMIO_PHY_DATA);
+	if (foo == 0xffff)
+		printk(KERN_DEBUG "Read phy reg %x; got 0xFFFF.\n", offset);
+	return foo;
 }
 
 void bcm43xx_phy_write(struct bcm43xx_wldev *dev, u16 offset, u16 val)
--- ../linux-2.6.20.ppc64/./drivers/ssb/pci.c	2007-04-14 21:51:02.000000000 +0100
+++ ./drivers/ssb/pci.c	2007-04-15 23:44:27.000000000 +0100
@@ -475,6 +475,7 @@ static u16 ssb_pci_read16(struct ssb_dev
 		if (unlikely(ssb_pci_switch_core(bus, dev)))
 			return 0xFFFF;
 	}
+	return inw(bus->mmio + offset - isa_io_base);
 	return readw(bus->mmio + offset);
 }
 
--- ../linux-2.6.20.ppc64/./arch/powerpc/kernel/traps.c	2007-04-14 21:50:40.000000000 +0100
+++ ./arch/powerpc/kernel/traps.c	2007-04-15 23:45:48.000000000 +0100
@@ -343,8 +343,10 @@ void machine_check_exception(struct pt_r
 		return;
 	}
 
-	if (check_io_access(regs))
+	if (check_io_access(regs)) {
+		WARN_ON(1);
 		return;
+	}
 
 #if defined(CONFIG_4xx) && !defined(CONFIG_440A)
 	if (reason & ESR_IMCP) {

-- 
dwmw2



From johannes at sipsolutions.net  Mon Apr 16 10:19:10 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 16 Apr 2007 10:19:10 +0200
Subject: Changes to devices page at bcm43xx.berlios.de
In-Reply-To: <20070414183832.77ba87ca@localhost>
References: <4620F466.70205@lwfinger.net> <20070414183832.77ba87ca@localhost>
Message-ID: <1176711551.7052.169.camel@johannes.berg>

On Sat, 2007-04-14 at 18:38 +0200, Stefano Brivio wrote:

> It's me. I would really like to drop most pages there and put links to
> http://linuxwireless.org. Johannes even imported the device list to
> http://linuxwireless.org/en/users/Devices/PCI (not working right now) which
> is a wiki, so everybody can update it.

I fixed the code for the page above (stupid bug), but you can't edit the
list on that page, the real list for bcm43xx is only on the
bcm43xx-specific page.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/c0a353e1/attachment.pgp>

From johan at ehnberg.net  Mon Apr 16 14:49:27 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Mon, 16 Apr 2007 14:49:27 +0200
Subject: Addition to list of chipsets
Message-ID: <462370D7.8050608@ehnberg.net>

Dear mailinglist,

referring to the page on http://bcm43xx.berlios.de/?go=devices, here is 
my integrated card on a HP Compaq nx6325. So far, I have had no luck 
with the bcm43xx driver, but ndiswrapper works.

30:00.0 0280: 14e4:4312 (rev 01)
         Subsystem: 103c:1361
         Flags: bus master, fast devsel, latency 0, IRQ 20
         Memory at c8000000 (32-bit, non-prefetchable) [size=16K]
         Capabilities: [40] Power Management version 2
         Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- 
Queue=0/0 Enable-
         Capabilities: [d0] Express Legacy Endpoint IRQ 0


Best regards,
Johan Ehnberg

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From proski at gnu.org  Mon Apr 16 15:42:45 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 16 Apr 2007 09:42:45 -0400
Subject: Addition to list of chipsets
In-Reply-To: <462370D7.8050608@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>
Message-ID: <1176730965.5163.22.camel@dv>

Hello!

On Mon, 2007-04-16 at 14:49 +0200, Johan Ehnberg wrote:

> referring to the page on http://bcm43xx.berlios.de/?go=devices, here is 
> my integrated card on a HP Compaq nx6325. So far, I have had no luck 
> with the bcm43xx driver, but ndiswrapper works.
> 
> 30:00.0 0280: 14e4:4312 (rev 01)
>          Subsystem: 103c:1361

The driver has an entry for this card in bcm43xx_main.c:

/* Broadcom 4312 802.11a/b/g */
{ PCI_VENDOR_ID_BROADCOM, 0x4312, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },

I believe the bcm43xx driver should work for your card with no changes.
You may want to report the problem with more details.  Please make sure
that you have version 3 firmware installed.

-- 
Regards,
Pavel Roskin



From johan at ehnberg.net  Mon Apr 16 16:48:12 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Mon, 16 Apr 2007 16:48:12 +0200
Subject: Addition to list of chipsets
In-Reply-To: <1176730965.5163.22.camel@dv>
References: <462370D7.8050608@ehnberg.net> <1176730965.5163.22.camel@dv>
Message-ID: <46238CAC.8050502@ehnberg.net>

Pavel Roskin wrote:
> Hello!
> 
> On Mon, 2007-04-16 at 14:49 +0200, Johan Ehnberg wrote:
> 
>> referring to the page on http://bcm43xx.berlios.de/?go=devices, here is 
>> my integrated card on a HP Compaq nx6325. So far, I have had no luck 
>> with the bcm43xx driver, but ndiswrapper works.
>>
>> 30:00.0 0280: 14e4:4312 (rev 01)
>>          Subsystem: 103c:1361
> 
> The driver has an entry for this card in bcm43xx_main.c:
> 
> /* Broadcom 4312 802.11a/b/g */
> { PCI_VENDOR_ID_BROADCOM, 0x4312, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
> 
> I believe the bcm43xx driver should work for your card with no changes.
> You may want to report the problem with more details.  Please make sure
> that you have version 3 firmware installed.
> 

Hi,

I am running Ubuntu 7.04 with kernel 2.6.20. Firmware was downloaded 
automatically and is a:
   filename   :  wl_apsta.o
   version    :  3.130.20.0
   MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
   microcodes :  2 4 5 11
   pcms       :  4 5

If you want, I can help you with testing on my machine. However, as I 
understand the WPA isn't too stable so I can't run it by default.

With the bcm43xx driver I was able to list networks, but never get a 
connection. With the exact same config, ndiswrapper brings up my network.

I remember there was also some issue with specific driver versions and 
my model but this might have been with ndiswrapper.

Also, I got this kind of errors today with bcm43xx:
Apr 16 14:33:03 shadowlap kernel: [ 2406.292000] SoftMAC: Authentication 
timed out with 00:0e:84:d2:8f:20

Best regards,
Johan Ehnberg

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From gr8one2 at gmail.com  Mon Apr 16 17:08:28 2007
From: gr8one2 at gmail.com (Gary Radford)
Date: Mon, 16 Apr 2007 11:08:28 -0400
Subject: Vmware install on Mandriva 2007.0 kills bcm43 wireless
Message-ID: <d1bb6b6a0704160808n75acfe4j7321090bf6477614@mail.gmail.com>

New install on Athlonx64 Emachines M6809 with Mandriva x86-32 2007.0 with
all current updates. I had my wireless bcm43 working for a couple of hours
and a few reboots (x86-64 2007, the wireless is not working). I installed
vmware (using all the defaults and with bridged networks on the wireless)and
now the network is not working. Is this a possible cause of the loss of
wireless?


 When I use network manager to run the wizard Network&Internet configuration
on the Broadcom Corp BCM94306 802.11g NIC and select "Advanced" there are no
values in the NetworkID,Operating frequency,..... iwconfig. Should these
normally be empty/blank.


 When I select the "Manage Wireless Networks" my network signal strength is
red with 2 bars, but when I disconnect the signal strength is green with 5
bars


 Many thanks to all for the effort on this driver. Having wireless and
virtual machines are my last steps to get off dual booting.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/acac4f6d/attachment.html>

From gavron at Wetwork.Net  Mon Apr 16 17:11:10 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 16 Apr 2007 08:11:10 -0700
Subject: Vmware install on Mandriva 2007.0 kills bcm43 wireless
In-Reply-To: <d1bb6b6a0704160808n75acfe4j7321090bf6477614@mail.gmail.com>
References: <d1bb6b6a0704160808n75acfe4j7321090bf6477614@mail.gmail.com>
Message-ID: <4623920E.7090006@Wetwork.Net>

You can't used bridged networking on wireless.
Use NAT.

Ehud

Gary Radford wrote:
>
> New install on Athlonx64 Emachines M6809 with Mandriva x86-32 2007.0 
> with all current updates. I had my wireless bcm43 working for a couple 
> of hours and a few reboots (x86-64 2007, the wireless is not working). 
> I installed vmware (using all the defaults and with bridged networks 
> on the wireless)and now the network is not working. Is this a possible 
> cause of the loss of wireless?
>
>
> When I use network manager to run the wizard Network&Internet 
> configuration on the Broadcom Corp BCM94306 802.11g NIC and select 
> "Advanced" there are no values in the NetworkID,Operating 
> frequency,..... iwconfig. Should these normally be empty/blank.
>
>
> When I select the "Manage Wireless Networks" my network signal 
> strength is red with 2 bars, but when I disconnect the signal strength 
> is green with 5 bars
>
>
> Many thanks to all for the effort on this driver. Having wireless and 
> virtual machines are my last steps to get off dual booting.
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/942059bd/attachment.bin>

From larry.finger at lwfinger.net  Mon Apr 16 17:56:49 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Apr 2007 10:56:49 -0500
Subject: Addition to list of chipsets
In-Reply-To: <46238CAC.8050502@ehnberg.net>
References: <462370D7.8050608@ehnberg.net> <1176730965.5163.22.camel@dv>
	<46238CAC.8050502@ehnberg.net>
Message-ID: <46239CC1.6010908@lwfinger.net>

Johan Ehnberg wrote:
> Pavel Roskin wrote:
>> Hello!
>>
>> On Mon, 2007-04-16 at 14:49 +0200, Johan Ehnberg wrote:
>>
>>> referring to the page on http://bcm43xx.berlios.de/?go=devices, here is 
>>> my integrated card on a HP Compaq nx6325. So far, I have had no luck 
>>> with the bcm43xx driver, but ndiswrapper works.
>>>
>>> 30:00.0 0280: 14e4:4312 (rev 01)
>>>          Subsystem: 103c:1361
>> The driver has an entry for this card in bcm43xx_main.c:
>>
>> /* Broadcom 4312 802.11a/b/g */
>> { PCI_VENDOR_ID_BROADCOM, 0x4312, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
>>
>> I believe the bcm43xx driver should work for your card with no changes.
>> You may want to report the problem with more details.  Please make sure
>> that you have version 3 firmware installed.
>>
> 
> Hi,
> 
> I am running Ubuntu 7.04 with kernel 2.6.20. Firmware was downloaded 
> automatically and is a:
>    filename   :  wl_apsta.o
>    version    :  3.130.20.0
>    MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
>    microcodes :  2 4 5 11
>    pcms       :  4 5
> 
> If you want, I can help you with testing on my machine. However, as I 
> understand the WPA isn't too stable so I can't run it by default.
> 
> With the bcm43xx driver I was able to list networks, but never get a 
> connection. With the exact same config, ndiswrapper brings up my network.
> 
> I remember there was also some issue with specific driver versions and 
> my model but this might have been with ndiswrapper.
> 
> Also, I got this kind of errors today with bcm43xx:
> Apr 16 14:33:03 shadowlap kernel: [ 2406.292000] SoftMAC: Authentication 
> timed out with 00:0e:84:d2:8f:20

You have a signal strength issue.

For any version of the bcm43xx devices, maximum performance is obtained only by downloading and 
installing the appropriate patch from ftp://lwfinger.dynalias.org/patches for any kernel through 
2.6.21-rc7. It is expected that 2.6.22-rc1 (when it is released) will have all current improvements 
installed.

Once the signal strength is fixed by the patch, WPA is fully stable. My 4311 has the same PHY and 
radio version as your 4312, and it works with WPA-PSK TKIP without any problems.

Larry


From ikorot at earthlink.net  Mon Apr 16 19:13:42 2007
From: ikorot at earthlink.net (Igor Korot)
Date: Mon, 16 Apr 2007 10:13:42 -0700 (GMT-07:00)
Subject: Vmware install on Mandriva 2007.0 kills bcm43 wireless
Message-ID: <29656361.1176743622978.JavaMail.root@elwamui-sweet.atl.sa.earthlink.net>

Hi,

-----Original Message-----
>From: Ehud Gavron <gavron at Wetwork.Net>
>Sent: Apr 16, 2007 8:11 AM
>To: Gary Radford <gr8one2 at gmail.com>
>Cc: bcm43xx-dev at lists.berlios.de
>Subject: Re: Vmware install on Mandriva 2007.0 kills bcm43 wireless
>
>You can't used bridged networking on wireless.
>Use NAT.

On Windows, I run VMware-player over the wireless network.
So, it is possible....

However, it looks like Linux do not support this?

>
>Ehud

Thank you.
>
>Gary Radford wrote:
>>
>> New install on Athlonx64 Emachines M6809 with Mandriva x86-32 2007.0 
>> with all current updates. I had my wireless bcm43 working for a couple 
>> of hours and a few reboots (x86-64 2007, the wireless is not working). 
>> I installed vmware (using all the defaults and with bridged networks 
>> on the wireless)and now the network is not working. Is this a possible 
>> cause of the loss of wireless?
>>
>>
>> When I use network manager to run the wizard Network&Internet 
>> configuration on the Broadcom Corp BCM94306 802.11g NIC and select 
>> "Advanced" there are no values in the NetworkID,Operating 
>> frequency,..... iwconfig. Should these normally be empty/blank.
>>
>>
>> When I select the "Manage Wireless Networks" my network signal 
>> strength is red with 2 bars, but when I disconnect the signal strength 
>> is green with 5 bars
>>
>>
>> Many thanks to all for the effort on this driver. Having wireless and 
>> virtual machines are my last steps to get off dual booting.
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>   



From gavron at Wetwork.Net  Mon Apr 16 19:53:22 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Mon, 16 Apr 2007 10:53:22 -0700
Subject: Vmware install on Mandriva 2007.0 kills bcm43 wireless
In-Reply-To: <29656361.1176743622978.JavaMail.root@elwamui-sweet.atl.sa.earthlink.net>
References: <29656361.1176743622978.JavaMail.root@elwamui-sweet.atl.sa.earthlink.net>
Message-ID: <4623B812.9030808@Wetwork.Net>

Trimmed.

You can't used bridged networking for wireless.  You don't do this on 
Windoze and it won't work on Linux.
http://www.extremetech.com/article2/0,1697,1156371,00.asp

If that isn't clear try
http://www.google.com/search?sourceid=mozclient&ie=utf-8&oe=utf-8&q=vmware+bridged+wireless

Either way this is NOT a BCM43xx issue.

Ehud

Igor Korot wrote:
> Hi,
>
> -----Original Message-----
>   
>> From: Ehud Gavron <gavron at Wetwork.Net>
...
>> Subject: Re: Vmware install on Mandriva 2007.0 kills bcm43 wireless
>>
>> You can't used bridged networking on wireless.
>> Use NAT.
>>     
>
> On Windows, I run VMware-player over the wireless network.
> So, it is possible....
>
> However, it looks like Linux do not support this?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/c2ff4083/attachment.bin>

From schwab at suse.de  Mon Apr 16 20:05:10 2007
From: schwab at suse.de (Andreas Schwab)
Date: Mon, 16 Apr 2007 20:05:10 +0200
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net> (Larry
	Finger's message of "Mon, 09 Apr 2007 11:24:41 -0500")
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
Message-ID: <jeirbwfb55.fsf@sykes.suse.de>

Larry Finger <Larry.Finger at lwfinger.net> writes:

> There are messages arising from ieee80211_crypt that spam the logs of
> casual users. These are changed to be logged only if the user specifically
> requests the IEEE80211_DEBUG_DROP messages. In either case, the error/drop count
> is incremented.
>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
>
> Index: wireless-2.6/net/ieee80211/ieee80211_crypt_tkip.c
> ===================================================================
> --- wireless-2.6.orig/net/ieee80211/ieee80211_crypt_tkip.c
> +++ wireless-2.6/net/ieee80211/ieee80211_crypt_tkip.c
> @@ -465,7 +465,7 @@ static int ieee80211_tkip_decrypt(struct
>  
>  	if (tkip_replay_check(iv32, iv16, tkey->rx_iv32, tkey->rx_iv16)) {
>  		if (net_ratelimit()) {
> -			printk(KERN_DEBUG "TKIP: replay detected: STA=" MAC_FMT
> +			IEEE80211_DEBUG_DROP("TKIP: replay detected: STA=" MAC_FMT
>  			       " previous TSC %08x%04x received TSC "
>  			       "%08x%04x\n", MAC_ARG(hdr->addr2),
>  			       tkey->rx_iv32, tkey->rx_iv16, iv32, iv16);
> @@ -507,7 +507,7 @@ static int ieee80211_tkip_decrypt(struct
>  			tkey->rx_phase1_done = 0;
>  		}
>  		if (net_ratelimit()) {
> -			printk(KERN_DEBUG "TKIP: ICV error detected: STA="
> +			IEEE80211_DEBUG_DROP("TKIP: ICV error detected: STA="
>  			       MAC_FMT "\n", MAC_ARG(hdr->addr2));
>  		}
>  		tkey->dot11RSNAStatsTKIPICVErrors++;
> Index: wireless-2.6/net/ieee80211/ieee80211_crypt_ccmp.c
> ===================================================================
> --- wireless-2.6.orig/net/ieee80211/ieee80211_crypt_ccmp.c
> +++ wireless-2.6/net/ieee80211/ieee80211_crypt_ccmp.c
> @@ -338,7 +338,7 @@ static int ieee80211_ccmp_decrypt(struct
>  
>  	if (ccmp_replay_check(pn, key->rx_pn)) {
>  		if (net_ratelimit()) {
> -			printk(KERN_DEBUG "CCMP: replay detected: STA=" MAC_FMT
> +			IEEE80211_DEBUG_DROP("CCMP: replay detected: STA=" MAC_FMT
>  			       " previous PN %02x%02x%02x%02x%02x%02x "
>  			       "received PN %02x%02x%02x%02x%02x%02x\n",
>  			       MAC_ARG(hdr->addr2), MAC_ARG(key->rx_pn),
>
>

This is causing an undefined refrence to ieee80211_debug_level with
CONFIG_IEEE80211_DEBUG=y and CONFIG_IEEE80211_CRYPT_CCMP=m and/or
CONFIG_IEEE80211_CRYPT_TKIP=m.

WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_tkip.ko] undefined!
WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_ccmp.ko] undefined!

Andreas.

-- 
Andreas Schwab, SuSE Labs, schwab at suse.de
SuSE Linux Products GmbH, Maxfeldstra?e 5, 90409 N?rnberg, Germany
PGP key fingerprint = 58CA 54C7 6D53 942B 1756  01D3 44D5 214B 8276 4ED5
"And now for something completely different."


From larry.finger at lwfinger.net  Mon Apr 16 20:50:09 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Apr 2007 13:50:09 -0500
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <jeirbwfb55.fsf@sykes.suse.de>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
	<jeirbwfb55.fsf@sykes.suse.de>
Message-ID: <4623C561.4030201@lwfinger.net>

Andreas Schwab wrote:
> 
> This is causing an undefined refrence to ieee80211_debug_level with
> CONFIG_IEEE80211_DEBUG=y and CONFIG_IEEE80211_CRYPT_CCMP=m and/or
> CONFIG_IEEE80211_CRYPT_TKIP=m.
> 
> WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_tkip.ko] undefined!
> WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_ccmp.ko] undefined!
> 
> Andreas.

The missing symbol was not exported by ieee80211_module.c. Sorry for not testing enough. The fix is 
as follows:

Index: wireless-2.6/net/ieee80211/ieee80211_module.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_module.c
+++ wireless-2.6/net/ieee80211/ieee80211_module.c
@@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d

  static int debug = 0;
  u32 ieee80211_debug_level = 0;
+EXPORT_SYMBOL_GPL(ieee80211_debug_level);
  static struct proc_dir_entry *ieee80211_proc = NULL;

  static int show_debug_level(char *page, char **start, off_t offset,


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: missing_debug
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/1c1c950e/attachment.ksh>

From johan at ehnberg.net  Mon Apr 16 20:57:20 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Mon, 16 Apr 2007 20:57:20 +0200
Subject: Addition to list of chipsets
In-Reply-To: <46239CC1.6010908@lwfinger.net>
References: <462370D7.8050608@ehnberg.net> <1176730965.5163.22.camel@dv>
	<46238CAC.8050502@ehnberg.net> <46239CC1.6010908@lwfinger.net>
Message-ID: <4623C710.5060408@ehnberg.net>

Larry Finger wrote:
> Johan Ehnberg wrote:
>> Pavel Roskin wrote:
>>> Hello!
>>>
>>> On Mon, 2007-04-16 at 14:49 +0200, Johan Ehnberg wrote:
>>>
>>>> referring to the page on http://bcm43xx.berlios.de/?go=devices, here 
>>>> is my integrated card on a HP Compaq nx6325. So far, I have had no 
>>>> luck with the bcm43xx driver, but ndiswrapper works.
>>>>
>>>> 30:00.0 0280: 14e4:4312 (rev 01)
>>>>          Subsystem: 103c:1361
>>> The driver has an entry for this card in bcm43xx_main.c:
>>>
>>> /* Broadcom 4312 802.11a/b/g */
>>> { PCI_VENDOR_ID_BROADCOM, 0x4312, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
>>>
>>> I believe the bcm43xx driver should work for your card with no changes.
>>> You may want to report the problem with more details.  Please make sure
>>> that you have version 3 firmware installed.
>>>
>>
>> Hi,
>>
>> I am running Ubuntu 7.04 with kernel 2.6.20. Firmware was downloaded 
>> automatically and is a:
>>    filename   :  wl_apsta.o
>>    version    :  3.130.20.0
>>    MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
>>    microcodes :  2 4 5 11
>>    pcms       :  4 5
>>
>> If you want, I can help you with testing on my machine. However, as I 
>> understand the WPA isn't too stable so I can't run it by default.
>>
>> With the bcm43xx driver I was able to list networks, but never get a 
>> connection. With the exact same config, ndiswrapper brings up my network.
>>
>> I remember there was also some issue with specific driver versions and 
>> my model but this might have been with ndiswrapper.
>>
>> Also, I got this kind of errors today with bcm43xx:
>> Apr 16 14:33:03 shadowlap kernel: [ 2406.292000] SoftMAC: 
>> Authentication timed out with 00:0e:84:d2:8f:20
> 
> You have a signal strength issue.
> 
> For any version of the bcm43xx devices, maximum performance is obtained 
> only by downloading and installing the appropriate patch from 
> ftp://lwfinger.dynalias.org/patches for any kernel through 2.6.21-rc7. 
> It is expected that 2.6.22-rc1 (when it is released) will have all 
> current improvements installed.
> 
> Once the signal strength is fixed by the patch, WPA is fully stable. My 
> 4311 has the same PHY and radio version as your 4312, and it works with 
> WPA-PSK TKIP without any problems.
> 
> Larry

Thanks for the info, it explains more than the error in dmesg. Although 
I believe the signal should have been good, only a few meters away and 
in line of sight.

If I get the chance to roll a custom kernel, I will test it and get back 
to you. My network quota is rather restricted where I am currently, so 
it might take a while to get all the packages.

Otherwise I will just give it another six months to stabilize and get in 
mainline.

Keep up the good work!

/johan

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From proski at gnu.org  Mon Apr 16 21:03:55 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 16 Apr 2007 15:03:55 -0400
Subject: Addition to list of chipsets
In-Reply-To: <4623C710.5060408@ehnberg.net>
References: <462370D7.8050608@ehnberg.net> <1176730965.5163.22.camel@dv>
	<46238CAC.8050502@ehnberg.net> <46239CC1.6010908@lwfinger.net>
	<4623C710.5060408@ehnberg.net>
Message-ID: <1176750235.955.22.camel@dv>

On Mon, 2007-04-16 at 20:57 +0200, Johan Ehnberg wrote:

> If I get the chance to roll a custom kernel, I will test it and get
> back 
> to you. My network quota is rather restricted where I am currently,
> so 
> it might take a while to get all the packages.
> 
> Otherwise I will just give it another six months to stabilize and get
> in 
> mainline.

There is a standalone driver distribution:
ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2

It's just 134k long.  It should compile against most relatively new
kernels.  If you are using a kernel from a distribution, you'll need the
kernel development package (linux-headers for Debian, kernel-devel for
Fedora).

-- 
Regards,
Pavel Roskin



From mb at bu3sch.de  Mon Apr 16 22:37:01 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 16 Apr 2007 22:37:01 +0200
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <4623C561.4030201@lwfinger.net>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
	<jeirbwfb55.fsf@sykes.suse.de> <4623C561.4030201@lwfinger.net>
Message-ID: <200704162237.01280.mb@bu3sch.de>

On Monday 16 April 2007 20:50, Larry Finger wrote:
> Andreas Schwab wrote:
> > 
> > This is causing an undefined refrence to ieee80211_debug_level with
> > CONFIG_IEEE80211_DEBUG=y and CONFIG_IEEE80211_CRYPT_CCMP=m and/or
> > CONFIG_IEEE80211_CRYPT_TKIP=m.
> > 
> > WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_tkip.ko] undefined!
> > WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_ccmp.ko] undefined!
> > 
> > Andreas.
> 
> The missing symbol was not exported by ieee80211_module.c. Sorry for not testing enough. The fix is 
> as follows:
> 
> Index: wireless-2.6/net/ieee80211/ieee80211_module.c
> ===================================================================
> --- wireless-2.6.orig/net/ieee80211/ieee80211_module.c
> +++ wireless-2.6/net/ieee80211/ieee80211_module.c
> @@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d
> 
>   static int debug = 0;
>   u32 ieee80211_debug_level = 0;
> +EXPORT_SYMBOL_GPL(ieee80211_debug_level);

We don't use the _GPL suffix in mac80211.

>   static struct proc_dir_entry *ieee80211_proc = NULL;
> 
>   static int show_debug_level(char *page, char **start, off_t offset,
> 
> 
> 

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Tue Apr 17 02:24:14 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Apr 2007 19:24:14 -0500
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <200704162237.01280.mb@bu3sch.de>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>	<jeirbwfb55.fsf@sykes.suse.de>
	<4623C561.4030201@lwfinger.net> <200704162237.01280.mb@bu3sch.de>
Message-ID: <462413AE.9020200@lwfinger.net>

Michael Buesch wrote:
> On Monday 16 April 2007 20:50, Larry Finger wrote:
>> Andreas Schwab wrote:
>>> This is causing an undefined refrence to ieee80211_debug_level with
>>> CONFIG_IEEE80211_DEBUG=y and CONFIG_IEEE80211_CRYPT_CCMP=m and/or
>>> CONFIG_IEEE80211_CRYPT_TKIP=m.
>>>
>>> WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_tkip.ko] undefined!
>>> WARNING: "ieee80211_debug_level" [net/ieee80211/ieee80211_crypt_ccmp.ko] undefined!
>>>
>>> Andreas.
>> The missing symbol was not exported by ieee80211_module.c. Sorry for not testing enough. The fix is 
>> as follows:
>>
>> Index: wireless-2.6/net/ieee80211/ieee80211_module.c
>> ===================================================================
>> --- wireless-2.6.orig/net/ieee80211/ieee80211_module.c
>> +++ wireless-2.6/net/ieee80211/ieee80211_module.c
>> @@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d
>>
>>   static int debug = 0;
>>   u32 ieee80211_debug_level = 0;
>> +EXPORT_SYMBOL_GPL(ieee80211_debug_level);
> 
> We don't use the _GPL suffix in mac80211.
> 

Upon inspection, neither does most of ieee80211. It is now changed.

Larry


From dan.pasanen at gmail.com  Tue Apr 17 05:47:38 2007
From: dan.pasanen at gmail.com (Dan Pasanen)
Date: Mon, 16 Apr 2007 22:47:38 -0500
Subject: Fwd: Vmware install on Mandriva 2007.0 kills bcm43 wireless
In-Reply-To: <4f8d9c0c0704162046p13fb0f11t45921727f7a8ee9a@mail.gmail.com>
References: <29656361.1176743622978.JavaMail.root@elwamui-sweet.atl.sa.earthlink.net>
	<4623B812.9030808@Wetwork.Net>
	<4f8d9c0c0704162046p13fb0f11t45921727f7a8ee9a@mail.gmail.com>
Message-ID: <4f8d9c0c0704162047u55ded105tcabe32ff2290e22e@mail.gmail.com>

True that it is probably not a bcm43xx issue, I think I may have used
ndiswrapper with my bcm4311 card and vmware server.  You could give that a
shot.

Dan

ps sorry for the single reply Ehud

On 4/16/07, Ehud Gavron <gavron at wetwork.net> wrote:

> Trimmed.
>
> You can't used bridged networking for wireless.  You don't do this on
> Windoze and it won't work on Linux.
> http://www.extremetech.com/article2/0,1697,1156371,00.asp
>
> If that isn't clear try
> http://www.google.com/search?sourceid=mozclient&ie=utf-8&oe=utf-8&q=vmware+bridged+wireless
>
>
> Either way this is NOT a BCM43xx issue.
>
> Ehud
>
> Igor Korot wrote:
> > Hi,
> >
> > -----Original Message-----
> >
> >> From: Ehud Gavron < gavron at Wetwork.Net>
> ...
> >> Subject: Re: Vmware install on Mandriva 2007.0 kills bcm43 wireless
> >>
> >> You can't used bridged networking on wireless.
> >> Use NAT.
> >>
> >
> > On Windows, I run VMware-player over the wireless network.
> > So, it is possible....
> >
> > However, it looks like Linux do not support this?
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070416/092abb31/attachment.html>

From kamil.d3llf.izdebski at gmail.com  Tue Apr 17 14:55:02 2007
From: kamil.d3llf.izdebski at gmail.com (Kamil Izdebski)
Date: Tue, 17 Apr 2007 14:55:02 +0200
Subject: Another bcm4311 model works
Message-ID: <e6c520c00704170555p5f183966wb659a260aea23329@mail.gmail.com>

Hello there,
My name is Kamil Izdebski, this is my first post to this mailing list.

I'm happy, that i can announce, that another laptop model can be added
for http://bcm43xx.berlios.de/?go=devices list:

Tiamat ~ # lspci -vn
---8<------------
01:00.0 0280: 14e4:4311 (rev 01)
        Subsystem: 103c:1363
        Flags: bus master, fast devsel, latency 0, IRQ 19
        Memory at c3000000 (32-bit, non-prefetchable) [size=16K]
        Capabilities: [40] Power Management version 2
        Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- Queue=0/0
Enable-
        Capabilities: [d0] Express Legacy Endpoint IRQ 0
        Capabilities: [100] Advanced Error Reporting
        Capabilities: [13c] Virtual Channel
------->8---------

Tiamat ~ # uname -a

Linux Tiamat 2.6.20-gentoo-r5-D3Core #3 PREEMPT Tue Apr 17 12:32:08
CEST 2007 x86_64 Mobile AMD Sempron(tm) AuthenticAMD GNU/Linux

Used firmware: http://www.zcentric.com/brcmDrv340rc100a.zip

My hardware is HP Compaq V3000Z, more information about this model may
be found on http://h10025.www1.hp.com/ewfrf/wc/product?product=3180330&lc=en&cc=us&dlc=en

Kernel source is generic gentoo kernel, without Larry's Finger patches
(yet), so transfer rates aren't great, but everything else works fine.

Cheers

-- 
Verum volo dici mihi ...


From linville at tuxdriver.com  Tue Apr 17 15:12:22 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 17 Apr 2007 09:12:22 -0400
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <462413AE.9020200@lwfinger.net>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
	<jeirbwfb55.fsf@sykes.suse.de> <4623C561.4030201@lwfinger.net>
	<200704162237.01280.mb@bu3sch.de> <462413AE.9020200@lwfinger.net>
Message-ID: <20070417131222.GA8633@tuxdriver.com>

On Mon, Apr 16, 2007 at 07:24:14PM -0500, Larry Finger wrote:
> Michael Buesch wrote:
> > On Monday 16 April 2007 20:50, Larry Finger wrote:

> >> @@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d
> >>
> >>   static int debug = 0;
> >>   u32 ieee80211_debug_level = 0;
> >> +EXPORT_SYMBOL_GPL(ieee80211_debug_level);
> > 
> > We don't use the _GPL suffix in mac80211.
> 
> Upon inspection, neither does most of ieee80211. It is now changed.

You are strongly encouraged to use the _GPL version for new symbol
exports, especially those which are fundamentally internal to
in-kernel subsystems and/or have no reasonable usage by drivers.
FWIW, this symbol would seem to fulfill both of those criteria.

If you do not object, I would prefer the _GPL version of the patch.

John
-- 
John W. Linville
linville at tuxdriver.com


From gr8one2 at gmail.com  Tue Apr 17 16:24:30 2007
From: gr8one2 at gmail.com (Gary Radford)
Date: Tue, 17 Apr 2007 10:24:30 -0400
Subject: Update VMware not causing problems
Message-ID: <d1bb6b6a0704170724u5a327774i33682b9182e2a050@mail.gmail.com>

After further testing this has nothing todo with VMware and after trying a
couple of full installs with different versions of the bcm43 driver, the
wireless is working but has reconnection problems in kde- the Gnome network
does not see the wifi at all.  Will try the ndiswrapper today to see if that
is better.

Does the current version fwcutter handle more versions of the bcmwl5.sys?

Thanks for the tips on VMware...I only really need local network.

Gary
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070417/9f34a727/attachment.html>

From johan at ehnberg.net  Tue Apr 17 16:31:22 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Tue, 17 Apr 2007 16:31:22 +0200
Subject: Addition to list of chipsets
In-Reply-To: <1176750235.955.22.camel@dv>
References: <462370D7.8050608@ehnberg.net> <1176730965.5163.22.camel@dv>	
	<46238CAC.8050502@ehnberg.net> <46239CC1.6010908@lwfinger.net>	
	<4623C710.5060408@ehnberg.net> <1176750235.955.22.camel@dv>
Message-ID: <4624DA3A.4020502@ehnberg.net>



Pavel Roskin wrote:
> On Mon, 2007-04-16 at 20:57 +0200, Johan Ehnberg wrote:
> 
>> If I get the chance to roll a custom kernel, I will test it and get
>> back 
>> to you. My network quota is rather restricted where I am currently,
>> so 
>> it might take a while to get all the packages.
>>
>> Otherwise I will just give it another six months to stabilize and get
>> in 
>> mainline.
> 
> There is a standalone driver distribution:
> ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2
> 
> It's just 134k long.  It should compile against most relatively new
> kernels.  If you are using a kernel from a distribution, you'll need the
> kernel development package (linux-headers for Debian, kernel-devel for
> Fedora).
> 

Thank you, that one I had the chance to try already. However, after 
doing 'make && make install', replacing the original modules with them 
(they were not being loaded in the 'extra' folder), running 'depmod -ae' 
and a clean boot, the module doesn't load:

[   32.912356] bcm43xx: Unknown symbol bcm43xx_pio_tx
[   32.912566] bcm43xx: Unknown symbol bcm43xx_pio_free
[   32.912602] bcm43xx: Unknown symbol bcm43xx_pio_freeze_txqueues
[   32.912687] bcm43xx: Unknown symbol bcm43xx_pio_thaw_txqueues
[   32.912846] bcm43xx: Unknown symbol bcm43xx_pio_init
[   32.912891] bcm43xx: Unknown symbol bcm43xx_pio_handle_xmitstatus
[   32.913014] bcm43xx: Unknown symbol bcm43xx_pio_rx

Either I am missing something here or the package really did not work 
with my headers? I haven't rolled many kernels since the introduction of 
good automatic module loading mechanisms, though, so I've gotten a bit 
rusty on that front.

/johan

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From larry.finger at lwfinger.net  Tue Apr 17 16:44:04 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 09:44:04 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4624DA3A.4020502@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>
	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>
	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>
	<1176750235.955.22.camel@dv> <4624DA3A.4020502@ehnberg.net>
Message-ID: <4624DD34.5080006@lwfinger.net>

Johan Ehnberg wrote:
> 
> Pavel Roskin wrote:
>> On Mon, 2007-04-16 at 20:57 +0200, Johan Ehnberg wrote:
>>
>>> If I get the chance to roll a custom kernel, I will test it and get
>>> back 
>>> to you. My network quota is rather restricted where I am currently,
>>> so 
>>> it might take a while to get all the packages.
>>>
>>> Otherwise I will just give it another six months to stabilize and get
>>> in 
>>> mainline.
>> There is a standalone driver distribution:
>> ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2
>>
>> It's just 134k long.  It should compile against most relatively new
>> kernels.  If you are using a kernel from a distribution, you'll need the
>> kernel development package (linux-headers for Debian, kernel-devel for
>> Fedora).
>>
> 
> Thank you, that one I had the chance to try already. However, after 
> doing 'make && make install', replacing the original modules with them 
> (they were not being loaded in the 'extra' folder), running 'depmod -ae' 
> and a clean boot, the module doesn't load:
> 
> [   32.912356] bcm43xx: Unknown symbol bcm43xx_pio_tx
> [   32.912566] bcm43xx: Unknown symbol bcm43xx_pio_free
> [   32.912602] bcm43xx: Unknown symbol bcm43xx_pio_freeze_txqueues
> [   32.912687] bcm43xx: Unknown symbol bcm43xx_pio_thaw_txqueues
> [   32.912846] bcm43xx: Unknown symbol bcm43xx_pio_init
> [   32.912891] bcm43xx: Unknown symbol bcm43xx_pio_handle_xmitstatus
> [   32.913014] bcm43xx: Unknown symbol bcm43xx_pio_rx
> 
> Either I am missing something here or the package really did not work 
> with my headers? I haven't rolled many kernels since the introduction of 
> good automatic module loading mechanisms, though, so I've gotten a bit 
> rusty on that front.

That is a bug in the standalone system. It should work if you remove the comment # from the PIO_MODE 
line of bcm43xx-softmac-sa/bcm43xx/Makefile.

Larry


From larry.finger at lwfinger.net  Tue Apr 17 16:47:15 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 09:47:15 -0500
Subject: Update VMware not causing problems
In-Reply-To: <d1bb6b6a0704170724u5a327774i33682b9182e2a050@mail.gmail.com>
References: <d1bb6b6a0704170724u5a327774i33682b9182e2a050@mail.gmail.com>
Message-ID: <4624DDF3.6060601@lwfinger.net>

Gary Radford wrote:
> After further testing this has nothing todo with VMware and after trying 
> a couple of full installs with different versions of the bcm43 driver, 
> the wireless is working but has reconnection problems in kde- the Gnome 
> network does not see the wifi at all.  Will try the ndiswrapper today to 
> see if that is better.
> 
> Does the current version fwcutter handle more versions of the bcmwl5.sys?

The connection problem is likely due to signal strength problems. The latest set of patches fix 
those, but are not yet part of any standard kernel. The current fwcutter does handle many more 
versions of the drivers.

Larry



From andrew.james.barr at gmail.com  Tue Apr 17 16:59:47 2007
From: andrew.james.barr at gmail.com (Andrew J. Barr)
Date: Tue, 17 Apr 2007 10:59:47 -0400
Subject: Addition to list of chipsets
In-Reply-To: <46239CC1.6010908@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>
	<1176730965.5163.22.camel@dv>	<46238CAC.8050502@ehnberg.net>
	<46239CC1.6010908@lwfinger.net>
Message-ID: <4624E0E3.3080809@gmail.com>

Larry Finger wrote:
> For any version of the bcm43xx devices, maximum performance is obtained only by downloading and 
> installing the appropriate patch from ftp://lwfinger.dynalias.org/patches for any kernel through 
> 2.6.21-rc7. It is expected that 2.6.22-rc1 (when it is released) will have all current improvements 
> installed.

Hi,

I'm having trouble with the standalone distribution on the Debian etch 
PowerPC kernel:

andrew at powerbook:~/bcm43xx-softmac-sa$ make
make -C /lib/modules/2.6.18-4-powerpc/build 
M=/home/andrew/bcm43xx-softmac-sa modules
make[1]: Entering directory `/usr/src/linux-headers-2.6.18-4-powerpc'
   CC [M]  /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.o
In file included from 
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:44:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx.h:829: error: field 
?periodic_work? has incomplete type
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
?bcm43xx_initialize_irq?:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:2170: warning: 
passing argument 2 of ?request_irq? from incompatible pointer type
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
?bcm43xx_periodic_work_handler?:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3255: warning: 
type defaults to ?int? in declaration of ?__mptr?
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3255: warning: 
initialization from incompatible pointer type
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
?bcm43xx_periodic_tasks_setup?:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3320: warning: 
implicit declaration of function ?INIT_DELAYED_WORK?
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3321: warning: 
passing argument 1 of ?schedule_delayed_work? from incompatible pointer 
type
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
?bcm43xx_init_one?:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4177: warning: 
assignment discards qualifiers from pointer target type
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257:50: error: 
macro "INIT_WORK" requires 3 arguments, but only 2 given
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
?bcm43xx_controller_restart?:
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: 
?INIT_WORK? undeclared (first use in this function)
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: 
(Each undeclared identifier is reported only once
/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: for 
each function it appears in.)
make[3]: *** [/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.o] 
Error 1
make[2]: *** [/home/andrew/bcm43xx-softmac-sa/bcm43xx] Error 2
make[1]: *** [_module_/home/andrew/bcm43xx-softmac-sa] Error 2
make[1]: Leaving directory `/usr/src/linux-headers-2.6.18-4-powerpc'
make: *** [modules] Error 2

There is a 2.6.20 kernel available in sid, should I try that instead?

Thanks,
Andrew


From larry.finger at lwfinger.net  Tue Apr 17 17:25:32 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 10:25:32 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4624E0E3.3080809@gmail.com>
References: <462370D7.8050608@ehnberg.net>
	<1176730965.5163.22.camel@dv>	<46238CAC.8050502@ehnberg.net>
	<46239CC1.6010908@lwfinger.net> <4624E0E3.3080809@gmail.com>
Message-ID: <4624E6EC.10603@lwfinger.net>

Andrew J. Barr wrote:
> Larry Finger wrote:
>> For any version of the bcm43xx devices, maximum performance is 
>> obtained only by downloading and installing the appropriate patch from 
>> ftp://lwfinger.dynalias.org/patches for any kernel through 2.6.21-rc7. 
>> It is expected that 2.6.22-rc1 (when it is released) will have all 
>> current improvements installed.
> 
> Hi,
> 
> I'm having trouble with the standalone distribution on the Debian etch 
> PowerPC kernel:
> 
> andrew at powerbook:~/bcm43xx-softmac-sa$ make
> make -C /lib/modules/2.6.18-4-powerpc/build 
> M=/home/andrew/bcm43xx-softmac-sa modules
> make[1]: Entering directory `/usr/src/linux-headers-2.6.18-4-powerpc'
>   CC [M]  /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.o
> In file included from 
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:44:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx.h:829: error: field 
> ?periodic_work? has incomplete type
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
> ?bcm43xx_initialize_irq?:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:2170: warning: 
> passing argument 2 of ?request_irq? from incompatible pointer type
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
> ?bcm43xx_periodic_work_handler?:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3255: warning: 
> type defaults to ?int? in declaration of ?__mptr?
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3255: warning: 
> initialization from incompatible pointer type
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
> ?bcm43xx_periodic_tasks_setup?:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3320: warning: 
> implicit declaration of function ?INIT_DELAYED_WORK?
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:3321: warning: 
> passing argument 1 of ?schedule_delayed_work? from incompatible pointer 
> type
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
> ?bcm43xx_init_one?:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4177: warning: 
> assignment discards qualifiers from pointer target type
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257:50: error: 
> macro "INIT_WORK" requires 3 arguments, but only 2 given
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c: In function 
> ?bcm43xx_controller_restart?:
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: 
> ?INIT_WORK? undeclared (first use in this function)
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: 
> (Each undeclared identifier is reported only once
> /home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.c:4257: error: for 
> each function it appears in.)
> make[3]: *** [/home/andrew/bcm43xx-softmac-sa/bcm43xx/bcm43xx_main.o] 
> Error 1
> make[2]: *** [/home/andrew/bcm43xx-softmac-sa/bcm43xx] Error 2
> make[1]: *** [_module_/home/andrew/bcm43xx-softmac-sa] Error 2
> make[1]: Leaving directory `/usr/src/linux-headers-2.6.18-4-powerpc'
> make: *** [modules] Error 2
> 
> There is a 2.6.20 kernel available in sid, should I try that instead?

Yes, there was a change in the API for deferred work queues. I need to check what kernel version 
changed that and error the build process, but 2.6.20 will work.

Larry


From Larry.Finger at lwfinger.net  Tue Apr 17 17:28:47 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 10:28:47 -0500
Subject: [PATCH] ieee80211: Fix missing global needed for
	IEEE80211_DEBUG_XXX macros in ieee80211_crypt
Message-ID: <4624e7af.dsH6NaP0Ps8a6ZgK%Larry.Finger@lwfinger.net>

Using any of the IEEE80211_DEBUG_XXXX macros in any ieee80211_crypt routine
built as a module results in a missing global for 'ieee80211_debug_level'.
The fix is to export the symbol in ieee80211.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/net/ieee80211/ieee80211_module.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_module.c
+++ wireless-2.6/net/ieee80211/ieee80211_module.c
@@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d
 
 static int debug = 0;
 u32 ieee80211_debug_level = 0;
+EXPORT_SYMBOL_GPL(ieee80211_debug_level);
 static struct proc_dir_entry *ieee80211_proc = NULL;
 
 static int show_debug_level(char *page, char **start, off_t offset,


From johan at ehnberg.net  Tue Apr 17 17:27:54 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Tue, 17 Apr 2007 17:27:54 +0200
Subject: Addition to list of chipsets
In-Reply-To: <4624DD34.5080006@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>
	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>
	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>
	<1176750235.955.22.camel@dv> <4624DA3A.4020502@ehnberg.net>
	<4624DD34.5080006@lwfinger.net>
Message-ID: <4624E77A.5060308@ehnberg.net>

Larry Finger wrote:
> Johan Ehnberg wrote:
>>
>> Pavel Roskin wrote:
>>> On Mon, 2007-04-16 at 20:57 +0200, Johan Ehnberg wrote:
>>>
>>>> If I get the chance to roll a custom kernel, I will test it and get
>>>> back to you. My network quota is rather restricted where I am 
>>>> currently,
>>>> so it might take a while to get all the packages.
>>>>
>>>> Otherwise I will just give it another six months to stabilize and get
>>>> in mainline.
>>> There is a standalone driver distribution:
>>> ftp://lwfinger.dynalias.org/patches/bcm43xx-softmac-sa.tar.bz2
>>>
>>> It's just 134k long.  It should compile against most relatively new
>>> kernels.  If you are using a kernel from a distribution, you'll need the
>>> kernel development package (linux-headers for Debian, kernel-devel for
>>> Fedora).
>>>
>>
>> Thank you, that one I had the chance to try already. However, after 
>> doing 'make && make install', replacing the original modules with them 
>> (they were not being loaded in the 'extra' folder), running 'depmod 
>> -ae' and a clean boot, the module doesn't load:
>>
>> [   32.912356] bcm43xx: Unknown symbol bcm43xx_pio_tx
>> [   32.912566] bcm43xx: Unknown symbol bcm43xx_pio_free
>> [   32.912602] bcm43xx: Unknown symbol bcm43xx_pio_freeze_txqueues
>> [   32.912687] bcm43xx: Unknown symbol bcm43xx_pio_thaw_txqueues
>> [   32.912846] bcm43xx: Unknown symbol bcm43xx_pio_init
>> [   32.912891] bcm43xx: Unknown symbol bcm43xx_pio_handle_xmitstatus
>> [   32.913014] bcm43xx: Unknown symbol bcm43xx_pio_rx
>>
>> Either I am missing something here or the package really did not work 
>> with my headers? I haven't rolled many kernels since the introduction 
>> of good automatic module loading mechanisms, though, so I've gotten a 
>> bit rusty on that front.
> 
> That is a bug in the standalone system. It should work if you remove the 
> comment # from the PIO_MODE line of bcm43xx-softmac-sa/bcm43xx/Makefile.
> 
> Larry

I tried both just removing the comment and also changing it to "n". The 
compilation gives me:

WARNING: "bcm43xx_pio_rx" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_handle_xmitstatus" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_init" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_thaw_txqueues" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_freeze_txqueues" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_free" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!
WARNING: "bcm43xx_pio_tx" 
[/opt/incoming/bcm43xx-softmac-sa/bcm43xx/bcm43xx.ko] undefined!

And the module still fails to load as above. Want me to test more?

Cheers,
Johan
-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From linville at tuxdriver.com  Tue Apr 17 17:21:03 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 17 Apr 2007 11:21:03 -0400
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error logging
	conditional on IEEE80211_DEBUG_DROP
In-Reply-To: <1176819909.26202.33.camel@localhost.localdomain>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
	<jeirbwfb55.fsf@sykes.suse.de> <4623C561.4030201@lwfinger.net>
	<200704162237.01280.mb@bu3sch.de> <462413AE.9020200@lwfinger.net>
	<20070417131222.GA8633@tuxdriver.com>
	<1176819909.26202.33.camel@localhost.localdomain>
Message-ID: <20070417152103.GC8633@tuxdriver.com>

On Tue, Apr 17, 2007 at 10:25:08AM -0400, Dan Williams wrote:
> On Tue, 2007-04-17 at 09:12 -0400, John W. Linville wrote:
> > On Mon, Apr 16, 2007 at 07:24:14PM -0500, Larry Finger wrote:
> > > Michael Buesch wrote:
> > > > On Monday 16 April 2007 20:50, Larry Finger wrote:
> > 
> > > >> @@ -229,6 +229,7 @@ void free_ieee80211(struct net_device *d
> > > >>
> > > >>   static int debug = 0;
> > > >>   u32 ieee80211_debug_level = 0;
> > > >> +EXPORT_SYMBOL_GPL(ieee80211_debug_level);
> > > > 
> > > > We don't use the _GPL suffix in mac80211.
> > > 
> > > Upon inspection, neither does most of ieee80211. It is now changed.
> > 
> > You are strongly encouraged to use the _GPL version for new symbol
> > exports, especially those which are fundamentally internal to
> > in-kernel subsystems and/or have no reasonable usage by drivers.
> > FWIW, this symbol would seem to fulfill both of those criteria.
> > 
> > If you do not object, I would prefer the _GPL version of the patch.
> 
> What's the rationale for mac80211 _not_ using _GPL exports? I thought
> most new exports were pretty much required to be _GPL (otherwise
> somebody would NAK it) unless it was really, really necessary that they
> weren't.

An argument against _GPL exports for mac80211 might be leaving the
exports alone as a token of gratitude or respect towards Devicescape
for having seeded the development of mac80211 with a big chunk of code.
While I do thank Devicescape for their support, I'm not sure that
this argument would be truly compelling.

A more presuasive argument in favor of this pragmatism is that
it would be counter-productive to discourage driver availability.
At this point regulatory issues are still enough of a spectre that
some vendors will want the option of offering non-GPL drivers.
Such drivers would clearly not be redistributable, but there are
arguments that allow for such drivers (i.e. "the user installed
the driver -- not us", etc like Nvidia video drivers).  Of course,
no one likes enabling this kind of "bad behaviour".

Probably the best reason in favor of leaving them as-is is that they
were written that way by their original author(s).

Should I ask for opinionated discussion on the matter? :-)

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Tue Apr 17 17:51:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 10:51:33 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4624E77A.5060308@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>
	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>
	<4624E77A.5060308@ehnberg.net>
Message-ID: <4624ED05.8020805@lwfinger.net>

Johan Ehnberg wrote:
> 
> And the module still fails to load as above. Want me to test more?

I just loaded a new version of the standalone system. Please get it and retry your build. I think I 
fixed the problem.

Larry



From andrew.james.barr at gmail.com  Tue Apr 17 18:04:54 2007
From: andrew.james.barr at gmail.com (Andrew J. Barr)
Date: Tue, 17 Apr 2007 12:04:54 -0400
Subject: Addition to list of chipsets
In-Reply-To: <4624ED05.8020805@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net>
Message-ID: <4624F026.1040803@gmail.com>

Larry Finger wrote:
> I just loaded a new version of the standalone system. Please get it and retry your build. I think I 
> fixed the problem.

It works as long as you uncomment _both_ DEBUG and PIO_MODE in 
bcm43xx-softmac-sa/bcm43xx/Makefile.

Thanks!

Andrew


From larry.finger at lwfinger.net  Tue Apr 17 18:50:38 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 11:50:38 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4624F026.1040803@gmail.com>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
Message-ID: <4624FADE.6010902@lwfinger.net>

Andrew J. Barr wrote:
> Larry Finger wrote:
>> I just loaded a new version of the standalone system. Please get it 
>> and retry your build. I think I fixed the problem.
> 
> It works as long as you uncomment _both_ DEBUG and PIO_MODE in 
> bcm43xx-softmac-sa/bcm43xx/Makefile.

Thanks for the feedback. Back to the drawing board!!

Larry


From johan at ehnberg.net  Tue Apr 17 19:29:03 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Tue, 17 Apr 2007 19:29:03 +0200
Subject: Addition to list of chipsets
In-Reply-To: <4624FADE.6010902@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net>
Message-ID: <462503DF.8090509@ehnberg.net>

Larry Finger wrote:
> Andrew J. Barr wrote:
>> Larry Finger wrote:
>>> I just loaded a new version of the standalone system. Please get it 
>>> and retry your build. I think I fixed the problem.
>>
>> It works as long as you uncomment _both_ DEBUG and PIO_MODE in 
>> bcm43xx-softmac-sa/bcm43xx/Makefile.
> 
> Thanks for the feedback. Back to the drawing board!!
>

It compiled and loaded nicely with your new version. And I only 
uncommented PIO_MODE. I still couldn't connect, but I ran out of time so 
I have to test and report more tomorrow to say if it's working.

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From larry.finger at lwfinger.net  Tue Apr 17 20:47:06 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 17 Apr 2007 13:47:06 -0500
Subject: Addition to list of chipsets
In-Reply-To: <462503DF.8090509@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
Message-ID: <4625162A.3060407@lwfinger.net>

Johan Ehnberg wrote:
> Larry Finger wrote:
>> Andrew J. Barr wrote:
>>> Larry Finger wrote:
>>>> I just loaded a new version of the standalone system. Please get it 
>>>> and retry your build. I think I fixed the problem.
>>>
>>> It works as long as you uncomment _both_ DEBUG and PIO_MODE in 
>>> bcm43xx-softmac-sa/bcm43xx/Makefile.
>>
>> Thanks for the feedback. Back to the drawing board!!
>>
> 
> It compiled and loaded nicely with your new version. And I only 
> uncommented PIO_MODE. I still couldn't connect, but I ran out of time so 
> I have to test and report more tomorrow to say if it's working.
> 

There was an interaction between the stand-alone system and the configuration parameters in the 
kernel's .config. I think I got all the cases this time.

Thanks,

Larry



From mb at bu3sch.de  Tue Apr 17 22:40:43 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 17 Apr 2007 22:40:43 +0200
Subject: [PATCH] ieee80211-crypt: Make some TKIP and CCMP error
	loggingconditional on IEEE80211_DEBUG_DROP
In-Reply-To: <20070417154146.GA22909@devicescape.com>
References: <461a68c9.Nx0/XQSxDR1PJhM4%Larry.Finger@lwfinger.net>
	<1176819909.26202.33.camel@localhost.localdomain>
	<20070417154146.GA22909@devicescape.com>
Message-ID: <200704172240.43792.mb@bu3sch.de>

On Tuesday 17 April 2007 17:41, Jouni Malinen wrote:
> My personal view on this _GPL in exports is that it is just unnecessary
> extra complexity in the implementation and there should not be any place
> for license enforcement in the kernel implementation; this is better
> left for the license text and things completely outside the source code.
> As such, I have a preference of not seeing _GPL added to code that is
> derived from anything I've written.

I clearly second that opinion and I thought we (the main people working
on wireless) had decided to _not_ use GPL syms in mac80211 (was d80211).
In my opinion license policy should not be represented in sourcecode.
Source is source, license is license. That are two absolutely seperate
things to me. For example, if I want to relicense some code (as
a copyright holder), I clearly don't want to change sourcecode for this.
In fact, I think the GPL suffix is pretty much useless, legal wise.
And everybody knows that the kernel is GPLed. So _every_ single symbol
is actually a _GPL() symbol. the _GPL() annotation is just redundant
and bloats code.

Using kernel syms from a non-GPL compatible module is always walking
a borderline. Be it for _GPL() or normal syms; Exactly the same issue
for both.

All IMO, of course. I'm perfectly aware of different people having
different opinions on this. ;)

-- 
Greetings Michael.


From johan at ehnberg.net  Wed Apr 18 13:04:30 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Wed, 18 Apr 2007 13:04:30 +0200
Subject: Addition to list of chipsets
In-Reply-To: <4625162A.3060407@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
	<4625162A.3060407@lwfinger.net>
Message-ID: <4625FB3E.2090101@ehnberg.net>

Larry Finger wrote:
> Johan Ehnberg wrote:
>> Larry Finger wrote:
>>> Andrew J. Barr wrote:
>>>> Larry Finger wrote:
>>>>> I just loaded a new version of the standalone system. Please get it 
>>>>> and retry your build. I think I fixed the problem.
>>>>
>>>> It works as long as you uncomment _both_ DEBUG and PIO_MODE in 
>>>> bcm43xx-softmac-sa/bcm43xx/Makefile.
>>>
>>> Thanks for the feedback. Back to the drawing board!!
>>>
>>
>> It compiled and loaded nicely with your new version. And I only 
>> uncommented PIO_MODE. I still couldn't connect, but I ran out of time 
>> so I have to test and report more tomorrow to say if it's working.
>>
> 
> There was an interaction between the stand-alone system and the 
> configuration parameters in the kernel's .config. I think I got all the 
> cases this time.
> 
> Thanks,
> 
> Larry

Hi,

I have more to report today. I was able to connect to the network now, 
but the connection is sluggish at least with WPA, and eventually 
disconnects. I am getting a lot of the following messages:

[  477.704000] printk: 2 messages suppressed.
[  484.516000] printk: 1 messages suppressed.

But I didn't find out which messages are being suppressed. I also 
couldn't reconnect, so I switched to ndiswrapper to send you this.

Johan

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From larry.finger at lwfinger.net  Wed Apr 18 14:00:21 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Apr 2007 07:00:21 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4625FB3E.2090101@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
	<4625162A.3060407@lwfinger.net> <4625FB3E.2090101@ehnberg.net>
Message-ID: <46260855.4050709@lwfinger.net>

Johan Ehnberg wrote:
> Hi,
> 
> I have more to report today. I was able to connect to the network now, 
> but the connection is sluggish at least with WPA, and eventually 
> disconnects. I am getting a lot of the following messages:
> 
> [  477.704000] printk: 2 messages suppressed.
> [  484.516000] printk: 1 messages suppressed.
> 
> But I didn't find out which messages are being suppressed. I also 
> couldn't reconnect, so I switched to ndiswrapper to send you this.

I also get the unexplained printk suppressed messages that I don't understand.

I also do not understand the sluggish performance from your BCM4312. I though it had the same radio 
and PHY as the 4311. If you have seen my previous reports of performance on the 4306, 4318 and 4311 
chips, all of them were run with WPA enabled. I don't run any other way.

Please use iwconfig to check the rate that is set. It should be 24M. If not, try setting that rate. 
If it is 24M, try 11M, which usually helps an interface that is having trouble at 24M. Your peak 
rate is diminished but the throughput is much better because of fewer retransmits.

Larry



From johan at ehnberg.net  Wed Apr 18 17:15:26 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Wed, 18 Apr 2007 17:15:26 +0200
Subject: Addition to list of chipsets
In-Reply-To: <46260855.4050709@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
	<4625162A.3060407@lwfinger.net> <4625FB3E.2090101@ehnberg.net>
	<46260855.4050709@lwfinger.net>
Message-ID: <4626360E.5000801@ehnberg.net>

> I also get the unexplained printk suppressed messages that I don't 
> understand.

They may be this (debugging enabled):
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0


> I also do not understand the sluggish performance from your BCM4312. I 
> though it had the same radio and PHY as the 4311. If you have seen my 
> previous reports of performance on the 4306, 4318 and 4311 chips, all of 
> them were run with WPA enabled. I don't run any other way.

> Please use iwconfig to check the rate that is set. It should be 24M. If 
> not, try setting that rate. If it is 24M, try 11M, which usually helps 
> an interface that is having trouble at 24M. Your peak rate is diminished 
> but the throughput is much better because of fewer retransmits.

The sluggishness disappeared with rate 11M. It was at 24M like you 
assumed. But the connection is still lost after a few minutes. It then 
takes a minute before it automatically (most of the time) reconnects.

As I see it, there are two shortcomings of the driver at this point:
- Unability to work reliably at other than 11M
- Unability to keep a stable connection

The signal is obviously good enough to support rates up to 54M. I have 
been able to download at speeds around 1,4 Mb/s which is over 11Mbit/s 
with control traffic - when connected at 24M or 54M with ndiswrapper, 
that is.

I'll be happy to do more testing if anyone needs it.

/johan

-- 
Johan Ehnberg

Email: johan at ehnberg.net
GSM:   +358503209688
WWW:   http://www.ehnberg.net/johan/


From larry.finger at lwfinger.net  Wed Apr 18 17:52:29 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Apr 2007 10:52:29 -0500
Subject: Addition to list of chipsets
In-Reply-To: <4626360E.5000801@ehnberg.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
	<4625162A.3060407@lwfinger.net> <4625FB3E.2090101@ehnberg.net>
	<46260855.4050709@lwfinger.net> <4626360E.5000801@ehnberg.net>
Message-ID: <46263EBD.8090005@lwfinger.net>

Johan Ehnberg wrote:
> 
> The sluggishness disappeared with rate 11M. It was at 24M like you 
> assumed. But the connection is still lost after a few minutes. It then 
> takes a minute before it automatically (most of the time) reconnects.
> 
> As I see it, there are two shortcomings of the driver at this point:
> - Unability to work reliably at other than 11M
> - Unability to keep a stable connection

The loss of connection and the low data rate may both be due to interference. The bcm43xx driver 
would be more susceptible than would ndiswrapper (see below). Have you tried changing channels? The 
obvious choices would be 1, 6, or 11 depending on other AP's in your vicinity. In my case, no other 
user was on channel 1, but I couldn't make a connection. Channel 2 was better, 3 even better and I 
now use 4. My fastest transfer speeds are at 36M.

> The signal is obviously good enough to support rates up to 54M. I have 
> been able to download at speeds around 1,4 Mb/s which is over 11Mbit/s 
> with control traffic - when connected at 24M or 54M with ndiswrapper, 
> that is.

You are seeing the received signal. It is the transmitted signal that is a problem with all cards, 
but we are working on it.

Larry


From johan at ehnberg.net  Wed Apr 18 20:06:44 2007
From: johan at ehnberg.net (Johan Ehnberg)
Date: Wed, 18 Apr 2007 20:06:44 +0200
Subject: Addition to list of chipsets
In-Reply-To: <46263EBD.8090005@lwfinger.net>
References: <462370D7.8050608@ehnberg.net>	<1176730965.5163.22.camel@dv>		<46238CAC.8050502@ehnberg.net>	<46239CC1.6010908@lwfinger.net>		<4623C710.5060408@ehnberg.net>	<1176750235.955.22.camel@dv>	<4624DA3A.4020502@ehnberg.net>	<4624DD34.5080006@lwfinger.net>	<4624E77A.5060308@ehnberg.net>
	<4624ED05.8020805@lwfinger.net> <4624F026.1040803@gmail.com>
	<4624FADE.6010902@lwfinger.net> <462503DF.8090509@ehnberg.net>
	<4625162A.3060407@lwfinger.net> <4625FB3E.2090101@ehnberg.net>
	<46260855.4050709@lwfinger.net> <4626360E.5000801@ehnberg.net>
	<46263EBD.8090005@lwfinger.net>
Message-ID: <46265E34.7060100@ehnberg.net>

> The loss of connection and the low data rate may both be due to 
> interference. The bcm43xx driver would be more susceptible than would 
> ndiswrapper (see below). Have you tried changing channels? The obvious 
> choices would be 1, 6, or 11 depending on other AP's in your vicinity. 
> In my case, no other user was on channel 1, but I couldn't make a 
> connection. Channel 2 was better, 3 even better and I now use 4. My 
> fastest transfer speeds are at 36M.

The network I use (I'm abroad for a few months) is out of my hands, and 
they use 6 and 11. One is WPA secured, the other is open, both are large 
infrastructures. There are mostly no other networks around. Testing 
other channels would have to wait until July on my part, though. Unless 
maybe ad-hoc networking with a peer at 1 meters distance is of any use.


> You are seeing the received signal. It is the transmitted signal that is 
> a problem with all cards, but we are working on it.

OK. Tell me if there's anything I can do to help out. I definitely 
prefer a semi-open solution to the wrapper one.

/johan


From troops.of.doom at gmail.com  Thu Apr 19 01:56:56 2007
From: troops.of.doom at gmail.com (Rodrigo Luiz)
Date: Wed, 18 Apr 2007 20:56:56 -0300
Subject: Status of WPA support
Message-ID: <2aea82040704181656s10fb65dbs46690a9c569efc65@mail.gmail.com>

Hi.

Which the status of the support to the WPA in wireless-dev tree using bcm43xx?
Which the known issues?

Thanks,
Rodrigo.


From larry.finger at lwfinger.net  Thu Apr 19 03:08:22 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Apr 2007 20:08:22 -0500
Subject: Status of WPA support
In-Reply-To: <2aea82040704181656s10fb65dbs46690a9c569efc65@mail.gmail.com>
References: <2aea82040704181656s10fb65dbs46690a9c569efc65@mail.gmail.com>
Message-ID: <4626C106.7020009@lwfinger.net>

Rodrigo Luiz wrote:
> Hi.
> 
> Which the status of the support to the WPA in wireless-dev tree using bcm43xx?
> Which the known issues?

Only signal strength. If you have enough signal, bcm43xx-mac80211 authenticates with WPA-PSK TKIP. 
Although I haven't test it, WPA2 should also work.

Larry


From linolusu at tin.it  Thu Apr 19 11:39:14 2007
From: linolusu at tin.it (Andrea Lusuardi - UoVoBW)
Date: Thu, 19 Apr 2007 11:39:14 +0200
Subject: Status of WPA support
In-Reply-To: <4626C106.7020009@lwfinger.net>
References: <2aea82040704181656s10fb65dbs46690a9c569efc65@mail.gmail.com>
	<4626C106.7020009@lwfinger.net>
Message-ID: <20070419113914.3d14202f@electricsheep>

On Wed, 18 Apr 2007 20:08:22 -0500
Larry Finger <larry.finger at lwfinger.net> wrote:

> Rodrigo Luiz wrote:
> > Hi.
> > 
> > Which the status of the support to the WPA in wireless-dev tree
> > using bcm43xx? Which the known issues?
> 
> Only signal strength. If you have enough signal, bcm43xx-mac80211
> authenticates with WPA-PSK TKIP. Although I haven't test it, WPA2
> should also work.

with the wireless-dev tree of 2.6.20->2.6.21-rc6 wpa2 on softmac
stack works - not great rates but works - with a WPA2 connection (ccmp)
on  a fonera.
just to confirm
bte


-- 
           Andrea Lusuardi  -  UoVoBW 
          Registered Linux User #364578
    http://uovobw.homelinux.org/ - GPG: 313C1073
Bedo: voglio una testata nucleare del raggio di mezzo metro!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070419/7084ae05/attachment.pgp>

From Larry.Finger at lwfinger.net  Thu Apr 19 15:46:35 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 08:46:35 -0500
Subject: [PATCH 0/3] bcm43xx-mac80211: Fix machine check on PPC for phy->rev
	== 1
Message-ID: <462772BB.1010900@lwfinger.net>

For BCM4306 chips with phy->rev == 1, several factors in the code lead to machine checks. These are 
fixed by several kinds of changes. The remaining patches in this series will separate these into 
correcting typos and problems with the program logic, updates to the specs, and some necessary 
modifications that are not found in the specs. The latter fixes have previously been required for 
bcm43xx-softmac, and are clearly noted by comments.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>



From Larry.Finger at lwfinger.net  Thu Apr 19 15:46:44 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 08:46:44 -0500
Subject: [PATCH 1/3] bcm43xx-mac80211: Fix machine check on PPC for
	phy->rev == 1
Message-ID: <462772c4.i/6WywXw5chGDs/l%Larry.Finger@lwfinger.net>

Patch 1/3: Fix some typos and a logic error involving phy->gmode that caused
machine checks on PPC architecture with phy->rev == 1 chips.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This patch is for the wireless-dev tree. A separate one will be prepared
for the mb tree.

Larry


Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -655,7 +660,7 @@ static void bcm43xx_phy_agcsetup(struct 
 				   & 0xFFF0) | 0x0004);
 	}
 
-	if (phy->rev < 6) {
+	if (phy->rev >= 6) {
 		bcm43xx_phy_write(dev, 0x0422, 0x287A);
 		bcm43xx_phy_write(dev, 0x0420,
 				  (bcm43xx_phy_read(dev, 0x0420)
@@ -3239,7 +3265,7 @@ bcm43xx_radio_interference_mitigation_di
 			                  bcm43xx_phy_read(dev, BCM43xx_PHY_G_CRS) | 0x4000);
 			break;
 		}
-		phy_stackrestore(0x0078);
+		radio_stackrestore(0x0078);
 		bcm43xx_calc_nrssi_threshold(dev);
 		phy_stackrestore(0x0406);
 		bcm43xx_phy_write(dev, 0x042B,

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -830,6 +830,7 @@ static void bcm43xx_switch_analog(struct
 
 void bcm43xx_wireless_core_reset(struct bcm43xx_wldev *dev, u32 flags)
 {
+	struct bcm43xx_phy *phy = &dev->phy;
 	u32 tmslow;
 	u32 macctl;
 
@@ -853,10 +854,13 @@ void bcm43xx_wireless_core_reset(struct 
 	/* Turn Analog ON */
 	bcm43xx_switch_analog(dev, 1);
 
-	macctl = bcm43xx_read32(dev, BCM43xx_MMIO_MACCTL);
+	macctl = bcm43xx_read32(dev, BCM43xx_MMIO_MACCTL) & ~BCM43xx_MACCTL_GMODE;
 	macctl |= BCM43xx_MACCTL_IHR_ENABLED;
-	if (flags & BCM43xx_TMSLOW_GMODE)
+	if (flags & BCM43xx_TMSLOW_GMODE) {
 		macctl |= BCM43xx_MACCTL_GMODE;
+		phy->gmode = 1;
+	} else
+		phy->gmode = 0;
 	bcm43xx_write32(dev, BCM43xx_MMIO_MACCTL, macctl);
 }
 


From Larry.Finger at lwfinger.net  Thu Apr 19 15:47:06 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 08:47:06 -0500
Subject: [PATCH 2/3] bcm43xx-mac80211: Fix machine check on PPC for
	phy->rev == 1
Message-ID: <462772da.WTFJ4M8EynD9kYbu%Larry.Finger@lwfinger.net>

Patch 2/3: There are recent changes to the specs that eliminate a
number of machine check errors on PPC architecture when used with
phy->rev == 1 chips.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This patch is for the wireless-dev tree. A separate one will be prepared
for the mb tree.

Larry


Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -599,16 +599,16 @@ static void bcm43xx_phy_agcsetup(struct 
 	bcm43xx_phy_write(dev, 0x04A1,
 			  (bcm43xx_phy_read(dev, 0x04A1)
 			   & 0xF0FF) | 0x0600);
-	bcm43xx_phy_write(dev, 0x04A2,
-			  (bcm43xx_phy_read(dev, 0x04A2)
+	bcm43xx_phy_write(dev, 0x0412,
+			  (bcm43xx_phy_read(dev, 0x0412)
 			   & 0xF0FF) | 0x0700);
-	bcm43xx_phy_write(dev, 0x04A0,
-			  (bcm43xx_phy_read(dev, 0x04A0)
+	bcm43xx_phy_write(dev, 0x0410,
+			  (bcm43xx_phy_read(dev, 0x0410)
 			   & 0xF0FF) | 0x0100);
 
 	if (phy->rev == 1) {
-		bcm43xx_phy_write(dev, 0x04A2,
-				  (bcm43xx_phy_read(dev, 0x04A2)
+		bcm43xx_phy_write(dev, 0x0412,
+				  (bcm43xx_phy_read(dev, 0x0412)
 				   & 0xFFF0) | 0x0007);
 	}
 
@@ -955,7 +955,7 @@ static void bcm43xx_phy_inita(struct bcm
 		bcm43xx_phy_setupa(dev);
 	} else {
 		bcm43xx_phy_setupg(dev);
-		if (dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL)
+		if (phy->gmode && dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL)
 			bcm43xx_phy_write(dev, 0x046E, 0x03CF);
 		return;
 	}
@@ -1139,7 +1139,7 @@ static void bcm43xx_phy_initb5(struct bc
 	if (phy->radio_ver == 0x2050)
 		bcm43xx_phy_write(dev, 0x0038, 0x0667);
 
-	if (phy->type == BCM43xx_PHYTYPE_G) {
+	if (phy->gmode || phy->rev >= 2) {
 		if (phy->radio_ver == 0x2050) {
 			bcm43xx_radio_write16(dev, 0x007A,
 					      bcm43xx_radio_read16(dev, 0x007A)
@@ -1560,7 +1560,7 @@ static void bcm43xx_phy_initg(struct bcm
 	else
 		bcm43xx_phy_initb6(dev);
 
-	if (has_loopback_gain(phy))
+	if (phy->rev >= 2 || phy->gmode)
 		bcm43xx_phy_inita(dev);
 
 	if (phy->rev >= 2) {
@@ -1575,7 +1575,7 @@ static void bcm43xx_phy_initg(struct bcm
 		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER, 0x400);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xC0);
 	}
-	if (phy->gmode) {
+	if (phy->gmode || phy->rev >= 2) {
 		tmp = bcm43xx_phy_read(dev, BCM43xx_PHY_VERSION_OFDM);
 		tmp &= BCM43xx_PHYVER_VERSION;
 		if (tmp == 3 || tmp == 5) {
@@ -1588,7 +1588,7 @@ static void bcm43xx_phy_initg(struct bcm
 					   & 0x00FF) | 0x1F00);
 		}
 	}
-	if (phy->rev <= 2 && phy->gmode)
+	if ((phy->rev <= 2 && phy->gmode) || phy->rev >= 2)
 		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x7E), 0x78);
 	if (phy->radio_rev == 8) {
 		bcm43xx_phy_write(dev, BCM43xx_PHY_EXTG(0x01),
@@ -1634,7 +1634,7 @@ static void bcm43xx_phy_initg(struct bcm
 		else
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2F), 0x202);
 	}
-	if (phy->gmode) {
+	if (phy->gmode || phy->rev >= 2) {
 		bcm43xx_lo_adjust(dev);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_LO_MASK, 0x8078);
 	}
@@ -1648,8 +1648,8 @@ static void bcm43xx_phy_initg(struct bcm
 		 */
 		bcm43xx_nrssi_hw_update(dev, 0xFFFF);//FIXME?
 		bcm43xx_calc_nrssi_threshold(dev);
-	} else {
-		if (phy->gmode && phy->nrssi[0] == -1000) {
+	} else if (phy->gmode || phy->rev >= 2) {
+		if (phy->nrssi[0] == -1000) {
 			assert(phy->nrssi[1] == -1000);
 			bcm43xx_calc_nrssi_slope(dev);
 		} else
@@ -1658,7 +1658,10 @@ static void bcm43xx_phy_initg(struct bcm
 	if (phy->radio_rev == 8)
 		bcm43xx_phy_write(dev, BCM43xx_PHY_EXTG(0x05), 0x3230);
 	bcm43xx_phy_init_pctl(dev);
-	if (0 /*FIXME: OFDM may not be used in the current locale*/) {
+	/* FIXME: The spec says in the following if, the 0 should be replaced
+                  'if OFDM may not be used in the current locale'
+		  but OFDM is legal everywhere */
+	if ((dev->dev->bus->chip_id == 0x4306 && dev->dev->bus->chip_package == 2) || 0) {
 		bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
 				  bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0)
 				  & 0xBFFF);
@@ -3299,7 +3302,7 @@ bcm43xx_radio_interference_mitigation_di
 			ofdmtab_stackrestore(0x1A00, 0x3);
 		}
 		phy_stackrestore(0x04A2);
-		phy_stackrestore(0x04A8);
+		phy_stackrestore(0x048A);
 		phy_stackrestore(0x042B);
 		phy_stackrestore(0x048C);
 		bcm43xx_hf_write(dev, bcm43xx_hf_read(dev) & ~BCM43xx_HF_ACIW);
@@ -3553,7 +3556,7 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 
 		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x30), 0xFF);
 		bcm43xx_write16(dev, 0x3EC, 0x3F3F);
-	} else if (phy->gmode) {
+	} else if (phy->gmode || phy->rev >= 2) {
 		sav.phy_rfover = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
 		sav.phy_rfoverval = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
 		sav.phy_analogover = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
@@ -3615,14 +3618,14 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 
 	if (phy->type == BCM43xx_PHYTYPE_B)
 		bcm43xx_radio_write16(dev, 0x78, 0x26);
-	if (phy->gmode) {
+	if (phy->gmode || phy->rev >= 2) {
 		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 				  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 						       LPD(0, 1, 1)));
 	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xBFAF);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2B), 0x1403);
-	if (phy->gmode) {
+	if (phy->gmode || phy->rev >= 2) {
 		bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 				  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 						       LPD(0, 0, 1)));
@@ -3645,21 +3648,21 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), 0x0480);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), 0xC810);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), 0x000D);
-		if (phy->gmode) {
+		if (phy->gmode || phy->rev >= 2) {
 			bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 					  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 							       LPD(1, 0, 1)));
 		}
 		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xAFB0);
 		udelay(10);
-		if (phy->gmode) {
+		if (phy->gmode || phy->rev >= 2) {
 			bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 					  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 							       LPD(1, 0, 1)));
 		}
 		bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xEFB0);
 		udelay(10);
-		if (phy->gmode) {
+		if (phy->gmode || phy->rev >= 2) {
 			bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 					  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 							       LPD(1, 0, 0)));
@@ -3668,7 +3671,7 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		udelay(20);
 		tmp1 += bcm43xx_phy_read(dev, BCM43xx_PHY_LO_LEAKAGE);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), 0);
-		if (phy->gmode) {
+		if (phy->gmode || phy->rev >= 2) {
 			bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 					  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 							       LPD(1, 0, 1)));
@@ -3689,21 +3692,21 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), 0x0D80);
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), 0xC810);
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), 0x000D);
-			if (phy->gmode) {
+			if (phy->gmode || phy->rev >= 2) {
 				bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 						  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 								       LPD(1, 0, 1)));
 			}
 			bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xAFB0);
 			udelay(10);
-			if (phy->gmode) {
+			if (phy->gmode || phy->rev >= 2) {
 				bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 						  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 								       LPD(1, 0, 1)));
 			}
 			bcm43xx_phy_write(dev, BCM43xx_PHY_PGACTL, 0xEFB0);
 			udelay(10);
-			if (phy->gmode) {
+			if (phy->gmode || phy->rev >= 2) {
 				bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 						  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 								       LPD(1, 0, 0)));
@@ -3712,7 +3715,7 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 			udelay(10);
 			tmp2 += bcm43xx_phy_read(dev, BCM43xx_PHY_LO_LEAKAGE);
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), 0);
-			if (phy->gmode) {
+			if (phy->gmode || phy->rev >= 2) {
 				bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 						  radio2050_rfover_val(dev, BCM43xx_PHY_RFOVERVAL,
 								       LPD(1, 0, 1)));


From Larry.Finger at lwfinger.net  Thu Apr 19 15:47:09 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 08:47:09 -0500
Subject: [PATCH 2/3] bcm43xx-mac80211: Fix machine check on PPC for
	phy->rev == 1
Message-ID: <462772dd.XXaOmceDEQQJ3+9R%Larry.Finger@lwfinger.net>

Patch 3/3: References to the Analog Override and Analog Override Value
Registers in the Extended G PHY Registers cause a machine check on
PPC architecture and a phy->rev == 1 chip. These patches skip over the
troublesome accesses. These changes do not conform with the specs,
but were found necessary for bcm43xx-softmac as well.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This patch is for the wireless-dev tree. A separate one will be prepared
for the mb tree.

Larry

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -1361,7 +1361,7 @@ static void bcm43xx_phy_initb6(struct bc
 static void bcm43xx_calc_loopback_gain(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 backup_phy[16];
+	u16 backup_phy[16] = {0};
 	u16 backup_radio[3];
 	u16 backup_bband;
 	u16 i, j, loop_i_max;
@@ -1372,8 +1372,10 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[1] = bcm43xx_phy_read(dev, BCM43xx_PHY_CCKBBANDCFG);
 	backup_phy[2] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
 	backup_phy[3] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
-	backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
-	backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
+		backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	}
 	backup_phy[6] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x5A));
 	backup_phy[7] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x59));
 	backup_phy[8] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x58));
@@ -1401,14 +1403,16 @@ static void bcm43xx_calc_loopback_gain(s
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0001);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
@@ -1425,10 +1429,12 @@ static void bcm43xx_calc_loopback_gain(s
 
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x0A),
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x0A)) | 0x2000);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x03),
 			  (bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x03))
 			   & 0xFF9F) | 0x40);
@@ -1521,8 +1527,10 @@ exit_loop1:
 		trsw_rx = 0x18;
 exit_loop2:
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), backup_phy[6]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), backup_phy[7]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), backup_phy[8]);
@@ -2431,8 +2439,10 @@ static void bcm43xx_calc_nrssi_offset(st
 	backup[0] = bcm43xx_phy_read(dev, 0x0001);
 	backup[1] = bcm43xx_phy_read(dev, 0x0811);
 	backup[2] = bcm43xx_phy_read(dev, 0x0812);
-	backup[3] = bcm43xx_phy_read(dev, 0x0814);
-	backup[4] = bcm43xx_phy_read(dev, 0x0815);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		backup[3] = bcm43xx_phy_read(dev, 0x0814);
+		backup[4] = bcm43xx_phy_read(dev, 0x0815);
+	}
 	backup[5] = bcm43xx_phy_read(dev, 0x005A);
 	backup[6] = bcm43xx_phy_read(dev, 0x0059);
 	backup[7] = bcm43xx_phy_read(dev, 0x0058);
@@ -2498,10 +2508,12 @@ static void bcm43xx_calc_nrssi_offset(st
 	} else {
 		bcm43xx_radio_write16(dev, 0x007A,
 				      bcm43xx_radio_read16(dev, 0x007A) & 0x007F);
-		bcm43xx_phy_write(dev, 0x0814,
-				  bcm43xx_phy_read(dev, 0x0814) | 0x0001);
-		bcm43xx_phy_write(dev, 0x0815,
-				  bcm43xx_phy_read(dev, 0x0815) & 0xFFFE);
+		if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+			bcm43xx_phy_write(dev, 0x0814,
+					  bcm43xx_phy_read(dev, 0x0814) | 0x0001);
+			bcm43xx_phy_write(dev, 0x0815,
+					  bcm43xx_phy_read(dev, 0x0815) & 0xFFFE);
+		}
 		bcm43xx_phy_write(dev, 0x0811,
 				  bcm43xx_phy_read(dev, 0x0811) | 0x000C);
 		bcm43xx_phy_write(dev, 0x0812,
@@ -2520,10 +2532,12 @@ static void bcm43xx_calc_nrssi_offset(st
 					  bcm43xx_phy_read(dev, 0x000A)
 					  | 0x2000);
 		}
-		bcm43xx_phy_write(dev, 0x0814,
-				  bcm43xx_phy_read(dev, 0x0814) | 0x0004);
-		bcm43xx_phy_write(dev, 0x0815,
-				  bcm43xx_phy_read(dev, 0x0815) & 0xFFFB);
+		if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+			bcm43xx_phy_write(dev, 0x0814,
+					  bcm43xx_phy_read(dev, 0x0814) | 0x0004);
+			bcm43xx_phy_write(dev, 0x0815,
+					  bcm43xx_phy_read(dev, 0x0815) & 0xFFFB);
+		}
 		bcm43xx_phy_write(dev, 0x0003,
 				  (bcm43xx_phy_read(dev, 0x0003) & 0xFF9F)
 				  | 0x0040);
@@ -2560,8 +2574,10 @@ static void bcm43xx_calc_nrssi_offset(st
 		bcm43xx_phy_write(dev, 0x080F, backup[14]);
 		bcm43xx_phy_write(dev, 0x0810, backup[15]);
 	}
-	bcm43xx_phy_write(dev, 0x0814, backup[3]);
-	bcm43xx_phy_write(dev, 0x0815, backup[4]);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, 0x0814, backup[3]);
+		bcm43xx_phy_write(dev, 0x0815, backup[4]);
+	}
 	bcm43xx_phy_write(dev, 0x005A, backup[5]);
 	bcm43xx_phy_write(dev, 0x0059, backup[6]);
 	bcm43xx_phy_write(dev, 0x0058, backup[7]);


From Larry.Finger at lwfinger.net  Thu Apr 19 15:47:21 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 08:47:21 -0500
Subject: [PATCH 3/3] bcm43xx-mac80211: Fix machine check on PPC for
	phy->rev == 1
Message-ID: <462772e9.7mQ4T0Rjdn3S4poj%Larry.Finger@lwfinger.net>

Patch 3/3: References to the Analog Override and Analog Override Value
Registers in the Extended G PHY Registers cause a machine check on
PPC architecture and a phy->rev == 1 chip. These patches skip over the
troublesome accesses. These changes do not conform with the specs,
but were found necessary for bcm43xx-softmac as well.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This patch is for the wireless-dev tree. A separate one will be prepared
for the mb tree.

Larry

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -1361,7 +1361,7 @@ static void bcm43xx_phy_initb6(struct bc
 static void bcm43xx_calc_loopback_gain(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 backup_phy[16];
+	u16 backup_phy[16] = {0};
 	u16 backup_radio[3];
 	u16 backup_bband;
 	u16 i, j, loop_i_max;
@@ -1372,8 +1372,10 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[1] = bcm43xx_phy_read(dev, BCM43xx_PHY_CCKBBANDCFG);
 	backup_phy[2] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER);
 	backup_phy[3] = bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL);
-	backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
-	backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		backup_phy[4] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER);
+		backup_phy[5] = bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL);
+	}
 	backup_phy[6] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x5A));
 	backup_phy[7] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x59));
 	backup_phy[8] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x58));
@@ -1401,14 +1403,16 @@ static void bcm43xx_calc_loopback_gain(s
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0001);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0001);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFE);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0002);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFD);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
@@ -1425,10 +1429,12 @@ static void bcm43xx_calc_loopback_gain(s
 
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x0A),
 			  bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x0A)) | 0x2000);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
-			  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVER) | 0x0004);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL,
+				  bcm43xx_phy_read(dev, BCM43xx_PHY_ANALOGOVERVAL) & 0xFFFB);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x03),
 			  (bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x03))
 			   & 0xFF9F) | 0x40);
@@ -1521,8 +1527,10 @@ exit_loop1:
 		trsw_rx = 0x18;
 exit_loop2:
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVER, backup_phy[4]);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANALOGOVERVAL, backup_phy[5]);
+	}
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x5A), backup_phy[6]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x59), backup_phy[7]);
 	bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x58), backup_phy[8]);
@@ -2431,8 +2439,10 @@ static void bcm43xx_calc_nrssi_offset(st
 	backup[0] = bcm43xx_phy_read(dev, 0x0001);
 	backup[1] = bcm43xx_phy_read(dev, 0x0811);
 	backup[2] = bcm43xx_phy_read(dev, 0x0812);
-	backup[3] = bcm43xx_phy_read(dev, 0x0814);
-	backup[4] = bcm43xx_phy_read(dev, 0x0815);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		backup[3] = bcm43xx_phy_read(dev, 0x0814);
+		backup[4] = bcm43xx_phy_read(dev, 0x0815);
+	}
 	backup[5] = bcm43xx_phy_read(dev, 0x005A);
 	backup[6] = bcm43xx_phy_read(dev, 0x0059);
 	backup[7] = bcm43xx_phy_read(dev, 0x0058);
@@ -2498,10 +2508,12 @@ static void bcm43xx_calc_nrssi_offset(st
 	} else {
 		bcm43xx_radio_write16(dev, 0x007A,
 				      bcm43xx_radio_read16(dev, 0x007A) & 0x007F);
-		bcm43xx_phy_write(dev, 0x0814,
-				  bcm43xx_phy_read(dev, 0x0814) | 0x0001);
-		bcm43xx_phy_write(dev, 0x0815,
-				  bcm43xx_phy_read(dev, 0x0815) & 0xFFFE);
+		if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+			bcm43xx_phy_write(dev, 0x0814,
+					  bcm43xx_phy_read(dev, 0x0814) | 0x0001);
+			bcm43xx_phy_write(dev, 0x0815,
+					  bcm43xx_phy_read(dev, 0x0815) & 0xFFFE);
+		}
 		bcm43xx_phy_write(dev, 0x0811,
 				  bcm43xx_phy_read(dev, 0x0811) | 0x000C);
 		bcm43xx_phy_write(dev, 0x0812,
@@ -2520,10 +2532,12 @@ static void bcm43xx_calc_nrssi_offset(st
 					  bcm43xx_phy_read(dev, 0x000A)
 					  | 0x2000);
 		}
-		bcm43xx_phy_write(dev, 0x0814,
-				  bcm43xx_phy_read(dev, 0x0814) | 0x0004);
-		bcm43xx_phy_write(dev, 0x0815,
-				  bcm43xx_phy_read(dev, 0x0815) & 0xFFFB);
+		if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+			bcm43xx_phy_write(dev, 0x0814,
+					  bcm43xx_phy_read(dev, 0x0814) | 0x0004);
+			bcm43xx_phy_write(dev, 0x0815,
+					  bcm43xx_phy_read(dev, 0x0815) & 0xFFFB);
+		}
 		bcm43xx_phy_write(dev, 0x0003,
 				  (bcm43xx_phy_read(dev, 0x0003) & 0xFF9F)
 				  | 0x0040);
@@ -2560,8 +2574,10 @@ static void bcm43xx_calc_nrssi_offset(st
 		bcm43xx_phy_write(dev, 0x080F, backup[14]);
 		bcm43xx_phy_write(dev, 0x0810, backup[15]);
 	}
-	bcm43xx_phy_write(dev, 0x0814, backup[3]);
-	bcm43xx_phy_write(dev, 0x0815, backup[4]);
+	if (phy->rev != 1) { /* Not in specs, but needed to prevent PPC machine check */
+		bcm43xx_phy_write(dev, 0x0814, backup[3]);
+		bcm43xx_phy_write(dev, 0x0815, backup[4]);
+	}
 	bcm43xx_phy_write(dev, 0x005A, backup[5]);
 	bcm43xx_phy_write(dev, 0x0059, backup[6]);
 	bcm43xx_phy_write(dev, 0x0058, backup[7]);


From stefano.brivio at polimi.it  Thu Apr 19 15:58:05 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Thu, 19 Apr 2007 15:58:05 +0200
Subject: [PATCH 2/3] bcm43xx-mac80211: Fix machine check on PPC for
	phy->rev == 1
In-Reply-To: <462772da.WTFJ4M8EynD9kYbu%Larry.Finger@lwfinger.net>
References: <462772da.WTFJ4M8EynD9kYbu%Larry.Finger@lwfinger.net>
Message-ID: <20070419155805.611244ec@localhost>

On Thu, 19 Apr 2007 08:47:06 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> @@ -599,16 +599,16 @@ static void bcm43xx_phy_agcsetup(struct 

Just FYI, I'm going to whack this whole function soon, when the R.E. team
is done with A PHY LO specifications and I release the patchset I previously
talked about. In the meanwhile, if this really fixes machine checks, I ACK
this.


--
Ciao
Stefano


From larry.finger at lwfinger.net  Thu Apr 19 16:09:12 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 09:09:12 -0500
Subject: [PATCH 2/3] bcm43xx-mac80211: Fix machine check on PPC
	for	phy->rev == 1
In-Reply-To: <20070419155805.611244ec@localhost>
References: <462772da.WTFJ4M8EynD9kYbu%Larry.Finger@lwfinger.net>
	<20070419155805.611244ec@localhost>
Message-ID: <46277808.9000906@lwfinger.net>

Stefano Brivio wrote:
> On Thu, 19 Apr 2007 08:47:06 -0500
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> 
>> @@ -599,16 +599,16 @@ static void bcm43xx_phy_agcsetup(struct 
> 
> Just FYI, I'm going to whack this whole function soon, when the R.E. team
> is done with A PHY LO specifications and I release the patchset I previously
> talked about. In the meanwhile, if this really fixes machine checks, I ACK
> this.

Thanks. It really does fix the machine checks, but what is even better is that I can find them on my 
x86 hardware before the code is sent upstream. If you want, I will test your patchset for this problem.

Larry


From jbenc at suse.cz  Thu Apr 19 16:34:53 2007
From: jbenc at suse.cz (Jiri Benc)
Date: Thu, 19 Apr 2007 16:34:53 +0200
Subject: [PATCH 0/4] mac80211 and drivers: Improve wireless statistics
In-Reply-To: <46211955.4080006@lwfinger.net>
References: <46211955.4080006@lwfinger.net>
Message-ID: <20070419163453.5d792085@griffin.suse.cz>

On Sat, 14 Apr 2007 13:11:33 -0500, Larry Finger wrote:
> In wireless statistics reporting, three quantities related to the
> signal are reported: "qual" (linear with the signal),
> "level" (logarithmic), and "noise". In mac80211 and the drivers that
> use it, the first two have a mixture of internal names for those
> quantities.

The whole signal reporting in WE looks like a mess to me. It seems that
no renaming could help here, I'm afraid - the names you consider better
others consider worse.

Let's leave it as is, and return to it when converting mac80211 to use
cfg80211. With a bit of luck it would be no issue then :-)

Thanks,

 Jiri

-- 
Jiri Benc
SUSE Labs


From larry.finger at lwfinger.net  Thu Apr 19 17:05:47 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Apr 2007 10:05:47 -0500
Subject: [PATCH 0/4] mac80211 and drivers: Improve wireless statistics
In-Reply-To: <20070419163453.5d792085@griffin.suse.cz>
References: <46211955.4080006@lwfinger.net>
	<20070419163453.5d792085@griffin.suse.cz>
Message-ID: <4627854B.7000300@lwfinger.net>

Jiri Benc wrote:
> 
> The whole signal reporting in WE looks like a mess to me. It seems that
> no renaming could help here, I'm afraid - the names you consider better
> others consider worse.
> 
> Let's leave it as is, and return to it when converting mac80211 to use
> cfg80211. With a bit of luck it would be no issue then :-)

I have already decided to leave the whole mess alone. I will patch bcm43xx-mac80211 to conform to 
what is currently in mac80211 so that reasonable values are seen by the users.

Larry


From Larry.Finger at lwfinger.net  Fri Apr 20 07:19:45 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Apr 2007 00:19:45 -0500
Subject: [PATCH] mac80211: Sort supported rates in scan output
Message-ID: <46284d71.8kVOR3LhjxSoo7lb%Larry.Finger@lwfinger.net>

In mac80211, the results of a scan show basic rates followed by extended
rates, thus values are not listed in any particular order. This patch sorts
all rates in increasing value.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-dev/net/mac80211/ieee80211_sta.c
===================================================================
--- wireless-dev.orig/net/mac80211/ieee80211_sta.c
+++ wireless-dev/net/mac80211/ieee80211_sta.c
@@ -3013,7 +3017,8 @@ ieee80211_sta_scan_result(struct net_dev
 	if (bss && bss->supp_rates_len > 0) {
 		/* display all supported rates in readable format */
 		char *p = current_ev + IW_EV_LCP_LEN;
-		int i;
+		int i, j, tmp;
+		int trial_rate, cur_rate = 0;
 
 		memset(&iwe, 0, sizeof(iwe));
 		iwe.cmd = SIOCGIWRATE;
@@ -3021,8 +3026,14 @@ ieee80211_sta_scan_result(struct net_dev
 		iwe.u.bitrate.fixed = iwe.u.bitrate.disabled = 0;
 
 		for (i = 0; i < bss->supp_rates_len; i++) {
-			iwe.u.bitrate.value = ((bss->supp_rates[i] &
-							0x7f) * 500000);
+			trial_rate = 99999999;
+			for (j = 0; j < bss->supp_rates_len; j++) {
+				tmp = bss->supp_rates[j] & 0x7f;
+				if (tmp > cur_rate && tmp < trial_rate)
+					trial_rate = tmp;
+			}
+			cur_rate = trial_rate;
+			iwe.u.bitrate.value = cur_rate * 500000;
 			p = iwe_stream_add_value(current_ev, p,
 					end_buf, &iwe, IW_EV_PARAM_LEN);
 		}


From Larry.Finger at lwfinger.net  Sat Apr 21 06:07:28 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Apr 2007 23:07:28 -0500
Subject: [PATCH] ieee80211: Output frequency rather than channel in scan
	results
Message-ID: <46298e00.m7oDqYNvDCFdCSj1%Larry.Finger@lwfinger.net>

In ieee80211, the output of scan results lists channels rather than
frequencies; however, NetworkManager needs frequency. This patch
changes the output from channel to frequency.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/net/ieee80211/ieee80211_wx.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_wx.c
+++ wireless-2.6/net/ieee80211/ieee80211_wx.c
@@ -89,12 +89,15 @@ static char *ieee80211_translate_scan(st
 		start = iwe_stream_add_event(start, stop, &iwe, IW_EV_UINT_LEN);
 	}
 
-	/* Add frequency/channel */
+	/* Add frequency */
 	iwe.cmd = SIOCGIWFREQ;
-/*	iwe.u.freq.m = ieee80211_frequency(network->channel, network->mode);
-	iwe.u.freq.e = 3; */
-	iwe.u.freq.m = network->channel;
-	iwe.u.freq.e = 0;
+	if (network->channel < 15)
+		iwe.u.freq.m = 2407 + 5 * network->channel;
+	else
+		iwe.u.freq.m = 5000 + 5 * network->channel;
+	if (network->channel == 14)
+		iwe.u.freq.m = 2484;    /* special case for Japan */
+	iwe.u.freq.e = 6;
 	iwe.u.freq.i = 0;
 	start = iwe_stream_add_event(start, stop, &iwe, IW_EV_FREQ_LEN);
 


From proski at gnu.org  Sat Apr 21 06:12:53 2007
From: proski at gnu.org (Pavel Roskin)
Date: Sat, 21 Apr 2007 00:12:53 -0400
Subject: [PATCH] ieee80211: Output frequency rather than channel in
	scan results
In-Reply-To: <46298e00.m7oDqYNvDCFdCSj1%Larry.Finger@lwfinger.net>
References: <46298e00.m7oDqYNvDCFdCSj1%Larry.Finger@lwfinger.net>
Message-ID: <20070421001253.q449myskosg0sg8k@webmail.spamcop.net>

Quoting Larry Finger <Larry.Finger at lwfinger.net>:

> In ieee80211, the output of scan results lists channels rather than
> frequencies; however, NetworkManager needs frequency. This patch
> changes the output from channel to frequency.

The driver can report both, and I think it should.  This would make the iwlist
output a bit longer, but kernel drivers shouldn't be written to make userspace
program generate pretty output.

--
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Sat Apr 21 06:25:40 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Apr 2007 23:25:40 -0500
Subject: [PATCH V2] ieee80211: Output frequency rather than channel in
	scan results
Message-ID: <46299244.Q+HmhPpbYVGidoy1%Larry.Finger@lwfinger.net>

In ieee80211, the output of scan results lists channels rather than
frequencies; however, NetworkManager needs frequency. This patch
adds the frequency to the output.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/net/ieee80211/ieee80211_wx.c
===================================================================
--- wireless-2.6.orig/net/ieee80211/ieee80211_wx.c
+++ wireless-2.6/net/ieee80211/ieee80211_wx.c
@@ -89,15 +89,22 @@ static char *ieee80211_translate_scan(st
 		start = iwe_stream_add_event(start, stop, &iwe, IW_EV_UINT_LEN);
 	}
 
-	/* Add frequency/channel */
+	/* Add channel and frequency */
 	iwe.cmd = SIOCGIWFREQ;
-/*	iwe.u.freq.m = ieee80211_frequency(network->channel, network->mode);
-	iwe.u.freq.e = 3; */
 	iwe.u.freq.m = network->channel;
 	iwe.u.freq.e = 0;
 	iwe.u.freq.i = 0;
 	start = iwe_stream_add_event(start, stop, &iwe, IW_EV_FREQ_LEN);
 
+	if (network->channel < 15)
+		iwe.u.freq.m = 2407 + 5 * network->channel;
+	else
+		iwe.u.freq.m = 5000 + 5 * network->channel;
+	if (network->channel == 14)
+		iwe.u.freq.m = 2484;    /* special case for Japan */
+	iwe.u.freq.e = 6;
+	start = iwe_stream_add_event(start, stop, &iwe, IW_EV_FREQ_LEN);
+
 	/* Add encryption capability */
 	iwe.cmd = SIOCGIWENCODE;
 	if (network->capability & WLAN_CAPABILITY_PRIVACY)


From johannes at sipsolutions.net  Sat Apr 21 15:54:00 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sat, 21 Apr 2007 15:54:00 +0200
Subject: [PATCH V2] ieee80211: Output frequency rather than channel in
	scan results
In-Reply-To: <20070421134210.GA15350@thot.informatik.uni-kl.de>
References: <46299244.Q+HmhPpbYVGidoy1%Larry.Finger@lwfinger.net>
	<20070421134210.GA15350@thot.informatik.uni-kl.de>
Message-ID: <1177163640.5941.17.camel@johannes.berg>

On Sat, 2007-04-21 at 15:42 +0200, Joerg Mayer wrote:
> On Fri, Apr 20, 2007 at 11:25:40PM -0500, Larry Finger wrote:
> > +	if (network->channel < 15)
> > +		iwe.u.freq.m = 2407 + 5 * network->channel;
> > +	else
> > +		iwe.u.freq.m = 5000 + 5 * network->channel;
> > +	if (network->channel == 14)
> > +		iwe.u.freq.m = 2484;    /* special case for Japan */
> 
> As you are taking japanese channels into account: How about handling the
>  >= 4.9 GHz case for Japan as well?
> See 802.11j-2004.pdf 17.3.8.3.2, 17.3.8.3.3 and table J.3 for details.

How about just adding some sort of table in other common code and using
that. Then you can submit a patch for that table :P

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070421/62fe517e/attachment.pgp>

From larry.finger at lwfinger.net  Sat Apr 21 22:16:37 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 21 Apr 2007 15:16:37 -0500
Subject: [PATCH V2] ieee80211: Output frequency rather than channel in
	scan results
In-Reply-To: <1177163640.5941.17.camel@johannes.berg>
References: <46299244.Q+HmhPpbYVGidoy1%Larry.Finger@lwfinger.net>	
	<20070421134210.GA15350@thot.informatik.uni-kl.de>
	<1177163640.5941.17.camel@johannes.berg>
Message-ID: <462A7125.9080406@lwfinger.net>

Johannes Berg wrote:
> On Sat, 2007-04-21 at 15:42 +0200, Joerg Mayer wrote:
>> On Fri, Apr 20, 2007 at 11:25:40PM -0500, Larry Finger wrote:
>>> +	if (network->channel < 15)
>>> +		iwe.u.freq.m = 2407 + 5 * network->channel;
>>> +	else
>>> +		iwe.u.freq.m = 5000 + 5 * network->channel;
>>> +	if (network->channel == 14)
>>> +		iwe.u.freq.m = 2484;    /* special case for Japan */
>> As you are taking japanese channels into account: How about handling the
>>  >= 4.9 GHz case for Japan as well?
>> See 802.11j-2004.pdf 17.3.8.3.2, 17.3.8.3.3 and table J.3 for details.
> 
> How about just adding some sort of table in other common code and using
> that. Then you can submit a patch for that table :P

I did a variation of your suggestion by adding the ieee80211_channel_to_freq routine that ieee80211 
was lacking. This way if anyone adds the 4.9 GHz channels in Japan to the ieee80211_geo struct, my 
routine will be just fine.

Larry


From larry.finger at lwfinger.net  Sun Apr 22 00:55:25 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 21 Apr 2007 17:55:25 -0500
Subject: [PATCH] ieee80211: Output frequency rather than channel in	scan
	results
In-Reply-To: <1177193997.19554.1.camel@localhost.localdomain>
References: <46298e00.m7oDqYNvDCFdCSj1%Larry.Finger@lwfinger.net>	
	<20070421001253.q449myskosg0sg8k@webmail.spamcop.net>
	<1177193997.19554.1.camel@localhost.localdomain>
Message-ID: <462A965D.9000708@lwfinger.net>

Dan Williams wrote:
> On Sat, 2007-04-21 at 00:12 -0400, Pavel Roskin wrote:
>> Quoting Larry Finger <Larry.Finger at lwfinger.net>:
>>
>>> In ieee80211, the output of scan results lists channels rather than
>>> frequencies; however, NetworkManager needs frequency. This patch
>>> changes the output from channel to frequency.
>> The driver can report both, and I think it should.  This would make the iwlist
>> output a bit longer, but kernel drivers shouldn't be written to make userspace
>> program generate pretty output.
> 
> I'm trying to remember why NM cares about frequency, and I think it's
> for ad-hoc mode; but wpa_supplicant didn't historically support a
> "channel" configuration parameter and so you can't create adhoc networks
> with NM right now anyway...  What's the failure mode?

In the KDE NM applet, the frequency is listed as 0.

Larry


From larry.finger at lwfinger.net  Mon Apr 23 00:24:05 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Apr 2007 17:24:05 -0500
Subject: [PATCH] ieee80211: Output frequency rather than channel	in	scan
	results
In-Reply-To: <1177279412.21205.23.camel@localhost.localdomain>
References: <46298e00.m7oDqYNvDCFdCSj1%Larry.Finger@lwfinger.net>	
	<20070421001253.q449myskosg0sg8k@webmail.spamcop.net>	
	<1177193997.19554.1.camel@localhost.localdomain>	
	<462A965D.9000708@lwfinger.net>
	<1177279412.21205.23.camel@localhost.localdomain>
Message-ID: <462BE085.1050906@lwfinger.net>

Dan Williams wrote:
> 
> Haha.  Ok.  NM should be smarter about this and convert channels
> returned by the driver into frequencies.  In the end, I prefer
> frequencies where at all possible, because channel numbers are _not_
> unique (unless you use the the tuple of [standard, band, channel] where
> standard is something like "802.11" or "802.16", band is "a" or "bg").

My current (but not yet accepted) patch for ieee80211 outputs both channel and frequency as does the 
"soon to be submitted" one for mac80211. I agree that frequency is unique; however, I find it easier 
to think in terms of channels. In addition, I only use the bg band and have no confusion. If both 
are listed, everyone should be happy.

Larry


From mb at bu3sch.de  Mon Apr 23 17:46:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Apr 2007 17:46:37 +0200
Subject: Some txpower code rewrite experiments
Message-ID: <200704231746.37281.mb@bu3sch.de>

Larry found out that our problems might come from the txpower stuff.

Below is an incomplete patch where I rewrote some
txpower code. I'd like to hear some comments on it, as the specs are
very unclear and incomplete on all that stuff.
Also see some of the FIXMEs in there.

The patch is incomplete and the device stops working with it
applied, of course. ;)

Cheers.

Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-23 17:34:50.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-23 17:41:44.000000000 +0200
@@ -1738,6 +1738,62 @@ static s8 bcm43xx_phy_estimate_power_out
 	return dbm;
 }
 
+static void put_attenuation_into_ranges(struct bcm43xx_wldev *dev,
+					int *_rfatt, int *_bbatt)
+{
+	int rfatt = *_rfatt;
+	int bbatt = *_bbatt;
+
+	/* Get baseband and radio attenuation values into their permitted ranges.
+	 * Radio attenuation affects power level 4 times as much as baseband. */
+
+	/* Range constants */
+	const int rf_min = 0;
+	const int rf_max = 9;
+	const int bb_min = 0;
+	const int bb_max = 11;
+
+	while (1) {
+		if (rfatt > rf_max &&
+		    bbatt > bb_max - 4)
+			break; /* Can not get it into ranges */
+		if (rfatt < rf_min &&
+		    bbatt < bb_min + 4)
+			break; /* Can not get it into ranges */
+		if (bbatt > bb_max &&
+		    rfatt > rf_max - 1)
+			break; /* Can not get it into ranges */
+		if (bbatt < bb_min &&
+		    rfatt < rf_min + 1)
+			break; /* Can not get it into ranges */
+
+		if (bbatt > bb_max) {
+			bbatt -= 4;
+			rfatt += 1;
+			continue;
+		}
+		if (bbatt < bb_min) {
+			bbatt += 4;
+			rfatt -= 1;
+			continue;
+		}
+		if (rfatt > rf_max) {
+			rfatt -= 1;
+			bbatt += 4;
+			continue;
+		}
+		if (rfatt < rf_min) {
+			rfatt += 1;
+			bbatt -= 4;
+			continue;
+		}
+		break;
+	}
+
+	*_rfatt = limit_value(rfatt, rf_min, rf_max);
+	*_bbatt = limit_value(bbatt, bb_min, bb_max);
+}
+
 /* http://bcm-specs.sipsolutions.net/RecalculateTransmissionPower */
 void bcm43xx_phy_xmitpower(struct bcm43xx_wldev *dev)
 {
@@ -1765,8 +1821,8 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 		s8 average;
 		u8 max_pwr;
 		s16 desired_pwr, estimated_pwr, pwr_adjust;
-		s16 radio_att_delta, baseband_att_delta;
-		s16 radio_attenuation, baseband_attenuation;
+		int radio_att_delta, baseband_att_delta;
+		int radio_attenuation, baseband_attenuation;
 		unsigned long phylock_flags;
 
 		tmp = bcm43xx_shm_read16(dev, BCM43xx_SHM_SHARED, 0x0058);
@@ -1796,11 +1852,13 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 
 		average = (v0 + v1 + v2 + v3 + 2) / 4;
 
+printk("Average TSSI is %d (tgtitssi==%d, curitssi=%d)\n", average, phy->tgt_idle_tssi, phy->cur_idle_tssi);
 		if (tmp && (bcm43xx_shm_read16(dev, BCM43xx_SHM_SHARED, 0x005E) & 0x8))
 			average -= 13;
 
 		estimated_pwr = bcm43xx_phy_estimate_power_out(dev, average);
 
+printk("dBm out %d\n", estimated_pwr);
 		max_pwr = dev->dev->bus->sprom.r1.maxpwr_bg;
 
 		if ((dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL) &&
@@ -1817,8 +1875,10 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 		desired_pwr = limit_value((desired_pwr << 2), 0, max_pwr);
 
 		pwr_adjust = desired_pwr - estimated_pwr;
-		radio_att_delta = -(pwr_adjust + 7) >> 3;
-		baseband_att_delta = -(pwr_adjust >> 1) - (4 * radio_att_delta);
+printk("pwr_adjust %d\n", pwr_adjust);
+		radio_att_delta = -((pwr_adjust + 7) >> 3);
+		baseband_att_delta = (-(pwr_adjust >> 1)) - (4 * radio_att_delta);
+printk("rd %d, bbd %d\n", radio_att_delta, baseband_att_delta);
 		if ((radio_att_delta == 0) && (baseband_att_delta == 0)) {
 			bcm43xx_loctl_mark_cur_used(dev);
 			return;
@@ -1830,27 +1890,10 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 		radio_attenuation = phy->rfatt;
 		radio_attenuation += radio_att_delta;
 
-		/* Get baseband and radio attenuation values into their permitted ranges.
-		 * baseband 0-11, radio 0-9.
-		 * Radio attenuation affects power level 4 times as much as baseband.
-		 */
-		if (radio_attenuation < 0) {
-			baseband_attenuation -= (4 * -radio_attenuation);
-			radio_attenuation = 0;
-		} else if (radio_attenuation > 9) {
-			baseband_attenuation += (4 * (radio_attenuation - 9));
-			radio_attenuation = 9;
-		} else {
-			while (baseband_attenuation < 0 && radio_attenuation > 0) {
-				baseband_attenuation += 4;
-				radio_attenuation--;
-			}
-			while (baseband_attenuation > 11 && radio_attenuation < 9) {
-				baseband_attenuation -= 4;
-				radio_attenuation++;
-			}
-		}
-		baseband_attenuation = limit_value(baseband_attenuation, 0, 11);
+printk("before %d, %d\n", radio_attenuation, baseband_attenuation);
+		put_attenuation_into_ranges(dev, &radio_attenuation,
+					    &baseband_attenuation);
+printk("after %d, %d\n", radio_attenuation, baseband_attenuation);
 
 		txpower = phy->txctl1;
 		if ((phy->radio_ver == 0x2050) && (phy->radio_rev == 2)) {



Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-23 17:35:00.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c	2007-04-23 17:35:02.000000000 +0200
@@ -285,6 +285,178 @@ void bcm43xx_phy_write(struct bcm43xx_wl
 	bcm43xx_write16(dev, BCM43xx_MMIO_PHY_DATA, val);
 }
 
+static void bcm43xx_radio_set_txpower_a(struct bcm43xx_wldev *dev, u16 txpower);
+
+/* Adjust the transmission power output (G-PHY) */
+static void bcm43xx_set_txpower_g(struct bcm43xx_wldev *dev,
+				  const struct bcm43xx_bbatt *bbatt,
+				  const struct bcm43xx_rfatt *rfatt,
+				  u8 tx_magn)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
+	u16 bb, rf;
+	u16 tx_bias;
+
+	bb = bbatt->att;
+	rf = rfatt->att;
+	if (rfatt->with_padmix)
+		rf |= 0x10;
+	tx_bias = lo->tx_bias;
+
+	bcm43xx_phy_set_baseband_attenuation(dev, bb);
+	bcm43xx_shm_write16(dev, BCM43xx_SHM_SHARED, 0x64, rf); // FIXME SHM offset ok for v4 fw?
+	if (phy->radio_ver == 0x2050 && phy->radio_rev == 8) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x43), rf);
+	} else {
+		bcm43xx_radio_write16(dev, 0x43,
+				      (bcm43xx_radio_read16(dev, 0x43)
+				       & 0xFFF0) | rf); //FIXME mask correct? padmixer flag?
+	}
+	if (phy->radio_ver == 0x2050) {
+		if (phy->radio_rev < 6) {
+			bcm43xx_radio_write16(dev, 0x43,
+					      (bcm43xx_radio_read16(dev, 0x43)
+					       & 0xFF8F) | tx_magn);//FIXME mask correct?
+		} else if (phy->radio_rev != 8) {
+			bcm43xx_radio_write16(dev, 0x52,
+					      (bcm43xx_radio_read16(dev, 0x52)
+					       & 0xFF8F) | tx_magn);//FIXME mask?
+		} else
+			bcm43xx_radio_write16(dev, 0x52, tx_magn | tx_bias);
+	}
+	if (phy->radio_rev != 8) {
+		bcm43xx_radio_write16(dev, 0x52,
+				      (bcm43xx_radio_read16(dev, 0x52)
+				       & 0xFFF0) | tx_bias);
+	}
+	if (phy->type == BCM43xx_PHYTYPE_G)
+		bcm43xx_lo_adjust(dev);
+}
+
+static void default_baseband_attenuation(struct bcm43xx_wldev *dev,
+					 struct bcm43xx_bbatt *bb)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->radio_ver == 0x2050 && phy->radio_rev < 6)
+		bb->att = 0;
+	else
+		bb->att = 2;
+}
+
+static void default_radio_attenuation(struct bcm43xx_wldev *dev,
+				      struct bcm43xx_rfatt *rf)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	rf->with_padmix = 0;
+
+	if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+	    bus->board_type == SSB_BOARD_BCM4309G) {
+		if (bus->board_rev < 0x43) {
+			rf->att = 2;
+			return;
+		} else if (bus->board_rev < 0x51) {
+			rf->att = 3;
+			return;
+		}
+	}
+
+	if (phy->type == BCM43xx_PHYTYPE_A) {
+		rf->att = 0x60;
+		return;
+	}
+
+	switch (phy->radio_ver) {
+	case 0x2053:
+		switch (phy->radio_rev) {
+		case 1:
+			rf->att = 6;
+			return;
+		}
+		break;
+	case 0x2050:
+		switch (phy->radio_rev) {
+		case 0:
+			rf->att = 5;
+			return;
+		case 1:
+			if (phy->type == BCM43xx_PHYTYPE_G) {
+				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+				    bus->board_type == SSB_BOARD_BCM4309G &&
+				    bus->board_rev >= 30)
+					rf->att = 3;
+				else if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+					 bus->board_type == SSB_BOARD_BU4306)
+					rf->att = 3;
+				else
+					rf->att = 1;
+			} else {
+				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+				    bus->board_type == SSB_BOARD_BCM4309G &&
+				    bus->board_rev >= 30)
+					rf->att = 7;
+				else
+					rf->att = 6;
+			}
+			return;
+		case 2:
+			if (phy->type == BCM43xx_PHYTYPE_G) {
+				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+				    bus->board_type == SSB_BOARD_BCM4309G &&
+				    bus->board_rev >= 30)
+					rf->att = 3;
+				else if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+					 bus->board_type == SSB_BOARD_BU4306)
+					rf->att = 5;
+				else if (bus->chip_id == 0x4320)
+					rf->att = 4;
+				else
+					rf->att = 3;
+			} else
+				rf->att = 6;
+			return;
+		case 3:
+			rf->att = 5;
+			return;
+		case 4:
+		case 5:
+			rf->att = 1;
+			return;
+		case 6:
+		case 7:
+			rf->att = 5;
+			return;
+		case 8:
+			rf->att = 0xA;
+			rf->with_padmix = 1;
+			return;
+		case 9:
+		default:
+			rf->att = 5;
+			return;
+		}
+	}
+	rf->att = 5;
+}
+
+static u16 bcm43xx_default_txctl1(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->radio_ver != 0x2050)
+		return 0;
+	if (phy->radio_rev == 1)
+		return 3;
+	if (phy->radio_rev < 6)
+		return 2;
+	if (phy->radio_rev == 8)
+		return 1;
+	return 0;
+}
+
 /* This func is called "PHY calibrate" in the specs... */
 void bcm43xx_phy_early_init(struct bcm43xx_wldev *dev)
 {
@@ -296,6 +468,8 @@ void bcm43xx_phy_early_init(struct bcm43
 	    phy->type == BCM43xx_PHYTYPE_G) {
 		generate_rfatt_list(dev, &lo->rfatt_list);
 		generate_bbatt_list(dev, &lo->bbatt_list);
+		default_baseband_attenuation(dev, &lo->bbatt);
+		default_radio_attenuation(dev, &lo->rfatt);
 	}
 	if (phy->type == BCM43xx_PHYTYPE_G && phy->rev == 1) {
 		/* Workaround: Temporarly disable gmode through the early init
@@ -531,10 +705,18 @@ static void bcm43xx_phy_init_pctl(struct
 					      (bcm43xx_radio_read16(dev, 0x0076)
 					       & 0x00F7) | 0x0084);
 		} else {
-			if (phy->radio_rev == 8)
-				bcm43xx_radio_set_txpower_bg(dev, 0xB, 0x1F, 0);
-			else
-				bcm43xx_radio_set_txpower_bg(dev, 0xB, 9, 0);
+			struct bcm43xx_rfatt rfatt;
+			struct bcm43xx_bbatt bbatt;
+
+			bbatt.att = 11;
+			if (phy->radio_rev == 8) {
+				rfatt.att = 15;
+				rfatt.with_padmix = 1;
+			} else {
+				rfatt.att = 9;
+				rfatt.with_padmix = 0;
+			}
+			bcm43xx_set_txpower_g(dev, &bbatt, &rfatt, 0);
 		}
 		bcm43xx_dummy_transmission(dev);
 		phy->cur_idle_tssi = bcm43xx_phy_read(dev, BCM43xx_PHY_ITSSI);
@@ -548,12 +730,16 @@ static void bcm43xx_phy_init_pctl(struct
 			}
 		}
 
+printk("ITSSI is %d\n", phy->cur_idle_tssi);
 		if (phy->radio_ver == 0x2050 && phy->analog == 0) {
 			bcm43xx_radio_write16(dev, 0x0076,
 					      bcm43xx_radio_read16(dev, 0x0076)
 					       & 0xFF7B);
-		} else
-			bcm43xx_radio_set_txpower_bg(dev, -1, -1, -1);
+		} else {
+			struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
+
+			bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
+		}
 	}
 	bcm43xx_hardware_pctl_init(dev);
 	bcm43xx_shm_clear_tssi(dev);
@@ -1012,6 +1198,7 @@ static void bcm43xx_phy_inita(struct bcm
 static void bcm43xx_phy_initb2(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
 	u16 offset, val;
 
 	bcm43xx_write16(dev, 0x03EC, 0x3F22);
@@ -1056,13 +1243,14 @@ static void bcm43xx_phy_initb2(struct bc
 	bcm43xx_phy_write(dev, 0x002A, 0x88A3);
 	if (phy->radio_ver != 0x2050)
 		bcm43xx_phy_write(dev, 0x002A, 0x88C2);
-	bcm43xx_radio_set_txpower_bg(dev, -1, -1, -1);
+	bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
 	bcm43xx_phy_init_pctl(dev);
 }
 
 static void bcm43xx_phy_initb4(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
 	u16 offset, val;
 
 	bcm43xx_write16(dev, 0x03EC, 0x3F22);
@@ -1110,7 +1298,7 @@ static void bcm43xx_phy_initb4(struct bc
 	bcm43xx_phy_write(dev, 0x002A, 0x88A3);
 	if (phy->radio_ver == 0x2050)
 		bcm43xx_phy_write(dev, 0x002A, 0x88C2);
-	bcm43xx_radio_set_txpower_bg(dev, 0xFFFF, 0xFFFF, 0xFFFF);
+	bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
 	if (dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_RSSI) {
 		bcm43xx_calc_nrssi_slope(dev);
 		bcm43xx_calc_nrssi_threshold(dev);
@@ -1122,6 +1310,7 @@ static void bcm43xx_phy_initb5(struct bc
 {
 	struct ssb_bus *bus = dev->dev->bus;
 	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
 	u16 offset, value;
 	u8 old_channel;
 
@@ -1217,7 +1406,7 @@ static void bcm43xx_phy_initb5(struct bc
 	bcm43xx_phy_write(dev, 0x0032, 0x00CA);
 	bcm43xx_phy_write(dev, 0x002A, 0x88A3);
 
-	bcm43xx_radio_set_txpower_bg(dev, -1, -1, -1);
+	bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
 
 	if (phy->radio_ver == 0x2050)
 		bcm43xx_radio_write16(dev, 0x005D, 0x000D);
@@ -1228,6 +1417,7 @@ static void bcm43xx_phy_initb5(struct bc
 static void bcm43xx_phy_initb6(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
 	u16 offset, val;
 	u8 old_channel;
 
@@ -1328,7 +1518,7 @@ static void bcm43xx_phy_initb6(struct bc
 	else
 		bcm43xx_phy_write(dev, 0x2A, 0x8AC0);
 	bcm43xx_phy_write(dev, 0x0038, 0x0668);
-	bcm43xx_radio_set_txpower_bg(dev, -1, -1, -1);
+	bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
 	if (phy->radio_rev <= 5) {
 		bcm43xx_phy_write(dev, 0x5D,
 				  (bcm43xx_phy_read(dev, 0x5D)
@@ -1391,7 +1581,7 @@ static void bcm43xx_calc_loopback_gain(s
 	backup_phy[13] = bcm43xx_phy_read(dev, BCM43xx_PHY_BASE(0x2B));
 	backup_phy[14] = bcm43xx_phy_read(dev, BCM43xx_PHY_PGACTL);
 	backup_phy[15] = bcm43xx_phy_read(dev, BCM43xx_PHY_LO_LEAKAGE);
-	backup_bband = phy->bbatt;
+	backup_bband = phy->lo_control->bbatt.att;
 	backup_radio[0] = bcm43xx_radio_read16(dev, 0x52);
 	backup_radio[1] = bcm43xx_radio_read16(dev, 0x43);
 	backup_radio[2] = bcm43xx_radio_read16(dev, 0x7A);
@@ -1620,6 +1810,7 @@ static void bcm43xx_phy_initg(struct bcm
 		else
 			bcm43xx_radio_write16(dev, 0x0078, phy->initval);
 	}
+#if 1
 	if (phy->lo_control->tx_bias == 0xFF) {
 		bcm43xx_lo_g_measure(dev);
 	} else {
@@ -1668,6 +1859,7 @@ static void bcm43xx_phy_initg(struct bcm
 		} else
 			bcm43xx_calc_nrssi_threshold(dev);
 	}
+#endif
 	if (phy->radio_rev == 8)
 		bcm43xx_phy_write(dev, BCM43xx_PHY_EXTG(0x05), 0x3230);
 	bcm43xx_phy_init_pctl(dev);
@@ -1689,23 +1881,20 @@ void bcm43xx_phy_set_baseband_attenuatio
 					  u16 baseband_attenuation)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 value;
 
 	if (phy->analog == 0) {
-		value = (bcm43xx_read16(dev, 0x03E6) & 0xFFF0);
-		value |= (baseband_attenuation & 0x000F);
-		bcm43xx_write16(dev, 0x03E6, value);
-		return;
-	}
-
-	if (phy->analog > 1) {
-		value = bcm43xx_phy_read(dev, 0x0060) & ~0x003C;
-		value |= (baseband_attenuation << 2) & 0x003C;
+		bcm43xx_write16(dev, BCM43xx_MMIO_PHY0,
+				(bcm43xx_read16(dev, BCM43xx_MMIO_PHY0)
+				 & 0xFFF0) | baseband_attenuation);
+	} else if (phy->analog == 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_DACCTL,
+				  (bcm43xx_phy_read(dev, BCM43xx_PHY_DACCTL)
+				   & 0xFFC3) | (baseband_attenuation << 2));
 	} else {
-		value = bcm43xx_phy_read(dev, 0x0060) & ~0x0078;
-		value |= (baseband_attenuation << 3) & 0x0078;
+		bcm43xx_phy_write(dev, BCM43xx_PHY_DACCTL,
+				  (bcm43xx_phy_read(dev, BCM43xx_PHY_DACCTL)
+				   & 0xFF87) | (baseband_attenuation << 3));
 	}
-	bcm43xx_phy_write(dev, 0x0060, value);
 }
 
 /* http://bcm-specs.sipsolutions.net/EstimatePowerOut
@@ -1738,8 +1927,7 @@ static s8 bcm43xx_phy_estimate_power_out
 	return dbm;
 }
 
-static void put_attenuation_into_ranges(struct bcm43xx_wldev *dev,
-					int *_rfatt, int *_bbatt)
+static void put_attenuation_into_ranges(int *_bbatt, int *_rfatt)
 {
 	int rfatt = *_rfatt;
 	int bbatt = *_bbatt;
@@ -1799,6 +1987,7 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 {
 	struct ssb_bus *bus = dev->dev->bus;
 	struct bcm43xx_phy *phy = &dev->phy;
+	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
 
 	if (phy->cur_idle_tssi == 0)
 		return;
@@ -1816,13 +2005,13 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 	case BCM43xx_PHYTYPE_B:
 	case BCM43xx_PHYTYPE_G: {
 		u16 tmp;
-		u16 txpower;
 		s8 v0, v1, v2, v3;
 		s8 average;
 		u8 max_pwr;
-		s16 desired_pwr, estimated_pwr, pwr_adjust;
-		int radio_att_delta, baseband_att_delta;
-		int radio_attenuation, baseband_attenuation;
+		int desired_pwr, estimated_pwr, pwr_adjust;
+		int rfatt_delta, bbatt_delta;
+		int rfatt, bbatt;
+		int tx_magn;
 		unsigned long phylock_flags;
 
 		tmp = bcm43xx_shm_read16(dev, BCM43xx_SHM_SHARED, 0x0058);
@@ -1876,55 +2065,53 @@ printk("dBm out %d\n", estimated_pwr);
 
 		pwr_adjust = desired_pwr - estimated_pwr;
 printk("pwr_adjust %d\n", pwr_adjust);
-		radio_att_delta = -((pwr_adjust + 7) >> 3);
-		baseband_att_delta = (-(pwr_adjust >> 1)) - (4 * radio_att_delta);
-printk("rd %d, bbd %d\n", radio_att_delta, baseband_att_delta);
-		if ((radio_att_delta == 0) && (baseband_att_delta == 0)) {
+		rfatt_delta = -((pwr_adjust + 7) >> 3);
+		bbatt_delta = (-(pwr_adjust >> 1)) - (4 * rfatt_delta);
+printk("rd %d, bbd %d\n", rfatt_delta, bbatt_delta);
+		if ((rfatt_delta == 0) && (bbatt_delta == 0)) {
 			bcm43xx_loctl_mark_cur_used(dev);
 			return;
 		}
 
 		/* Calculate the new attenuation values. */
-		baseband_attenuation = phy->bbatt;
-		baseband_attenuation += baseband_att_delta;
-		radio_attenuation = phy->rfatt;
-		radio_attenuation += radio_att_delta;
-
-printk("before %d, %d\n", radio_attenuation, baseband_attenuation);
-		put_attenuation_into_ranges(dev, &radio_attenuation,
-					    &baseband_attenuation);
-printk("after %d, %d\n", radio_attenuation, baseband_attenuation);
+		bbatt = lo->bbatt.att;
+		bbatt += bbatt_delta;
+		rfatt = lo->rfatt.att;
+		rfatt += rfatt_delta;
+
+printk("before %d, %d\n", rfatt, bbatt);
+		put_attenuation_into_ranges(&bbatt, &rfatt);
+printk("after %d, %d\n", rfatt, bbatt);
 
-		txpower = phy->txctl1;
+		tx_magn = lo->tx_magn;
 		if ((phy->radio_ver == 0x2050) && (phy->radio_rev == 2)) {
-			if (radio_attenuation <= 1) {
-				if (txpower == 0) {
-					txpower = 3;
-					radio_attenuation += 2;
-					baseband_attenuation += 2;
+			if (rfatt <= 1) {
+				if (tx_magn == 0) {
+					tx_magn = 3;
+					rfatt += 2;
+					bbatt += 2;
 				} else if (dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL) {
-					baseband_attenuation += 4 * (radio_attenuation - 2);
-					radio_attenuation = 2;
+					bbatt += 4 * (rfatt - 2);
+					rfatt = 2;
 				}
-			} else if (radio_attenuation > 4 && txpower != 0) {
-				txpower = 0;
-				if (baseband_attenuation < 3) {
-					radio_attenuation -= 3;
-					baseband_attenuation += 2;
+			} else if (rfatt > 4 && tx_magn != 0) {
+				tx_magn = 0;
+				if (bbatt < 3) {
+					rfatt -= 3;
+					bbatt += 2;
 				} else {
-					radio_attenuation -= 2;
-					baseband_attenuation -= 2;
+					rfatt -= 2;
+					bbatt -= 2;
 				}
 			}
 		}
-		phy->txctl1 = txpower;
-		baseband_attenuation = limit_value(baseband_attenuation, 0, 11);
-		radio_attenuation = limit_value(radio_attenuation, 0, 9);
+		lo->tx_magn = tx_magn;
+		lo->rfatt.att = limit_value(rfatt, 0, 9);
+		lo->bbatt.att = limit_value(bbatt, 0, 11);
 
 		bcm43xx_phy_lock(dev, phylock_flags);
 		bcm43xx_radio_lock(dev);
-		bcm43xx_radio_set_txpower_bg(dev, baseband_attenuation,
-					     radio_attenuation, txpower);
+		bcm43xx_set_txpower_g(dev, &lo->bbatt, &lo->rfatt, lo->tx_magn);
 		bcm43xx_loctl_mark_cur_used(dev);
 		bcm43xx_radio_unlock(dev);
 		bcm43xx_phy_unlock(dev, phylock_flags);
@@ -4076,7 +4263,7 @@ static u16 bcm43xx_get_txgain_dac(u16 tx
 	return ret;
 }
 
-void bcm43xx_radio_set_txpower_a(struct bcm43xx_wldev *dev, u16 txpower)
+static void bcm43xx_radio_set_txpower_a(struct bcm43xx_wldev *dev, u16 txpower)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
 	u16 pamp, base, dac, t;
@@ -4107,177 +4294,6 @@ void bcm43xx_radio_set_txpower_a(struct 
 	//TODO: FuncPlaceholder (Adjust BB loft cancel)
 }
 
-void bcm43xx_radio_set_txpower_bg(struct bcm43xx_wldev *dev,
-				  s16 baseband_attenuation,
-				  s16 radio_attenuation,
-				  s16 _tx_magn)
-{
-	struct bcm43xx_phy *phy = &dev->phy;
-	u8 tx_bias = phy->lo_control->tx_bias;
-	u8 tx_magn;
-
-	if (baseband_attenuation < 0)
-		baseband_attenuation = phy->bbatt;
-	if (radio_attenuation < 0)
-		radio_attenuation = phy->rfatt;
-	if (_tx_magn < 0)
-		_tx_magn = phy->lo_control->tx_magn;
-	tx_magn = _tx_magn;
-	phy->bbatt = baseband_attenuation;
-	phy->rfatt = radio_attenuation;
-
-	/* Set Baseband Attenuation on device. */
-	bcm43xx_phy_set_baseband_attenuation(dev, baseband_attenuation);
-
-	/* Set Radio Attenuation on device. */
-	bcm43xx_shm_write16(dev, BCM43xx_SHM_SHARED,
-			    0x0064, radio_attenuation);
-	if (phy->radio_ver == 0x2050 && phy->radio_rev == 8) {
-		bcm43xx_phy_write(dev, 0x0043, radio_attenuation);
-	} else {
-		bcm43xx_radio_write16(dev, 0x0043,
-				      (bcm43xx_radio_read16(dev, 0x0043)
-				       & 0xFFF0) | radio_attenuation);
-	}
-
-	if (phy->radio_ver == 0x2050) {//FIXME: It seems like tx_magn and tx_bias are swapped in this func.
-		if (phy->radio_rev < 6) {
-			bcm43xx_radio_write16(dev, 0x0043,
-					      (bcm43xx_radio_read16(dev, 0x0043)
-					       & 0xFF8F) | tx_magn);
-		} else if (phy->radio_rev != 8) {
-			bcm43xx_radio_write16(dev, 0x0052,
-					      (bcm43xx_radio_read16(dev, 0x0052)
-					       & 0xFF8F) | tx_magn);
-		} else {
-			bcm43xx_radio_write16(dev, 0x52,
-					      (bcm43xx_radio_read16(dev, 0x52) & 0xFF00) |
-					      tx_magn | tx_bias);
-		}
-	}
-	if (phy->radio_rev != 8) {
-		bcm43xx_radio_write16(dev, 0x0052,
-				      (bcm43xx_radio_read16(dev, 0x0052)
-				       & 0xFFF0) | tx_bias);
-	}
-	if (phy->type == BCM43xx_PHYTYPE_G)
-		bcm43xx_lo_adjust(dev);
-}
-
-u16 bcm43xx_default_baseband_attenuation(struct bcm43xx_wldev *dev)
-{
-	struct bcm43xx_phy *phy = &dev->phy;
-
-	if (phy->radio_ver == 0x2050 && phy->radio_rev < 6)
-		return 0;
-	return 2;
-}
-
-u16 bcm43xx_default_radio_attenuation(struct bcm43xx_wldev *dev)
-{
-	struct ssb_bus *bus = dev->dev->bus;
-	struct bcm43xx_phy *phy = &dev->phy;
-	u16 att = 0xFFFF;
-
-	if (phy->type == BCM43xx_PHYTYPE_A)
-		return 0x60;
-
-	switch (phy->radio_ver) {
-	case 0x2053:
-		switch (phy->radio_rev) {
-		case 1:
-			att = 6;
-			break;
-		}
-		break;
-	case 0x2050:
-		switch (phy->radio_rev) {
-		case 0:
-			att = 5;
-			break;
-		case 1:
-			if (phy->type == BCM43xx_PHYTYPE_G) {
-				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-				    bus->board_type == SSB_BOARD_BCM4309G &&
-				    bus->board_rev >= 30)
-					att = 3;
-				else if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-					 bus->board_type == SSB_BOARD_BU4306)
-					att = 3;
-				else
-					att = 1;
-			} else {
-				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-				    bus->board_type == SSB_BOARD_BCM4309G &&
-				    bus->board_rev >= 30)
-					att = 7;
-				else
-					att = 6;
-			}
-			break;
-		case 2:
-			if (phy->type == BCM43xx_PHYTYPE_G) {
-				if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-				    bus->board_type == SSB_BOARD_BCM4309G &&
-				    bus->board_rev >= 30)
-					att = 3;
-				else if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-					 bus->board_type == SSB_BOARD_BU4306)
-					att = 5;
-				else if (bus->chip_id == 0x4320)
-					att = 4;
-				else
-					att = 3;
-			} else
-				att = 6;
-			break;
-		case 3:
-			att = 5;
-			break;
-		case 4:
-		case 5:
-			att = 1;
-			break;
-		case 6:
-		case 7:
-			att = 5;
-			break;
-		case 8:
-			att = 0x1A;
-			break;
-		case 9:
-		default:
-			att = 5;
-		}
-	}
-	if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
-	    bus->board_type == SSB_BOARD_BCM4309G) {
-		if (bus->board_rev < 0x43)
-			att = 2;
-		else if (bus->board_rev < 0x51)
-			att = 3;
-	}
-	if (att == 0xFFFF)
-		att = 5;
-
-	return att;
-}
-
-u16 bcm43xx_default_txctl1(struct bcm43xx_wldev *dev)
-{
-	struct bcm43xx_phy *phy = &dev->phy;
-
-	if (phy->radio_ver != 0x2050)
-		return 0;
-	if (phy->radio_rev == 1)
-		return 3;
-	if (phy->radio_rev < 6)
-		return 2;
-	if (phy->radio_rev == 8)
-		return 1;
-	return 0;
-}
-
 void bcm43xx_radio_turn_on(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h	2007-04-23 17:34:20.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h	2007-04-23 17:35:02.000000000 +0200
@@ -552,20 +552,8 @@ struct bcm43xx_phy {
 	/* Desired TX power level (in dBm).
 	 * This is set by the user and adjusted in bcm43xx_phy_xmitpower(). */
 	u8 power_level;
-	/* TX Power control values. */
-	/* B/G PHY */
-	struct {
-		/* Current Radio Attenuation for TXpower recalculation. */
-		u16 rfatt;
-		/* Current Baseband Attenuation for TXpower recalculation. */
-		u16 bbatt;
-		/* Current TXpower control value for TXpower recalculation. */
-		u16 txctl1;
-	};
-	/* A PHY */
-	struct {
-		u16 txpwr_offset;
-	};
+	/* A-PHY TX Power control value. */
+	u16 txpwr_offset;
 
 	/* Current Interference Mitigation mode */
 	int interfmode;
Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h	2007-04-23 17:34:20.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h	2007-04-23 17:35:02.000000000 +0200
@@ -279,17 +279,6 @@ void bcm43xx_radio_turn_off(struct bcm43
 int bcm43xx_radio_selectchannel(struct bcm43xx_wldev *dev, u8 channel,
 				int synthetic_pu_workaround);
 
-void bcm43xx_radio_set_txpower_a(struct bcm43xx_wldev *dev, u16 txpower);
-/* Set the txpower on device. If the values are < 0, use the saved ones. */
-void bcm43xx_radio_set_txpower_bg(struct bcm43xx_wldev *dev,
-				  s16 baseband_attenuation,
-				  s16 radio_attenuation,
-				  s16 txctl1);
-
-u16 bcm43xx_default_baseband_attenuation(struct bcm43xx_wldev *dev);
-u16 bcm43xx_default_radio_attenuation(struct bcm43xx_wldev *dev);
-u16 bcm43xx_default_txctl1(struct bcm43xx_wldev *dev);
-
 u8 bcm43xx_radio_aci_detect(struct bcm43xx_wldev *dev, u8 channel);
 u8 bcm43xx_radio_aci_scan(struct bcm43xx_wldev *dev);
 
Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c	2007-04-23 17:34:20.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c	2007-04-23 17:35:02.000000000 +0200
@@ -1083,7 +1083,7 @@ struct bcm43xx_loctl * bcm43xx_loctl_cur
 	struct bcm43xx_rfatt rf;
 
 	memcpy(&rf, &lo->rfatt, sizeof(rf));
-	fixup_rfatt_for_txctl1(&rf, phy->txctl1);
+//FIXME	fixup_rfatt_for_txctl1(&rf, phy->txctl1);
 
 	return bcm43xx_get_loctl(dev, &rf, &lo->bbatt);
 }
Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h	2007-04-23 17:34:20.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h	2007-04-23 17:35:02.000000000 +0200
@@ -42,6 +42,7 @@ struct bcm43xx_txpower_lo_control {
 	struct bcm43xx_bbatt_list bbatt_list;
 
 	/* Current RF and BB attenuation and LO control values. */
+	//FIXME probably need to move this to struct bcm43xx_phy
 	struct bcm43xx_rfatt rfatt;
 	struct bcm43xx_bbatt bbatt;
 
Index: bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- bu3sch-wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c	2007-04-23 17:34:20.000000000 +0200
+++ bu3sch-wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c	2007-04-23 17:35:02.000000000 +0200
@@ -3107,11 +3107,6 @@ static void setup_struct_phy_for_init(st
 	}
 	phy->max_lb_gain = 0;
 	phy->trsw_rx_gain = 0;
-
-	/* Set default attenuation values. */
-	phy->bbatt = bcm43xx_default_baseband_attenuation(dev);
-	phy->rfatt = bcm43xx_default_radio_attenuation(dev);
-	phy->txctl1 = bcm43xx_default_txctl1(dev);
 	phy->txpwr_offset = 0;
 
 	/* NRSSI */

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Mon Apr 23 20:16:55 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Apr 2007 13:16:55 -0500
Subject: Error in setting lo->tx_bias
Message-ID: <462CF817.8000909@lwfinger.net>

Michael,

In your new txpower routines, I didn't see any changes to routine 'lo_measure_txctl_values', which 
is where the failure to initialize tx_bias occurs. The patch below sets it correctly.

Larry


Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
@@ -436,6 +436,7 @@ static void lo_measure_txctl_values(stru
  		}
  	} else {
  		lo->tx_magn = 0; /* unused */
+		lo->tx_bias = 0;
  		bcm43xx_radio_write16(dev, 0x52,
  				      bcm43xx_radio_read16(dev, 0x52)
  				      & 0xFFF0); /* TX bias == 0 */

----
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tx_bias_err
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070423/33550c3f/attachment.ksh>

From stefano.brivio at polimi.it  Mon Apr 23 20:25:30 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 23 Apr 2007 20:25:30 +0200
Subject: [PATCH] incomplete patchset for syncing to specs v4
Message-ID: <20070423202530.2829f309@localhost>

As I probably won't have any chance to look after this until June or so
because of exams, I'm posting here my incomplete patchset which should sync
the A and G PHY code to v4 of specs, in case somebody is willing to work on
this in the meanwhile. Please note that related specs are still unfinished,
that's also why I'm stopping here for now.

Second and third patches aren't even compile tested and need
double-checking. More patches will be needed.


--
Ciao
Stefano


From stefano.brivio at polimi.it  Mon Apr 23 20:33:35 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 23 Apr 2007 20:33:35 +0200
Subject: [PATCH 2/3] fix G LO variables and functions naming
In-Reply-To: <20070423202530.2829f309@localhost>
References: <20070423202530.2829f309@localhost>
Message-ID: <20070423203335.21f6afe0@localhost>

Avoid confusion between A and G PHY LocalOscillator-related variables and
functions.

TODO: almost everything.


Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
---

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
@@ -2,7 +2,7 @@
 
   Broadcom BCM43xx wireless driver
 
-  LO (LocalOscillator) Measuring and Control routines
+  G PHY LO (LocalOscillator) Measuring and Control routines
 
   Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
   Copyright (c) 2005, 2006 Stefano Brivio <st3 at riseup.net>
@@ -84,7 +84,7 @@ void assert_rfatt_and_bbatt(const struct
 }
 
 static
-struct bcm43xx_loctl * bcm43xx_get_loctl_nopadmix(struct bcm43xx_wldev *dev,
+struct bcm43xx_loctl * bcm43xx_get_lo_g_ctl_nopadmix(struct bcm43xx_wldev *dev,
 						  const struct bcm43xx_rfatt *rfatt,
 						  const struct bcm43xx_bbatt *bbatt)
 {
@@ -95,7 +95,7 @@ struct bcm43xx_loctl * bcm43xx_get_loctl
 	return &(lo->no_padmix[bbatt->att][rfatt->att]);
 }
 
-struct bcm43xx_loctl * bcm43xx_get_loctl(struct bcm43xx_wldev *dev,
+struct bcm43xx_loctl * bcm43xx_get_lo_g_ctl(struct bcm43xx_wldev *dev,
 					 const struct bcm43xx_rfatt *rfatt,
 					 const struct bcm43xx_bbatt *bbatt)
 {
@@ -474,7 +474,7 @@ static void lo_read_power_vector(struct 
 			 */
 			rf_offset = i / lo->rfatt_list.len;
 			bb_offset = i % lo->rfatt_list.len;//FIXME?
-			loctl = bcm43xx_get_loctl(dev, &lo->rfatt_list.list[rf_offset],
+			loctl = bcm43xx_get_lo_g_ctl(dev, &lo->rfatt_list.list[rf_offset],
 						  &lo->bbatt_list.list[bb_offset]);
 			/* And mark it as "used", as the device told us
 			 * through the bitmap it is using it.
@@ -732,9 +732,9 @@ static void lo_measure_restore(struct bc
 		bcm43xx_gphy_dc_lt_init(dev);
 	} else {
 		if (lo->rebuild)
-			bcm43xx_lo_adjust_to(dev, 3, 2, 0);
+			bcm43xx_lo_g_adjust_to(dev, 3, 2, 0);
 		else
-			bcm43xx_lo_adjust(dev);
+			bcm43xx_lo_g_adjust(dev);
 	}
 	if (phy->type == BCM43xx_PHYTYPE_G) {
 		if (phy->rev >= 3)
@@ -786,7 +786,7 @@ static void lo_measure_restore(struct bc
 	bcm43xx_radio_selectchannel(dev, sav->old_channel, 1);
 }
 
-struct bcm43xx_lo_statemachine {
+struct bcm43xx_lo_g_statemachine {
 	int current_state;
 	int nr_measured;
 	int state_val_multiplier;
@@ -797,7 +797,7 @@ struct bcm43xx_lo_statemachine {
 /* Loop over each possible value in this state. */
 static int lo_probe_possible_loctls(struct bcm43xx_wldev *dev,
 				    struct bcm43xx_loctl *probe_loctl,
-				    struct bcm43xx_lo_statemachine *d)
+				    struct bcm43xx_lo_g_statemachine *d)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
 	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
@@ -882,7 +882,7 @@ static void lo_probe_loctls_statemachine
 {
 	struct bcm43xx_phy *phy = &dev->phy;
 	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
-	struct bcm43xx_lo_statemachine d;
+	struct bcm43xx_lo_g_statemachine d;
 	u16 feedth;
 	int found_lower;
 	struct bcm43xx_loctl probe_loctl;
@@ -976,11 +976,11 @@ static void lo_measure(struct bcm43xx_wl
 
 		for (bbidx = 0; bbidx < lo->bbatt_list.len; bbidx++) {
 			if (lo->rebuild) {
-				ploctl = bcm43xx_get_loctl_nopadmix(dev,
+				ploctl = bcm43xx_get_lo_g_ctl_nopadmix(dev,
 							&lo->rfatt_list.list[rfidx],
 							&lo->bbatt_list.list[bbidx]);
 			} else {
-				ploctl = bcm43xx_get_loctl(dev, &lo->rfatt_list.list[rfidx],
+				ploctl = bcm43xx_get_lo_g_ctl(dev, &lo->rfatt_list.list[rfidx],
 							   &lo->bbatt_list.list[bbidx]);
 				if (!ploctl->used)
 					continue;
@@ -1048,9 +1048,9 @@ void bcm43xx_lo_g_measure(struct bcm43xx
 	phy->lo_control->rebuild = 0;
 }
 
-void bcm43xx_lo_adjust(struct bcm43xx_wldev *dev)
+void bcm43xx_lo_g_adjust(struct bcm43xx_wldev *dev)
 {
-	bcm43xx_lo_write(dev, bcm43xx_loctl_current(dev));
+	bcm43xx_lo_write(dev, bcm43xx_lo_g_ctl_current(dev));
 }
 
 static inline void fixup_rfatt_for_txctl1(struct bcm43xx_rfatt *rf,
@@ -1060,7 +1060,7 @@ static inline void fixup_rfatt_for_txctl
 		rf->att = 4;
 }
 
-void bcm43xx_lo_adjust_to(struct bcm43xx_wldev *dev,
+void bcm43xx_lo_g_adjust_to(struct bcm43xx_wldev *dev,
 			  u16 rfatt, u16 bbatt, u16 txctl1)
 {
 	struct bcm43xx_rfatt rf;
@@ -1072,11 +1072,11 @@ void bcm43xx_lo_adjust_to(struct bcm43xx
 	rf.att = rfatt;
 	bb.att = bbatt;
 	fixup_rfatt_for_txctl1(&rf, txctl1);
-	loctl = bcm43xx_get_loctl(dev, &rf, &bb);
+	loctl = bcm43xx_get_lo_g_ctl(dev, &rf, &bb);
 	bcm43xx_lo_write(dev, loctl);
 }
 
-struct bcm43xx_loctl * bcm43xx_loctl_current(struct bcm43xx_wldev *dev)
+struct bcm43xx_loctl * bcm43xx_lo_g_ctl_current(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
 	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
@@ -1085,7 +1085,7 @@ struct bcm43xx_loctl * bcm43xx_loctl_cur
 	memcpy(&rf, &lo->rfatt, sizeof(rf));
 	fixup_rfatt_for_txctl1(&rf, phy->txctl1);
 
-	return bcm43xx_get_loctl(dev, &rf, &lo->bbatt);
+	return bcm43xx_get_lo_g_ctl(dev, &rf, &lo->bbatt);
 }
 
 static int do_mark_unused(struct bcm43xx_wldev *dev,
@@ -1095,7 +1095,7 @@ static int do_mark_unused(struct bcm43xx
 	return 0;
 }
 
-void bcm43xx_loctl_mark_all_unused(struct bcm43xx_wldev *dev)
+void bcm43xx_lo_g_ctl_mark_all_unused(struct bcm43xx_wldev *dev)
 {
 	struct bcm43xx_phy *phy = &dev->phy;
 	struct bcm43xx_txpower_lo_control *lo = phy->lo_control;
@@ -1103,8 +1103,8 @@ void bcm43xx_loctl_mark_all_unused(struc
 	bcm43xx_call_for_each_loctl(dev, do_mark_unused);
 	lo->rebuild = 1;
 }
-
-void bcm43xx_loctl_mark_cur_used(struct bcm43xx_wldev *dev)
+_
+void bcm43xx_lo_g_ctl_mark_cur_used(struct bcm43xx_wldev *dev)
 {
-	bcm43xx_loctl_current(dev)->used = 1;
+	bcm43xx_lo_g_ctl_current(dev)->used = 1;
 }
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h
@@ -23,7 +23,7 @@ struct bcm43xx_loctl {
  * The Value arrays are two-dimensional. The first index
  * is the baseband attenuation and the second index
  * is the radio attenuation.
- * Use bcm43xx_get_loctl() to retrieve a value from the lists.
+ * Use bcm43xx_get_lo_g_ctl() to retrieve a value from the lists.
  */
 struct bcm43xx_txpower_lo_control {
 #define BCM43xx_NR_BB	9
@@ -66,26 +66,26 @@ void bcm43xx_lo_g_measure(struct bcm43xx
 /* Adjust the Local Oscillator to the saved attenuation
  * and txctl values.
  */
-void bcm43xx_lo_adjust(struct bcm43xx_wldev *dev);
+void bcm43xx_lo_g_adjust(struct bcm43xx_wldev *dev);
 /* Adjust to specific values. */
-void bcm43xx_lo_adjust_to(struct bcm43xx_wldev *dev,
+void bcm43xx_lo_g_adjust_to(struct bcm43xx_wldev *dev,
 			  u16 rfatt, u16 bbatt, u16 txctl1);
 
-/* Returns the bcm43xx_loctl corresponding to the current
+/* Returns the bcm43xx_lo_g_ctl corresponding to the current
  * attenuation values.
  */
-struct bcm43xx_loctl * bcm43xx_loctl_current(struct bcm43xx_wldev *dev);
-/* Mark all possible bcm43xx_loctl as "unused" */
-void bcm43xx_loctl_mark_all_unused(struct bcm43xx_wldev *dev);
-/* Mark the bcm43xx_loctl corresponding to the current
+struct bcm43xx_loctl * bcm43xx_lo_g_ctl_current(struct bcm43xx_wldev *dev);
+/* Mark all possible bcm43xx_lo_g_ctl as "unused" */
+void bcm43xx_lo_g_ctl_mark_all_unused(struct bcm43xx_wldev *dev);
+/* Mark the bcm43xx_lo_g_ctl corresponding to the current
  * attenuation values as used.
  */
-void bcm43xx_loctl_mark_cur_used(struct bcm43xx_wldev *dev);
+void bcm43xx_lo_g_ctl_mark_cur_used(struct bcm43xx_wldev *dev);
 
 /* Get a reference to a LO Control value pair in the
  * TX Power LO Control Array.
  */
-struct bcm43xx_loctl * bcm43xx_get_loctl(struct bcm43xx_wldev *dev,
+struct bcm43xx_loctl * bcm43xx_get_lo_g_ctl(struct bcm43xx_wldev *dev,
 					 const struct bcm43xx_rfatt *rfatt,
 					 const struct bcm43xx_bbatt *bbatt);
 
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -2188,7 +2188,7 @@ static void bcm43xx_periodic_every120sec
 
 static void bcm43xx_periodic_every60sec(struct bcm43xx_wldev *dev)
 {
-	bcm43xx_loctl_mark_all_unused(dev);
+	bcm43xx_lo_g_ctl_mark_all_unused(dev);
 	if (dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_RSSI) {
 		bcm43xx_mac_suspend(dev);
 		bcm43xx_calc_nrssi_slope(dev);
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -371,13 +371,13 @@ void bcm43xx_gphy_dc_lt_init(struct bcm4
 		rf_offset = i / lo->rfatt_list.len;
 		bb_offset = i % lo->rfatt_list.len;
 
-		loctl0 = bcm43xx_get_loctl(dev, &lo->rfatt_list.list[rf_offset],
+		loctl0 = bcm43xx_get_lo_g_ctl(dev, &lo->rfatt_list.list[rf_offset],
 					   &lo->bbatt_list.list[bb_offset]);
 		if (i + 1 < lo->rfatt_list.len * lo->bbatt_list.len) {
 			rf_offset = (i + 1) / lo->rfatt_list.len;
 			bb_offset = (i + 1) % lo->rfatt_list.len;
 
-			loctl1 = bcm43xx_get_loctl(dev, &lo->rfatt_list.list[rf_offset],
+			loctl1 = bcm43xx_get_lo_g_ctl(dev, &lo->rfatt_list.list[rf_offset],
 						   &lo->bbatt_list.list[bb_offset]);
 		} else
 			loctl1 = loctl0;
@@ -1329,7 +1329,7 @@ static void bcm43xx_phy_initg(struct bcm
 			bcm43xx_phy_write(dev, BCM43xx_PHY_BASE(0x2F), 0x202);
 	}
 	if (phy->gmode) {
-		bcm43xx_lo_adjust(dev);
+		bcm43xx_lo_g_adjust(dev);
 		bcm43xx_phy_write(dev, BCM43xx_PHY_LO_MASK, 0x8078);
 	}
 
@@ -1498,7 +1498,7 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 		radio_att_delta = -(pwr_adjust + 7) >> 3;
 		baseband_att_delta = -(pwr_adjust >> 1) - (4 * radio_att_delta);
 		if ((radio_att_delta == 0) && (baseband_att_delta == 0)) {
-			bcm43xx_loctl_mark_cur_used(dev);
+			bcm43xx_lo_g_ctl_mark_cur_used(dev);
 			return;
 		}
 
@@ -1560,7 +1560,7 @@ void bcm43xx_phy_xmitpower(struct bcm43x
 		bcm43xx_radio_lock(dev);
 		bcm43xx_radio_set_txpower_bg(dev, baseband_attenuation,
 					     radio_attenuation, txpower);
-		bcm43xx_loctl_mark_cur_used(dev);
+		bcm43xx_lo_g_ctl_mark_cur_used(dev);
 		bcm43xx_radio_unlock(dev);
 		bcm43xx_phy_unlock(dev, phylock_flags);
 		break;
@@ -3788,7 +3788,7 @@ void bcm43xx_radio_set_txpower_bg(struct
 				       & 0xFFF0) | tx_bias);
 	}
 	if (phy->type == BCM43xx_PHYTYPE_G)
-		bcm43xx_lo_adjust(dev);
+		bcm43xx_lo_g_adjust(dev);
 }
 
 u16 bcm43xx_default_baseband_attenuation(struct bcm43xx_wldev *dev)


From stefano.brivio at polimi.it  Mon Apr 23 20:30:41 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 23 Apr 2007 20:30:41 +0200
Subject: [PATCH 1/3] fix A/G PHYs setup and init
In-Reply-To: <20070423202530.2829f309@localhost>
References: <20070423202530.2829f309@localhost>
Message-ID: <20070423203041.46c8e454@localhost>

This patch fixes A/G PHYs setup and initialization routines. Let's move
the so-called workarounds in a separate file, in order to avoid clobbering
bcm43xx_phy.c.

TODO: check this diff:
http://bcm-v4.sipsolutions.net/802.11/PHY/G/workarounds/alt_AGC?action=diff&rev2=4&rev1=3


Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
---

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
===================================================================
--- /dev/null
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
@@ -0,0 +1,649 @@
+/*
+
+  Broadcom BCM43xx wireless driver
+
+  PHY workarounds.
+
+  Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
+  Copyright (c) 2005-2007 Stefano Brivio <st3 at riseup.net>
+  Copyright (c) 2005-2007 Michael Buesch <mbuesch at freenet.de>
+  Copyright (c) 2005, 2006 Danny van Dyk <kugelfang at gentoo.org>
+  Copyright (c) 2005, 2006 Andreas Jaggi <andreas.jaggi at waterwave.ch>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+#include "bcm43xx.h"
+#include "bcm43xx_main.h"
+#include "bcm43xx_tables.h"
+#include "bcm43xx_phy.h"
+#include "bcm43xx_wa.h"
+
+static void bcm43xx_wa_papd(struct bcm43xx_wldev *dev)
+{
+	u16 backup;
+
+	backup = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_PWRDYN2, 0);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_PWRDYN2, 0, 7);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 0, 0);
+	bcm43xx_dummy_transmission(dev);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_PWRDYN2, 0, backup);
+}
+
+static void bcm43xx_wa_auxclipthr(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x8E), 0x3800);
+}
+
+static void bcm43xx_wa_afcdac(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x0035, 0x03FF);
+	bcm43xx_phy_write(dev, 0x0036, 0x0400);
+}
+
+static void bcm43xx_wa_txdc_offset(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DC, 0, 0x0051);
+}
+
+void bcm43xx_wa_initgains(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	bcm43xx_phy_write(dev, BCM43xx_PHY_LNAHPFCTL, 0x1FF9);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_LPFGAINCTL,
+		bcm43xx_phy_read(dev, BCM43xx_PHY_LPFGAINCTL) & 0xFF0F);
+	if (phy->rev <= 2)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_LPFGAIN, 0, 0x1FBF);
+	bcm43xx_radio_write16(dev, 0x0002, 0x1FBF);
+
+	bcm43xx_phy_write(dev, 0x0024, 0x4680);
+	bcm43xx_phy_write(dev, 0x0020, 0x0003);
+	bcm43xx_phy_write(dev, 0x001D, 0x0F40);
+	bcm43xx_phy_write(dev, 0x001F, 0x1C00);
+	if (phy->rev <= 3)
+		bcm43xx_phy_write(dev, 0x002A,
+			(bcm43xx_phy_read(dev, 0x002A) & 0x00FF) | 0x0400);
+	else if (phy->rev == 5) {
+		bcm43xx_phy_write(dev, 0x002A,
+			(bcm43xx_phy_read(dev, 0x002A) & 0x00FF) | 0x1A00);
+		bcm43xx_phy_write(dev, 0x00CC, 0x2121);
+	}
+	if (phy->rev >= 3)
+		bcm43xx_phy_write(dev, 0x00BA, 0x3ED5);
+}
+
+static void bcm43xx_wa_divider(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x002B, bcm43xx_phy_read(dev, 0x002B) & ~0x0100);
+	bcm43xx_phy_write(dev, 0x008E, 0x58C1);
+}
+
+static void bcm43xx_wa_gt(struct bcm43xx_wldev *dev) /* Gain table. */
+{
+	if (dev->phy.rev <= 2) {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN2, 0, 15);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN2, 1, 31);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN2, 2, 42);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN2, 3, 48);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN2, 4, 58);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 0, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 1, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 3, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 4, 21);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 5, 21);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 6, 25);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN1, 0, 3);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN1, 1, 3);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN1, 2, 7);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 0, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 1, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 3, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 4, 21);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 5, 21);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAIN0, 6, 25);
+	}
+}
+
+static void bcm43xx_wa_rssi_lt(struct bcm43xx_wldev *dev) /* RSSI lookup table */
+{
+	int i;
+
+	for (i = 0; i < 8; i++)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_RSSI, i, i + 8);
+	for (i = 8; i < 16; i++)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_RSSI, i, i - 8);
+}
+
+static void bcm43xx_wa_analog(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev > 2) {
+		if (phy->type == BCM43xx_PHYTYPE_G)
+				bcm43xx_phy_write(dev, BCM43xx_PHY_PWRDOWN, 0x1000);
+		else
+				bcm43xx_phy_write(dev, BCM43xx_PHY_PWRDOWN, 0x1808);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 3, 0x1044);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 4, 0x7201);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 6, 0x0040);
+	}
+}
+
+static void bcm43xx_wa_dac(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy.analog == 1)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 1,
+			(bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 1) & ~0x0034) | 0x0008);
+	else
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 1,
+			(bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 1) & ~0x0078) | 0x0010);
+}
+
+static void bcm43xx_wa_fft(struct bcm43xx_wldev *dev) /* Fine frequency table */
+{
+	int i;
+
+	if (dev->phy.type == BCM43xx_PHYTYPE_A)
+		for (i = 0; i < BCM43xx_TAB_FINEFREQA_SIZE; i++)
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DACRFPABB, i, bcm43xx_tab_finefreqa[i]);
+	else
+		for (i = 0; i < BCM43xx_TAB_FINEFREQG_SIZE; i++)
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DACRFPABB, i, bcm43xx_tab_finefreqg[i]);
+}
+
+static void bcm43xx_wa_nft(struct bcm43xx_wldev *dev) /* Noise figure table */
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+	int i;
+
+	if (phy->type == BCM43xx_PHYTYPE_A) {
+		if (phy->rev == 2)
+			for (i = 0; i < BCM43xx_TAB_NOISEA2_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, i, bcm43xx_tab_noisea2[i]);
+		else
+			for (i = 0; i < BCM43xx_TAB_NOISEA3_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, i, bcm43xx_tab_noisea3[i]);
+	} else {
+		if (phy->rev == 1)
+			for (i = 0; i < BCM43xx_TAB_NOISEG1_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, i, bcm43xx_tab_noiseg1[i]);
+		else
+			for (i = 0; i < BCM43xx_TAB_NOISEG2_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, i, bcm43xx_tab_noiseg2[i]);
+	}
+}
+
+static void bcm43xx_wa_rt(struct bcm43xx_wldev *dev) /* Rotor table */
+{
+	int i;
+
+	for (i = 0; i < BCM43xx_TAB_ROTOR_SIZE; i++)
+		bcm43xx_ofdmtab_write32(dev, BCM43xx_OFDMTAB_ROTOR, i, bcm43xx_tab_rotor[i]);
+}
+
+static void bcm43xx_wa_nst(struct bcm43xx_wldev *dev) /* Noise scale table */
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+	int i;
+
+	if (phy->type == BCM43xx_PHYTYPE_A) {
+		if (phy->rev <= 1)
+			for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+							i, 0);
+		else if (phy->rev == 2)
+			for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+							i, bcm43xx_tab_noisescalea2[i]);
+		else if (phy->rev == 3)
+			for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+							i, bcm43xx_tab_noisescalea3[i]);
+		else
+			for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+							i, bcm43xx_tab_noisescaleg3[i]);
+	} else {
+		if (phy->rev >= 6) {
+			if (bcm43xx_phy_read(dev, BCM43xx_PHY_ENCORE) & BCM43xx_PHY_ENCORE_EN)
+				for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+					bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+						i, bcm43xx_tab_noisescaleg3[i]);
+			else
+				for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+					bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+						i, bcm43xx_tab_noisescaleg2[i]);
+		} else {
+			for (i = 0; i < BCM43xx_TAB_NOISESCALE_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_NOISESCALE,
+							i, bcm43xx_tab_noisescaleg1[i]);
+		}
+	}
+}
+
+static void bcm43xx_wa_art(struct bcm43xx_wldev *dev) /* ADV retard table */
+{
+	int i;
+
+	for (i = 0; i < BCM43xx_TAB_RETARD_SIZE; i++)
+			bcm43xx_ofdmtab_write32(dev, BCM43xx_OFDMTAB_ADVRETARD,
+				i, bcm43xx_tab_retard[i]);
+}
+
+static void bcm43xx_wa_txlna_gain(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DC, 13, 0x0000);
+}
+
+static void bcm43xx_wa_crs_reset(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x002C, 0x0064);
+}
+
+static void bcm43xx_wa_2060txlna_gain(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_hf_write(dev, 0x00001000);
+}
+
+static void bcm43xx_wa_lms(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, 0x0055,
+		(bcm43xx_phy_read(dev, 0x0055) & 0xFFC0) | 0x0004);
+}
+
+static void bcm43xx_wa_mixedsignal(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 1, 3);
+}
+
+static void bcm43xx_wa_msst(struct bcm43xx_wldev *dev) /* Min sigma square table */
+{
+	int i;
+
+	for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
+		bcm43xx_ofdmtab_write16(dev, 0x5000 /* FIXME */, i,
+					bcm43xx_tab_sigmasqr1[i]);
+}
+
+static void bcm43xx_wa_iqadc(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy.analog == 4)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 0,
+			bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 0) & ~0xF000);
+}
+
+static void bcm43xx_wa_crs_ed(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev == 1)
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRSTHRES1, 0x4F19);
+	else if (phy->rev == 2) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRSTHRES1_R1, 0x1861);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRSTHRES2_R1, 0x0271);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x28),
+			bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x28)) | 0x0800);
+	} else {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRSTHRES1_R1, 0x0098);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRSTHRES2_R1, 0x0070);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xC9), 0x0080);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x28),
+			bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x28)) | 0x0800);
+	}
+}
+
+static void bcm43xx_wa_crs_thr(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0) & ~0x03C0) | 0xD000);
+}
+
+static void bcm43xx_wa_crs_blank(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x2C), 0x005A);
+}
+
+static void bcm43xx_wa_cck_shiftbits(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CCKSHIFTBITS, 0x0026);
+}
+
+static void bcm43xx_wa_wrssi_offset(struct bcm43xx_wldev *dev)
+{
+	int i;
+
+	if (dev->phy.rev == 1)
+		for (i = 0; i < 32; i++)
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_WRSSI_R1,
+						i, 0x0820);
+	else
+		for (i = 4; i < 20; i++)
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_WRSSI,
+						i, 0x0020);
+}
+
+static void bcm43xx_wa_txpuoff_rxpuon(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_0F, 2, 15);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_0F, 3, 20);
+}
+
+static void bcm43xx_wa_altagc(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (phy->rev == 1) {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1_R1, 0, 254);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1_R1, 1, 13);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1_R1, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1_R1, 3, 25);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, 0, 0x2710);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, 1, 0x9B83);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, 2, 0x9B83);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC2, 3, 0x0F8D);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_LMS, 4);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 0, 254);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 1, 13);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 2, 19);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 3, 25);
+	}
+
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CCKSHIFTBITS_WA,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_CCKSHIFTBITS_WA) & ~0xFF00) | 0x5700);
+	bcm43xx_phy_write(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY) & ~0x007F) | 0x000F);
+	bcm43xx_phy_write(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY,
+		(bcm43xx_phy_read(dev, 0x001A | BCM43xx_PHYROUTE_OFDM_GPHY) & ~0x3F80) | 0x2880);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_ANTWRSETT,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_ANTWRSETT) & ~0xF000) | 0x7000);
+	bcm43xx_radio_write16(dev, 0x007A,
+		bcm43xx_radio_read16(dev, 0x007A) | 0x0008);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_N1P1GAIN,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_N1P1GAIN) & ~0x000F) | 0x0008);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_P1P2GAIN,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_P1P2GAIN) & ~0x0F00) | 0x0800);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x12),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x12)) & ~0x0F00) | 0x0700);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x10),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x10)) & ~0x0F00) | 0x0100);
+	if (phy->rev == 1)
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x12),
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x12)) & ~0x000F) | 0x0007);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x88),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x88)) & ~0x00FF) | 0x001C);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x88),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x88)) & ~0x3F00) | 0x0200);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x96),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x96)) & ~0x00FF) | 0x001C);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x89),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x89)) & ~0x00FF) | 0x0020);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x89),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x89)) & ~0x3F00) | 0x0200);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x82),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x82)) & ~0x00FF) | 0x002E);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x96),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x88)) & ~0xFF00) | 0x1A00);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x81),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x81)) & ~0x00FF) | 0x0028);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x81),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x81)) & ~0xFF00) | 0x2C00);
+	/* FIXME: these two writes could be merged, perhaps. */
+	if (phy->rev == 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_PEAK_COUNT, 0x092B);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x1B),
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x1B)) & ~0x001E) | 0x0002);
+	} else {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x1B),
+			bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x1B)) & ~0x001E);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x1F), 0x287A);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_LPFGAINCTL,
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_LPFGAINCTL) & ~0x000F) | 0x0004);
+		if (phy->rev >= 6) {
+			bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x22), 0x287A);
+			bcm43xx_phy_write(dev, BCM43xx_PHY_LPFGAINCTL,
+				(bcm43xx_phy_read(dev, BCM43xx_PHY_LPFGAINCTL) & ~0xF000) | 0x3000);
+		}
+	}
+	bcm43xx_phy_write(dev, BCM43xx_PHY_DIVSRCHIDX,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_DIVSRCHIDX) & 0x7F7F) | 0x7874);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x8E) | BCM43xx_PHYROUTE_OFDM_GPHY, 0x1C00);
+	if (phy->rev == 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_DIVSRCHIDX,
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_DIVSRCHIDX) & ~0x0F00) | 0x0600);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x8B), 0x005E);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_ANTWRSETT,
+			(bcm43xx_phy_read(dev, BCM43xx_PHY_ANTWRSETT) & ~0x00FF) | 0x001E);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x8D), 0x0002);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3_R1, 0, 0);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3_R1, 1, 7);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3_R1, 2, 16);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3_R1, 3, 28);
+	} else {
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3, 0, 0);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3, 1, 7);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3, 2, 16);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC3, 3, 28);
+	}
+	if (phy->rev >= 6)
+	{
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x26),
+			bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x26)) & ~0x0003);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x26),
+			bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x26)) & ~0x1000);
+	}
+}
+
+static void bcm43xx_wa_tr_ltov(struct bcm43xx_wldev *dev) /* TR Lookup Table Original Values */
+{
+	bcm43xx_gtab_write(dev, BCM43xx_GTAB_ORIGTR, 0, 0xC480);
+}
+
+static void bcm43xx_wa_cpll_nonpilot(struct bcm43xx_wldev *dev)
+{
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_11, 0, 0);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_11, 1, 0);
+}
+
+static void bcm43xx_wa_rssi_adc(struct bcm43xx_wldev *dev)
+{
+	if (dev->phy.analog == 4)
+		bcm43xx_phy_write(dev, 0x00DC, 0x7454);
+}
+
+static void bcm43xx_wa_boards_a(struct bcm43xx_wldev *dev)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+
+	if (bus->board_vendor == SSB_BOARDVENDOR_BCM &&
+	    bus->board_type == SSB_BOARD_BU4306 &&
+	    bus->board_rev < 0x30) {
+		bcm43xx_phy_write(dev, 0x0010, 0xE000);
+		bcm43xx_phy_write(dev, 0x0013, 0x0140);
+		bcm43xx_phy_write(dev, 0x0014, 0x0280);
+	} else {
+		if (bus->board_type == SSB_BOARD_MP4318 &&
+		    bus->board_rev < 0x20) {
+			bcm43xx_phy_write(dev, 0x0013, 0x0210);
+			bcm43xx_phy_write(dev, 0x0014, 0x0840);
+		} else {
+			bcm43xx_phy_write(dev, 0x0013, 0x0140);
+			bcm43xx_phy_write(dev, 0x0014, 0x0280);
+		}
+		if (dev->phy.rev <= 4)
+			bcm43xx_phy_write(dev, 0x0010, 0xE000);
+		else
+			bcm43xx_phy_write(dev, 0x0010, 0x2000);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DC, 1, 0x0039);
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 7, 0x0040);
+	}
+}
+
+static void bcm43xx_wa_boards_g(struct bcm43xx_wldev *dev)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (bus->board_vendor != SSB_BOARDVENDOR_BCM ||
+	    bus->board_type != SSB_BOARD_BU4306 ||
+	    bus->board_rev != 0x17) {
+		if (phy->rev < 2) {
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX_R1, 1, 0x0002);
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX_R1, 2, 0x0001);
+		} else {
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 1, 0x0002);
+			bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 2, 0x0001);
+			if (bus->sprom.r1.boardflags_lo & BCM43xx_BFL_EXTLNA &&
+			    phy->rev >= 7) {
+				bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x11),
+					bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x11)) & 0xF7FF);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0020, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0021, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0022, 0x0001);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0023, 0x0000);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0000, 0x0000);
+				bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_GAINX, 0x0003, 0x0002);
+			}
+		}
+	}
+	if (bus->sprom.r1.boardflags_lo & BCM43xx_BFL_FEM)
+	{
+		bcm43xx_phy_write(dev, BCM43xx_PHY_GTABCTL, 0x3120);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_GTABDATA, 0xC480);
+	}
+}
+
+void bcm43xx_wa_all(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (unlikely(phy->type == BCM43xx_PHYTYPE_A)) {
+		switch (phy->rev) {
+		case 2:
+			bcm43xx_wa_papd(dev);
+			bcm43xx_wa_auxclipthr(dev);
+			bcm43xx_wa_afcdac(dev);
+			bcm43xx_wa_txdc_offset(dev);
+			bcm43xx_wa_initgains(dev);
+			bcm43xx_wa_divider(dev);
+			bcm43xx_wa_gt(dev);
+			bcm43xx_wa_rssi_lt(dev);
+			bcm43xx_wa_analog(dev);
+			bcm43xx_wa_dac(dev);
+			bcm43xx_wa_fft(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_rt(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_art(dev);
+			bcm43xx_wa_txlna_gain(dev);
+			bcm43xx_wa_crs_reset(dev);
+			bcm43xx_wa_2060txlna_gain(dev);
+			bcm43xx_wa_lms(dev);
+			break;
+		case 3:
+			bcm43xx_wa_papd(dev);
+			bcm43xx_wa_mixedsignal(dev);
+			bcm43xx_wa_rssi_lt(dev);
+			bcm43xx_wa_txdc_offset(dev);
+			bcm43xx_wa_initgains(dev);
+			bcm43xx_wa_dac(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_msst(dev);
+			bcm43xx_wa_analog(dev);
+			bcm43xx_wa_gt(dev);
+			bcm43xx_wa_txpuoff_rxpuon(dev);
+			bcm43xx_wa_txlna_gain(dev);
+			break;
+		case 5:
+			bcm43xx_wa_iqadc(dev);
+		case 6:
+			bcm43xx_wa_papd(dev);
+			bcm43xx_wa_rssi_lt(dev);
+			bcm43xx_wa_txdc_offset(dev);
+			bcm43xx_wa_initgains(dev);
+			bcm43xx_wa_dac(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_msst(dev);
+			bcm43xx_wa_analog(dev);
+			bcm43xx_wa_gt(dev);
+			bcm43xx_wa_txpuoff_rxpuon(dev);
+			bcm43xx_wa_txlna_gain(dev);
+			break;
+		case 7:
+			bcm43xx_wa_iqadc(dev);
+			bcm43xx_wa_papd(dev);
+			bcm43xx_wa_rssi_lt(dev);
+			bcm43xx_wa_txdc_offset(dev);
+			bcm43xx_wa_initgains(dev);
+			bcm43xx_wa_dac(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_msst(dev);
+			bcm43xx_wa_analog(dev);
+			bcm43xx_wa_gt(dev);
+			bcm43xx_wa_txpuoff_rxpuon(dev);
+			bcm43xx_wa_txlna_gain(dev);
+			bcm43xx_wa_rssi_adc(dev);
+		default:
+			assert(0);
+		}
+		bcm43xx_wa_boards_a(dev);
+	} else { /* No N PHY support so far */
+		switch (phy->rev) {
+		case 1:
+			bcm43xx_wa_crs_ed(dev);
+			bcm43xx_wa_crs_thr(dev);
+			bcm43xx_wa_crs_blank(dev);
+			bcm43xx_wa_cck_shiftbits(dev);
+			bcm43xx_wa_fft(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_rt(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_art(dev);
+			bcm43xx_wa_wrssi_offset(dev);
+			bcm43xx_wa_altagc(dev);
+			break;
+		case 2:
+		case 6:
+		case 7:
+		case 8:
+			bcm43xx_wa_tr_ltov(dev);
+			bcm43xx_wa_crs_ed(dev);
+			bcm43xx_wa_rssi_lt(dev);
+			bcm43xx_wa_nft(dev);
+			bcm43xx_wa_nst(dev);
+			bcm43xx_wa_msst(dev);
+			bcm43xx_wa_wrssi_offset(dev);
+			bcm43xx_wa_altagc(dev);
+			bcm43xx_wa_analog(dev);
+			bcm43xx_wa_txpuoff_rxpuon(dev);
+			break;
+		default:
+			assert(0);
+		}
+		bcm43xx_wa_boards_g(dev);
+	}
+
+	bcm43xx_wa_cpll_nonpilot(dev);
+}
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
===================================================================
--- /dev/null
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
@@ -0,0 +1,7 @@
+#ifndef BCM43xx_WA_H_
+#define BCM43xx_WA_H_
+
+void bcm43xx_wa_initgains(struct bcm43xx_wldev *dev);
+void bcm43xx_wa_all(struct bcm43xx_wldev *dev);
+
+#endif /* BCM43xx_WA_H_ */
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.c
@@ -230,7 +230,7 @@ const u16 bcm43xx_tab_noisea2[] = {
 };
 
 const u16 bcm43xx_tab_noisea3[] = {
-	0x4C4C, 0x4C4C, 0x4C4C, 0x2D36,
+	0x5E5E, 0x5E5E, 0x5E5E, 0x3F48,
 	0x4C4C, 0x4C4C, 0x4C4C, 0x2D36,
 };
 
@@ -244,6 +244,26 @@ const u16 bcm43xx_tab_noiseg2[] = {
 	0x0000, 0x0000, 0x0000, 0x0000,
 };
 
+const u16 bcm43xx_tab_noisescalea2[] = {
+	0x6767, 0x6767, 0x6767, 0x6767, /* 0 */
+	0x6767, 0x6767, 0x6767, 0x6767,
+	0x6767, 0x6767, 0x6767, 0x6767,
+	0x6767, 0x6700, 0x6767, 0x6767,
+	0x6767, 0x6767, 0x6767, 0x6767, /* 16 */
+	0x6767, 0x6767, 0x6767, 0x6767,
+	0x6767, 0x6767, 0x0067,
+};
+
+const u16 bcm43xx_tab_noisescalea3[] = {
+	0x2323, 0x2323, 0x2323, 0x2323, /* 0 */
+	0x2323, 0x2323, 0x2323, 0x2323,
+	0x2323, 0x2323, 0x2323, 0x2323,
+	0x2323, 0x2300, 0x2323, 0x2323,
+	0x2323, 0x2323, 0x2323, 0x2323, /* 16 */
+	0x2323, 0x2323, 0x2323, 0x2323,
+	0x2323, 0x2323, 0x0023,
+};
+
 const u16 bcm43xx_tab_noisescaleg1[] = {
 	0x6C77, 0x5162, 0x3B40, 0x3335, /* 0 */
 	0x2F2D, 0x2A2A, 0x2527, 0x1F21,
@@ -308,6 +328,27 @@ const u16 bcm43xx_tab_sigmasqr2[] = {
 	0x00DE,
 };
 
+const u16 bcm43xx_tab_rssiagc1[] = {
+	0xFFF8, 0xFFF8, 0xFFF8, 0xFFF8, /* 0 */
+	0xFFF8, 0xFFF9, 0xFFFC, 0xFFFE,
+	0xFFF8, 0xFFF8, 0xFFF8, 0xFFF8,
+	0xFFF8, 0xFFF8, 0xFFF8, 0xFFF8,
+};
+
+const u16 bcm43xx_tab_rssiagc2[] = {
+	0x0820, 0x0820, 0x0920, 0x0C38, /* 0 */
+	0x0820, 0x0820, 0x0820, 0x0820,
+	0x0820, 0x0820, 0x0920, 0x0A38,
+	0x0820, 0x0820, 0x0820, 0x0820,
+	0x0820, 0x0820, 0x0920, 0x0A38, /* 16 */
+	0x0820, 0x0820, 0x0820, 0x0820,
+	0x0820, 0x0820, 0x0920, 0x0A38,
+	0x0820, 0x0820, 0x0820, 0x0820,
+	0x0820, 0x0820, 0x0920, 0x0A38, /* 32 */
+	0x0820, 0x0820, 0x0820, 0x0820,
+	0x0820, 0x0820, 0x0920, 0x0A38,
+	0x0820, 0x0820, 0x0820, 0x0820,
+};
 
 static inline void assert_sizes(void)
 {
@@ -319,34 +360,54 @@ static inline void assert_sizes(void)
 	BUILD_BUG_ON(BCM43xx_TAB_NOISEA3_SIZE != ARRAY_SIZE(bcm43xx_tab_noisea3));
 	BUILD_BUG_ON(BCM43xx_TAB_NOISEG1_SIZE != ARRAY_SIZE(bcm43xx_tab_noiseg1));
 	BUILD_BUG_ON(BCM43xx_TAB_NOISEG2_SIZE != ARRAY_SIZE(bcm43xx_tab_noiseg2));
-	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALEG_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg1));
-	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALEG_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg2));
-	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALEG_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg3));
+	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALE_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg1));
+	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALE_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg2));
+	BUILD_BUG_ON(BCM43xx_TAB_NOISESCALE_SIZE != ARRAY_SIZE(bcm43xx_tab_noisescaleg3));
 	BUILD_BUG_ON(BCM43xx_TAB_SIGMASQR_SIZE != ARRAY_SIZE(bcm43xx_tab_sigmasqr1));
 	BUILD_BUG_ON(BCM43xx_TAB_SIGMASQR_SIZE != ARRAY_SIZE(bcm43xx_tab_sigmasqr2));
+	BUILD_BUG_ON(BCM43xx_TAB_RSSIAGC1_SIZE != ARRAY_SIZE(bcm43xx_tab_rssiagc1));
+	BUILD_BUG_ON(BCM43xx_TAB_RSSIAGC2_SIZE != ARRAY_SIZE(bcm43xx_tab_rssiagc2));
 }
 
 
 u16 bcm43xx_ofdmtab_read16(struct bcm43xx_wldev *dev, u16 table, u16 offset)
 {
+	struct bcm43xx_phy *phy = &dev->phy;
+
 	assert_sizes();
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+	if (table + offset - 1 != phy->ofdm_addr || phy->ofdm_valid != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+		phy->ofdm_valid = 1;
+	}
+	phy->ofdm_addr = table + offset;
+
 	return bcm43xx_phy_read(dev, BCM43xx_PHY_OTABLEI);
 }
 
 void bcm43xx_ofdmtab_write16(struct bcm43xx_wldev *dev, u16 table,
 			     u16 offset, u16 value)
 {
-	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (table + offset - 1 != phy->ofdm_addr || phy->ofdm_valid != 2) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+		phy->ofdm_valid = 2;
+	}
+	phy->ofdm_addr = table + offset;
 	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLEI, value);
 }
 
 u32 bcm43xx_ofdmtab_read32(struct bcm43xx_wldev *dev, u16 table, u16 offset)
 {
+	struct bcm43xx_phy *phy = &dev->phy;
 	u32 ret;
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+	if (table + offset - 1 != phy->ofdm_addr || phy->ofdm_valid != 1) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+		phy->ofdm_valid = 1;
+	}
+	phy->ofdm_addr = table + offset;
 	ret = bcm43xx_phy_read(dev, BCM43xx_PHY_OTABLEQ);
 	ret <<= 16;
 	ret |= bcm43xx_phy_read(dev, BCM43xx_PHY_OTABLEI);
@@ -357,9 +418,15 @@ u32 bcm43xx_ofdmtab_read32(struct bcm43x
 void bcm43xx_ofdmtab_write32(struct bcm43xx_wldev *dev, u16 table,
 			     u16 offset, u32 value)
 {
-	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLEI, value);
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	if (table + offset - 1 != phy->ofdm_addr || phy->ofdm_valid != 2) {
+		bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLECTL, table + offset);
+		phy->ofdm_valid = 2;
+	}
+	phy->ofdm_addr = table + offset;
 	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLEQ, (value >> 16));
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OTABLEI, value);
 }
 
 u16 bcm43xx_gtab_read(struct bcm43xx_wldev *dev, u16 table, u16 offset)
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h
@@ -585,6 +585,10 @@ struct bcm43xx_phy {
 	u16 lofcal;
 
 	u16 initval;//FIXME rename?
+
+	/* OFDM address read/write caching for hardware auto-increment. */
+	u16 ofdm_addr;
+	u8 ofdm_valid; /* 0: invalid, 1: read, 2: write */
 };
 
 /* Data structures for DMA transmission, per 80211 core. */
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3084,6 +3084,9 @@ static void setup_struct_phy_for_init(st
 	spin_lock_init(&phy->lock);
 	phy->interfmode = BCM43xx_INTERFMODE_NONE;
 	phy->channel = 0xFF;
+
+	/* OFDM address caching. */
+	phy->ofdm_valid = 0;
 }
 
 static void setup_struct_wldev_for_init(struct bcm43xx_wldev *dev)
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.h
@@ -28,8 +28,11 @@ struct bcm43xx_wldev;
 #define BCM43xx_PHY_PWRDOWN		BCM43xx_PHY_OFDM(0x03)	/* Powerdown */
 #define BCM43xx_PHY_CRSTHRES1		BCM43xx_PHY_OFDM(0x06)	/* CRS Threshold 1 */
 #define BCM43xx_PHY_LNAHPFCTL		BCM43xx_PHY_OFDM(0x1C)	/* LNA/HPF control */
+#define BCM43xx_PHY_LPFGAINCTL		BCM43xx_PHY_OFDM(0x20)	/* LPF Gain control */
 #define BCM43xx_PHY_ADIVRELATED		BCM43xx_PHY_OFDM(0x27)	/* FIXME rename */
 #define BCM43xx_PHY_CRS0		BCM43xx_PHY_OFDM(0x29)
+#define  BCM43xx_PHY_CRS0_EN		0x4000
+#define BCM43xx_PHY_PEAK_COUNT		BCM43xx_PHY_OFDM(0x30)
 #define BCM43xx_PHY_ANTDWELL		BCM43xx_PHY_OFDM(0x2B)	/* Antenna dwell */
 #define  BCM43xx_PHY_ANTDWELL_AUTODIV1	0x0100			/* Automatic RX diversity start antenna */
 #define BCM43xx_PHY_ENCORE		BCM43xx_PHY_OFDM(0x49)	/* "Encore" (RangeMax / BroadRange) */
@@ -38,6 +41,7 @@ struct bcm43xx_wldev;
 #define BCM43xx_PHY_OFDM61		BCM43xx_PHY_OFDM(0x61)	/* FIXME rename */
 #define  BCM43xx_PHY_OFDM61_10		0x0010			/* FIXME rename */
 #define BCM43xx_PHY_IQBAL		BCM43xx_PHY_OFDM(0x69)	/* I/Q balance */
+#define BCM43xx_PHY_BBTXDC_BIAS		BCM43xx_PHY_OFDM(0x6B)	/* Baseband TX DC bias */
 #define BCM43xx_PHY_OTABLECTL		BCM43xx_PHY_OFDM(0x72)	/* OFDM table control (see below) */
 #define  BCM43xx_PHY_OTABLEOFF		0x03FF			/* OFDM table offset (see below) */
 #define  BCM43xx_PHY_OTABLENR		0xFC00			/* OFDM table number (see below) */
@@ -45,6 +49,9 @@ struct bcm43xx_wldev;
 #define BCM43xx_PHY_OTABLEI		BCM43xx_PHY_OFDM(0x73)	/* OFDM table data I */
 #define BCM43xx_PHY_OTABLEQ		BCM43xx_PHY_OFDM(0x74)	/* OFDM table data Q */
 #define BCM43xx_PHY_HPWR_TSSICTL	BCM43xx_PHY_OFDM(0x78)	/* Hardware power TSSI control */
+#define BCM43xx_PHY_ADCCTL		BCM43xx_PHY_OFDM(0x7A)	/* ADC control */
+#define BCM43xx_PHY_IDLE_TSSI		BCM43xx_PHY_OFDM(0x7B)
+#define BCM43xx_PHY_A_TEMP_SENSE	BCM43xx_PHY_OFDM(0x7C)	/* A PHY temperature sense */
 #define BCM43xx_PHY_NRSSITHRES		BCM43xx_PHY_OFDM(0x8A)	/* NRSSI threshold */
 #define BCM43xx_PHY_ANTWRSETT		BCM43xx_PHY_OFDM(0x8C)	/* Antenna WR settle */
 #define  BCM43xx_PHY_ANTWRSETT_ARXDIV	0x2000			/* Automatic RX diversity enabled */
@@ -55,6 +62,8 @@ struct bcm43xx_wldev;
 #define BCM43xx_PHY_N1N2GAIN		BCM43xx_PHY_OFDM(0xA2)
 #define BCM43xx_PHY_CLIPTHRES		BCM43xx_PHY_OFDM(0xA3)
 #define BCM43xx_PHY_CLIPN1P2THRES	BCM43xx_PHY_OFDM(0xA4)
+#define BCM43xx_PHY_CCKSHIFTBITS_WA	BCM43xx_PHY_OFDM(0xA5)	/* CCK shiftbits workaround, FIXME rename */
+#define BCM43xx_PHY_CCKSHIFTBITS	BCM43xx_PHY_OFDM(0xA7)  /* FIXME rename */
 #define BCM43xx_PHY_DIVSRCHIDX		BCM43xx_PHY_OFDM(0xA8)	/* Divider search gain/index */
 #define BCM43xx_PHY_CLIPP2THRES		BCM43xx_PHY_OFDM(0xA9)
 #define BCM43xx_PHY_CLIPP3THRES		BCM43xx_PHY_OFDM(0xAA)
@@ -128,10 +137,11 @@ struct bcm43xx_wldev;
 #define BCM43xx_OFDMTAB_DC		BCM43xx_OFDMTAB(0x0E, 7)
 #define BCM43xx_OFDMTAB_PWRDYN2		BCM43xx_OFDMTAB(0x0E, 12)
 #define BCM43xx_OFDMTAB_LNAGAIN		BCM43xx_OFDMTAB(0x0E, 13)
-//TODO
+#define BCM43xx_OFDMTAB_UNKNOWN_0F	BCM43xx_OFDMTAB(0x0F, 0)	//TODO rename
+#define BCM43xx_OFDMTAB_UNKNOWN_APHY	BCM43xx_OFDMTAB(0x0F, 7)	//TODO rename
 #define BCM43xx_OFDMTAB_LPFGAIN		BCM43xx_OFDMTAB(0x0F, 12)
 #define BCM43xx_OFDMTAB_RSSI		BCM43xx_OFDMTAB(0x10, 0)
-//TODO
+#define BCM43xx_OFDMTAB_UNKNOWN_11	BCM43xx_OFDMTAB(0x11, 4)	//TODO rename
 #define BCM43xx_OFDMTAB_AGC1_R1		BCM43xx_OFDMTAB(0x13, 0)
 #define BCM43xx_OFDMTAB_GAINX_R1	BCM43xx_OFDMTAB(0x14, 0)	//TODO rename
 #define BCM43xx_OFDMTAB_MINSIGSQ	BCM43xx_OFDMTAB(0x14, 1)
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_tables.h
@@ -17,12 +17,18 @@ extern const u16 bcm43xx_tab_noisea3[];
 extern const u16 bcm43xx_tab_noiseg1[];
 #define BCM43xx_TAB_NOISEG2_SIZE	8
 extern const u16 bcm43xx_tab_noiseg2[];
-#define BCM43xx_TAB_NOISESCALEG_SIZE	27
+#define BCM43xx_TAB_NOISESCALE_SIZE	27
+extern const u16 bcm43xx_tab_noisescalea2[];
+extern const u16 bcm43xx_tab_noisescalea3[];
 extern const u16 bcm43xx_tab_noisescaleg1[];
 extern const u16 bcm43xx_tab_noisescaleg2[];
 extern const u16 bcm43xx_tab_noisescaleg3[];
 #define BCM43xx_TAB_SIGMASQR_SIZE	53
 extern const u16 bcm43xx_tab_sigmasqr1[];
 extern const u16 bcm43xx_tab_sigmasqr2[];
+#define BCM43xx_TAB_RSSIAGC1_SIZE	16
+extern const u16 bcm43xx_tab_rssiagc1[];
+#define BCM43xx_TAB_RSSIAGC2_SIZE	48
+extern const u16 bcm43xx_tab_rssiagc2[];
 
 #endif /* BCM43xx_TABLES_H_ */
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -555,393 +555,97 @@ static void bcm43xx_phy_init_pctl(struct
 	bcm43xx_shm_clear_tssi(dev);
 }
 
-static void bcm43xx_phy_agcsetup(struct bcm43xx_wldev *dev)
+static void bcm43xx_phy_rssiagc(struct bcm43xx_wldev *dev, u8 enable)
 {
-	struct bcm43xx_phy *phy = &dev->phy;
-	u16 offset = 0x0000;
-
-	if (phy->rev == 1)
-		offset = 0x4C00;
-
-	bcm43xx_ofdmtab_write16(dev, offset, 0, 0x00FE);
-	bcm43xx_ofdmtab_write16(dev, offset, 1, 0x000D);
-	bcm43xx_ofdmtab_write16(dev, offset, 2, 0x0013);
-	bcm43xx_ofdmtab_write16(dev, offset, 3, 0x0019);
-
-	if (phy->rev == 1) {
-		bcm43xx_ofdmtab_write16(dev, 0x1800, 0, 0x2710);
-		bcm43xx_ofdmtab_write16(dev, 0x1801, 0, 0x9B83);
-		bcm43xx_ofdmtab_write16(dev, 0x1802, 0, 0x9B83);
-		bcm43xx_ofdmtab_write16(dev, 0x1803, 0, 0x0F8D);
-		bcm43xx_phy_write(dev, 0x0455, 0x0004);
-	}
-
-	bcm43xx_phy_write(dev, 0x04A5,
-			  (bcm43xx_phy_read(dev, 0x04A5)
-			   & 0x00FF) | 0x5700);
-	bcm43xx_phy_write(dev, 0x041A,
-			  (bcm43xx_phy_read(dev, 0x041A)
-			   & 0xFF80) | 0x000F);
-	bcm43xx_phy_write(dev, 0x041A,
-			  (bcm43xx_phy_read(dev, 0x041A)
-			   & 0xC07F) | 0x2B80);
-	bcm43xx_phy_write(dev, 0x048C,
-			  (bcm43xx_phy_read(dev, 0x048C)
-			   & 0xF0FF) | 0x0300);
-
-	bcm43xx_radio_write16(dev, 0x007A,
-			      bcm43xx_radio_read16(dev, 0x007A)
-			      | 0x0008);
-
-	bcm43xx_phy_write(dev, 0x04A0,
-			  (bcm43xx_phy_read(dev, 0x04A0)
-			   & 0xFFF0) | 0x0008);
-	bcm43xx_phy_write(dev, 0x04A1,
-			  (bcm43xx_phy_read(dev, 0x04A1)
-			   & 0xF0FF) | 0x0600);
-	bcm43xx_phy_write(dev, 0x04A2,
-			  (bcm43xx_phy_read(dev, 0x04A2)
-			   & 0xF0FF) | 0x0700);
-	bcm43xx_phy_write(dev, 0x04A0,
-			  (bcm43xx_phy_read(dev, 0x04A0)
-			   & 0xF0FF) | 0x0100);
-
-	if (phy->rev == 1) {
-		bcm43xx_phy_write(dev, 0x04A2,
-				  (bcm43xx_phy_read(dev, 0x04A2)
-				   & 0xFFF0) | 0x0007);
-	}
-
-	bcm43xx_phy_write(dev, 0x0488,
-			  (bcm43xx_phy_read(dev, 0x0488)
-			   & 0xFF00) | 0x001C);
-	bcm43xx_phy_write(dev, 0x0488,
-			  (bcm43xx_phy_read(dev, 0x0488)
-			   & 0xC0FF) | 0x0200);
-	bcm43xx_phy_write(dev, 0x0496,
-			  (bcm43xx_phy_read(dev, 0x0496)
-			   & 0xFF00) | 0x001C);
-	bcm43xx_phy_write(dev, 0x0489,
-			  (bcm43xx_phy_read(dev, 0x0489)
-			   & 0xFF00) | 0x0020);
-	bcm43xx_phy_write(dev, 0x0489,
-			  (bcm43xx_phy_read(dev, 0x0489)
-			   & 0xC0FF) | 0x0200);
-	bcm43xx_phy_write(dev, 0x0482,
-			  (bcm43xx_phy_read(dev, 0x0482)
-			   & 0xFF00) | 0x002E);
-	bcm43xx_phy_write(dev, 0x0496,
-			  (bcm43xx_phy_read(dev, 0x0496)
-			   & 0x00FF) | 0x1A00);
-	bcm43xx_phy_write(dev, 0x0481,
-			  (bcm43xx_phy_read(dev, 0x0481)
-			   & 0xFF00) | 0x0028);
-	bcm43xx_phy_write(dev, 0x0481,
-			  (bcm43xx_phy_read(dev, 0x0481)
-			   & 0x00FF) | 0x2C00);
-
-	if (phy->rev == 1) {
-		bcm43xx_phy_write(dev, 0x0430, 0x092B);
-		bcm43xx_phy_write(dev, 0x041B,
-				  (bcm43xx_phy_read(dev, 0x041B)
-				   & 0xFFE1) | 0x0002);
-	} else {
-		bcm43xx_phy_write(dev, 0x041B,
-				  bcm43xx_phy_read(dev, 0x041B)
-				  & 0xFFE1);
-		bcm43xx_phy_write(dev, 0x041F, 0x287A);
-		bcm43xx_phy_write(dev, 0x0420,
-				  (bcm43xx_phy_read(dev, 0x0420)
-				   & 0xFFF0) | 0x0004);
-	}
-
-	if (phy->rev < 6) {
-		bcm43xx_phy_write(dev, 0x0422, 0x287A);
-		bcm43xx_phy_write(dev, 0x0420,
-				  (bcm43xx_phy_read(dev, 0x0420)
-				   & 0x0FFF) | 0x3000);
-	}
-
-	bcm43xx_phy_write(dev, 0x04A8,
-			  (bcm43xx_phy_read(dev, 0x04A8)
-			   & 0x8080) | 0x7874);
-	bcm43xx_phy_write(dev, 0x048E, 0x1C00);
-
-	offset = 0x0800;
-	if (phy->rev == 1) {
-		offset = 0x5400;
-		bcm43xx_phy_write(dev, 0x04AB,
-				  (bcm43xx_phy_read(dev, 0x04AB)
-				   & 0xF0FF) | 0x0600);
-		bcm43xx_phy_write(dev, 0x048B, 0x005E);
-		bcm43xx_phy_write(dev, 0x048C,
-				  (bcm43xx_phy_read(dev, 0x048C)
-				   & 0xFF00) | 0x001E);
-		bcm43xx_phy_write(dev, 0x048D, 0x0002);
-	}
-	bcm43xx_ofdmtab_write16(dev, offset, 0, 0x00);
-	bcm43xx_ofdmtab_write16(dev, offset, 1, 0x07);
-	bcm43xx_ofdmtab_write16(dev, offset, 2, 0x10);
-	bcm43xx_ofdmtab_write16(dev, offset, 3, 0x1C);
-
-	if (phy->rev >= 6) {
-		bcm43xx_phy_write(dev, 0x0426,
-				  bcm43xx_phy_read(dev, 0x0426)
-				  & 0xFFFC);
-		bcm43xx_phy_write(dev, 0x0426,
-				  bcm43xx_phy_read(dev, 0x0426)
-				  & 0xEFFF);
-	}
-}
-
-static void bcm43xx_phy_setupg(struct bcm43xx_wldev *dev)
-{
-	struct ssb_bus *bus = dev->dev->bus;
-	struct bcm43xx_phy *phy = &dev->phy;
-	u16 i;
-
-	assert(phy->type == BCM43xx_PHYTYPE_G);
-	if (phy->rev == 1) {
-		bcm43xx_phy_write(dev, 0x0406, 0x4F19);
-		bcm43xx_phy_write(dev, BCM43xx_PHY_G_CRS,
-				  (bcm43xx_phy_read(dev, BCM43xx_PHY_G_CRS) & 0xFC3F) | 0x0340);
-		bcm43xx_phy_write(dev, 0x042C, 0x005A);
-		bcm43xx_phy_write(dev, 0x0427, 0x001A);
-
-		for (i = 0; i < BCM43xx_TAB_FINEFREQG_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x5800, i, bcm43xx_tab_finefreqg[i]);
-		for (i = 0; i < BCM43xx_TAB_NOISEG1_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1800, i, bcm43xx_tab_noiseg1[i]);
-		for (i = 0; i < BCM43xx_TAB_ROTOR_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x2000, i, bcm43xx_tab_rotor[i]);
-	} else {
-		/* nrssi values are signed 6-bit values. Not sure why we write 0x7654 here... */
-		bcm43xx_nrssi_hw_write(dev, 0xBA98, (s16)0x7654);
-
-		if (phy->rev == 2) {
-			bcm43xx_phy_write(dev, 0x04C0, 0x1861);
-			bcm43xx_phy_write(dev, 0x04C1, 0x0271);
-		} else if (phy->rev > 2) {
-			bcm43xx_phy_write(dev, 0x04C0, 0x0098);
-			bcm43xx_phy_write(dev, 0x04C1, 0x0070);
-			bcm43xx_phy_write(dev, 0x04C9, 0x0080);
-		}
-		bcm43xx_phy_write(dev, 0x042B, bcm43xx_phy_read(dev, 0x042B) | 0x800);
-
-		for (i = 0; i < 64; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x4000, i, i);
-		for (i = 0; i < BCM43xx_TAB_NOISEG2_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1800, i, bcm43xx_tab_noiseg2[i]);
-	}
-
-	if (phy->rev <= 2)
-		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg1[i]);
-	else if ((phy->rev == 7) && (bcm43xx_phy_read(dev, 0x0449) & 0x0200))
-		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg3[i]);
-	else
-		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg2[i]);
-
-	if (phy->rev == 2)
-		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr1[i]);
-	else if ((phy->rev > 2) && (phy->rev <= 7))
-		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr2[i]);
-
-	if (phy->rev == 1) {
-		for (i = 0; i < BCM43xx_TAB_RETARD_SIZE; i++)
-			bcm43xx_ofdmtab_write32(dev, 0x2400, i, bcm43xx_tab_retard[i]);
-		for (i = 0; i < 4; i++) {
-			bcm43xx_ofdmtab_write16(dev, 0x5404, i, 0x0020);
-			bcm43xx_ofdmtab_write16(dev, 0x5408, i, 0x0020);
-			bcm43xx_ofdmtab_write16(dev, 0x540C, i, 0x0020);
-			bcm43xx_ofdmtab_write16(dev, 0x5410, i, 0x0020);
-		}
-		bcm43xx_phy_agcsetup(dev);
-
-		if ((bus->board_vendor == SSB_BOARDVENDOR_BCM) &&
-		    (bus->board_type == SSB_BOARD_BU4306) &&
-		    (bus->board_rev == 0x17))
-			return;
-
-		bcm43xx_ofdmtab_write16(dev, 0x5001, 0, 0x0002);
-		bcm43xx_ofdmtab_write16(dev, 0x5002, 0, 0x0001);
-	} else {
-		for (i = 0; i <= 0x2F; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1000, i, 0x0820);
-		bcm43xx_phy_agcsetup(dev);
-		bcm43xx_phy_read(dev, 0x0400); /* dummy read */
-		bcm43xx_phy_write(dev, 0x0403, 0x1000);
-		bcm43xx_ofdmtab_write16(dev, 0x3C02, 0, 0x000F);
-		bcm43xx_ofdmtab_write16(dev, 0x3C03, 0, 0x0014);
-
-		if ((bus->board_vendor == SSB_BOARDVENDOR_BCM) &&
-		    (bus->board_type == SSB_BOARD_BU4306) &&
-		    (bus->board_rev == 0x17))
-			return;
-
-		bcm43xx_ofdmtab_write16(dev, 0x0401, 0, 0x0002);
-		bcm43xx_ofdmtab_write16(dev, 0x0402, 0, 0x0001);
-	}
-}
-
-/* Initialize the noisescaletable for APHY */
-static void bcm43xx_phy_init_noisescaletbl(struct bcm43xx_wldev *dev)
-{
-	struct bcm43xx_phy *phy = &dev->phy;
 	int i;
 
-	for (i = 0; i < 12; i++) {
-		if (phy->rev == 2)
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x6767);
+	if (dev->phy.rev < 3) {
+		if (enable)
+			for (i = 0; i < BCM43xx_TAB_RSSIAGC1_SIZE; i++) {
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_LNAHPFGAIN1, i, 0xFFF8);
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_WRSSI, i, 0xFFF8);
+			}
 		else
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x2323);
-	}
-	if (phy->rev == 2)
-		bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x6700);
-	else
-		bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x2300);
-	for (i = 0; i < 11; i++) {
-		if (phy->rev == 2)
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x6767);
+			for (i = 0; i < BCM43xx_TAB_RSSIAGC1_SIZE; i++) {
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_LNAHPFGAIN1, i, bcm43xx_tab_rssiagc1[i]);
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_WRSSI, i, bcm43xx_tab_rssiagc1[i]);
+			}
+	} else {
+		if (enable)
+			for (i = 0; i < BCM43xx_TAB_RSSIAGC1_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_WRSSI, i, 0x0820);
 		else
-			bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x2323);
+			for (i = 0; i < BCM43xx_TAB_RSSIAGC2_SIZE; i++)
+				bcm43xx_ofdmtab_write16(dev,
+					BCM43xx_OFDMTAB_WRSSI, i, bcm43xx_tab_rssiagc2[i]);
 	}
-	if (phy->rev == 2)
-		bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x0067);
-	else
-		bcm43xx_ofdmtab_write16(dev, 0x1400, i, 0x0023);
 }
 
-static void bcm43xx_phy_setupa(struct bcm43xx_wldev *dev)
+static void bcm43xx_phy_ww(struct bcm43xx_wldev *dev)
 {
-	struct bcm43xx_phy *phy = &dev->phy;
-	u16 i;
-
-	assert(phy->type == BCM43xx_PHYTYPE_A);
-	switch (phy->rev) {
-	case 2:
-		bcm43xx_phy_write(dev, 0x008E, 0x3800);
-		bcm43xx_phy_write(dev, 0x0035, 0x03FF);
-		bcm43xx_phy_write(dev, 0x0036, 0x0400);
-
-		bcm43xx_ofdmtab_write16(dev, 0x3807, 0, 0x0051);
-
-		bcm43xx_phy_write(dev, 0x001C, 0x0FF9);
-		bcm43xx_phy_write(dev, 0x0020, bcm43xx_phy_read(dev, 0x0020) & 0xFF0F);
-		bcm43xx_ofdmtab_write16(dev, 0x3C0C, 0, 0x07BF);
-		bcm43xx_radio_write16(dev, 0x0002, 0x07BF);
-
-		bcm43xx_phy_write(dev, 0x0024, 0x4680);
-		bcm43xx_phy_write(dev, 0x0020, 0x0003);
-		bcm43xx_phy_write(dev, 0x001D, 0x0F40);
-		bcm43xx_phy_write(dev, 0x001F, 0x1C00);
-
-		bcm43xx_phy_write(dev, 0x002A,
-				  (bcm43xx_phy_read(dev, 0x002A)
-				   & 0x00FF) | 0x0400);
-		bcm43xx_phy_write(dev, 0x002B,
-				  bcm43xx_phy_read(dev, 0x002B)
-				  & 0xFBFF);
-		bcm43xx_phy_write(dev, 0x008E, 0x58C1);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0803, 0, 0x000F);
-		bcm43xx_ofdmtab_write16(dev, 0x0804, 0, 0x001F);
-		bcm43xx_ofdmtab_write16(dev, 0x0805, 0, 0x002A);
-		bcm43xx_ofdmtab_write16(dev, 0x0805, 0, 0x0030);
-		bcm43xx_ofdmtab_write16(dev, 0x0807, 0, 0x003A);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 0, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 1, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 2, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 3, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 4, 0x0015);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 5, 0x0015);
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 6, 0x0019);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0404, 0, 0x0003);
-		bcm43xx_ofdmtab_write16(dev, 0x0405, 0, 0x0003);
-		bcm43xx_ofdmtab_write16(dev, 0x0406, 0, 0x0007);
-
-		for (i = 0; i < 16; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x4000, i, (0x8 + i) & 0x000F);
-
-		bcm43xx_ofdmtab_write16(dev, 0x3003, 0, 0x1044);
-		bcm43xx_ofdmtab_write16(dev, 0x3004, 0, 0x7201);
-		bcm43xx_ofdmtab_write16(dev, 0x3006, 0, 0x0040);
-		bcm43xx_ofdmtab_write16(dev, 0x3001, 0, (bcm43xx_ofdmtab_read16(dev, 0x3001, 0) & 0x0010) | 0x0008);
-
-		for (i = 0; i < BCM43xx_TAB_FINEFREQA_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x5800, i, bcm43xx_tab_finefreqa[i]);
-		for (i = 0; i < BCM43xx_TAB_NOISEA2_SIZE; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x1800, i, bcm43xx_tab_noisea2[i]);
-		for (i = 0; i < BCM43xx_TAB_ROTOR_SIZE; i++)
-			bcm43xx_ofdmtab_write32(dev, 0x2000, i, bcm43xx_tab_rotor[i]);
-		bcm43xx_phy_init_noisescaletbl(dev);
-		for (i = 0; i < BCM43xx_TAB_RETARD_SIZE; i++)
-			bcm43xx_ofdmtab_write32(dev, 0x2400, i, bcm43xx_tab_retard[i]);
-		break;
-	case 3:
-		for (i = 0; i < 64; i++)
-			bcm43xx_ofdmtab_write16(dev, 0x4000, i, i);
-
-		bcm43xx_ofdmtab_write16(dev, 0x3807, 0, 0x0051);
-
-		bcm43xx_phy_write(dev, 0x001C, 0x0FF9);
-		bcm43xx_phy_write(dev, 0x0020,
-				  bcm43xx_phy_read(dev, 0x0020) & 0xFF0F);
-		bcm43xx_radio_write16(dev, 0x0002, 0x07BF);
-
-		bcm43xx_phy_write(dev, 0x0024, 0x4680);
-		bcm43xx_phy_write(dev, 0x0020, 0x0003);
-		bcm43xx_phy_write(dev, 0x001D, 0x0F40);
-		bcm43xx_phy_write(dev, 0x001F, 0x1C00);
-		bcm43xx_phy_write(dev, 0x002A,
-				  (bcm43xx_phy_read(dev, 0x002A)
-				   & 0x00FF) | 0x0400);
-
-		bcm43xx_ofdmtab_write16(dev, 0x3000, 1,
-				        (bcm43xx_ofdmtab_read16(dev, 0x3000, 1)
-				        & 0x0010) | 0x0008);
-		for (i = 0; i < BCM43xx_TAB_NOISEA3_SIZE; i++) {
-			bcm43xx_ofdmtab_write16(dev, 0x1800, i,
-						bcm43xx_tab_noisea3[i]);
-		}
-		bcm43xx_phy_init_noisescaletbl(dev);
-		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++) {
-			bcm43xx_ofdmtab_write16(dev, 0x5000, i,
-						bcm43xx_tab_sigmasqr1[i]);
-		}
-
-		bcm43xx_phy_write(dev, 0x0003, 0x1808);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0803, 0, 0x000F);
-		bcm43xx_ofdmtab_write16(dev, 0x0804, 0, 0x001F);
-		bcm43xx_ofdmtab_write16(dev, 0x0805, 0, 0x002A);
-		bcm43xx_ofdmtab_write16(dev, 0x0805, 0, 0x0030);
-		bcm43xx_ofdmtab_write16(dev, 0x0807, 0, 0x003A);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0000, 0, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0001, 0, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0002, 0, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0003, 0, 0x0013);
-		bcm43xx_ofdmtab_write16(dev, 0x0004, 0, 0x0015);
-		bcm43xx_ofdmtab_write16(dev, 0x0005, 0, 0x0015);
-		bcm43xx_ofdmtab_write16(dev, 0x0006, 0, 0x0019);
-
-		bcm43xx_ofdmtab_write16(dev, 0x0404, 0, 0x0003);
-		bcm43xx_ofdmtab_write16(dev, 0x0405, 0, 0x0003);
-		bcm43xx_ofdmtab_write16(dev, 0x0406, 0, 0x0007);
+	u16 b, curr_s, best_s = 0xFFFF;
+	int i;
 
-		bcm43xx_ofdmtab_write16(dev, 0x3C02, 0, 0x000F);
-		bcm43xx_ofdmtab_write16(dev, 0x3C03, 0, 0x0014);
-		break;
-	default:
-		assert(0);
-	}
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
+		bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0) & ~BCM43xx_PHY_CRS0_EN);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x1B),
+		bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x1B)) | 0x1000);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x82),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x82)) & 0xF0FF) | 0x0300);
+	bcm43xx_radio_write16(dev, 0x0009,
+		bcm43xx_radio_read16(dev, 0x0009) | 0x0080);
+	bcm43xx_radio_write16(dev, 0x0012,
+		(bcm43xx_radio_read16(dev, 0x0012) & 0xFFFC) | 0x0002);
+	bcm43xx_wa_initgains(dev);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xBA), 0x3ED5);
+	b = bcm43xx_phy_read(dev, BCM43xx_PHY_PWRDOWN);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_PWRDOWN, (b & 0xFFF8) | 0x0005);
+	bcm43xx_radio_write16(dev, 0x0004,
+		bcm43xx_radio_read16(dev, 0x0004) | 0x0004);
+	for (i = 0x10; i <= 0x20; i++) {
+		bcm43xx_radio_write16(dev, 0x0013, i);
+		curr_s = bcm43xx_phy_read(dev, BCM43xx_PHY_OTABLEQ) & 0x00FF;
+		if (!curr_s) {
+			best_s = 0x0000;
+			break;
+		}
+		else if (curr_s >= 0x0080)
+			curr_s = 0x0100 - curr_s;
+		if (curr_s < best_s)
+			best_s = curr_s;
+	}
+	bcm43xx_phy_write(dev, BCM43xx_PHY_PWRDOWN, b);
+	bcm43xx_radio_write16(dev, 0x0004,
+		bcm43xx_radio_read16(dev, 0x0004) & 0xFFFB);
+	bcm43xx_radio_write16(dev, 0x0013, best_s);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1_R1, 0, 0xFFEC);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xB7), 0x1E80);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xB6), 0x1C00);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xB5), 0x0EC0);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xB2), 0x00C0);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xB9), 0x1FFF);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0xBB),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0xBB)) & 0xF000) | 0x0053);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM61,
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM61 & 0xFE1F)) | 0x0120);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x13),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x13)) & 0x0FFF) | 0x3000);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x14),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x14)) & 0x0FFF) | 0x3000);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 6, 0x0017);
+	for (i = 0; i < 6; i++)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, i, 0x000F);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 0x0D, 0x000E);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 0x0E, 0x0011);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_AGC1, 0x0F, 0x0013);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x33), 0x5030);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
+		bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0) | BCM43xx_PHY_CRS0_EN);
 }
 
 /* Initialize APHY. This is also called for the GPHY in some cases. */
@@ -949,59 +653,49 @@ static void bcm43xx_phy_inita(struct bcm
 {
 	struct ssb_bus *bus = dev->dev->bus;
 	struct bcm43xx_phy *phy = &dev->phy;
-	u16 tval;
 
-	if (phy->type == BCM43xx_PHYTYPE_A) {
-		bcm43xx_phy_setupa(dev);
-	} else {
-		bcm43xx_phy_setupg(dev);
-		if (dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL)
-			bcm43xx_phy_write(dev, 0x046E, 0x03CF);
-		return;
+	if (phy->rev >= 6) {
+		if (phy->type == BCM43xx_PHYTYPE_A)
+			bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x1B),
+				bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x1B)) & ~0x1000);
+		if (bcm43xx_phy_read(dev, BCM43xx_PHY_ENCORE) & BCM43xx_PHY_ENCORE_EN)
+			bcm43xx_phy_write(dev, BCM43xx_PHY_ENCORE,
+				bcm43xx_phy_read(dev, BCM43xx_PHY_ENCORE) | 0x0010);
+		else
+			bcm43xx_phy_write(dev, BCM43xx_PHY_ENCORE,
+				bcm43xx_phy_read(dev, BCM43xx_PHY_ENCORE) & ~0x1010);
 	}
 
-	bcm43xx_phy_write(dev, BCM43xx_PHY_A_CRS,
-	                  (bcm43xx_phy_read(dev, BCM43xx_PHY_A_CRS) & 0xF83C) | 0x0340);
-	bcm43xx_phy_write(dev, 0x0034, 0x0001);
-
-	TODO();//TODO: RSSI AGC
-	bcm43xx_phy_write(dev, BCM43xx_PHY_A_CRS,
-	                  bcm43xx_phy_read(dev, BCM43xx_PHY_A_CRS) | (1 << 14));
-	bcm43xx_radio_init2060(dev);
+	bcm43xx_wa_all(dev);
 
-	if ((bus->board_vendor == SSB_BOARDVENDOR_BCM) &&
-	    ((bus->board_type == SSB_BOARD_BU4306) ||
-	     (bus->board_type == SSB_BOARD_BU4309))) {
-		if (phy->lofcal == 0xFFFF) {
-			TODO();//TODO: LOF Cal
-			bcm43xx_radio_set_tx_iq(dev);
-		} else
-			bcm43xx_radio_write16(dev, 0x001E, phy->lofcal);
-	}
+	if (phy->type == BCM43xx_PHYTYPE_A) {
+		if (phy->rev < 3)
+			bcm43xx_phy_write(dev, 0x0034,
+				bcm43xx_phy_read(dev, 0x0034) | 0x0001);
 
-	bcm43xx_phy_write(dev, 0x007A, 0xF111);
+		bcm43xx_phy_rssiagc(dev, 0);
 
-	if (phy->cur_idle_tssi == 0) {
-		bcm43xx_radio_write16(dev, 0x0019, 0x0000);
-		bcm43xx_radio_write16(dev, 0x0017, 0x0020);
+		bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
+			bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0) | BCM43xx_PHY_CRS0_EN);
 
-		tval = bcm43xx_ofdmtab_read16(dev, 0x3001, 0);
-		if (phy->rev == 1) {
-			bcm43xx_ofdmtab_write16(dev, 0x3001, 0,
-					  (bcm43xx_ofdmtab_read16(dev, 0x3001, 0) & 0xFF87)
-					  | 0x0058);
-		} else {
-			bcm43xx_ofdmtab_write16(dev, 0x3001, 0,
-					  (bcm43xx_ofdmtab_read16(dev, 0x3001, 0) & 0xFFC3)
-					  | 0x002C);
-		}
-		bcm43xx_dummy_transmission(dev);
-		phy->cur_idle_tssi = bcm43xx_phy_read(dev, BCM43xx_PHY_A_PCTL);
-		bcm43xx_ofdmtab_write16(dev, 0x3001, 0, tval);
+		bcm43xx_radio_init2060(dev);
 
-		bcm43xx_radio_set_txpower_a(dev, 0x0018);
+		if ((bus->board_vendor == SSB_BOARDVENDOR_BCM) &&
+		    ((bus->board_type == SSB_BOARD_BU4306) ||
+		     (bus->board_type == SSB_BOARD_BU4309))) {
+		     	; //TODO: A PHY LO
+		}
+
+		if (phy->rev >= 3)
+			bcm43xx_phy_ww(dev);
+
+		hardware_pctl_init_aphy(dev);
+
+		//TODO: radar detection
 	}
-	bcm43xx_shm_clear_tssi(dev);
+	if (phy->type == BCM43xx_PHYTYPE_G
+	    && dev->dev->bus->sprom.r1.boardflags_lo & BCM43xx_BFL_PACTRL)
+	    	bcm43xx_phy_write(dev, 0x046E, 0x03CF);
 }
 
 static void bcm43xx_phy_initb2(struct bcm43xx_wldev *dev)
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/Makefile
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/Makefile
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/Makefile
@@ -15,4 +15,5 @@ bcm43xx-mac80211-objs := bcm43xx_main.o 
 		         bcm43xx_leds.o \
 		         bcm43xx_xmit.o \
 		         bcm43xx_lo.o \
+		         bcm43xx_wa.o \
 		         $(bcm43xx-mac80211-obj-y)


From jbenc at suse.cz  Mon Apr 23 20:25:31 2007
From: jbenc at suse.cz (Jiri Benc)
Date: Mon, 23 Apr 2007 20:25:31 +0200
Subject: [PATCH] mac80211: Sort supported rates in scan output
In-Reply-To: <46284d71.8kVOR3LhjxSoo7lb%Larry.Finger@lwfinger.net>
References: <46284d71.8kVOR3LhjxSoo7lb%Larry.Finger@lwfinger.net>
Message-ID: <20070423202531.678b2136@griffin.suse.cz>

On Fri, 20 Apr 2007 00:19:45 -0500, Larry Finger wrote:
> In mac80211, the results of a scan show basic rates followed by
> extended rates, thus values are not listed in any particular order.
> This patch sorts all rates in increasing value.

Doesn't sound like a job for the kernel. I'd suggest sending a patch
for iwlist instead.

 Jiri

-- 
Jiri Benc
SUSE Labs


From stefano.brivio at polimi.it  Mon Apr 23 20:36:36 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 23 Apr 2007 20:36:36 +0200
Subject: [PATCH 3/3] 802.11a LO implementation
In-Reply-To: <20070423202530.2829f309@localhost>
References: <20070423202530.2829f309@localhost>
Message-ID: <20070423203636.02967b38@localhost>

This introduces code for 802.11a LocalOscillator support.

TODO: keep up to date with specs.


Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
---

Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo_a.c
===================================================================
--- /dev/null
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo_a.c
@@ -0,0 +1,188 @@
+/*
+
+  Broadcom BCM43xx wireless driver
+
+  A PHY LO (LocalOscillator) Measuring and Control routines
+
+  Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
+  Copyright (c) 2005, 2006 Stefano Brivio <st3 at riseup.net>
+  Copyright (c) 2005-2007 Michael Buesch <mb at bu3sch.de>
+  Copyright (c) 2005, 2006 Danny van Dyk <kugelfang at gentoo.org>
+  Copyright (c) 2005, 2006 Andreas Jaggi <andreas.jaggi at waterwave.ch>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+#include "bcm43xx.h"
+#include "bcm43xx_lo.h"
+#include "bcm43xx_phy.h"
+#include "bcm43xx_main.h"
+
+#include <linux/delay.h>
+
+static const u8 q_vos[] = {0x0, 0x4, 0x8, 0x9, 0xD,};
+static const u8 i_vos[] = {0x0, 0x1, 0x5, 0x6, 0xA,};
+
+struct lo_a_saved_values {
+	u8 channel;
+
+	u16 reg_03F4;
+
+	u16 ofdmreg_10;
+	u16 ofdmreg_11;
+	u16 ofdmreg_7A;
+	u16 ofdmreg_6E;
+	u16 ofdmreg_7C;
+	u16 ofdmreg_6B;
+
+	u16 ofdmtab_0F_07;
+	u16 ofdmtab_0F_09;
+	u16 ofdmtab_0F_0A;
+	u16 ofdmtab_0F_0B;
+	u16 ofdmtab_0C_01;
+
+	u16 radio_09;
+	u16 radio_17;
+	u16 radio_19;
+}
+
+static void lo_a_setup(struct bcm43xx_wldev *dev, struct lo_g_saved_values *sav)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+
+	sav->channel = phy->channel;
+	bcm43xx_radio_selectchannel(dev, 64, 0);
+	sav->reg_03F4 = bcm43xx_read16(dev, 0x03F4);
+	sav->ofdmreg_10 = bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x10));
+	sav->ofdmreg_11 = bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x11));
+	sav->ofdmtab_0F_07 = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 0);
+	sav->ofdmtab_0F_09 = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 2);
+	sav->ofdmtab_0F_0A = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 3);
+	sav->ofdmtab_0F_0B = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 4);
+	sav->radio_17 = bcm43xx_radio_read16(dev, 0x0017);
+	sav->radio_19 = bcm43xx_radio_read16(dev, 0x0019);
+	sav->radio_09 = bcm43xx_radio_read16(dev, 0x0009);
+	sav->ofdmtab_0C_01 = bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 1);
+	bcm43xx_radio_write16(dev, 0x0009,
+		bcm43xx_radio_read16(dev, 0x0009) & 0xFFBF);
+}
+
+static void find_tssi(struct bcm43xx_wldev *dev)
+{
+	s16 tmp;
+
+	bcm43xx_dummy_transmission(dev);
+	tmp = bcm43xx_phy_read(dev, BCM43xx_PHY_IDLE_TSSI) & 0x00FF;
+	if (tmp >= 0x80)
+		tmp -= 0x100;
+	return tmp;
+}
+
+static u16 find_vos(struct bcm43xx_wldev *dev)
+{
+	struct bcm43xx_phy *phy = &dev->phy;
+	int i, j;
+	u16 radioval, radiosav_i[5], radiosav_q[5], radiosav_c, curr_tssi,
+	    min_tssi = 0xFFFF;
+
+	bcm43xx_radio_write16(dev, 0x1E, 0x0000);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_CRS0,
+		bcm43xx_phy_read(dev, BCM43xx_PHY_CRS0) & ~BCM43xx_PHY_CRS0_EN);
+	bcm43xx_write16(dev, 0x03F4, 0x0001);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x10),
+		bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x10) | 0x0C08);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_OFDM(0x11),
+		(bcm43xx_phy_read(dev, BCM43xx_PHY_OFDM(0x11)) & 0xF3F7) | 0x0408);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 0
+		bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DC, 1));
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 2, 0x0001);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 3, 0x0001);
+	bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_UNKNOWN_APHY, 4, 0x0001);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_ADCCTL, 0xC111);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_A_TEMP_SENSE, 0x0002);
+	if (phy->rev <= 2)
+		bcm43xx_wa_rssi_lt(dev);
+	bcm43xx_phy_write(dev, BCM43xx_PHY_BBTXDC_BIAS, 0x0000);
+	bcm43xx_radio_write16(dev, 0x0017, 0x0026);
+	if (phy->analog == 1)
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 1
+			(bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 1)) & 0xFF87 | 0x0010);
+	else
+		bcm43xx_ofdmtab_write16(dev, BCM43xx_OFDMTAB_DAC, 1
+			(bcm43xx_ofdmtab_read16(dev, BCM43xx_OFDMTAB_DAC, 1)) & 0xFFC3 | 0x0008);
+	bcm43xx_radio_write16(dev, 0x0019, 0x0060);
+
+	for (i = 0; i < 5; i++) {
+		radioval = (bcm43xx_radio_read16(dev, 0x001E) & 0x00F0) | i_vos[i] << 4;
+		bcm43xx_radio_write16(dev, 0x001E, radioval_i);
+		curr_tssi = find_tssi(dev);
+		if (curr_tssi < min_tssi) {
+			for (j = 0; j < i; j++)
+				radiosav_i[j] = 0xFFFF;
+			min_tssi = curr_tssi;
+			radiosav_i[i] = radioval;
+		}
+		else if (curr_tssi == min_tssi)
+			radiosav_i[i] = radioval;
+		else if (curr_tssi > min_tssi)
+			radiosav_i[i] = 0xFFFF;
+	}
+	for (i = 0; i < 5; i++)
+		if (radiosav_i[i] != 0xFFFF) {
+			bcm43xx_radio_write16(dev, 0x001E, radiosav_i[i]);
+			break;
+		}
+
+	for (i = 0; i < 5; i++) {
+		radioval = (bcm43xx_radio_read16(dev, 0x001E) & 0x00F0) | q_vos[i];
+		bcm43xx_radio_write16(dev, 0x001E, radioval_q);
+		curr_tssi = find_tssi(dev);
+		if (curr_tssi < min_tssi) {
+			for (j = 0; j < i; j++)
+				radiosav_q[j] = 0xFFFF;
+			min_tssi = curr_tssi;
+			radiosav_q[i] = radioval;
+		}
+		else if (curr_tssi == min_tssi)
+			radiosav_q[i] = radioval;
+		else if (curr_tssi > min_tssi)
+			radiosav_q[i] = 0xFFFF;
+	}
+	for (i = 0; i < 5; i++)
+		if (radiosav_q[i] != 0xFFFF) {
+			bcm43xx_radio_write16(dev, 0x001E, radiosav_q[i]);
+			break;
+		}
+
+	min_tssi = 0xFFFF;
+	for (i = 0; i < 5; i++)
+		if (radiosav_i[i] != 0xFFFF)
+			for (j = 0; j < 5; j++)
+				if (radiosav_q[j] != 0xFFFF) {
+					radioval = (radiosav_q[j] & 0xF) |
+						    (radiosav_i[i] & 0xF0);
+					bcm43xx_radio_write16(dev, 0x001E,
+						radioval);
+					udelay(5);
+					curr_tssi = find_tssi(dev);
+					if (curr_tssi < min_tssi)
+						radiosav_c = radioval;
+				}
+	bcm43xx_radio_write16(dev, 0x001E, radiosav_c);
+
+	return radiosav_c;
+}
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.c
@@ -122,7 +122,7 @@ static void bcm43xx_wa_gt(struct bcm43xx
 	}
 }
 
-static void bcm43xx_wa_rssi_lt(struct bcm43xx_wldev *dev) /* RSSI lookup table */
+void bcm43xx_wa_rssi_lt(struct bcm43xx_wldev *dev) /* RSSI lookup table */
 {
 	int i;
 
Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_wa.h
@@ -2,6 +2,7 @@
 #define BCM43xx_WA_H_
 
 void bcm43xx_wa_initgains(struct bcm43xx_wldev *dev);
+void bcm43xx_wa_rssi_lt(struct bcm43xx_wldev *dev);
 void bcm43xx_wa_all(struct bcm43xx_wldev *dev);
 
 #endif /* BCM43xx_WA_H_ */


From mb at bu3sch.de  Mon Apr 23 21:58:31 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Apr 2007 21:58:31 +0200
Subject: Please pull from http://bu3sch.de/git/wireless-dev.git/ for-linville
Message-ID: <200704232158.31599.mb@bu3sch.de>

The following changes since commit 45dd8a7fad4145243dcc4391e80c73c21623ed91:
  Michael Wu:
        mac80211: remove ieee80211_netif_oper from mac80211.h

are found in the git repository at:

  http://bu3sch.de/git/wireless-dev.git/ for-linville

Larry Finger:
      bcm43xx-mac80211: Fix error in initiallizing max RSSI and max signal
      bcm43xx-mac80211: Fix machine checks on PPC with rev 1 PHYs
      bcm43xx-mac80211: Fix machine check on PPC for phy->rev == 1
      bcm43xx-mac80211: Fix machine check on PPC for phy->rev == 1
      bcm43xx-mac80211: Fix machine check on PPC for phy->rev == 1

Michael Buesch:
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      bcm43xx-mac80211: Use fallback rate from mac80211
      ssb: Fix some error path cleanup bugs.
      ssb: Code cleanup: Move printk to the specific register funcs.
      bcm43xx-mac80211: Setting phy->gmode in wireless_core_reset is redundant.
      bcm43xx-mac80211: Add parenthesis around bitwise ops.
      bcm43xx-mac80211: Add HW-RNG support.
      bcm43xx-mac80211: Workaround: Disable gmode in early PHY init for PHY rev == 1
      bcm43xx-mac80211: Fix typo in agcsetup
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev

Will Dyson:
      bcm43xx-mac80211: Catch dma mapping failures.
      bcm43xx-mac80211: Fix error path memory leak
      bcm43xx-mac80211: Work around 30bit DMA limitation

 drivers/net/wireless/mac80211/bcm43xx/Kconfig      |    1 
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h    |   14 ++
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |  106 ++++++++++++++++--
 .../net/wireless/mac80211/bcm43xx/bcm43xx_main.c   |   61 +++++++++-
 .../net/wireless/mac80211/bcm43xx/bcm43xx_phy.c    |  136 ++++++++++++++---------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_xmit.c   |   40 +++----
 drivers/ssb/main.c                                 |   35 ++---
 drivers/ssb/pci.c                                  |    7 +
 8 files changed, 280 insertions(+), 120 deletions(-)

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Apr 23 22:10:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Apr 2007 22:10:59 +0200
Subject: bcm43xx-mac80211 txpower problems
Message-ID: <200704232211.00117.mb@bu3sch.de>

It seems like Larry found the reason for our txpower and
idle-tssi indicator problems. It seems to be related to
wrong values of the tx-bias and/or tx-magn written to the radio.

Thanks Larry for the great job of figuring this out.
I already began doing a rewrite of that code some weeks ago. I'll
put this on top of my priority queue now to get the issue
resolved quickly.

That shows one more time that the bcm43xx project depends on
great people like Larry. Thanks for this. ;)

-- 
Greetings Michael.


From proski at gnu.org  Wed Apr 25 03:54:14 2007
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Apr 2007 21:54:14 -0400
Subject: PowerPC machine checks confirmed fixed
Message-ID: <1177466054.18572.53.camel@dv>

Hello!

I've checked the sources from the mb branch, and I'm not getting the
machine check on PowerPC anymore with the old bcm4306 card and
bcm43xx_mac80211.  Many thanks for fixing that!

I also put a much bigger antenna on the card, and now it connects to the
Linksys router.  I wrote about that AP before.  My x86_64 laptop with
bcm4311 could connect to it with bcm43xx, but not with bcm43xx_mac80211.
Now it's clear that the power is the issue, and not WEP, the maker of
the router or anything else (although I did upgrade the firmware on the
AP just in case - it's WRT54G rev 6).

Automatic association code in mac80211 was another pleasant surprise.
Perhaps I'll use bcm43xx_mac80211 by default - it seems quite stable
now.

-- 
Regards,
Pavel Roskin



From solca at guug.org  Wed Apr 25 04:16:50 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 20:16:50 -0600
Subject: BCM4320
Message-ID: <20070425021650.GB7974@guug.org>

Hi!

I have seen lot of progress in the bcm43xx driver so I searched
for the BCM4320 support but can't find anything on the homepage
nor this list's archive.

Would like to know what is the status for this chipset? or is
this chipset too different to be supported by this driver?

Thanks and keep the good work!

-otto


From larry.finger at lwfinger.net  Wed Apr 25 04:35:46 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Apr 2007 21:35:46 -0500
Subject: BCM4320
In-Reply-To: <20070425021650.GB7974@guug.org>
References: <20070425021650.GB7974@guug.org>
Message-ID: <462EBE82.1050406@lwfinger.net>

Otto Solares wrote:
> Hi!
> 
> I have seen lot of progress in the bcm43xx driver so I searched
> for the BCM4320 support but can't find anything on the homepage
> nor this list's archive.
> 
> Would like to know what is the status for this chipset? or is
> this chipset too different to be supported by this driver?
> 
> Thanks and keep the good work!

There should be USB support in the bcm43xx-mac80211 driver, but I have no idea what the status is. 
USB devices will never be supported in bcm43xx-softmac, which is near its end-of-life.

What does the output of 'lsusb -v' and 'lsusb -d' show with your device connected?

Larry


From josejx at gentoo.org  Wed Apr 25 04:47:23 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Tue, 24 Apr 2007 22:47:23 -0400
Subject: BCM4320
In-Reply-To: <20070425021650.GB7974@guug.org>
References: <20070425021650.GB7974@guug.org>
Message-ID: <462EC13B.8000507@gentoo.org>

Otto Solares wrote:
> Hi!
> 
> I have seen lot of progress in the bcm43xx driver so I searched
> for the BCM4320 support but can't find anything on the homepage
> nor this list's archive.
> 
> Would like to know what is the status for this chipset? or is
> this chipset too different to be supported by this driver?
> 
> Thanks and keep the good work!
> 
> -otto

Are you sure this isn't a 4306?

As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
ID, which is supported pretty well.

-Joe


From josejx at gentoo.org  Wed Apr 25 04:54:57 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Tue, 24 Apr 2007 22:54:57 -0400
Subject: BCM4320
In-Reply-To: <462EBE82.1050406@lwfinger.net>
References: <20070425021650.GB7974@guug.org> <462EBE82.1050406@lwfinger.net>
Message-ID: <462EC301.7040200@gentoo.org>

> There should be USB support in the bcm43xx-mac80211 driver, but I have no idea what the status is. 
> USB devices will never be supported in bcm43xx-softmac, which is near its end-of-life.

We don't support USB devices at all right now.  The only one we've
seen in the wild is the USR5421 which we bought with intent to
support.  Unfortunately, it's a bcm43xx card wrapped in a Microsoft
RNDIS wrapper and only the RNDIS interface exposed.  It doesn't look
anything like other bcm43xx cards, so it's shelved for now.  If
someone were to write an RNDIS stack for linux, perhaps we could
return to it, but it's unlikely unless that happens.  If anyone has
an example of another USB based 43xx card, we'd like to know about it.

> What does the output of 'lsusb -v' and 'lsusb -d' show with your device connected?

lspci might be more informative for a 4320 ;)  I'm fairly certain
that his card is a regular 4306.

-Joe


From solca at guug.org  Wed Apr 25 05:46:35 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 21:46:35 -0600
Subject: BCM4320
In-Reply-To: <462EC13B.8000507@gentoo.org>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
Message-ID: <20070425034635.GC7974@guug.org>

On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> Otto Solares wrote:
> > Hi!
> > 
> > I have seen lot of progress in the bcm43xx driver so I searched
> > for the BCM4320 support but can't find anything on the homepage
> > nor this list's archive.
> > 
> > Would like to know what is the status for this chipset? or is
> > this chipset too different to be supported by this driver?
> > 
> > Thanks and keep the good work!
> > 
> > -otto
> 
> Are you sure this isn't a 4306?
> 
> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> ID, which is supported pretty well.

Sorry, I forgot to mention that is in the Linksys WRT54GL.

dmesg:

Broadcom BCM4320 802.11 Wireless Controller

Thanks.

-otto


From larry.finger at lwfinger.net  Wed Apr 25 05:59:27 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Apr 2007 22:59:27 -0500
Subject: BCM4320
In-Reply-To: <20070425034635.GC7974@guug.org>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
	<20070425034635.GC7974@guug.org>
Message-ID: <462ED21F.2020600@lwfinger.net>

Otto Solares wrote:
> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
>> Otto Solares wrote:
>>> Hi!
>>>
>>> I have seen lot of progress in the bcm43xx driver so I searched
>>> for the BCM4320 support but can't find anything on the homepage
>>> nor this list's archive.
>>>
>>> Would like to know what is the status for this chipset? or is
>>> this chipset too different to be supported by this driver?
>>>
>>> Thanks and keep the good work!
>>>
>>> -otto
>> Are you sure this isn't a 4306?
>>
>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
>> ID, which is supported pretty well.
> 
> Sorry, I forgot to mention that is in the Linksys WRT54GL.
> 
> dmesg:
> 
> Broadcom BCM4320 802.11 Wireless Controller

Are you moving a mini-PCI card from the WRT54GL to a PC? If so, you should install it and look at 
the output of 'lspci -n' and 'lspci -v'. Those numbers will tell the chip and if we support it.

Larry



From solca at guug.org  Wed Apr 25 06:01:04 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 22:01:04 -0600
Subject: BCM4320
In-Reply-To: <20070425034635.GC7974@guug.org>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
	<20070425034635.GC7974@guug.org>
Message-ID: <20070425040104.GD7974@guug.org>

On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> > Otto Solares wrote:
> > > Hi!
> > > 
> > > I have seen lot of progress in the bcm43xx driver so I searched
> > > for the BCM4320 support but can't find anything on the homepage
> > > nor this list's archive.
> > > 
> > > Would like to know what is the status for this chipset? or is
> > > this chipset too different to be supported by this driver?
> > > 
> > > Thanks and keep the good work!
> > > 
> > > -otto
> > 
> > Are you sure this isn't a 4306?
> > 
> > As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> > ID, which is supported pretty well.
> 
> Sorry, I forgot to mention that is in the Linksys WRT54GL.
> 
> dmesg:
> 
> Broadcom BCM4320 802.11 Wireless Controller

Well, I installed pciutils in the WRT and found this:

0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
       Flags: bus master, fast devsel, latency 64, IRQ 2
       Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
       Expansion ROM at <unassigned> [disabled] [size=2K]

So as you predicted it appears as a BCM4306, but last time I check
(like 2 months ago) it was rejected with the bcm43xx driver.

-otto


From solca at guug.org  Wed Apr 25 06:02:32 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 22:02:32 -0600
Subject: BCM4320
In-Reply-To: <462ED21F.2020600@lwfinger.net>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
	<20070425034635.GC7974@guug.org> <462ED21F.2020600@lwfinger.net>
Message-ID: <20070425040232.GE7974@guug.org>

On Tue, Apr 24, 2007 at 10:59:27PM -0500, Larry Finger wrote:
> Otto Solares wrote:
> >On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> >>Otto Solares wrote:
> >>>Hi!
> >>>
> >>>I have seen lot of progress in the bcm43xx driver so I searched
> >>>for the BCM4320 support but can't find anything on the homepage
> >>>nor this list's archive.
> >>>
> >>>Would like to know what is the status for this chipset? or is
> >>>this chipset too different to be supported by this driver?
> >>>
> >>>Thanks and keep the good work!
> >>>
> >>>-otto
> >>Are you sure this isn't a 4306?
> >>
> >>As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> >>ID, which is supported pretty well.
> >
> >Sorry, I forgot to mention that is in the Linksys WRT54GL.
> >
> >dmesg:
> >
> >Broadcom BCM4320 802.11 Wireless Controller
> 
> Are you moving a mini-PCI card from the WRT54GL to a PC? If so, you should 
> install it and look at the output of 'lspci -n' and 'lspci -v'. Those 
> numbers will tell the chip and if we support it.

lspci -n:

00:05.0 0280: 14e4:4320

-otto


From larry.finger at lwfinger.net  Wed Apr 25 06:31:21 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Apr 2007 23:31:21 -0500
Subject: BCM4320
In-Reply-To: <20070425040104.GD7974@guug.org>
References: <20070425021650.GB7974@guug.org>
	<462EC13B.8000507@gentoo.org>	<20070425034635.GC7974@guug.org>
	<20070425040104.GD7974@guug.org>
Message-ID: <462ED999.1070605@lwfinger.net>

Otto Solares wrote:
>> Broadcom BCM4320 802.11 Wireless Controller
> 
> Well, I installed pciutils in the WRT and found this:
> 
> 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
>        Flags: bus master, fast devsel, latency 64, IRQ 2
>        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
>        Expansion ROM at <unassigned> [disabled] [size=2K]
> 
> So as you predicted it appears as a BCM4306, but last time I check
> (like 2 months ago) it was rejected with the bcm43xx driver.

The 4306 is well supported - what does 'lspci -n' show? The PCI-ID may be different than what one 
gets for the PCMCIA versions.

Is openWRT based on a 2.6 kernel now? If it is still 2.4, then the Broadcom (binary-only driver) is 
what was used in the original firmware, and still has better performance than our driver, although 
we are better every week.

Larry



From josejx at gentoo.org  Wed Apr 25 06:51:59 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Wed, 25 Apr 2007 00:51:59 -0400
Subject: BCM4320
In-Reply-To: <20070425040104.GD7974@guug.org>
References: <20070425021650.GB7974@guug.org>
	<462EC13B.8000507@gentoo.org>	<20070425034635.GC7974@guug.org>
	<20070425040104.GD7974@guug.org>
Message-ID: <462EDE6F.4000502@gentoo.org>

Otto Solares wrote:
> On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
>> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
>>> Otto Solares wrote:
>>>> Hi!
>>>>
>>>> I have seen lot of progress in the bcm43xx driver so I searched
>>>> for the BCM4320 support but can't find anything on the homepage
>>>> nor this list's archive.
>>>>
>>>> Would like to know what is the status for this chipset? or is
>>>> this chipset too different to be supported by this driver?
>>>>
>>>> Thanks and keep the good work!
>>>>
>>>> -otto
>>> Are you sure this isn't a 4306?
>>>
>>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
>>> ID, which is supported pretty well.
>> Sorry, I forgot to mention that is in the Linksys WRT54GL.
>>
>> dmesg:
>>
>> Broadcom BCM4320 802.11 Wireless Controller
> 
> Well, I installed pciutils in the WRT and found this:
> 
> 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
>        Flags: bus master, fast devsel, latency 64, IRQ 2
>        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
>        Expansion ROM at <unassigned> [disabled] [size=2K]
> 
> So as you predicted it appears as a BCM4306, but last time I check
> (like 2 months ago) it was rejected with the bcm43xx driver.
> 
> -otto

The bcm4306 on the WRT devices is connected via the SB bus, not a
regular PCI device.  Michael's mac80211 branch has support for this,
but I don't know the current state.  Maybe someone else can chime in
here. :)

-Joe


From larry.finger at lwfinger.net  Wed Apr 25 06:56:04 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Apr 2007 23:56:04 -0500
Subject: BCM4320
In-Reply-To: <462EDE6F.4000502@gentoo.org>
References: <20070425021650.GB7974@guug.org>	<462EC13B.8000507@gentoo.org>	<20070425034635.GC7974@guug.org>	<20070425040104.GD7974@guug.org>
	<462EDE6F.4000502@gentoo.org>
Message-ID: <462EDF64.1000600@lwfinger.net>

Joseph Jezak wrote:
> Otto Solares wrote:
>> On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
>>> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
>>>> Otto Solares wrote:
>>>>> Hi!
>>>>>
>>>>> I have seen lot of progress in the bcm43xx driver so I searched
>>>>> for the BCM4320 support but can't find anything on the homepage
>>>>> nor this list's archive.
>>>>>
>>>>> Would like to know what is the status for this chipset? or is
>>>>> this chipset too different to be supported by this driver?
>>>>>
>>>>> Thanks and keep the good work!
>>>>>
>>>>> -otto
>>>> Are you sure this isn't a 4306?
>>>>
>>>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
>>>> ID, which is supported pretty well.
>>> Sorry, I forgot to mention that is in the Linksys WRT54GL.
>>>
>>> dmesg:
>>>
>>> Broadcom BCM4320 802.11 Wireless Controller
>> Well, I installed pciutils in the WRT and found this:
>>
>> 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
>>        Flags: bus master, fast devsel, latency 64, IRQ 2
>>        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
>>        Expansion ROM at <unassigned> [disabled] [size=2K]
>>
>> So as you predicted it appears as a BCM4306, but last time I check
>> (like 2 months ago) it was rejected with the bcm43xx driver.
>>
>> -otto
> 
> The bcm4306 on the WRT devices is connected via the SB bus, not a
> regular PCI device.  Michael's mac80211 branch has support for this,
> but I don't know the current state.  Maybe someone else can chime in
> here. :)

With the mac80211 driver, my BCM4306 works, but very slowly. I get between 0.5 and 1 Mbs transfer 
rates using Iperf.

Larry


From solca at guug.org  Wed Apr 25 07:08:07 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 23:08:07 -0600
Subject: BCM4320
In-Reply-To: <462ED999.1070605@lwfinger.net>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
	<20070425034635.GC7974@guug.org> <20070425040104.GD7974@guug.org>
	<462ED999.1070605@lwfinger.net>
Message-ID: <20070425050807.GF7974@guug.org>

On Tue, Apr 24, 2007 at 11:31:21PM -0500, Larry Finger wrote:
> Otto Solares wrote:
> >>Broadcom BCM4320 802.11 Wireless Controller
> >
> >Well, I installed pciutils in the WRT and found this:
> >
> >0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless 
> >LAN Controller
> >       Flags: bus master, fast devsel, latency 64, IRQ 2
> >       Memory at 18005000 (32-bit, non-prefetchable) [disabled] [size=4K]
> >       Expansion ROM at <unassigned> [disabled] [size=2K]
> >
> >So as you predicted it appears as a BCM4306, but last time I check
> >(like 2 months ago) it was rejected with the bcm43xx driver.
> 
> The 4306 is well supported - what does 'lspci -n' show? The PCI-ID may be 
> different than what one gets for the PCMCIA versions.
> 
> Is openWRT based on a 2.6 kernel now? If it is still 2.4, then the Broadcom 
> (binary-only driver) is what was used in the original firmware, and still 
> has better performance than our driver, although we are better every week.

openwrt have both 2.4 and 2.6.  I am having some weird problems with the
binary-only driver from broadcom so testing the open source is a good
idea.

-otto


From solca at guug.org  Wed Apr 25 07:11:51 2007
From: solca at guug.org (Otto Solares)
Date: Tue, 24 Apr 2007 23:11:51 -0600
Subject: BCM4320
In-Reply-To: <462EDE6F.4000502@gentoo.org>
References: <20070425021650.GB7974@guug.org> <462EC13B.8000507@gentoo.org>
	<20070425034635.GC7974@guug.org>
	<20070425040104.GD7974@guug.org> <462EDE6F.4000502@gentoo.org>
Message-ID: <20070425051151.GG7974@guug.org>

On Wed, Apr 25, 2007 at 12:51:59AM -0400, Joseph Jezak wrote:
> Otto Solares wrote:
> > On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
> >> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> >>> Otto Solares wrote:
> >>>> Hi!
> >>>>
> >>>> I have seen lot of progress in the bcm43xx driver so I searched
> >>>> for the BCM4320 support but can't find anything on the homepage
> >>>> nor this list's archive.
> >>>>
> >>>> Would like to know what is the status for this chipset? or is
> >>>> this chipset too different to be supported by this driver?
> >>>>
> >>>> Thanks and keep the good work!
> >>>>
> >>>> -otto
> >>> Are you sure this isn't a 4306?
> >>>
> >>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> >>> ID, which is supported pretty well.
> >> Sorry, I forgot to mention that is in the Linksys WRT54GL.
> >>
> >> dmesg:
> >>
> >> Broadcom BCM4320 802.11 Wireless Controller
> > 
> > Well, I installed pciutils in the WRT and found this:
> > 
> > 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
> >        Flags: bus master, fast devsel, latency 64, IRQ 2
> >        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
> >        Expansion ROM at <unassigned> [disabled] [size=2K]
> > 
> > So as you predicted it appears as a BCM4306, but last time I check
> > (like 2 months ago) it was rejected with the bcm43xx driver.
> > 
> > -otto
> 
> The bcm4306 on the WRT devices is connected via the SB bus, not a
> regular PCI device.  Michael's mac80211 branch has support for this,
> but I don't know the current state.  Maybe someone else can chime in
> here. :)

Where can I fetch Michael's branch, I would like to give it a test.

-otto


From larry.finger at lwfinger.net  Wed Apr 25 07:17:36 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 25 Apr 2007 00:17:36 -0500
Subject: BCM4320
In-Reply-To: <20070425051151.GG7974@guug.org>
References: <20070425021650.GB7974@guug.org>
	<462EC13B.8000507@gentoo.org>	<20070425034635.GC7974@guug.org>	<20070425040104.GD7974@guug.org>
	<462EDE6F.4000502@gentoo.org> <20070425051151.GG7974@guug.org>
Message-ID: <462EE470.9020507@lwfinger.net>

Otto Solares wrote:
> On Wed, Apr 25, 2007 at 12:51:59AM -0400, Joseph Jezak wrote:
>> Otto Solares wrote:
>>> On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
>>>> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
>>>>> Otto Solares wrote:
>>>>>> Hi!
>>>>>>
>>>>>> I have seen lot of progress in the bcm43xx driver so I searched
>>>>>> for the BCM4320 support but can't find anything on the homepage
>>>>>> nor this list's archive.
>>>>>>
>>>>>> Would like to know what is the status for this chipset? or is
>>>>>> this chipset too different to be supported by this driver?
>>>>>>
>>>>>> Thanks and keep the good work!
>>>>>>
>>>>>> -otto
>>>>> Are you sure this isn't a 4306?
>>>>>
>>>>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
>>>>> ID, which is supported pretty well.
>>>> Sorry, I forgot to mention that is in the Linksys WRT54GL.
>>>>
>>>> dmesg:
>>>>
>>>> Broadcom BCM4320 802.11 Wireless Controller
>>> Well, I installed pciutils in the WRT and found this:
>>>
>>> 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
>>>        Flags: bus master, fast devsel, latency 64, IRQ 2
>>>        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
>>>        Expansion ROM at <unassigned> [disabled] [size=2K]
>>>
>>> So as you predicted it appears as a BCM4306, but last time I check
>>> (like 2 months ago) it was rejected with the bcm43xx driver.
>>>
>>> -otto
>> The bcm4306 on the WRT devices is connected via the SB bus, not a
>> regular PCI device.  Michael's mac80211 branch has support for this,
>> but I don't know the current state.  Maybe someone else can chime in
>> here. :)
> 
> Where can I fetch Michael's branch, I would like to give it a test.

It is only available via git. The URL is 
git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-dev.git

Larry


From mb at bu3sch.de  Wed Apr 25 14:49:04 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Apr 2007 14:49:04 +0200
Subject: BCM4320
In-Reply-To: <20070425051151.GG7974@guug.org>
References: <20070425021650.GB7974@guug.org> <462EDE6F.4000502@gentoo.org>
	<20070425051151.GG7974@guug.org>
Message-ID: <200704251449.04752.mb@bu3sch.de>

On Wednesday 25 April 2007 07:11, Otto Solares wrote:
> On Wed, Apr 25, 2007 at 12:51:59AM -0400, Joseph Jezak wrote:
> > Otto Solares wrote:
> > > On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
> > >> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> > >>> Otto Solares wrote:
> > >>>> Hi!
> > >>>>
> > >>>> I have seen lot of progress in the bcm43xx driver so I searched
> > >>>> for the BCM4320 support but can't find anything on the homepage
> > >>>> nor this list's archive.
> > >>>>
> > >>>> Would like to know what is the status for this chipset? or is
> > >>>> this chipset too different to be supported by this driver?
> > >>>>
> > >>>> Thanks and keep the good work!
> > >>>>
> > >>>> -otto
> > >>> Are you sure this isn't a 4306?
> > >>>
> > >>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> > >>> ID, which is supported pretty well.
> > >> Sorry, I forgot to mention that is in the Linksys WRT54GL.
> > >>
> > >> dmesg:
> > >>
> > >> Broadcom BCM4320 802.11 Wireless Controller
> > > 
> > > Well, I installed pciutils in the WRT and found this:
> > > 
> > > 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
> > >        Flags: bus master, fast devsel, latency 64, IRQ 2
> > >        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
> > >        Expansion ROM at <unassigned> [disabled] [size=2K]
> > > 
> > > So as you predicted it appears as a BCM4306, but last time I check
> > > (like 2 months ago) it was rejected with the bcm43xx driver.
> > > 
> > > -otto
> > 
> > The bcm4306 on the WRT devices is connected via the SB bus, not a
> > regular PCI device.  Michael's mac80211 branch has support for this,
> > but I don't know the current state.  Maybe someone else can chime in
> > here. :)
> 
> Where can I fetch Michael's branch, I would like to give it a test.

Use current OpenWRT development trunk.

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Apr 25 14:49:49 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Apr 2007 14:49:49 +0200
Subject: BCM4320
In-Reply-To: <462EBE82.1050406@lwfinger.net>
References: <20070425021650.GB7974@guug.org> <462EBE82.1050406@lwfinger.net>
Message-ID: <200704251449.49908.mb@bu3sch.de>

On Wednesday 25 April 2007 04:35, Larry Finger wrote:
> Otto Solares wrote:
> > Hi!
> > 
> > I have seen lot of progress in the bcm43xx driver so I searched
> > for the BCM4320 support but can't find anything on the homepage
> > nor this list's archive.
> > 
> > Would like to know what is the status for this chipset? or is
> > this chipset too different to be supported by this driver?
> > 
> > Thanks and keep the good work!
> 
> There should be USB support in the bcm43xx-mac80211 driver, but I have no idea what the status is. 
> USB devices will never be supported in bcm43xx-softmac, which is near its end-of-life.

USB devices are a whole new ballgame for a different, yet to be written, driver.

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Apr 25 14:50:49 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Apr 2007 14:50:49 +0200
Subject: PowerPC machine checks confirmed fixed
In-Reply-To: <1177466054.18572.53.camel@dv>
References: <1177466054.18572.53.camel@dv>
Message-ID: <200704251450.49834.mb@bu3sch.de>

On Wednesday 25 April 2007 03:54, Pavel Roskin wrote:
> Hello!
> 
> I've checked the sources from the mb branch, and I'm not getting the
> machine check on PowerPC anymore with the old bcm4306 card and
> bcm43xx_mac80211.  Many thanks for fixing that!
> 
> I also put a much bigger antenna on the card, and now it connects to the
> Linksys router.  I wrote about that AP before.  My x86_64 laptop with
> bcm4311 could connect to it with bcm43xx, but not with bcm43xx_mac80211.
> Now it's clear that the power is the issue, and not WEP, the maker of
> the router or anything else (although I did upgrade the firmware on the
> AP just in case - it's WRT54G rev 6).

Thanks for testing this. I am working on the power issue.

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Apr 25 16:33:48 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Apr 2007 16:33:48 +0200
Subject: idle-tssi... source of problems
Message-ID: <200704251633.48534.mb@bu3sch.de>

Ok, Larry. I don't really get where the bug is.
I think the tx_magn and tx_bias stuff you discovered (writing
0x20 to radio 0x52) is not really the cause of the problem
either. I think it just papers over the real problem somewhere
else.
Why do I say that? Well, if I write a tx magnification value
of 0x2 before we read out the itssi value, I get the correct value.
But specs clearly state (and bcm43xx-sm code does) write a tx
magnification value of 0 there. (It's the last value passed
to set_txpower_bg).
So I'm pretty much convinced that the real problem must be somewhere
else.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Apr 25 17:23:05 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 25 Apr 2007 10:23:05 -0500
Subject: idle-tssi... source of problems
In-Reply-To: <200704251633.48534.mb@bu3sch.de>
References: <200704251633.48534.mb@bu3sch.de>
Message-ID: <462F7259.5040405@lwfinger.net>

Michael Buesch wrote:
> Ok, Larry. I don't really get where the bug is.
> I think the tx_magn and tx_bias stuff you discovered (writing
> 0x20 to radio 0x52) is not really the cause of the problem
> either. I think it just papers over the real problem somewhere
> else.
> Why do I say that? Well, if I write a tx magnification value
> of 0x2 before we read out the itssi value, I get the correct value.
> But specs clearly state (and bcm43xx-sm code does) write a tx
> magnification value of 0 there. (It's the last value passed
> to set_txpower_bg).
> So I'm pretty much convinced that the real problem must be somewhere
> else.

I agree with you that the problem is somewhere else. The only real bug I have found is the one 
below, which ultimately led to the value of 0xFF being written to radio register 0x52. This change 
gets rid of the idle-tssi warning on the 4306 and the 4311, but not the 4318.


Index: wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
===================================================================
--- wireless-dev.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
+++ wireless-dev/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c
@@ -436,6 +436,7 @@ static void lo_measure_txctl_values(stru
   		}
   	} else {
   		lo->tx_magn = 0; /* unused */
+		lo->tx_bias = 0;
   		bcm43xx_radio_write16(dev, 0x52,
   				      bcm43xx_radio_read16(dev, 0x52)
   				      & 0xFFF0); /* TX bias == 0 */

There are some other places where the PHY setting codes don't match the specs (or the sm code).
These include the following:


Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -607,11 +609,11 @@ static void bcm43xx_phy_agcsetup(struct
  	bcm43xx_phy_write(dev, 0x04A1,
  			  (bcm43xx_phy_read(dev, 0x04A1)
  			   & 0xF0FF) | 0x0600);
-	bcm43xx_phy_write(dev, 0x0412,
-			  (bcm43xx_phy_read(dev, 0x0412)
+	bcm43xx_phy_write(dev, 0x04A2,
+			  (bcm43xx_phy_read(dev, 0x04A2)
  			   & 0xF0FF) | 0x0700);
-	bcm43xx_phy_write(dev, 0x0410,
-			  (bcm43xx_phy_read(dev, 0x0410)
+	bcm43xx_phy_write(dev, 0x04A0,
+			  (bcm43xx_phy_read(dev, 0x04A0)
  			   & 0xF0FF) | 0x0100);

  	if (phy->rev == 1) {
@@ -745,7 +747,7 @@ static void bcm43xx_phy_setupg(struct bc
  	if (phy->rev <= 2)
  		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
  			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg1[i]);
-	else if ((phy->rev == 7) && (bcm43xx_phy_read(dev, 0x0449) & 0x0200))
+	else if ((phy->rev >= 7) && (bcm43xx_phy_read(dev, 0x0449) & 0x0200))
  		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
  			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg3[i]);
  	else
@@ -755,7 +757,7 @@ static void bcm43xx_phy_setupg(struct bc
  	if (phy->rev == 2)
  		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
  			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr1[i]);
-	else if ((phy->rev > 2) && (phy->rev <= 7))
+	else if ((phy->rev > 2) && (phy->rev <= 8))
  		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
  			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr2[i]);

@@ -1420,7 +1422,7 @@ static void bcm43xx_calc_loopback_gain(s
  	}
  	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
-	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
+	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) | 0x000C);
  	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
  			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0030);


One other place where there may be a problem is in 'lo_measure_txctl_values'. It looks to me as if 
the value of lb_gain in dB is being used when hdB is in the specs, but I'm not sure about it.

Another place where I have a question is in 'bcm43xx_calc_loopback_gain', where the specs call for 
the outer loop to count down, but the code counts up.

I also wonder about the masks being used for the tx_bias. The specs state that it is a 3-bit 
quantity occupying bits 4-6 of radio register 52, but the mask for it is always a 4-bit mask. 
Perhaps it doesn't make any difference.

So far the only interface of mine that will connect at all with the mac80211 version is the 4306 
with a PHY revision of 1, and it communicates very slowly. My 4318 and 4311 just cannot associate 
and authenticate at all.

Larry


From mb at bu3sch.de  Wed Apr 25 18:17:52 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Apr 2007 18:17:52 +0200
Subject: idle-tssi... source of problems
In-Reply-To: <462F7259.5040405@lwfinger.net>
References: <200704251633.48534.mb@bu3sch.de> <462F7259.5040405@lwfinger.net>
Message-ID: <200704251817.53102.mb@bu3sch.de>

On Wednesday 25 April 2007 17:23, Larry Finger wrote:
> Michael Buesch wrote:
> > Ok, Larry. I don't really get where the bug is.
> > I think the tx_magn and tx_bias stuff you discovered (writing
> > 0x20 to radio 0x52) is not really the cause of the problem
> > either. I think it just papers over the real problem somewhere
> > else.
> > Why do I say that? Well, if I write a tx magnification value
> > of 0x2 before we read out the itssi value, I get the correct value.
> > But specs clearly state (and bcm43xx-sm code does) write a tx
> > magnification value of 0 there. (It's the last value passed
> > to set_txpower_bg).
> > So I'm pretty much convinced that the real problem must be somewhere
> > else.
> 
> I agree with you that the problem is somewhere else. The only real bug I have found is the one 
> below, which ultimately led to the value of 0xFF being written to radio register 0x52. This change 
> gets rid of the idle-tssi warning on the 4306 and the 4311, but not the 4318.

Not on my 4306. Only changing tx_magn to 0x20 (0x2 left shifted by 4)
will get rid of it.

> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> ===================================================================
> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> @@ -607,11 +609,11 @@ static void bcm43xx_phy_agcsetup(struct
>   	bcm43xx_phy_write(dev, 0x04A1,
>   			  (bcm43xx_phy_read(dev, 0x04A1)
>   			   & 0xF0FF) | 0x0600);
> -	bcm43xx_phy_write(dev, 0x0412,
> -			  (bcm43xx_phy_read(dev, 0x0412)
> +	bcm43xx_phy_write(dev, 0x04A2,
> +			  (bcm43xx_phy_read(dev, 0x04A2)
>   			   & 0xF0FF) | 0x0700);
> -	bcm43xx_phy_write(dev, 0x0410,
> -			  (bcm43xx_phy_read(dev, 0x0410)
> +	bcm43xx_phy_write(dev, 0x04A0,
> +			  (bcm43xx_phy_read(dev, 0x04A0)
>   			   & 0xF0FF) | 0x0100);
> 
>   	if (phy->rev == 1) {
> @@ -745,7 +747,7 @@ static void bcm43xx_phy_setupg(struct bc
>   	if (phy->rev <= 2)
>   		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
>   			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg1[i]);
> -	else if ((phy->rev == 7) && (bcm43xx_phy_read(dev, 0x0449) & 0x0200))
> +	else if ((phy->rev >= 7) && (bcm43xx_phy_read(dev, 0x0449) & 0x0200))
>   		for (i = 0; i < BCM43xx_TAB_NOISESCALEG_SIZE; i++)
>   			bcm43xx_ofdmtab_write16(dev, 0x1400, i, bcm43xx_tab_noisescaleg3[i]);
>   	else
> @@ -755,7 +757,7 @@ static void bcm43xx_phy_setupg(struct bc
>   	if (phy->rev == 2)
>   		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
>   			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr1[i]);
> -	else if ((phy->rev > 2) && (phy->rev <= 7))
> +	else if ((phy->rev > 2) && (phy->rev <= 8))
>   		for (i = 0; i < BCM43xx_TAB_SIGMASQR_SIZE; i++)
>   			bcm43xx_ofdmtab_write16(dev, 0x5000, i, bcm43xx_tab_sigmasqr2[i]);

I'll look into these, thanks.

> @@ -1420,7 +1422,7 @@ static void bcm43xx_calc_loopback_gain(s
>   	}
>   	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
>   			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x000C);
> -	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
> +	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVERVAL,
>   			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVERVAL) | 0x000C);
>   	bcm43xx_phy_write(dev, BCM43xx_PHY_RFOVER,
>   			  bcm43xx_phy_read(dev, BCM43xx_PHY_RFOVER) | 0x0030);

Uh, wow :)

> One other place where there may be a problem is in 'lo_measure_txctl_values'. It looks to me as if 
> the value of lb_gain in dB is being used when hdB is in the specs, but I'm not sure about it.

Yeah, there might be bugs. I'll take a look.

> Another place where I have a question is in 'bcm43xx_calc_loopback_gain', where the specs call for 
> the outer loop to count down, but the code counts up.

Yeah, there might be bugs. I'll take a look.

> I also wonder about the masks being used for the tx_bias. The specs state that it is a 3-bit 
> quantity occupying bits 4-6 of radio register 52, but the mask for it is always a 4-bit mask. 
> Perhaps it doesn't make any difference.

Well, I think the masks are OK.
The "slot" for the value is actually 4 bits wide, but we only use values up to 3bit.
So the MSB is always 0. I think that's ok.

-- 
Greetings Michael.


From solca at guug.org  Wed Apr 25 21:09:59 2007
From: solca at guug.org (Otto Solares)
Date: Wed, 25 Apr 2007 13:09:59 -0600
Subject: BCM4320
In-Reply-To: <200704251449.04752.mb@bu3sch.de>
References: <20070425021650.GB7974@guug.org> <462EDE6F.4000502@gentoo.org>
	<20070425051151.GG7974@guug.org> <200704251449.04752.mb@bu3sch.de>
Message-ID: <20070425190959.GA13981@guug.org>

On Wed, Apr 25, 2007 at 02:49:04PM +0200, Michael Buesch wrote:
> On Wednesday 25 April 2007 07:11, Otto Solares wrote:
> > On Wed, Apr 25, 2007 at 12:51:59AM -0400, Joseph Jezak wrote:
> > > Otto Solares wrote:
> > > > On Tue, Apr 24, 2007 at 09:46:35PM -0600, Otto Solares wrote:
> > > >> On Tue, Apr 24, 2007 at 10:47:23PM -0400, Joseph Jezak wrote:
> > > >>> Otto Solares wrote:
> > > >>>> Hi!
> > > >>>>
> > > >>>> I have seen lot of progress in the bcm43xx driver so I searched
> > > >>>> for the BCM4320 support but can't find anything on the homepage
> > > >>>> nor this list's archive.
> > > >>>>
> > > >>>> Would like to know what is the status for this chipset? or is
> > > >>>> this chipset too different to be supported by this driver?
> > > >>>>
> > > >>>> Thanks and keep the good work!
> > > >>>>
> > > >>>> -otto
> > > >>> Are you sure this isn't a 4306?
> > > >>>
> > > >>> As far as I know, 4320 is the PCI ID, but it's really a 4306 Chip
> > > >>> ID, which is supported pretty well.
> > > >> Sorry, I forgot to mention that is in the Linksys WRT54GL.
> > > >>
> > > >> dmesg:
> > > >>
> > > >> Broadcom BCM4320 802.11 Wireless Controller
> > > > 
> > > > Well, I installed pciutils in the WRT and found this:
> > > > 
> > > > 0:05.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller
> > > >        Flags: bus master, fast devsel, latency 64, IRQ 2
> > > >        Memory at 18005000 (32-bit, non-prefetchable) [disabled]	[size=4K]
> > > >        Expansion ROM at <unassigned> [disabled] [size=2K]
> > > > 
> > > > So as you predicted it appears as a BCM4306, but last time I check
> > > > (like 2 months ago) it was rejected with the bcm43xx driver.
> > > > 
> > > > -otto
> > > 
> > > The bcm4306 on the WRT devices is connected via the SB bus, not a
> > > regular PCI device.  Michael's mac80211 branch has support for this,
> > > but I don't know the current state.  Maybe someone else can chime in
> > > here. :)
> > 
> > Where can I fetch Michael's branch, I would like to give it a test.
> 
> Use current OpenWRT development trunk.

Precisely with openwrt kamikaze (development) I tried but it
refuses to work on a WRT54GL, others have success with other
routers (fonera I think works).

-otto


From Larry.Finger at lwfinger.net  Thu Apr 26 11:15:10 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 26 Apr 2007 04:15:10 -0500
Subject: A milestone for bcm43xx and a problem
Message-ID: <46306D9E.3090009@lwfinger.net>

The SoftMAC version of bcm43xx has reached a new level with the release of kernel 2.6.21. For the 
first time, the bcm43xx code in a kernel release works without patching and transmits and receives 
at speeds faster than most Internet connections. As usual, there are enhancements in the pipeline 
that became available after 2.6.21-rc1 was established. As these did not meet the definition of "bug 
fixes", they have been deferred to 2.6.22-rc1 and following versions. The effects of these on 
transmit and receive speeds in Mbps measured with iperf are as follows for my BCM4311:

iwconfig rate      No patches      With Patches

5.5 Mbs            4.1/10.0           4.2/11.4
6                  4.4/10.6           4.5/14.6
9                  6.2/10.6           6.2/14.1
11                 6.2/9.4            6.5/12.6
18                 10.0/11.5          10.5/16.3
24                 11.8/11.5          12.3/15.6
36                 6.8/10.0           11.8/15.0
48                 1.4/6.4            1.7/8.5

All of these patches are presently found in the wireless-2.6 git tree. As usual, the combined 
patches for 2.6.21 are at ftp://lwfinger.dynalias.org/patches/combined_2.6.21.patch.

Where are improvements still needed? Besides the obvious fall-off with increasing rate as seen in 
the above table, we also have a problem when bcm43xx is used in a congested wireless environment. 
This problem has been reported by several people, but I can now reliably reproduce it using my two 
test computers.

The machine that I use to test PCMCIA modules is very slow. For example recompiling a kernel using 
the configuration of an openSUSE distribution kernel takes roughly 36 hours. To help speed 
development and testing, I have that computer export /home with NFS and cross build the kernels. 
With a BCM4311 on the main machine and a BCM4318 on the slow computer, a full kernel build is 
reduced to about 4 hours. This configuration rarely fails, even with all the network traffic 
involved in pulling sources from, and sending compilation results to, the slow machine. If, however, 
I try to pull a git update from kernel.org, one or both of the interfaces will lose its connection 
to the AP within a a very short time. The only evidence in the logs is an increased frequency of 
scanning, and DHCP connection requests. No disconnection results are logged. Infrequently, bcm43xx 
will log an "IRQ_READY timeout" message. If I change my main computer to a wired connection, the 
git-pull will succeed. An ifdown/ifup sequence usually resumes communication.

If anyone has any thoughts on why bcm43xx and/or SoftMAC should fail under this kind of load, please 
let me know so that I can test.

Thanks,

Larry


From johannes at sipsolutions.net  Thu Apr 26 11:49:42 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 26 Apr 2007 11:49:42 +0200
Subject: BCM4320
In-Reply-To: <200704251449.49908.mb@bu3sch.de>
References: <20070425021650.GB7974@guug.org> <462EBE82.1050406@lwfinger.net>
	<200704251449.49908.mb@bu3sch.de>
Message-ID: <1177580982.6814.16.camel@johannes.berg>

On Wed, 2007-04-25 at 14:49 +0200, Michael Buesch wrote:


> USB devices are a whole new ballgame for a different, yet to be written, driver.

Which is actually a trivial thing to do for somebody with a windows
machine, a usb snooper and some knowledge of C code (read the rndis
driver in Linux)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070426/f7d70459/attachment.pgp>

From Larry.Finger at lwfinger.net  Fri Apr 27 22:12:53 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 27 Apr 2007 15:12:53 -0500
Subject: bcm32xx-mac80211: Help with initial connections
Message-ID: <46325945.9080102@lwfinger.net>

If you are trying to use bcm43xx-mac80211 and are having trouble associating and/or authenticating,
then the temporary patch below may help you. It turns out that rc80211_simple, the rate-control
code, is initializing the TX rate to 54 Mbs for 802.11g cards. At the moment, the power issues
prevent that from working. The patch changes it so that the initial rate is 1 Mbs. With this change,
I am now able to connect with all 3 of my cards. Only the BCM4306 had ever connected before with
mac80211.

Please note that this is a temporary patch. Once the power issues are resolved, it shouldn't be
needed; however, I am convinced that 54 Mbs is not the proper starting value, but that argument will
come later.

Larry


Index: wireless-dev/net/mac80211/rc80211_simple.c
===================================================================
--- wireless-dev.orig/net/mac80211/rc80211_simple.c
+++ wireless-dev/net/mac80211/rc80211_simple.c
@@ -283,14 +283,14 @@ static void rate_control_simple_rate_ini
  	int i;
  	sta->txrate = 0;
  	mode = local->oper_hw_mode;
-	/* TODO: what is a good starting rate for STA? About middle? Maybe not
-	 * the lowest or the highest rate.. Could consider using RSSI from
-	 * previous packets? Need to have IEEE 802.1X auth succeed immediately
-	 * after assoc.. */
+	/* Set starting rate for STA to 1Mbs as a temporary measure */
  	for (i = 0; i < mode->num_rates; i++) {
  		if ((sta->supp_rates & BIT(i)) &&
  		    (mode->rates[i].flags & IEEE80211_RATE_SUPPORTED))
-			sta->txrate = i;
+			if (mode->rates[i].rate == 10) {
+				sta->txrate = i;
+				break;
+		}
  	}
  }




From andrew.james.barr at gmail.com  Fri Apr 27 22:28:43 2007
From: andrew.james.barr at gmail.com (Andrew J. Barr)
Date: Fri, 27 Apr 2007 16:28:43 -0400
Subject: bcm32xx-mac80211: Help with initial connections
In-Reply-To: <46325945.9080102@lwfinger.net>
References: <46325945.9080102@lwfinger.net>
Message-ID: <46325CFB.3090105@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Larry Finger wrote:
> If you are trying to use bcm43xx-mac80211 and are having trouble associating and/or authenticating,
> then the temporary patch below may help you. 

Thank you for this.

It turns out that rc80211_simple, the rate-control
> code, is initializing the TX rate to 54 Mbs for 802.11g cards. At the moment, the power issues
> prevent that from working. The patch changes it so that the initial rate is 1 Mbs. With this change,
> I am now able to connect with all 3 of my cards. Only the BCM4306 had ever connected before with
> mac80211.

I am having quite a lot of trouble with my Apple Airport Extreme card
(BCM4306). I hear that it's well-supported, but I still have power
issues, although my house is rather large and that probably exacerbates
the problem.

> Please note that this is a temporary patch. Once the power issues are resolved, it shouldn't be
> needed; however, I am convinced that 54 Mbs is not the proper starting value, but that argument will
> come later.

You might be interested in a discussion in the madwifi archives that was
similar to this. About 18-24 months ago I was trying to run an Atheros
card as an AP, and was having the trouble I have with bcm43xx-mac80211,
in reverse. There wasn't much of a problem with the wireless session
itself, but in order to authenticate I needed to be very close to the
antenna. The fix was to send out EAPOL frames at 1 Mbps. I can dig up a
gmane link if you are interested.

Andrew

> Larry
> 
> 
> Index: wireless-dev/net/mac80211/rc80211_simple.c
> ===================================================================
> --- wireless-dev.orig/net/mac80211/rc80211_simple.c
> +++ wireless-dev/net/mac80211/rc80211_simple.c
> @@ -283,14 +283,14 @@ static void rate_control_simple_rate_ini
>   	int i;
>   	sta->txrate = 0;
>   	mode = local->oper_hw_mode;
> -	/* TODO: what is a good starting rate for STA? About middle? Maybe not
> -	 * the lowest or the highest rate.. Could consider using RSSI from
> -	 * previous packets? Need to have IEEE 802.1X auth succeed immediately
> -	 * after assoc.. */
> +	/* Set starting rate for STA to 1Mbs as a temporary measure */
>   	for (i = 0; i < mode->num_rates; i++) {
>   		if ((sta->supp_rates & BIT(i)) &&
>   		    (mode->rates[i].flags & IEEE80211_RATE_SUPPORTED))
> -			sta->txrate = i;
> +			if (mode->rates[i].rate == 10) {
> +				sta->txrate = i;
> +				break;
> +		}
>   	}
>   }
> 
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev


- --
Andrew J. Barr
Thunderbird/1.5.0.10 (compatible; Icedove 1.5; X11; en-US; Linux
2.6.21-rc7 x86_64) Debian/1.5.0.10dfsg.1-3

"Why must I fail at every attempt at masonry?"
	-- Homer Simpson, "Mom and Pop Art" [AABF15]
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGMlz7huM+Z62a52oRAsMOAJ9/WR9Z8VW8g/lnwY/XTCxLQ8iD/gCeLl8u
GB4EkXNIi5VEV57PvOsG0rg=
=3D8V
-----END PGP SIGNATURE-----


From larry.finger at lwfinger.net  Fri Apr 27 22:46:30 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 27 Apr 2007 15:46:30 -0500
Subject: bcm32xx-mac80211: Help with initial connections
In-Reply-To: <46325CFB.3090105@gmail.com>
References: <46325945.9080102@lwfinger.net> <46325CFB.3090105@gmail.com>
Message-ID: <46326126.6080808@lwfinger.net>

Andrew J. Barr wrote:
> 
> I am having quite a lot of trouble with my Apple Airport Extreme card
> (BCM4306). I hear that it's well-supported, but I still have power
> issues, although my house is rather large and that probably exacerbates
> the problem.

There are at least two versions of the BCM4306. Mine is the one with a PHY revision of 1, which has 
the driver do almost everything. Later versions have the firmware doing more of the work and they 
are better. Michael Buesch has one of the later versions. Being a long ways from the AP will make it 
worse; however, I am usually only 2 m from my AP and I couldn't associate.
> 
> You might be interested in a discussion in the madwifi archives that was
> similar to this. About 18-24 months ago I was trying to run an Atheros
> card as an AP, and was having the trouble I have with bcm43xx-mac80211,
> in reverse. There wasn't much of a problem with the wireless session
> itself, but in order to authenticate I needed to be very close to the
> antenna. The fix was to send out EAPOL frames at 1 Mbps. I can dig up a
> gmane link if you are interested.

That won't be necessary. Once we get the power from the mac80211 version that we get from softmac, 
then we will be able to connect at a much higher rate.

Larry




From josejx at gentoo.org  Sat Apr 28 23:57:11 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Sat, 28 Apr 2007 17:57:11 -0400
Subject: A milestone for bcm43xx and a problem
In-Reply-To: <46306D9E.3090009@lwfinger.net>
References: <46306D9E.3090009@lwfinger.net>
Message-ID: <4633C337.9030803@gentoo.org>

<snip lots of good news>

> The machine that I use to test PCMCIA modules is very slow. For example recompiling a kernel using 
> the configuration of an openSUSE distribution kernel takes roughly 36 hours. To help speed 
> development and testing, I have that computer export /home with NFS and cross build the kernels. 
> With a BCM4311 on the main machine and a BCM4318 on the slow computer, a full kernel build is 
> reduced to about 4 hours. This configuration rarely fails, even with all the network traffic 
> involved in pulling sources from, and sending compilation results to, the slow machine. If, however, 
> I try to pull a git update from kernel.org, one or both of the interfaces will lose its connection 
> to the AP within a a very short time. The only evidence in the logs is an increased frequency of 
> scanning, and DHCP connection requests. No disconnection results are logged. Infrequently, bcm43xx 
> will log an "IRQ_READY timeout" message. If I change my main computer to a wired connection, the 
> git-pull will succeed. An ifdown/ifup sequence usually resumes communication.

Well, the IRQ_READY timeout is due to the firmware no longer
responding for some reason or another, but I can't really say why.

I guess for debugging the issue, have you tried introducing a third
card sniffing the traffic?  It might help to uncover where things go
wrong, especially if you have a reproducible environment.  If you
could track down exactly which traffic is causing the problem, it
might be easier to find the culprit.

-Joe


From larry.finger at lwfinger.net  Sun Apr 29 02:15:59 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Apr 2007 19:15:59 -0500
Subject: A milestone for bcm43xx and a problem
In-Reply-To: <4633C337.9030803@gentoo.org>
References: <46306D9E.3090009@lwfinger.net> <4633C337.9030803@gentoo.org>
Message-ID: <4633E3BF.60706@lwfinger.net>

Joseph Jezak wrote:

> Well, the IRQ_READY timeout is due to the firmware no longer
> responding for some reason or another, but I can't really say why.
> 
> I guess for debugging the issue, have you tried introducing a third
> card sniffing the traffic?  It might help to uncover where things go
> wrong, especially if you have a reproducible environment.  If you
> could track down exactly which traffic is causing the problem, it
> might be easier to find the culprit.

That is a really good idea. The only problem is that the 3rd computer only runs Windows Vista. 
According to what I read, the FC7 Test 4 Live CD should handle the Intel ipw3945 that is on my 
wife's laptop. It is Windows Vista only, and I don't dare mess with her disk, but I should be able 
to save the Kismet files on my NFS server.

Larry



