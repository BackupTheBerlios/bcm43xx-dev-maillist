From proski at gnu.org  Fri Mar  2 06:10:36 2007
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 02 Mar 2007 00:10:36 -0500
Subject: [RFC PATCH] bcm43xx: fix assert failures in
	bcm43xx_interrupt_handler()
Message-ID: <1172812236.24533.34.camel@dv>

Hello!

Sorry, another look at the assert issue in bcm43xx has taken some time.
That's the complete kernel messages from the point where the driver is
inserted to the first assertion failure.

ACPI: PCI Interrupt 0000:02:02.0[A] -> Link [LNKC] -> GSI 11 (level,
low) -> IRQ 11
bcm43xx: Chip ID 0x4306, rev 0x3
bcm43xx: Number of cores: 5
bcm43xx: Core 0: ID 0x800, rev 0x4, vendor 0x4243
bcm43xx: Core 1: ID 0x812, rev 0x5, vendor 0x4243
bcm43xx: Core 2: ID 0x80d, rev 0x2, vendor 0x4243
bcm43xx: Core 3: ID 0x807, rev 0x2, vendor 0x4243
bcm43xx: Core 4: ID 0x804, rev 0x9, vendor 0x4243
bcm43xx: PHY connected
bcm43xx: Detected PHY: Analog: 2, Type 2, Revision 2
bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
bcm43xx: Radio turned off
bcm43xx: Radio turned off
bcm43xx: PHY connected
bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 30-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)
bcm43xx: Radio turned off
bcm43xx: DMA-32 0x0200 (RX) max used slots: 1/64
bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
bcm43xx: ASSERTION FAILED (bcm43xx_status(bcm) ==
BCM43xx_STAT_INITIALIZED)
at: /home/proski/src/linux-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c:1861:bcm43xx_interrupt_handler()

I'm using the current mb tree plus the fixes to bring it up to date.
It turns out that the Broadcom card shares interrupts with a large number of devices:

# cat /proc/interrupts 
           CPU0       
  0:    1281260    XT-PIC-XT        timer
  1:         10    XT-PIC-XT        i8042
  2:          0    XT-PIC-XT        cascade
  4:       4855    XT-PIC-XT        serial
  8:          1    XT-PIC-XT        rtc
  9:        332    XT-PIC-XT        acpi
 11:     271806    XT-PIC-XT        yenta, yenta, uhci_hcd:usb1,
uhci_hcd:usb2, uhci_hcd:usb3, eth9, radeon at pci:0000:01:00.0, bcm43xx
 12:       2337    XT-PIC-XT        i8042
 14:      25257    XT-PIC-XT        ide0
 15:      37722    XT-PIC-XT        ide1
NMI:          0 
ERR:          0

It's not necessary to remove the module to trigger the assert messages.
All it takes it to bring the interface (eth0 in my case) up and down.

Assertion failures always happen when bcm43xx_status(bcm) is
BCM43xx_STAT_SHUTTINGDOWN.  Debugging shows that all of then are printed
after bcm43xx_shutdown_all_wireless_cores() sets the status and all the
way until free_irq() is called.  bcm43xx_interrupt_disable() has not
effect.

I believe it happens because bcm43xx_interrupt_handler() checks status
before it check whether the interrupt is even destined for us.  I think
the wired ethernet (eth9) and the video card can generate quite a lot of
interrupts.  Indeed, moving the assertion down eliminates all assertion
failures.

It is possible that we still can get some assertion failures caused by
the interrupts for the card after BCM43xx_STAT_SHUTTINGDOWN is set and
before bcm43xx_interrupt_disable() is called.  It tried to reproduce it
by bringing the interface down during flood ping.  I don't see assertion
failures, but I don't see any reasons why they cannot happen (I hope I'm
not seeing the obvious).

bcm43xx_d80211 is not affected because it doesn't have the
BCM43xx_STAT_SHUTTINGDOWN state.  I think the bcm43xx driver could avoid
it too if bcm43xx_shutdown_all_wireless_cores() ensured first that it's
not interrupted by anything that could access the card hardware.

I'm surprised that bcm43xx_wireless_core_reset() has a reference to
BCM43xx_STAT_SHUTTINGDOWN.  I just don't see how that function could be
called in that state.

Here's my patch, and I'm even signing it off in case it actually turns
out to be good.

---
bcm43xx: fix assert failures in bcm43xx_interrupt_handler()

First make sure that the interrupt is for us, then do sanity checks.

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 drivers/net/wireless/bcm43xx/bcm43xx_main.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
index 057541f..21d4ecd 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1858,9 +1858,6 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 
 	spin_lock(&bcm->irq_lock);
 
-	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
-	assert(bcm->current_core->id == BCM43xx_COREID_80211);
-
 	reason = bcm43xx_read32(bcm, BCM43xx_MMIO_GEN_IRQ_REASON);
 	if (reason == 0xffffffff) {
 		/* irq not for us (shared irq) */
@@ -1871,6 +1868,9 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 	if (!reason)
 		goto out;
 
+	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
+	assert(bcm->current_core->id == BCM43xx_COREID_80211);
+
 	bcm->dma_reason[0] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA0_REASON)
 			     & 0x0001DC00;
 	bcm->dma_reason[1] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA1_REASON)


-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Fri Mar  2 06:42:15 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 01 Mar 2007 23:42:15 -0600
Subject: [RFC PATCH] bcm43xx: fix assert failures
	in	bcm43xx_interrupt_handler()
In-Reply-To: <1172812236.24533.34.camel@dv>
References: <1172812236.24533.34.camel@dv>
Message-ID: <45E7B937.4010700@lwfinger.net>

Pavel Roskin wrote:
> Hello!
> 
> Sorry, another look at the assert issue in bcm43xx has taken some time.
> That's the complete kernel messages from the point where the driver is
> inserted to the first assertion failure.
--snip--
> bcm43xx: DMA-32 0x0200 (RX) max used slots: 1/64
> bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
> bcm43xx: ASSERTION FAILED (bcm43xx_status(bcm) ==
> BCM43xx_STAT_INITIALIZED)
> at: /home/proski/src/linux-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c:1861:bcm43xx_interrupt_handler()
> 
> I'm using the current mb tree plus the fixes to bring it up to date.
> It turns out that the Broadcom card shares interrupts with a large number of devices:
> 
> # cat /proc/interrupts 
>            CPU0       
>   0:    1281260    XT-PIC-XT        timer
>   1:         10    XT-PIC-XT        i8042
>   2:          0    XT-PIC-XT        cascade
>   4:       4855    XT-PIC-XT        serial
>   8:          1    XT-PIC-XT        rtc
>   9:        332    XT-PIC-XT        acpi
>  11:     271806    XT-PIC-XT        yenta, yenta, uhci_hcd:usb1,
> uhci_hcd:usb2, uhci_hcd:usb3, eth9, radeon at pci:0000:01:00.0, bcm43xx
>  12:       2337    XT-PIC-XT        i8042
>  14:      25257    XT-PIC-XT        ide0
>  15:      37722    XT-PIC-XT        ide1
> NMI:          0 
> ERR:          0

I think your analysis is correct. The reason I don't see these assertions is that my bcm43xx is
alone on IRQ 19, and no other device comes through this path. I don't remember the details on my old
computer, but I never saw these assertions. Probably, the interrupt was shared, but by less active
devices.

> It's not necessary to remove the module to trigger the assert messages.
> All it takes it to bring the interface (eth0 in my case) up and down.
> 
> Assertion failures always happen when bcm43xx_status(bcm) is
> BCM43xx_STAT_SHUTTINGDOWN.  Debugging shows that all of then are printed
> after bcm43xx_shutdown_all_wireless_cores() sets the status and all the
> way until free_irq() is called.  bcm43xx_interrupt_disable() has not
> effect.
> 
> I believe it happens because bcm43xx_interrupt_handler() checks status
> before it check whether the interrupt is even destined for us.  I think
> the wired ethernet (eth9) and the video card can generate quite a lot of
> interrupts.  Indeed, moving the assertion down eliminates all assertion
> failures.
> 
> It is possible that we still can get some assertion failures caused by
> the interrupts for the card after BCM43xx_STAT_SHUTTINGDOWN is set and
> before bcm43xx_interrupt_disable() is called.  It tried to reproduce it
> by bringing the interface down during flood ping.  I don't see assertion
> failures, but I don't see any reasons why they cannot happen (I hope I'm
> not seeing the obvious).

My observation is that they do not occur, but I have not done a thorough analysis.

> bcm43xx_d80211 is not affected because it doesn't have the
> BCM43xx_STAT_SHUTTINGDOWN state.  I think the bcm43xx driver could avoid
> it too if bcm43xx_shutdown_all_wireless_cores() ensured first that it's
> not interrupted by anything that could access the card hardware.
> 
> I'm surprised that bcm43xx_wireless_core_reset() has a reference to
> BCM43xx_STAT_SHUTTINGDOWN.  I just don't see how that function could be
> called in that state.
> 
> Here's my patch, and I'm even signing it off in case it actually turns
> out to be good.

I'm testing it now and will send it upstream unless someone objects.

Thanks for the effort in chasing this down.

Larry



From proski at gnu.org  Fri Mar  2 07:26:59 2007
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 02 Mar 2007 01:26:59 -0500
Subject: Assertion failed in ieee80211softmac_wx_get_rate
Message-ID: <1172816819.26330.12.camel@dv>

Hello!

If I load bcm43xx and run iwconfig without bringing the interface up,
I'm getting this in the kernel log:

SoftMAC: ASSERTION FAILED (0)
at: /home/proski/src/linux-2.6/net/ieee80211/softmac/ieee80211softmac_wx.c:306:ieee80211softmac_wx_get_rate()

It's an x86 system with the 2.6.20 kernel (actually, it's the master
branch from the mb repository, which is wireless-dev before the 2.6.21
switchover plus broadcom fixes).

The assert assures that the interface has a valid tx rate.  But since
the interface has never been up, the rate has not been assigned.

Either softmac should tolerate rate 0, at least when the interface is
down, or it should initialize the rate much earlier, perhaps in
alloc_ieee80211softmac().

I can test another tree, e.g. wireless-2.6, if there are chances that
the problem has been fixed.

-- 
Regards,
Pavel Roskin



From linville at tuxdriver.com  Fri Mar  2 14:57:34 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 2 Mar 2007 08:57:34 -0500
Subject: Assertion failed in ieee80211softmac_wx_get_rate
In-Reply-To: <1172816819.26330.12.camel@dv>
References: <1172816819.26330.12.camel@dv>
Message-ID: <20070302135734.GB6676@tuxdriver.com>

On Fri, Mar 02, 2007 at 01:26:59AM -0500, Pavel Roskin wrote:
> Hello!
> 
> If I load bcm43xx and run iwconfig without bringing the interface up,
> I'm getting this in the kernel log:
> 
> SoftMAC: ASSERTION FAILED (0)
> at: /home/proski/src/linux-2.6/net/ieee80211/softmac/ieee80211softmac_wx.c:306:ieee80211softmac_wx_get_rate()
> 
> It's an x86 system with the 2.6.20 kernel (actually, it's the master
> branch from the mb repository, which is wireless-dev before the 2.6.21
> switchover plus broadcom fixes).
> 
> The assert assures that the interface has a valid tx rate.  But since
> the interface has never been up, the rate has not been assigned.
> 
> Either softmac should tolerate rate 0, at least when the interface is
> down, or it should initialize the rate much earlier, perhaps in
> alloc_ieee80211softmac().
> 
> I can test another tree, e.g. wireless-2.6, if there are chances that
> the problem has been fixed.

Does the tree you are using have this commit?

commit 6bbdce5ac755e3b3cdcf9bb9fdbcc2af78ad34d0
Author: John W. Linville <linville at tuxdriver.com>
Date:   Tue Jan 2 21:22:05 2007 -0500

    [PATCH] softmac: avoid assert in ieee80211softmac_wx_get_rate

    Unconfigured bcm43xx device can hit an assert() during wx_get_rate
    queries.  This is because bcm43xx calls ieee80211softmac_start late
    (i.e. during open instead of probe).

       bcm43xx_net_open ->
          bcm43xx_init_board ->
             bcm43xx_select_wireless_core ->
                ieee80211softmac_start

    Fix is to check that device is running before completing
    ieee80211softmac_wx_get_rate.

    Signed-off-by: John W. Linville <linville at tuxdriver.com>

It is in linux-2.6, wireless-2.6, and wireless-dev.  If you don't
want to use those trees, you should be able to apply the patch to
the tree you are using.

Hth!

John
-- 
John W. Linville
linville at tuxdriver.com


From proski at gnu.org  Fri Mar  2 17:28:38 2007
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 02 Mar 2007 11:28:38 -0500
Subject: Assertion failed in ieee80211softmac_wx_get_rate
In-Reply-To: <20070302135734.GB6676@tuxdriver.com>
References: <1172816819.26330.12.camel@dv>
	<20070302135734.GB6676@tuxdriver.com>
Message-ID: <1172852918.30875.3.camel@dv>

On Fri, 2007-03-02 at 08:57 -0500, John W. Linville wrote:
> Does the tree you are using have this commit?
> 
> commit 6bbdce5ac755e3b3cdcf9bb9fdbcc2af78ad34d0

Now it has :)
Thanks and sorry for the noise.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Fri Mar  2 18:23:40 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 02 Mar 2007 11:23:40 -0600
Subject: Assertion failed in ieee80211softmac_wx_get_rate
In-Reply-To: <20070302135734.GB6676@tuxdriver.com>
References: <1172816819.26330.12.camel@dv>
	<20070302135734.GB6676@tuxdriver.com>
Message-ID: <45E85D9C.4090602@lwfinger.net>

John W. Linville wrote:
> 
> It is in linux-2.6, wireless-2.6, and wireless-dev.  If you don't
> want to use those trees, you should be able to apply the patch to
> the tree you are using.

If you wish to run bcm43xx-softmac from either the mb (Michael Buesch) or the wireless-dev trees,
you can get a patch to update them to the current state of my code at
ftp://lwfinger.dynalias.org/patches/update_mb_0302.patch. This patch not only includes the things
that are in the wireless-2.6 tree, but changes that are in progress.

FYI, I have compile-, but not yet run-tested this tree with these changes.

Larry



From Larry.Finger at lwfinger.net  Fri Mar  2 18:30:19 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 02 Mar 2007 11:30:19 -0600
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
Message-ID: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>

There was an error in the B5PHY init specifications.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This patch is meant for wireless-2.6, 'upstream', and 'upstream-fixes'.

Larry

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -806,7 +806,7 @@ static void bcm43xx_phy_initb5(struct bc
 	/* Force to channel 7, even if not supported. */
 	bcm43xx_radio_selectchannel(bcm, 7, 0);
 
-	if (radio->version != 0x2050) {
+	if (radio->version == 0x2050) {
 		bcm43xx_radio_write16(bcm, 0x0075, 0x0080);
 		bcm43xx_radio_write16(bcm, 0x0079, 0x0081);
 	}


From Larry.Finger at lwfinger.net  Fri Mar  2 18:36:29 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 02 Mar 2007 11:36:29 -0600
Subject: [PATCH] bcm43xx: Fix assertion failures in interrupt handler
Message-ID: <45e8609d.Ypw71Z7iN5G3uSmi%Larry.Finger@lwfinger.net>

From: Pavel Roskin <proski at gnu.org>

In the bcm43xx interrupt handler, sanity checks are wrongly done before the
verification that the interrupt is for the bcm43xx.

Signed-off-by: Pavel Roskin <proski at gnu.org>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

 drivers/net/wireless/bcm43xx/bcm43xx_main.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
index 057541f..21d4ecd 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1858,9 +1858,6 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 
 	spin_lock(&bcm->irq_lock);
 
-	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
-	assert(bcm->current_core->id == BCM43xx_COREID_80211);
-
 	reason = bcm43xx_read32(bcm, BCM43xx_MMIO_GEN_IRQ_REASON);
 	if (reason == 0xffffffff) {
 		/* irq not for us (shared irq) */
@@ -1871,6 +1868,9 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 	if (!reason)
 		goto out;
 
+	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
+	assert(bcm->current_core->id == BCM43xx_COREID_80211);
+
 	bcm->dma_reason[0] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA0_REASON)
 			     & 0x0001DC00;
 	bcm->dma_reason[1] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA1_REASON)

---



From Larry.Finger at lwfinger.net  Fri Mar  2 19:32:06 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 02 Mar 2007 12:32:06 -0600
Subject: [PATCH] bcm43xx: Fix bug in frequency to channel conversion
Message-ID: <45e86da6.364P62Xmkc0zH2f9%Larry.Finger@lwfinger.net>

From: Joerg Sommer <joerg at alea.gnuu.de>

The frequency to channel routine in bcm43xx requires that the frequency
be in MHz, but that condition is not always met. This patch does the
necessary conversion.

Signed-off-by: Joerg Sommer <joerg at alea.gnuu.de>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_wx.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_wx.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_wx.c
@@ -106,18 +106,24 @@ static int bcm43xx_wx_set_channelfreq(st
 	struct bcm43xx_private *bcm = bcm43xx_priv(net_dev);
 	unsigned long flags;
 	u8 channel;
+	s8 expon;
 	int freq;
 	int err = -EINVAL;
 
 	mutex_lock(&bcm->mutex);
 	spin_lock_irqsave(&bcm->irq_lock, flags);
 
-	if ((data->freq.m >= 0) && (data->freq.m <= 1000)) {
+	if ((data->freq.e == 0) &&
+	    (data->freq.m >= 0) && (data->freq.m <= 1000)) {
 		channel = data->freq.m;
 		freq = bcm43xx_channel_to_freq(bcm, channel);
 	} else {
-		channel = bcm43xx_freq_to_channel(bcm, data->freq.m);
 		freq = data->freq.m;
+		expon = 6 - data->freq.e;
+		while (--expon >= 0)    /* scale down the frequency to MHz */
+			freq /= 10;
+		assert(freq > 1000);
+		channel = bcm43xx_freq_to_channel(bcm, freq);
 	}
 	if (!ieee80211_is_valid_channel(bcm->ieee, channel))
 		goto out_unlock;

---



From nemo3383 at gmail.com  Fri Mar  2 20:17:26 2007
From: nemo3383 at gmail.com (Dustin Souers)
Date: Fri, 2 Mar 2007 14:17:26 -0500
Subject: bcm4311: Offering of help
Message-ID: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>

Hi bcm43xx developers,

I own a bcm4311 card on my laptop (HP Pavilion dv2120us). Is there
anything I can do to help get make this card work? I know the card
works under ndiswrapper. And I wish I could afford to buy you a
bcm4311 but I'm just a college student. I am willing to test new
kernel code and send feedback and logs.

Thanks for the hardwork you are currently putting into the project.

--Dustin


From hijinks at gmail.com  Fri Mar  2 20:21:10 2007
From: hijinks at gmail.com (Mike Zupan)
Date: Fri, 2 Mar 2007 14:21:10 -0500
Subject: bcm4311: Offering of help
In-Reply-To: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
References: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
Message-ID: <7227c6c70703021121v4d284217i851f9160b66bc861@mail.gmail.com>

apply this patch

ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch

recompile 2.6.20 and it should work.. i have the same laptop and it works
perfectly with that patch

On 3/2/07, Dustin Souers <nemo3383 at gmail.com> wrote:
>
> Hi bcm43xx developers,
>
> I own a bcm4311 card on my laptop (HP Pavilion dv2120us). Is there
> anything I can do to help get make this card work? I know the card
> works under ndiswrapper. And I wish I could afford to buy you a
> bcm4311 but I'm just a college student. I am willing to test new
> kernel code and send feedback and logs.
>
> Thanks for the hardwork you are currently putting into the project.
>
> --Dustin
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070302/004f4117/attachment.html>

From dmaley at redhat.com  Fri Mar  2 20:25:06 2007
From: dmaley at redhat.com (Dave Maley)
Date: Fri, 02 Mar 2007 14:25:06 -0500
Subject: bcm4311: Offering of help
In-Reply-To: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
References: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
Message-ID: <1172863506.2658.56.camel@flanders.rdu.redhat.com>

Hi Dustin - I have this same card/laptop and it's working just fine for
me w/ some key upstream changes applied.  If you're using a vanilla
upstream kernel Larry Finger has the needed patchsets available on his
site (search the mailing list for the URL).  Or if you run Fedora you
can grab the latest Fedora test kernels provided by John Linville here:

http://people.redhat.com/linville/kernels/fc6

Cheers,
Dave

On Fri, 2007-03-02 at 14:17 -0500, Dustin Souers wrote:
> Hi bcm43xx developers,
> 
> I own a bcm4311 card on my laptop (HP Pavilion dv2120us). Is there
> anything I can do to help get make this card work? I know the card
> works under ndiswrapper. And I wish I could afford to buy you a
> bcm4311 but I'm just a college student. I am willing to test new
> kernel code and send feedback and logs.
> 
> Thanks for the hardwork you are currently putting into the project.
> 
> --Dustin
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From larry.finger at lwfinger.net  Fri Mar  2 20:51:49 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 02 Mar 2007 13:51:49 -0600
Subject: bcm4311: Offering of help
In-Reply-To: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
References: <dfde37650703021117o54dd40b4vc523e789e4b151d8@mail.gmail.com>
Message-ID: <45E88055.8060405@lwfinger.net>

Dustin Souers wrote:
> Hi bcm43xx developers,
> 
> I own a bcm4311 card on my laptop (HP Pavilion dv2120us). Is there
> anything I can do to help get make this card work? I know the card
> works under ndiswrapper. And I wish I could afford to buy you a
> bcm4311 but I'm just a college student. I am willing to test new
> kernel code and send feedback and logs.
> 
> Thanks for the hardwork you are currently putting into the project.

I have an HP Pavilion dv2126nr with a 4311. It works better than either my 4306 or 4318. What kernel
are you using?

Larry


From mb at bu3sch.de  Sat Mar  3 17:21:42 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 3 Mar 2007 17:21:42 +0100
Subject: [PATCH] bcm43xx: Fix assertion failures in interrupt handler
In-Reply-To: <45e8609d.Ypw71Z7iN5G3uSmi%Larry.Finger@lwfinger.net>
References: <45e8609d.Ypw71Z7iN5G3uSmi%Larry.Finger@lwfinger.net>
Message-ID: <200703031721.42811.mb@bu3sch.de>

On Friday 02 March 2007 18:36, Larry Finger wrote:
> From: Pavel Roskin <proski at gnu.org>
> 
> In the bcm43xx interrupt handler, sanity checks are wrongly done before the
> verification that the interrupt is for the bcm43xx.
> 
> Signed-off-by: Pavel Roskin <proski at gnu.org>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

ACK, I'm sorry for this really stupid bug. ;)

> ---
> 
>  drivers/net/wireless/bcm43xx/bcm43xx_main.c |    6 +++---
>  1 files changed, 3 insertions(+), 3 deletions(-)
> 
> diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> index 057541f..21d4ecd 100644
> --- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> +++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> @@ -1858,9 +1858,6 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
>  
>  	spin_lock(&bcm->irq_lock);
>  
> -	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
> -	assert(bcm->current_core->id == BCM43xx_COREID_80211);
> -
>  	reason = bcm43xx_read32(bcm, BCM43xx_MMIO_GEN_IRQ_REASON);
>  	if (reason == 0xffffffff) {
>  		/* irq not for us (shared irq) */
> @@ -1871,6 +1868,9 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
>  	if (!reason)
>  		goto out;
>  
> +	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
> +	assert(bcm->current_core->id == BCM43xx_COREID_80211);
> +
>  	bcm->dma_reason[0] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA0_REASON)
>  			     & 0x0001DC00;
>  	bcm->dma_reason[1] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA1_REASON)
> 
> ---
> 
> 
> 

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sun Mar  4 02:00:36 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 03 Mar 2007 19:00:36 -0600
Subject: [PATCH] bcm43xx: remove ethtool
Message-ID: <45ea1a34.Lf4EKmMy+KAmSkH0%Larry.Finger@lwfinger.net>

Ethtool is useless for bcm43xx - remove it.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---


Index: wireless-2.6/drivers/net/wireless/bcm43xx/Makefile
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/Makefile
+++ wireless-2.6/drivers/net/wireless/bcm43xx/Makefile
@@ -7,6 +7,6 @@ bcm43xx-obj-$(CONFIG_BCM43XX_PIO) += bcm
 bcm43xx-objs := bcm43xx_main.o bcm43xx_ilt.o \
 		bcm43xx_radio.o bcm43xx_phy.o \
 		bcm43xx_power.o bcm43xx_wx.o \
-		bcm43xx_leds.o bcm43xx_ethtool.o \
+		bcm43xx_leds.o  \
 		bcm43xx_xmit.o bcm43xx_sysfs.o \
 		$(bcm43xx-obj-y)
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-
-  Broadcom BCM43xx wireless driver
-
-  ethtool support
-
-  Copyright (c) 2006 Jason Lunz <lunz at falooley.org>
-
-  Some code in this file is derived from the 8139too.c driver
-  Copyright (C) 2002 Jeff Garzik
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
-  Boston, MA 02110-1301, USA.
-
-*/
-
-#include "bcm43xx.h"
-#include "bcm43xx_ethtool.h"
-
-#include <linux/netdevice.h>
-#include <linux/pci.h>
-#include <linux/string.h>
-#include <linux/utsrelease.h>
-
-
-static void bcm43xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
-{
-	struct bcm43xx_private *bcm = bcm43xx_priv(dev);
-
-	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strncpy(info->version, UTS_RELEASE, sizeof(info->version));
-	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
-}
-
-const struct ethtool_ops bcm43xx_ethtool_ops = {
-	.get_drvinfo = bcm43xx_get_drvinfo,
-	.get_link = ethtool_op_get_link,
-};
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef BCM43xx_ETHTOOL_H_
-#define BCM43xx_ETHTOOL_H_
-
-#include <linux/ethtool.h>
-
-extern const struct ethtool_ops bcm43xx_ethtool_ops;
-
-#endif /* BCM43xx_ETHTOOL_H_ */
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -50,7 +50,6 @@
 #include "bcm43xx_pio.h"
 #include "bcm43xx_power.h"
 #include "bcm43xx_wx.h"
-#include "bcm43xx_ethtool.h"
 #include "bcm43xx_xmit.h"
 #include "bcm43xx_sysfs.h"
 
@@ -4155,7 +4154,6 @@ static int __devinit bcm43xx_init_one(st
 #endif
 	net_dev->wireless_handlers = &bcm43xx_wx_handlers_def;
 	net_dev->irq = pdev->irq;
-	SET_ETHTOOL_OPS(net_dev, &bcm43xx_ethtool_ops);
 
 	/* initialize the bcm43xx_private struct */
 	bcm = bcm43xx_priv(net_dev);


From larry.finger at lwfinger.net  Sun Mar  4 04:29:37 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 03 Mar 2007 21:29:37 -0600
Subject: [PATCH] bcm43xx: remove ethtool
In-Reply-To: <45EA3272.7090101@garzik.org>
References: <45ea1a34.Lf4EKmMy+KAmSkH0%Larry.Finger@lwfinger.net>
	<45EA3272.7090101@garzik.org>
Message-ID: <45EA3D21.3080203@lwfinger.net>

Jeff Garzik wrote:
> Larry Finger wrote:
>> Ethtool is useless for bcm43xx - remove it.
>>
>> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> 
> How is GDRVINFO useless?  Where does mac80211 provide equivalent
> information?

I cannot speak for mac80211, but the current implementation for SoftMAC only implements the GDRVINFO
call. From it, you get that the driver is bcm43xx (big surprise), the kernel version (easier gotten
by a uname -r), and the bus info. None of the operational parameters can be changed or interrogated.

Is this enough to keep the ethtool interface? Because of the EOL for SoftMAC, this code will never
be enhanced or extended. Does some userland code need this info?

Larry


From proski at gnu.org  Sun Mar  4 06:10:01 2007
From: proski at gnu.org (Pavel Roskin)
Date: Sun,  4 Mar 2007 00:10:01 -0500
Subject: [PATCH] bcm43xx: remove ethtool
In-Reply-To: <45EA43EF.1080009@garzik.org>
References: <45ea1a34.Lf4EKmMy+KAmSkH0%Larry.Finger@lwfinger.net>
	<45EA3272.7090101@garzik.org> <45EA3D21.3080203@lwfinger.net>
	<45EA43EF.1080009@garzik.org>
Message-ID: <20070304001001.z1p520cck44ookcs@webmail.spamcop.net>

Quoting Jeff Garzik <jeff at garzik.org>:

> It's a highly standardized interface that provides information that's
> either impossible or highly difficult to obtain elsewhere.

For what it's worth, ifrename in the forthcoming Wireless Tools 29 will support
reading symlinks on sysfs, which would allow matching the device and  the
driver name.  Other userspace tools can do the same.

$ readlink /sys/class/net/eth0/device
../../../devices/pci0000:00/0000:00:0d.0/0000:01:02.0
$ readlink /sys/class/net/eth0/device/driver
../../../../bus/pci/drivers/orinoco_plx

That's 2.6.20, things may be slightly different on 2.6.21+

> If you are a userland process querying a network interface, that's the
> only way to know which driver is attached, or the only way to build an
> association between a PCI device and a network interface.
>
> So NAK this change.  All network drivers should implement GDRVINFO, even
> if they are not strictly ethernet drivers.

I would say it's not yet time to remove it.  But if a driver doesn't implement
it (that's the case for bcm43xx_d80211), I don't think we should bother
implementing it.

--
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Sun Mar  4 06:55:08 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 03 Mar 2007 23:55:08 -0600
Subject: [PATCH] bcm43xx: do not rebuild when kernel version changes
Message-ID: <45ea5f3c.mlfmHoZ11OcoG/sT%Larry.Finger@lwfinger.net>

From: Sam Ravnborg <sam at ravnborg.org>

In bcm43xx_ethtool, UTS_RELEASE is used. Replacing this with utsname()->release
avoids rebuilding this module each time the kernel version changes.

Signed-off-by: Sam Ravnborg <sam at ravnborg.org>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

As the ethtool removal was NACKed by Jeff, we need to do this one.

Larry

===

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c b/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
index c947025..d2df6a0 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
@@ -32,7 +32,7 @@
 #include <linux/netdevice.h>
 #include <linux/pci.h>
 #include <linux/string.h>
-#include <linux/utsrelease.h>
+#include <linux/utsname.h>
 
 
 static void bcm43xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
@@ -40,7 +40,7 @@ static void bcm43xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *
 	struct bcm43xx_private *bcm = bcm43xx_priv(dev);
 
 	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strncpy(info->version, UTS_RELEASE, sizeof(info->version));
+	strncpy(info->version, utsname()->release, sizeof(info->version));
 	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
 }
 
-



From mb at bu3sch.de  Sun Mar  4 13:57:32 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 4 Mar 2007 13:57:32 +0100
Subject: [PATCH] bcm43xx: do not rebuild when kernel version changes
In-Reply-To: <45ea5f3c.mlfmHoZ11OcoG/sT%Larry.Finger@lwfinger.net>
References: <45ea5f3c.mlfmHoZ11OcoG/sT%Larry.Finger@lwfinger.net>
Message-ID: <200703041357.33238.mb@bu3sch.de>

On Sunday 04 March 2007 06:55, Larry Finger wrote:
> From: Sam Ravnborg <sam at ravnborg.org>
> 
> In bcm43xx_ethtool, UTS_RELEASE is used. Replacing this with utsname()->release
> avoids rebuilding this module each time the kernel version changes.
> 
> Signed-off-by: Sam Ravnborg <sam at ravnborg.org>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> John,
> 
> As the ethtool removal was NACKed by Jeff, we need to do this one.

What the fuck, why?

> Larry
> 
> ===
> 
> diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c b/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
> index c947025..d2df6a0 100644
> --- a/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
> +++ b/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
> @@ -32,7 +32,7 @@
>  #include <linux/netdevice.h>
>  #include <linux/pci.h>
>  #include <linux/string.h>
> -#include <linux/utsrelease.h>
> +#include <linux/utsname.h>
>  
>  
>  static void bcm43xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
> @@ -40,7 +40,7 @@ static void bcm43xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *
>  	struct bcm43xx_private *bcm = bcm43xx_priv(dev);
>  
>  	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
> -	strncpy(info->version, UTS_RELEASE, sizeof(info->version));
> +	strncpy(info->version, utsname()->release, sizeof(info->version));
>  	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
>  }
>  
> -
> 
> 
> 

-- 
Greetings Michael.


From mb at bu3sch.de  Sun Mar  4 13:59:21 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 4 Mar 2007 13:59:21 +0100
Subject: [PATCH] bcm43xx: remove ethtool
In-Reply-To: <45EA43EF.1080009@garzik.org>
References: <45ea1a34.Lf4EKmMy+KAmSkH0%Larry.Finger@lwfinger.net>
	<45EA3D21.3080203@lwfinger.net> <45EA43EF.1080009@garzik.org>
Message-ID: <200703041359.21869.mb@bu3sch.de>

On Sunday 04 March 2007 04:58, Jeff Garzik wrote:
> Larry Finger wrote:
> > Jeff Garzik wrote:
> >> Larry Finger wrote:
> >>> Ethtool is useless for bcm43xx - remove it.
> >>>
> >>> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> >> How is GDRVINFO useless?  Where does mac80211 provide equivalent
> >> information?
> > 
> > I cannot speak for mac80211, but the current implementation for SoftMAC only implements the GDRVINFO
> > call. From it, you get that the driver is bcm43xx (big surprise), the kernel version (easier gotten
> > by a uname -r), and the bus info. None of the operational parameters can be changed or interrogated.
> > 
> > Is this enough to keep the ethtool interface? Because of the EOL for SoftMAC, this code will never
> > be enhanced or extended. Does some userland code need this info?
> 
> It's a highly standardized interface that provides information that's 
> either impossible or highly difficult to obtain elsewhere.
> 
> If you are a userland process querying a network interface, that's the 
> only way to know which driver is attached, or the only way to build an 
> association between a PCI device and a network interface.

sysfs provides all this information.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sun Mar  4 19:55:14 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 04 Mar 2007 12:55:14 -0600
Subject: [PATCH] bcm43xx: Add firmware version to ethtool output
Message-ID: <45eb1612.l8xsd6TwZVsRseAH%Larry.Finger@lwfinger.net>

As the removal of ethtool capability from bcm43xx has been NACKed,
some useful functionality should be added. This patch changes it
so that the firmware version is output.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_ethtool.c
@@ -27,6 +27,7 @@
 */
 
 #include "bcm43xx.h"
+#include "bcm43xx_main.h"
 #include "bcm43xx_ethtool.h"
 
 #include <linux/netdevice.h>
@@ -42,6 +43,8 @@ static void bcm43xx_get_drvinfo(struct n
 	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
 	strncpy(info->version, utsname()->release, sizeof(info->version));
 	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
+	snprintf(info->fw_version, sizeof(info->fw_version), "0x%x",
+		 bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, BCM43xx_UCODE_REVISION));
 }
 
 const struct ethtool_ops bcm43xx_ethtool_ops = {


From mb at bu3sch.de  Sun Mar  4 20:02:39 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 4 Mar 2007 20:02:39 +0100
Subject: [PATCH] bcm43xx: Add firmware version to ethtool output
In-Reply-To: <45eb1612.l8xsd6TwZVsRseAH%Larry.Finger@lwfinger.net>
References: <45eb1612.l8xsd6TwZVsRseAH%Larry.Finger@lwfinger.net>
Message-ID: <200703042002.39581.mb@bu3sch.de>

On Sunday 04 March 2007 19:55, Larry Finger wrote:
> As the removal of ethtool capability from bcm43xx has been NACKed,
> some useful functionality should be added.

I cannot follow this logics, sorry. ;)

> This patch changes it
> so that the firmware version is output.

I don't see how this is useful.
I really want to avoid having more ethtool stuff, as it will
only create compatibility issues for the future.
This doesn't give information that's not available elsewhere.

>  #include "bcm43xx.h"
> +#include "bcm43xx_main.h"
>  #include "bcm43xx_ethtool.h"
>  
>  #include <linux/netdevice.h>
> @@ -42,6 +43,8 @@ static void bcm43xx_get_drvinfo(struct n
>  	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
>  	strncpy(info->version, utsname()->release, sizeof(info->version));
>  	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
> +	snprintf(info->fw_version, sizeof(info->fw_version), "0x%x",
> +		 bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, BCM43xx_UCODE_REVISION));

This will crash when the device is not up.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Mon Mar  5 06:13:31 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 04 Mar 2007 23:13:31 -0600
Subject: Pull the patch sent under heading "[PATCH] bcm43xx: Fix typo in B5PHY
	init specifications"
Message-ID: <45EBA6FB.4040602@lwfinger.net>

John,

Please pull the patch referenced in the subject. It completely kills my BCM4306 with phy->revision == 1.

Joe Jezak and I will have to sort this one out.

Thanks,

Larry


From josejx at gentoo.org  Mon Mar  5 07:40:55 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Mon, 05 Mar 2007 01:40:55 -0500
Subject: Pull the patch sent under heading "[PATCH] bcm43xx: Fix typo
	in B5PHY	init specifications"
In-Reply-To: <45EBA6FB.4040602@lwfinger.net>
References: <45EBA6FB.4040602@lwfinger.net>
Message-ID: <45EBBB77.5040309@gentoo.org>

Larry Finger wrote:
> John,
> 
> Please pull the patch referenced in the subject. It completely kills my BCM4306 with phy->revision == 1.
> 
> Joe Jezak and I will have to sort this one out.
> 
> Thanks,
> 
> Larry

Sorry,

Larry is correct, this was a mistranslation on my part.  The patch
referred to by the subject should be removed as it is wrong.  The
specs have been fixed.

Again, sorry for the trouble.
-Joe


From Larry.Finger at lwfinger.net  Mon Mar  5 17:36:11 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 05 Mar 2007 10:36:11 -0600
Subject: Current state of bcm43xx-softmac
Message-ID: <45EC46FB.9060904@lwfinger.net>

As many of you know, my old laptop that I was using to test PCMCIA versions of the bcm43xx hardware
died a few weeks ago. Thanks to the generosity of the contributors to the project, I was able to
replace it with a modest computer purchased on EBay. It is an M-Tech eSlate 400k, which has an AMD
450 MHz CPU and arrived with a 4 GB hard drive with Windows 98. Using parts salvaged from my old
computer, I was able to bring the memory up to 256 MB, the maximum supported by the motherboard, and
it now has a 100 GB hard drive. I loaded openSUSE 10.2 on the machine and downloaded the
wireless-2.6 git tree. The machine is slower than the CPU speed would indicate; however, it gets the
job done.

I now have 3 different versions of the bcm43xx hardware to test. The chip models and pertinent
revisions are as follows:

1. BCM4306 Rev 2 with PHY Analog 1 Rev 2 and 2050 Radio Rev 2. (PCMCIA)
2. BCM4318 Rev 2 with PHY Analog 3 Rev 7 and 2050 Radio Rev 8. (PCMCIA)
3. BCM4311 Rev 1 with PHY Analog 4 Rev 8 and 2050 Radio Rev 2. (mini-PCIe card)

Performance testing is accomplished using Iperf with the server connected to my Linksys WRT54G V5
AP/router via a 100 BaseTX wired connection. If I boot Windows XP and run Iperf from it, I get 19.5
Mbs reported. As the Iperf results show considerable jitter, I always run at least 5 trials and
report the maximum. The distance from my test computer to the AP is approximately 2m. All bcm43xx
tests were done with the latest patches applied.

Each interface was tested at rates set from 11 to 48 Mbs with the resulting measured transmission
rate show below:

Rate Set	11	18	24	36	48
----------------------------------------------------
4306		4.65	3.34	6.64	3.48	2.34
4318		6.12	9.86	11.8	14.6	16.2
4311		5.83	9.19	10.8	12.9	3.08

The improvement over a couple of weeks ago is remarkable. The latest tweaks to the specifications
have been very beneficial. Thanks again to Joe Jezak. Note that the 4318, which used to have the
worst performance, is now clipping along with performance more than 80% of the Windows driver
written with full access to the hardware specs. The old 4306 with a PHY Rev 1 still needs the most work.

A second part of my test procedure is to use a Wi-Spy 2.4 GHz spectrum analyzer
(http://metageek.net) and their Chanalyzer 2.0 software to look at the output from the various
radios at a distance of about 1.8 m. The results show the following:

Card		Amplitude at 1.8 m with rate=24 Mbs
---------------------------------------------------
4306		-50 to -60 dBm
4318		-60 to -70 dBm
4311		-55 to -65 dBm

I'm surprised that amplitude of signal does not correlate with performance; however, the 4311
amplitude does diminish a lot at the 48 Mbs rate, which probably explains the falloff in performance
at that rate. In addition, the 4306 showed a much poorer separation of the individual subchannels in
the spectrum.

Larry


From richie at coderworld.net  Mon Mar  5 18:20:01 2007
From: richie at coderworld.net (Richard)
Date: Mon, 5 Mar 2007 18:20:01 +0100
Subject: My experience
Message-ID: <200703051820.01475.richie@coderworld.net>

Hi all!

I've been running the bcm43xx driver on a bcm4311 for a few weeks now.
I'm using kubuntu, and have a homebaked 2.6.20 vanilla kernel with Larrys 
combined_2.6.20.patch. My laptop is a HP dv2140eu.

I've experienced a few oddities that follow.

When returning from acpi sleep the computer often feezes. My solution is to 
run "modprobe -r bcm32xx" before suspend and then "modprobe bcm43xx" manually 
after resume. I can not do this in a script as this will hang the computer. 
Even if it's set as the last script.

After modprobing the driver I need to run some iwconfig commands on the 
interface to bring it up. "iwconfig eth1 essid off" is sufficient. But it 
won't work until a few seconds after the driver is loaded. If I don't issue 
any iwconfig commands the device will never associate.

I have burnt a few dvd-rw's over the network and the sustained speed is 
between 200-800kbyte regardless of rate. The thing is that after a while the 
throughput becomes zero and won't come back unless I unload and reload the 
driver again. With higher rates I get higher spikes, but overall it is the 
same throughput and the connection is more stable at 11 and 12M than 18 and 
24. Anything above is very unstable.

Note that I have no previous experience of wireless devices in linux, nor 
suspend/hibernate.

Without your work and dedication I would never be able to run linux on this 
machine, so thank you for your effort and great work!

Btw, do you take (monetary) donations, and if so, how is it spent?


From mb at bu3sch.de  Mon Mar  5 22:33:29 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 5 Mar 2007 22:33:29 +0100
Subject: Please pull http://bu3sch.de/git/wireless-dev.git for-linville
Message-ID: <200703052233.30189.mb@bu3sch.de>

This batch of patches includes a few critical bugfixes
and bugfixes for issues just reported in the -mm kernel.




The following changes since commit 96f93b6fbd8b2cd454ede3a9b75bbd98415164d8:
  Ivo van Doorn:
        rt2x00: fix NULL pointer exception

are found in the git repository at:

  http://bu3sch.de/git/wireless-dev.git for-linville

Michael Buesch:
      bcm43xx-mac80211: fix a sparse warning
      ssb: Save lots of memory by shrinking struct ssb_device.
      bcm43xx-mac80211: Ignore any IRQ that's not for us.
      bcm43xx-mac80211: Flip radio_ver conditional in b5 init.
      bcm43xx-mac80211: Don't free beacon_control, as it's not allocated dynamically.
      bcm43xx-mac80211: bcm43xx-pcmcia must depend on PCMCIA
      Subject: bcm43xx-mac80211: Put the PCI stub into main.c
      ssb: Fix compile of OHCI core driver.
      ssb: Don't poke with dev->drvdata in SSB to avoid a conflict with USB OHCI.
      ssb-ohci: Proper start/reset and suspend/resume routines.

 drivers/net/b44.c                                  |   50 ++++---
 drivers/net/wireless/mac80211/bcm43xx/Kconfig      |    2 
 drivers/net/wireless/mac80211/bcm43xx/Makefile     |    1 
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h    |    3 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   16 +--
 .../net/wireless/mac80211/bcm43xx/bcm43xx_main.c   |   56 +++++++--
 .../net/wireless/mac80211/bcm43xx/bcm43xx_pci.c    |   61 ----------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_pci.h    |   22 ----
 .../net/wireless/mac80211/bcm43xx/bcm43xx_phy.c    |    2 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_sysfs.c  |    4 -
 drivers/ssb/core.c                                 |  136 ++++++++++++++++----
 drivers/ssb/scan.c                                 |   20 ---
 drivers/ssb/ssb_private.h                          |    1 
 drivers/usb/host/Kconfig                           |   20 +--
 drivers/usb/host/ohci-hcd.c                        |   19 +++
 drivers/usb/host/ohci-ssb.c                        |  100 +++++++++++----
 include/linux/ssb/ssb.h                            |   25 +++-
 17 files changed, 311 insertions(+), 227 deletions(-)
 delete mode 100644 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_pci.c
 delete mode 100644 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_pci.h

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Tue Mar  6 02:28:00 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 05 Mar 2007 19:28:00 -0600
Subject: [PATCH] bcm43xx: Fix assertion failures in interrupt handler
Message-ID: <45ecc3a0.8we8IxI7lp6G5Y6l%Larry.Finger@lwfinger.net>

From: Pavel Roskin <proski at gnu.org>

In the bcm43xx interrupt handler, sanity checks are wrongly done before the
verification that the interrupt is for the bcm43xx.

Signed-off-by: Pavel Roskin <proski at gnu.org>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

 drivers/net/wireless/bcm43xx/bcm43xx_main.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
index 057541f..21d4ecd 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1858,9 +1858,6 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 
 	spin_lock(&bcm->irq_lock);
 
-	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
-	assert(bcm->current_core->id == BCM43xx_COREID_80211);
-
 	reason = bcm43xx_read32(bcm, BCM43xx_MMIO_GEN_IRQ_REASON);
 	if (reason == 0xffffffff) {
 		/* irq not for us (shared irq) */
@@ -1871,6 +1868,9 @@ static irqreturn_t bcm43xx_interrupt_handler(int irq, void *dev_id)
 	if (!reason)
 		goto out;
 
+	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
+	assert(bcm->current_core->id == BCM43xx_COREID_80211);
+
 	bcm->dma_reason[0] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA0_REASON)
 			     & 0x0001DC00;
 	bcm->dma_reason[1] = bcm43xx_read32(bcm, BCM43xx_MMIO_DMA1_REASON)

---



From aatrof at gmail.com  Tue Mar  6 03:09:35 2007
From: aatrof at gmail.com (Aleksander Trofimowicz)
Date: Tue, 6 Mar 2007 03:09:35 +0100
Subject: [bcm43xx] dhcp failure
Message-ID: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>

Hello,

Currently I'm testing a recent kernel from the mainline tree (head at
20b0f65d35ae45d43f363ace3744a775a752d265). Good news is that the
bcm43xx driver works on nx6325 . And works quite well. Though I tested
it in managed mode only. Wpa_supplicant was able to negotiate with an
AP using WPA-PSK, WPA2-PSK as well as no data encryption. I haven't
noticed any data-link errors nor transfer limits so far (non-local
access beyond 180kB/s).
However, I had to set everything related to network layer manually,
because all dhcp transactions ended up more less like that:

Listening on LPF/eth1/00:14:a5:eb:d4:32
Sending on   LPF/eth1/00:14:a5:eb:d4:32
Sending on   Socket/fallback
DHCPREQUEST on eth1 to 255.255.255.255 port 67
ip length 272 disagrees with bytes received 534.
accepting packet with data after udp payload.
DHCPNAK from 192.168.1.1
DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 4
receive_packet failed on eth1: Network is down
DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 11
DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 16

Before I start bashing netgear who sells crappy wpn824's, I would like
to rule out possibility that it's a bcm43xx fault. Anyway something
went wrong in the module.

-- 
at


From Larry.Finger at lwfinger.net  Tue Mar  6 03:14:05 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 05 Mar 2007 20:14:05 -0600
Subject: Problem with your tree
Message-ID: <45ECCE6D.8080103@lwfinger.net>

Michael,

I decided to give the mb tree another go and pulled your latest (as of about 00:00 GMT on 06-03).
When I boot, I get the following in dmesg:

ssb: Sonics Silicon Backplane found on PCI device 0000:01:00.0
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
ssb: Switching to ChipCommon core, index 0
ssb: Switching to PCI-E core, index 3
ssb: Switching to USB 1.1 Host core, index 2   <=========== What's this??????

Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
 [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
PGD 3e792067 PUD 3ed66067 PMD 0
Oops: 0002 [1] SMP
CPU 0
Modules linked in: ide_cd ohci1394 bcm43xx_mac80211 firmware_class cdrom mac80211 ieee1394 forcedeth
ohci_hcd cfg80211 ehci_hcd sdhci mmc_core i2c_nforce2 snd_hda_intel snd_hda_codec snd_pcm snd_timer
usbcore snd soundcore ssb snd_page_alloc ext3 mbcache jbd edd sg fan sata_nv libata amd74xx thermal
processor sd_mod scsi_mod ide_disk ide_core
Pid: 1795, comm: modprobe Not tainted 2.6.21-rc1-mb-g034cca79-dirty #2
RIP: 0010:[<ffffffff8812fcfd>]  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
RSP: 0000:ffff81003e039968  EFLAGS: 00010286
RAX: ffff81003d8d1178 RBX: ffff81003d8d1178 RCX: 0000000000000000
RDX: ffff81003dece498 RSI: ffff81003d8d1170 RDI: ffff81003d8d11f0
RBP: ffff81003e039988 R08: 0000000000000000 R09: ffff81003d8d1178
R10: 0000000000000001 R11: ffff810037f06730 R12: 0000000000000000
R13: ffffffff881fe340 R14: 0000000000000220 R15: ffff81003e4a7730
FS:  00002af2e87af6f0(0000) GS:ffffffff80505000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
CR2: 00000000000002d0 CR3: 000000003d939000 CR4: 00000000000006e0
Process modprobe (pid: 1795, threadinfo ffff81003e038000, task ffff81003ef82100)
Stack:  00000000fffffff4 ffff81003eb03028 ffff81003eb03028 0000000000000000
 ffff81003e0399b8 ffffffff881fcad3 ffffffff88200e80 ffff81003eb03028
 ffffffff88200eb8 ffff81003e04de30 ffff81003e0399d8 ffffffff88106266
Call Trace:
 [<ffffffff881fcad3>] :ohci_hcd:ssb_ohci_probe+0x58/0x105
 [<ffffffff88106266>] :ssb:ssb_device_probe+0x40/0x59
 [<ffffffff8035314f>] really_probe+0xce/0x162
 [<ffffffff80353291>] driver_probe_device+0xae/0xba
 [<ffffffff8035329d>] __device_attach+0x0/0xb
 [<ffffffff803532a6>] __device_attach+0x9/0xb
 [<ffffffff8035243e>] bus_for_each_drv+0x47/0x7d
 [<ffffffff80353336>] device_attach+0x6a/0x7e
 [<ffffffff80352389>] bus_attach_device+0x24/0x4c
 [<ffffffff803510d7>] device_add+0x459/0x630
 [<ffffffff802ead5f>] __spin_lock_init+0x31/0x52
 [<ffffffff803512c7>] device_register+0x19/0x1e
 [<ffffffff88105435>] :ssb:ssb_attach_queued_buses+0x154/0x24b
 [<ffffffff88105fad>] :ssb:ssb_bus_register+0x159/0x1b6
 [<ffffffff8810605d>] :ssb:ssb_bus_pcibus_register+0x1e/0x20
 [<ffffffff88107a43>] :ssb:ssb_pcihost_probe+0x7b/0xb0
 [<ffffffff802f3221>] pci_device_probe+0x4c/0x74
 [<ffffffff8035314f>] really_probe+0xce/0x162
 [<ffffffff80353291>] driver_probe_device+0xae/0xba
 [<ffffffff803533dd>] __driver_attach+0x93/0xd3
 [<ffffffff8035334a>] __driver_attach+0x0/0xd3
 [<ffffffff80352559>] bus_for_each_dev+0x49/0x7a
 [<ffffffff80352f8d>] driver_attach+0x1c/0x1e
 [<ffffffff803528d5>] bus_add_driver+0x78/0x19c
 [<ffffffff80353662>] driver_register+0x85/0x89
 [<ffffffff802f3412>] __pci_register_driver+0x95/0xd1
 [<ffffffff8810791f>] :ssb:ssb_pcihost_register+0x37/0x39
 [<ffffffff880a801a>] :bcm43xx_mac80211:bcm43xx_init+0x1a/0x50
 [<ffffffff80254014>] sys_init_module+0x15e9/0x1744
 [<ffffffff802bcc73>] dnotify_parent+0x28/0x73
 [<ffffffff8823bc93>] :mac80211:ieee80211_rx_irqsafe+0x0/0x6c
 [<ffffffff803d3f82>] trace_hardirqs_on_thunk+0x35/0x37
 [<ffffffff80209fae>] system_call+0x7e/0x83


Code: 49 89 84 24 d0 02 00 00 e8 fa 5b 1b f8 fc 48 8d 7b 20 31 c0
RIP  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
 RSP <ffff81003e039968>
CR2: 00000000000002d0

Is this problem related to the earlier discussion in the mailing list? If so, please ignore the noise.

Larry




From larry.finger at lwfinger.net  Tue Mar  6 03:35:55 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 05 Mar 2007 20:35:55 -0600
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
Message-ID: <45ECD38B.4010502@lwfinger.net>

Aleksander Trofimowicz wrote:
> Hello,
> 
> Currently I'm testing a recent kernel from the mainline tree (head at
> 20b0f65d35ae45d43f363ace3744a775a752d265). Good news is that the
> bcm43xx driver works on nx6325 . And works quite well. Though I tested
> it in managed mode only. Wpa_supplicant was able to negotiate with an
> AP using WPA-PSK, WPA2-PSK as well as no data encryption. I haven't
> noticed any data-link errors nor transfer limits so far (non-local
> access beyond 180kB/s).
> However, I had to set everything related to network layer manually,
> because all dhcp transactions ended up more less like that:
> 
> Listening on LPF/eth1/00:14:a5:eb:d4:32
> Sending on   LPF/eth1/00:14:a5:eb:d4:32
> Sending on   Socket/fallback
> DHCPREQUEST on eth1 to 255.255.255.255 port 67
> ip length 272 disagrees with bytes received 534.
> accepting packet with data after udp payload.
> DHCPNAK from 192.168.1.1
> DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 4
> receive_packet failed on eth1: Network is down
> DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 11
> DHCPDISCOVER on eth1 to 255.255.255.255 port 67 interval 16
> 
> Before I start bashing netgear who sells crappy wpn824's, I would like
> to rule out possibility that it's a bcm43xx fault. Anyway something
> went wrong in the module.
> 

DHCP works just fine with all 3 of my BCM43xx cards with a Linksys WRT54G V5 AP. Does a wired
connection running Linux get a DHCP address OK? At one time, Linksys screwed up the firmware in the
WRT54G and its DHCP server would only work with Windows clients. No Linux nor OS X machines could
get an address.

If it is limited to wireless, do you have another wireless system that could run ethereal or kismet
and capture the traffic?

Larry



From ftoledo at docksud.com.ar  Tue Mar  6 04:19:07 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Tue, 6 Mar 2007 00:19:07 -0300
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
Message-ID: <200703060019.16324.ftoledo@docksud.com.ar>

El Lunes, 5 de Marzo de 2007 23:09, Aleksander Trofimowicz escribi?:
> Hello,
>
> Currently I'm testing a recent kernel from the mainline tree (head at
> 20b0f65d35ae45d43f363ace3744a775a752d265). Good news is that the
> bcm43xx driver works on nx6325 . And works quite well. Though I tested
> it in managed mode only. Wpa_supplicant was able to negotiate with an
> AP using WPA-PSK, WPA2-PSK as well as no data encryption. I haven't
> noticed any data-link errors nor transfer limits so far (non-local
> access beyond 180kB/s).
> However, I had to set everything related to network layer manually,
> because all dhcp transactions ended up more less like that:

i have another problem with the dhcp client on debian testing
uppon the ip is leassed to the device, its seems to reset and dissasociated 
from the wireless network
if i set iwconfig eth1 essid my_essid , i have connection again 
i had to this manually too.

---------------
bcm43xx: PHY connected
bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 32-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)
SoftMAC: Scanning finished: scanned 14 channels starting with channel 1
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
SoftMAC: Associate: Scanning for networks first.
SoftMAC: Scanning finished: scanned 14 channels starting with channel 1
SoftMAC: Queueing Authentication Request to 00:80:c8:ac:aa:06
SoftMAC: Cannot associate without being authenticated, requested 
authentication
SoftMAC: Sent Authentication Request to 00:80:c8:ac:aa:06.
SoftMAC: Sent Authentication Request to 00:80:c8:ac:aa:06.
SoftMAC: Open Authentication completed with 00:80:c8:ac:aa:06
SoftMAC: sent association request!
SoftMAC: associated!
bcm43xx: Radio turned off    <<<<<<<<<=== here dhcp got ip
bcm43xx: DMA-32 0x0200 (RX) max used slots: 1/64
bcm43xx: DMA-32 0x02A0 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0280 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0260 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0240 (TX) max used slots: 0/512
bcm43xx: DMA-32 0x0220 (TX) max used slots: 8/512
bcm43xx: DMA-32 0x0200 (TX) max used slots: 0/512
bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 32-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)
SoftMAC: Canceling existing associate request!   <<<<<<=== here i had a 
iwconfig a set again the essid
SoftMAC: Associate: Scanning for networks first.
SoftMAC: Scanning finished: scanned 14 channels starting with channel 1
SoftMAC: Queueing Authentication Request to 00:80:c8:ac:aa:06
SoftMAC: Cannot associate without being authenticated, requested 
authentication
SoftMAC: Sent Authentication Request to 00:80:c8:ac:aa:06.
SoftMAC: Sent Authentication Request to 00:80:c8:ac:aa:06.
SoftMAC: Open Authentication completed with 00:80:c8:ac:aa:06
SoftMAC: sent association request!
SoftMAC: associated! <<<<<<<<<<<<= here i have normal connection

i use 2.6.20 + combined path from larry 

Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070306/12bf9fa2/attachment.pgp>

From gripdealer at googlemail.com  Tue Mar  6 09:54:10 2007
From: gripdealer at googlemail.com (Tobias Becker)
Date: Tue, 6 Mar 2007 09:54:10 +0100
Subject: Broadcom BCM94311MCG
Message-ID: <ade5caf80703060054h751bb554r8c90a866662870ba@mail.gmail.com>

Hello,

i have the broadcom bcm94311mcg chip and use opensuse 10.2. its possible to
use
our driver bcm43xx for my chipset???

thanks
tobias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070306/fcd394b8/attachment.html>

From mb at bu3sch.de  Tue Mar  6 11:01:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 6 Mar 2007 11:01:59 +0100
Subject: Problem with your tree
In-Reply-To: <45ECCE6D.8080103@lwfinger.net>
References: <45ECCE6D.8080103@lwfinger.net>
Message-ID: <200703061101.59753.mb@bu3sch.de>

On Tuesday 06 March 2007 03:14, Larry Finger wrote:
> Michael,
> 
> I decided to give the mb tree another go and pulled your latest (as of about 00:00 GMT on 06-03).
> When I boot, I get the following in dmesg:
> 
> ssb: Sonics Silicon Backplane found on PCI device 0000:01:00.0
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
> ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
> ssb: Switching to ChipCommon core, index 0
> ssb: Switching to PCI-E core, index 3
> ssb: Switching to USB 1.1 Host core, index 2   <=========== What's this??????
> 
> Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
>  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
> PGD 3e792067 PUD 3ed66067 PMD 0
> Oops: 0002 [1] SMP
> CPU 0
> Modules linked in: ide_cd ohci1394 bcm43xx_mac80211 firmware_class cdrom mac80211 ieee1394 forcedeth
> ohci_hcd cfg80211 ehci_hcd sdhci mmc_core i2c_nforce2 snd_hda_intel snd_hda_codec snd_pcm snd_timer
> usbcore snd soundcore ssb snd_page_alloc ext3 mbcache jbd edd sg fan sata_nv libata amd74xx thermal
> processor sd_mod scsi_mod ide_disk ide_core
> Pid: 1795, comm: modprobe Not tainted 2.6.21-rc1-mb-g034cca79-dirty #2
> RIP: 0010:[<ffffffff8812fcfd>]  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
> RSP: 0000:ffff81003e039968  EFLAGS: 00010286
> RAX: ffff81003d8d1178 RBX: ffff81003d8d1178 RCX: 0000000000000000
> RDX: ffff81003dece498 RSI: ffff81003d8d1170 RDI: ffff81003d8d11f0
> RBP: ffff81003e039988 R08: 0000000000000000 R09: ffff81003d8d1178
> R10: 0000000000000001 R11: ffff810037f06730 R12: 0000000000000000
> R13: ffffffff881fe340 R14: 0000000000000220 R15: ffff81003e4a7730
> FS:  00002af2e87af6f0(0000) GS:ffffffff80505000(0000) knlGS:0000000000000000
> CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
> CR2: 00000000000002d0 CR3: 000000003d939000 CR4: 00000000000006e0
> Process modprobe (pid: 1795, threadinfo ffff81003e038000, task ffff81003ef82100)
> Stack:  00000000fffffff4 ffff81003eb03028 ffff81003eb03028 0000000000000000
>  ffff81003e0399b8 ffffffff881fcad3 ffffffff88200e80 ffff81003eb03028
>  ffffffff88200eb8 ffff81003e04de30 ffff81003e0399d8 ffffffff88106266
> Call Trace:
>  [<ffffffff881fcad3>] :ohci_hcd:ssb_ohci_probe+0x58/0x105
>  [<ffffffff88106266>] :ssb:ssb_device_probe+0x40/0x59
>  [<ffffffff8035314f>] really_probe+0xce/0x162
>  [<ffffffff80353291>] driver_probe_device+0xae/0xba
>  [<ffffffff8035329d>] __device_attach+0x0/0xb
>  [<ffffffff803532a6>] __device_attach+0x9/0xb
>  [<ffffffff8035243e>] bus_for_each_drv+0x47/0x7d
>  [<ffffffff80353336>] device_attach+0x6a/0x7e
>  [<ffffffff80352389>] bus_attach_device+0x24/0x4c
>  [<ffffffff803510d7>] device_add+0x459/0x630
>  [<ffffffff802ead5f>] __spin_lock_init+0x31/0x52
>  [<ffffffff803512c7>] device_register+0x19/0x1e
>  [<ffffffff88105435>] :ssb:ssb_attach_queued_buses+0x154/0x24b
>  [<ffffffff88105fad>] :ssb:ssb_bus_register+0x159/0x1b6
>  [<ffffffff8810605d>] :ssb:ssb_bus_pcibus_register+0x1e/0x20
>  [<ffffffff88107a43>] :ssb:ssb_pcihost_probe+0x7b/0xb0
>  [<ffffffff802f3221>] pci_device_probe+0x4c/0x74
>  [<ffffffff8035314f>] really_probe+0xce/0x162
>  [<ffffffff80353291>] driver_probe_device+0xae/0xba
>  [<ffffffff803533dd>] __driver_attach+0x93/0xd3
>  [<ffffffff8035334a>] __driver_attach+0x0/0xd3
>  [<ffffffff80352559>] bus_for_each_dev+0x49/0x7a
>  [<ffffffff80352f8d>] driver_attach+0x1c/0x1e
>  [<ffffffff803528d5>] bus_add_driver+0x78/0x19c
>  [<ffffffff80353662>] driver_register+0x85/0x89
>  [<ffffffff802f3412>] __pci_register_driver+0x95/0xd1
>  [<ffffffff8810791f>] :ssb:ssb_pcihost_register+0x37/0x39
>  [<ffffffff880a801a>] :bcm43xx_mac80211:bcm43xx_init+0x1a/0x50
>  [<ffffffff80254014>] sys_init_module+0x15e9/0x1744
>  [<ffffffff802bcc73>] dnotify_parent+0x28/0x73
>  [<ffffffff8823bc93>] :mac80211:ieee80211_rx_irqsafe+0x0/0x6c
>  [<ffffffff803d3f82>] trace_hardirqs_on_thunk+0x35/0x37
>  [<ffffffff80209fae>] system_call+0x7e/0x83
> 
> 
> Code: 49 89 84 24 d0 02 00 00 e8 fa 5b 1b f8 fc 48 8d 7b 20 31 c0
> RIP  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
>  RSP <ffff81003e039968>
> CR2: 00000000000002d0
> 
> Is this problem related to the earlier discussion in the mailing list? If so, please ignore the noise.

Please make sure you are using the very last version of my tree.
I committed some USBhost related fixes yesterday.
If you are using latest tree, well, find out what's going on. :)
I don't have the hardware to test this.

-- 
Greetings Michael.


From mb at bu3sch.de  Tue Mar  6 11:06:21 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 6 Mar 2007 11:06:21 +0100
Subject: Problem with your tree
In-Reply-To: <200703061101.59753.mb@bu3sch.de>
References: <45ECCE6D.8080103@lwfinger.net> <200703061101.59753.mb@bu3sch.de>
Message-ID: <200703061106.21138.mb@bu3sch.de>

On Tuesday 06 March 2007 11:01, Michael Buesch wrote:
> On Tuesday 06 March 2007 03:14, Larry Finger wrote:
> > Michael,
> > 
> > I decided to give the mb tree another go and pulled your latest (as of about 00:00 GMT on 06-03).
> > When I boot, I get the following in dmesg:
> > 
> > ssb: Sonics Silicon Backplane found on PCI device 0000:01:00.0
> > ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
> > ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
> > ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
> > ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
> > ssb: Switching to ChipCommon core, index 0
> > ssb: Switching to PCI-E core, index 3
> > ssb: Switching to USB 1.1 Host core, index 2   <=========== What's this??????

What's the device, btw? Most likely this is a ghost-core, which
needs some blacklisting. Or is this some embedded device with an USB?
Anyway, the ohci driver seems to need fixing (if you used latest version).

-- 
Greetings Michael.


From johannes at sipsolutions.net  Tue Mar  6 02:08:12 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Tue, 06 Mar 2007 02:08:12 +0100
Subject: bcm43xx master mode works for me
Message-ID: <1173143292.15891.79.camel@johannes.berg>

I just gave this another try, after porting the fix for the
beacon_control kfree bug which I'd found and debugged with Michael on
IRC earlier (changeset 8ce88367b520c0fb303832026d5604a414e1259c in his
tree) to the latest wireless-dev [1] and making hostapd compile, I have
master mode working with bcm43xx.

That means I can now start working on creating a driver_nl82011.c for
hostapd and killing off the prism2 ioctls one by one :) Help is always
welcome though.

johannes

[1]
actually, that's not strictly true. my tree also contains these patches:

fix-mac80211-Kconfig [was sent to akpm for the s390 problems]
tasklet-free-debug.patch [kills scheduled tasklets in memory that is being freed]
fix-scanf.patch [fixes scanf, unfortunately nobody replied to that...]
export-device-rename.patch [gregkh has that]
wiphy-rename.patch [posted earlier]
delete-netlink-wext.patch [posted earlier]
rework-kconfig [posted earlier]
bluetape1.patch
bluetape2.patch
bluetape3.patch
bluetape4.patch
bluetape5.patch [Michael Wu's patch series]
sysfs-to-debugfs.patch [debugfs #1]
more-sysfs-to-debugfs.patch [debugfs #2]
wiphy-private-id.patch [posted earlier]
mac80211-netdev-stuff-to-debugfs.patch [debugfs #3]
fix-header-bogosities.patch [posted recently]
nl80211-new-commands.patch [work in progress]
wpa.h.patch [posted recently]
bcm43xx-fix.patch [the ported fix]
hostapd-compile.patch [posted FYI]

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070306/a283882b/attachment.pgp>

From linville at tuxdriver.com  Tue Mar  6 17:11:43 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 6 Mar 2007 11:11:43 -0500
Subject: Pull the patch sent under heading "[PATCH] bcm43xx: Fix typo in
	B5PHY init specifications"
In-Reply-To: <45EBA6FB.4040602@lwfinger.net>
References: <45EBA6FB.4040602@lwfinger.net>
Message-ID: <20070306161143.GA553@tuxdriver.com>

On Sun, Mar 04, 2007 at 11:13:31PM -0600, Larry Finger wrote:

> Please pull the patch referenced in the subject. It completely kills my BCM4306 with phy->revision == 1.
> 
> Joe Jezak and I will have to sort this one out.

Just to be clear, I interpret this to mean "do not apply that patch".

"Pull" is often used to mean "take the patch and apply it" as in "git pull".

Let me know if I'm interpreting you incorrectly.

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Tue Mar  6 18:21:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 06 Mar 2007 11:21:33 -0600
Subject: Pull the patch sent under heading "[PATCH] bcm43xx: Fix typo
	in B5PHY init specifications"
In-Reply-To: <20070306161143.GA553@tuxdriver.com>
References: <45EBA6FB.4040602@lwfinger.net>
	<20070306161143.GA553@tuxdriver.com>
Message-ID: <45EDA31D.5010609@lwfinger.net>

John W. Linville wrote:
> On Sun, Mar 04, 2007 at 11:13:31PM -0600, Larry Finger wrote:
> 
>> Please pull the patch referenced in the subject. It completely kills my BCM4306 with phy->revision == 1.
>>
>> Joe Jezak and I will have to sort this one out.
> 
> Just to be clear, I interpret this to mean "do not apply that patch".
> 
> "Pull" is often used to mean "take the patch and apply it" as in "git pull".
> 
> Let me know if I'm interpreting you incorrectly.

Sorry to mess up the terminology. It should be discarded, ignored, and trashed!!

Larry


From proski at gnu.org  Tue Mar  6 22:35:03 2007
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 06 Mar 2007 16:35:03 -0500
Subject: Broadcom BCM94311MCG
In-Reply-To: <ade5caf80703060054h751bb554r8c90a866662870ba@mail.gmail.com>
References: <ade5caf80703060054h751bb554r8c90a866662870ba@mail.gmail.com>
Message-ID: <1173216903.2387.2.camel@dv>

On Tue, 2007-03-06 at 09:54 +0100, Tobias Becker wrote:
> Hello,
> 
> i have the broadcom bcm94311mcg chip and use opensuse 10.2. its
> possible to use
> our driver bcm43xx for my chipset???

As far as I know, 4311 is the best supported chip.  Just make sure you
are using the softmac driver (bcm43xx) and not the dscape driver
(bcm43xx_d80211 or bcm43xx_mac80211), as the later doesn't work well
yet.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Tue Mar  6 22:51:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 06 Mar 2007 15:51:33 -0600
Subject: Broadcom BCM94311MCG
In-Reply-To: <1173216903.2387.2.camel@dv>
References: <ade5caf80703060054h751bb554r8c90a866662870ba@mail.gmail.com>
	<1173216903.2387.2.camel@dv>
Message-ID: <45EDE265.8090500@lwfinger.net>

Pavel Roskin wrote:
> On Tue, 2007-03-06 at 09:54 +0100, Tobias Becker wrote:
>> Hello,
>>
>> i have the broadcom bcm94311mcg chip and use opensuse 10.2. its
>> possible to use
>> our driver bcm43xx for my chipset???
> 
> As far as I know, 4311 is the best supported chip.  Just make sure you
> are using the softmac driver (bcm43xx) and not the dscape driver
> (bcm43xx_d80211 or bcm43xx_mac80211), as the later doesn't work well
> yet.

It will not work with the stock kernel from openSUSE 10.2, which is 2.6.18, unless you add some
patches. Those can be gotten from ftp://lwfinger.dynalias.org/patches. You can either install the
kernel from the 10.2 distribution, ordownload the 2.6.20 kernel from kernel.org. In either case you
will need a patch.

For further identification of your interface, please send the output from '/sbin/lspci -v' and
'/sbin/lspci -n'.

Larry


From larry.finger at lwfinger.net  Tue Mar  6 22:53:44 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 06 Mar 2007 15:53:44 -0600
Subject: Problem with your tree
In-Reply-To: <200703061101.59753.mb@bu3sch.de>
References: <45ECCE6D.8080103@lwfinger.net> <200703061101.59753.mb@bu3sch.de>
Message-ID: <45EDE2E8.5010207@lwfinger.net>

Michael Buesch wrote:
> 
> Please make sure you are using the very last version of my tree.
> I committed some USBhost related fixes yesterday.
> If you are using latest tree, well, find out what's going on. :)
> I don't have the hardware to test this.
> 
The only things in your tree this morning that I didn't have were the correction to initb5, and the
change in tasklet killing. I will debug this problem as soon as I have the time.

Larry




From mb at bu3sch.de  Tue Mar  6 23:09:49 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 6 Mar 2007 23:09:49 +0100
Subject: Problem with your tree
In-Reply-To: <45EDE2E8.5010207@lwfinger.net>
References: <45ECCE6D.8080103@lwfinger.net> <200703061101.59753.mb@bu3sch.de>
	<45EDE2E8.5010207@lwfinger.net>
Message-ID: <200703062309.49668.mb@bu3sch.de>

On Tuesday 06 March 2007 22:53, Larry Finger wrote:
> Michael Buesch wrote:
> > 
> > Please make sure you are using the very last version of my tree.
> > I committed some USBhost related fixes yesterday.
> > If you are using latest tree, well, find out what's going on. :)
> > I don't have the hardware to test this.
> > 
> The only things in your tree this morning that I didn't have were the correction to initb5, and the
> change in tasklet killing. I will debug this problem as soon as I have the time.

Ok, thanks.
I think we need a blacklist or better whitelist in the ohci driver
to not drive devices with unconnected cores. But it shouldn't crash.
At least not this way. :)
I don't have a running device with usbcore right now (working on it),
so I can't test that.
I wish broadcom wouldn't have so many chips with dangling cores
and other stuff around.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Tue Mar  6 23:21:15 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 06 Mar 2007 16:21:15 -0600
Subject: Problem with your tree
In-Reply-To: <200703062309.49668.mb@bu3sch.de>
References: <45ECCE6D.8080103@lwfinger.net> <200703061101.59753.mb@bu3sch.de>
	<45EDE2E8.5010207@lwfinger.net> <200703062309.49668.mb@bu3sch.de>
Message-ID: <45EDE95B.40607@lwfinger.net>

Michael Buesch wrote:
> On Tuesday 06 March 2007 22:53, Larry Finger wrote:
>> Michael Buesch wrote:
>>> Please make sure you are using the very last version of my tree.
>>> I committed some USBhost related fixes yesterday.
>>> If you are using latest tree, well, find out what's going on. :)
>>> I don't have the hardware to test this.
>>>
>> The only things in your tree this morning that I didn't have were the correction to initb5, and the
>> change in tasklet killing. I will debug this problem as soon as I have the time.
> 
> Ok, thanks.
> I think we need a blacklist or better whitelist in the ohci driver
> to not drive devices with unconnected cores. But it shouldn't crash.
> At least not this way. :)
> I don't have a running device with usbcore right now (working on it),
> so I can't test that.
> I wish broadcom wouldn't have so many chips with dangling cores
> and other stuff around.

If an 0x817 core really is a USB 1.1 HOST, we do need some way to detect that we are dealing with a
PCI device and ignore the USB cores. Is there such a flag/indicator already available?

Larry


From mb at bu3sch.de  Wed Mar  7 00:44:51 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 7 Mar 2007 00:44:51 +0100
Subject: Problem with your tree
In-Reply-To: <45EDE95B.40607@lwfinger.net>
References: <45ECCE6D.8080103@lwfinger.net> <200703062309.49668.mb@bu3sch.de>
	<45EDE95B.40607@lwfinger.net>
Message-ID: <200703070044.51769.mb@bu3sch.de>

On Tuesday 06 March 2007 23:21, Larry Finger wrote:
> Michael Buesch wrote:
> > On Tuesday 06 March 2007 22:53, Larry Finger wrote:
> >> Michael Buesch wrote:
> >>> Please make sure you are using the very last version of my tree.
> >>> I committed some USBhost related fixes yesterday.
> >>> If you are using latest tree, well, find out what's going on. :)
> >>> I don't have the hardware to test this.
> >>>
> >> The only things in your tree this morning that I didn't have were the correction to initb5, and the
> >> change in tasklet killing. I will debug this problem as soon as I have the time.
> > 
> > Ok, thanks.
> > I think we need a blacklist or better whitelist in the ohci driver
> > to not drive devices with unconnected cores. But it shouldn't crash.
> > At least not this way. :)
> > I don't have a running device with usbcore right now (working on it),
> > so I can't test that.
> > I wish broadcom wouldn't have so many chips with dangling cores
> > and other stuff around.
> 
> If an 0x817 core really is a USB 1.1 HOST, we do need some way to detect that we are dealing with a
> PCI device and ignore the USB cores. Is there such a flag/indicator already available?

Uhm, well. Yeah. For the first we could restrict it to embedded-only devices.
And the rest, well. Probably there's some way to find out if
the core works or not, too. I need to look through the register stuff again.

But again, it shouldn't oops like yours at registering the hcd. That seems
like a software bug. It may oops later with a buserror, sure.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar  7 17:23:43 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 10:23:43 -0600
Subject: Broadcom BCM94311MCG
In-Reply-To: <ade5caf80703070255m7a222fe7x8fd5315b39d630e9@mail.gmail.com>
References: <ade5caf80703060054h751bb554r8c90a866662870ba@mail.gmail.com>	
	<1173216903.2387.2.camel@dv> <45EDE265.8090500@lwfinger.net>
	<ade5caf80703070255m7a222fe7x8fd5315b39d630e9@mail.gmail.com>
Message-ID: <45EEE70F.3030504@lwfinger.net>

Tobias Becker wrote:
> 08:00.0 Class 0280: 14e4:4311 (rev 01)
> 
> 08:00.0 Network controller: Broadcom Corporation Dell Wireless 1390 WLAN
> Mini-PCI Card (rev 01)
>         Subsystem: Hewlett-Packard Company Unknown device 1364
>         Flags: bus master, fast devsel, latency 0, IRQ 11
>         Memory at e8000000 (32-bit, non-prefetchable) [size=16K]
>         Capabilities: [40] Power Management version 2
>         Capabilities: [58] Message Signalled Interrupts: Mask- 64bit-
> Queue=0/0 Enable-
>         Capabilities: [d0] Express Legacy Endpoint IRQ 0

Your wireless interface is a BCM4311, which is the same card as I have. With kernel 2.6.20 and the
patch from ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch, it will work very well. If you
prefer not to patch a kernel, download 2.6.21-rc3 from kernel.org. It will work "as is".

Larry



From johannes at sipsolutions.net  Wed Mar  7 03:12:01 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 07 Mar 2007 03:12:01 +0100
Subject: Current state of bcm43xx-softmac
In-Reply-To: <45EC46FB.9060904@lwfinger.net>
References: <45EC46FB.9060904@lwfinger.net>
Message-ID: <1173233521.3503.60.camel@johannes.berg>

Hi,

Great update, thanks! Good to hear that you got that laptop working.

> Performance testing is accomplished using Iperf with the server connected to my Linksys WRT54G V5
> AP/router via a 100 BaseTX wired connection. If I boot Windows XP and run Iperf from it, I get 19.5
> Mbs reported. As the Iperf results show considerable jitter, I always run at least 5 trials and
> report the maximum. The distance from my test computer to the AP is approximately 2m. All bcm43xx
> tests were done with the latest patches applied.

The iperf tests you're running are downstream tests, right? I mean,
you're doing downloads from that server to the machine with the cards.

> I'm surprised that amplitude of signal does not correlate with performance; however, the 4311
> amplitude does diminish a lot at the 48 Mbs rate, which probably explains the falloff in performance
> at that rate. In addition, the 4306 showed a much poorer separation of the individual subchannels in
> the spectrum.

I think these are probably related. If you are indeed doing downstream
tests (I guess so) then all this means is that now we've reached a power
level where the 4318 can successfully ack frames (which would previously
lead to retransmissions and timeouts of packets etc). I'd think that at
that point the transmission characteristics become less important than
the reception characteristics. I suppose that we need to work on those
for the 4306, but most likely newer chips also just have better
characteristics due to hardware improvements.

I think it could be quite interesting to run the tests the other way as
upstream tests.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070307/77fb063c/attachment.pgp>

From larry.finger at lwfinger.net  Wed Mar  7 19:14:48 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 12:14:48 -0600
Subject: Current state of bcm43xx-softmac
In-Reply-To: <1173233521.3503.60.camel@johannes.berg>
References: <45EC46FB.9060904@lwfinger.net>
	<1173233521.3503.60.camel@johannes.berg>
Message-ID: <45EF0118.3080505@lwfinger.net>

Johannes Berg wrote:
> Hi,
> 
> Great update, thanks! Good to hear that you got that laptop working.
> 
>> Performance testing is accomplished using Iperf with the server connected to my Linksys WRT54G V5
>> AP/router via a 100 BaseTX wired connection. If I boot Windows XP and run Iperf from it, I get 19.5
>> Mbs reported. As the Iperf results show considerable jitter, I always run at least 5 trials and
>> report the maximum. The distance from my test computer to the AP is approximately 2m. All bcm43xx
>> tests were done with the latest patches applied.
> 
> The iperf tests you're running are downstream tests, right? I mean,
> you're doing downloads from that server to the machine with the cards.

No, I was testing the upload speed to the server. My experience is that the cards have always been
able to receive better than transmit. Iperf has two switches that are supposed to handle
bi-directional testing, but I have not yet made either of them work.

>> I'm surprised that amplitude of signal does not correlate with performance; however, the 4311
>> amplitude does diminish a lot at the 48 Mbs rate, which probably explains the falloff in performance
>> at that rate. In addition, the 4306 showed a much poorer separation of the individual subchannels in
>> the spectrum.
> 
> I think these are probably related. If you are indeed doing downstream
> tests (I guess so) then all this means is that now we've reached a power
> level where the 4318 can successfully ack frames (which would previously
> lead to retransmissions and timeouts of packets etc). I'd think that at
> that point the transmission characteristics become less important than
> the reception characteristics. I suppose that we need to work on those
> for the 4306, but most likely newer chips also just have better
> characteristics due to hardware improvements.

It is likely a combination of better hardware and more stuff done in firmware, which isn't bothered
by the mistakes in the driver. With that ancient pre-g 4306, the quantities known as rotor and
retard, which I suspect to be involved in the OFDM subchannel encoding, need to be loaded. Later
revisions of the PHY have these built in.

> I think it could be quite interesting to run the tests the other way as
> upstream tests.

I will do the reverse tests soon.

Larry


From johannes at sipsolutions.net  Wed Mar  7 19:18:48 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 07 Mar 2007 19:18:48 +0100
Subject: Current state of bcm43xx-softmac
In-Reply-To: <45EF0118.3080505@lwfinger.net>
References: <45EC46FB.9060904@lwfinger.net>
	<1173233521.3503.60.camel@johannes.berg>
	<45EF0118.3080505@lwfinger.net>
Message-ID: <1173291528.9108.4.camel@johannes.berg>


> No, I was testing the upload speed to the server. My experience is that the cards have always been
> able to receive better than transmit. Iperf has two switches that are supposed to handle
> bi-directional testing, but I have not yet made either of them work.

Oh ok. You're probably right that upload speed is a better measure.

> It is likely a combination of better hardware and more stuff done in firmware, which isn't bothered
> by the mistakes in the driver. With that ancient pre-g 4306, the quantities known as rotor and
> retard, which I suspect to be involved in the OFDM subchannel encoding, need to be loaded. Later
> revisions of the PHY have these built in.

Good point. And that's probably not the only thing that affects it.

Again, thanks for doing these tests!

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070307/650e1143/attachment.pgp>

From Larry.Finger at lwfinger.net  Wed Mar  7 19:32:40 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 12:32:40 -0600
Subject: RFC: bcm43xx_mac80211: A first cut at fixing the oops for USB cores
	on PCI devices
Message-ID: <45EF0548.2090402@lwfinger.net>

Michael,

The patch below fixes the problem of the kernel oops associated with having a dangling USB core on a
chip using a PCIe interface. The patch should also fix problems associated with having extra 802.11
cores.

I still have a problem in that bcm43xx_mac80211 will not unload with this patch - the machine
crashes, but I wanted to get your feedback before degugging that issue.

Larry

======================

Index: wireless-mb/drivers/ssb/scan.c
===================================================================
--- wireless-mb.orig/drivers/ssb/scan.c
+++ wireless-mb/drivers/ssb/scan.c
@@ -255,6 +255,8 @@ int ssb_bus_scan(struct ssb_bus *bus,
 	int dev_i, i;
 	struct ssb_device *dev;
 	int nr_80211_cores = 0;
+	int usb_core_found = 0;
+	int pci_core_found = 0;

 	mmio = ssb_ioremap(bus, baseaddr);
 	if (!mmio)
@@ -317,6 +319,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 		bus->mmio = mmio;
 	}

+	bus->core_ignore_flags = 0;
 	/* Fetch basic information about each core/device */
 	for (i = 0, dev_i = 0; i < bus->nr_devices; i++) {
 		err = scan_switchcore(bus, i);
@@ -346,6 +349,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 				if (!we_support_multiple_80211_cores(bus)) {
 					ssb_dprintk(KERN_INFO PFX "Ignoring additional "
 						    "802.11 core\n");
+					bus->core_ignore_flags |= (1 <<i);
 					continue;
 				}
 			}
@@ -355,6 +359,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 			if (bus->extif.dev) {
 				ssb_printk(KERN_WARNING PFX
 					   "WARNING: Multiple EXTIFs found\n");
+				bus->core_ignore_flags |= (1 <<i);
 				break;
 			}
 			bus->extif.dev = dev;
@@ -364,6 +369,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 			if (bus->chipco.dev) {
 				ssb_printk(KERN_WARNING PFX
 					   "WARNING: Multiple ChipCommon found\n");
+				bus->core_ignore_flags |= (1 <<i);
 				break;
 			}
 			bus->chipco.dev = dev;
@@ -374,6 +380,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 			if (bus->mipscore.dev) {
 				ssb_printk(KERN_WARNING PFX
 					   "WARNING: Multiple MIPS cores found\n");
+				bus->core_ignore_flags |= (1 <<i);
 				break;
 			}
 			bus->mipscore.dev = dev;
@@ -381,15 +388,20 @@ int ssb_bus_scan(struct ssb_bus *bus,
 			break;
 		case SSB_DEV_PCI:
 		case SSB_DEV_PCIE:
+			pci_core_found = 1;
 #ifdef CONFIG_SSB_DRIVER_PCICORE
 			if (bus->pcicore.dev) {
 				ssb_printk(KERN_WARNING PFX
 					   "WARNING: Multiple PCI(E) cores found\n");
+				bus->core_ignore_flags |= (1 <<i);
 				break;
 			}
 			bus->pcicore.dev = dev;
 #endif /* CONFIG_SSB_DRIVER_PCICORE */
 			break;
+		case SSB_DEV_USB11_HOST:
+		case SSB_DEV_USB20_HOST:
+			usb_core_found = i;
 		default:
 			break;
 		}
@@ -397,7 +409,11 @@ int ssb_bus_scan(struct ssb_bus *bus,
 		dev_i++;
 	}
 	bus->nr_devices = dev_i;
-
+	if (pci_core_found && usb_core_found) {
+		ssb_printk(KERN_WARNING PFX
+			   "WARNING: USB Host ignored\n");
+		bus->core_ignore_flags |= (1 << usb_core_found);
+	}
 	err = 0;
 out:
 	return err;
Index: wireless-mb/include/linux/ssb/ssb.h
===================================================================
--- wireless-mb.orig/include/linux/ssb/ssb.h
+++ wireless-mb/include/linux/ssb/ssb.h
@@ -323,6 +323,8 @@ struct ssb_bus {
 	struct ssb_mipscore mipscore;
 	/* The EXTif-core device (if available). */
 	struct ssb_extif extif;
+	/* A word with flags for each core to ignore. */
+	u16 core_ignore_flags;

 	/* Internal. */
 	struct list_head list;
Index: wireless-mb/drivers/ssb/core.c
===================================================================
--- wireless-mb.orig/drivers/ssb/core.c
+++ wireless-mb/drivers/ssb/core.c
@@ -160,6 +160,8 @@ int ssb_devices_freeze(struct ssb_bus *b
 	pm_message_t state = PMSG_FREEZE;

 	for (i = 0; i < bus->nr_devices; i++) {
+		if (bus->core_ignore_flags & (1 <<i))
+			continue;
 		dev = &(bus->devices[i]);
 		if (!dev->dev->driver)
 			continue;
@@ -182,6 +184,8 @@ int ssb_devices_thaw(struct ssb_bus *bus
 	int i;

 	for (i = 0; i < bus->nr_devices; i++) {
+		if (bus->core_ignore_flags & (1 <<i))
+			continue;
 		dev = &(bus->devices[i]);
 		if (!dev->dev->driver)
 			continue;
@@ -297,6 +301,8 @@ static void ssb_devices_unregister(struc
 	int i;

 	for (i = bus->nr_devices - 1; i >= 0; i--) {
+		if (bus->core_ignore_flags & (1 <<i))
+			continue;
 		sdev = &(bus->devices[i]);
 		if (sdev->dev)
 			device_unregister(sdev->dev);
@@ -329,6 +335,8 @@ static int ssb_devices_register(struct s
 	int dev_idx = 0;

 	for (i = 0; i < bus->nr_devices; i++) {
+		if (bus->core_ignore_flags & (1 <<i))
+			continue;
 		sdev = &(bus->devices[i]);

 		/* We don't register SSB-system devices to the kernel,



From mb at bu3sch.de  Wed Mar  7 19:51:11 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 7 Mar 2007 19:51:11 +0100
Subject: RFC: bcm43xx_mac80211: A first cut at fixing the oops for USB
	cores on PCI devices
In-Reply-To: <45EF0548.2090402@lwfinger.net>
References: <45EF0548.2090402@lwfinger.net>
Message-ID: <200703071951.12069.mb@bu3sch.de>

On Wednesday 07 March 2007 19:32, Larry Finger wrote:
> Michael,
> 
> The patch below fixes the problem of the kernel oops associated with having a dangling USB core on a
> chip using a PCIe interface.

No, that doesn't fix the bug, that just papers around it.
I'll add code to ignore the core later. That has to be added to the driver
and not to ssb.

> The patch should also fix problems associated with having extra 802.11 
> cores.

Which problems do you see?

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar  7 20:56:30 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 13:56:30 -0600
Subject: RFC: bcm43xx_mac80211: A first cut at fixing the oops for USB
	cores on PCI devices
In-Reply-To: <200703071951.12069.mb@bu3sch.de>
References: <45EF0548.2090402@lwfinger.net> <200703071951.12069.mb@bu3sch.de>
Message-ID: <45EF18EE.3050500@lwfinger.net>

Michael Buesch wrote:
> On Wednesday 07 March 2007 19:32, Larry Finger wrote:
>> Michael,
>>
>> The patch below fixes the problem of the kernel oops associated with having a dangling USB core on a
>> chip using a PCIe interface.
> 
> No, that doesn't fix the bug, that just papers around it.
> I'll add code to ignore the core later. That has to be added to the driver
> and not to ssb.

OK. So that I can test bcm43xx_mac80211, I'll leave it in my code until your proper fix is available.

>> The patch should also fix problems associated with having extra 802.11 
>> cores.
> 
> Which problems do you see?

None, but I've read in the list of the problems due to dangling cores.

Larry




From mb at bu3sch.de  Wed Mar  7 21:03:55 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 7 Mar 2007 21:03:55 +0100
Subject: RFC: bcm43xx_mac80211: A first cut at fixing the oops for USB
	cores on PCI devices
In-Reply-To: <45EF18EE.3050500@lwfinger.net>
References: <45EF0548.2090402@lwfinger.net> <200703071951.12069.mb@bu3sch.de>
	<45EF18EE.3050500@lwfinger.net>
Message-ID: <200703072103.55925.mb@bu3sch.de>

On Wednesday 07 March 2007 20:56, Larry Finger wrote:
> Michael Buesch wrote:
> > On Wednesday 07 March 2007 19:32, Larry Finger wrote:
> >> Michael,
> >>
> >> The patch below fixes the problem of the kernel oops associated with having a dangling USB core on a
> >> chip using a PCIe interface.
> > 
> > No, that doesn't fix the bug, that just papers around it.
> > I'll add code to ignore the core later. That has to be added to the driver
> > and not to ssb.
> 
> OK. So that I can test bcm43xx_mac80211, I'll leave it in my code until your proper fix is available.
> 
> >> The patch should also fix problems associated with having extra 802.11 
> >> cores.
> > 
> > Which problems do you see?
> 
> None, but I've read in the list of the problems due to dangling cores.

It should be fixed.
It's the we_support_multiple_80211_cores check.
The check should probably also be in the wireless driver, but
I put it here for now.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Wed Mar  7 21:27:01 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 14:27:01 -0600
Subject: Problem with USB1.1 Host cores with the mb tree for bcm43xx_mac80211
Message-ID: <45EF2015.8000802@lwfinger.net>

If you have a BCM4311 and are seeing an oops that looks like this when loading bcm43xx_mac80211:

ssb: Switching to ChipCommon core, index 0
ssb: Switching to PCI-E core, index 3
ssb: Switching to USB 1.1 Host core, index 2

Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
 [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
PGD 3e792067 PUD 3ed66067 PMD 0
Oops: 0002 [1] SMP
...

there is a temporary, unofficial patch at
ftp://lwfinger.dynalias.org/patches/mac80211_usb_problem.patch. Although it works, it attacks the
symptom, not the cause, and will never be adopted into the code. Once a proper fix is applied, it
will no longer be needed.

Larry


From mb at bu3sch.de  Wed Mar  7 23:28:06 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 7 Mar 2007 23:28:06 +0100
Subject: Problem with USB1.1 Host cores with the mb tree for
	bcm43xx_mac80211
In-Reply-To: <45EF2015.8000802@lwfinger.net>
References: <45EF2015.8000802@lwfinger.net>
Message-ID: <200703072328.06195.mb@bu3sch.de>

On Wednesday 07 March 2007 21:27, Larry Finger wrote:
> If you have a BCM4311 and are seeing an oops that looks like this when loading bcm43xx_mac80211:
> 
> ssb: Switching to ChipCommon core, index 0
> ssb: Switching to PCI-E core, index 3
> ssb: Switching to USB 1.1 Host core, index 2
> 
> Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
>  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
> PGD 3e792067 PUD 3ed66067 PMD 0
> Oops: 0002 [1] SMP
> ...
> 
> there is a temporary, unofficial patch at
> ftp://lwfinger.dynalias.org/patches/mac80211_usb_problem.patch. Although it works, it attacks the
> symptom, not the cause, and will never be adopted into the code. Once a proper fix is applied, it
> will no longer be needed.

A patch to disable the USB core on non-embedded devices is in my tree now.
The actual bug is still there, but nobody (except OpenWRT developers ;) )
should be able to hit it anymore now. :)

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar  7 23:56:05 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 16:56:05 -0600
Subject: Problem with USB1.1 Host cores with the mb tree
	for	bcm43xx_mac80211
In-Reply-To: <200703072328.06195.mb@bu3sch.de>
References: <45EF2015.8000802@lwfinger.net> <200703072328.06195.mb@bu3sch.de>
Message-ID: <45EF4305.5060606@lwfinger.net>

Michael Buesch wrote:
> On Wednesday 07 March 2007 21:27, Larry Finger wrote:
>> If you have a BCM4311 and are seeing an oops that looks like this when loading bcm43xx_mac80211:
>>
>> ssb: Switching to ChipCommon core, index 0
>> ssb: Switching to PCI-E core, index 3
>> ssb: Switching to USB 1.1 Host core, index 2
>>
>> Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
>>  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
>> PGD 3e792067 PUD 3ed66067 PMD 0
>> Oops: 0002 [1] SMP
>> ...
>>
>> there is a temporary, unofficial patch at
>> ftp://lwfinger.dynalias.org/patches/mac80211_usb_problem.patch. Although it works, it attacks the
>> symptom, not the cause, and will never be adopted into the code. Once a proper fix is applied, it
>> will no longer be needed.
> 
> A patch to disable the USB core on non-embedded devices is in my tree now.
> The actual bug is still there, but nobody (except OpenWRT developers ;) )
> should be able to hit it anymore now. :)

Your patch works here. Thanks,

Larry



From Larry.Finger at lwfinger.net  Thu Mar  8 00:07:02 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 07 Mar 2007 17:07:02 -0600
Subject: WPA problem with bcm43xx-mac80211
Message-ID: <45EF4596.2090101@lwfinger.net>

I'm making progress. Now that I no longer get a kernel oops due to the presence of a USB 1.1 Host
Core on my 4311, the bcm43xx-mac80211 driver actually loads and scans; however, I cannot
authenticate with my Linksys WRT54G V5 AP that uses WPA-PK TKIP. The dmesg output pertaining to the
bcm43xx is as follows:

ssb: Sonics Silicon Backplane found on PCI device 0000:01:00.0
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
ssb: Switching to ChipCommon core, index 0
ssb: Switching to PCI-E core, index 3
bcm43xx_mac80211: Broadcom 4311 WLAN found
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off
bcm43xx_mac80211: Adding Interface type 2
bcm43xx_mac80211: Found PHY: Analog 4, Type 2, Revision 8
bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
ssb: Switching to PCI-E core, index 3
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Loading firmware version 351.126 (2006-07-29 05:54:02)
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned on
bcm43xx_mac80211: Radio enabled by hardware
bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=21, tgt=62).
Disabling TX power adjustment.
bcm43xx_mac80211: Chip initialized
bcm43xx_mac80211: 32-bit DMA initialized
bcm43xx_mac80211: Wireless interface started
HW CONFIG: channel=1 freq=2412 phymode=3
wmaster0: Does not support passive scan, disabled
eth1: starting scan
HW CONFIG: channel=1 freq=2412 phymode=3
HW CONFIG: channel=2 freq=2417 phymode=3
HW CONFIG: channel=3 freq=2422 phymode=3
HW CONFIG: channel=4 freq=2427 phymode=3
HW CONFIG: channel=5 freq=2432 phymode=3
HW CONFIG: channel=6 freq=2437 phymode=3
HW CONFIG: channel=7 freq=2442 phymode=3
HW CONFIG: channel=8 freq=2447 phymode=3
HW CONFIG: channel=9 freq=2452 phymode=3
eth0: no link during initialization.
HW CONFIG: channel=10 freq=2457 phymode=3
HW CONFIG: channel=11 freq=2462 phymode=3
eth1: scan completed
HW CONFIG: channel=1 freq=2412 phymode=3
NET: Registered protocol family 17
eth1: starting scan
--snip--
HW CONFIG: channel=4 freq=2427 phymode=3
eth1: Initial auth_alg=0
eth1: authenticate with AP 00:14:bf:85:49:fa
eth1: RX authentication from 00:14:bf:85:49:fa (alg=0 transaction=2 status=0)
eth1: authenticated
eth1: associate with AP 00:14:bf:85:49:fa
eth1: RX AssocResp from 00:14:bf:85:49:fa (capab=0x31 status=0 aid=1)
eth1: associated
wmaster0: Added STA 00:14:bf:85:49:fa
eth1: RX deauthentication from 00:14:bf:85:49:fa (reason=15)
eth1: deauthenticated
eth1: set_encrypt - unknown addr 00:00:00:00:00:00
eth1: authenticate with AP 00:14:bf:85:49:fa
eth1: RX authentication from 00:14:bf:85:49:fa (alg=0 transaction=2 status=0)
eth1: authenticated
eth1: associate with AP 00:14:bf:85:49:fa
eth1: RX ReassocResp from 00:14:bf:85:49:fa (capab=0x31 status=0 aid=1)
eth1: associated
eth1: starting scan
--snip--
eth1: scan completed
HW CONFIG: channel=4 freq=2427 phymode=3
eth1: disassociate(reason=3)
eth1: starting scan
HW CONFIG: channel=1 freq=2412 phymode=3
eth1: set_encrypt - unknown addr 00:00:00:00:00:00
--snip--
eth1: scan completed
HW CONFIG: channel=4 freq=2427 phymode=3
eth1: Initial auth_alg=0
eth1: authenticate with AP 00:14:bf:85:49:fa
HW CONFIG: channel=4 freq=2427 phymode=3
eth1: Initial auth_alg=0
eth1: authenticate with AP 00:14:bf:85:49:fa
eth1: Initial auth_alg=0
eth1: authenticate with AP 00:14:bf:85:49:fa
eth1: RX authentication from 00:14:bf:85:49:fa (alg=0 transaction=2 status=0)
eth1: authenticated
eth1: associate with AP 00:14:bf:85:49:fa
eth1: authentication frame received from 00:14:bf:85:49:fa, but not in authenticate state - ignored
eth1: authentication frame received from 00:14:bf:85:49:fa, but not in authenticate state - ignored
eth1: RX ReassocResp from 00:14:bf:85:49:fa (capab=0x31 status=0 aid=1)
eth1: associated
eth1: deauthenticate(reason=3)
eth1: starting scan
HW CONFIG: channel=1 freq=2412 phymode=3
bcm43xx_mac80211: Removing Interface type 2
bcm43xx_mac80211: Wireless interface stopped
bcm43xx_mac80211: DMA-32 0x0200 (RX) max used slots: 1/64
bcm43xx_mac80211: DMA-32 0x02A0 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0280 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0260 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0240 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0220 (TX) max used slots: 6/128
bcm43xx_mac80211: DMA-32 0x0200 (TX) max used slots: 0/128
bcm43xx_mac80211: Radio turned off
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off


Is there anything special that I need to do that isn't needed for SoftMAC? I'm using NetworkManager
to control the authentication process.

Larry


From mb at bu3sch.de  Thu Mar  8 00:11:53 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 8 Mar 2007 00:11:53 +0100
Subject: WPA problem with bcm43xx-mac80211
In-Reply-To: <45EF4596.2090101@lwfinger.net>
References: <45EF4596.2090101@lwfinger.net>
Message-ID: <200703080011.53849.mb@bu3sch.de>

On Thursday 08 March 2007 00:07, Larry Finger wrote:
> I'm making progress. Now that I no longer get a kernel oops due to the presence of a USB 1.1 Host
> Core on my 4311, the bcm43xx-mac80211 driver actually loads and scans; however, I cannot
> authenticate with my Linksys WRT54G V5 AP that uses WPA-PK TKIP. The dmesg output pertaining to the
> bcm43xx is as follows:

> Is there anything special that I need to do that isn't needed for SoftMAC? I'm using NetworkManager
> to control the authentication process.
> 

Did you try moding closer to the AP? There are still tx power problems
(see the !WARNING! in dmesg)

-- 
Greetings Michael.


From dreamfly281 at gmail.com  Thu Mar  8 08:56:17 2007
From: dreamfly281 at gmail.com (Yanbo Li)
Date: Thu, 8 Mar 2007 15:56:17 +0800
Subject: Problem with USB1.1 Host cores with the mb tree for
	bcm43xx_mac80211
In-Reply-To: <45EF4305.5060606@lwfinger.net>
References: <45EF2015.8000802@lwfinger.net> <200703072328.06195.mb@bu3sch.de>
	<45EF4305.5060606@lwfinger.net>
Message-ID: <1197ff4c0703072356s575058e3h50c6104ec7609ff4@mail.gmail.com>

On 3/8/07, Larry Finger <larry.finger at lwfinger.net> wrote:
> Michael Buesch wrote:
> > On Wednesday 07 March 2007 21:27, Larry Finger wrote:
> >> If you have a BCM4311 and are seeing an oops that looks like this when loading bcm43xx_mac80211:
> >>
> >> ssb: Switching to ChipCommon core, index 0
> >> ssb: Switching to PCI-E core, index 3
> >> ssb: Switching to USB 1.1 Host core, index 2
> >>
> >> Unable to handle kernel NULL pointer dereference at 00000000000002d0 RIP:
> >>  [<ffffffff8812fcfd>] :usbcore:usb_create_hcd+0x3b/0xe8
> >> PGD 3e792067 PUD 3ed66067 PMD 0
> >> Oops: 0002 [1] SMP
> >> ...
> >>
> >> there is a temporary, unofficial patch at
> >> ftp://lwfinger.dynalias.org/patches/mac80211_usb_problem.patch. Although it works, it attacks the
> >> symptom, not the cause, and will never be adopted into the code. Once a proper fix is applied, it
> >> will no longer be needed.
> >
> > A patch to disable the USB core on non-embedded devices is in my tree now.
> > The actual bug is still there, but nobody (except OpenWRT developers ;) )
> > should be able to hit it anymore now. :)
>
> Your patch works here. Thanks,
>
> Larry
>
> -
> To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
> the body of a message to majordomo at vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html
>
After patch the
ftp://lwfinger.dynalias.org/patches/mac80211_usb_problem.patch to the
newest wireless-dev tree, It seemed my 4311 works without key
authrized.  The Ap is a D-link 624+. but it is unstable. If need any
more info. I will be glad to supply.
BR
lyb


From mb at bu3sch.de  Thu Mar  8 14:18:40 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 8 Mar 2007 14:18:40 +0100
Subject: Problem with USB1.1 Host cores with the mb tree for
	bcm43xx_mac80211
In-Reply-To: <1197ff4c0703072356s575058e3h50c6104ec7609ff4@mail.gmail.com>
References: <45EF2015.8000802@lwfinger.net> <45EF4305.5060606@lwfinger.net>
	<1197ff4c0703072356s575058e3h50c6104ec7609ff4@mail.gmail.com>
Message-ID: <200703081418.40809.mb@bu3sch.de>

On Thursday 08 March 2007 08:56, Yanbo Li wrote:
> It seemed my 4311 works without key
> authrized.

Eh, what?

-- 
Greetings Michael.


From aatrof at gmail.com  Thu Mar  8 21:31:39 2007
From: aatrof at gmail.com (Aleksander Trofimowicz)
Date: Thu, 8 Mar 2007 21:31:39 +0100
Subject: [bcm43xx] dhcp failure
In-Reply-To: <45ECD38B.4010502@lwfinger.net>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
	<45ECD38B.4010502@lwfinger.net>
Message-ID: <759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>

On 06/03/07, Larry Finger <larry.finger at lwfinger.net> wrote:

> > Before I start bashing netgear who sells crappy wpn824's, I would like
> > to rule out possibility that it's a bcm43xx fault. Anyway something
> > went wrong in the module.
> >
>[...]
> If it is limited to wireless,

No, it isn't. However it wasn't problematic for tg3 driver to cope
with a flawed dhcp server.

> do you have another wireless system that could run ethereal or kismet
> and capture the traffic?
>
I've got ar5212-based pccard, so I was able to check link layer - seemed ok

What is appalling is the way the netgear router handles dhcp. No
matter what happens it always send 802.11 frames aligned to 566B to
clients. I also found that whether bcm43xx survive or not, depends on
the difference between declared length in an ip header and the real
one. E.g.  the difference of 220B doesn't lead to crash. The same
cannot be said about 262B . This might suggest a buffer overflow.
-- 
at


From larry.finger at lwfinger.net  Thu Mar  8 22:20:17 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 08 Mar 2007 15:20:17 -0600
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>	
	<45ECD38B.4010502@lwfinger.net>
	<759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>
Message-ID: <45F07E11.7060104@lwfinger.net>

Aleksander Trofimowicz wrote:
>>
> I've got ar5212-based pccard, so I was able to check link layer - seemed ok
> 
> What is appalling is the way the netgear router handles dhcp. No
> matter what happens it always send 802.11 frames aligned to 566B to
> clients. I also found that whether bcm43xx survive or not, depends on
> the difference between declared length in an ip header and the real
> one. E.g.  the difference of 220B doesn't lead to crash. The same
> cannot be said about 262B . This might suggest a buffer overflow.

Can you run kismet with the ar5212 and send me the .dump file with the faulty buffer length? Please
send it to me alone, as the entire mailing list doesn't need to receive the entire file.

Larry


From dreamfly281 at gmail.com  Fri Mar  9 03:24:10 2007
From: dreamfly281 at gmail.com (Yanbo Li)
Date: Fri, 9 Mar 2007 10:24:10 +0800
Subject: Problem with USB1.1 Host cores with the mb tree for
	bcm43xx_mac80211
In-Reply-To: <200703081418.40809.mb@bu3sch.de>
References: <45EF2015.8000802@lwfinger.net> <45EF4305.5060606@lwfinger.net>
	<1197ff4c0703072356s575058e3h50c6104ec7609ff4@mail.gmail.com>
	<200703081418.40809.mb@bu3sch.de>
Message-ID: <1197ff4c0703081824p6ebf504fs6587b024fbd3733d@mail.gmail.com>

On 3/8/07, Michael Buesch <mb at bu3sch.de> wrote:
> On Thursday 08 March 2007 08:56, Yanbo Li wrote:
> > It seemed my 4311 works without key
> > authrized.
>
> Eh, what?
>
> --
> Greetings Michael.
>
Sorry for my poor english, I mean the card work with "iwconfig eth1
key off".(eth1 is
the wireless card) This is my card info:

0c:00.0 0280: 14e4:4311 (rev 01)
        Subsystem: 1028:0007
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop-
ParErr- Stepping- SERR+ FastB2B-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort-
<TAbort- <MAbort- >SERR- <PERR-
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 11
        Region 0: Memory at dfdfc000 (32-bit, non-prefetchable) [size=16K]
        Capabilities: [40] Power Management version 2
                Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA
PME(D0-,D1-,D2-,D3hot-,D3cold-)
                Status: D0 PME-Enable- DSel=0 DScale=2 PME-
        Capabilities: [58] Message Signalled Interrupts: 64bit-
Queue=0/0 Enable-
                Address: 00000000  Data: 0000
        Capabilities: [d0] Express Legacy Endpoint IRQ 0
                Device: Supported: MaxPayload 128 bytes, PhantFunc 0, ExtTag+
                Device: Latency L0s <4us, L1 unlimited
                Device: AtnBtn- AtnInd- PwrInd-
                Device: Errors: Correctable- Non-Fatal- Fatal- Unsupported-
                Device: RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop-
                Device: MaxPayload 128 bytes, MaxReadReq 128 bytes
                Link: Supported Speed 2.5Gb/s, Width x1, ASPM L0s, Port 0
                Link: Latency L0s <4us, L1 <64us
                Link: ASPM L0s Enabled RCB 64 bytes CommClk+ ExtSynch-
                Link: Speed 2.5Gb/s, Width x1
        Capabilities: [100] Advanced Error Reporting
        Capabilities: [13c] Virtual Channel

BR
lyb


From tomas at puga.vdu.lt  Fri Mar  9 11:01:09 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Fri, 09 Mar 2007 12:01:09 +0200
Subject: bcm43xx_mac80211 not works on Compaq nx6110
Message-ID: <45F13065.5090703@puga.vdu.lt>

Hello,

Can I help in some way to force this device ( Brodcom BCM4318 rev.2 )  
to work?
( I am administrator, not developper ).


Firmware used: 4.100.15.5.

Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:0e.0
Mar  9 11:32:10 localhost kernel: ssb: Unsupported SPROM revision 16 detected. Will extract v1
Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:04.0
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Broadcom 4318 WLAN found
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned off
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Adding Interface type 2
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found PHY: Analog 3, Type 2, Revision 7
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Loading firmware version 371.1061 (2006-10-04 21:02:04)
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned on
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio enabled by hardware
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Chip initialized
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: 32-bit DMA initialized
Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Wireless interface started
Mar  9 11:32:10 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
Mar  9 11:32:10 localhost kernel: wmaster0: Does not support passive scan, disabled
Mar  9 11:32:10 localhost kernel: wlan0: dropped data frame to not associated station 00:00:00:00:00:00
Mar  9 11:32:10 localhost last message repeated 2 times


Best regards,

Tomas


From mb at bu3sch.de  Fri Mar  9 11:19:29 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 9 Mar 2007 11:19:29 +0100
Subject: Problem with USB1.1 Host cores with the mb tree for
	bcm43xx_mac80211
In-Reply-To: <1197ff4c0703081824p6ebf504fs6587b024fbd3733d@mail.gmail.com>
References: <45EF2015.8000802@lwfinger.net> <200703081418.40809.mb@bu3sch.de>
	<1197ff4c0703081824p6ebf504fs6587b024fbd3733d@mail.gmail.com>
Message-ID: <200703091119.29811.mb@bu3sch.de>

On Friday 09 March 2007 03:24, Yanbo Li wrote:
> On 3/8/07, Michael Buesch <mb at bu3sch.de> wrote:
> > On Thursday 08 March 2007 08:56, Yanbo Li wrote:
> > > It seemed my 4311 works without key
> > > authrized.
> >
> > Eh, what?
> >
> > --
> > Greetings Michael.
> >
> Sorry for my poor english, I mean the card work with "iwconfig eth1
> key off".(eth1 is
> the wireless card) This is my card info:

Well, I think it's only a configuration error on your side.
It works perfectly well with encryption (I'm using encrypted
networks only)

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar  9 11:23:37 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 9 Mar 2007 11:23:37 +0100
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F13065.5090703@puga.vdu.lt>
References: <45F13065.5090703@puga.vdu.lt>
Message-ID: <200703091123.37953.mb@bu3sch.de>

On Friday 09 March 2007 11:01, Tomas Martisius wrote:
> Hello,
> 
> Can I help in some way to force this device ( Brodcom BCM4318 rev.2 )  
> to work?
> ( I am administrator, not developper ).
> 
> 
> Firmware used: 4.100.15.5.
> 
> Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:0e.0
> Mar  9 11:32:10 localhost kernel: ssb: Unsupported SPROM revision 16 detected. Will extract v1

Some b44 card in the system? Just wondering...

> Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:04.0
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Broadcom 4318 WLAN found

4318 is still unsupported. We are working on it.

> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned off
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Adding Interface type 2
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found PHY: Analog 3, Type 2, Revision 7
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Loading firmware version 371.1061 (2006-10-04 21:02:04)
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned on
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio enabled by hardware
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Chip initialized
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: 32-bit DMA initialized
> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Wireless interface started
> Mar  9 11:32:10 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
> Mar  9 11:32:10 localhost kernel: wmaster0: Does not support passive scan, disabled
> Mar  9 11:32:10 localhost kernel: wlan0: dropped data frame to not associated station 00:00:00:00:00:00
> Mar  9 11:32:10 localhost last message repeated 2 times
> 
> 
> Best regards,
> 
> Tomas
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 
> 

-- 
Greetings Michael.


From tomas at puga.vdu.lt  Fri Mar  9 12:18:10 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Fri, 09 Mar 2007 13:18:10 +0200
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <200703091123.37953.mb@bu3sch.de>
References: <45F13065.5090703@puga.vdu.lt> <200703091123.37953.mb@bu3sch.de>
Message-ID: <45F14272.8020506@puga.vdu.lt>

Then other quiestion:

On this nx6110 BCM4318 ( mini PCI ) works using bcm43xx softmac driver
and 3xxx firmware ( only as AP client and only  max 11 Mb, iwconfig 
wlan0 rate xxM does not work).

But on other PC with Belkin F5D7001PCI ( also BCM4318 ) - no way.

Best regards.

Tomas

Michael Buesch wrote:
> On Friday 09 March 2007 11:01, Tomas Martisius wrote:
>   
>> Hello,
>>
>> Can I help in some way to force this device ( Brodcom BCM4318 rev.2 )  
>> to work?
>> ( I am administrator, not developper ).
>>
>>
>> Firmware used: 4.100.15.5.
>>
>> Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:0e.0
>> Mar  9 11:32:10 localhost kernel: ssb: Unsupported SPROM revision 16 detected. Will extract v1
>>     
>
> Some b44 card in the system? Just wondering...
>   
Yes, ethernet 100 Mbps.
>   
>> Mar  9 11:32:10 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:04.0
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Broadcom 4318 WLAN found
>>     
>
> 4318 is still unsupported. We are working on it.
>
>   
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned off
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Adding Interface type 2
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found PHY: Analog 3, Type 2, Revision 7
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Loading firmware version 371.1061 (2006-10-04 21:02:04)
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio turned on
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Radio enabled by hardware
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Chip initialized
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: 32-bit DMA initialized
>> Mar  9 11:32:10 localhost kernel: bcm43xx_mac80211: Wireless interface started
>> Mar  9 11:32:10 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
>> Mar  9 11:32:10 localhost kernel: wmaster0: Does not support passive scan, disabled
>> Mar  9 11:32:10 localhost kernel: wlan0: dropped data frame to not associated station 00:00:00:00:00:00
>> Mar  9 11:32:10 localhost last message repeated 2 times
>>
>>
>> Best regards,
>>
>> Tomas
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>
>>
>>     
>
>   



From larry.finger at lwfinger.net  Fri Mar  9 17:11:56 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 09 Mar 2007 10:11:56 -0600
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F14272.8020506@puga.vdu.lt>
References: <45F13065.5090703@puga.vdu.lt> <200703091123.37953.mb@bu3sch.de>
	<45F14272.8020506@puga.vdu.lt>
Message-ID: <45F1874C.6040205@lwfinger.net>

Tomas Martisius wrote:
> Then other quiestion:
> 
> On this nx6110 BCM4318 ( mini PCI ) works using bcm43xx softmac driver
> and 3xxx firmware ( only as AP client and only  max 11 Mb, iwconfig 
> wlan0 rate xxM does not work).
> 
> But on other PC with Belkin F5D7001PCI ( also BCM4318 ) - no way.

If you use either 2.6.21-rc3 or 2.6.20 patched with
ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch, both of your 4318's should work just
fine. If not, please send me the log data from each of them and the output from iwconfig. With my
4318, I get a transmit speed of 16.2 Mbs with the rate set at 48 Mbs. Windows XP only gets 19.5 with
my 4311.

Larry


From larry.finger at lwfinger.net  Sat Mar 10 02:35:54 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 09 Mar 2007 19:35:54 -0600
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703091357m43b476cey82fa0618ee128659@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>	
	<45ECD38B.4010502@lwfinger.net>	
	<759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>	
	<45F07E11.7060104@lwfinger.net>
	<759d30a60703091357m43b476cey82fa0618ee128659@mail.gmail.com>
Message-ID: <45F20B7A.7050606@lwfinger.net>

Aleksander Trofimowicz wrote:
> On 08/03/07, Larry Finger <larry.finger at lwfinger.net> wrote:
>>
>> Can you run kismet with the ar5212 and send me the .dump file with the
>> faulty buffer length? Please
>> send it to me alone, as the entire mailing list doesn't need to
>> receive the entire file.
>>
> Today I inspected packets in greater detail and found what's really
> going on. dhclient fails to do its work right just after it tries to
> request an ip address from a previous lease and a dhcp server refuse
> to do so.  In such circumstances dhclient-script restarts a network
> device, which in case of my wifi card results in losing association
> with bss (look at the last three DHCPDISCOVER packets), and then tries
> to follow the standard four-phase dhcp procedure.
> 
> In the meantime, both iwconfig and the kernel ring buffer still
> suggest that the card is associated with ap.
> 
> I think this vulnerability can be tested on your equipment too.
> 
> A dump file contains three scenerios:
> 1. DHCPDISCOVER->DHCPOFFER->DHCPREQUEST->DHCPACK (works, dhclient
> without the list of old leases)
> 2. DHCPREQUEST->DHCPACK (works, dhclient with the list of old leases
> and no one has its ip addr on local net)
> 3.DHCPREQUEST->DHCPNACK -> 1. (doesn't work, dhclient with the list of
> old leases, but some one has its ip addr on local net already)
> 
> Is this a well known issue?

The reason you are having trouble is that your AP has a NULL SSID. I'm not sure the bcm43xx-softmac
combination will work. I know it does not if the ESSID is hidden.

Please set the SSID to something that is non-NULL and I'll take another look at your data if it
still doesn't work.

Larry


From Larry.Finger at lwfinger.net  Sun Mar 11 01:58:37 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 10 Mar 2007 18:58:37 -0600
Subject: New combined patch for 2.6.20.2
Message-ID: <45F3543D.1040205@lwfinger.net>

I have just put a new patch for 2.6.20.2 at
ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has some important fixes for
4318 users.

Larry


From tomas at puga.vdu.lt  Sun Mar 11 10:37:06 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Sun, 11 Mar 2007 11:37:06 +0200
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F1874C.6040205@lwfinger.net>
References: <45F13065.5090703@puga.vdu.lt> <200703091123.37953.mb@bu3sch.de>
	<45F14272.8020506@puga.vdu.lt> <45F1874C.6040205@lwfinger.net>
Message-ID: <45F3CDC2.9030809@puga.vdu.lt>

Hello,

Still no success.

Now little about logs and my config. Tested not encrypted connection.
First log is from debian kernel 2.6.20 from deb 
http://kernel-archive.buildserver.net/debian-kernel trunk main
using softmac ( on etch) and formware 3xx - works.

Mar 11 09:58:03 localhost kernel: bcm43xx driver
Mar 11 09:58:03 localhost kernel: ACPI: PCI Interrupt 0000:02:04.0[A] -> GSI 21 (level, low) -> IRQ 22
Mar 11 09:58:03 localhost kernel: bcm43xx: Chip ID 0x4318, rev 0x2
Mar 11 09:58:03 localhost kernel: bcm43xx: Number of cores: 4
Mar 11 09:58:03 localhost kernel: bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
Mar 11 09:58:03 localhost kernel: bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
Mar 11 09:58:03 localhost kernel: bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
Mar 11 09:58:03 localhost kernel: bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
Mar 11 09:58:03 localhost kernel: bcm43xx: PHY connected
Mar 11 09:58:03 localhost kernel: bcm43xx: Detected PHY: Version: 3, Type 2, Revision 7
Mar 11 09:58:03 localhost kernel: bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 2050 Rev: 8)
Mar 11 09:58:03 localhost kernel: bcm43xx: Radio turned off
Mar 11 09:58:03 localhost kernel: bcm43xx: Radio turned off
Mar 11 09:58:03 localhost kernel: bcm43xx: PHY connected
Mar 11 09:58:03 localhost kernel: bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
Mar 11 09:58:03 localhost kernel: bcm43xx: Radio turned on
Mar 11 09:58:03 localhost kernel: bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1496:bcm43xx_find_lopair()
Mar 11 09:58:03 localhost last message repeated 2 times
Mar 11 09:58:03 localhost kernel: bcm43xx: Chip initialized
Mar 11 09:58:03 localhost kernel: bcm43xx: 32-bit DMA initialized
Mar 11 09:58:03 localhost kernel: bcm43xx: Keys cleared
Mar 11 09:58:03 localhost kernel: bcm43xx: Selected 802.11 core (phytype 2)
Mar 11 09:58:03 localhost kernel: bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1496:bcm43xx_find_lopair()
Mar 11 09:58:03 localhost kernel: SoftMAC: Open Authentication completed with 00:14:bf:48:68:10

The second one is from kernel compiled from http://bu3sch.de git repository.
Are something more new on 2.6.21-rc3 or 
ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch ?
Kernel config is almost identical as on debian kernel ( make oldconfig, 
enter a lot of times and changed only
bcm43xx-mac82011 options). Firmware 4xxx. Network config and AP the some.

Mar 11 10:48:33 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0000:02:04.0
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Broadcom 4318 WLAN found
Mar 11 10:48:33 localhost kernel: ACPI: PCI Interrupt 0000:00:1e.2[A] -> GSI 21 (level, low) -> IRQ 22
Mar 11 10:48:33 localhost kernel: PCI: Setting latency timer of device 0000:00:1e.2 to 64
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Radio turned off
Mar 11 10:48:33 localhost kernel: wmaster0: Selected rate control algorithm 'simple'
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Adding Interface type 2
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Found PHY: Analog 3, Type 2, Revision 7
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Loading firmware version 371.1061 (2006-10-04 21:02:04)
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Radio turned on
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Radio enabled by hardware
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Chip initialized
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: 32-bit DMA initialized
Mar 11 10:48:33 localhost kernel: bcm43xx_mac80211: Wireless interface started
Mar 11 10:48:33 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
Mar 11 10:48:33 localhost kernel: wmaster0: Does not support passive scan, disabled
Mar 11 10:48:33 localhost kernel: wlan0: dropped data frame to not associated station 00:00:00:00:00:00
Mar 11 10:48:33 localhost last message repeated 2 times
Mar 11 10:50:35 localhost kernel: wlan0: starting scan
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=2 freq=2417 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=3 freq=2422 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=4 freq=2427 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=5 freq=2432 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=6 freq=2437 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=7 freq=2442 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=8 freq=2447 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:35 localhost kernel: HW CONFIG: channel=9 freq=2452 phymode=3
Mar 11 10:50:35 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:36 localhost kernel: HW CONFIG: channel=10 freq=2457 phymode=3
Mar 11 10:50:36 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:36 localhost kernel: HW CONFIG: channel=11 freq=2462 phymode=3
Mar 11 10:50:36 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:36 localhost kernel: wlan0: scan completed
Mar 11 10:50:36 localhost kernel: HW CONFIG: channel=1 freq=2412 phymode=3
Mar 11 10:50:36 localhost kernel: HW CONFIG: channel=11 freq=2462 phymode=3
Mar 11 10:50:36 localhost kernel: wlan0: Initial auth_alg=0
Mar 11 10:50:36 localhost kernel: wlan0: authenticate with AP 00:14:bf:48:68:10
Mar 11 10:50:36 localhost kernel: wmaster0: TX to low-level driver (len=30) FC=0x00b0 DUR=0x013a A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=00:14:bf:48:68:10
Mar 11 10:50:36 localhost kernel: wlan0: RX authentication from 00:14:bf:48:68:10 (alg=0 transaction=2 status=0)
Mar 11 10:50:36 localhost kernel: wlan0: authenticated
Mar 11 10:50:36 localhost kernel: wlan0: associate with AP 00:14:bf:48:68:10
Mar 11 10:50:36 localhost kernel: wmaster0: TX to low-level driver (len=53) FC=0x0000 DUR=0x013a A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=00:14:bf:48:68:10
Mar 11 10:50:36 localhost kernel: wlan0: RX AssocResp from 00:14:bf:48:68:10 (capab=0x401 status=0 aid=1)
Mar 11 10:50:36 localhost kernel: wlan0: associated
Mar 11 10:50:36 localhost kernel: wmaster0: Added STA 00:14:bf:48:68:10
Mar 11 10:50:36 localhost kernel: wmaster0: TX to low-level driver (len=360) FC=0x0108 DUR=0x002c A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:40 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x013a A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=00:14:bf:48:68:10
Mar 11 10:50:41 localhost kernel: wmaster0: TX to low-level driver (len=360) FC=0x0108 DUR=0x002c A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:44 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x013a A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=00:14:bf:48:68:10
Mar 11 10:50:53 localhost kernel: wmaster0: TX to low-level driver (len=360) FC=0x0108 DUR=0x002c A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=ff:ff:ff:ff:ff:ff
Mar 11 10:50:56 localhost kernel: wmaster0: TX to low-level driver (len=42) FC=0x0040 DUR=0x013a A1=00:14:bf:48:68:10 A2=00:14:a5:1e:7d:30 A3=00:14:bf:48:68:10


Full both boot's kernel logs atached.

iwconfig output on mac80211:
 

wmaster0  IEEE 802.11g  Frequency:2.462 GHz  
          RTS thr:off   Fragment thr=2346 B   
          
wlan0     IEEE 802.11g  ESSID:"eduroam"  
          Mode:Managed  Frequency:2.462 GHz  Access Point: 00:14:BF:48:68:10   
          RTS thr:off   Fragment thr=2346 B   
          Encryption key:off
          Link Quality=206/60  Signal level=-230 dBm  Noise level=-73 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0


It seems that AP is seen, but traffic not goes, at least in one side.
Some problems with TX power?
About belkin - i will try to test it hardly next week.

Best regards,

Tomas Martis(ius

Larry Finger wrote:
> Tomas Martisius wrote:
>   
>> Then other quiestion:
>>
>> On this nx6110 BCM4318 ( mini PCI ) works using bcm43xx softmac driver
>> and 3xxx firmware ( only as AP client and only  max 11 Mb, iwconfig 
>> wlan0 rate xxM does not work).
>>
>> But on other PC with Belkin F5D7001PCI ( also BCM4318 ) - no way.
>>     
>
> If you use either 2.6.21-rc3 or 2.6.20 patched with
> ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch, both of your 4318's should work just
> fine. If not, please send me the log data from each of them and the output from iwconfig. With my
> 4318, I get a transmit speed of 16.2 Mbs with the rate set at 48 Mbs. Windows XP only gets 19.5 with
> my 4311.
>
> Larry
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070311/580b7eb0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: kern.log
Type: text/x-log
Size: 86477 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070311/580b7eb0/attachment.bin>

From schwab at suse.de  Sun Mar 11 11:17:30 2007
From: schwab at suse.de (Andreas Schwab)
Date: Sun, 11 Mar 2007 11:17:30 +0100
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45F3543D.1040205@lwfinger.net> (Larry Finger's message of "Sat, 
	10 Mar 2007 18:58:37 -0600")
References: <45F3543D.1040205@lwfinger.net>
Message-ID: <je1wjwozid.fsf@sykes.suse.de>

Larry Finger <Larry.Finger at lwfinger.net> writes:

> I have just put a new patch for 2.6.20.2 at
> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has some important fixes for

s/-/_/

Andreas.

-- 
Andreas Schwab, SuSE Labs, schwab at suse.de
SuSE Linux Products GmbH, Maxfeldstra?e 5, 90409 N?rnberg, Germany
PGP key fingerprint = 58CA 54C7 6D53 942B 1756  01D3 44D5 214B 8276 4ED5
"And now for something completely different."


From schwab at suse.de  Sun Mar 11 12:04:23 2007
From: schwab at suse.de (Andreas Schwab)
Date: Sun, 11 Mar 2007 12:04:23 +0100
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45F3543D.1040205@lwfinger.net> (Larry Finger's message of "Sat, 
	10 Mar 2007 18:58:37 -0600")
References: <45F3543D.1040205@lwfinger.net>
Message-ID: <jewt1onirs.fsf@sykes.suse.de>

Larry Finger <Larry.Finger at lwfinger.net> writes:

> I have just put a new patch for 2.6.20.2 at
> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has some important fixes for
> 4318 users.

This looks suspicious:

+	if (phy->connected) {
+		tmp = bcm43xx_phy_read(bcm, 0x0400) & 0xFF;
+		if (tmp == 3 || tmp < 6) {

This is the same as (tmp < 6).

+			bcm43xx_phy_write(bcm, 0x04C2, 0x1816);
+			bcm43xx_phy_write(bcm, 0x04C3, 0x8006);
+		}
+		if (tmp < 6) {

The original has the (effective) condition (tmp < 6 && tmp != 3).

+			bcm43xx_phy_write(bcm, 0x04CC,
+					  (bcm43xx_phy_read(bcm, 0x04CC)
+					   & 0x00FF) | 0x1F00);
 		}

Andreas.

-- 
Andreas Schwab, SuSE Labs, schwab at suse.de
SuSE Linux Products GmbH, Maxfeldstra?e 5, 90409 N?rnberg, Germany
PGP key fingerprint = 58CA 54C7 6D53 942B 1756  01D3 44D5 214B 8276 4ED5
"And now for something completely different."


From larry.finger at lwfinger.net  Sun Mar 11 16:48:18 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 11 Mar 2007 10:48:18 -0500
Subject: New combined patch for 2.6.20.2
In-Reply-To: <jewt1onirs.fsf@sykes.suse.de>
References: <45F3543D.1040205@lwfinger.net> <jewt1onirs.fsf@sykes.suse.de>
Message-ID: <45F424C2.5070806@lwfinger.net>

Andreas Schwab wrote:
> Larry Finger <Larry.Finger at lwfinger.net> writes:
> 
>> I have just put a new patch for 2.6.20.2 at
>> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has some important fixes for
>> 4318 users.

As Andreas noted, the patch is at ftp://lwfinger.dynalias.org/combined_2.6.20.2.patch.
> 
> This looks suspicious:
> 
> +	if (phy->connected) {
> +		tmp = bcm43xx_phy_read(bcm, 0x0400) & 0xFF;
> +		if (tmp == 3 || tmp < 6) {
> 
> This is the same as (tmp < 6).
> 
> +			bcm43xx_phy_write(bcm, 0x04C2, 0x1816);
> +			bcm43xx_phy_write(bcm, 0x04C3, 0x8006);
> +		}
> +		if (tmp < 6) {
> 
> The original has the (effective) condition (tmp < 6 && tmp != 3).
> 
> +			bcm43xx_phy_write(bcm, 0x04CC,
> +					  (bcm43xx_phy_read(bcm, 0x04CC)
> +					   & 0x00FF) | 0x1F00);
>  		}

Somehow, an intermediate patch of mine was inadvertently added. The patch file has been updated to
have the correct material, and now looks like my version of wireless-2.6.

Thanks for spotting my mistake.

Larry



From larry.finger at lwfinger.net  Sun Mar 11 16:55:22 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 11 Mar 2007 10:55:22 -0500
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F3CDC2.9030809@puga.vdu.lt>
References: <45F13065.5090703@puga.vdu.lt> <200703091123.37953.mb@bu3sch.de>
	<45F14272.8020506@puga.vdu.lt> <45F1874C.6040205@lwfinger.net>
	<45F3CDC2.9030809@puga.vdu.lt>
Message-ID: <45F4266A.1040302@lwfinger.net>

Tomas Martisius wrote:
> Hello,
> 
> Still no success.
> 
> Now little about logs and my config. Tested not encrypted connection.
> First log is from debian kernel 2.6.20 from deb
> http://kernel-archive.buildserver.net/debian-kernel trunk main
> using softmac ( on etch) and formware 3xx - works.

Good. This looks like success to me.

> The second one is from kernel compiled from http://bu3sch.de git repository.
> Are something more new on 2.6.21-rc3 or
> ftp://lwfinger.dynalias.org/patches/combined_2.6.20.patch ?
> Kernel config is almost identical as on debian kernel ( make oldconfig,
> enter a lot of times and changed only
> bcm43xx-mac82011 options). Firmware 4xxx. Network config and AP the some.

AFAIK, 4318's do not work with bcm43xx-mac80211. Of course, Michael is the expert on that version;
however, I have not yet been successful in getting the mac80211 code to authenticate using WPA with
any of my interfaces.

Larry


From stefano.brivio at polimi.it  Mon Mar 12 01:04:20 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 12 Mar 2007 01:04:20 +0100
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
Message-ID: <20070312010420.353a59c0@localhost>

Please test the following patch. It syncs ACI (Adjacent Channels
Interference) code to specs. I can't test it right now. Will port to
mac80211 branch ASAP.


Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
----

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx.h b/drivers/net/wireless/bcm43xx/bcm43xx.h
index 95ff175..7023327 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx.h
+++ b/drivers/net/wireless/bcm43xx/bcm43xx.h
@@ -398,6 +398,9 @@
 #define BCM43xx_DEFAULT_SHORT_RETRY_LIMIT	7
 #define BCM43xx_DEFAULT_LONG_RETRY_LIMIT	4
 
+/* Statscounter offsets. */
+#define BCM43xx_SC_ACI		0x2E
+
 /* FIXME: the next line is a guess as to what the maximum RSSI value might be */
 #define RX_RSSI_MAX				60
 
@@ -550,7 +553,11 @@ struct bcm43xx_phyinfo {
 	u8 connected:1,
 	   calibrated:1,
 	   is_locked:1, /* used in bcm43xx_phy_{un}lock() */
-	   dyn_tssi_tbl:1; /* used in bcm43xx_phy_init_tssi2dbm_table() */
+	   dyn_tssi_tbl:1, /* used in bcm43xx_phy_init_tssi2dbm_table() */
+	   g_interfmode:1; /* bit 4000 in PHY_G_CRS, used in periodic tasks */
+	u8 g_interfmode_timer; /* how much time ago g_interfmode was unset */
+	u16 g_sc_saved; /* used in periodic tasks for ACI */
+
 	/* LO Measurement Data.
 	 * Use bcm43xx_get_lopair() to get a value.
 	 */
@@ -629,7 +636,9 @@ struct bcm43xx_radioinfo {
 	/* ACI (adjacent channel interference) flags. */
 	u8 aci_enable:1,
 	   aci_wlan_automatic:1,
-	   aci_hw_rssi:1;
+	   aci_hw_rssi:1,
+	   aci_delay:5;
+	u8 aci_start;
 };
 
 /* Data structures for DMA transmission, per 80211 core. */
@@ -699,6 +708,18 @@ struct bcm43xx_noise_calculation {
 	s8 samples[8][4];
 };
 
+/* Statscounter data (currently ACI only). */
+struct bcm43xx_statscounter_saved {
+	u16 aci;
+};
+
+/* Values for ACI moving average calculation. */
+struct bcm43xx_aci_saved {
+	u16 value[8];
+	u8 next:3,
+	   set:3;
+};
+
 struct bcm43xx_stats {
 	u8 noise;
 	struct iw_statistics wstats;
@@ -812,6 +833,10 @@ struct bcm43xx_private {
 	u32 irq_savedstate;
 	/* Link Quality calculation context. */
 	struct bcm43xx_noise_calculation noisecalc;
+	/* Statscounter tracking. */
+	struct bcm43xx_statscounter_saved sc;
+	/* ACI tracking. */
+	struct bcm43xx_aci_saved aci;
 	/* if > 0 MAC is suspended. if == 0 MAC is enabled. */
 	int mac_suspended;
 
diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
index e594af4..27ec519 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -3059,6 +3059,44 @@ static void bcm43xx_pcie_mdio_write(stru
 	bcm43xx_write32(bcm, BCM43xx_PCIECORE_MDIO_CTL, 0);
 }
 
+/* We don't use any statscounter other than ACI for now */
+static u16 bcm43xx_sc_read(struct bcm43xx_private *bcm)
+{
+	struct bcm43xx_statscounter_saved *sc = &bcm->sc;
+	u16 tmp;
+
+	tmp = bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, 0x80 + BCM43xx_SC_ACI)
+		- sc->aci;
+	if (tmp)
+		sc->aci += tmp;
+
+	return tmp;
+}
+
+static u16 bcm43xx_aci_moving_average(struct bcm43xx_private *bcm)
+{
+	struct bcm43xx_aci_saved *aci = &bcm->aci;
+
+	u8 i;
+	u16 avg;
+	u32 sum = 0;
+
+	aci->value[aci->next] = bcm43xx_sc_read(bcm);
+	if (unlikely(aci->set < 7))
+		aci->set++;
+	for (i = 0; i < aci->set; i++)
+		sum += aci->value[i];
+	avg = sum / (u16)8;
+	if ((sum % 8) > 3)
+		avg++;
+	if (aci->next < 7)
+		aci->next++;
+	else
+		aci->next = 0;
+
+	return avg;
+}
+
 /* Make an I/O Core usable. "core_mask" is the bitmask of the cores to enable.
  * To enable core 0, pass a core_mask of 1<<0
  */
@@ -3182,6 +3220,8 @@ static void bcm43xx_periodic_every1sec(s
 	struct bcm43xx_phyinfo *phy = bcm43xx_current_phy(bcm);
 	struct bcm43xx_radioinfo *radio = bcm43xx_current_radio(bcm);
 	int radio_hw_enable;
+	unsigned long phylock_flags;
+	u16 tmp;
 
 	/* check if radio hardware enabled status changed */
 	radio_hw_enable = bcm43xx_is_hw_radio_enabled(bcm);
@@ -3191,27 +3231,56 @@ static void bcm43xx_periodic_every1sec(s
 		       (radio_hw_enable == 0) ? "disabled" : "enabled");
 		bcm43xx_leds_update(bcm, 0);
 	}
+
 	if (phy->type == BCM43xx_PHYTYPE_G) {
-		//TODO: update_aci_moving_average
-		if (radio->aci_enable && radio->aci_wlan_automatic) {
+		
+		if (radio->aci_start < 60)
+			radio->aci_start++;
+		if (radio->aci_delay)
+			radio->aci_delay--;
+		if (phy->g_interfmode && phy->g_interfmode_timer < 30)
+			phy->g_interfmode_timer++;
+
+		if (radio->interfmode == BCM43xx_RADIO_INTERFMODE_AUTOWLAN &&
+				!radio->aci_delay) {
 			bcm43xx_mac_suspend(bcm);
-			if (!radio->aci_enable && 1 /*TODO: not scanning? */) {
-				if (0 /*TODO: bunch of conditions*/) {
-					bcm43xx_radio_set_interference_mitigation(bcm,
-										  BCM43xx_RADIO_INTERFMODE_MANUALWLAN);
-				}
-			} else if (1/*TODO*/) {
-				/*
-				if ((aci_average > 1000) && !(bcm43xx_radio_aci_scan(bcm))) {
-					bcm43xx_radio_set_interference_mitigation(bcm,
-										  BCM43xx_RADIO_INTERFMODE_NONE);
+			if (!radio->aci_enable)
+			{
+				if (bcm43xx_aci_moving_average(bcm) < 200) {
+					if (bcm43xx_radio_aci_scan(bcm)) {
+						bcm43xx_radio_set_interference_mitigation(bcm,
+							BCM43xx_RADIO_INTERFMODE_MANUALWLAN);
+						radio->aci_start = 0;
+					} else
+						radio->aci_delay = 20;
 				}
-				*/
+			} else if (radio->aci_start == 60) {
+				if (bcm43xx_aci_moving_average(bcm) > 1000)
+					if (!bcm43xx_radio_aci_scan(bcm))
+						bcm43xx_radio_set_interference_mitigation(bcm,
+							BCM43xx_RADIO_INTERFMODE_NONE);
 			}
 			bcm43xx_mac_enable(bcm);
 		} else if (radio->interfmode == BCM43xx_RADIO_INTERFMODE_NONWLAN &&
-			   phy->rev == 1) {
-			//TODO: implement rev1 workaround
+				phy->rev == 1) {
+			tmp = bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, 0x00AE);
+			if (phy->g_interfmode) {
+				if (tmp && ((tmp - phy->g_sc_saved) > 1500)) {
+					bcm43xx_phy_lock(bcm, phylock_flags);
+					bcm43xx_phy_write(bcm, 0x00AE,
+						bcm43xx_phy_read(bcm, 0x00AE) & ~0x4000);
+					bcm43xx_phy_unlock(bcm, phylock_flags);
+					phy->g_interfmode = 1;
+					phy->g_interfmode_timer = 0;
+				}
+			} else if (phy->g_interfmode_timer == 30) {
+						bcm43xx_phy_lock(bcm, phylock_flags);
+						bcm43xx_phy_write(bcm, 0x00AE,
+							bcm43xx_phy_read(bcm, 0x00AE & 0x4000));
+						bcm43xx_phy_unlock(bcm, phylock_flags);
+						phy->g_interfmode = 0;
+			}
+			phy->g_sc_saved = tmp;
 		}
 	}
 }
@@ -3297,10 +3366,16 @@ void bcm43xx_periodic_tasks_delete(struc
 void bcm43xx_periodic_tasks_setup(struct bcm43xx_private *bcm)
 {
 	struct delayed_work *work = &bcm->periodic_work;
+	struct bcm43xx_phyinfo *phy = bcm43xx_current_phy(bcm);
 
 	assert(bcm43xx_status(bcm) == BCM43xx_STAT_INITIALIZED);
 	INIT_DELAYED_WORK(work, bcm43xx_periodic_work_handler);
 	schedule_delayed_work(work, 0);
+	
+	if (bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS) & 0x4000)
+		phy->g_interfmode = 1;
+	else
+		phy->g_interfmode = 0;
 }
 
 static void bcm43xx_security_init(struct bcm43xx_private *bcm)
@@ -3429,6 +3504,8 @@ static void prepare_radiodata_for_init(s
 	radio->aci_enable = 0;
 	radio->aci_wlan_automatic = 0;
 	radio->aci_hw_rssi = 0;
+	radio->aci_start = 0;
+	radio->aci_delay = 0;
 }
 
 static void prepare_priv_for_init(struct bcm43xx_private *bcm)
diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_phy.c b/drivers/net/wireless/bcm43xx/bcm43xx_phy.c


From larry.finger at lwfinger.net  Mon Mar 12 04:29:06 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 11 Mar 2007 22:29:06 -0500
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <20070312010420.353a59c0@localhost>
References: <20070312010420.353a59c0@localhost>
Message-ID: <45F4C902.9050405@lwfinger.net>

Stefano Brivio wrote:
> Please test the following patch. It syncs ACI (Adjacent Channels
> Interference) code to specs. I can't test it right now. Will port to
> mac80211 branch ASAP.
> 
> 
> Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
> ----

NACK - this patch really kills performance on my 4311. I'll see if I can find the problem.

Larry



From larry.finger at lwfinger.net  Mon Mar 12 06:51:19 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 00:51:19 -0500
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <45F4C902.9050405@lwfinger.net>
References: <20070312010420.353a59c0@localhost> <45F4C902.9050405@lwfinger.net>
Message-ID: <45F4EA57.5010405@lwfinger.net>

Larry Finger wrote:
> Stefano Brivio wrote:
>> Please test the following patch. It syncs ACI (Adjacent Channels
>> Interference) code to specs. I can't test it right now. Will port to
>> mac80211 branch ASAP.
>>
>>
>> Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
>> ----
> 
> NACK - this patch really kills performance on my 4311. I'll see if I can find the problem.

Forget the above. The performance was killed by my AP, which needed to be rebooted. I will send this
patch on to John.

Larry



From stefano.brivio at polimi.it  Mon Mar 12 07:05:58 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Mon, 12 Mar 2007 07:05:58 +0100
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <45F4EA57.5010405@lwfinger.net>
References: <20070312010420.353a59c0@localhost> <45F4C902.9050405@lwfinger.net>
	<45F4EA57.5010405@lwfinger.net>
Message-ID: <20070312070558.07488359@localhost>

On Mon, 12 Mar 2007 00:51:19 -0500
Larry Finger <larry.finger at lwfinger.net> wrote:

> Larry Finger wrote:
> > Stefano Brivio wrote:
> >> Please test the following patch. It syncs ACI (Adjacent Channels
> >> Interference) code to specs. I can't test it right now. Will port to
> >> mac80211 branch ASAP.
> >>
> >>
> >> Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
> >> ----
> > 
> > NACK - this patch really kills performance on my 4311. I'll see if I
> > can find the problem.
> 
> Forget the above. The performance was killed by my AP, which needed to be
> rebooted. I will send this patch on to John.

Well, wait. I'd want to see some performance improvements before the patch
is applied. That's why I didn't send it to John and put RFT in the
subject. Are there any?


--
Ciao
Stefano


From dwmw2 at infradead.org  Mon Mar 12 08:53:09 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 12 Mar 2007 08:53:09 +0100
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
Message-ID: <1173685989.3584.2.camel@shinybook.infradead.org>

On Fri, 2007-03-02 at 11:30 -0600, Larry Finger wrote:
> There was an error in the B5PHY init specifications.

This patch doesn't fix the machine check in bcm43xx_phy_initb5 which
Pavel Roskin and I reported a couple of weeks ago. To get rid of that
crash, I still have to revert an earlier 'spec update' patch
(740ac4fb08866d702be90f167665d03759bd27d0).

-- 
dwmw2



From josejx at gentoo.org  Mon Mar 12 14:23:30 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Mon, 12 Mar 2007 09:23:30 -0400
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <1173685989.3584.2.camel@shinybook.infradead.org>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
Message-ID: <45F55452.3000704@gentoo.org>

David Woodhouse wrote:
> On Fri, 2007-03-02 at 11:30 -0600, Larry Finger wrote:
>> There was an error in the B5PHY init specifications.
> 
> This patch doesn't fix the machine check in bcm43xx_phy_initb5 which
> Pavel Roskin and I reported a couple of weeks ago. To get rid of that
> crash, I still have to revert an earlier 'spec update' patch
> (740ac4fb08866d702be90f167665d03759bd27d0).
> 

Yeah, the issue is that the Rev1 cards have to be init'd with g mode
off.  I'm not sure anyone has picked up this fix yet. The relevant
spec fix is here: http://bcm-v4.sipsolutions.net/802.11/PHY/calinit

-Joe


From linville at tuxdriver.com  Mon Mar 12 15:53:09 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 12 Mar 2007 10:53:09 -0400
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <45F55452.3000704@gentoo.org>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org>
Message-ID: <20070312145309.GB8878@tuxdriver.com>

On Mon, Mar 12, 2007 at 09:23:30AM -0400, Joseph Jezak wrote:
> David Woodhouse wrote:
> > On Fri, 2007-03-02 at 11:30 -0600, Larry Finger wrote:
> >> There was an error in the B5PHY init specifications.
> > 
> > This patch doesn't fix the machine check in bcm43xx_phy_initb5 which
> > Pavel Roskin and I reported a couple of weeks ago. To get rid of that
> > crash, I still have to revert an earlier 'spec update' patch
> > (740ac4fb08866d702be90f167665d03759bd27d0).
> > 
> 
> Yeah, the issue is that the Rev1 cards have to be init'd with g mode
> off.  I'm not sure anyone has picked up this fix yet. The relevant
> spec fix is here: http://bcm-v4.sipsolutions.net/802.11/PHY/calinit

FWIW, by inspection it looks like the mac80211-based driver is
(trying?) to implement this change.

David, have you tried the mac80211 version?  Does it still have the
same crash?

John
-- 
John W. Linville
linville at tuxdriver.com


From dwmw2 at infradead.org  Mon Mar 12 16:16:34 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 12 Mar 2007 16:16:34 +0100
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <20070312145309.GB8878@tuxdriver.com>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org>  <20070312145309.GB8878@tuxdriver.com>
Message-ID: <1173712594.3584.6.camel@shinybook.infradead.org>

On Mon, 2007-03-12 at 10:53 -0400, John W. Linville wrote:
> 
> FWIW, by inspection it looks like the mac80211-based driver is
> (trying?) to implement this change.
> 
> David, have you tried the mac80211 version?  Does it still have the
> same crash?

Should the one in 2.6.20-1.2982.fc7 be OK? I can try that relatively
easily; anything else might need to wait till I get home.

-- 
dwmw2



From larry.finger at lwfinger.net  Mon Mar 12 18:42:18 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 12:42:18 -0500
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <1173712594.3584.6.camel@shinybook.infradead.org>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>	<1173685989.3584.2.camel@shinybook.infradead.org>	<45F55452.3000704@gentoo.org>
	<20070312145309.GB8878@tuxdriver.com>
	<1173712594.3584.6.camel@shinybook.infradead.org>
Message-ID: <45F590FA.4020409@lwfinger.net>

David Woodhouse wrote:
> On Mon, 2007-03-12 at 10:53 -0400, John W. Linville wrote:
>> FWIW, by inspection it looks like the mac80211-based driver is
>> (trying?) to implement this change.
>>
>> David, have you tried the mac80211 version?  Does it still have the
>> same crash?
> 
> Should the one in 2.6.20-1.2982.fc7 be OK? I can try that relatively
> easily; anything else might need to wait till I get home.
> 

I don't think it will improve anything. I don't currently have a copy of wireless-dev, but the code
in the mb tree is identical with that of wireless-2.6. I'm currently trying to figure out the spec
at http://bcm-v4.sipsolutions.net/802.11/PHY/calinit and what we need to change.

Larry


From linville at tuxdriver.com  Mon Mar 12 18:48:25 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 12 Mar 2007 13:48:25 -0400
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <45F590FA.4020409@lwfinger.net>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org> <20070312145309.GB8878@tuxdriver.com>
	<1173712594.3584.6.camel@shinybook.infradead.org>
	<45F590FA.4020409@lwfinger.net>
Message-ID: <20070312174825.GD8878@tuxdriver.com>

On Mon, Mar 12, 2007 at 12:42:18PM -0500, Larry Finger wrote:
> David Woodhouse wrote:
> > On Mon, 2007-03-12 at 10:53 -0400, John W. Linville wrote:
> >> FWIW, by inspection it looks like the mac80211-based driver is
> >> (trying?) to implement this change.
> >>
> >> David, have you tried the mac80211 version?  Does it still have the
> >> same crash?
> > 
> > Should the one in 2.6.20-1.2982.fc7 be OK? I can try that relatively
> > easily; anything else might need to wait till I get home.
> > 
> 
> I don't think it will improve anything. I don't currently have a copy of wireless-dev, but the code
> in the mb tree is identical with that of wireless-2.6. I'm currently trying to figure out the spec
> at http://bcm-v4.sipsolutions.net/802.11/PHY/calinit and what we need to change.

Huh?  Are you looking in drivers/net/wireless/mac80211/bcm43xx?
It certainly seems to differ quite a bit from what is in
drivers/net/wireless/bcm43xx (i.e. no the softmac-based version).

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Mon Mar 12 18:46:56 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 12 Mar 2007 13:46:56 -0400
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <1173712594.3584.6.camel@shinybook.infradead.org>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org> <20070312145309.GB8878@tuxdriver.com>
	<1173712594.3584.6.camel@shinybook.infradead.org>
Message-ID: <20070312174656.GC8878@tuxdriver.com>

On Mon, Mar 12, 2007 at 04:16:34PM +0100, David Woodhouse wrote:
> On Mon, 2007-03-12 at 10:53 -0400, John W. Linville wrote:
> > 
> > FWIW, by inspection it looks like the mac80211-based driver is
> > (trying?) to implement this change.
> > 
> > David, have you tried the mac80211 version?  Does it still have the
> > same crash?
> 
> Should the one in 2.6.20-1.2982.fc7 be OK? I can try that relatively
> easily; anything else might need to wait till I get home.

Yes, I think that will do.  It certainly looks to be up-to-date.

Thanks,

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Mon Mar 12 19:30:43 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 13:30:43 -0500
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <20070312174825.GD8878@tuxdriver.com>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org> <20070312145309.GB8878@tuxdriver.com>
	<1173712594.3584.6.camel@shinybook.infradead.org>
	<45F590FA.4020409@lwfinger.net>
	<20070312174825.GD8878@tuxdriver.com>
Message-ID: <45F59C53.4090500@lwfinger.net>

John W. Linville wrote:
> On Mon, Mar 12, 2007 at 12:42:18PM -0500, Larry Finger wrote:
>> David Woodhouse wrote:
>>> On Mon, 2007-03-12 at 10:53 -0400, John W. Linville wrote:
>>>> FWIW, by inspection it looks like the mac80211-based driver is
>>>> (trying?) to implement this change.
>>>>
>>>> David, have you tried the mac80211 version?  Does it still have the
>>>> same crash?
>>> Should the one in 2.6.20-1.2982.fc7 be OK? I can try that relatively
>>> easily; anything else might need to wait till I get home.
>>>
>> I don't think it will improve anything. I don't currently have a copy of wireless-dev, but the code
>> in the mb tree is identical with that of wireless-2.6. I'm currently trying to figure out the spec
>> at http://bcm-v4.sipsolutions.net/802.11/PHY/calinit and what we need to change.
> 
> Huh?  Are you looking in drivers/net/wireless/mac80211/bcm43xx?
> It certainly seems to differ quite a bit from what is in
> drivers/net/wireless/bcm43xx (i.e. no the softmac-based version).

I was, but the conclusion is the same. The generate_xxatt_list is not relevant and only the last if
clause is important. The second argument to the second call to wireless_core_reset is just a
different way to say "non-zero".

I've been looking at the code for a while now, and I still don't see where the code doesn't match
the spec. Either it is a subtle point, or I'm not even close to sharp today.

Larry


From larry.finger at lwfinger.net  Mon Mar 12 19:48:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 13:48:33 -0500
Subject: [PATCH] bcm43xx: Fix typo in B5PHY init specifications
In-Reply-To: <45F55452.3000704@gentoo.org>
References: <45e85f2b.Dp1dM05tvZFFROmc%Larry.Finger@lwfinger.net>
	<1173685989.3584.2.camel@shinybook.infradead.org>
	<45F55452.3000704@gentoo.org>
Message-ID: <45F5A081.1060800@lwfinger.net>

Joe,

Joseph Jezak wrote:
> David Woodhouse wrote:
>> On Fri, 2007-03-02 at 11:30 -0600, Larry Finger wrote:
>>> There was an error in the B5PHY init specifications.
>> This patch doesn't fix the machine check in bcm43xx_phy_initb5 which
>> Pavel Roskin and I reported a couple of weeks ago. To get rid of that
>> crash, I still have to revert an earlier 'spec update' patch
>> (740ac4fb08866d702be90f167665d03759bd27d0).
>>
> 
> Yeah, the issue is that the Rev1 cards have to be init'd with g mode
> off.  I'm not sure anyone has picked up this fix yet. The relevant
> spec fix is here: http://bcm-v4.sipsolutions.net/802.11/PHY/calinit

I think the bug may be even deeper. In bcm43xx_phy_connect, the G Mode Enable bit of TM State Low is
only written for phy->rev >= 5. I have not found any other place where that bit is set. From what I
read in the specs, that bit should exist and be set for all G PHY's. Is that correct? I think I'm
beginning to understand the confusion between phy->connected in the code and gmode in the specs.

Larry



From larry.finger at lwfinger.net  Mon Mar 12 21:28:53 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 15:28:53 -0500
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <20070312070558.07488359@localhost>
References: <20070312010420.353a59c0@localhost>	<45F4C902.9050405@lwfinger.net>	<45F4EA57.5010405@lwfinger.net>
	<20070312070558.07488359@localhost>
Message-ID: <45F5B805.8040401@lwfinger.net>

Stefano Brivio wrote:
> On Mon, 12 Mar 2007 00:51:19 -0500
> 
> Well, wait. I'd want to see some performance improvements before the patch
> is applied. That's why I didn't send it to John and put RFT in the
> subject. Are there any?

No, I don't see any significant difference in RX or TX throughput with this patch. So far, I have
only tested on the 4311. Results for the 4306 and 4318 will come later.

Larry



From mb at bu3sch.de  Mon Mar 12 21:53:34 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 12 Mar 2007 21:53:34 +0100
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <45F5B805.8040401@lwfinger.net>
References: <20070312010420.353a59c0@localhost>
	<20070312070558.07488359@localhost> <45F5B805.8040401@lwfinger.net>
Message-ID: <200703122153.34684.mb@bu3sch.de>

On Monday 12 March 2007 21:28, Larry Finger wrote:
> Stefano Brivio wrote:
> > On Mon, 12 Mar 2007 00:51:19 -0500
> > 
> > Well, wait. I'd want to see some performance improvements before the patch
> > is applied. That's why I didn't send it to John and put RFT in the
> > subject. Are there any?
> 
> No, I don't see any significant difference in RX or TX throughput with this patch. So far, I have
> only tested on the 4311. Results for the 4306 and 4318 will come later.

Not that interference mitigation can not improve the signal,
if there is no interference disturbing it. ;) It _is_ already
best possible signal, then.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Mon Mar 12 22:14:18 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 16:14:18 -0500
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <200703122153.34684.mb@bu3sch.de>
References: <20070312010420.353a59c0@localhost>	<20070312070558.07488359@localhost>
	<45F5B805.8040401@lwfinger.net> <200703122153.34684.mb@bu3sch.de>
Message-ID: <45F5C2AA.8030002@lwfinger.net>

Michael Buesch wrote:
> On Monday 12 March 2007 21:28, Larry Finger wrote:
>> Stefano Brivio wrote:
>>> On Mon, 12 Mar 2007 00:51:19 -0500
>>>
>>> Well, wait. I'd want to see some performance improvements before the patch
>>> is applied. That's why I didn't send it to John and put RFT in the
>>> subject. Are there any?
>> No, I don't see any significant difference in RX or TX throughput with this patch. So far, I have
>> only tested on the 4311. Results for the 4306 and 4318 will come later.
> 
> Not that interference mitigation can not improve the signal,
> if there is no interference disturbing it. ;) It _is_ already
> best possible signal, then.

Of course. My environment is rather quiet. At least, the patch does no harm.

Larry




From Larry.Finger at lwfinger.net  Mon Mar 12 22:49:38 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 12 Mar 2007 16:49:38 -0500
Subject: [RFC] bcm43xx: Replace some magic numbers
Message-ID: <45f5caf2.B7juO0pz9ZlapMwv%Larry.Finger@lwfinger.net>

In code manipulating the TM State Low register of 802.11 cores, two
different magic numbers are used to reference the 'G Mode Enable' bit.
One of these, 0x20000000, is clear, but the other, (0x800 << 18), is not.
This patch replaces both types with a defined constant. In addition, two
bits in the TM State High registers are given definitions to help in the
reading of the code.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx.h
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
@@ -277,11 +277,14 @@
 #define BCM43xx_SBTMSTATELOW_REJECT		0x02
 #define BCM43xx_SBTMSTATELOW_CLOCK		0x10000
 #define BCM43xx_SBTMSTATELOW_FORCE_GATE_CLOCK	0x20000
+#define BCM43xx_SBTMSTATELOW_G_MODE_ENABLE	0x20000000
 
 /* sbtmstatehigh state flags */
 #define BCM43xx_SBTMSTATEHIGH_SERROR		0x00000001
 #define BCM43xx_SBTMSTATEHIGH_BUSY		0x00000004
 #define BCM43xx_SBTMSTATEHIGH_TIMEOUT		0x00000020
+#define BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL	0x00010000
+#define BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL	0x00020000
 #define BCM43xx_SBTMSTATEHIGH_COREFLAGS		0x1FFF0000
 #define BCM43xx_SBTMSTATEHIGH_DMA64BIT		0x10000000
 #define BCM43xx_SBTMSTATEHIGH_GATEDCLK		0x20000000
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -168,16 +168,16 @@ int bcm43xx_phy_connect(struct bcm43xx_p
 
 	flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATEHIGH);
 	if (connect) {
-		if (!(flags & 0x00010000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags |= (0x800 << 18);
+		flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	} else {
-		if (!(flags & 0x00020000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags &= ~(0x800 << 18);
+		flags &= ~BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	}
 out:
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1389,7 +1389,7 @@ void bcm43xx_wireless_core_reset(struct 
 				& ~(BCM43xx_SBF_MAC_ENABLED | 0x00000002));
 	} else {
 		if (connect_phy)
-			flags |= 0x20000000;
+			flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_phy_connect(bcm, connect_phy);
 		bcm43xx_core_enable(bcm, flags);
 		bcm43xx_write16(bcm, 0x03E6, 0x0000);
@@ -3662,7 +3662,7 @@ int bcm43xx_select_wireless_core(struct 
 		u32 sbtmstatelow;
 
 		sbtmstatelow = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		sbtmstatelow |= 0x20000000;
+		sbtmstatelow |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, sbtmstatelow);
 	}
 	err = wireless_core_up(bcm, 1);


From joerg at alea.gnuu.de  Tue Mar 13 01:30:08 2007
From: joerg at alea.gnuu.de (=?UTF-8?Q?J=C3=B6rg?= Sommer)
Date: Tue, 13 Mar 2007 00:30:08 +0000 (UTC)
Subject: what's "but no queue item exists"?
Message-ID: <slrnevbs4g.92o.joerg@alea.gnuu.de>

Hi,

my log is full with this messages: Can someone explain me, what the mean?

SoftMAC: Already associating or associated to 00:14:1b:60:6a:40
SoftMAC: Scanning finished: scanned 14 channels starting with channel 1
SoftMAC: generic IE set to dd160050f20101000050f20201000050f20201000050f201
SoftMAC: Already associating or associated to 00:14:1b:60:6a:40
SoftMAC: Sent Authentication Request to 00:14:1b:60:6a:40.
SoftMAC: Open Authentication completed with 00:14:1b:60:6a:40
SoftMAC: sent association request!
SoftMAC: associated!
SoftMAC: Authentication response received from 00:12:f0:d3:5c:6d but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:14:1b:60:6a:40 but no queue item exists.
SoftMAC: Authentication response received from 00:12:f0:d3:5c:6d but no queue item exists.
SoftMAC: Associate: Scanning for networks first.
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
bcm43xx: set security called, .level = 0, .enabled = 0, .encrypt = 0
SoftMAC: Scanning finished: scanned 14 channels starting with channel 1
SoftMAC: Queueing Authentication Request to 00:14:1b:60:6a:40
SoftMAC: Cannot associate without being authenticated, requested authentication

How long SoftMAC waits for an authentication response? Is this adjustable?

Bye, J?rg
-- 
Wer eher stirbt ist l?nger tot.
    	 	    	       			(Un B. Kant)


From tomas at puga.vdu.lt  Tue Mar 13 08:10:57 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Tue, 13 Mar 2007 09:10:57 +0200
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F4266A.1040302@lwfinger.net>
References: <45F13065.5090703@puga.vdu.lt> <200703091123.37953.mb@bu3sch.de>
	<45F14272.8020506@puga.vdu.lt> <45F1874C.6040205@lwfinger.net>
	<45F3CDC2.9030809@puga.vdu.lt> <45F4266A.1040302@lwfinger.net>
Message-ID: <45F64E81.1040709@puga.vdu.lt>


> Good. This looks like success to me.
>   
Looks like sucess, but I am not very happy using
bcm43xx softmac driver. That's why I'm testing bcm43xx-mac80211.
For example why in "rate auto" speed does not goes up than 11M?

:~# iwconfig wlan0 rate auto
:~# iwconfig wlan0
wlan0 IEEE 802.11b/g ESSID:"eduroam" Nickname:"Broadcom 4318"
Mode:Managed Frequency=2.417 GHz Access Point: 00:14:BF:73:0F:24
Bit Rate=11 Mb/s Tx-Power=18 dBm
RTS thr:off Fragment thr:off
Encryption key:off
Link Quality=76/100 Signal level=-38 dBm Noise level=-70 dBm
Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
Tx excessive retries:0 Invalid misc:0 Missed beacon:0

Signal exelent, distance between AP and PC - 2 meters.

How about Master and Ad-Hock work modes?

Best regards,

Tomas Marti?ius






From dreamfly281 at gmail.com  Tue Mar 13 08:36:26 2007
From: dreamfly281 at gmail.com (Yanbo Li)
Date: Tue, 13 Mar 2007 15:36:26 +0800
Subject: Does bcm4311 support connect Ap with "shared key" authorized mode?
Message-ID: <1197ff4c0703130036g5630fd69vf7766b0d545d38c4@mail.gmail.com>

Hi guys:
I am using bcm4311 connect with a Ap(Dlink624+)  under "shared key"
authorized mode.
But the dmesg show "eth1: authentication with AP 00:17:89:55:ed:df
timed out". When I search the mails and found Johannes Berg had said
that "the shared key is not support at Jan 2006". I want to know is it
supported now?  Any hints is welcome.

BR
Lyb


From tomas at puga.vdu.lt  Tue Mar 13 09:59:06 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Tue, 13 Mar 2007 10:59:06 +0200
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx softmac
	driver.
Message-ID: <45F667DA.3060902@puga.vdu.lt>

Hello,

There are logs from this other PC. kernel used from:
deb http://kernel-archive.buildserver.net/debian-kernel trunk main

First iwconfig then ndiswrapper used:

wlan0     IEEE 802.11g  ESSID:"vileikos8"  
          Mode:Managed  Frequency:2.427 GHz  Access Point: 00:30:4F:44:95:81   
          Bit Rate:2 Mb/s   Tx-Power:25 dBm   
          RTS thr:2347 B   Fragment thr:2346 B   
          Encryption key:off
          Power Management:off
          Link Quality:28/100  Signal level:-78 dBm  Noise level:-96 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0


Now logs then bcm43xx used:

wlan0     IEEE 802.11b/g  ESSID:"vileikos8"  Nickname:"Broadcom 4318"
          Mode:Managed  Frequency=2.484 GHz  Access Point: Invalid   
          Bit Rate=1 Mb/s   Tx-Power=18 dBm   
          RTS thr:off   Fragment thr:off
          Encryption key:off
          Link Quality=0/100  Signal level=-256 dBm  Noise level=-256 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

And kern.log:

Mar 13 10:47:50 tmgw kernel: ieee80211_crypt: registered algorithm 'NULL'
Mar 13 10:47:50 tmgw kernel: ieee80211: 802.11 data/management/control stack, git-1.1.13
Mar 13 10:47:50 tmgw kernel: ieee80211: Copyright (C) 2004-2005 Intel Corporation <jketreno at linux.intel.com>
Mar 13 10:47:50 tmgw kernel: bcm43xx driver
Mar 13 10:47:50 tmgw kernel: PCI: setting IRQ 12 as level-triggered
Mar 13 10:47:50 tmgw kernel: PCI: Found IRQ 12 for device 0000:00:0a.0
Mar 13 10:47:50 tmgw kernel: bcm43xx: Chip ID 0x4318, rev 0x2
Mar 13 10:47:50 tmgw kernel: bcm43xx: Number of cores: 4
Mar 13 10:47:50 tmgw kernel: bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
Mar 13 10:47:50 tmgw kernel: bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
Mar 13 10:47:50 tmgw kernel: bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
Mar 13 10:47:50 tmgw kernel: bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
Mar 13 10:47:50 tmgw kernel: bcm43xx: PHY connected
Mar 13 10:47:50 tmgw kernel: bcm43xx: Detected PHY: Version: 3, Type 2, Revision 7
Mar 13 10:47:50 tmgw kernel: bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 2050 Rev: 8)
Mar 13 10:47:50 tmgw kernel: bcm43xx: Radio turned off
Mar 13 10:47:50 tmgw kernel: bcm43xx: Radio turned off
Mar 13 10:47:50 tmgw kernel: bcm43xx: PHY connected
Mar 13 10:47:50 tmgw kernel: bcm43xx: Microcode rev 0x127, pl 0xe (2005-04-18  02:36:27)
Mar 13 10:47:50 tmgw kernel: bcm43xx: Radio turned on
Mar 13 10:47:50 tmgw kernel: bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1496:bcm43xx_find_lopair()
Mar 13 10:47:50 tmgw last message repeated 2 times
Mar 13 10:47:50 tmgw kernel: bcm43xx: Chip initialized
Mar 13 10:47:50 tmgw kernel: bcm43xx: 32-bit DMA initialized
Mar 13 10:47:50 tmgw kernel: bcm43xx: Keys cleared
Mar 13 10:47:50 tmgw kernel: bcm43xx: Selected 802.11 core (phytype 2)
Mar 13 10:47:50 tmgw kernel: bcm43xx: ASSERTION FAILED (radio_attenuation < 10) at: drivers/net/wireless/bcm43xx/bcm43xx_phy.c:1496:bcm43xx_find_lopair()

Best regards,

Tomas Marti?ius




From larry.finger at lwfinger.net  Tue Mar 13 16:13:03 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 13 Mar 2007 10:13:03 -0500
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx softmac
	driver.
In-Reply-To: <45F667DA.3060902@puga.vdu.lt>
References: <45F667DA.3060902@puga.vdu.lt>
Message-ID: <45F6BF7F.5020603@lwfinger.net>

Tomas Martisius wrote:
> Hello,
> 
> There are logs from this other PC. kernel used from:
> deb http://kernel-archive.buildserver.net/debian-kernel trunk main
> 
> First iwconfig then ndiswrapper used:
> 
> wlan0     IEEE 802.11g  ESSID:"vileikos8"  
>           Mode:Managed  Frequency:2.427 GHz  Access Point: 00:30:4F:44:95:81   
>           Bit Rate:2 Mb/s   Tx-Power:25 dBm   
>           RTS thr:2347 B   Fragment thr:2346 B   
>           Encryption key:off
>           Power Management:off
>           Link Quality:28/100  Signal level:-78 dBm  Noise level:-96 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0

The quality of the SoftMAC driver is not yet to the point that weak signals like yours (-78 dBm) can
be handled. To use it, you will have to be closer to your AP.

> Now logs then bcm43xx used:
> 
> wlan0     IEEE 802.11b/g  ESSID:"vileikos8"  Nickname:"Broadcom 4318"
>           Mode:Managed  Frequency=2.484 GHz  Access Point: Invalid   
>           Bit Rate=1 Mb/s   Tx-Power=18 dBm   
>           RTS thr:off   Fragment thr:off
>           Encryption key:off
>           Link Quality=0/100  Signal level=-256 dBm  Noise level=-256 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0

You have never associated with the AP for the reason stated above.

Larry



From larry.finger at lwfinger.net  Tue Mar 13 16:23:39 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 13 Mar 2007 10:23:39 -0500
Subject: bcm43xx_mac80211 not works on Compaq nx6110
In-Reply-To: <45F64E81.1040709@puga.vdu.lt>
References: <45F13065.5090703@puga.vdu.lt>
	<200703091123.37953.mb@bu3sch.de>	<45F14272.8020506@puga.vdu.lt>
	<45F1874C.6040205@lwfinger.net>	<45F3CDC2.9030809@puga.vdu.lt>
	<45F4266A.1040302@lwfinger.net> <45F64E81.1040709@puga.vdu.lt>
Message-ID: <45F6C1FB.7020409@lwfinger.net>

Tomas Martisius wrote:
>> Good. This looks like success to me.
>>   
> Looks like sucess, but I am not very happy using
> bcm43xx softmac driver. That's why I'm testing bcm43xx-mac80211.
> For example why in "rate auto" speed does not goes up than 11M?

Using a 4318, you are likely to be a lot happier with SoftMAC than with mac80211.

> :~# iwconfig wlan0 rate auto
> :~# iwconfig wlan0
> wlan0 IEEE 802.11b/g ESSID:"eduroam" Nickname:"Broadcom 4318"
> Mode:Managed Frequency=2.417 GHz Access Point: 00:14:BF:73:0F:24
> Bit Rate=11 Mb/s Tx-Power=18 dBm
> RTS thr:off Fragment thr:off
> Encryption key:off
> Link Quality=76/100 Signal level=-38 dBm Noise level=-70 dBm
> Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
> Tx excessive retries:0 Invalid misc:0 Missed beacon:0
> 
> Signal exelent, distance between AP and PC - 2 meters.
> 
> How about Master and Ad-Hock work modes?

AFAIK, those modes are not in SoftMAC, and never will be.

On my system, I get the following:

larrylap2:~ # iwconfig eth1 rate auto
larrylap2:~ # iwconfig eth1
eth1      IEEE 802.11b/g  ESSID:"lwfdjf"  Nickname:"Broadcom 4311"
          Mode:Managed  Frequency=2.427 GHz  Access Point: 00:14:BF:85:49:FA
          Bit Rate=24 Mb/s   Tx-Power=18 dBm
          RTS thr:off   Fragment thr:off
          Encryption key:xxx-xxxx-xxx-xxx   Security mode:open
          Link Quality=71/100  Signal level=-52 dBm  Noise level=-70 dBm
          Rx invalid nwid:0  Rx invalid crypt:1534  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

Check the setting for txrates->user_rate near line 270 in
net/ieee80211/softmac/ieee80211softmac_module.c. If you have the latest patches, it should be set to
24M.

Larry


From aatrof at gmail.com  Tue Mar 13 16:56:50 2007
From: aatrof at gmail.com (Aleksander Trofimowicz)
Date: Tue, 13 Mar 2007 16:56:50 +0100
Subject: [bcm43xx] dhcp failure
In-Reply-To: <45F20B7A.7050606@lwfinger.net>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>
	<45ECD38B.4010502@lwfinger.net>
	<759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>
	<45F07E11.7060104@lwfinger.net>
	<759d30a60703091357m43b476cey82fa0618ee128659@mail.gmail.com>
	<45F20B7A.7050606@lwfinger.net>
Message-ID: <759d30a60703130856t3f4434e1g5cb6489d0d8bda22@mail.gmail.com>

On 10/03/07, Larry Finger <larry.finger at lwfinger.net> wrote:

> The reason you are having trouble is that your AP has a NULL SSID. I'm not sure the bcm43xx-softmac
> combination will work. I know it does not if the ESSID is hidden.
>
Are we talking about the same version of bcm43xx/softmac? I do
successfully connect to AS, whose not null ESSID is hidden all the
time, and employs WPA-PSK. The only but is that under certain
conditions dhcp fails and I wonder whether this is bcm43xx specific or
not. If latter, then I'll try to convince a maintainer of dhcp-client
package of my distro to take care of that.
Whatsoever it isn't difficult to do it yourself. But these settings
are quite common for private WLANs, so it would be good if
bcm43xx/softmac hadn't such shortcomings.

-- 
at


From aatrof at gmail.com  Tue Mar 13 17:26:13 2007
From: aatrof at gmail.com (Aleksander Trofimowicz)
Date: Tue, 13 Mar 2007 17:26:13 +0100
Subject: Test framework
Message-ID: <759d30a60703130926g7097becxcf0766be9c272521@mail.gmail.com>

I was wondering whether there exists a test framework/there is a need
for automated tests, which could be run by everyone, without the
knowledge what is exactly going on in bcm43xx development. What kind
of test would be of any interest to you? Functional/performance
blackbox tests? Coverage tests?
-- 
at


From larry.finger at lwfinger.net  Tue Mar 13 18:03:51 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 13 Mar 2007 12:03:51 -0500
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703130856t3f4434e1g5cb6489d0d8bda22@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>	
	<45ECD38B.4010502@lwfinger.net>	
	<759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>	
	<45F07E11.7060104@lwfinger.net>	
	<759d30a60703091357m43b476cey82fa0618ee128659@mail.gmail.com>	
	<45F20B7A.7050606@lwfinger.net>
	<759d30a60703130856t3f4434e1g5cb6489d0d8bda22@mail.gmail.com>
Message-ID: <45F6D977.3070603@lwfinger.net>

Aleksander Trofimowicz wrote:
> On 10/03/07, Larry Finger <larry.finger at lwfinger.net> wrote:
> 
>> The reason you are having trouble is that your AP has a NULL SSID. I'm
>> not sure the bcm43xx-softmac
>> combination will work. I know it does not if the ESSID is hidden.
>>
> Are we talking about the same version of bcm43xx/softmac? I do
> successfully connect to AS, whose not null ESSID is hidden all the
> time, and employs WPA-PSK. The only but is that under certain
> conditions dhcp fails and I wonder whether this is bcm43xx specific or
> not. If latter, then I'll try to convince a maintainer of dhcp-client
> package of my distro to take care of that.
> Whatsoever it isn't difficult to do it yourself. But these settings
> are quite common for private WLANs, so it would be good if
> bcm43xx/softmac hadn't such shortcomings.

One user has had trouble connecting to Cisco AP's with hidden ESSIDs. Before this, I had not gotten
any report of success in associating with a hidden ESSID and thought the problem was general.
Perhaps that is not the case. In the dumpfile that you sent me, the Netgear AP is broadcasting a
NULL ESSID every 100 msec. This is obviously a different AP than the one discussed above.

With regard to getting a DHCP address, there should not be any bcm43xx-specific problems, as long as
reliable communications are established. There may be problems with certain AP's. For example, there
was a recent "upgrade" to the firmware of Linksys WRT54G V5/6 units that killed DHCP connections to
all Linux and OS X clients. It didn't matter whether the connection was wired or wireless. Only
Windows clients worked, which gives you some idea of the depth of their testing! I filed a bug
report and had to revert to the previous firmware version. It was fixed within a week, or so.

To test the reliability of your connection, I suggest using the Iperf utility with some other host
on your LAN as the server and your computer as the client. For bi-directional tests, use the 'iperf
-c <server> -r' command. If the speed obtained by this test is 5 Mbs or higher, then your connection
is reliable. If the above test works, I can suggest is that you post your AP make, model, and
firmware level and ask if anyone else is using that unit.

Larry



From johannes at sipsolutions.net  Tue Mar 13 20:14:44 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Tue, 13 Mar 2007 20:14:44 +0100
Subject: Does bcm4311 support connect Ap with "shared key" authorized mode?
In-Reply-To: <1197ff4c0703130036g5630fd69vf7766b0d545d38c4@mail.gmail.com>
References: <1197ff4c0703130036g5630fd69vf7766b0d545d38c4@mail.gmail.com>
Message-ID: <1173813285.12717.2.camel@johannes.berg>

On Tue, 2007-03-13 at 15:36 +0800, Yanbo Li wrote:

> I am using bcm4311 connect with a Ap(Dlink624+)  under "shared key"
> authorized mode.

> But the dmesg show "eth1: authentication with AP 00:17:89:55:ed:df
> timed out". When I search the mails and found Johannes Berg had said
> that "the shared key is not support at Jan 2006". I want to know is it
> supported now?  Any hints is welcome.

I think it's supported now, how about you just try?

[insert rant about how pointless shared key auth is here]

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070313/40a86fd7/attachment.pgp>

From larry.finger at lwfinger.net  Wed Mar 14 06:14:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 00:14:00 -0500
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <20070312010420.353a59c0@localhost>
References: <20070312010420.353a59c0@localhost>
Message-ID: <45F78498.8080608@lwfinger.net>

Stefano,

As noted earlier on the list, I have started testing this patch. In setting the various interference
modes, I have found some bugs in other places that were not previously tested. Thanks for this
contribution.

I have some comments below.

Stefano Brivio wrote:
> Please test the following patch. It syncs ACI (Adjacent Channels
> Interference) code to specs. I can't test it right now. Will port to
> mac80211 branch ASAP.
> 
> 
> Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
> ----
> 
> diff --git a/drivers/net/wireless/bcm43xx/bcm43xx.h b/drivers/net/wireless/bcm43xx/bcm43xx.h
> index 95ff175..7023327 100644
> --- a/drivers/net/wireless/bcm43xx/bcm43xx.h
> +++ b/drivers/net/wireless/bcm43xx/bcm43xx.h
> @@ -398,6 +398,9 @@
>  #define BCM43xx_DEFAULT_SHORT_RETRY_LIMIT	7
>  #define BCM43xx_DEFAULT_LONG_RETRY_LIMIT	4
>  
> +/* Statscounter offsets. */
> +#define BCM43xx_SC_ACI		0x2E
> +
>  /* FIXME: the next line is a guess as to what the maximum RSSI value might be */
>  #define RX_RSSI_MAX				60
>  
> @@ -550,7 +553,11 @@ struct bcm43xx_phyinfo {
>  	u8 connected:1,
>  	   calibrated:1,
>  	   is_locked:1, /* used in bcm43xx_phy_{un}lock() */
> -	   dyn_tssi_tbl:1; /* used in bcm43xx_phy_init_tssi2dbm_table() */
> +	   dyn_tssi_tbl:1, /* used in bcm43xx_phy_init_tssi2dbm_table() */
> +	   g_interfmode:1; /* bit 4000 in PHY_G_CRS, used in periodic tasks */
> +	u8 g_interfmode_timer; /* how much time ago g_interfmode was unset */
> +	u16 g_sc_saved; /* used in periodic tasks for ACI */
> +
>  	/* LO Measurement Data.
>  	 * Use bcm43xx_get_lopair() to get a value.
>  	 */
> @@ -629,7 +636,9 @@ struct bcm43xx_radioinfo {
>  	/* ACI (adjacent channel interference) flags. */
>  	u8 aci_enable:1,
>  	   aci_wlan_automatic:1,
> -	   aci_hw_rssi:1;
> +	   aci_hw_rssi:1,
> +	   aci_delay:5;
Should this be a bit field? Why not just make it a u8?
> +	u8 aci_start;
>  };
>  
>  /* Data structures for DMA transmission, per 80211 core. */
> @@ -699,6 +708,18 @@ struct bcm43xx_noise_calculation {
>  	s8 samples[8][4];
>  };
>  
> +/* Statscounter data (currently ACI only). */
> +struct bcm43xx_statscounter_saved {
> +	u16 aci;
> +};
> +
> +/* Values for ACI moving average calculation. */
> +struct bcm43xx_aci_saved {
> +	u16 value[8];
> +	u8 next:3,
> +	   set:3;
As I will explain later, I don't think 'set' is needed. I also recommend having 'next' be a plain u8.
> +};
> +
>  struct bcm43xx_stats {
>  	u8 noise;
>  	struct iw_statistics wstats;
> @@ -812,6 +833,10 @@ struct bcm43xx_private {
>  	u32 irq_savedstate;
>  	/* Link Quality calculation context. */
>  	struct bcm43xx_noise_calculation noisecalc;
> +	/* Statscounter tracking. */
> +	struct bcm43xx_statscounter_saved sc;
> +	/* ACI tracking. */
> +	struct bcm43xx_aci_saved aci;
>  	/* if > 0 MAC is suspended. if == 0 MAC is enabled. */
>  	int mac_suspended;
>  
> diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> index e594af4..27ec519 100644
> --- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> +++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> @@ -3059,6 +3059,44 @@ static void bcm43xx_pcie_mdio_write(stru
>  	bcm43xx_write32(bcm, BCM43xx_PCIECORE_MDIO_CTL, 0);
>  }
>  
> +/* We don't use any statscounter other than ACI for now */
> +static u16 bcm43xx_sc_read(struct bcm43xx_private *bcm)
> +{
> +	struct bcm43xx_statscounter_saved *sc = &bcm->sc;
> +	u16 tmp;
> +
> +	tmp = bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, 0x80 + BCM43xx_SC_ACI)
> +		- sc->aci;
> +	if (tmp)
> +		sc->aci += tmp;
> +
> +	return tmp;
> +}
> +
> +static u16 bcm43xx_aci_moving_average(struct bcm43xx_private *bcm)
> +{
> +	struct bcm43xx_aci_saved *aci = &bcm->aci;
> +
> +	u8 i;
> +	u16 avg;
> +	u32 sum = 0;
> +
> +	aci->value[aci->next] = bcm43xx_sc_read(bcm);
> +	if (unlikely(aci->set < 7))
> +		aci->set++;
I don't think the variable aci->set is needed as the divisor is alway 8 in the calculation of the
average below. Any error in the average shouldn't be important as it will occur only in the first
cycle through the value buffer. The for loop below should end at i < 8. There will be extra
calculations only during the first buffer cycle.
> +	for (i = 0; i < aci->set; i++)
> +		sum += aci->value[i];
> +	avg = sum / (u16)8;
Why the cast here? I didn't get any gcc warnings without it. I expect this ends up as a shift right
anyway.
> +	if ((sum % 8) > 3)
> +		avg++;
> +	if (aci->next < 7)
> +		aci->next++;
> +	else
> +		aci->next = 0;
Why not auto-increment aci->next in the line where bcm43xx_sc_read is called. Then you only need to
test for next > 7 and reset it to zero then.
> +
> +	return avg;
> +}

Larry



From stefano.brivio at polimi.it  Wed Mar 14 07:41:18 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Wed, 14 Mar 2007 07:41:18 +0100
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <45F78498.8080608@lwfinger.net>
References: <20070312010420.353a59c0@localhost> <45F78498.8080608@lwfinger.net>
Message-ID: <20070314074118.466bb9f0@localhost>

On Wed, 14 Mar 2007 00:14:00 -0500
Larry Finger <larry.finger at lwfinger.net> wrote:

> Stefano,
> 
> As noted earlier on the list, I have started testing this patch. In
> setting the various interference modes, I have found some bugs in other
> places that were not previously tested. Thanks for this contribution.
> 
> I have some comments below.
> 
> Stefano Brivio wrote:
> > Please test the following patch. It syncs ACI (Adjacent Channels
> > Interference) code to specs. I can't test it right now. Will port to
> > mac80211 branch ASAP.
> > 
> > 
> > Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>
> > ----
> > 
> > diff --git a/drivers/net/wireless/bcm43xx/bcm43xx.h
> > b/drivers/net/wireless/bcm43xx/bcm43xx.h index 95ff175..7023327 100644
> > --- a/drivers/net/wireless/bcm43xx/bcm43xx.h
> > +++ b/drivers/net/wireless/bcm43xx/bcm43xx.h
> > @@ -398,6 +398,9 @@
> >  #define BCM43xx_DEFAULT_SHORT_RETRY_LIMIT	7
> >  #define BCM43xx_DEFAULT_LONG_RETRY_LIMIT	4
> >  
> > +/* Statscounter offsets. */
> > +#define BCM43xx_SC_ACI		0x2E
> > +
> >  /* FIXME: the next line is a guess as to what the maximum RSSI value
> > might be */ #define RX_RSSI_MAX				60
> >  
> > @@ -550,7 +553,11 @@ struct bcm43xx_phyinfo {
> >  	u8 connected:1,
> >  	   calibrated:1,
> >  	   is_locked:1, /* used in bcm43xx_phy_{un}lock() */
> > -	   dyn_tssi_tbl:1; /* used in
> > bcm43xx_phy_init_tssi2dbm_table() */
> > +	   dyn_tssi_tbl:1, /* used in
> > bcm43xx_phy_init_tssi2dbm_table() */
> > +	   g_interfmode:1; /* bit 4000 in PHY_G_CRS, used in periodic
> > tasks */
> > +	u8 g_interfmode_timer; /* how much time ago g_interfmode was
> > unset */
> > +	u16 g_sc_saved; /* used in periodic tasks for ACI */
> > +
> >  	/* LO Measurement Data.
> >  	 * Use bcm43xx_get_lopair() to get a value.
> >  	 */
> > @@ -629,7 +636,9 @@ struct bcm43xx_radioinfo {
> >  	/* ACI (adjacent channel interference) flags. */
> >  	u8 aci_enable:1,
> >  	   aci_wlan_automatic:1,
> > -	   aci_hw_rssi:1;
> > +	   aci_hw_rssi:1,
> > +	   aci_delay:5;
> Should this be a bit field? Why not just make it a u8?

We only need 5 bits, as aci_delay will never be > 20.

> > +	u8 aci_start;
> >  };
> >  
> >  /* Data structures for DMA transmission, per 80211 core. */
> > @@ -699,6 +708,18 @@ struct bcm43xx_noise_calculation {
> >  	s8 samples[8][4];
> >  };
> >  
> > +/* Statscounter data (currently ACI only). */
> > +struct bcm43xx_statscounter_saved {
> > +	u16 aci;
> > +};
> > +
> > +/* Values for ACI moving average calculation. */
> > +struct bcm43xx_aci_saved {
> > +	u16 value[8];
> > +	u8 next:3,
> > +	   set:3;
> As I will explain later, I don't think 'set' is needed. I also recommend
> having 'next' be a plain u8.

Both values will never be > 7.

> > +};
> > +
> >  struct bcm43xx_stats {
> >  	u8 noise;
> >  	struct iw_statistics wstats;
> > @@ -812,6 +833,10 @@ struct bcm43xx_private {
> >  	u32 irq_savedstate;
> >  	/* Link Quality calculation context. */
> >  	struct bcm43xx_noise_calculation noisecalc;
> > +	/* Statscounter tracking. */
> > +	struct bcm43xx_statscounter_saved sc;
> > +	/* ACI tracking. */
> > +	struct bcm43xx_aci_saved aci;
> >  	/* if > 0 MAC is suspended. if == 0 MAC is enabled. */
> >  	int mac_suspended;
> >  
> > diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> > b/drivers/net/wireless/bcm43xx/bcm43xx_main.c index e594af4..27ec519
> > 100644 --- a/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> > +++ b/drivers/net/wireless/bcm43xx/bcm43xx_main.c
> > @@ -3059,6 +3059,44 @@ static void bcm43xx_pcie_mdio_write(stru
> >  	bcm43xx_write32(bcm, BCM43xx_PCIECORE_MDIO_CTL, 0);
> >  }
> >  
> > +/* We don't use any statscounter other than ACI for now */
> > +static u16 bcm43xx_sc_read(struct bcm43xx_private *bcm)
> > +{
> > +	struct bcm43xx_statscounter_saved *sc = &bcm->sc;
> > +	u16 tmp;
> > +
> > +	tmp = bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, 0x80 +
> > BCM43xx_SC_ACI)
> > +		- sc->aci;
> > +	if (tmp)
> > +		sc->aci += tmp;
> > +
> > +	return tmp;
> > +}
> > +
> > +static u16 bcm43xx_aci_moving_average(struct bcm43xx_private *bcm)
> > +{
> > +	struct bcm43xx_aci_saved *aci = &bcm->aci;
> > +
> > +	u8 i;
> > +	u16 avg;
> > +	u32 sum = 0;
> > +
> > +	aci->value[aci->next] = bcm43xx_sc_read(bcm);
> > +	if (unlikely(aci->set < 7))
> > +		aci->set++;
> I don't think the variable aci->set is needed as the divisor is alway 8
> in the calculation of the average below. Any error in the average
> shouldn't be important as it will occur only in the first cycle through
> the value buffer. The for loop below should end at i < 8. There will be
> extra calculations only during the first buffer cycle.

Well, first cycle would last 8 seconds. I think that it's quite relevant.

> > +	for (i = 0; i < aci->set; i++)
> > +		sum += aci->value[i];
> > +	avg = sum / (u16)8;
> Why the cast here? I didn't get any gcc warnings without it. I expect
> this ends up as a shift right anyway.

Right.

> > +	if ((sum % 8) > 3)
> > +		avg++;
> > +	if (aci->next < 7)
> > +		aci->next++;
> > +	else
> > +		aci->next = 0;
> Why not auto-increment aci->next in the line where bcm43xx_sc_read is
> called. Then you only need to test for next > 7 and reset it to zero then.

It looks to be the same thing to me. Anyway, ok, your way is more elegant.


--
Ciao
Stefano


From mb at bu3sch.de  Wed Mar 14 15:17:52 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Mar 2007 15:17:52 +0100
Subject: [RFT] [PATCH] bcm43xx: ACI fixes
In-Reply-To: <20070314074118.466bb9f0@localhost>
References: <20070312010420.353a59c0@localhost> <45F78498.8080608@lwfinger.net>
	<20070314074118.466bb9f0@localhost>
Message-ID: <200703141517.52624.mb@bu3sch.de>

On Wednesday 14 March 2007 07:41, Stefano Brivio wrote:
> > > -	   aci_hw_rssi:1;
> > > +	   aci_hw_rssi:1,
> > > +	   aci_delay:5;
> > Should this be a bit field? Why not just make it a u8?
> 
> We only need 5 bits, as aci_delay will never be > 20.

I actually try to move away from the foo:x notation, as it generates bad code.
There's no benefit in saving 3 bits here and adding 100byte of additional
code, which is generated by gcc to mask and shift the bits. :)

> > > +	u8 aci_start;
> > >  };
> > >  
> > >  /* Data structures for DMA transmission, per 80211 core. */
> > > @@ -699,6 +708,18 @@ struct bcm43xx_noise_calculation {
> > >  	s8 samples[8][4];
> > >  };
> > >  
> > > +/* Statscounter data (currently ACI only). */
> > > +struct bcm43xx_statscounter_saved {
> > > +	u16 aci;
> > > +};
> > > +
> > > +/* Values for ACI moving average calculation. */
> > > +struct bcm43xx_aci_saved {
> > > +	u16 value[8];
> > > +	u8 next:3,
> > > +	   set:3;
> > As I will explain later, I don't think 'set' is needed. I also recommend
> > having 'next' be a plain u8.
> 
> Both values will never be > 7.

Please do u8 nevertheless to get better code.

-- 
Greetings Michael.


From tomas at puga.vdu.lt  Wed Mar 14 15:40:03 2007
From: tomas at puga.vdu.lt (=?UTF-8?B?VG9tYXMgTWFydGnFoWl1cw==?=)
Date: Wed, 14 Mar 2007 16:40:03 +0200
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx softmac
	driver.
In-Reply-To: <45F6D98C.3010908@lwfinger.net>
References: <45F667DA.3060902@puga.vdu.lt> <45F6BF7F.5020603@lwfinger.net>
	<45F6C8C5.3010508@puga.vdu.lt> <45F6D98C.3010908@lwfinger.net>
Message-ID: <45F80943.4030604@puga.vdu.lt>

Larry Finger wrote:
> The firmware only does a small part of the operation - the driver does the rest.
I think'ed firmware does a lot of more....
>  The writers of the
> Windows driver had the cooperation of the hardware designers and knew exactly how the chip would
> respond to a given set of operations. We have had to reverse-engineer the code and try to emulate
> their stuff. Obviously, we don't have it right yet. Considering that 4318's couldn't go above 11M
> until a few weeks ago, we are making progress.
>   
Yes, I know all this story.

One more question. How about such projects as openwrt or dd-wrt?
As I know - on these at least Linksys devices broadcom wireless chipset 
is also used.
I don't know exact version of it, but if linux kernel works on this
device - which driver is used? Your's or some other?
If your's - they somehow forced it to work in "Master" mode?

Sory for my english.

Best regards,

Tomas





From proski at gnu.org  Wed Mar 14 15:46:25 2007
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 14 Mar 2007 10:46:25 -0400
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx
	softmac driver.
In-Reply-To: <45F80943.4030604@puga.vdu.lt>
References: <45F667DA.3060902@puga.vdu.lt> <45F6BF7F.5020603@lwfinger.net>
	<45F6C8C5.3010508@puga.vdu.lt> <45F6D98C.3010908@lwfinger.net>
	<45F80943.4030604@puga.vdu.lt>
Message-ID: <1173883585.21500.33.camel@dv>

On Wed, 2007-03-14 at 16:40 +0200, Tomas Marti?ius wrote:

> One more question. How about such projects as openwrt or dd-wrt?
> As I know - on these at least Linksys devices broadcom wireless chipset 
> is also used.
> I don't know exact version of it, but if linux kernel works on this
> device - which driver is used? Your's or some other?
> If your's - they somehow forced it to work in "Master" mode?

No, it's a closed source driver that was on the original Linksys router.

But I think they could try bcm43xx_mac80211.  There was a recent report
that it's working in master mode.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Wed Mar 14 15:58:33 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 09:58:33 -0500
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx softmac
	driver.
In-Reply-To: <45F80943.4030604@puga.vdu.lt>
References: <45F667DA.3060902@puga.vdu.lt> <45F6BF7F.5020603@lwfinger.net>
	<45F6C8C5.3010508@puga.vdu.lt> <45F6D98C.3010908@lwfinger.net>
	<45F80943.4030604@puga.vdu.lt>
Message-ID: <45F80D99.4080902@lwfinger.net>

Tomas Marti?ius wrote:
> Larry Finger wrote:
>> The firmware only does a small part of the operation - the driver does
>> the rest.
> I think'ed firmware does a lot of more....
>>  The writers of the
>> Windows driver had the cooperation of the hardware designers and knew
>> exactly how the chip would
>> respond to a given set of operations. We have had to reverse-engineer
>> the code and try to emulate
>> their stuff. Obviously, we don't have it right yet. Considering that
>> 4318's couldn't go above 11M
>> until a few weeks ago, we are making progress.
>>   
> Yes, I know all this story.

Your question didn't make it seem that you really understood.
> 
> One more question. How about such projects as openwrt or dd-wrt?
> As I know - on these at least Linksys devices broadcom wireless chipset
> is also used.
> I don't know exact version of it, but if linux kernel works on this
> device - which driver is used? Your's or some other?
> If your's - they somehow forced it to work in "Master" mode?

AFAIK, the openWRT project uses pre-compiled binary drivers for the bcm43xx device from the Linksys
GPL'd source distribution, which is also the piece of code that was decompiled in our
reverse-engineering step. We could use it as well, but we would be limited to 2.4 kernels, have to
run MIPS hardware, and would have tainted kernels.


From mb at bu3sch.de  Wed Mar 14 16:30:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Mar 2007 16:30:47 +0100
Subject: Belkin F5D7001PCI ( also BCM4318 ) not works using bcm43xx
	softmac driver.
In-Reply-To: <1173883585.21500.33.camel@dv>
References: <45F667DA.3060902@puga.vdu.lt> <45F80943.4030604@puga.vdu.lt>
	<1173883585.21500.33.camel@dv>
Message-ID: <200703141630.48041.mb@bu3sch.de>

On Wednesday 14 March 2007 15:46, Pavel Roskin wrote:
> On Wed, 2007-03-14 at 16:40 +0200, Tomas Marti?ius wrote:
> 
> > One more question. How about such projects as openwrt or dd-wrt?
> > As I know - on these at least Linksys devices broadcom wireless chipset 
> > is also used.
> > I don't know exact version of it, but if linux kernel works on this
> > device - which driver is used? Your's or some other?
> > If your's - they somehow forced it to work in "Master" mode?
> 
> No, it's a closed source driver that was on the original Linksys router.
> 
> But I think they could try bcm43xx_mac80211.  There was a recent report
> that it's working in master mode.

bcm43xx-mac80211 and ssb is in openwrt trunk, if you enable the
"broken" config option.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Wed Mar 14 16:32:07 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 10:32:07 -0500
Subject: No subject
Message-ID: <45f81577.+/XXKWDXwOzyP+DA%Larry.Finger@lwfinger.net>

During testing of bcm43xx interference mitigation, two problems were
discovered:

(1) When the MANUALWLAN mode was set, routines _stack_save and _stack_restore
    generated assertions that were traced to saving ILT registers with addresses
    > 0xFFF. This problem was fixed by adding one bit to the field used for
    the offset, and subtracting one bit from the space used for the id.
(2) In MANUALWLAN mode, the IRQ XMIT errors are generated. The cause of these
    errors has not yet been located. Any suggestions on debugging this problem
    would be greatly appreciated.

Larry


Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
@@ -882,10 +882,10 @@ static void _stack_save(u32 *_stackptr, 
 {
 	u32 *stackptr = &(_stackptr[*stackidx]);
 
-	assert((offset & 0xF000) == 0x0000);
-	assert((id & 0xF0) == 0x00);
+	assert((offset & 0xE000) == 0x0000);
+	assert((id & 0xF8) == 0x00);
 	*stackptr = offset;
-	*stackptr |= ((u32)id) << 12;
+	*stackptr |= ((u32)id) << 13;
 	*stackptr |= ((u32)value) << 16;
 	(*stackidx)++;
 	assert(*stackidx < BCM43xx_INTERFSTACK_SIZE);
@@ -896,12 +896,12 @@ static u16 _stack_restore(u32 *stackptr,
 {
 	size_t i;
 
-	assert((offset & 0xF000) == 0x0000);
-	assert((id & 0xF0) == 0x00);
+	assert((offset & 0xE000) == 0x0000);
+	assert((id & 0xF8) == 0x00);
 	for (i = 0; i < BCM43xx_INTERFSTACK_SIZE; i++, stackptr++) {
-		if ((*stackptr & 0x00000FFF) != offset)
+		if ((*stackptr & 0x00001FFF) != offset)
 			continue;
-		if (((*stackptr & 0x0000F000) >> 12) != id)
+		if (((*stackptr & 0x00007000) >> 13) != id)
 			continue;
 		return ((*stackptr & 0xFFFF0000) >> 16);
 	}


From mb at bu3sch.de  Wed Mar 14 16:37:01 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Mar 2007 16:37:01 +0100
Subject: 
In-Reply-To: <45f81577.+/XXKWDXwOzyP+DA%Larry.Finger@lwfinger.net>
References: <45f81577.+/XXKWDXwOzyP+DA%Larry.Finger@lwfinger.net>
Message-ID: <200703141637.02089.mb@bu3sch.de>

On Wednesday 14 March 2007 16:32, Larry Finger wrote:
> During testing of bcm43xx interference mitigation, two problems were
> discovered:
> 
> (1) When the MANUALWLAN mode was set, routines _stack_save and _stack_restore
>     generated assertions that were traced to saving ILT registers with addresses
>     > 0xFFF. This problem was fixed by adding one bit to the field used for
>     the offset, and subtracting one bit from the space used for the id.
> (2) In MANUALWLAN mode, the IRQ XMIT errors are generated. The cause of these
>     errors has not yet been located. Any suggestions on debugging this problem
>     would be greatly appreciated.

Interference mitigation code is broken and has always been. It never worked.
So no wonder it doesn't work now. ;)
I'd suggest to first fix that (by a rewrite) before you do any code
that's based on it (like this ACI stuff).

I won't do it. interf mitigation is an uninterresting feature to me.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Wed Mar 14 17:18:28 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 11:18:28 -0500
Subject: [RFC] Eliminate some 'G Mode Enable' magic numbers
Message-ID: <45f82054.fJi116VPchav9Mns%Larry.Finger@lwfinger.net>

In code manipulating the TM State Low register of 802.11 cores, two
different magic numbers are used to reference the 'G Mode Enable' bit.
One of these, 0x20000000, is clear, but the other, (0x800 << 18), is not.
This patch replaces both types with a defined constant. In addition, two
bits in the TM State High registers are given definitions to help in
following the code.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx.h
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
@@ -277,11 +277,14 @@
 #define BCM43xx_SBTMSTATELOW_REJECT		0x02
 #define BCM43xx_SBTMSTATELOW_CLOCK		0x10000
 #define BCM43xx_SBTMSTATELOW_FORCE_GATE_CLOCK	0x20000
+#define BCM43xx_SBTMSTATELOW_G_MODE_ENABLE	0x20000000
 
 /* sbtmstatehigh state flags */
 #define BCM43xx_SBTMSTATEHIGH_SERROR		0x00000001
 #define BCM43xx_SBTMSTATEHIGH_BUSY		0x00000004
 #define BCM43xx_SBTMSTATEHIGH_TIMEOUT		0x00000020
+#define BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL	0x00010000
+#define BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL	0x00020000
 #define BCM43xx_SBTMSTATEHIGH_COREFLAGS		0x1FFF0000
 #define BCM43xx_SBTMSTATEHIGH_DMA64BIT		0x10000000
 #define BCM43xx_SBTMSTATEHIGH_GATEDCLK		0x20000000
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -168,16 +168,16 @@ int bcm43xx_phy_connect(struct bcm43xx_p
 
 	flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATEHIGH);
 	if (connect) {
-		if (!(flags & 0x00010000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags |= (0x800 << 18);
+		flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	} else {
-		if (!(flags & 0x00020000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags &= ~(0x800 << 18);
+		flags &= ~BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	}
 out:
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1389,7 +1389,7 @@ void bcm43xx_wireless_core_reset(struct 
 				& ~(BCM43xx_SBF_MAC_ENABLED | 0x00000002));
 	} else {
 		if (connect_phy)
-			flags |= 0x20000000;
+			flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_phy_connect(bcm, connect_phy);
 		bcm43xx_core_enable(bcm, flags);
 		bcm43xx_write16(bcm, 0x03E6, 0x0000);
@@ -3662,7 +3662,7 @@ int bcm43xx_select_wireless_core(struct 
 		u32 sbtmstatelow;
 
 		sbtmstatelow = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		sbtmstatelow |= 0x20000000;
+		sbtmstatelow |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, sbtmstatelow);
 	}
 	err = wireless_core_up(bcm, 1);


From nemo3383 at gmail.com  Wed Mar 14 18:34:42 2007
From: nemo3383 at gmail.com (Dustin Souers)
Date: Wed, 14 Mar 2007 13:34:42 -0400
Subject: EAP-FAST or LEAP?
Message-ID: <dfde37650703141034j2fc07101l2e0dc6dbf6db108b@mail.gmail.com>

Can anyone get LEAP or EAP-FAST to work with these drivers? Especially
the bcm4311?

My campus currently uses LEAP, and I have not been able to get my card
to work using wpa_supplicant in Linux. The reason I am asking about
EAP-FAST is that the network administrators are considering on
switching over to EAP-FAST or run both.

I noticed a small issue where I can't set the ssid using iwconfig. It
only takes the first letter of the ssid. Although NetworkManager has
no problem setting the ssid. I did not do that under ndiswrapper. I'll
look more into it after class.

Again thanks for the hard work developers. :)

--Dustin


From linville at tuxdriver.com  Wed Mar 14 20:49:50 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 14 Mar 2007 15:49:50 -0400
Subject: [RFC] Eliminate some 'G Mode Enable' magic numbers
In-Reply-To: <45f82054.fJi116VPchav9Mns%Larry.Finger@lwfinger.net>
References: <45f82054.fJi116VPchav9Mns%Larry.Finger@lwfinger.net>
Message-ID: <20070314194950.GG3372@tuxdriver.com>

On Wed, Mar 14, 2007 at 11:18:28AM -0500, Larry Finger wrote:
> In code manipulating the TM State Low register of 802.11 cores, two
> different magic numbers are used to reference the 'G Mode Enable' bit.
> One of these, 0x20000000, is clear, but the other, (0x800 << 18), is not.
> This patch replaces both types with a defined constant. In addition, two
> bits in the TM State High registers are given definitions to help in
> following the code.

Looks reasonable to me -- not sure why this is an RFC?  Does anyone
object?

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Wed Mar 14 21:04:22 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 15:04:22 -0500
Subject: [RFC] Eliminate some 'G Mode Enable' magic numbers
In-Reply-To: <20070314194950.GG3372@tuxdriver.com>
References: <45f82054.fJi116VPchav9Mns%Larry.Finger@lwfinger.net>
	<20070314194950.GG3372@tuxdriver.com>
Message-ID: <45F85546.1010902@lwfinger.net>

John W. Linville wrote:
> On Wed, Mar 14, 2007 at 11:18:28AM -0500, Larry Finger wrote:
>> In code manipulating the TM State Low register of 802.11 cores, two
>> different magic numbers are used to reference the 'G Mode Enable' bit.
>> One of these, 0x20000000, is clear, but the other, (0x800 << 18), is not.
>> This patch replaces both types with a defined constant. In addition, two
>> bits in the TM State High registers are given definitions to help in
>> following the code.
> 
> Looks reasonable to me -- not sure why this is an RFC?  Does anyone
> object?

Not so far. I'll make it a proper patch.

Larry


From Larry.Finger at lwfinger.net  Wed Mar 14 21:06:22 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Mar 2007 15:06:22 -0500
Subject: [PATCH] bcm43xx:Eliminate some 'G Mode Enable' magic numbers
Message-ID: <45f855be.d6q3Pv+rtlMA4ojm%Larry.Finger@lwfinger.net>

In code manipulating the TM State Low register of 802.11 cores, two
different magic numbers are used to reference the 'G Mode Enable' bit.
One of these, 0x20000000, is clear, but the other, (0x800 << 18), is not.
This patch replaces both types with a defined constant. In addition, two
bits in the TM State High registers are given definitions to help in
following the code.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx.h
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx.h
@@ -277,11 +277,14 @@
 #define BCM43xx_SBTMSTATELOW_REJECT		0x02
 #define BCM43xx_SBTMSTATELOW_CLOCK		0x10000
 #define BCM43xx_SBTMSTATELOW_FORCE_GATE_CLOCK	0x20000
+#define BCM43xx_SBTMSTATELOW_G_MODE_ENABLE	0x20000000
 
 /* sbtmstatehigh state flags */
 #define BCM43xx_SBTMSTATEHIGH_SERROR		0x00000001
 #define BCM43xx_SBTMSTATEHIGH_BUSY		0x00000004
 #define BCM43xx_SBTMSTATEHIGH_TIMEOUT		0x00000020
+#define BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL	0x00010000
+#define BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL	0x00020000
 #define BCM43xx_SBTMSTATEHIGH_COREFLAGS		0x1FFF0000
 #define BCM43xx_SBTMSTATEHIGH_DMA64BIT		0x10000000
 #define BCM43xx_SBTMSTATEHIGH_GATEDCLK		0x20000000
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -168,16 +168,16 @@ int bcm43xx_phy_connect(struct bcm43xx_p
 
 	flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATEHIGH);
 	if (connect) {
-		if (!(flags & 0x00010000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_G_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags |= (0x800 << 18);
+		flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	} else {
-		if (!(flags & 0x00020000))
+		if (!(flags & BCM43xx_SBTMSTATEHIGH_A_PHY_AVAIL))
 			return -ENODEV;
 		flags = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		flags &= ~(0x800 << 18);
+		flags &= ~BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, flags);
 	}
 out:
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_main.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_main.c
@@ -1389,7 +1389,7 @@ void bcm43xx_wireless_core_reset(struct 
 				& ~(BCM43xx_SBF_MAC_ENABLED | 0x00000002));
 	} else {
 		if (connect_phy)
-			flags |= 0x20000000;
+			flags |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_phy_connect(bcm, connect_phy);
 		bcm43xx_core_enable(bcm, flags);
 		bcm43xx_write16(bcm, 0x03E6, 0x0000);
@@ -3662,7 +3662,7 @@ int bcm43xx_select_wireless_core(struct 
 		u32 sbtmstatelow;
 
 		sbtmstatelow = bcm43xx_read32(bcm, BCM43xx_CIR_SBTMSTATELOW);
-		sbtmstatelow |= 0x20000000;
+		sbtmstatelow |= BCM43xx_SBTMSTATELOW_G_MODE_ENABLE;
 		bcm43xx_write32(bcm, BCM43xx_CIR_SBTMSTATELOW, sbtmstatelow);
 	}
 	err = wireless_core_up(bcm, 1);


From will.dyson at gmail.com  Thu Mar 15 06:09:43 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 15 Mar 2007 01:09:43 -0400
Subject: Assertion failed in bcm43xx_mac80211
Message-ID: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>

Hi,

I've been testing the mac80211 version of bcm43xx from the
wireless-dev tree (up to date as of this email). I get assertions when
I try to scan or associate.

I'm running x86_64 kernel and userspace. Lspci info is attached. So is
a full dmesg log of booting wireless-dev, scanning and shutting down.

The assertion I'm getting is this:

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1012:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1015:parse_cookie()

I spent some time looking into the problem this afternoon. My first
idea, that it was generating bad cookies in generate_cookie(), turned
out to be wrong. Instead, the cookie is 0 in the txstatus path of
dma_rx(). dma_rx() checks for the cookie==0 condition and waits up to
200usecs for it to change, but it never does. I experimented a bit
with waiting longer (up to 1000 cycles of the wait loop), but this did
not help.

With the following (lame) debugging patch applied, I can see that
correct cookies are being generated, and that at least one member
field of the hwtxstatus is being se to a non-zero valuet. Results are
after the patch.

I'm a bit lost as to where to look after this.  I note that
setup_rx_descbuffer() explicitly sets cookie=0, but that must be
intentional right?

Also, I'm not familiar with DMA programming, but if my understanding
the dma api is correct, the device is not supposed to be messing with
the dma buffer after sync_descbuffer_for_cpu() is called. Doesn't that
mean that the whole idea of waiting for the cookie to no longer be 0
is wrong?


diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d53679d..cfbf84f 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -974,10 +974,15 @@ static u16 generate_cookie(struct bcm43xx_dmaring *ring,
 	case 5:
 		cookie = 0xF000;
 		break;
+	default:
+		dprintk(KERN_ERR PFX "DMA gencookie: crazy ring->index: %d\n", ring->index);
+		assert(0);
 	}
 	assert(((u16)slot & 0xF000) == 0x0000);
 	cookie |= (u16)slot;

+	dprintk(KERN_ERR PFX "DMA gencookie: cookie is %hX\n", cookie);
+
 	return cookie;
 }

@@ -1009,6 +1014,7 @@ struct bcm43xx_dmaring * parse_cookie(struct
bcm43xx_wldev *dev,
 		ring = dma->tx_ring5;
 		break;
 	default:
+		dprintk(KERN_ERR PFX "DMA parsecookie: cookie was: %hX\n", cookie);
 		assert(0);
 	}
 	*slot = (cookie & 0x0FFF);
@@ -1191,6 +1197,10 @@ static void dma_rx(struct bcm43xx_dmaring *ring,
 			udelay(2);
 			barrier();
 		}
+
+		assert(hw->cookie != 0);
+		dprintkl(KERN_ERR PFX "DMA RX xmit status: i is %d\n", i);
+		dprintkl(KERN_ERR PFX "DMA RX hw->seq is: %hX\n",  le16_to_cpu(hw->seq) );
 		bcm43xx_handle_hwtxstatus(ring->dev, hw);
 		/* recycle the descriptor buffer. */
 		sync_descbuffer_for_device(ring, meta->dmaaddr, ring->rx_buffersize);


ACPI: PCI Interrupt 0000:02:07.0[A] -> Link [APC2] -> GSI 17 (level,
low) -> IRQ 17

ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0

bcm43xx_mac80211: Broadcom 4306 WLAN found

bcm43xx_mac80211: Radio turned off

bcm43xx_mac80211: Adding Interface type 2

bcm43xx_mac80211: Found PHY: Analog 1, Type 2, Revision 1

bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2

bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
failed. (cur=0, tgt=62). Disabling TX power adjustment.

bcm43xx_mac80211: Radio turned on

bcm43xx_mac80211: Radio enabled by hardware

bcm43xx_mac80211: Chip initialized

bcm43xx_mac80211: 30-bit DMA initialized

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727

bcm43xx_mac80211: Wireless interface started

bcm43xx_mac80211: DMA gencookie: cookie is B000

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA RX xmit status: i is 101

bcm43xx_mac80211: DMA RX hw->seq is: 6220

bcm43xx_mac80211: DMA gencookie: cookie is B002

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA RX xmit status: i is 101

bcm43xx_mac80211: DMA RX hw->seq is: 40

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B004

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA RX xmit status: i is 101

bcm43xx_mac80211: DMA RX hw->seq is: 0

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B006

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA RX xmit status: i is 101

bcm43xx_mac80211: DMA RX hw->seq is: C4

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B008

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA RX xmit status: i is 101

bcm43xx_mac80211: DMA RX hw->seq is: 0

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B00A

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B00C

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B00E

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B010

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B012

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: DMA gencookie: cookie is B014

bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()

bcm43xx_mac80211: DMA parsecookie: cookie was: 0

bcm43xx_mac80211: ASSERTION FAILED (0) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()

bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot <
ring->nr_slots) at:
drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()

bcm43xx_mac80211: Removing Interface type 2

bcm43xx_mac80211: Wireless interface stopped

bcm43xx_mac80211: DMA-32 0x0260 (RX) max used slots: 1/64

bcm43xx_mac80211: DMA-32 0x0200 (RX) max used slots: 1/64

bcm43xx_mac80211: DMA-32 0x02A0 (TX) max used slots: 0/128

bcm43xx_mac80211: DMA-32 0x0280 (TX) max used slots: 0/128

bcm43xx_mac80211: DMA-32 0x0260 (TX) max used slots: 0/128

bcm43xx_mac80211: DMA-32 0x0240 (TX) max used slots: 0/128

bcm43xx_mac80211: DMA-32 0x0220 (TX) max used slots: 22/128

bcm43xx_mac80211: DMA-32 0x0200 (TX) max used slots: 0/128

bcm43xx_mac80211: Radio turned off

bcm43xx_mac80211: Radio turned off


-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting
-------------- next part --------------
00:00.0 Host bridge: nVidia Corporation nForce3 250Gb Host Bridge (rev a1)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0
	Region 0: Memory at <ignored> (32-bit, prefetchable)
	Capabilities: [44] HyperTransport: Slave or Primary Interface
		Command: BaseUnitID=0 UnitCnt=14 MastHost- DefDir- DUL-
		Link Control 0: CFlE+ CST- CFE- <LkFail- Init+ EOC- TXO- <CRCErr=0 IsocEn- LSEn- ExtCTL- 64b-
		Link Config 0: MLWI=16bit DwFcIn- MLWO=16bit DwFcOut- LWI=16bit DwFcInEn- LWO=16bit DwFcOutEn-
		Link Control 1: CFlE- CST- CFE- <LkFail+ Init- EOC+ TXO+ <CRCErr=0 IsocEn- LSEn- ExtCTL- 64b-
		Link Config 1: MLWI=8bit DwFcIn- MLWO=8bit DwFcOut- LWI=8bit DwFcInEn- LWO=8bit DwFcOutEn-
		Revision ID: 1.03
		Link Frequency 0: 1.0GHz
		Link Error 0: <Prot- <Ovfl- <EOC- CTLTm-
		Link Frequency Capability 0: 200MHz+ 300MHz+ 400MHz+ 500MHz+ 600MHz+ 800MHz+ 1.0GHz- 1.2GHz- 1.4GHz- 1.6GHz- Vend-
		Feature Capability: IsocFC+ LDTSTOP+ CRCTM- ECTLT- 64bA- UIDRD-
		Link Frequency 1: 200MHz
		Link Error 1: <Prot- <Ovfl- <EOC- CTLTm-
		Link Frequency Capability 1: 200MHz- 300MHz- 400MHz- 500MHz- 600MHz- 800MHz- 1.0GHz- 1.2GHz- 1.4GHz- 1.6GHz- Vend-
		Error Handling: PFlE- OFlE- PFE- OFE- EOCFE- RFE- CRCFE- SERRFE- CF- RE- PNFE- ONFE- EOCNFE- RNFE- CRCNFE- SERRNFE-
		Prefetchable memory behind bridge Upper: 00-00
		Bus Number: 00
	Capabilities: [c0] AGP version 3.0
		Status: RQ=32 Iso- ArqSz=2 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW- AGP3+ Rate=x4,x8
		Command: RQ=1 ArqSz=0 Cal=0 SBA+ AGP+ GART64- 64bit- FW- Rate=x4

00:01.0 ISA bridge: nVidia Corporation nForce3 250Gb LPC Bridge (rev a2)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem+ BusMaster+ SpecCycle+ MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0

00:01.1 SMBus: nVidia Corporation nForce 250Gb PCI System Management (rev a1)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Interrupt: pin A routed to IRQ 11
	Region 0: I/O ports at fc00 [size=32]
	Region 4: I/O ports at 4c00 [size=64]
	Region 5: I/O ports at 4c40 [size=64]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:02.0 USB Controller: nVidia Corporation CK8S USB Controller (rev a1) (prog-if 10 [OHCI])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Interrupt: pin A routed to IRQ 23
	Region 0: Memory at fe02f000 (32-bit, non-prefetchable) [size=4K]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:02.1 USB Controller: nVidia Corporation CK8S USB Controller (rev a1) (prog-if 10 [OHCI])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Interrupt: pin B routed to IRQ 22
	Region 0: Memory at fe02e000 (32-bit, non-prefetchable) [size=4K]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:02.2 USB Controller: nVidia Corporation nForce3 EHCI USB 2.0 Controller (rev a2) (prog-if 20 [EHCI])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Interrupt: pin C routed to IRQ 20
	Region 0: Memory at fe02d000 (32-bit, non-prefetchable) [size=256]
	Capabilities: [44] Debug port
	Capabilities: [80] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME+

00:05.0 Bridge: nVidia Corporation CK8S Ethernet Controller (rev a2)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (250ns min, 5000ns max)
	Interrupt: pin A routed to IRQ 23
	Region 0: Memory at fe02c000 (32-bit, non-prefetchable) [size=4K]
	Region 1: I/O ports at f000 [size=8]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:06.0 Multimedia audio controller: nVidia Corporation nForce3 250Gb AC'97 Audio Controller (rev a1)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 7585
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (500ns min, 1250ns max)
	Interrupt: pin A routed to IRQ 21
	Region 0: I/O ports at ec00 [size=256]
	Region 1: I/O ports at e800 [size=128]
	Region 2: Memory at fe02b000 (32-bit, non-prefetchable) [size=4K]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:08.0 IDE interface: nVidia Corporation CK8S Parallel ATA Controller (v2.5) (rev a2) (prog-if 8a [Master SecP PriP])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Region 0: [virtual] Memory at 000001f0 (32-bit, non-prefetchable) [disabled] [size=8]
	Region 1: [virtual] Memory at 000003f0 (type 3, non-prefetchable) [disabled] [size=1]
	Region 2: [virtual] Memory at 00000170 (32-bit, non-prefetchable) [disabled] [size=8]
	Region 3: [virtual] Memory at 00000370 (type 3, non-prefetchable) [disabled] [size=1]
	Region 4: I/O ports at dc00 [size=16]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:09.0 IDE interface: nVidia Corporation CK8S Serial ATA Controller (v2.5) (rev a2) (prog-if 85 [Master SecO PriO])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Interrupt: pin A routed to IRQ 22
	Region 0: I/O ports at 09e0 [size=8]
	Region 1: I/O ports at 0be0 [size=4]
	Region 2: I/O ports at 0960 [size=8]
	Region 3: I/O ports at 0b60 [size=4]
	Region 4: I/O ports at c800 [size=16]
	Region 5: I/O ports at c400 [size=128]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:0a.0 IDE interface: nVidia Corporation CK8S Serial ATA Controller (v2.5) (rev a2) (prog-if 85 [Master SecO PriO])
	Subsystem: Micro-Star International Co., Ltd. Unknown device 0250
	Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 0 (750ns min, 250ns max)
	Interrupt: pin A routed to IRQ 21
	Region 0: I/O ports at 09f0 [size=8]
	Region 1: I/O ports at 0bf0 [size=4]
	Region 2: I/O ports at 0970 [size=8]
	Region 3: I/O ports at 0b70 [size=4]
	Region 4: I/O ports at b000 [size=16]
	Region 5: I/O ports at ac00 [size=128]
	Capabilities: [44] Power Management version 2
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

00:0b.0 PCI bridge: nVidia Corporation nForce3 250Gb AGP Host to PCI Bridge (rev a2) (prog-if 00 [Normal decode])
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap- 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 16
	Bus: primary=00, secondary=01, subordinate=01, sec-latency=10
	I/O behind bridge: 00009000-00009fff
	Memory behind bridge: fdf00000-fdffffff
	Prefetchable memory behind bridge: e0000000-efffffff
	Secondary status: 66MHz+ FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- <SERR- <PERR-
	BridgeCtl: Parity- SERR- NoISA+ VGA+ MAbort- >Reset- FastB2B-

00:0e.0 PCI bridge: nVidia Corporation nForce3 250Gb PCI-to-PCI Bridge (rev a2) (prog-if 00 [Normal decode])
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR+ FastB2B-
	Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR+ <PERR-
	Latency: 0
	Bus: primary=00, secondary=02, subordinate=02, sec-latency=128
	I/O behind bridge: 00008000-00008fff
	Memory behind bridge: fde00000-fdefffff
	Prefetchable memory behind bridge: fdd00000-fddfffff
	Secondary status: 66MHz- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort+ <MAbort+ <SERR- <PERR-
	BridgeCtl: Parity- SERR- NoISA+ VGA- MAbort- >Reset- FastB2B-

00:18.0 Host bridge: Advanced Micro Devices [AMD] K8 [Athlon64/Opteron] HyperTransport Technology Configuration
	Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Capabilities: [80] HyperTransport: Host or Secondary Interface
		!!! Possibly incomplete decoding
		Command: WarmRst+ DblEnd-
		Link Control: CFlE- CST- CFE- <LkFail- Init+ EOC- TXO- <CRCErr=0
		Link Config: MLWI=16bit MLWO=16bit LWI=16bit LWO=16bit
		Revision ID: 1.02

00:18.1 Host bridge: Advanced Micro Devices [AMD] K8 [Athlon64/Opteron] Address Map
	Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-

00:18.2 Host bridge: Advanced Micro Devices [AMD] K8 [Athlon64/Opteron] DRAM Controller
	Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-

00:18.3 Host bridge: Advanced Micro Devices [AMD] K8 [Athlon64/Opteron] Miscellaneous Control
	Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-

01:00.0 VGA compatible controller: ATI Technologies Inc RV280 [Radeon 9200] (rev 01) (prog-if 00 [VGA])
	Subsystem: C.P. Technology Co. Ltd Unknown device 2063
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32 (2000ns min), Cache Line Size: 32 bytes
	Interrupt: pin A routed to IRQ 16
	Region 0: Memory at e8000000 (32-bit, prefetchable) [size=128M]
	Region 1: I/O ports at 9c00 [size=256]
	Region 2: Memory at fdff0000 (32-bit, non-prefetchable) [size=64K]
	[virtual] Expansion ROM at fdf00000 [disabled] [size=128K]
	Capabilities: [58] AGP version 3.0
		Status: RQ=256 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3+ Rate=x4,x8
		Command: RQ=32 ArqSz=2 Cal=0 SBA+ AGP+ GART64- 64bit- FW- Rate=x4
	Capabilities: [50] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

01:00.1 Display controller: ATI Technologies Inc RV280 [Radeon 9200] (Secondary) (rev 01)
	Subsystem: C.P. Technology Co. Ltd Unknown device 2062
	Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Region 0: Memory at e0000000 (32-bit, prefetchable) [disabled] [size=128M]
	Region 1: Memory at fdfe0000 (32-bit, non-prefetchable) [disabled] [size=64K]
	Capabilities: [50] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

02:07.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller (rev 02)
	Subsystem: Linksys Unknown device 0013
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort+ <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32
	Interrupt: pin A routed to IRQ 17
	Region 0: Memory at fdefc000 (32-bit, non-prefetchable) [size=8K]
	Capabilities: [40] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=2 PME-

02:0a.0 Multimedia audio controller: Creative Labs SB Live! EMU10k1 (rev 05)
	Subsystem: Creative Labs CT4850 SBLive! Value
	Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32 (500ns min, 5000ns max)
	Interrupt: pin A routed to IRQ 17
	Region 0: I/O ports at 8c00 [size=32]
	Capabilities: [dc] Power Management version 1
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

02:0a.1 Input device controller: Creative Labs SB Live! Game Port (rev 05)
	Subsystem: Creative Labs Gameport Joystick
	Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32
	Region 0: I/O ports at 8800 [size=8]
	Capabilities: [dc] Power Management version 1
		Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0-,D1-,D2-,D3hot-,D3cold-)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

02:0c.0 FireWire (IEEE 1394): VIA Technologies, Inc. IEEE 1394 Host Controller (rev 46) (prog-if 10 [OHCI])
	Subsystem: Unknown device 0574:086c
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping+ SERR- FastB2B-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32, Cache Line Size: 32 bytes
	Interrupt: pin A routed to IRQ 19
	Region 0: Memory at fdeff000 (32-bit, non-prefetchable) [size=2K]
	Region 1: I/O ports at 8400 [size=128]
	Capabilities: [50] Power Management version 2
		Flags: PMEClk- DSI- D1- D2+ AuxCurrent=0mA PME(D0-,D1-,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-

02:0d.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL-8169 Gigabit Ethernet (rev 10)
	Subsystem: Micro-Star International Co., Ltd. Unknown device 025c
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV+ VGASnoop- ParErr- Stepping- SERR- FastB2B-
	Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
	Latency: 32 (8000ns min, 16000ns max), Cache Line Size: 64 bytes
	Interrupt: pin A routed to IRQ 16
	Region 0: I/O ports at 8000 [size=256]
	Region 1: Memory at fdefe000 (32-bit, non-prefetchable) [size=256]
	[virtual] Expansion ROM at fdd00000 [disabled] [size=128K]
	Capabilities: [dc] Power Management version 2
		Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0-,D1+,D2+,D3hot+,D3cold+)
		Status: D0 PME-Enable- DSel=0 DScale=0 PME-
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bcm_asserts_dma
Type: application/octet-stream
Size: 27367 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070315/860032fa/attachment.obj>

From mb at bu3sch.de  Thu Mar 15 14:41:02 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Mar 2007 14:41:02 +0100
Subject: Assertion failed in bcm43xx_mac80211
In-Reply-To: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>
References: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>
Message-ID: <200703151441.03054.mb@bu3sch.de>

On Thursday 15 March 2007 06:09, Will Dyson wrote:
> ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0
> 
> bcm43xx_mac80211: Broadcom 4306 WLAN found

Please also turn on ssb debugging.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Mar 15 16:08:18 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Mar 2007 16:08:18 +0100
Subject: Please pull http://bu3sch.de/git/wireless-dev.git for-linville
Message-ID: <200703151608.19112.mb@bu3sch.de>

The following changes since commit 4533da881f2d8c3e0dbb5b3dbc7a919e12438a8a:
  Andrew Morton:
        b44 warning fixes

are found in the git repository at:

  http://bu3sch.de/git/wireless-dev.git for-linville

Michael Buesch:
      ssb-ohci: Completely disable the driver on non-embedded systems
      ssb: Move and rename some files.
      ssb: Don't freeze unregistered devices.
      bcm43xx-mac80211: Rewrite of the LO feedthrough measuring statemachine.
      bcm43xx-mac80211: More LO fixes.
      Merge branch 'master' of git://git.kernel.org/.../linville/wireless-dev
      bcm43xx-mac80211: Select SSB_DEBUG if bcm43xx debugging is enabled.

 drivers/net/wireless/mac80211/bcm43xx/Kconfig      |    1 
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx.h    |    5 
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.c |  702 +++++++------
 drivers/net/wireless/mac80211/bcm43xx/bcm43xx_lo.h |   29 -
 .../net/wireless/mac80211/bcm43xx/bcm43xx_main.c   |    9 
 .../net/wireless/mac80211/bcm43xx/bcm43xx_phy.c    |  107 +-
 .../net/wireless/mac80211/bcm43xx/bcm43xx_phy.h    |    6 
 drivers/ssb/Makefile                               |   17 
 drivers/ssb/core.c                                 | 1038 --------------------
 drivers/ssb/driver_chipcommon.c                    |  402 ++++++++
 drivers/ssb/driver_chipcommon/chipcommon.c         |  402 --------
 drivers/ssb/driver_mips/mips.c                     |  258 -----
 drivers/ssb/driver_mipscore.c                      |  258 +++++
 drivers/ssb/driver_pci/pcicore.c                   |  556 -----------
 drivers/ssb/driver_pcicore.c                       |  556 +++++++++++
 drivers/ssb/main.c                                 | 1042 ++++++++++++++++++++
 drivers/usb/host/Kconfig                           |   11 
 drivers/usb/host/ohci-ssb.c                        |    9 
 18 files changed, 2731 insertions(+), 2677 deletions(-)
 delete mode 100644 drivers/ssb/core.c
 create mode 100644 drivers/ssb/driver_chipcommon.c
 delete mode 100644 drivers/ssb/driver_chipcommon/chipcommon.c
 delete mode 100644 drivers/ssb/driver_mips/mips.c
 create mode 100644 drivers/ssb/driver_mipscore.c
 delete mode 100644 drivers/ssb/driver_pci/pcicore.c
 create mode 100644 drivers/ssb/driver_pcicore.c
 create mode 100644 drivers/ssb/main.c

-- 
Greetings Michael.


From will.dyson at gmail.com  Fri Mar 16 00:58:02 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 15 Mar 2007 19:58:02 -0400
Subject: Assertion failed in bcm43xx_mac80211
In-Reply-To: <200703151441.03054.mb@bu3sch.de>
References: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>
	<200703151441.03054.mb@bu3sch.de>
Message-ID: <8e6f94720703151658x66a4b24bxcbdbb1f463a1ad2@mail.gmail.com>

On 3/15/07, Michael Buesch <mb at bu3sch.de> wrote:
> On Thursday 15 March 2007 06:09, Will Dyson wrote:
> > ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0
> >
> > bcm43xx_mac80211: Broadcom 4306 WLAN found
>
> Please also turn on ssb debugging.


How silly of me to forget. New log attached, although I doubt you will
find it much more enlightening.

I also tried turning on the iommu debugging option and leak tracer. It
doesn't find any leaks, but it does cause the card to throw a DMA
error. log of this is also attached.

-- 
Will Dyson
-------------- next part --------------
Command line: root=/dev/sda2 ro console=ttyS0,115200n8r console=tty0 single iommu=off
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009f800 (usable)
 BIOS-e820: 000000000009f800 - 00000000000a0000 (reserved)
 BIOS-e820: 00000000000f0000 - 0000000000100000 (reserved)
 BIOS-e820: 0000000000100000 - 00000000bfff0000 (usable)
 BIOS-e820: 00000000bfff0000 - 00000000bfff3000 (ACPI NVS)
 BIOS-e820: 00000000bfff3000 - 00000000c0000000 (ACPI data)
 BIOS-e820: 00000000fec00000 - 0000000100000000 (reserved)
end_pfn_map = 1048576
DMI 2.2 present.
ACPI: RSDP 000F8FA0, 0014 (r0 Nvidia)
ACPI: RSDT BFFF3040, 0034 (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
ACPI: FACP BFFF30C0, 0074 (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
ACPI: DSDT BFFF3180, 48C1 (r1 NVIDIA AWRDACPI     1000 MSFT  100000E)
ACPI: FACS BFFF0000, 0040
ACPI: SSDT BFFF7B80, 00B5 (r1 PTLTD  POWERNOW        1  LTP        1)
ACPI: SRAT BFFF7C80, 0090 (r1 AMD    HAMMER          1 AMD         1)
ACPI: APIC BFFF7AC0, 007C (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
Zone PFN ranges:
  DMA             0 ->     4096
  DMA32        4096 ->  1048576
  Normal    1048576 ->  1048576
early_node_map[2] active PFN ranges
    0:        0 ->      159
    0:      256 ->   786416
Nvidia board detected. Ignoring ACPI timer override.
If you got timer trouble try acpi_use_timer_override
ACPI: PM-Timer IO Port: 0x4008
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
Processor #0 (Bootup-CPU)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] disabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 2, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: BIOS IRQ0 pin2 override ignored.
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: INT_SRC_OVR (bus 0 bus_irq 14 global_irq 14 high edge)
ACPI: INT_SRC_OVR (bus 0 bus_irq 15 global_irq 15 high edge)
Setting APIC routing to flat
Using ACPI (MADT) for SMP configuration information
Nosave address range: 000000000009f000 - 00000000000a0000
Nosave address range: 00000000000a0000 - 00000000000f0000
Nosave address range: 00000000000f0000 - 0000000000100000
Allocating PCI resources starting at c4000000 (gap: c0000000:3ec00000)
Built 1 zonelists.  Total pages: 774086
Kernel command line: root=/dev/sda2 ro console=ttyS0,115200n8r console=tty0 single iommu=off
Initializing CPU#0
PID hash table entries: 4096 (order: 12, 32768 bytes)
time.c: Detected 1808.832 MHz processor.
Console: colour VGA+ 80x25
Dentry cache hash table entries: 524288 (order: 10, 4194304 bytes)
Inode-cache hash table entries: 262144 (order: 9, 2097152 bytes)
Checking aperture...
CPU 0: aperture @ f0000000 size 128 MB
Memory: 3089748k/3145664k available (3436k kernel code, 55200k reserved, 1739k data, 192k init)
Calibrating delay using timer specific routine.. 3618.66 BogoMIPS (lpj=1809332)
Mount-cache hash table entries: 256
CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K (64 bytes/line)
CPU: L2 Cache: 512K (64 bytes/line)
CPU: AMD Athlon(tm) 64 Processor 3000+ stepping 00
ACPI: Core revision 20070126
Using local APIC timer interrupts.
result 12561339
Detected 12.561 MHz APIC timer.
testing NMI watchdog ... OK.
NET: Registered protocol family 16
No dock devices found.
ACPI: bus type pci registered
PCI: Using configuration type 1
ACPI: Interpreter enabled
ACPI: (supports S0 S1 S4 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: PCI Root Bridge [PCI0] (0000:00)
0000:00:08.0: cannot adjust BAR0 (not I/O)
0000:00:08.0: cannot adjust BAR1 (not I/O)
0000:00:08.0: cannot adjust BAR2 (not I/O)
0000:00:08.0: cannot adjust BAR3 (not I/O)
ACPI: PCI Interrupt Link [LNK1] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LNK2] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNK3] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LNK4] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNK5] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LUBA] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LUBB] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LMAC] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LAPU] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LACI] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LMCI] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LSMB] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LUB2] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LFIR] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [L3CM] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LIDE] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LSID] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LFID] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [APC1] (IRQs 16) *0
ACPI: PCI Interrupt Link [APC2] (IRQs 17) *0
ACPI: PCI Interrupt Link [APC3] (IRQs 18) *0, disabled.
ACPI: PCI Interrupt Link [APC4] (IRQs 19) *0
ACPI: PCI Interrupt Link [APC5] (IRQs *16)
ACPI: PCI Interrupt Link [APCF] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCG] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCH] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCI] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APCJ] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCK] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCS] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCL] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCM] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [AP3C] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APCZ] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APSI] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APSJ] (IRQs 20 21 22 23) *0
ACPI: Power Resource [ISAV] (on)
Linux Plug and Play Support v0.97 (c) Adam Belay
pnp: PnP ACPI init
pnp: PnP ACPI: found 12 devices
Generic PHY: Registered new driver
SCSI subsystem initialized
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
PCI: If a device doesn't work, try "pci=routeirq".  If it helps, post a report
PCI: Cannot allocate resource region 0 of device 0000:00:00.0
agpgart: Detected AGP bridge 0
agpgart: Setting up Nforce3 AGP.
agpgart: AGP aperture is 128M @ 0xf0000000
pnp: 00:00: ioport range 0x4000-0x407f has been reserved
Time: tsc clocksource has been installed.
pnp: 00:00: ioport range 0x4080-0x40ff has been reserved
pnp: 00:00: ioport range 0x4400-0x447f has been reserved
pnp: 00:00: ioport range 0x4480-0x44ff has been reserved
pnp: 00:00: ioport range 0x4800-0x487f has been reserved
pnp: 00:00: ioport range 0x4880-0x48ff has been reserved
pnp: 00:01: iomem range 0xd0000-0xd3fff has been reserved
pnp: 00:01: iomem range 0xd5000-0xd7fff has been reserved
pnp: 00:01: iomem range 0xf0000-0xfbfff could not be reserved
pnp: 00:01: iomem range 0xfc000-0xfffff could not be reserved
ACPI: PCI Interrupt Link [APC4] enabled at IRQ 19
ACPI: PCI Interrupt 0000:02:0c.0[A] -> Link [APC4] -> GSI 19 (level, low) -> IRQ 19
ohci1394: fw-host0: OHCI-1394 1.0 (PCI): IRQ=[19]  MMIO=[fdeff000-fdeff7ff]  Max Packet=[2048]  IR/IT contexts=[4/8]
PCI: Bridge: 0000:00:0b.0
  IO window: 9000-9fff
  MEM window: fdf00000-fdffffff
  PREFETCH window: e0000000-efffffff
PCI: Bridge: 0000:00:0e.0
  IO window: 8000-8fff
  MEM window: fde00000-fdefffff
  PREFETCH window: fdd00000-fddfffff
NET: Registered protocol family 2
IP route cache hash table entries: 131072 (order: 8, 1048576 bytes)
TCP established hash table entries: 262144 (order: 10, 4194304 bytes)
TCP bind hash table entries: 65536 (order: 7, 524288 bytes)
TCP: Hash tables configured (established 262144 bind 65536)
TCP reno registered
Total HugeTLB memory allocated, 0
fuse init (API version 7.8)
io scheduler noop registered
io scheduler anticipatory registered (default)
io scheduler cfq registered
ACPI: PCI Interrupt Link [APC1] enabled at IRQ 16
ACPI: PCI Interrupt 0000:01:00.0[A] -> Link [APC1] -> GSI 16 (level, low) -> IRQ 16
radeonfb: Found Intel x86 BIOS ROM Image
radeonfb: Retrieved PLL infos from BIOS
radeonfb: Reference=27.00 MHz (RefDiv=12) Memory=250.00 Mhz, System=200.00 MHz
radeonfb: PLL min 20000 max 40000
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
radeonfb: Monitor 1 type DFP found
radeonfb: EDID probed
radeonfb: Monitor 2 type no found
Console: switching to colour frame buffer device 160x64
mtrr: base(0xe8000000) is not aligned on a size(0x10000000) boundary
radeonfb (0000:01:00.0): ATI Radeon Ya 
input: Power Button (FF) as /class/input/input0
ACPI: Power Button (FF) [PWRF]
input: Power Button (CM) as /class/input/input1
ACPI: Power Button (CM) [PWRB]
Real Time Clock Driver v1.12ac
Linux agpgart interface v0.102 (c) Dave Jones
[drm] Initialized drm 1.1.0 20060810
[drm] Initialized radeon 1.25.0 20060524 on minor 0
Serial: 8250/16550 driver $Revision: 1.90 $ 4 ports, IRQ sharing disabled
serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
00:09: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
loop: loaded (max 8 devices)
Marvell 88E1101: Registered new driver
Marvell 88E1111: Registered new driver
Marvell 88E1145: Registered new driver
QS6612: Registered new driver
forcedeth.c: Reverse Engineered nForce ethernet driver. Version 0.60.
ACPI: PCI Interrupt Link [APCH] enabled at IRQ 23
ACPI: PCI Interrupt 0000:00:05.0[A] -> Link [APCH] -> GSI 23 (level, high) -> IRQ 23
eth0: forcedeth.c: subsystem: 01462:0250 bound to 0000:00:05.0
tun: Universal TUN/TAP device driver, 1.6
tun: (C) 1999-2004 Max Krasnyansky <maxk at qualcomm.com>
r8169 Gigabit Ethernet driver 2.2LK-NAPI loaded
ACPI: PCI Interrupt Link [APC5] enabled at IRQ 16
ACPI: PCI Interrupt 0000:02:0d.0[A] -> Link [APC5] -> GSI 16 (level, low) -> IRQ 16
eth1: RTL8169s/8110s at 0xffffc20000076000, 00:11:09:8f:4b:52, IRQ 16
Linux video capture interface: v2.00
cx2388x v4l2 driver version 0.0.6 loaded
cx2388x cx88-mpeg Driver Manager version 0.0.6 loaded
cx2388x alsa driver version 0.0.6 loaded
cx2388x blackbird driver version 0.0.6 loaded
cx8802_register_driver() ->registering driver type=blackbird access=shared
cx2388x dvb driver version 0.0.6 loaded
cx8802_register_driver() ->registering driver type=dvb access=shared
Uniform Multi-Platform E-IDE driver Revision: 7.00alpha2
ide: Assuming 33MHz system bus speed for PIO modes; override with idebus=xx
NFORCE3-250: IDE controller at PCI slot 0000:00:08.0
NFORCE3-250: chipset revision 162
NFORCE3-250: not 100% native mode: will probe irqs later
NFORCE3-250: 0000:00:08.0 (rev a2) UDMA133 controller
    ide0: BM-DMA at 0xdc00-0xdc07, BIOS settings: hda:DMA, hdb:DMA
    ide1: BM-DMA at 0xdc08-0xdc0f, BIOS settings: hdc:DMA, hdd:DMA
hda: PLEXTOR DVDR PX-712A, ATAPI CD/DVD-ROM drive
ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
hda: ATAPI 40X DVD-ROM DVD-R CD-R/RW drive, 8192kB Cache
Uniform CD-ROM driver Revision: 3.20
ACPI: PCI Interrupt Link [APSI] enabled at IRQ 22
ACPI: PCI Interrupt 0000:00:09.0[A] -> Link [APSI] -> GSI 22 (level, high) -> IRQ 22
ata1: SATA max UDMA/133 cmd 0x00000000000109e0 ctl 0x0000000000010be2 bmdma 0x000000000001c800 irq 22
ata2: SATA max UDMA/133 cmd 0x0000000000010960 ctl 0x0000000000010b62 bmdma 0x000000000001c808 irq 22
scsi0 : sata_nv
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ATA-6: WDC WD1600SD-01KCB0, 08.02D08, max UDMA/133
ata1.00: 312581808 sectors, multi 16: LBA48 
ata1.00: configured for UDMA/133
scsi1 : sata_nv
ata2: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata2.00: ATA-7: Maxtor 6L250S0, BANC1G10, max UDMA/133
ata2.00: 490234752 sectors, multi 16: LBA48 NCQ (depth 0/32)
ata2.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      WDC WD1600SD-01K 08.0 PQ: 0 ANSI: 5
SCSI device sda: 312581808 512-byte hdwr sectors (160042 MB)
sda: Write Protect is off
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
SCSI device sda: 312581808 512-byte hdwr sectors (160042 MB)
sda: Write Protect is off
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sda: sda1 sda2 sda3
sd 0:0:0:0: Attached scsi disk sda
sd 0:0:0:0: Attached scsi generic sg0 type 0
scsi 1:0:0:0: Direct-Access     ATA      Maxtor 6L250S0   BANC PQ: 0 ANSI: 5
SCSI device sdb: 490234752 512-byte hdwr sectors (251000 MB)
sdb: Write Protect is off
SCSI device sdb: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
SCSI device sdb: 490234752 512-byte hdwr sectors (251000 MB)
sdb: Write Protect is off
SCSI device sdb: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sdb: sdb1 sdb2
sd 1:0:0:0: Attached scsi disk sdb
sd 1:0:0:0: Attached scsi generic sg1 type 0
ACPI: PCI Interrupt Link [APSJ] enabled at IRQ 21
ACPI: PCI Interrupt 0000:00:0a.0[A] -> Link [APSJ] -> GSI 21 (level, high) -> IRQ 21
ata3: SATA max UDMA/133 cmd 0x00000000000109f0 ctl 0x0000000000010bf2 bmdma 0x000000000001b000 irq 21
ata4: SATA max UDMA/133 cmd 0x0000000000010970 ctl 0x0000000000010b72 bmdma 0x000000000001b008 irq 21
scsi2 : sata_nv
ata3: SATA link down (SStatus 0 SControl 300)
scsi3 : sata_nv
ata4: SATA link down (SStatus 0 SControl 300)
ACPI: PCI Interrupt Link [APCL] enabled at IRQ 20
ACPI: PCI Interrupt 0000:00:02.2[C] -> Link [APCL] -> GSI 20 (level, high) -> IRQ 20
ehci_hcd 0000:00:02.2: EHCI Host Controller
ehci_hcd 0000:00:02.2: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:02.2: debug port 1
ehci_hcd 0000:00:02.2: irq 20, io mem 0xfe02d000
ehci_hcd 0000:00:02.2: USB 2.0 started, EHCI 1.00, driver 10 Dec 2004
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 8 ports detected
ACPI: PCI Interrupt Link [APCF] enabled at IRQ 23
ACPI: PCI Interrupt 0000:00:02.0[A] -> Link [APCF] -> GSI 23 (level, high) -> IRQ 23
ohci_hcd 0000:00:02.0: OHCI Host Controller
ohci_hcd 0000:00:02.0: new USB bus registered, assigned bus number 2
ohci_hcd 0000:00:02.0: irq 23, io mem 0xfe02f000
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 4 ports detected
ACPI: PCI Interrupt Link [APCG] enabled at IRQ 22
ACPI: PCI Interrupt 0000:00:02.1[B] -> Link [APCG] -> GSI 22 (level, high) -> IRQ 22
ohci_hcd 0000:00:02.1: OHCI Host Controller
ohci_hcd 0000:00:02.1: new USB bus registered, assigned bus number 3
ohci_hcd 0000:00:02.1: irq 22, io mem 0xfe02e000
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 4 ports detected
usb 3-3: new low speed USB device using ohci_hcd and address 2
usb 3-3: configuration #1 chosen from 1 choice
usbcore: registered new interface driver libusual
usbcore: registered new interface driver hiddev
input: Logitech USB-PS/2 Optical Mouse as /class/input/input2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:02.1-3
usbcore: registered new interface driver usbhid
drivers/usb/input/hid-core.c: v2.6:USB HID core driver
PNP: PS/2 Controller [PNP0303:PS2K] at 0x60,0x64 irq 1
PNP: PS/2 controller doesn't have AUX irq; using default 12
serio: i8042 KBD port at 0x60,0x64 irq 1
mice: PS/2 mouse device common for all mice
rtc_cmos 00:05: rtc core: registered rtc_cmos as rtc0
pnp: Device 00:05 does not support disabling.
rtc_cmos: probe of 00:05 failed with error -16
i2c /dev entries driver
Advanced Linux Sound Architecture Driver Version 1.0.14rc3 (Tue Mar 06 13:10:00 2007 UTC).
ALSA device list:
  No soundcards found.
IPv4 over IPv4 tunneling driver
input: AT Translated Set 2 keyboard as /class/input/input3
GRE over IPv4 tunneling driver
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 1
NET: Registered protocol family 10
lo: Disabled Privacy Extensions
tunl0: Disabled Privacy Extensions
IPv6 over IPv4 tunneling driver
sit0: Disabled Privacy Extensions
NET: Registered protocol family 17
NET: Registered protocol family 15
powernow-k8: Found 1 AMD Athlon(tm) 64 Processor 3000+ processors (version 2.00.00)
powernow-k8:    0 : fid 0xa (1800 MHz), vid 0x6
powernow-k8:    1 : fid 0x2 (1000 MHz), vid 0x12
drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
ReiserFS: sda2: found reiserfs format "3.6" with standard journal
ReiserFS: sda2: using ordered data mode
ReiserFS: sda2: journal params: device sda2, size 8192, journal first block 18, max trans len 1024, max batch 900, max commit age 30, max trans age 30
ReiserFS: sda2: checking transaction log (sda2)
ReiserFS: sda2: Using r5 hash to sort names
VFS: Mounted root (reiserfs filesystem) readonly.
Freeing unused kernel memory: 192k freed
eth1394: eth2: IEEE-1394 IPv4 over 1394 Ethernet (fw-host0)
i2c_adapter i2c-4: nForce2 SMBus adapter at 0x4c00
i2c_adapter i2c-5: nForce2 SMBus adapter at 0x4c40
ACPI: PCI Interrupt Link [APCJ] enabled at IRQ 21
ACPI: PCI Interrupt 0000:00:06.0[A] -> Link [APCJ] -> GSI 21 (level, high) -> IRQ 21
parport: PnPBIOS parport detected.
parport0: PC-style at 0x378, irq 7 [PCSPP,TRISTATE]
intel8x0_measure_ac97_clock: measured 50612 usecs
intel8x0: clocking to 46869
ACPI: PCI Interrupt Link [APC2] enabled at IRQ 17
ACPI: PCI Interrupt 0000:02:07.0[A] -> Link [APC2] -> GSI 17 (level, low) -> IRQ 17
ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: Switching to PCI core, index 4
bcm43xx_mac80211: Broadcom 4306 WLAN found
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off
ACPI: PCI Interrupt 0000:02:0a.0[A] -> Link [APC2] -> GSI 17 (level, low) -> IRQ 17
Adding 979956k swap on /dev/sda1.  Priority:-1 extents:1 across:979956k
w83627hf 9191-0290: Reading VID from GPIO5
device-mapper: ioctl: 4.11.0-ioctl (2006-10-12) initialised: dm-devel at redhat.com
ReiserFS: sda3: found reiserfs format "3.6" with standard journal
ReiserFS: sda3: using ordered data mode
ReiserFS: sda3: journal params: device sda3, size 8192, journal first block 18, max trans len 1024, max batch 900, max commit age 30, max trans age 30
ReiserFS: sda3: checking transaction log (sda3)
ReiserFS: sda3: Using r5 hash to sort names
wpa_supplicant[3250]: segfault at 0000000000000048 rip 00000000004210cf rsp 00007fff9aced6e0 error 4
bcm43xx_mac80211: Adding Interface type 2
bcm43xx_mac80211: Found PHY: Analog 1, Type 2, Revision 1
bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
ssb: Switching to PCI core, index 4
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned on
bcm43xx_mac80211: Radio enabled by hardware
bcm43xx_mac80211: Chip initialized
bcm43xx_mac80211: 30-bit DMA initialized
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: Wireless interface started
bcm43xx_mac80211: DMA gencookie: cookie is B000
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA RX xmit status: i is 101
bcm43xx_mac80211: DMA RX hw->seq is: 0
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B002
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA RX xmit status: i is 101
bcm43xx_mac80211: DMA RX hw->seq is: 40
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B004
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA RX xmit status: i is 101
bcm43xx_mac80211: DMA RX hw->seq is: 0
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B006
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA RX xmit status: i is 101
bcm43xx_mac80211: DMA RX hw->seq is: 40
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B008
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA RX xmit status: i is 101
bcm43xx_mac80211: DMA RX hw->seq is: 0
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B00A
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B00C
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B00E
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B010
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B012
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
bcm43xx_mac80211: DMA gencookie: cookie is B014
bcm43xx_mac80211: ASSERTION FAILED (hw->cookie != 0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1201:dma_rx()
bcm43xx_mac80211: DMA parsecookie: cookie was: 0
bcm43xx_mac80211: ASSERTION FAILED (0) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1018:parse_cookie()
bcm43xx_mac80211: ASSERTION FAILED (ring && *slot >= 0 && *slot < ring->nr_slots) at: drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c:1021:parse_cookie()
-------------- next part --------------
Command line: root=/dev/sda2 ro console=ttyS0,115200n8r console=tty0 single
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009f800 (usable)
 BIOS-e820: 000000000009f800 - 00000000000a0000 (reserved)
 BIOS-e820: 00000000000f0000 - 0000000000100000 (reserved)
 BIOS-e820: 0000000000100000 - 00000000bfff0000 (usable)
 BIOS-e820: 00000000bfff0000 - 00000000bfff3000 (ACPI NVS)
 BIOS-e820: 00000000bfff3000 - 00000000c0000000 (ACPI data)
 BIOS-e820: 00000000fec00000 - 0000000100000000 (reserved)
end_pfn_map = 1048576
DMI 2.2 present.
ACPI: RSDP 000F8FA0, 0014 (r0 Nvidia)
ACPI: RSDT BFFF3040, 0034 (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
ACPI: FACP BFFF30C0, 0074 (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
ACPI: DSDT BFFF3180, 48C1 (r1 NVIDIA AWRDACPI     1000 MSFT  100000E)
ACPI: FACS BFFF0000, 0040
ACPI: SSDT BFFF7B80, 00B5 (r1 PTLTD  POWERNOW        1  LTP        1)
ACPI: SRAT BFFF7C80, 0090 (r1 AMD    HAMMER          1 AMD         1)
ACPI: APIC BFFF7AC0, 007C (r1 Nvidia AWRDACPI 42302E31 AWRD        0)
Zone PFN ranges:
  DMA             0 ->     4096
  DMA32        4096 ->  1048576
  Normal    1048576 ->  1048576
early_node_map[2] active PFN ranges
    0:        0 ->      159
    0:      256 ->   786416
Nvidia board detected. Ignoring ACPI timer override.
If you got timer trouble try acpi_use_timer_override
ACPI: PM-Timer IO Port: 0x4008
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
Processor #0 (Bootup-CPU)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] disabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 2, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: BIOS IRQ0 pin2 override ignored.
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: INT_SRC_OVR (bus 0 bus_irq 14 global_irq 14 high edge)
ACPI: INT_SRC_OVR (bus 0 bus_irq 15 global_irq 15 high edge)
Setting APIC routing to flat
Using ACPI (MADT) for SMP configuration information
Nosave address range: 000000000009f000 - 00000000000a0000
Nosave address range: 00000000000a0000 - 00000000000f0000
Nosave address range: 00000000000f0000 - 0000000000100000
Allocating PCI resources starting at c4000000 (gap: c0000000:3ec00000)
Built 1 zonelists.  Total pages: 774086
Kernel command line: root=/dev/sda2 ro console=ttyS0,115200n8r console=tty0 single
Initializing CPU#0
PID hash table entries: 4096 (order: 12, 32768 bytes)
time.c: Detected 1808.838 MHz processor.
Console: colour VGA+ 80x25
Dentry cache hash table entries: 524288 (order: 10, 4194304 bytes)
Inode-cache hash table entries: 262144 (order: 9, 2097152 bytes)
Checking aperture...
CPU 0: aperture @ f0000000 size 128 MB
Memory: 3089748k/3145664k available (3436k kernel code, 55200k reserved, 1739k data, 192k init)
Calibrating delay using timer specific routine.. 3618.66 BogoMIPS (lpj=1809331)
Mount-cache hash table entries: 256
CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K (64 bytes/line)
CPU: L2 Cache: 512K (64 bytes/line)
CPU: AMD Athlon(tm) 64 Processor 3000+ stepping 00
ACPI: Core revision 20070126
Using local APIC timer interrupts.
result 12561383
Detected 12.561 MHz APIC timer.
testing NMI watchdog ... OK.
NET: Registered protocol family 16
No dock devices found.
ACPI: bus type pci registered
PCI: Using configuration type 1
ACPI: Interpreter enabled
ACPI: (supports S0 S1 S4 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: PCI Root Bridge [PCI0] (0000:00)
0000:00:08.0: cannot adjust BAR0 (not I/O)
0000:00:08.0: cannot adjust BAR1 (not I/O)
0000:00:08.0: cannot adjust BAR2 (not I/O)
0000:00:08.0: cannot adjust BAR3 (not I/O)
ACPI: PCI Interrupt Link [LNK1] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LNK2] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNK3] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LNK4] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNK5] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LUBA] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LUBB] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LMAC] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LAPU] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LACI] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LMCI] (IRQs *3 4 5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LSMB] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LUB2] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LFIR] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [L3CM] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LIDE] (IRQs 3 4 5 6 7 10 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LSID] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LFID] (IRQs 3 4 5 6 7 *10 11 12 14 15)
ACPI: PCI Interrupt Link [APC1] (IRQs 16) *0
ACPI: PCI Interrupt Link [APC2] (IRQs 17) *0
ACPI: PCI Interrupt Link [APC3] (IRQs 18) *0, disabled.
ACPI: PCI Interrupt Link [APC4] (IRQs 19) *0
ACPI: PCI Interrupt Link [APC5] (IRQs *16)
ACPI: PCI Interrupt Link [APCF] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCG] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCH] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCI] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APCJ] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCK] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCS] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCL] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APCM] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [AP3C] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APCZ] (IRQs 20 21 22 23) *0, disabled.
ACPI: PCI Interrupt Link [APSI] (IRQs 20 21 22 23) *0
ACPI: PCI Interrupt Link [APSJ] (IRQs 20 21 22 23) *0
ACPI: Power Resource [ISAV] (on)
Linux Plug and Play Support v0.97 (c) Adam Belay
pnp: PnP ACPI init
pnp: PnP ACPI: found 12 devices
Generic PHY: Registered new driver
SCSI subsystem initialized
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
PCI: If a device doesn't work, try "pci=routeirq".  If it helps, post a report
PCI: Cannot allocate resource region 0 of device 0000:00:00.0
agpgart: Detected AGP bridge 0
agpgart: Setting up Nforce3 AGP.
agpgart: AGP aperture is 128M @ 0xf0000000
PCI-DMA: using GART IOMMU.
PCI-DMA: Reserving 64MB of IOMMU area in the AGP aperture
pnp: 00:00: ioport range 0x4000-0x407f has been reserved
Time: tsc clocksource has been installed.
pnp: 00:00: ioport range 0x4080-0x40ff has been reserved
pnp: 00:00: ioport range 0x4400-0x447f has been reserved
pnp: 00:00: ioport range 0x4480-0x44ff has been reserved
pnp: 00:00: ioport range 0x4800-0x487f has been reserved
pnp: 00:00: ioport range 0x4880-0x48ff has been reserved
pnp: 00:01: iomem range 0xd0000-0xd3fff has been reserved
pnp: 00:01: iomem range 0xd5000-0xd7fff has been reserved
pnp: 00:01: iomem range 0xf0000-0xfbfff could not be reserved
pnp: 00:01: iomem range 0xfc000-0xfffff could not be reserved
ACPI: PCI Interrupt Link [APC4] enabled at IRQ 19
ACPI: PCI Interrupt 0000:02:0c.0[A] -> Link [APC4] -> GSI 19 (level, low) -> IRQ 19
ohci1394: fw-host0: OHCI-1394 1.0 (PCI): IRQ=[19]  MMIO=[fdeff000-fdeff7ff]  Max Packet=[2048]  IR/IT contexts=[4/8]
PCI: Bridge: 0000:00:0b.0
  IO window: 9000-9fff
  MEM window: fdf00000-fdffffff
  PREFETCH window: e0000000-efffffff
PCI: Bridge: 0000:00:0e.0
  IO window: 8000-8fff
  MEM window: fde00000-fdefffff
  PREFETCH window: fdd00000-fddfffff
NET: Registered protocol family 2
IP route cache hash table entries: 131072 (order: 8, 1048576 bytes)
TCP established hash table entries: 262144 (order: 10, 4194304 bytes)
TCP bind hash table entries: 65536 (order: 7, 524288 bytes)
TCP: Hash tables configured (established 262144 bind 65536)
TCP reno registered
Total HugeTLB memory allocated, 0
fuse init (API version 7.8)
io scheduler noop registered
io scheduler anticipatory registered (default)
io scheduler cfq registered
ACPI: PCI Interrupt Link [APC1] enabled at IRQ 16
ACPI: PCI Interrupt 0000:01:00.0[A] -> Link [APC1] -> GSI 16 (level, low) -> IRQ 16
radeonfb: Found Intel x86 BIOS ROM Image
radeonfb: Retrieved PLL infos from BIOS
radeonfb: Reference=27.00 MHz (RefDiv=12) Memory=250.00 Mhz, System=200.00 MHz
radeonfb: PLL min 20000 max 40000
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-2: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
i2c_adapter i2c-3: unable to read EDID block.
radeonfb: Monitor 1 type DFP found
radeonfb: EDID probed
radeonfb: Monitor 2 type no found
Console: switching to colour frame buffer device 160x64
mtrr: base(0xe8000000) is not aligned on a size(0x10000000) boundary
radeonfb (0000:01:00.0): ATI Radeon Ya 
input: Power Button (FF) as /class/input/input0
ACPI: Power Button (FF) [PWRF]
input: Power Button (CM) as /class/input/input1
ACPI: Power Button (CM) [PWRB]
Real Time Clock Driver v1.12ac
Linux agpgart interface v0.102 (c) Dave Jones
[drm] Initialized drm 1.1.0 20060810
[drm] Initialized radeon 1.25.0 20060524 on minor 0
Serial: 8250/16550 driver $Revision: 1.90 $ 4 ports, IRQ sharing disabled
serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
00:09: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
loop: loaded (max 8 devices)
Marvell 88E1101: Registered new driver
Marvell 88E1111: Registered new driver
Marvell 88E1145: Registered new driver
QS6612: Registered new driver
forcedeth.c: Reverse Engineered nForce ethernet driver. Version 0.60.
ACPI: PCI Interrupt Link [APCH] enabled at IRQ 23
ACPI: PCI Interrupt 0000:00:05.0[A] -> Link [APCH] -> GSI 23 (level, high) -> IRQ 23
eth0: forcedeth.c: subsystem: 01462:0250 bound to 0000:00:05.0
tun: Universal TUN/TAP device driver, 1.6
tun: (C) 1999-2004 Max Krasnyansky <maxk at qualcomm.com>
r8169 Gigabit Ethernet driver 2.2LK-NAPI loaded
ACPI: PCI Interrupt Link [APC5] enabled at IRQ 16
ACPI: PCI Interrupt 0000:02:0d.0[A] -> Link [APC5] -> GSI 16 (level, low) -> IRQ 16
eth1: RTL8169s/8110s at 0xffffc20000076000, 00:11:09:8f:4b:52, IRQ 16
Linux video capture interface: v2.00
cx2388x v4l2 driver version 0.0.6 loaded
cx2388x cx88-mpeg Driver Manager version 0.0.6 loaded
cx2388x alsa driver version 0.0.6 loaded
cx2388x blackbird driver version 0.0.6 loaded
cx8802_register_driver() ->registering driver type=blackbird access=shared
cx2388x dvb driver version 0.0.6 loaded
cx8802_register_driver() ->registering driver type=dvb access=shared
Uniform Multi-Platform E-IDE driver Revision: 7.00alpha2
ide: Assuming 33MHz system bus speed for PIO modes; override with idebus=xx
NFORCE3-250: IDE controller at PCI slot 0000:00:08.0
NFORCE3-250: chipset revision 162
NFORCE3-250: not 100% native mode: will probe irqs later
NFORCE3-250: 0000:00:08.0 (rev a2) UDMA133 controller
    ide0: BM-DMA at 0xdc00-0xdc07, BIOS settings: hda:DMA, hdb:DMA
    ide1: BM-DMA at 0xdc08-0xdc0f, BIOS settings: hdc:DMA, hdd:DMA
hda: PLEXTOR DVDR PX-712A, ATAPI CD/DVD-ROM drive
ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
hda: ATAPI 40X DVD-ROM DVD-R CD-R/RW drive, 8192kB Cache
Uniform CD-ROM driver Revision: 3.20
ACPI: PCI Interrupt Link [APSI] enabled at IRQ 22
ACPI: PCI Interrupt 0000:00:09.0[A] -> Link [APSI] -> GSI 22 (level, high) -> IRQ 22
ata1: SATA max UDMA/133 cmd 0x00000000000109e0 ctl 0x0000000000010be2 bmdma 0x000000000001c800 irq 22
ata2: SATA max UDMA/133 cmd 0x0000000000010960 ctl 0x0000000000010b62 bmdma 0x000000000001c808 irq 22
scsi0 : sata_nv
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ATA-6: WDC WD1600SD-01KCB0, 08.02D08, max UDMA/133
ata1.00: 312581808 sectors, multi 16: LBA48 
ata1.00: configured for UDMA/133
scsi1 : sata_nv
ata2: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata2.00: ATA-7: Maxtor 6L250S0, BANC1G10, max UDMA/133
ata2.00: 490234752 sectors, multi 16: LBA48 NCQ (depth 0/32)
ata2.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      WDC WD1600SD-01K 08.0 PQ: 0 ANSI: 5
SCSI device sda: 312581808 512-byte hdwr sectors (160042 MB)
sda: Write Protect is off
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
SCSI device sda: 312581808 512-byte hdwr sectors (160042 MB)
sda: Write Protect is off
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sda: sda1 sda2 sda3
sd 0:0:0:0: Attached scsi disk sda
sd 0:0:0:0: Attached scsi generic sg0 type 0
scsi 1:0:0:0: Direct-Access     ATA      Maxtor 6L250S0   BANC PQ: 0 ANSI: 5
SCSI device sdb: 490234752 512-byte hdwr sectors (251000 MB)
sdb: Write Protect is off
SCSI device sdb: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
SCSI device sdb: 490234752 512-byte hdwr sectors (251000 MB)
sdb: Write Protect is off
SCSI device sdb: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sdb: sdb1 sdb2
sd 1:0:0:0: Attached scsi disk sdb
sd 1:0:0:0: Attached scsi generic sg1 type 0
ACPI: PCI Interrupt Link [APSJ] enabled at IRQ 21
ACPI: PCI Interrupt 0000:00:0a.0[A] -> Link [APSJ] -> GSI 21 (level, high) -> IRQ 21
ata3: SATA max UDMA/133 cmd 0x00000000000109f0 ctl 0x0000000000010bf2 bmdma 0x000000000001b000 irq 21
ata4: SATA max UDMA/133 cmd 0x0000000000010970 ctl 0x0000000000010b72 bmdma 0x000000000001b008 irq 21
scsi2 : sata_nv
ata3: SATA link down (SStatus 0 SControl 300)
scsi3 : sata_nv
ata4: SATA link down (SStatus 0 SControl 300)
ACPI: PCI Interrupt Link [APCL] enabled at IRQ 20
ACPI: PCI Interrupt 0000:00:02.2[C] -> Link [APCL] -> GSI 20 (level, high) -> IRQ 20
ehci_hcd 0000:00:02.2: EHCI Host Controller
ehci_hcd 0000:00:02.2: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:02.2: debug port 1
ehci_hcd 0000:00:02.2: irq 20, io mem 0xfe02d000
ehci_hcd 0000:00:02.2: USB 2.0 started, EHCI 1.00, driver 10 Dec 2004
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 8 ports detected
ACPI: PCI Interrupt Link [APCF] enabled at IRQ 23
ACPI: PCI Interrupt 0000:00:02.0[A] -> Link [APCF] -> GSI 23 (level, high) -> IRQ 23
ohci_hcd 0000:00:02.0: OHCI Host Controller
ohci_hcd 0000:00:02.0: new USB bus registered, assigned bus number 2
ohci_hcd 0000:00:02.0: irq 23, io mem 0xfe02f000
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 4 ports detected
ACPI: PCI Interrupt Link [APCG] enabled at IRQ 22
ACPI: PCI Interrupt 0000:00:02.1[B] -> Link [APCG] -> GSI 22 (level, high) -> IRQ 22
ohci_hcd 0000:00:02.1: OHCI Host Controller
ohci_hcd 0000:00:02.1: new USB bus registered, assigned bus number 3
ohci_hcd 0000:00:02.1: irq 22, io mem 0xfe02e000
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 4 ports detected
usb 3-3: new low speed USB device using ohci_hcd and address 2
usb 3-3: configuration #1 chosen from 1 choice
usbcore: registered new interface driver libusual
usbcore: registered new interface driver hiddev
input: Logitech USB-PS/2 Optical Mouse as /class/input/input2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:02.1-3
usbcore: registered new interface driver usbhid
drivers/usb/input/hid-core.c: v2.6:USB HID core driver
PNP: PS/2 Controller [PNP0303:PS2K] at 0x60,0x64 irq 1
PNP: PS/2 controller doesn't have AUX irq; using default 12
serio: i8042 KBD port at 0x60,0x64 irq 1
mice: PS/2 mouse device common for all mice
rtc_cmos 00:05: rtc core: registered rtc_cmos as rtc0
pnp: Device 00:05 does not support disabling.
rtc_cmos: probe of 00:05 failed with error -16
i2c /dev entries driver
Advanced Linux Sound Architecture Driver Version 1.0.14rc3 (Tue Mar 06 13:10:00 2007 UTC).
ALSA device list:
  No soundcards found.
IPv4 over IPv4 tunneling driver
input: AT Translated Set 2 keyboard as /class/input/input3
GRE over IPv4 tunneling driver
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 1
NET: Registered protocol family 10
lo: Disabled Privacy Extensions
tunl0: Disabled Privacy Extensions
IPv6 over IPv4 tunneling driver
sit0: Disabled Privacy Extensions
NET: Registered protocol family 17
NET: Registered protocol family 15
powernow-k8: Found 1 AMD Athlon(tm) 64 Processor 3000+ processors (version 2.00.00)
powernow-k8:    0 : fid 0xa (1800 MHz), vid 0x6
powernow-k8:    1 : fid 0x2 (1000 MHz), vid 0x12
drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
ReiserFS: sda2: found reiserfs format "3.6" with standard journal
ReiserFS: sda2: using ordered data mode
ReiserFS: sda2: journal params: device sda2, size 8192, journal first block 18, max trans len 1024, max batch 900, max commit age 30, max trans age 30
ReiserFS: sda2: checking transaction log (sda2)
ReiserFS: sda2: Using r5 hash to sort names
VFS: Mounted root (reiserfs filesystem) readonly.
Freeing unused kernel memory: 192k freed
eth1394: eth2: IEEE-1394 IPv4 over 1394 Ethernet (fw-host0)
i2c_adapter i2c-4: nForce2 SMBus adapter at 0x4c00
i2c_adapter i2c-5: nForce2 SMBus adapter at 0x4c40
ACPI: PCI Interrupt Link [APCJ] enabled at IRQ 21
ACPI: PCI Interrupt 0000:00:06.0[A] -> Link [APCJ] -> GSI 21 (level, high) -> IRQ 21
parport: PnPBIOS parport detected.
parport0: PC-style at 0x378, irq 7 [PCSPP,TRISTATE]
intel8x0_measure_ac97_clock: measured 50178 usecs
intel8x0: clocking to 46768
ACPI: PCI Interrupt Link [APC2] enabled at IRQ 17
ACPI: PCI Interrupt 0000:02:07.0[A] -> Link [APC2] -> GSI 17 (level, low) -> IRQ 17
ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: Switching to PCI core, index 4
bcm43xx_mac80211: Broadcom 4306 WLAN found
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off
ACPI: PCI Interrupt 0000:02:0a.0[A] -> Link [APC2] -> GSI 17 (level, low) -> IRQ 17
max memory size is 0x7fffffff (addr = 0xf51fe000)!!
Adding 979956k swap on /dev/sda1.  Priority:-1 extents:1 across:979956k
w83627hf 9191-0290: Reading VID from GPIO5
device-mapper: ioctl: 4.11.0-ioctl (2006-10-12) initialised: dm-devel at redhat.com
ReiserFS: sda3: found reiserfs format "3.6" with standard journal
ReiserFS: sda3: using ordered data mode
ReiserFS: sda3: journal params: device sda3, size 8192, journal first block 18, max trans len 1024, max batch 900, max commit age 30, max trans age 30
ReiserFS: sda3: checking transaction log (sda3)
ReiserFS: sda3: Using r5 hash to sort names
wpa_supplicant[3251]: segfault at 0000000000000048 rip 00000000004210cf rsp 00007fff8d71aa10 error 4
bcm43xx_mac80211: Adding Interface type 2
bcm43xx_mac80211: Found PHY: Analog 1, Type 2, Revision 1
bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
ssb: Switching to PCI core, index 4
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring failed. (cur=0, tgt=62). Disabling TX power adjustment.
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned on
bcm43xx_mac80211: Radio enabled by hardware
bcm43xx_mac80211: Chip initialized
bcm43xx_mac80211: 30-bit DMA initialized
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: FATAL ERROR: Fatal DMA error: 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
bcm43xx_mac80211: Controller RESET (DMA error) ...
bcm43xx_mac80211: Wireless interface started
bcm43xx_mac80211: Wireless interface stopped
bcm43xx_mac80211: DMA-32 0x0260 (RX) max used slots: 0/64
bcm43xx_mac80211: DMA-32 0x0200 (RX) max used slots: 0/64
bcm43xx_mac80211: DMA-32 0x02A0 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0280 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0260 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0240 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0220 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0200 (TX) max used slots: 0/128
bcm43xx_mac80211: Radio turned off
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off
bcm43xx_mac80211: Found PHY: Analog 1, Type 2, Revision 1
bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned on
bcm43xx_mac80211: Radio enabled by hardware
bcm43xx_mac80211: Chip initialized
bcm43xx_mac80211: 30-bit DMA initialized
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: FATAL ERROR: Fatal DMA error: 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
bcm43xx_mac80211: Controller RESET (DMA error) ...
bcm43xx_mac80211: Wireless interface started
bcm43xx_mac80211: Controller restarted
bcm43xx_mac80211: Wireless interface stopped
bcm43xx_mac80211: DMA-32 0x0260 (RX) max used slots: 0/64
bcm43xx_mac80211: DMA-32 0x0200 (RX) max used slots: 0/64
bcm43xx_mac80211: DMA-32 0x02A0 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0280 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0260 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0240 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0220 (TX) max used slots: 0/128
bcm43xx_mac80211: DMA-32 0x0200 (TX) max used slots: 0/128
bcm43xx_mac80211: Radio turned off
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned off
bcm43xx_mac80211: Found PHY: Analog 1, Type 2, Revision 1
bcm43xx_mac80211: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
ssb: Switching to ChipCommon core, index 0
ssb: Switching to IEEE 802.11 core, index 1
bcm43xx_mac80211: Radio turned on
bcm43xx_mac80211: Radio enabled by hardware
bcm43xx_mac80211: Chip initialized
bcm43xx_mac80211: 30-bit DMA initialized
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: TODO: Incomplete code in keymac_write() at drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c:727
bcm43xx_mac80211: FATAL ERROR: Fatal DMA error: 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
bcm43xx_mac80211: Controller RESET (DMA error) ...

From linville at tuxdriver.com  Fri Mar 16 18:14:27 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 16 Mar 2007 13:14:27 -0400
Subject: [PATCH] bcm43xx: Add firmware version to ethtool output
In-Reply-To: <200703042002.39581.mb@bu3sch.de>
References: <45eb1612.l8xsd6TwZVsRseAH%Larry.Finger@lwfinger.net>
	<200703042002.39581.mb@bu3sch.de>
Message-ID: <20070316171427.GC3426@tuxdriver.com>

On Sun, Mar 04, 2007 at 08:02:39PM +0100, Michael Buesch wrote:
> On Sunday 04 March 2007 19:55, Larry Finger wrote:

> > @@ -42,6 +43,8 @@ static void bcm43xx_get_drvinfo(struct n
> >  	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
> >  	strncpy(info->version, utsname()->release, sizeof(info->version));
> >  	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
> > +	snprintf(info->fw_version, sizeof(info->fw_version), "0x%x",
> > +		 bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, BCM43xx_UCODE_REVISION));
> 
> This will crash when the device is not up.

Larry, will you be doing a new version of this patch that accounts
for this comment?

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Fri Mar 16 19:13:11 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 16 Mar 2007 13:13:11 -0500
Subject: [PATCH] bcm43xx: Add firmware version to ethtool output
In-Reply-To: <20070316171427.GC3426@tuxdriver.com>
References: <45eb1612.l8xsd6TwZVsRseAH%Larry.Finger@lwfinger.net>	<200703042002.39581.mb@bu3sch.de>
	<20070316171427.GC3426@tuxdriver.com>
Message-ID: <45FADE37.2080708@lwfinger.net>

John W. Linville wrote:
> On Sun, Mar 04, 2007 at 08:02:39PM +0100, Michael Buesch wrote:
>> On Sunday 04 March 2007 19:55, Larry Finger wrote:
> 
>>> @@ -42,6 +43,8 @@ static void bcm43xx_get_drvinfo(struct n
>>>  	strncpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
>>>  	strncpy(info->version, utsname()->release, sizeof(info->version));
>>>  	strncpy(info->bus_info, pci_name(bcm->pci_dev), ETHTOOL_BUSINFO_LEN);
>>> +	snprintf(info->fw_version, sizeof(info->fw_version), "0x%x",
>>> +		 bcm43xx_shm_read16(bcm, BCM43xx_SHM_SHARED, BCM43xx_UCODE_REVISION));
>> This will crash when the device is not up.
> 
> Larry, will you be doing a new version of this patch that accounts
> for this comment?

No. Just drop that patch. It doesn't add enough functionality to bother with it.

Larry


From didit21 at gmail.com  Sat Mar 17 06:08:44 2007
From: didit21 at gmail.com (di dit)
Date: Sat, 17 Mar 2007 06:08:44 +0100
Subject: nx6310 - Radio turned off
Message-ID: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>

Hi,

I'm trying to use the bcm43xx driver on a HP Compaq nx6310 without
success. Using
ndiswrapper is OK.
Here are the related kernel messages:

bcm43xx driver
ACPI: PCI Interrupt 0000:08:00.0[A] -> GSI 16 (level, low) -> IRQ 16
PCI: Setting latency timer of device 0000:08:00.0 to 64
bcm43xx: Chip ID 0x4311, rev 0x1
bcm43xx: Number of cores: 4
bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
bcm43xx: PHY connected
bcm43xx: Detected PHY: Version: 4, Type 2, Revision 8
bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
bcm43xx: Radio turned off
bcm43xx: Radio turned off

lspci -nn returns:

08:00.0 Network controller [0280]: Broadcom Corporation Dell Wireless
1390 WLAN Mini-PCI Card [14e4:4311] (rev 01)

It makes no difference whether I press the wifi button or not. I don't
have to do anything special with ndiswrapper.

I'm using the debian kernel package
linux-image-2.6.20-1-686_2.6.20-1~experimental.1~snapshot.8353_i386.deb
from
http://kernel-archive.buildserver.net/debian-kernel/pool/main/l/linux-2.6/
It's 2.6.20.2 with a few additional patches. Have a look at the file
linux-2.6_2.6.20-1~experimental.1~snapshot.8353.diff.gz for more
details.

Does anybody have an idea why this does not work?

didit.


From larry.finger at lwfinger.net  Sat Mar 17 16:45:05 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sat, 17 Mar 2007 10:45:05 -0500
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
Message-ID: <45FC0D01.9010702@lwfinger.net>

di dit wrote:
> Hi,
> 
> I'm trying to use the bcm43xx driver on a HP Compaq nx6310 without
> success. Using
> ndiswrapper is OK.
> Here are the related kernel messages:
> 
> bcm43xx driver
> ACPI: PCI Interrupt 0000:08:00.0[A] -> GSI 16 (level, low) -> IRQ 16
> PCI: Setting latency timer of device 0000:08:00.0 to 64
> bcm43xx: Chip ID 0x4311, rev 0x1
> bcm43xx: Number of cores: 4
> bcm43xx: Core 0: ID 0x800, rev 0x11, vendor 0x4243
> bcm43xx: Core 1: ID 0x812, rev 0xa, vendor 0x4243
> bcm43xx: Core 2: ID 0x817, rev 0x3, vendor 0x4243
> bcm43xx: Core 3: ID 0x820, rev 0x1, vendor 0x4243
> bcm43xx: PHY connected
> bcm43xx: Detected PHY: Version: 4, Type 2, Revision 8
> bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
> bcm43xx: Radio turned off
> bcm43xx: Radio turned off
> 
> lspci -nn returns:
> 
> 08:00.0 Network controller [0280]: Broadcom Corporation Dell Wireless
> 1390 WLAN Mini-PCI Card [14e4:4311] (rev 01)
> 
> It makes no difference whether I press the wifi button or not. I don't
> have to do anything special with ndiswrapper.
> 
> I'm using the debian kernel package
> linux-image-2.6.20-1-686_2.6.20-1~experimental.1~snapshot.8353_i386.deb
> from
> http://kernel-archive.buildserver.net/debian-kernel/pool/main/l/linux-2.6/
> It's 2.6.20.2 with a few additional patches. Have a look at the file
> linux-2.6_2.6.20-1~experimental.1~snapshot.8353.diff.gz for more
> details.
> 
> Does anybody have an idea why this does not work?

If you do not see a message that looks like "bcm43xx: Radio enabled by hardware" in your logs, your
kernel is too old. Either get and build 2.6.21-rc4 or apply the appropriate patch found at
ftp://lwfinger.dynalias.org/patches.

Larry


From Larry.Finger at lwfinger.net  Sat Mar 17 17:28:21 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 17 Mar 2007 11:28:21 -0500
Subject: [PATCH] bcm43xx: Fix code for confusion between PHY revision and
	PHY version
Message-ID: <45fc1725.yUj4D2LtC57tEQYF%Larry.Finger@lwfinger.net>

There are several places where the PHY version and revision were interchanged.
These are changed in the specifications on 2/13/07 and now use "analog" instead
instead of "version" to help reduce confusion.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

I had thought this patch was submitted earlier, but apparently I failed
to send it. This material is needed for wireless-2.6, "upstream"
and "upstream-fixes".

Thanks,

Larry


Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
@@ -458,7 +458,7 @@ static void bcm43xx_calc_nrssi_offset(st
 		bcm43xx_phy_write(bcm, 0x005A, 0x0480);
 		bcm43xx_phy_write(bcm, 0x0059, 0x0810);
 		bcm43xx_phy_write(bcm, 0x0058, 0x000D);
-		if (phy->rev == 0) {
+		if (phy->analog == 0) {
 			bcm43xx_phy_write(bcm, 0x0003, 0x0122);
 		} else {
 			bcm43xx_phy_write(bcm, 0x000A,
@@ -570,9 +570,9 @@ void bcm43xx_calc_nrssi_slope(struct bcm
 		nrssi0 = (s16)bcm43xx_phy_read(bcm, 0x0027);
 		bcm43xx_radio_write16(bcm, 0x007A,
 				      bcm43xx_radio_read16(bcm, 0x007A) & 0x007F);
-		if (phy->rev >= 2) {
+		if (phy->analog >= 2) {
 			bcm43xx_write16(bcm, 0x03E6, 0x0040);
-		} else if (phy->rev == 0) {
+		} else if (phy->analog == 0) {
 			bcm43xx_write16(bcm, 0x03E6, 0x0122);
 		} else {
 			bcm43xx_write16(bcm, BCM43xx_MMIO_CHANNEL_EXT,
@@ -596,7 +596,7 @@ void bcm43xx_calc_nrssi_slope(struct bcm
 		bcm43xx_phy_write(bcm, 0x0015, backup[5]);
 		bcm43xx_phy_write(bcm, 0x002A, backup[6]);
 		bcm43xx_synth_pu_workaround(bcm, radio->channel);
-		if (phy->rev != 0)
+		if (phy->analog != 0)
 			bcm43xx_write16(bcm, 0x03F4, backup[13]);
 
 		bcm43xx_phy_write(bcm, 0x0020, backup[7]);
@@ -692,7 +692,7 @@ void bcm43xx_calc_nrssi_slope(struct bcm
 
 		bcm43xx_radio_write16(bcm, 0x007A,
 				      bcm43xx_radio_read16(bcm, 0x007A) & 0x007F);
-		if (phy->rev >= 2) {
+		if (phy->analog >= 2) {
 			bcm43xx_phy_write(bcm, 0x0003,
 					  (bcm43xx_phy_read(bcm, 0x0003)
 					   & 0xFF9F) | 0x0040);

---



From didit21 at gmail.com  Sun Mar 18 09:55:04 2007
From: didit21 at gmail.com (di dit)
Date: Sun, 18 Mar 2007 09:55:04 +0100
Subject: nx6310 - Radio turned off
In-Reply-To: <45FC0D01.9010702@lwfinger.net>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<45FC0D01.9010702@lwfinger.net>
Message-ID: <91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>

2007/3/17, Larry Finger <larry.finger at lwfinger.net>:
> If you do not see a message that looks like "bcm43xx: Radio enabled by hardware"
> in your logs, your kernel is too old. Either get and build 2.6.21-rc4 or apply the
> appropriate patch found at ftp://lwfinger.dynalias.org/patches.

Thanks. I'm now running kernel 2.6.21-rc4. Once I figured out that
DHCP wouldn't work
(as was reported for a nx6325 laptop here) I changed my configuration
to use a static
configuration and it's working now.
That's great news for me and thanks to you and all other people
involved in this work.
Regarding the DHCP issue, I'll be happy to help solve it if I can. The
DHCP server runs on my ADSL provider box (see here
http://en.wikipedia.org/wiki/Freebox ). I've never had any problem
before connecting to this box with other wifi cards, with ethernet and
even with ndiswrapper on the same laptop so there is something
specific to bcm43xx I think.

Thanks for your work and your help,

didit.


From mcclosk at ucsc.edu  Sun Mar 18 11:19:59 2007
From: mcclosk at ucsc.edu (Jim McCloskey)
Date: Sun, 18 Mar 2007 03:19:59 -0700
Subject: New combined patch for 2.6.20.2 
Message-ID: <20070318101958.GA4828@lapdog>


I've been trying the new combined patch (combined_2.6.20.2.patch)
posted by Larry Finger on Sun March 11.

This is a 4318 card:

----------------------------------------------------------------------
kernel: bcm43xx: Chip ID 0x4318, rev 0x2
kernel: bcm43xx: Number of cores: 4
kernel: bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
kernel: bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
kernel: bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
kernel: bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
kernel: bcm43xx: PHY connected
kernel: bcm43xx: Detected PHY: Analog: 3, Type 2, Revision 7
kernel: bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 2050 Rev: 8)
----------------------------------------------------------------------

Assocation seems to be about as reliable as before (best when in the
same room as the access point, which is a LinkSys WRT54GL).

iwconfig reveals:

wlang     IEEE 802.11b/g  ESSID:"branci40"  Nickname:"Broadcom 4318"
          Mode:Managed  Frequency=2.437 GHz  Access Point: 00:14:BF:BA:77:03   
          Bit Rate=54 Mb/s   Tx-Power=19 dBm   
          RTS thr:off   Fragment thr:off
          Encryption key:off
          Link Quality=68/100  Signal level=-46 dBm  Noise level=-73 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

Using iperf on the internal network (iperf -c 192.168.1.100 -r), I get
these speeds (averaged over 4 tries for each rate):

           6M: 16.4 Mbits/sec
           9M: 16.9 Mbits/sec
         (11M: 13.8 Mbits/sec)
          12M: 17.5 Mbits/sec
          18M: 17.6 Mbits/sec
          24M: 18.0 Mbits/sec
          36M: 18.2 Mbits/sec
          48M: 18.2 Mbits/sec
          54M: 18.2 Mbits/sec

By comparison, an Orinoco Gold card in exactly the same encironment:

wlan1     IEEE 802.11b  ESSID:"branci40"  Nickname:"HERMES I"
          Mode:Managed  Frequency:2.437 GHz  Access Point: 00:14:BF:BA:77:03   
          Bit Rate:11 Mb/s   Sensitivity:1/3  
          Retry limit:4   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=58/92  Signal level=-27 dBm  Noise level=-85 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:16
          Tx excessive retries:3  Invalid misc:0   Missed beacon:0

yields speeds in the range between 4.9 and 5.07 MBits/sec under iperf.

Using wget to get a large file from a distant host, I get download
speeds in the range of 590--615 KB/sec (i.e. about 1min 30secs to
download the bzipped tarball of the kernel source).

Thanks once more,

Jim


From ftoledo at docksud.com.ar  Sun Mar 18 16:33:54 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sun, 18 Mar 2007 12:33:54 -0300
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45F3543D.1040205@lwfinger.net>
References: <45F3543D.1040205@lwfinger.net>
Message-ID: <200703181233.59122.ftoledo@docksud.com.ar>

El S?bado, 10 de Marzo de 2007 21:58, Larry Finger escribi?:
> I have just put a new patch for 2.6.20.2 at
> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has
> some important fixes for 4318 users.
>
> Larry
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
at this patch my leds always turned on
the radio switch work , it enable o disable the radio , but the leds still on

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070318/30d6b8f9/attachment.pgp>

From larry.finger at lwfinger.net  Sun Mar 18 17:01:37 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 18 Mar 2007 11:01:37 -0500
Subject: New combined patch for 2.6.20.2
In-Reply-To: <200703181233.59122.ftoledo@docksud.com.ar>
References: <45F3543D.1040205@lwfinger.net>
	<200703181233.59122.ftoledo@docksud.com.ar>
Message-ID: <45FD6261.8080809@lwfinger.net>

Fernando Toledo wrote:
> El S?bado, 10 de Marzo de 2007 21:58, Larry Finger escribi?:
>> I have just put a new patch for 2.6.20.2 at
>> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch has
>> some important fixes for 4318 users.
>>
>> Larry
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> at this patch my leds always turned on
> the radio switch work , it enable o disable the radio , but the leds still on

What does your log show when the switch is toggled?

Larry


From larry.finger at lwfinger.net  Sun Mar 18 17:32:08 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 18 Mar 2007 11:32:08 -0500
Subject: New combined patch for 2.6.20.2
In-Reply-To: <20070318101958.GA4828@lapdog>
References: <20070318101958.GA4828@lapdog>
Message-ID: <45FD6988.8090405@lwfinger.net>

Jim McCloskey wrote:
> I've been trying the new combined patch (combined_2.6.20.2.patch)
> posted by Larry Finger on Sun March 11.
> 
> This is a 4318 card:
> 
> ----------------------------------------------------------------------
> kernel: bcm43xx: Chip ID 0x4318, rev 0x2
> kernel: bcm43xx: Number of cores: 4
> kernel: bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
> kernel: bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
> kernel: bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
> kernel: bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
> kernel: bcm43xx: PHY connected
> kernel: bcm43xx: Detected PHY: Analog: 3, Type 2, Revision 7
> kernel: bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 2050 Rev: 8)
> ----------------------------------------------------------------------
> 
> Assocation seems to be about as reliable as before (best when in the
> same room as the access point, which is a LinkSys WRT54GL).
> 
> iwconfig reveals:
> 
> wlang     IEEE 802.11b/g  ESSID:"branci40"  Nickname:"Broadcom 4318"
>           Mode:Managed  Frequency=2.437 GHz  Access Point: 00:14:BF:BA:77:03   
>           Bit Rate=54 Mb/s   Tx-Power=19 dBm   
>           RTS thr:off   Fragment thr:off
>           Encryption key:off
>           Link Quality=68/100  Signal level=-46 dBm  Noise level=-73 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> 
> Using iperf on the internal network (iperf -c 192.168.1.100 -r), I get
> these speeds (averaged over 4 tries for each rate):
> 
>            6M: 16.4 Mbits/sec
>            9M: 16.9 Mbits/sec
>          (11M: 13.8 Mbits/sec)
>           12M: 17.5 Mbits/sec
>           18M: 17.6 Mbits/sec
>           24M: 18.0 Mbits/sec
>           36M: 18.2 Mbits/sec
>           48M: 18.2 Mbits/sec
>           54M: 18.2 Mbits/sec

You appear to have averaged transmit and receive speeds. It would be better to report them
separately, as the AP will always send at the highest rate it can.

The (not-yet completed) bash script that I use is attached. The main bug in this version is that it
sometimes gets a receive rate in the transmit data and vice-versa. I also want to add some
statistics such as max/min, mean and std. deviation for each rate.
> 
> By comparison, an Orinoco Gold card in exactly the same encironment:
> 
> wlan1     IEEE 802.11b  ESSID:"branci40"  Nickname:"HERMES I"
>           Mode:Managed  Frequency:2.437 GHz  Access Point: 00:14:BF:BA:77:03   
>           Bit Rate:11 Mb/s   Sensitivity:1/3  
>           Retry limit:4   RTS thr:off   Fragment thr:off
>           Encryption key:off
>           Power Management:off
>           Link Quality=58/92  Signal level=-27 dBm  Noise level=-85 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:16
>           Tx excessive retries:3  Invalid misc:0   Missed beacon:0
> 
> yields speeds in the range between 4.9 and 5.07 MBits/sec under iperf.
> 
> Using wget to get a large file from a distant host, I get download
> speeds in the range of 590--615 KB/sec (i.e. about 1min 30secs to
> download the bzipped tarball of the kernel source).

If you use a wired connection, what is your rate? How close is wireless to saturating your broadband
connection?

There is one patch that may help that is not in 2.6.21-rc4 - it does help my system at 48 Mbs. It is
also attached.

> Thanks once more,

You are welcome.

Larry

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: perf_test
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070318/45cd6052/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: radio_rev_02_13
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070318/45cd6052/attachment-0001.ksh>

From didier at famille-link.fr  Sun Mar 18 18:29:21 2007
From: didier at famille-link.fr (Didier Link)
Date: Sun, 18 Mar 2007 18:29:21 +0100
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45FD6988.8090405@lwfinger.net>
References: <20070318101958.GA4828@lapdog>
	<45FD6988.8090405@lwfinger.net>
Message-ID: <20070318182921.3be4102e@neutrino.cosmos.net>

Le Sun, 18 Mar 2007 11:32:08 -0500,
Larry Finger <larry.finger at lwfinger.net> a ?crit :

> Jim McCloskey wrote:
> > I've been trying the new combined patch (combined_2.6.20.2.patch)
> > posted by Larry Finger on Sun March 11.
> > 
> > This is a 4318 card:
> > 
> > ----------------------------------------------------------------------
> > kernel: bcm43xx: Chip ID 0x4318, rev 0x2
> > kernel: bcm43xx: Number of cores: 4
> > kernel: bcm43xx: Core 0: ID 0x800, rev 0xd, vendor 0x4243
> > kernel: bcm43xx: Core 1: ID 0x812, rev 0x9, vendor 0x4243
> > kernel: bcm43xx: Core 2: ID 0x804, rev 0xc, vendor 0x4243
> > kernel: bcm43xx: Core 3: ID 0x80d, rev 0x7, vendor 0x4243
> > kernel: bcm43xx: PHY connected
> > kernel: bcm43xx: Detected PHY: Analog: 3, Type 2, Revision 7
> > kernel: bcm43xx: Detected Radio: ID: 8205017f (Manuf: 17f Ver: 2050
> > Rev: 8)
> > ----------------------------------------------------------------------
> > 

Hi all,

I've the same card, about the same AP and I've tried the same
combined patch for 2.6.20.2 ;)

> > Assocation seems to be about as reliable as before (best when in the
> > same room as the access point, which is a LinkSys WRT54GL).
> > 
> > iwconfig reveals:
> > 
> > wlang     IEEE 802.11b/g  ESSID:"branci40"  Nickname:"Broadcom 4318"
> >           Mode:Managed  Frequency=2.437 GHz  Access Point:
> > 00:14:BF:BA:77:03 Bit Rate=54 Mb/s   Tx-Power=19 dBm   
> >           RTS thr:off   Fragment thr:off
> >           Encryption key:off
> >           Link Quality=68/100  Signal level=-46 dBm  Noise
> > level=-73 dBm Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid
> > frag:0 Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> > 

I've this data with iwconfig :

# iwconfig eth1
eth1      IEEE 802.11b/g  ESSID:"blotzheim"  Nickname:"Broadcom 4318"
          Mode:Managed  Frequency=2.437 GHz  Access Point:
00:14:BF:64:BD:38 Bit Rate=24 Mb/s   Tx-Power=19 dBm   
          RTS thr:off   Fragment thr:off
          Encryption key:xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx
Security mode:open Link Quality=38/100  Signal level=-67 dBm  Noise
level=-66 dBm Rx invalid nwid:0  Rx invalid crypt:10  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0


The AP is in a different room of the computer but the connection is
really stable and have a good speed for my internet use ;)


> The (not-yet completed) bash script that I use is attached. The main
> bug in this version is that it sometimes gets a receive rate in the
> transmit data and vice-versa. I also want to add some statistics such
> as max/min, mean and std. deviation for each rate.

Thanks for this script, I've just done this tests between my computer
and a local server connected to the AP with 100 MBits/sec wired
connection:

# ./netperf.sh eth1 home

iIwconfig rate set to 6 Mbs
Transmit rate: 3.68 3.79 3.73 3.83 3.85  Mbits/sec
 Receive rate: 10.1 11.6 11.3 11.6 11.3  Mbits/sec

iIwconfig rate set to 9 Mbs
Transmit rate: 4.98 4.92 5.10 5.14 5.14  Mbits/sec
 Receive rate: 10.9 10.7 12.0 12.0 12.4  Mbits/sec

iIwconfig rate set to 11 Mbs
Transmit rate: 5.17 5.20 5.12 5.08 5.05  Mbits/sec
 Receive rate: 9.77 9.48 9.83 9.44 9.47  Mbits/sec

iIwconfig rate set to 18 Mbs
Transmit rate: 7.32 5.35 7.84 4.99 5.78  Mbits/sec
 Receive rate: 10.8 11.6 10.5 10.7 13.5  Mbits/sec

iIwconfig rate set to 24 Mbs
Transmit rate: 7.65 8.56 10.4 8.72 10.1  Mbits/sec
 Receive rate: 13.7 15.6 15.5 15.1 14.4  Mbits/sec

iIwconfig rate set to 36 Mbs
Transmit rate: 5.06 2.51 3.11 4.84 3.88  Mbits/sec
 Receive rate: 11.5 5.97 11.7 12.8 11.4  Mbits/sec

iIwconfig rate set to 48 Mbs
Transmit rate: 4.15 1.80 2.96 4.30 0.64  Mbits/sec
 Receive rate: 12.5 11.0 10.1 10.0 5.79  Mbits/sec

Iwconfig rate reset to 24 Mbs


The better rate in my configuration is clearly 24 Mbits/sec :)

Thanks for all your good work on this driver !!

Didier LINK

-- 
Didier Link <didier at famille-link.fr>
Jabber : zanfib at ims.kelkoo.net
MSN : zanfib at hotmail.fr
SIP : Zanfib at ekiga.net

Cl? GPG : 75BAC9EE


From tigger at lipsia.de  Sun Mar 18 22:25:27 2007
From: tigger at lipsia.de (Dirk Bossenz)
Date: Sun, 18 Mar 2007 22:25:27 +0100
Subject: Rate-Control like madwifi?
Message-ID: <45FDAE47.9040401@lipsia.de>

hello,


I'm a completely newbie in driver-dev and interested in rate-control of
PHY-Section. I had a look at the bcm-dev-doc's and list archive but
nothing find out.

What's going on about this? I'd like to try implement algorithms for
this. How can I start with the basics?

So I need a read-able introduction for working with a development-
environment, at Home I works on Linksys WRT54GL and OpenWRT-Firmware
(special Freifunk) and a linux-system for crosscompiling...right
Starting-Devices?


thx
Dirk


[1] http://madwifi.org/wiki/UserDocs/RateControl



From ftoledo at docksud.com.ar  Sun Mar 18 22:39:29 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sun, 18 Mar 2007 18:39:29 -0300
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45FD6261.8080809@lwfinger.net>
References: <45F3543D.1040205@lwfinger.net>
	<200703181233.59122.ftoledo@docksud.com.ar>
	<45FD6261.8080809@lwfinger.net>
Message-ID: <200703181839.33725.ftoledo@docksud.com.ar>

El Domingo, 18 de Marzo de 2007 13:01, Larry Finger escribi?:
> Fernando Toledo wrote:
> > El S?bado, 10 de Marzo de 2007 21:58, Larry Finger escribi?:
> >> I have just put a new patch for 2.6.20.2 at
> >> ftp://lwfinger.dynalias.org/patches/combined-2.6.20.2.patch. This patch
> >> has some important fixes for 4318 users.
> >>
> >> Larry
> >> _______________________________________________
> >> Bcm43xx-dev mailing list
> >> Bcm43xx-dev at lists.berlios.de
> >> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >
> > at this patch my leds always turned on
> > the radio switch work , it enable o disable the radio , but the leds
> > still on
>
> What does your log show when the switch is toggled?
>
> Larry
nothing about the switching (i have the verbose option enabled in the kernel), 
proviously on 2.6.20 was work fine.

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070318/f42e1aa0/attachment.pgp>

From larry.finger at lwfinger.net  Mon Mar 19 01:57:14 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 18 Mar 2007 19:57:14 -0500
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>	<45FC0D01.9010702@lwfinger.net>
	<91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>
Message-ID: <45FDDFEA.7020505@lwfinger.net>

di dit wrote:
> 
> Thanks. I'm now running kernel 2.6.21-rc4. Once I figured out that
> DHCP wouldn't work
> (as was reported for a nx6325 laptop here) I changed my configuration
> to use a static
> configuration and it's working now.
> That's great news for me and thanks to you and all other people
> involved in this work.
> Regarding the DHCP issue, I'll be happy to help solve it if I can. The
> DHCP server runs on my ADSL provider box (see here
> http://en.wikipedia.org/wiki/Freebox ). I've never had any problem
> before connecting to this box with other wifi cards, with ethernet and
> even with ndiswrapper on the same laptop so there is something
> specific to bcm43xx I think.

Please send me the contents of /etc/sysconfig/network/dhcp, which is the configuration file for DHCP.

Larry


From mcclosk at ucsc.edu  Mon Mar 19 07:21:18 2007
From: mcclosk at ucsc.edu (Jim McCloskey)
Date: Sun, 18 Mar 2007 23:21:18 -0700
Subject: New combined patch for 2.6.20.2
In-Reply-To: <45FD6988.8090405@lwfinger.net>
References: <20070318101958.GA4828@lapdog> <45FD6988.8090405@lwfinger.net>
Message-ID: <20070319062118.GA4623@lapdog>

* Larry Finger (larry.finger at lwfinger.net) wrote:

  |>  If you use a wired connection, what is your rate? How close is
  |>  wireless to saturating your broadband connection?

Very close.  The difference between wired and wireless is barely
appreciable. On a wired connection for the same test (i.e. downloading
the bzipped kernel tarball from a distant host with wget), the
*reported* download rate varies between 613 and 617 KB/sec (it was
590--615 for the Broadcom 4318). The *actual* download time is
somewhat faster with the wired connection---varying between 69sec and
73sec, as opposed to around 90sec for wireless.

|> You appear to have averaged transmit and receive speeds. It would
|> be better to report them separately, as the AP will always send at
|> the highest rate it can.

Sorry, I'm a complete amateur (as I'm sure you've already made
out). Here are the numbers produced for the LAN by the script that you
attached:

-------
iIwconfig rate set to 6 Mbs
Transmit rate: 4.21 4.15 4.18 4.21 4.14  Mbits/sec
 Receive rate: 16.2 16.2 16.2 16.0 16.2  Mbits/sec

iIwconfig rate set to 9 Mbs
Transmit rate: 6.01 5.97 5.96 5.93 5.96  Mbits/sec
 Receive rate: 16.9 17.0 16.7 16.9 16.4  Mbits/sec

iIwconfig rate set to 11 Mbs
Transmit rate: 6.15 6.15 6.16 6.22 6.14  Mbits/sec
 Receive rate: 13.7 13.4 13.7 13.7 13.6  Mbits/sec

iIwconfig rate set to 18 Mbs
Transmit rate: 9.93 10.1 10.0 9.95 9.92  Mbits/sec
 Receive rate: 17.4 17.5 17.5 17.4 17.4  Mbits/sec

iIwconfig rate set to 24 Mbs
Transmit rate: 11.9 12.0 12.0 12.1 12.0  Mbits/sec
 Receive rate: 17.8 17.7 17.6 17.7 17.6  Mbits/sec

iIwconfig rate set to 36 Mbs
Transmit rate: 15.0 15.1 15.0 14.9 14.9  Mbits/sec
 Receive rate: 17.9 17.8 17.9 17.8 17.7  Mbits/sec

iIwconfig rate set to 48 Mbs
Transmit rate: 17.0 17.1 17.1 17.0 17.1  Mbits/sec
 Receive rate: 17.8 18.1 17.9 17.9 17.9  Mbits/sec

Iwconfig rate reset to 24 Mbs
-------

Damn good, I'd say. The AP is conected to the server by way of a
standard wired connection (the ethernet controller on the server is a
Broadcom BCM4401 100Base-T, with the b44 driver from 2.6.18).

  |>  There is one patch that may help that is not in 2.6.21-rc4 - it
  |>  does help my system at 48 Mbs. It is also attached.

Thank you. I will try this after I've had a little sleep, but it
doesn't look to me like the setup here needs a lot of help at 48 Mbs.

This card is now working much better than the other two wireless cards I
have, as long as I stay within 7 metres or so of the access point.

Good night,

Jim




From didit21 at gmail.com  Mon Mar 19 08:15:57 2007
From: didit21 at gmail.com (di dit)
Date: Mon, 19 Mar 2007 08:15:57 +0100
Subject: nx6310 - Radio turned off
In-Reply-To: <45FDDFEA.7020505@lwfinger.net>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<45FC0D01.9010702@lwfinger.net>
	<91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>
	<45FDDFEA.7020505@lwfinger.net>
Message-ID: <91ea105a0703190015j5dd8c678q49c51ce097a12137@mail.gmail.com>

2007/3/19, Larry Finger <larry.finger at lwfinger.net>:
> Please send me the contents of /etc/sysconfig/network/dhcp, which is the configuration
> file for DHCP.

Sorry, no such file on Debian and I can't find anything of interest in
the files related to
the dhcp-client package. Can you explain what kind of information you need?

didit.


From hs4233 at mail.mn-solutions.de  Mon Mar 19 08:55:00 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Mon, 19 Mar 2007 08:55:00 +0100
Subject: And what is the AP is not next to you?
Message-ID: <200703190855.00891.hs4233@mail.mn-solutions.de>

I'm more interested in wireless links there the AP is not next to 
you, e.g. I want to maximize range, not throughput. Is BCMxxxx 
usable in such a scenario or do I have to go with NDISWRAPPER?



From snpzee at gmail.com  Mon Mar 19 12:21:26 2007
From: snpzee at gmail.com (=?ISO-8859-13?Q?M=E2rti=F2=F0_Gail=EEtis?=)
Date: Mon, 19 Mar 2007 13:21:26 +0200
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703190015j5dd8c678q49c51ce097a12137@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<45FC0D01.9010702@lwfinger.net>
	<91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>
	<45FDDFEA.7020505@lwfinger.net>
	<91ea105a0703190015j5dd8c678q49c51ce097a12137@mail.gmail.com>
Message-ID: <eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>

My experience with nx6310 and bcm4311.
Last week installed Ubuntu Feisty Herd-5 on my lappy. Downloaded
kernel-2.6.21-RC3, compiled it, loaded firmware and everything works pretty
good. I will test performance using iperf this week, but it seams to be
pretty good, because using internet bandwith meter it shows 12.67 Mbps.
Thnx a lot to all developers!;)

snpz

On 3/19/07, di dit <didit21 at gmail.com> wrote:
>
> 2007/3/19, Larry Finger <larry.finger at lwfinger.net>:
> > Please send me the contents of /etc/sysconfig/network/dhcp, which is the
> configuration
> > file for DHCP.
>
> Sorry, no such file on Debian and I can't find anything of interest in
> the files related to
> the dhcp-client package. Can you explain what kind of information you
> need?
>
> didit.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070319/57a06f0f/attachment.html>

From tomas at puga.vdu.lt  Mon Mar 19 12:25:56 2007
From: tomas at puga.vdu.lt (Tomas Martisius)
Date: Mon, 19 Mar 2007 13:25:56 +0200
Subject: And what is the AP is not next to you?
In-Reply-To: <mailman.60.1174302056.12628.bcm43xx-dev@lists.berlios.de>
References: <mailman.60.1174302056.12628.bcm43xx-dev@lists.berlios.de>
Message-ID: <45FE7344.9010408@puga.vdu.lt>

Yes, I am interesting in range too. I can do some testing
on BCM4318 wireless chip.

Best regards,

Tomas

Date: Mon, 19 Mar 2007 08:55:00 +0100
> From: Holger Schurig <hs4233 at mail.mn-solutions.de>
> Subject: And what is the AP is not next to you?
> To: bcm43 <bcm43xx-dev at lists.berlios.de>
> Message-ID: <200703190855.00891.hs4233 at mail.mn-solutions.de>
> Content-Type: text/plain;  charset="us-ascii"
>
> I'm more interested in wireless links there the AP is not next to 
> you, e.g. I want to maximize range, not throughput. Is BCMxxxx 
> usable in such a scenario or do I have to go with NDISWRAPPER?
>
>
>
> ------------------------------
>
> _______________________________________________
>   



From johannes at sipsolutions.net  Mon Mar 19 12:33:29 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 19 Mar 2007 12:33:29 +0100
Subject: And what is the AP is not next to you?
In-Reply-To: <45FE7344.9010408@puga.vdu.lt>
References: <mailman.60.1174302056.12628.bcm43xx-dev@lists.berlios.de>
	<45FE7344.9010408@puga.vdu.lt>
Message-ID: <1174304009.5442.4.camel@johannes.berg>

On Mon, 2007-03-19 at 13:25 +0200, Tomas Martisius wrote:
> Yes, I am interesting in range too. I can do some testing
> on BCM4318 wireless chip.

According to some people you'll want to go out of spec and increase the
sifs which the chip allows you to do easily.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070319/8f981afa/attachment.pgp>

From didit21 at gmail.com  Mon Mar 19 18:28:08 2007
From: didit21 at gmail.com (di dit)
Date: Mon, 19 Mar 2007 18:28:08 +0100
Subject: nx6310 - Radio turned off
In-Reply-To: <eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<45FC0D01.9010702@lwfinger.net>
	<91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>
	<45FDDFEA.7020505@lwfinger.net>
	<91ea105a0703190015j5dd8c678q49c51ce097a12137@mail.gmail.com>
	<eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>
Message-ID: <91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>

Hi,

2007/3/19, M?rti?? Gail?tis <snpzee at gmail.com>:
> My experience with nx6310 and bcm4311.
> Last week installed Ubuntu Feisty Herd-5 on my lappy. Downloaded
> kernel-2.6.21-RC3, compiled it, loaded firmware and everything works pretty
> good. I will test performance using iperf this week, but it seams to be
> pretty good, because using internet bandwith meter it shows 12.67 Mbps.
> Thnx a lot to all developers!;)

It works quite well for me too, except the DHCP part.
I just tried on the same laptop a Netgear WG511 PC Card with the same
configuration in /etc/network/interfaces except for the interface name.
It works with DHCP. I tried again with the bcm4311 and it still does not
work with DHCP. No idea what's going on.

didit.

From ubq7 at stud.uni-karlsruhe.de  Mon Mar 19 18:47:38 2007
From: ubq7 at stud.uni-karlsruhe.de (Hendrik Sattler)
Date: Mon, 19 Mar 2007 18:47:38 +0100
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>
	<91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>
Message-ID: <200703191847.38439.ubq7@stud.uni-karlsruhe.de>

Am Montag 19 M?rz 2007 18:28 schrieb di dit:
> 2007/3/19, M?rti?? Gail?tis <snpzee at gmail.com>:
> > My experience with nx6310 and bcm4311.
> > Last week installed Ubuntu Feisty Herd-5 on my lappy. Downloaded
> > kernel-2.6.21-RC3, compiled it, loaded firmware and everything works
> > pretty good. I will test performance using iperf this week, but it seams
> > to be pretty good, because using internet bandwith meter it shows 12.67
> > Mbps. Thnx a lot to all developers!;)
>
> It works quite well for me too, except the DHCP part.
> I just tried on the same laptop a Netgear WG511 PC Card with the same
> configuration in /etc/network/interfaces except for the interface name.
> It works with DHCP. I tried again with the bcm4311 and it still does not
> work with DHCP. No idea what's going on.

Do you use the dhcp-client package or the dhcp3-client package? I suggest the 
latter.

HS


From larry.finger at lwfinger.net  Mon Mar 19 20:29:13 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 19 Mar 2007 14:29:13 -0500
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>	<45FC0D01.9010702@lwfinger.net>	<91ea105a0703180155r17c90c71mbf9fa066d864f920@mail.gmail.com>	<45FDDFEA.7020505@lwfinger.net>	<91ea105a0703190015j5dd8c678q49c51ce097a12137@mail.gmail.com>	<eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>
	<91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>
Message-ID: <45FEE489.3070309@lwfinger.net>

di dit wrote:
> Hi,
> 
> 2007/3/19, M?rti?? Gail?tis <snpzee at gmail.com>:
>> My experience with nx6310 and bcm4311.
>> Last week installed Ubuntu Feisty Herd-5 on my lappy. Downloaded
>> kernel-2.6.21-RC3, compiled it, loaded firmware and everything works pretty
>> good. I will test performance using iperf this week, but it seams to be
>> pretty good, because using internet bandwith meter it shows 12.67 Mbps.
>> Thnx a lot to all developers!;)
> 
> It works quite well for me too, except the DHCP part.
> I just tried on the same laptop a Netgear WG511 PC Card with the same
> configuration in /etc/network/interfaces except for the interface name.
> It works with DHCP. I tried again with the bcm4311 and it still does not
> work with DHCP. No idea what's going on.

Find out where DHCP is configured on your system, turn on debugging, and send a copy of the DHCP log
and the configuration file.

Larry


From larry.finger at lwfinger.net  Mon Mar 19 20:36:46 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Mon, 19 Mar 2007 14:36:46 -0500
Subject: And what is the AP is not next to you?
In-Reply-To: <200703190855.00891.hs4233@mail.mn-solutions.de>
References: <200703190855.00891.hs4233@mail.mn-solutions.de>
Message-ID: <45FEE64E.6020109@lwfinger.net>

Holger Schurig wrote:
> I'm more interested in wireless links there the AP is not next to 
> you, e.g. I want to maximize range, not throughput. Is BCMxxxx 
> usable in such a scenario or do I have to go with NDISWRAPPER?

If you don't have high throughput when you are close to the AP, you won't get range. I'm using
throughput as a relative measure of our progress. At the moment, you will probably do better with
the Windows driver and ndiswrapper. We are working on the problems, but I cannot promise a time that
they will be fixed.

Larry


From didit21 at gmail.com  Tue Mar 20 13:00:55 2007
From: didit21 at gmail.com (di dit)
Date: Tue, 20 Mar 2007 13:00:55 +0100
Subject: nx6310 - Radio turned off
In-Reply-To: <200703191847.38439.ubq7@stud.uni-karlsruhe.de>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>
	<eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>
	<91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>
	<200703191847.38439.ubq7@stud.uni-karlsruhe.de>
Message-ID: <91ea105a0703200500mb0c0288ta8341d8b2a16a116@mail.gmail.com>

Hi,

2007/3/19, Hendrik Sattler <ubq7 at stud.uni-karlsruhe.de>:
> Do you use the dhcp-client package or the dhcp3-client package? I suggest the
> latter.

Thanks for the suggestion. DHCP now works with the dhcp3-client
package. I find it a bit strange that the client has to issue several
DHCPDISCOVER before receiving a DHCPOFFER as I'm 20 centimeters away
from the DHCP server, but unless someone else has a problem with that,
I'll consider it is nitpicking and forget about it.
See the syslog output at the end of this message.

Thanks to everybody who helped me,

didit.

Mar 20 12:51:56 edacl kernel: bcm43xx: set security called,
.active_key = 0, .level = 1, .enabled = 1, .encrypt = 1
Mar 20 12:51:56 edacl dhclient: Internet Systems Consortium DHCP Client V3.0.4
Mar 20 12:51:56 edacl dhclient: Copyright 2004-2006 Internet Systems Consortium.
Mar 20 12:51:56 edacl dhclient: All rights reserved.
Mar 20 12:51:56 edacl dhclient: For info, please visit
http://www.isc.org/sw/dhcp/
Mar 20 12:51:56 edacl dhclient:
Mar 20 12:51:56 edacl kernel: bcm43xx: Microcode rev 0x122, pl 0x99
(2005-01-22  22:40:08)
Mar 20 12:51:56 edacl kernel: bcm43xx: Radio turned on
Mar 20 12:51:56 edacl kernel: bcm43xx: Radio enabled by hardware
Mar 20 12:51:56 edacl kernel: bcm43xx: Chip initialized
Mar 20 12:51:56 edacl kernel: bcm43xx: 32-bit DMA initialized
Mar 20 12:51:56 edacl kernel: bcm43xx: Keys cleared
Mar 20 12:51:56 edacl kernel: bcm43xx: Selected 802.11 core (phytype 2)
Mar 20 12:51:56 edacl kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
Mar 20 12:51:57 edacl dhclient: Listening on LPF/wlan0/00:14:a5:aa:6d:37
Mar 20 12:51:57 edacl dhclient: Sending on   LPF/wlan0/00:14:a5:aa:6d:37
Mar 20 12:51:57 edacl dhclient: Sending on   Socket/fallback
Mar 20 12:51:58 edacl dhclient: DHCPDISCOVER on wlan0 to
255.255.255.255 port 67 interval 3
Mar 20 12:52:01 edacl dhclient: DHCPDISCOVER on wlan0 to
255.255.255.255 port 67 interval 5
Mar 20 12:52:06 edacl dhclient: DHCPDISCOVER on wlan0 to
255.255.255.255 port 67 interval 13
Mar 20 12:52:08 edacl kernel: SoftMAC: Open Authentication completed
with 6e:dc:33:9f:77:c4
Mar 20 12:52:08 edacl kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
Mar 20 12:52:19 edacl dhclient: DHCPDISCOVER on wlan0 to
255.255.255.255 port 67 interval 15
Mar 20 12:52:19 edacl dhclient: DHCPOFFER from 192.168.0.254
Mar 20 12:52:19 edacl dhclient: DHCPREQUEST on wlan0 to 255.255.255.255 port 67
Mar 20 12:52:19 edacl kernel: wlan0: no IPv6 routers present
Mar 20 12:52:19 edacl dhclient: DHCPACK from 192.168.0.254
Mar 20 12:52:19 edacl postfix/master[3659]: reload configuration /etc/postfix
Mar 20 12:52:19 edacl dhclient: bound to 192.168.0.2 -- renewal in
395434 seconds.


From larry.finger at lwfinger.net  Tue Mar 20 16:44:26 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 20 Mar 2007 10:44:26 -0500
Subject: nx6325 bcm4311 driver patch
In-Reply-To: <45FFF685.1000900@glasswings.com.au>
References: <45FE81A9.3000301@glasswings.com.au>
	<45FEE551.9090404@lwfinger.net>
	<45FFF685.1000900@glasswings.com.au>
Message-ID: <4600015A.20709@lwfinger.net>

Andrew Pam wrote:
> Larry Finger wrote:
>> On my 4311, the mac80211 (the new name for dscape) driver doesn't get enough power to authenticate.
>> As a result, I am not able to do any debugging on that driver. You will have to do it.
> 
> I'll be happy to assist.  Where would you like me to start?

Build it, boot it and fix anything that doesn't work. ;-)

Larry


From larry.finger at lwfinger.net  Tue Mar 20 16:48:11 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 20 Mar 2007 10:48:11 -0500
Subject: nx6310 - Radio turned off
In-Reply-To: <91ea105a0703200500mb0c0288ta8341d8b2a16a116@mail.gmail.com>
References: <91ea105a0703162208n562e4320x7d7efcfa94f4b00@mail.gmail.com>	<eccf14b60703190421y8a6551p13fbdb698e81f1f5@mail.gmail.com>	<91ea105a0703191028q4e97123ayaf21d75e73d45b24@mail.gmail.com>	<200703191847.38439.ubq7@stud.uni-karlsruhe.de>
	<91ea105a0703200500mb0c0288ta8341d8b2a16a116@mail.gmail.com>
Message-ID: <4600023B.300@lwfinger.net>

di dit wrote:
> Hi,
> 
> 2007/3/19, Hendrik Sattler <ubq7 at stud.uni-karlsruhe.de>:
>> Do you use the dhcp-client package or the dhcp3-client package? I suggest the
>> latter.
> 
> Thanks for the suggestion. DHCP now works with the dhcp3-client
> package. I find it a bit strange that the client has to issue several
> DHCPDISCOVER before receiving a DHCPOFFER as I'm 20 centimeters away
> from the DHCP server, but unless someone else has a problem with that,
> I'll consider it is nitpicking and forget about it.
> See the syslog output at the end of this message.

The first three DHCPOFFERs were before authentication was completed and the link was ready. Your
dhcp client is just a bit eager. The first one after that was successful.

Larry



From will.dyson at gmail.com  Tue Mar 20 20:20:49 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Tue, 20 Mar 2007 15:20:49 -0400
Subject: Assertion failed in bcm43xx_mac80211
In-Reply-To: <8e6f94720703151658x66a4b24bxcbdbb1f463a1ad2@mail.gmail.com>
References: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>
	<200703151441.03054.mb@bu3sch.de>
	<8e6f94720703151658x66a4b24bxcbdbb1f463a1ad2@mail.gmail.com>
Message-ID: <8e6f94720703201220w78d7f2c9s86972f1b38003712@mail.gmail.com>

On 3/15/07, Will Dyson <will.dyson at gmail.com> wrote:
> On 3/15/07, Michael Buesch <mb at bu3sch.de> wrote:
> > On Thursday 15 March 2007 06:09, Will Dyson wrote:
> > > ssb: Sonics Silicon Backplane found on PCI device 0000:02:07.0
> > >
> > > bcm43xx_mac80211: Broadcom 4306 WLAN found
> >
> > Please also turn on ssb debugging.

This turned out to be the "30-bit DMA when more than 1G ram is
present" issue again. Ugh. A quick-and-dirty port of Larry Finger's
workaround from the softmac driver allows me to scan and associate
with an unencrypted AP.

I should have patches to post soon.

-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting


From Larry.Finger at lwfinger.net  Tue Mar 20 21:49:53 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 20 Mar 2007 15:49:53 -0500
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
Message-ID: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>

The code in the mac80211 version of radio_init2050 differs from the specs
in two places.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -3444,9 +3444,9 @@ static u16 radio2050_rfover_val(struct b
 			if (phy_register == BCM43xx_PHY_RFOVER) {
 				return 0x9B3;
 			} else if (phy_register == BCM43xx_PHY_RFOVERVAL) {
-				extlna |= (i << 8);
 				if (extlna)
 					extlna |= 0x8000;
+				extlna |= (i << 8);
 				switch (lpd) {
 				case LPD(0, 1, 1):
 					return 0x8F92;
@@ -3724,9 +3724,10 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_ANALOGOVERVAL);
 		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_CRS0);
 		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_CLASSCTL);
-		bcm43xx_write16(dev, BCM43xx_MMIO_PHY_RADIO,
-				bcm43xx_read16(dev, BCM43xx_MMIO_PHY_RADIO)
-				& 0x7FFF);
+		if (has_loopback_gain(phy)) {
+			bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_LO_MASK);
+			bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_LO_CTL);
+		}
 	}
 	if (i > 15)
 		ret = radio78;


From larry.finger at lwfinger.net  Wed Mar 21 01:05:45 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 20 Mar 2007 19:05:45 -0500
Subject: Assertion failed in bcm43xx_mac80211
In-Reply-To: <8e6f94720703201220w78d7f2c9s86972f1b38003712@mail.gmail.com>
References: <8e6f94720703142209s2cc8b9e3uab73fdc5f420d9d8@mail.gmail.com>	<200703151441.03054.mb@bu3sch.de>	<8e6f94720703151658x66a4b24bxcbdbb1f463a1ad2@mail.gmail.com>
	<8e6f94720703201220w78d7f2c9s86972f1b38003712@mail.gmail.com>
Message-ID: <460076D9.3020902@lwfinger.net>

Will Dyson wrote:
> 
> This turned out to be the "30-bit DMA when more than 1G ram is
> present" issue again. Ugh. A quick-and-dirty port of Larry Finger's
> workaround from the softmac driver allows me to scan and associate
> with an unencrypted AP.
> 
> I should have patches to post soon.

I knew this type of patch would be needed in mac80211, but had no way to test it.

I look forward to seeing your patch.

Larry





From proski at gnu.org  Wed Mar 21 02:10:14 2007
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 20 Mar 2007 21:10:14 -0400
Subject: Rate-Control like madwifi?
In-Reply-To: <45FDAE47.9040401@lipsia.de>
References: <45FDAE47.9040401@lipsia.de>
Message-ID: <1174439414.30662.6.camel@dv>

On Sun, 2007-03-18 at 22:25 +0100, Dirk Bossenz wrote:
> hello,
> 
> 
> I'm a completely newbie in driver-dev and interested in rate-control of
> PHY-Section. I had a look at the bcm-dev-doc's and list archive but
> nothing find out.
> 
> What's going on about this? I'd like to try implement algorithms for
> this. How can I start with the basics?

I suggest that you use the mac80211 layer.  Check out the wireless-dev
branch of Linux from
git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-dev.git
using git.  Enable bcm43xx_mac80211 driver.

The rate control algorithm for mac80211 can be found in
net/mac80211/rc80211_simple.c.  I would suggest that you try to port
ONOE and AMRR algorithms from MadWifi to the API used by
rc80211_simple.c.  The "Sample" algorithm has some Atheros specific
parts and cannot be ported as is.

-- 
Regards,
Pavel Roskin



From mb at bu3sch.de  Wed Mar 21 15:01:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Mar 2007 15:01:47 +0100
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
In-Reply-To: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
References: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
Message-ID: <200703211501.48178.mb@bu3sch.de>

On Tuesday 20 March 2007 21:49, Larry Finger wrote:
> The code in the mac80211 version of radio_init2050 differs from the specs
> in two places.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> ===================================================================
> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> @@ -3444,9 +3444,9 @@ static u16 radio2050_rfover_val(struct b
>  			if (phy_register == BCM43xx_PHY_RFOVER) {
>  				return 0x9B3;
>  			} else if (phy_register == BCM43xx_PHY_RFOVERVAL) {
> -				extlna |= (i << 8);
>  				if (extlna)
>  					extlna |= 0x8000;
> +				extlna |= (i << 8);

What's the difference?

>  				switch (lpd) {
>  				case LPD(0, 1, 1):
>  					return 0x8F92;
> @@ -3724,9 +3724,10 @@ u16 bcm43xx_radio_init2050(struct bcm43x
>  		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_ANALOGOVERVAL);
>  		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_CRS0);
>  		bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_CLASSCTL);
> -		bcm43xx_write16(dev, BCM43xx_MMIO_PHY_RADIO,
> -				bcm43xx_read16(dev, BCM43xx_MMIO_PHY_RADIO)
> -				& 0x7FFF);
> +		if (has_loopback_gain(phy)) {
> +			bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_LO_MASK);
> +			bcm43xx_phy_stackrestore(stack, BCM43xx_PHY_LO_CTL);
> +		}

Makes sense. Thanks.

>  	}
>  	if (i > 15)
>  		ret = radio78;
> 
> 

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar 21 16:29:57 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 21 Mar 2007 10:29:57 -0500
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
In-Reply-To: <200703211501.48178.mb@bu3sch.de>
References: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
	<200703211501.48178.mb@bu3sch.de>
Message-ID: <46014F75.7080609@lwfinger.net>

Michael Buesch wrote:
> On Tuesday 20 March 2007 21:49, Larry Finger wrote:
>> The code in the mac80211 version of radio_init2050 differs from the specs
>> in two places.
>>
>> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
>> ---
>>
>> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
>> ===================================================================
>> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
>> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
>> @@ -3444,9 +3444,9 @@ static u16 radio2050_rfover_val(struct b
>>  			if (phy_register == BCM43xx_PHY_RFOVER) {
>>  				return 0x9B3;
>>  			} else if (phy_register == BCM43xx_PHY_RFOVERVAL) {
>> -				extlna |= (i << 8);
>>  				if (extlna)
>>  					extlna |= 0x8000;
>> +				extlna |= (i << 8);
> 
> What's the difference?

The nonzero test for extlna should be made on the table value, not the table value or'd with i << 8.

Larry


From mb at bu3sch.de  Wed Mar 21 16:33:27 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Mar 2007 16:33:27 +0100
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
In-Reply-To: <46014F75.7080609@lwfinger.net>
References: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
	<200703211501.48178.mb@bu3sch.de> <46014F75.7080609@lwfinger.net>
Message-ID: <200703211633.27901.mb@bu3sch.de>

On Wednesday 21 March 2007 16:29, Larry Finger wrote:
> Michael Buesch wrote:
> > On Tuesday 20 March 2007 21:49, Larry Finger wrote:
> >> The code in the mac80211 version of radio_init2050 differs from the specs
> >> in two places.
> >>
> >> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> >> ---
> >>
> >> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> ===================================================================
> >> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> @@ -3444,9 +3444,9 @@ static u16 radio2050_rfover_val(struct b
> >>  			if (phy_register == BCM43xx_PHY_RFOVER) {
> >>  				return 0x9B3;
> >>  			} else if (phy_register == BCM43xx_PHY_RFOVERVAL) {
> >> -				extlna |= (i << 8);
> >>  				if (extlna)
> >>  					extlna |= 0x8000;
> >> +				extlna |= (i << 8);
> > 
> > What's the difference?
> 
> The nonzero test for extlna should be made on the table value, not the table value or'd with i << 8.

Oh, I see. Some brain screwage on my side :)

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Mar 21 17:17:52 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Mar 2007 17:17:52 +0100
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
In-Reply-To: <46014F75.7080609@lwfinger.net>
References: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
	<200703211501.48178.mb@bu3sch.de> <46014F75.7080609@lwfinger.net>
Message-ID: <200703211717.53055.mb@bu3sch.de>

On Wednesday 21 March 2007 16:29, Larry Finger wrote:
> Michael Buesch wrote:
> > On Tuesday 20 March 2007 21:49, Larry Finger wrote:
> >> The code in the mac80211 version of radio_init2050 differs from the specs
> >> in two places.
> >>
> >> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> >> ---
> >>
> >> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> ===================================================================
> >> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> >> @@ -3444,9 +3444,9 @@ static u16 radio2050_rfover_val(struct b
> >>  			if (phy_register == BCM43xx_PHY_RFOVER) {
> >>  				return 0x9B3;
> >>  			} else if (phy_register == BCM43xx_PHY_RFOVERVAL) {
> >> -				extlna |= (i << 8);
> >>  				if (extlna)
> >>  					extlna |= 0x8000;
> >> +				extlna |= (i << 8);
> > 
> > What's the difference?
> 
> The nonzero test for extlna should be made on the table value, not the table value or'd with i << 8.

Eh, wait.
The spec is not clear (at least to me) on this point:

# OR the loop position value left shifted by 8 with the External LNA Control Value
# If the External LNA Value isn't 0
   1. OR the value with 0x8000 
# OR this value with the table values below which are marked with Yes

From my understanding current code is correct.
But I see that one could interpret the spec in your way as well.
Joseph?

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Wed Mar 21 17:21:12 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 21 Mar 2007 11:21:12 -0500
Subject: Does this belong?
Message-ID: <46015B78.5080408@lwfinger.net>

Michael,

Should the bcm43xx-mac80211 driver be recognizing the 4301 devices? From what I recall, the V4
firmware does not handle B-only PHY's. If not, the patch below is required.

Larry
---

Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
===================================================================
--- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
+++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
@@ -3924,7 +3924,6 @@ static struct ssb_driver bcm43xx_ssb_dri
 #ifdef CONFIG_BCM43XX_MAC80211_PCI
 /* The PCI frontend stub */
 static const struct pci_device_id bcm43xx_pci_tbl[] = {
-	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4301) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4307) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4311) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4312) },

===



From mb at bu3sch.de  Wed Mar 21 17:24:33 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Mar 2007 17:24:33 +0100
Subject: Does this belong?
In-Reply-To: <46015B78.5080408@lwfinger.net>
References: <46015B78.5080408@lwfinger.net>
Message-ID: <200703211724.33760.mb@bu3sch.de>

On Wednesday 21 March 2007 17:21, Larry Finger wrote:
> Michael,
> 
> Should the bcm43xx-mac80211 driver be recognizing the 4301 devices? From what I recall, the V4
> firmware does not handle B-only PHY's. If not, the patch below is required.

Yes, I think this should be applied.
I'll apply it to my tree.

> Larry
> ---
> 
> Index: wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> ===================================================================
> --- wireless-mb.orig/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> +++ wireless-mb/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_main.c
> @@ -3924,7 +3924,6 @@ static struct ssb_driver bcm43xx_ssb_dri
>  #ifdef CONFIG_BCM43XX_MAC80211_PCI
>  /* The PCI frontend stub */
>  static const struct pci_device_id bcm43xx_pci_tbl[] = {
> -	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4301) },
>  	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4307) },
>  	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4311) },
>  	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4312) },
> 
> ===
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 
> 

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar 21 19:14:55 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 21 Mar 2007 13:14:55 -0500
Subject: 2.6.21-rc4-mm1
In-Reply-To: <20070320223643.d8cbc3f6.akpm@linux-foundation.org>
References: <20070319205623.299d0378.akpm@linux-foundation.org>	<1174433034.62033.16.camel@localhost>
	<20070320223643.d8cbc3f6.akpm@linux-foundation.org>
Message-ID: <4601761F.4000302@lwfinger.net>

Andrew Morton wrote:
> On Tue, 20 Mar 2007 17:23:54 -0600 Zan Lynx <zlynx at acm.org> wrote:
> 
>> On Mon, 2007-03-19 at 20:56 -0800, Andrew Morton wrote:
>>> Temporarily at
>>>
>>>   http://userweb.kernel.org/~akpm/2.6.21-rc4-mm1/
>>>
>>> Will appear later at
>>>
>>>   ftp://ftp.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.21-rc4/2.6.21-rc4-mm1/
>> First impressions:
>> Several of the same bugs as rc3-mm*:
>>       * Freezes immediately if I touch the wlan0 device after loading
>>         the new Broadcom wireless driver.

The version of the ssb driver in 2.6.21-rc4-mm1 has a bug that causes a kernel oops if the bcm43xx
chip contains a USB (dangling) core. This bug has been fixed in Michael Buesch's tree, but
apparently not yet in Linville's wireless-dev tree. The patch is as follows:

commit 08531ff130bcc8181d9294a66e25010f48eefb97
Author: Michael Buesch <mb at bu3sch.de>
Date:   Wed Mar 7 23:01:08 2007 +0100

    ssb: Don't freeze unregistered devices.

    Signed-off-by: Michael Buesch <mb at bu3sch.de>

diff --git a/drivers/ssb/core.c b/drivers/ssb/core.c
index 2facada..c956edf 100644
--- a/drivers/ssb/core.c
+++ b/drivers/ssb/core.c
@@ -163,6 +163,8 @@ int ssb_devices_freeze(struct ssb_bus *bus)
 		dev = &(bus->devices[i]);
 		if (!dev->dev->driver)
 			continue;
+		if (!device_is_registered(dev->dev))
+			continue;
 		drv = drv_to_ssb_drv(dev->dev->driver);
 		if (drv && drv->suspend) {
 			err = drv->suspend(dev, state);
@@ -185,6 +187,8 @@ int ssb_devices_thaw(struct ssb_bus *bus)
 		dev = &(bus->devices[i]);
 		if (!dev->dev->driver)
 			continue;
+		if (!device_is_registered(dev->dev))
+			continue;
 		drv = drv_to_ssb_drv(dev->dev->driver);
 		if (drv && drv->resume) {
 			err = drv->resume(dev);

Larry

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: usb_freeze
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070321/4e484d55/attachment.ksh>

From mb at bu3sch.de  Wed Mar 21 19:34:28 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Mar 2007 19:34:28 +0100
Subject: 2.6.21-rc4-mm1
In-Reply-To: <4601761F.4000302@lwfinger.net>
References: <20070319205623.299d0378.akpm@linux-foundation.org>
	<20070320223643.d8cbc3f6.akpm@linux-foundation.org>
	<4601761F.4000302@lwfinger.net>
Message-ID: <200703211934.28465.mb@bu3sch.de>

On Wednesday 21 March 2007 19:14, Larry Finger wrote:
> Andrew Morton wrote:
> > On Tue, 20 Mar 2007 17:23:54 -0600 Zan Lynx <zlynx at acm.org> wrote:
> > 
> >> On Mon, 2007-03-19 at 20:56 -0800, Andrew Morton wrote:
> >>> Temporarily at
> >>>
> >>>   http://userweb.kernel.org/~akpm/2.6.21-rc4-mm1/
> >>>
> >>> Will appear later at
> >>>
> >>>   ftp://ftp.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.21-rc4/2.6.21-rc4-mm1/
> >> First impressions:
> >> Several of the same bugs as rc3-mm*:
> >>       * Freezes immediately if I touch the wlan0 device after loading
> >>         the new Broadcom wireless driver.
> 
> The version of the ssb driver in 2.6.21-rc4-mm1 has a bug that causes a kernel oops if the bcm43xx
> chip contains a USB (dangling) core. This bug has been fixed in Michael Buesch's tree, but
> apparently not yet in Linville's wireless-dev tree. The patch is as follows:
> 
> commit 08531ff130bcc8181d9294a66e25010f48eefb97
> Author: Michael Buesch <mb at bu3sch.de>
> Date:   Wed Mar 7 23:01:08 2007 +0100
> 
>     ssb: Don't freeze unregistered devices.

No, that's a different fix for suspend.

This is the fix:
http://bu3sch.de/gitweb?p=wireless-dev.git;a=commitdiff;h=b87f743f3643ea162892dce0bbc91e6f026a49bf

Pull request was sent to John.

-- 
Greetings Michael.


From linville at tuxdriver.com  Wed Mar 21 19:59:00 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 21 Mar 2007 14:59:00 -0400
Subject: 2.6.21-rc4-mm1
In-Reply-To: <4601761F.4000302@lwfinger.net>
References: <20070319205623.299d0378.akpm@linux-foundation.org>
	<1174433034.62033.16.camel@localhost>
	<20070320223643.d8cbc3f6.akpm@linux-foundation.org>
	<4601761F.4000302@lwfinger.net>
Message-ID: <20070321185900.GC3801@tuxdriver.com>

On Wed, Mar 21, 2007 at 01:14:55PM -0500, Larry Finger wrote:
> Andrew Morton wrote:
> > On Tue, 20 Mar 2007 17:23:54 -0600 Zan Lynx <zlynx at acm.org> wrote:
> > 
> >> On Mon, 2007-03-19 at 20:56 -0800, Andrew Morton wrote:
> >>> Temporarily at
> >>>
> >>>   http://userweb.kernel.org/~akpm/2.6.21-rc4-mm1/
> >>>
> >>> Will appear later at
> >>>
> >>>   ftp://ftp.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.21-rc4/2.6.21-rc4-mm1/
> >> First impressions:
> >> Several of the same bugs as rc3-mm*:
> >>       * Freezes immediately if I touch the wlan0 device after loading
> >>         the new Broadcom wireless driver.
> 
> The version of the ssb driver in 2.6.21-rc4-mm1 has a bug that causes a kernel oops if the bcm43xx
> chip contains a USB (dangling) core. This bug has been fixed in Michael Buesch's tree, but
> apparently not yet in Linville's wireless-dev tree. The patch is as follows:

FWIW, that patch is in my tree as of yesterday.  Presumably it should
be in the next -mm.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Wed Mar 21 20:00:03 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 21 Mar 2007 15:00:03 -0400
Subject: 2.6.21-rc4-mm1
In-Reply-To: <200703211934.28465.mb@bu3sch.de>
References: <20070319205623.299d0378.akpm@linux-foundation.org>
	<20070320223643.d8cbc3f6.akpm@linux-foundation.org>
	<4601761F.4000302@lwfinger.net> <200703211934.28465.mb@bu3sch.de>
Message-ID: <20070321190003.GD3801@tuxdriver.com>

On Wed, Mar 21, 2007 at 07:34:28PM +0100, Michael Buesch wrote:
> On Wednesday 21 March 2007 19:14, Larry Finger wrote:
> > Andrew Morton wrote:
> > > On Tue, 20 Mar 2007 17:23:54 -0600 Zan Lynx <zlynx at acm.org> wrote:
> > > 
> > >> On Mon, 2007-03-19 at 20:56 -0800, Andrew Morton wrote:
> > >>> Temporarily at
> > >>>
> > >>>   http://userweb.kernel.org/~akpm/2.6.21-rc4-mm1/
> > >>>
> > >>> Will appear later at
> > >>>
> > >>>   ftp://ftp.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.21-rc4/2.6.21-rc4-mm1/
> > >> First impressions:
> > >> Several of the same bugs as rc3-mm*:
> > >>       * Freezes immediately if I touch the wlan0 device after loading
> > >>         the new Broadcom wireless driver.
> > 
> > The version of the ssb driver in 2.6.21-rc4-mm1 has a bug that causes a kernel oops if the bcm43xx
> > chip contains a USB (dangling) core. This bug has been fixed in Michael Buesch's tree, but
> > apparently not yet in Linville's wireless-dev tree. The patch is as follows:
> > 
> > commit 08531ff130bcc8181d9294a66e25010f48eefb97
> > Author: Michael Buesch <mb at bu3sch.de>
> > Date:   Wed Mar 7 23:01:08 2007 +0100
> > 
> >     ssb: Don't freeze unregistered devices.
> 
> No, that's a different fix for suspend.
> 
> This is the fix:
> http://bu3sch.de/gitweb?p=wireless-dev.git;a=commitdiff;h=b87f743f3643ea162892dce0bbc91e6f026a49bf
> 
> Pull request was sent to John.

That's "ssb-ohci: Completely disable the driver on non-embedded
systems", also in wireless-dev as of yesterday.

Thanks,

John
-- 
John W. Linville
linville at tuxdriver.com


From rdeaster at wbs.edu  Wed Mar 21 23:11:24 2007
From: rdeaster at wbs.edu (Robert Easter)
Date: Wed, 21 Mar 2007 17:11:24 -0500
Subject: Utter confusion in Fedora Six
In-Reply-To: <mailman.10930.1174504561.30659.bcm43xx-dev@lists.berlios.de>
References: <mailman.10930.1174504561.30659.bcm43xx-dev@lists.berlios.de>
Message-ID: <4601AD8C.6030007@wbs.edu>

New to this list, with one big question: Is there not some collection of 
patches that can be simply unpacked and applied according to distro or 
platform? I've spent nearly three full days, probably to accomplish 
about two days' worth of damage trying to get this Broadcom chip to sing 
on my new Acer TM2480. As far as I've found, this one or that might have 
made some progress on their machine at some point in the past and left 
their sure-fire command lines on a blog, and those lines might work part 
of the way down, and then fail. Well, you all know that drill! I'm 
enclosing the screen from my last attempt to get my wifi go high, and if 
anybody has any workable insights, (or magic patches), please share the 
wealth!

[root at localhost ndiswrapper-1.38]# make -C utils install

make: Entering directory `/home/robert/ndiswrapper-1.38/utils'

install -D -m 755 loadndisdriver /sbin/loadndisdriver

install -D -m 755 ndiswrapper /usr/sbin/ndiswrapper

install -D -m 755 ndiswrapper-buginfo /usr/sbin/ndiswrapper-buginfo


NOTE: Windows driver configuration file format has changed since 1.5. 
You must re-install Windows drivers if they were installed before.

make: Leaving directory `/home/robert/ndiswrapper-1.38/utils'

[root at localhost ndiswrapper-1.38]# make[1]: Entering directory `/hom

 > install -D -m 755 loadndisd

 > install -D -m 755 ndiswrapper /usr/sbin/ndiswrapper

 > install -D -m 755 ndiswrapper-buginfo /usr/sbin/ndiswrapper-buginfo

 >

 > NOTE: Windows driver configuration file format has changed

 > make[1]: Leaving direct

 > mkdir -p -m 0755 /usr/share/man/man8

 > install -m 644 ndiswrapper.

 > install -m 644 loadndisdriver.8 /usr/share/man/man8

 > [root at localhost ndiswrapper-1

 > install/manage Windows drivers for ndiswrapper

 >

 > usage: ndiswrapper OPTION

 > -i inffile install driver described by 'inffile'

 > -a devid driver use installed 'driver' for 'devid'

 > -r driver remove 'driver'

 > -l list installed drivers

 > -m write configuration for modprobe

 > -ma write module alias configuration for all devices

 > -mi write module install configuration for all devices

 > -v report version information

 >

 > where 'devid' is either PCIID or USBID of the form XXXX:XXXX,

 > as reported by 'lspci -n' or 'lsusb' for the card

 > [root at localhost ndiswrapper-1.38]#the end






From proski at gnu.org  Wed Mar 21 23:47:05 2007
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 21 Mar 2007 18:47:05 -0400
Subject: Utter confusion in Fedora Six
In-Reply-To: <4601AD8C.6030007@wbs.edu>
References: <mailman.10930.1174504561.30659.bcm43xx-dev@lists.berlios.de>
	<4601AD8C.6030007@wbs.edu>
Message-ID: <1174517226.3068.8.camel@dv>

On Wed, 2007-03-21 at 17:11 -0500, Robert Easter wrote:
> New to this list, with one big question: Is there not some collection of 
> patches that can be simply unpacked and applied according to distro or 
> platform?

I'm not aware of such collection.

>  I've spent nearly three full days, probably to accomplish 
> about two days' worth of damage trying to get this Broadcom chip to sing 
> on my new Acer TM2480. As far as I've found, this one or that might have 
> made some progress on their machine at some point in the past and left 
> their sure-fire command lines on a blog, and those lines might work part 
> of the way down, and then fail. Well, you all know that drill! I'm 
> enclosing the screen from my last attempt to get my wifi go high, and if 
> anybody has any workable insights, (or magic patches), please share the 
> wealth!

An lspci output for your card is worth of thousand words.

> [root at localhost ndiswrapper-1.38]# make -C utils install
> 
> make: Entering directory `/home/robert/ndiswrapper-1.38/utils'

ndiswrapper should be discussed in
ndiswrapper-general at lists.sourceforge.net

This list is for the native driver.

-- 
Regards,
Pavel Roskin



From josejx at gentoo.org  Thu Mar 22 01:43:55 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Wed, 21 Mar 2007 20:43:55 -0400
Subject: [PATCH] bcm43xx-mac80211: Change radio_init2050 to match specs
In-Reply-To: <200703211717.53055.mb@bu3sch.de>
References: <460048f1.Sz+VinhM/N8KG294%Larry.Finger@lwfinger.net>
	<200703211501.48178.mb@bu3sch.de> <46014F75.7080609@lwfinger.net>
	<200703211717.53055.mb@bu3sch.de>
Message-ID: <4601D14B.5090001@gentoo.org>

 >>From my understanding current code is correct.
> But I see that one could interpret the spec in your way as well.
> Joseph?

If the External LNA value, as read from the table, is non-zero, OR
that value with 0x8000 (which I think is the "enable the External
LNA flag).

I've updated the specs to reflect this.

-Joe




From ftoledo at docksud.com.ar  Thu Mar 22 04:09:40 2007
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Thu, 22 Mar 2007 00:09:40 -0300
Subject: combined on 2.6.20.3
Message-ID: <200703220009.46180.ftoledo@docksud.com.ar>

I try to test if the combined patch work on the last kernel

ntbkragnarok:/usr/src/linux-2.6.20.3# patch --dry-run -p1 
<../broadcom/combined_2.6.20.2.patch 
patching file drivers/net/wireless/bcm43xx/bcm43xx_main.c
patching file drivers/net/wireless/bcm43xx/bcm43xx_dma.c
Reversed (or previously applied) patch detected!  Assume -R? [n] 
Apply anyway? [n] 
Skipping patch.
12 out of 12 hunks ignored -- saving rejects to file 
drivers/net/wireless/bcm43xx/bcm43xx_dma.c.rej
patching file drivers/net/wireless/bcm43xx/bcm43xx.h
Hunk #3 FAILED at 766.
1 out of 3 hunks FAILED -- saving rejects to file 
drivers/net/wireless/bcm43xx/bcm43xx.h.rej
patching file drivers/net/wireless/bcm43xx/bcm43xx_wx.c
patching file net/ieee80211/ieee80211_tx.c
patching file include/net/ieee80211softmac.h
patching file net/ieee80211/softmac/ieee80211softmac_assoc.c
patching file drivers/net/wireless/bcm43xx/bcm43xx_phy.c
patching file drivers/net/wireless/bcm43xx/bcm43xx_radio.c
patching file drivers/net/wireless/bcm43xx/bcm43xx_ilt.c
patching file drivers/net/wireless/bcm43xx/bcm43xx_ilt.h
patching file net/ieee80211/softmac/ieee80211softmac_module.c
ntbkragnarok:/usr/src/linux-2.6.20.3# 

the module dont compile, has make anybody this patch for this kernel?
saludos!

-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070322/1ffa4fec/attachment.pgp>

From larry.finger at lwfinger.net  Thu Mar 22 05:12:01 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 21 Mar 2007 23:12:01 -0500
Subject: combined on 2.6.20.3
In-Reply-To: <200703220009.46180.ftoledo@docksud.com.ar>
References: <200703220009.46180.ftoledo@docksud.com.ar>
Message-ID: <46020211.8040307@lwfinger.net>

Fernando Toledo wrote:
> I try to test if the combined patch work on the last kernel

The patch you need is at ftp://lwfinger.dynalias.org/patches/combined_2.6.20.3.patch.

Larry


From proski at gnu.org  Thu Mar 22 05:12:31 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 22 Mar 2007 00:12:31 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <200703220009.46180.ftoledo@docksud.com.ar>
References: <200703220009.46180.ftoledo@docksud.com.ar>
Message-ID: <1174536751.3068.69.camel@dv>

On Thu, 2007-03-22 at 00:09 -0300, Fernando Toledo wrote:
> I try to test if the combined patch work on the last kernel
> 
> ntbkragnarok:/usr/src/linux-2.6.20.3# patch --dry-run -p1 
> <../broadcom/combined_2.6.20.2.patch 
> patching file drivers/net/wireless/bcm43xx/bcm43xx_main.c
> patching file drivers/net/wireless/bcm43xx/bcm43xx_dma.c
> Reversed (or previously applied) patch detected!  Assume -R? [n] 
> Apply anyway? [n] 
> Skipping patch.
> 12 out of 12 hunks ignored -- saving rejects to file 
> drivers/net/wireless/bcm43xx/bcm43xx_dma.c.rej
> patching file drivers/net/wireless/bcm43xx/bcm43xx.h
> Hunk #3 FAILED at 766.

Maybe we could have a git repository for the softmac driver?  That would
make it easy to generate new patches.  git is quite good an resolving
such conflicts.

Or maybe we could have a standalone driver package?  That would make it
even easier for the end users.  I can help.

-- 
Regards,
Pavel Roskin



From larry.finger at lwfinger.net  Thu Mar 22 05:22:57 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 21 Mar 2007 23:22:57 -0500
Subject: combined on 2.6.20.3
In-Reply-To: <1174536751.3068.69.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv>
Message-ID: <460204A1.6090906@lwfinger.net>

Pavel Roskin wrote:
> 
> Maybe we could have a git repository for the softmac driver?  That would
> make it easy to generate new patches.  git is quite good an resolving
> such conflicts.

We already have one - it is Linville's wireless-2.6 git tree. My patches are just for those who
choose not to download a complete git system.

> Or maybe we could have a standalone driver package?  That would make it
> even easier for the end users.  I can help.

We will need one for the day when mac80211 replaces softmac in the mainline kernel. What would we
need to do?

Larry





From proski at gnu.org  Thu Mar 22 05:34:52 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 22 Mar 2007 00:34:52 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <460204A1.6090906@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv>  <460204A1.6090906@lwfinger.net>
Message-ID: <1174538092.3068.81.camel@dv>

On Wed, 2007-03-21 at 23:22 -0500, Larry Finger wrote:
> Pavel Roskin wrote:
> > 
> > Maybe we could have a git repository for the softmac driver?  That would
> > make it easy to generate new patches.  git is quite good an resolving
> > such conflicts.
> 
> We already have one - it is Linville's wireless-2.6 git tree. My patches are just for those who
> choose not to download a complete git system.

Oh, I see.

Although it's unfortunate that I cannot test dadwifi and bcm43xx on the
same kernel.  It's quite bad, especially on the slow G3 PowerMac.

Perhaps I'll make a standalone build system just to deal with this
annoyance.

> > Or maybe we could have a standalone driver package?  That would make it
> > even easier for the end users.  I can help.
> 
> We will need one for the day when mac80211 replaces softmac in the mainline kernel. What would we
> need to do?

My "reference build system" can be downloaded by:
svn co https://svn.sourceforge.net/svnroot/orinoco/trunk
(ironically, the driver itself is rotten)

Just take Makefile and Kbuild, replace the orinoco stuff with whatever
you need and remove unneeded checks.

-- 
Regards,
Pavel Roskin



From linville at tuxdriver.com  Thu Mar 22 13:58:29 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 08:58:29 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <1174538092.3068.81.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv> <460204A1.6090906@lwfinger.net>
	<1174538092.3068.81.camel@dv>
Message-ID: <20070322125829.GC3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 12:34:52AM -0400, Pavel Roskin wrote:
> On Wed, 2007-03-21 at 23:22 -0500, Larry Finger wrote:
> > Pavel Roskin wrote:
> > > 
> > > Maybe we could have a git repository for the softmac driver?  That would
> > > make it easy to generate new patches.  git is quite good an resolving
> > > such conflicts.
> > 
> > We already have one - it is Linville's wireless-2.6 git tree. My patches are just for those who
> > choose not to download a complete git system.
> 
> Oh, I see.
> 
> Although it's unfortunate that I cannot test dadwifi and bcm43xx on the
> same kernel.  It's quite bad, especially on the slow G3 PowerMac.

Why not?  The wireless-dev kernel still has the softmac bcm43xx driver,
as well as the mac80211-based bcm43xx driver.

> > We will need one for the day when mac80211 replaces softmac in the mainline kernel. What would we
> > need to do?

Why?  What value do you predict in having an out-of-tree softmac
version available?  Would that effort be better spent on improving
the in-tree mac80211 version?

John
-- 
John W. Linville
linville at tuxdriver.com


From larry.finger at lwfinger.net  Thu Mar 22 15:09:23 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 22 Mar 2007 09:09:23 -0500
Subject: combined on 2.6.20.3
In-Reply-To: <20070322125829.GC3860@tuxdriver.com>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv> <460204A1.6090906@lwfinger.net>
	<1174538092.3068.81.camel@dv> <20070322125829.GC3860@tuxdriver.com>
Message-ID: <46028E13.8060903@lwfinger.net>

John W. Linville wrote:
> On Thu, Mar 22, 2007 at 12:34:52AM -0400, Pavel Roskin wrote:
>> On Wed, 2007-03-21 at 23:22 -0500, Larry Finger wrote:
>>> Pavel Roskin wrote:
>>>> Maybe we could have a git repository for the softmac driver?  That would
>>>> make it easy to generate new patches.  git is quite good an resolving
>>>> such conflicts.
>>> We already have one - it is Linville's wireless-2.6 git tree. My patches are just for those who
>>> choose not to download a complete git system.
>> Oh, I see.
>>
>> Although it's unfortunate that I cannot test dadwifi and bcm43xx on the
>> same kernel.  It's quite bad, especially on the slow G3 PowerMac.
> 
> Why not?  The wireless-dev kernel still has the softmac bcm43xx driver,
> as well as the mac80211-based bcm43xx driver.
> 
>>> We will need one for the day when mac80211 replaces softmac in the mainline kernel. What would we
>>> need to do?
> 
> Why?  What value do you predict in having an out-of-tree softmac
> version available?  Would that effort be better spent on improving
> the in-tree mac80211 version?

With mac80211's use of V4 firmware, none of the 802.11b interfaces will be supported, and I think
they should. I'm not planning on any improvements. Only interface changes will be implemented.

Larry


From mb at bu3sch.de  Thu Mar 22 17:02:07 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 22 Mar 2007 17:02:07 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <20070322125829.GC3860@tuxdriver.com>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174538092.3068.81.camel@dv> <20070322125829.GC3860@tuxdriver.com>
Message-ID: <200703221702.08127.mb@bu3sch.de>

On Thursday 22 March 2007 13:58, John W. Linville wrote:
> Why?  What value do you predict in having an out-of-tree softmac
> version available?  Would that effort be better spent on improving
> the in-tree mac80211 version?

Once mac80211 is merged we probaby need a (out of tree?) fork of the
bcm43xx-softmac to support old 802.11b cards. The new driver can't
support this anymore (issues with firmware. It's simply too hard
to support both architectures in one driver).
We could probably still leave a stripped down bcm43xx-softmac
in the kernel, though that would require for softmac to stay there, too.
I lean towards doing an out of tree tarball to get the legacy stuff
out of the main kernel tree. Larry, some opinion?

-- 
Greetings Michael.


From john.s.gustafsson at gmail.com  Sat Mar 24 15:33:51 2007
From: john.s.gustafsson at gmail.com (John Gustafsson)
Date: Sat, 24 Mar 2007 15:33:51 +0100
Subject: BCM4310 UART [14e4:4312] (rev 01) partly working
Message-ID: <1174746831.6055.9.camel@john-laptop>

Hi bcm43xx-developers, 

I'm not sure whether this information is of interest for you, but here
it is: (bcm4310 is not in the the list on the website - is it actually a
4312?)

NETWORK CARD
03:00.0 Network controller [0280]: Broadcom Corporation BCM4310 UART
[14e4:4312] (rev 01)
        Subsystem: Hewlett-Packard Company Unknown device [103c:1361]
        Flags: bus master, fast devsel, latency 0, IRQ 11
        Memory at c0400000 (32-bit, non-prefetchable) [size=16K]
        Capabilities: [40] Power Management version 2
        Capabilities: [58] Message Signalled Interrupts: Mask- 64bit-
Queue=0/0 Enable-
        Capabilities: [d0] Express Legacy Endpoint IRQ 0

INSTALLATION
On a HP Pavilion dv9074ae laptop, wireless networking almost worked
out-of-the-box when installing Ubuntu Feisty beta using the Live-CD. I
only had extract the firmware with 
sudo apt-get install bcm43xx-fwcutter
(that is, it used http://boredklink.googlepages.com/wl_apsta.o)
Me like! 

"TEST RESULT"
Router: D-LINK DI-524 AirPlus G 802.11g/2.4GHz
WEP: Working, but it's slow 
WPA: Not working (at least not out-of-the-box with NetworkManager in
Ubuntu Feisy beta)

Cheers,
John 



From mb at bu3sch.de  Sun Mar 25 16:13:23 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 25 Mar 2007 16:13:23 +0200
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
Message-ID: <200703251613.23880.mb@bu3sch.de>

On Sunday 25 March 2007 15:45, Larry Finger wrote:
> From: David Woodhouse <dwmw2 at infradead.org>
> 
> Recent changes in the specs that were introduced in commit 
> 740ac4fb08866d702be90f167665d03759bd27d0 were incorrect and resulted in machine check
> errors on the PPC architecture for G PHY's with a revision number equal to 1. The
> two offending changes are reverted.

I'm not sure this patch is complete.
Joseph made changes to the specs that should fix the issue completely.
I didn't look at the changes, yet.

> Signed-off-by: David Woodhouse <dwmw2 at infradead.org>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> John,
> 
> This fix should be applied to wireless-2.6 and set to 'upstream-fixes'. I hope is makes
> it into 2.6.21 before the final release. The debugging of this issue was mostly done
> by David with additional help by Pavil Roskin.
> 
> Larry
> 
> 
> Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
> ===================================================================
> --- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
> +++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
> @@ -762,7 +762,7 @@ static void bcm43xx_phy_initb5(struct bc
>  	if (radio->version == 0x2050)
>  		bcm43xx_phy_write(bcm, 0x0038, 0x0667);
>  
> -	if (phy->type == BCM43xx_PHYTYPE_G) {
> +	if (phy->connected) {
>  		if (radio->version == 0x2050) {
>  			bcm43xx_radio_write16(bcm, 0x007A,
>  					      bcm43xx_radio_read16(bcm, 0x007A)
> @@ -1197,7 +1197,7 @@ static void bcm43xx_phy_initg(struct bcm
>  		bcm43xx_phy_write(bcm, 0x0811, 0x0400);
>  		bcm43xx_phy_write(bcm, 0x0015, 0x00C0);
>  	}
> -	if (phy->connected) {
> +	if (phy->rev >= 2 && phy->connected) {
>  		tmp = bcm43xx_phy_read(bcm, 0x0400) & 0xFF;
>  		if (tmp < 6) {
>  			bcm43xx_phy_write(bcm, 0x04C2, 0x1816);
> 
> 

-- 
Greetings Michael.


From linville at tuxdriver.com  Thu Mar 22 22:32:30 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 17:32:30 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <4602ED54.1000405@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<200703222057.22530.mb@bu3sch.de> <4602ED54.1000405@lwfinger.net>
Message-ID: <20070322213230.GL3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 03:55:48PM -0500, Larry Finger wrote:
> Michael Buesch wrote:
> > 
> > Ah, and yeah. There is the issue of symbol clashes with bcm43xx-mac80211.
> > Is that an issue when built modular? We should make life of distributors
> > easy by allowing both bcm43xx-sm and bcm43xx-mac80211 be loaded at the
> > same time.
> 
> I don't think there are any symbol clashes. I just used the mb tree to build a kernel with mac80211,
> ieee80211softmac, and both flavors of bcm43xx. The only change I made was to take the PCI_id for the
> 4311 out of the mac80211 version. It compiled cleanly, booted up fine, loaded bcm43xx-softmac and is
> running correctly.

Did you "=y" the config options?  That is what causes the problem
when linking the kernel image.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Thu Mar 22 22:31:35 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 17:31:35 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <4602F09F.2090206@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174538092.3068.81.camel@dv> <20070322125829.GC3860@tuxdriver.com>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<20070322202758.GH3860@tuxdriver.com>
	<4602F09F.2090206@lwfinger.net>
Message-ID: <20070322213135.GK3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 04:09:51PM -0500, Larry Finger wrote:
> John W. Linville wrote:

> > Is converting the softmac driver to mac80211 (as bcm43xx-old or
> > somesuch) really a bigger job than trying to maintain out-of-tree
> > code for both the driver and the softmac component from now on?
> 
> Are you saying that two flavors of bcm43xx could be in-tree as long as both use mac80211 and softmac
> is discarded? I wasn't aware that this was a possibility. Of course, that would be a lot less work
> in the long run. There would be substantial work in the beginning, but very little afterward.

I don't see why not, especially if their IDs are such that they do not compete to control the same hardware.

> > I'd much rather see two drivers, one for v3 firmware and one for
> > later firmware.  Why is this such a problem?  Afterall, at one time
> > the mac80211 (then d80211) driver supported v3 firmware.
> 
> Based on Michael's comments, I think it would be easier to teach bcm43xx-softmac to work with
> mac80211 than it would be to put V3 firmware back in bcm43xx-mac80211. Do you agree Michael?

That makes sense to me.  I appreciate that there is some up-front
work, but as you acknowledge I think it is the most efficient choice
in the long run.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Thu Mar 22 22:27:56 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 17:27:56 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <1174597365.27496.24.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<200703222057.22530.mb@bu3sch.de>
	<4602E8BE.1090509@lwfinger.net> <1174597365.27496.24.camel@dv>
Message-ID: <20070322212756.GJ3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 05:02:45PM -0400, Pavel Roskin wrote:

> But what's needed now is a working standalone driver for all supported
> cards.

Out of kernel drivers are a distraction, and IMHO should be avoided.

-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Thu Mar 22 22:26:38 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 17:26:38 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <1174597365.27496.24.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<200703222057.22530.mb@bu3sch.de>
	<4602E8BE.1090509@lwfinger.net> <1174597365.27496.24.camel@dv>
Message-ID: <20070322212638.GI3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 05:02:45PM -0400, Pavel Roskin wrote:
> On Thu, 2007-03-22 at 15:36 -0500, Larry Finger wrote:
> > > I think softmac and bcm43xx-sm should be in one tarball and should be built
> > > together with one make invocation. Just "melt" the codebases together. :)
> 
> That's another problem with symbols if softmac is enabled in the kernel.
> Unless softmac is changing quickly or has major bugs in the recent
> kernels, I suggest leaving it in the kernel.

Both the old driver and softmac are likely to remain in the kernel
for some period of time (however short that might be).

When the drivers come out, softmac comes out too.  It certainly will
not be left in the kernel to support an out of kernel driver.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Thu Mar 22 21:27:58 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 16:27:58 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <4602DA72.1010306@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174538092.3068.81.camel@dv> <20070322125829.GC3860@tuxdriver.com>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
Message-ID: <20070322202758.GH3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 02:35:14PM -0500, Larry Finger wrote:

> Developing a V3 firmware driver for 802.11b devices doesn't seem to be viable. From what I see in
> the latest versions of the specifications, support for 802.11b devices is disappearing from the
> Broadcom drivers. Thus, I think a standalone bcm43xx-softmac solution would be best.

I'm not sure I follow the reasoning here.  Won't the softmac driver
still need v3 firmware?

Is converting the softmac driver to mac80211 (as bcm43xx-old or
somesuch) really a bigger job than trying to maintain out-of-tree
code for both the driver and the softmac component from now on?

You are also imposing upon distros a choice between shipping
out-of-kernel drivers or just not supporting certain hardware.
Both choices suck -- I can elaborate if it isn't clear why.

I'd much rather see two drivers, one for v3 firmware and one for
later firmware.  Why is this such a problem?  Afterall, at one time
the mac80211 (then d80211) driver supported v3 firmware.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Thu Mar 22 18:32:26 2007
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 22 Mar 2007 13:32:26 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <1174581957.18988.21.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv> <460204A1.6090906@lwfinger.net>
	<1174538092.3068.81.camel@dv> <20070322125829.GC3860@tuxdriver.com>
	<1174581957.18988.21.camel@dv>
Message-ID: <20070322173226.GF3860@tuxdriver.com>

On Thu, Mar 22, 2007 at 12:45:57PM -0400, Pavel Roskin wrote:

> Having a mac80211 driver with v3 firmware would be a first step at
> bisecting the bug, but I guess it would be very time consuming.  On the
> other hand, it could replace the softmac driver eventually.

It sounds like we should consider this.  I am not keen on keeping
softmac around indefinitely.

John
-- 
John W. Linville
linville at tuxdriver.com


From stefano.brivio at polimi.it  Fri Mar 23 20:12:19 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 23 Mar 2007 20:12:19 +0100
Subject: APHY: bcm43xx_radio_set_tx_iq() seems wrong.
In-Reply-To: <200703231720.33621.mb@bu3sch.de>
References: <200703231720.33621.mb@bu3sch.de>
Message-ID: <20070323201219.3894574e@localhost>

On Fri, 23 Mar 2007 17:20:33 +0100
Michael Buesch <mb at bu3sch.de> wrote:

> > void bcm43xx_radio_set_tx_iq(struct bcm43xx_private *bcm)
> > {
> > 	static const u8 data_high[5] = { 0x00, 0x40, 0x80, 0x90, 0xD0 };
> > 	static const u8 data_low[5]  = { 0x00, 0x01, 0x05, 0x06, 0x0A };
> > 	u16 tmp = bcm43xx_radio_read16(bcm, 0x001E);
> > 	int i, j;
> >
> > 	for (i = 0; i < 5; i++) {
> > 		for (j = 0; j < 5; j++) {
> > 			if (tmp == (data_high[i] << 4 | data_low[j])) {
> 
> This leftshift by 4 seems wrong, as the data_high values already look
> like leftshifted.

Sorry, my fault, patches coming.


--
Ciao
Stefano


From stefano.brivio at polimi.it  Fri Mar 23 20:21:39 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 23 Mar 2007 20:21:39 +0100
Subject: [PATCH] bcm43xx: fix radio_set_tx_iq
Message-ID: <20070323202139.7f37b32a@localhost>

Fix a duplicated leftshift in bcm43xx_radio_set_tx_iq. data_high values are
already leftshifted. Thanks to Michael Buesch for spotting this.

Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>

---

diff --git a/drivers/net/wireless/bcm43xx/bcm43xx_radio.c b/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
index 32beb91..d153b58 100644
--- a/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
+++ b/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
@@ -1579,7 +1579,7 @@ void bcm43xx_radio_set_tx_iq(struct bcm4
 	
 	for (i = 0; i < 5; i++) {
 		for (j = 0; j < 5; j++) {
-			if (tmp == (data_high[i] << 4 | data_low[j])) {
+			if (tmp == (data_high[i] | data_low[j])) {
 				bcm43xx_phy_write(bcm, 0x0069, (i - j) << 8 | 0x00C0);
 				return;
 			}


From stefano.brivio at polimi.it  Fri Mar 23 20:23:43 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 23 Mar 2007 20:23:43 +0100
Subject: [PATCH] bcm43xx-mac80211: fix radio_set_tx_iq
Message-ID: <20070323202343.0e7ea0e7@localhost>

Fix a duplicated leftshift in bcm43xx_radio_set_tx_iq. data_high values are
already leftshifted. Thanks to Michael Buesch for spotting this.

Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>

---

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
index 10a82b1..a2c52f6 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
@@ -3802,7 +3802,7 @@ void bcm43xx_radio_set_tx_iq(struct bcm4
 
 	for (i = 0; i < 5; i++) {
 		for (j = 0; j < 5; j++) {
-			if (tmp == (data_high[i] << 4 | data_low[j])) {
+			if (tmp == (data_high[i] | data_low[j])) {
 				bcm43xx_phy_write(dev, 0x0069, (i - j) << 8 | 0x00C0);
 				return;
 			}


From stefano.brivio at polimi.it  Fri Mar 23 20:46:27 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Fri, 23 Mar 2007 20:46:27 +0100
Subject: RFC: Future plans for bcm43xx-softmac
In-Reply-To: <4604106F.7080003@lwfinger.net>
References: <4604106F.7080003@lwfinger.net>
Message-ID: <20070323204627.183d2c21@localhost>

On Fri, 23 Mar 2007 12:37:51 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> I think we have a plan for the future of bcm43xx-softmac once the
> bcm43xx-mac80211 version goes into mainline. Unfortunately it cannot just
> be abandoned as there will be no support for 802.11b-only devices in
> bcm43xx-mac80211.
> 
> The steps to be done are as follows:
> 
> 1. Change the namespace from bcm43xx to bcm4301. This will both reflect
> the purpose of the changed driver as well as prevent namespace collisions
> with the bcm43xx-mac80211 version in case both are built into the kernel.

I'm quite sure you know, bcm4301 isn't the only 802.11b-only device.
There's bcm4303 too. Anyway, naming the driver bcm4301 sounds reasonable to
me.

> Please comment on this plan.

ACK.


--
Ciao
Stefano


From mb at bu3sch.de  Sat Mar 24 17:42:23 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 24 Mar 2007 17:42:23 +0100
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
Message-ID: <200703241742.23639.mb@bu3sch.de>

On Friday 23 March 2007 22:24, Will Dyson wrote:
> When the chip is limited to 30bit DMA, allocate RX buffers in ZONE_DMA. When
> the network stack passes us TX buffers that cannot be mapped because of the
> limitation (with an address > 1GB), allocate a bounce buffer in ZONE_DMA and
> copy the packet there.

I _still_ think that this should be fixed in the arch DMA code
and _not_ in every single driver on earth. But I discussed this in
the past.

> Signed-off-by: Will Dyson <will.dyson at gmail.com>
> ---
>  .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   52
> +++++++++++++++++---
>  1 files changed, 45 insertions(+), 7 deletions(-)
> 
> diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
> b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
> index d09b849..8f6d434 100644
> --- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
> +++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
> @@ -397,6 +397,9 @@ static int alloc_ringmemory(struct bcm43xx_dmaring
> *ring)

Your patches are all damaged. Please fix your mailer.

>  {
>      struct device *dev = ring->dev->dev->dev;
> 
> +    /* Dont need to test for 30bit dma here.
> +     * dma_alloc_coherent respects the dma_mask
> +     */
>      ring->descbase = dma_alloc_coherent(dev, BCM43xx_DMA_RINGMEMSIZE,
>                          &(ring->dmabase), GFP_KERNEL);
>      if (!ring->descbase) {
> @@ -549,11 +552,15 @@ static int alloc_initial_descbuffers(struct
> bcm43xx_dmaring *ring)
>      int i, err = -ENOMEM;
>      struct bcm43xx_dmadesc_generic *desc;
>      struct bcm43xx_dmadesc_meta *meta;
> +    gfp_t flags = GFP_KERNEL;
> +
> +    if (bcm43xx_dma30(ring->dev))
> +        flags = GFP_DMA;

Ehm, no. This would always allocate in the DMA zone, even if there
is no requirement to do so (on i386 for example).

>      for (i = 0; i < ring->nr_slots; i++) {
>          desc = ring->ops->idx2desc(ring, i, &meta);
> 
> -        err = setup_rx_descbuffer(ring, desc, meta, GFP_KERNEL);
> +        err = setup_rx_descbuffer(ring, desc, meta, flags);
>          if (err) {
>              printk(KERN_ERR PFX "Failed to allocate initial
> descbuffers\n");
>              goto err_unwind;
> @@ -730,6 +737,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct
> bcm43xx_wldev *dev,
>      struct bcm43xx_dmaring *ring;
>      int err;
>      int nr_slots;
> +    gfp_t dma_flags = GFP_KERNEL;
> 
>      ring = kzalloc(sizeof(*ring), GFP_KERNEL);
>      if (!ring)
> @@ -744,9 +752,12 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct
> bcm43xx_wldev *dev,
>      if (!ring->meta)
>          goto err_kfree_ring;
>      if (for_tx) {
> +        if (bcm43xx_dma30(dev))
> +            dma_flags = GFP_DMA;

Same here.

> +        /* only this allocation is for DMA */
>          ring->txhdr_cache = kcalloc(nr_slots,
>                          sizeof(struct bcm43xx_txhdr_fw4),
> -                        GFP_KERNEL);
> +                        dma_flags);
>          if (!ring->txhdr_cache)
>              goto err_kfree_meta;
>      }
> @@ -1020,9 +1031,11 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
> *ring,
>      const struct bcm43xx_dma_ops *ops = ring->ops;
>      u8 *header;
>      int slot;
> +    int err;
>      struct bcm43xx_dmadesc_generic *desc;
>      struct bcm43xx_dmadesc_meta *meta;
>      struct bcm43xx_dmadesc_meta *meta_hdr;
> +    struct sk_buff *bounce_skb;
> 
>  #define SLOTS_PER_PACKET  2
>      assert(skb_shinfo(skb)->nr_frags == 0);
> @@ -1052,9 +1065,27 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
> *ring,
>      memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
>      meta->skb = skb;
>      meta->is_last_fragment = 1;
> +
>      meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> -    if(dma_mapping_error(meta->dmaaddr))
> -        goto out_unmap_hdr;
> +
> +    /* create a bounce buffer in zone_dma on mapping failure. */
> +    if (dma_mapping_error(meta->dmaaddr)) {
> +        bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC|GFP_DMA);
                                                         ^^^^^^
Whitespace.


> +        if(!bounce_skb) {
             ^
Whitespace.

> +            err = -ENOMEM;
> +            goto out_unmap_hdr;
> +        }
> +
> +        memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
> +        dev_kfree_skb_any(skb);
> +        skb = bounce_skb;
> +        meta->skb = skb;
> +        meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
> +        if (dma_mapping_error(meta->dmaaddr)) {
> +            err = -EIO;
> +            goto out_free_bounce;
> +        }
> +    }
> 
>      ops->fill_descriptor(ring, desc, meta->dmaaddr,
>                   skb->len, 0, 1, 1);
> @@ -1064,10 +1095,12 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
> *ring,
>      ops->poke_tx(ring, next_slot(ring, slot));
>      return 0;
> 
> +out_free_bounce:
> +    dev_kfree_skb_any(skb);
>  out_unmap_hdr:
>      unmap_descbuffer(ring, meta_hdr->dmaaddr,
>              sizeof(struct bcm43xx_txhdr_fw4), 1);
> -    return -EIO;
> +    return err;
>  }
> 
>  int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
> @@ -1088,7 +1121,7 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
> 
>      err = dma_tx_fragment(ring, skb, ctl);
>      if (unlikely(err)) {
> -        printkl(KERN_ERR PFX "DMA tx mapping failure\n");
> +        printkl(KERN_ERR PFX "DMA tx failure\n");
>          return NETDEV_TX_BUSY;
>      }
> 
> @@ -1186,6 +1219,7 @@ static void dma_rx(struct bcm43xx_dmaring *ring,
>      u16 len;
>      int err;
>      dma_addr_t dmaaddr;
> +    gfp_t dma_flags;
> 
>      desc = ops->idx2desc(ring, *slot, &meta);
> 
> @@ -1253,8 +1287,12 @@ static void dma_rx(struct bcm43xx_dmaring *ring,
>          goto drop;
>      }
> 
> +    dma_flags = GFP_ATOMIC;
> +    if (bcm43xx_dma30(ring->dev))
> +        dma_flags |= GFP_DMA;

always DMA...

>      dmaaddr = meta->dmaaddr;
> -    err = setup_rx_descbuffer(ring, desc, meta, GFP_ATOMIC);
> +    err = setup_rx_descbuffer(ring, desc, meta, dma_flags);
>      if (unlikely(err)) {
>          dprintkl(KERN_ERR PFX "DMA RX: setup_rx_descbuffer() failed\n");
>          sync_descbuffer_for_device(ring, dmaaddr,
> -- 
> 1.5.0.3
> 
> 
> 

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 17:20:33 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 17:20:33 +0100
Subject: APHY: bcm43xx_radio_set_tx_iq() seems wrong.
Message-ID: <200703231720.33621.mb@bu3sch.de>

> void bcm43xx_radio_set_tx_iq(struct bcm43xx_private *bcm)
> {
> 	static const u8 data_high[5] = { 0x00, 0x40, 0x80, 0x90, 0xD0 };
> 	static const u8 data_low[5]  = { 0x00, 0x01, 0x05, 0x06, 0x0A };
> 	u16 tmp = bcm43xx_radio_read16(bcm, 0x001E);
> 	int i, j;
>
> 	for (i = 0; i < 5; i++) {
> 		for (j = 0; j < 5; j++) {
> 			if (tmp == (data_high[i] << 4 | data_low[j])) {

This leftshift by 4 seems wrong, as the data_high values already look
like leftshifted.

> 				bcm43xx_phy_write(bcm, 0x0069, (i - j) << 8 | 0x00C0);
> 				return;
> 			}
> 		}
> 	}
> }
-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 16:10:55 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 16:10:55 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <20070322202758.GH3860@tuxdriver.com>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<4602DA72.1010306@lwfinger.net>
	<20070322202758.GH3860@tuxdriver.com>
Message-ID: <200703231610.55350.mb@bu3sch.de>

On Thursday 22 March 2007 21:27, John W. Linville wrote:
> Is converting the softmac driver to mac80211 (as bcm43xx-old or
> somesuch) really a bigger job than trying to maintain out-of-tree
> code for both the driver and the softmac component from now on?

Sure, it can be done. But it introduces bugs and it has to be done. ;)
I don't stop someone from doing it, though.

> You are also imposing upon distros a choice between shipping
> out-of-kernel drivers or just not supporting certain hardware.
> Both choices suck -- I can elaborate if it isn't clear why.

I see. Good point.

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Mar 22 20:57:22 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 22 Mar 2007 20:57:22 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <4602DA72.1010306@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
Message-ID: <200703222057.22530.mb@bu3sch.de>

On Thursday 22 March 2007 20:35, Larry Finger wrote:
> Michael Buesch wrote:
> > On Thursday 22 March 2007 13:58, John W. Linville wrote:
> >> Why?  What value do you predict in having an out-of-tree softmac
> >> version available?  Would that effort be better spent on improving
> >> the in-tree mac80211 version?
> > 
> > Once mac80211 is merged we probaby need a (out of tree?) fork of the
> > bcm43xx-softmac to support old 802.11b cards. The new driver can't
> > support this anymore (issues with firmware. It's simply too hard
> > to support both architectures in one driver).
> > We could probably still leave a stripped down bcm43xx-softmac
> > in the kernel, though that would require for softmac to stay there, too.
> > I lean towards doing an out of tree tarball to get the legacy stuff
> > out of the main kernel tree. Larry, some opinion?
> 
> To me, continuing support of 802.11b cards is a given.
> 
> Knowing that there are problems with SoftMAC that will never be fixed, I think it should be removed
> from the kernel. Leaving it there would encourage its use and give the wrong impression. I have no
> problems with my continuing to support an out-of-tree version. Of course, I hope that the number of
> API and ABI breakages would be minimal. To my knowledge, the current code base provides close to
> optimal performance with the 802.11b cards. Of course, there is only one in our data base and they
> are not that abundant.
> 
> Pavel clearly favors an out-of-tree solution over a patch set to add bcm43xx-softmac back into a
> source tree. That is OK with me.
> 
> Developing a V3 firmware driver for 802.11b devices doesn't seem to be viable. From what I see in
> the latest versions of the specifications, support for 802.11b devices is disappearing from the
> Broadcom drivers. Thus, I think a standalone bcm43xx-softmac solution would be best.

Ok, nice.
So what if you start to prepare such an out-of-tree tarball?
Such a tarball would:
- Contain softmac code.
- bcm43xx-sm code.
- Makefiles to build all these as modules against the installed kernel.
- Probably some compatibility stuff to make it compile against older kernels.
- Would have all A and G devices ripped out of the PCI device ID list (important!)

Besides that I would _not_ remove all A and G code (phy code and stuff),
as that introduces a too high risk of breaking things for so little gain (slightly
smaller module).

You can look at the old SVN repository on berlios to get a Makefile
for out-of-tree build for the driver.

I think softmac and bcm43xx-sm should be in one tarball and should be built
together with one make invocation. Just "melt" the codebases together. :)

Ah, and yeah. There is the issue of symbol clashes with bcm43xx-mac80211.
Is that an issue when built modular? We should make life of distributors
easy by allowing both bcm43xx-sm and bcm43xx-mac80211 be loaded at the
same time.

Does that sound reasonable? Or should I do it?

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 16:07:12 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 16:07:12 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <4602ED54.1000405@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703222057.22530.mb@bu3sch.de> <4602ED54.1000405@lwfinger.net>
Message-ID: <200703231607.12825.mb@bu3sch.de>

On Thursday 22 March 2007 21:55, Larry Finger wrote:
> Michael Buesch wrote:
> > 
> > Ah, and yeah. There is the issue of symbol clashes with bcm43xx-mac80211.
> > Is that an issue when built modular? We should make life of distributors
> > easy by allowing both bcm43xx-sm and bcm43xx-mac80211 be loaded at the
> > same time.
> 
> I don't think there are any symbol clashes.

Well, if you compile both into the kernel image there _are_ symbol clashes.
I think with modules they don't show up at runtime, as any non-exported
symbol is de-facto static.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 16:13:47 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 16:13:47 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <4602F09F.2090206@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<20070322202758.GH3860@tuxdriver.com>
	<4602F09F.2090206@lwfinger.net>
Message-ID: <200703231613.48151.mb@bu3sch.de>

On Thursday 22 March 2007 22:09, Larry Finger wrote:
> Based on Michael's comments, I think it would be easier to teach bcm43xx-softmac to work with
> mac80211 than it would be to put V3 firmware back in bcm43xx-mac80211. Do you agree Michael?

Putting v3 support into bcm43xx-mac80211 is not an option.
Porting bcm43xx-sm to mac80211 is an option. It's not too hard.

> Incidentally, I have just demonstrated that bcm43xx-softmac and bcm43xx-mac80211 can coexist in the
> same kernel as long as the PCI-id is unique. In this way, we have a migration route that lets us
> defer any changes until sometime after mac80211 goes mainline. All we have to do is remove the A and
> G PHY ids from softmac. The ids for B PHYs are already removed from bcm43xx-mac80211.

Please change the name(space) of bcm43xx-sm to bcm4301. Makes it _much_ more
clear which hardware is supported by this driver.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 16:08:44 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 16:08:44 +0100
Subject: combined on 2.6.20.3
In-Reply-To: <1174597365.27496.24.camel@dv>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<4602E8BE.1090509@lwfinger.net> <1174597365.27496.24.camel@dv>
Message-ID: <200703231608.44733.mb@bu3sch.de>

On Thursday 22 March 2007 22:02, Pavel Roskin wrote:
> >  It will be easy enough to change bcm43xx-sm names to avoid
> > them.
> 
> s/bcm43xx/bcm4301/
> or something like that

I'd vote for that name change, yes.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 19:30:19 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 19:30:19 +0100
Subject: RFC: Future plans for bcm43xx-softmac
In-Reply-To: <4604106F.7080003@lwfinger.net>
References: <4604106F.7080003@lwfinger.net>
Message-ID: <200703231930.19312.mb@bu3sch.de>

On Friday 23 March 2007 18:37, Larry Finger wrote:
> I think we have a plan for the future of bcm43xx-softmac once the bcm43xx-mac80211 version goes into
> mainline. Unfortunately it cannot just be abandoned as there will be no support for 802.11b-only
> devices in bcm43xx-mac80211.
> 
> The steps to be done are as follows:
> 
> 1. Change the namespace from bcm43xx to bcm4301. This will both reflect the purpose of the changed
> driver as well as prevent namespace collisions with the bcm43xx-mac80211 version in case both are
> built into the kernel.
> 
> 2. Modify bcm4301 to use mac80211 rather than softmac. Although this process has the potential for
> introducing bugs into what is currently the stable version, it does allow the abandonment of softmac
> with its deficiencies, many of which are essentially uncorrectable.
> 
> 3. The PCI-ids recognized by bcm4301-mac80211 will be restricted to the 802.11b-only devices and the
> configuration information will be modified.
> 
> Step 1 will be completed very soon and the appropriate patches will be submitted to Linville's
> wireless-dev tree.
> 
> I will be working on step 2 in the coming months and will submit those patches to the list for
> comments and testing. When ready, they too will be submitted to Linville. Once bcm43xx-mac80211 goes
> into mainline, the step 3 patches will be submitted.
> 
> Please comment on this plan.

I ACK this as-is.

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Mar 23 21:25:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Mar 2007 21:25:59 +0100
Subject: [PATCH] bcm43xx-mac80211: fix radio_set_tx_iq
In-Reply-To: <20070323202343.0e7ea0e7@localhost>
References: <20070323202343.0e7ea0e7@localhost>
Message-ID: <200703232125.59781.mb@bu3sch.de>

On Friday 23 March 2007 20:23, Stefano Brivio wrote:
> Fix a duplicated leftshift in bcm43xx_radio_set_tx_iq. data_high values are
> already leftshifted. Thanks to Michael Buesch for spotting this.
> 
> Signed-off-by: Stefano Brivio <stefano.brivio at polimi.it>

I think you should probably write your APHY stuff against the development
tree, as only that has proper support for multiple 802.11 cores (4309).

> diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> index 10a82b1..a2c52f6 100644
> --- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> +++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_phy.c
> @@ -3802,7 +3802,7 @@ void bcm43xx_radio_set_tx_iq(struct bcm4
>  
>  	for (i = 0; i < 5; i++) {
>  		for (j = 0; j < 5; j++) {
> -			if (tmp == (data_high[i] << 4 | data_low[j])) {
> +			if (tmp == (data_high[i] | data_low[j])) {
>  				bcm43xx_phy_write(dev, 0x0069, (i - j) << 8 | 0x00C0);
>  				return;
>  			}

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sun Mar 25 16:38:49 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 09:38:49 -0500
Subject: I need a BCM4301
Message-ID: <46068979.5050401@lwfinger.net>

Is anyone willing to trade a working BCM4301 802.11b PCMCIA card for a working BCM4306 802.11b/g
card? I need one for debugging future versions of the bcm43xx (soon to be bcm4301) driver for the
days when mac80211 goes into mainline.

It would be easier if the donor is in the US, but not necessary.

Thanks,

Larry



From will.dyson at gmail.com  Fri Mar 23 22:20:33 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Fri, 23 Mar 2007 17:20:33 -0400
Subject: [PATCH 1/3] bcm43xx-mac80211: Catch dma mapping failures.
Message-ID: <8e6f94720703231420q12b94a4fic6b56361863422c0@mail.gmail.com>

Check result of dma_map_single(), print warnings and propagate errors up the
call stack.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   39
+++++++++++++++-----
 1 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d53679d..4abc6c8 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -525,9 +525,11 @@ static int setup_rx_descbuffer(struct bcm43xx_dmaring
*ring,
         return -ENOMEM;
     dmaaddr = map_descbuffer(ring, skb->data,
                  ring->rx_buffersize, 0);
+    if (dma_mapping_error(dmaaddr))
+        return -EIO;
+
     meta->skb = skb;
     meta->dmaaddr = dmaaddr;
-
     ring->ops->fill_descriptor(ring, desc, dmaaddr,
                    ring->rx_buffersize, 0, 0, 0);

@@ -552,8 +554,10 @@ static int alloc_initial_descbuffers(struct
bcm43xx_dmaring *ring)
         desc = ring->ops->idx2desc(ring, i, &meta);

         err = setup_rx_descbuffer(ring, desc, meta, GFP_KERNEL);
-        if (err)
+        if (err) {
+            printk(KERN_ERR PFX "Failed to allocate initial
descbuffers\n");
             goto err_unwind;
+        }
     }
     mb();
     ring->used_slots = ring->nr_slots;
@@ -1017,7 +1021,7 @@ struct bcm43xx_dmaring * parse_cookie(struct
bcm43xx_wldev *dev,
     return ring;
 }

-static void dma_tx_fragment(struct bcm43xx_dmaring *ring,
+static int dma_tx_fragment(struct bcm43xx_dmaring *ring,
                 struct sk_buff *skb,
                 struct ieee80211_tx_control *ctl)
 {
@@ -1026,23 +1030,26 @@ static void dma_tx_fragment(struct bcm43xx_dmaring
*ring,
     int slot;
     struct bcm43xx_dmadesc_generic *desc;
     struct bcm43xx_dmadesc_meta *meta;
+    struct bcm43xx_dmadesc_meta *meta_hdr;

 #define SLOTS_PER_PACKET  2
     assert(skb_shinfo(skb)->nr_frags == 0);

     /* Get a slot for the header. */
     slot = request_slot(ring);
-    desc = ops->idx2desc(ring, slot, &meta);
-    memset(meta, 0, sizeof(*meta));
+    desc = ops->idx2desc(ring, slot, &meta_hdr);
+    memset(meta_hdr, 0, sizeof(*meta_hdr));

     header = &(ring->txhdr_cache[slot * sizeof(struct bcm43xx_txhdr_fw4)]);
     bcm43xx_generate_txhdr(ring->dev, header,
                    skb->data, skb->len, ctl,
                    generate_cookie(ring, slot));

-    meta->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
+    meta_hdr->dmaaddr = map_descbuffer(ring, (unsigned char *)header,
                        sizeof(struct bcm43xx_txhdr_fw4), 1);
-    ops->fill_descriptor(ring, desc, meta->dmaaddr,
+    if (dma_mapping_error(meta_hdr->dmaaddr))
+        return -EIO;
+    ops->fill_descriptor(ring, desc, meta_hdr->dmaaddr,
                  sizeof(struct bcm43xx_txhdr_fw4), 1, 0, 0);

     /* Get a slot for the payload. */
@@ -1052,8 +1059,10 @@ static void dma_tx_fragment(struct bcm43xx_dmaring
*ring,

     memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
     meta->skb = skb;
-    meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
     meta->is_last_fragment = 1;
+    meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+    if(dma_mapping_error(meta->dmaaddr))
+        goto out_unmap_hdr;

     ops->fill_descriptor(ring, desc, meta->dmaaddr,
                  skb->len, 0, 1, 1);
@@ -1061,6 +1070,12 @@ static void dma_tx_fragment(struct bcm43xx_dmaring
*ring,
     /* Now transfer the whole frame. */
     wmb();
     ops->poke_tx(ring, next_slot(ring, slot));
+    return 0;
+
+out_unmap_hdr:
+    unmap_descbuffer(ring, meta_hdr->dmaaddr,
+            sizeof(struct bcm43xx_txhdr_fw4), 1);
+    return -EIO;
 }

 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
@@ -1068,6 +1083,7 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
            struct ieee80211_tx_control *ctl)
 {
     struct bcm43xx_dmaring *ring = dev->dma.tx_ring1;
+    int err = 0;

     assert(ring->tx);
     if (unlikely(free_slots(ring) < SLOTS_PER_PACKET)) {
@@ -1078,7 +1094,12 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
         return NETDEV_TX_BUSY;
     }

-    dma_tx_fragment(ring, skb, ctl);
+    err = dma_tx_fragment(ring, skb, ctl);
+    if (unlikely(err)) {
+        printkl(KERN_ERR PFX "DMA tx mapping failure\n");
+        return NETDEV_TX_BUSY;
+    }
+
     ring->nr_tx_packets++;
     if (free_slots(ring) < SLOTS_PER_PACKET) {
         /* FIXME: we currently only have one queue */
-- 
1.5.0.3



-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070323/a782a3ae/attachment.html>

From Larry.Finger at lwfinger.net  Sun Mar 25 15:45:54 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 08:45:54 -0500
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
Message-ID: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>

From: David Woodhouse <dwmw2 at infradead.org>

Recent changes in the specs that were introduced in commit 
740ac4fb08866d702be90f167665d03759bd27d0 were incorrect and resulted in machine check
errors on the PPC architecture for G PHY's with a revision number equal to 1. The
two offending changes are reverted.

Signed-off-by: David Woodhouse <dwmw2 at infradead.org>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This fix should be applied to wireless-2.6 and set to 'upstream-fixes'. I hope is makes
it into 2.6.21 before the final release. The debugging of this issue was mostly done
by David with additional help by Pavil Roskin.

Larry


Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -762,7 +762,7 @@ static void bcm43xx_phy_initb5(struct bc
 	if (radio->version == 0x2050)
 		bcm43xx_phy_write(bcm, 0x0038, 0x0667);
 
-	if (phy->type == BCM43xx_PHYTYPE_G) {
+	if (phy->connected) {
 		if (radio->version == 0x2050) {
 			bcm43xx_radio_write16(bcm, 0x007A,
 					      bcm43xx_radio_read16(bcm, 0x007A)
@@ -1197,7 +1197,7 @@ static void bcm43xx_phy_initg(struct bcm
 		bcm43xx_phy_write(bcm, 0x0811, 0x0400);
 		bcm43xx_phy_write(bcm, 0x0015, 0x00C0);
 	}
-	if (phy->connected) {
+	if (phy->rev >= 2 && phy->connected) {
 		tmp = bcm43xx_phy_read(bcm, 0x0400) & 0xFF;
 		if (tmp < 6) {
 			bcm43xx_phy_write(bcm, 0x04C2, 0x1816);


From proski at gnu.org  Sun Mar 25 17:22:35 2007
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 25 Mar 2007 11:22:35 -0400
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
Message-ID: <20070325112235.tjuz5c04kcs4044g@webmail.spamcop.net>

Hi, Larry!

That was quick!  I confirm that the patch fixes the machine check for me.  The
driver is working, even with WEP.  To prove my point, I'll send this message
over the fixed driver, so if you can read it, you have made an excellent job :)

--
Regards,
Pavel Roskin


From will.dyson at gmail.com  Fri Mar 23 22:24:30 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Fri, 23 Mar 2007 17:24:30 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
Message-ID: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>

When the chip is limited to 30bit DMA, allocate RX buffers in ZONE_DMA. When
the network stack passes us TX buffers that cannot be mapped because of the
limitation (with an address > 1GB), allocate a bounce buffer in ZONE_DMA and
copy the packet there.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   52
+++++++++++++++++---
 1 files changed, 45 insertions(+), 7 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index d09b849..8f6d434 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -397,6 +397,9 @@ static int alloc_ringmemory(struct bcm43xx_dmaring
*ring)
 {
     struct device *dev = ring->dev->dev->dev;

+    /* Dont need to test for 30bit dma here.
+     * dma_alloc_coherent respects the dma_mask
+     */
     ring->descbase = dma_alloc_coherent(dev, BCM43xx_DMA_RINGMEMSIZE,
                         &(ring->dmabase), GFP_KERNEL);
     if (!ring->descbase) {
@@ -549,11 +552,15 @@ static int alloc_initial_descbuffers(struct
bcm43xx_dmaring *ring)
     int i, err = -ENOMEM;
     struct bcm43xx_dmadesc_generic *desc;
     struct bcm43xx_dmadesc_meta *meta;
+    gfp_t flags = GFP_KERNEL;
+
+    if (bcm43xx_dma30(ring->dev))
+        flags = GFP_DMA;

     for (i = 0; i < ring->nr_slots; i++) {
         desc = ring->ops->idx2desc(ring, i, &meta);

-        err = setup_rx_descbuffer(ring, desc, meta, GFP_KERNEL);
+        err = setup_rx_descbuffer(ring, desc, meta, flags);
         if (err) {
             printk(KERN_ERR PFX "Failed to allocate initial
descbuffers\n");
             goto err_unwind;
@@ -730,6 +737,7 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct
bcm43xx_wldev *dev,
     struct bcm43xx_dmaring *ring;
     int err;
     int nr_slots;
+    gfp_t dma_flags = GFP_KERNEL;

     ring = kzalloc(sizeof(*ring), GFP_KERNEL);
     if (!ring)
@@ -744,9 +752,12 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct
bcm43xx_wldev *dev,
     if (!ring->meta)
         goto err_kfree_ring;
     if (for_tx) {
+        if (bcm43xx_dma30(dev))
+            dma_flags = GFP_DMA;
+        /* only this allocation is for DMA */
         ring->txhdr_cache = kcalloc(nr_slots,
                         sizeof(struct bcm43xx_txhdr_fw4),
-                        GFP_KERNEL);
+                        dma_flags);
         if (!ring->txhdr_cache)
             goto err_kfree_meta;
     }
@@ -1020,9 +1031,11 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
*ring,
     const struct bcm43xx_dma_ops *ops = ring->ops;
     u8 *header;
     int slot;
+    int err;
     struct bcm43xx_dmadesc_generic *desc;
     struct bcm43xx_dmadesc_meta *meta;
     struct bcm43xx_dmadesc_meta *meta_hdr;
+    struct sk_buff *bounce_skb;

 #define SLOTS_PER_PACKET  2
     assert(skb_shinfo(skb)->nr_frags == 0);
@@ -1052,9 +1065,27 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
*ring,
     memcpy(&meta->txstat.control, ctl, sizeof(*ctl));
     meta->skb = skb;
     meta->is_last_fragment = 1;
+
     meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
-    if(dma_mapping_error(meta->dmaaddr))
-        goto out_unmap_hdr;
+
+    /* create a bounce buffer in zone_dma on mapping failure. */
+    if (dma_mapping_error(meta->dmaaddr)) {
+        bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC|GFP_DMA);
+        if(!bounce_skb) {
+            err = -ENOMEM;
+            goto out_unmap_hdr;
+        }
+
+        memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
+        dev_kfree_skb_any(skb);
+        skb = bounce_skb;
+        meta->skb = skb;
+        meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+        if (dma_mapping_error(meta->dmaaddr)) {
+            err = -EIO;
+            goto out_free_bounce;
+        }
+    }

     ops->fill_descriptor(ring, desc, meta->dmaaddr,
                  skb->len, 0, 1, 1);
@@ -1064,10 +1095,12 @@ static int dma_tx_fragment(struct bcm43xx_dmaring
*ring,
     ops->poke_tx(ring, next_slot(ring, slot));
     return 0;

+out_free_bounce:
+    dev_kfree_skb_any(skb);
 out_unmap_hdr:
     unmap_descbuffer(ring, meta_hdr->dmaaddr,
             sizeof(struct bcm43xx_txhdr_fw4), 1);
-    return -EIO;
+    return err;
 }

 int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,
@@ -1088,7 +1121,7 @@ int bcm43xx_dma_tx(struct bcm43xx_wldev *dev,

     err = dma_tx_fragment(ring, skb, ctl);
     if (unlikely(err)) {
-        printkl(KERN_ERR PFX "DMA tx mapping failure\n");
+        printkl(KERN_ERR PFX "DMA tx failure\n");
         return NETDEV_TX_BUSY;
     }

@@ -1186,6 +1219,7 @@ static void dma_rx(struct bcm43xx_dmaring *ring,
     u16 len;
     int err;
     dma_addr_t dmaaddr;
+    gfp_t dma_flags;

     desc = ops->idx2desc(ring, *slot, &meta);

@@ -1253,8 +1287,12 @@ static void dma_rx(struct bcm43xx_dmaring *ring,
         goto drop;
     }

+    dma_flags = GFP_ATOMIC;
+    if (bcm43xx_dma30(ring->dev))
+        dma_flags |= GFP_DMA;
+
     dmaaddr = meta->dmaaddr;
-    err = setup_rx_descbuffer(ring, desc, meta, GFP_ATOMIC);
+    err = setup_rx_descbuffer(ring, desc, meta, dma_flags);
     if (unlikely(err)) {
         dprintkl(KERN_ERR PFX "DMA RX: setup_rx_descbuffer() failed\n");
         sync_descbuffer_for_device(ring, dmaaddr,
-- 
1.5.0.3



-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070323/04adde17/attachment.html>

From larry.finger at lwfinger.net  Sun Mar 25 18:20:19 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 11:20:19 -0500
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <20070325112235.tjuz5c04kcs4044g@webmail.spamcop.net>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<20070325112235.tjuz5c04kcs4044g@webmail.spamcop.net>
Message-ID: <4606A143.60105@lwfinger.net>

Pavel Roskin wrote:
> Hi, Larry!
> 
> That was quick!  I confirm that the patch fixes the machine check for me.  The
> driver is working, even with WEP.  To prove my point, I'll send this message
> over the fixed driver, so if you can read it, you have made an excellent job :)

Thanks, but David Woodhouse deserves the credit.

In future cases, I'll send any changes that modify phy->rev == 1 behavior past you and David before
submitting. Too bad that one doesn't get the machine check on x86 architectures as I also have a rev
1 cards.

Larry



From dwmw2 at infradead.org  Sun Mar 25 18:53:48 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Sun, 25 Mar 2007 17:53:48 +0100
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <200703251613.23880.mb@bu3sch.de>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<200703251613.23880.mb@bu3sch.de>
Message-ID: <1174841628.20505.244.camel@pmac.infradead.org>

On Sun, 2007-03-25 at 16:13 +0200, Michael Buesch wrote:
> I'm not sure this patch is complete.
> Joseph made changes to the specs that should fix the issue completely.
> I didn't look at the changes, yet. 

I don't see relevant changes in the v3 specs. I was working empirically,
reverting parts of the large patch which broke it.

-- 
dwmw2



From stefano.brivio at polimi.it  Sun Mar 25 19:02:52 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Sun, 25 Mar 2007 19:02:52 +0200
Subject: I need a BCM4301
In-Reply-To: <46068979.5050401@lwfinger.net>
References: <46068979.5050401@lwfinger.net>
Message-ID: <20070325190252.1ff8f860@localhost>

On Sun, 25 Mar 2007 09:38:49 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> Is anyone willing to trade a working BCM4301 802.11b PCMCIA card for a
> working BCM4306 802.11b/g card? I need one for debugging future versions
> of the bcm43xx (soon to be bcm4301) driver for the days when mac80211
> goes into mainline.
> 
> It would be easier if the donor is in the US, but not necessary.

If the trade doesn't succeed, feel free to buy a Linksys WMP11 on eBay, you
will get a money refund.


--
Ciao
Stefano


From stefano.brivio at polimi.it  Sun Mar 25 19:19:36 2007
From: stefano.brivio at polimi.it (Stefano Brivio)
Date: Sun, 25 Mar 2007 19:19:36 +0200
Subject: I need a BCM4301
In-Reply-To: <20070325190252.1ff8f860@localhost>
References: <46068979.5050401@lwfinger.net> <20070325190252.1ff8f860@localhost>
Message-ID: <20070325191936.29a52a07@localhost>

On Sun, 25 Mar 2007 19:02:52 +0200
Stefano Brivio <stefano.brivio at polimi.it> wrote:

> On Sun, 25 Mar 2007 09:38:49 -0500
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> 
> > Is anyone willing to trade a working BCM4301 802.11b PCMCIA card for a
> > working BCM4306 802.11b/g card? I need one for debugging future versions
> > of the bcm43xx (soon to be bcm4301) driver for the days when mac80211
> > goes into mainline.
> > 
> > It would be easier if the donor is in the US, but not necessary.
> 
> If the trade doesn't succeed, feel free to buy a Linksys WMP11 on eBay,
> you will get a money refund.

Ah, no, sorry, I didn't see you needed a PCMCIA card. Well, however, if you
find something on eBay, just buy it.


--
Ciao
Stefano


From larry.finger at lwfinger.net  Sun Mar 25 20:23:48 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 13:23:48 -0500
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <1174841628.20505.244.camel@pmac.infradead.org>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>	
	<200703251613.23880.mb@bu3sch.de>
	<1174841628.20505.244.camel@pmac.infradead.org>
Message-ID: <4606BE34.7000705@lwfinger.net>

David Woodhouse wrote:
> On Sun, 2007-03-25 at 16:13 +0200, Michael Buesch wrote:
>> I'm not sure this patch is complete.
>> Joseph made changes to the specs that should fix the issue completely.
>> I didn't look at the changes, yet. 
> 
> I don't see relevant changes in the v3 specs. I was working empirically,
> reverting parts of the large patch which broke it.

There aren't any. Joseph is making the changes to the V4 specs, most of which are valid for V3 as
well. If I have any questions, I ask him privately.

Larry



From larry.finger at lwfinger.net  Sun Mar 25 20:29:00 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 13:29:00 -0500
Subject: I need a BCM4301
In-Reply-To: <20070325190252.1ff8f860@localhost>
References: <46068979.5050401@lwfinger.net> <20070325190252.1ff8f860@localhost>
Message-ID: <4606BF6C.5050002@lwfinger.net>

Stefano Brivio wrote:
> On Sun, 25 Mar 2007 09:38:49 -0500
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> 
>> Is anyone willing to trade a working BCM4301 802.11b PCMCIA card for a
>> working BCM4306 802.11b/g card? I need one for debugging future versions
>> of the bcm43xx (soon to be bcm4301) driver for the days when mac80211
>> goes into mainline.
>>
>> It would be easier if the donor is in the US, but not necessary.
> 
> If the trade doesn't succeed, feel free to buy a Linksys WMP11 on eBay, you
> will get a money refund.

Ok. I need the WPC11, which is the PCMCIA version. A WMP11 is a PCI card.

Larry


From dwmw2 at infradead.org  Sun Mar 25 20:29:11 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Sun, 25 Mar 2007 19:29:11 +0100
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <4606BE34.7000705@lwfinger.net>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<200703251613.23880.mb@bu3sch.de>
	<1174841628.20505.244.camel@pmac.infradead.org>
	<4606BE34.7000705@lwfinger.net>
Message-ID: <1174847351.20505.275.camel@pmac.infradead.org>

On Sun, 2007-03-25 at 13:23 -0500, Larry Finger wrote:
> There aren't any. Joseph is making the changes to the V4 specs, most
> of which are valid for V3 as well. If I have any questions, I ask him
> privately.

There is an important difference between the v3 and v4 specs in this
respect. Looking at http://bcm-v4.sipsolutions.net/802.11/PHY/Init/G I
see in ?7a that we're only supposed to set PHY register 0x4cc if the A
PHY revision is 5. The v3 specs seem to suggest that we should do that
whenever the revision is below 6 and not equal to 3. 

The A PHY revision in my case is 2, and it's the access to PHY register
0x4CC which triggers the machine check.

-- 
dwmw2



From claveau at nerim.net  Sun Mar 25 20:33:22 2007
From: claveau at nerim.net (Ronald Claveau)
Date: Sun, 25 Mar 2007 20:33:22 +0200
Subject: [bcm43xx] dhcp failure
In-Reply-To: <759d30a60703130856t3f4434e1g5cb6489d0d8bda22@mail.gmail.com>
References: <759d30a60703051809pdc3d576wd32ff38d2dcbf37@mail.gmail.com>	<45ECD38B.4010502@lwfinger.net>	<759d30a60703081231m51dfa40arfe36c6abe274442c@mail.gmail.com>	<45F07E11.7060104@lwfinger.net>	<759d30a60703091357m43b476cey82fa0618ee128659@mail.gmail.com>	<45F20B7A.7050606@lwfinger.net>
	<759d30a60703130856t3f4434e1g5cb6489d0d8bda22@mail.gmail.com>
Message-ID: <4606C072.1020404@nerim.net>

Aleksander Trofimowicz a ?crit :
> On 10/03/07, Larry Finger <larry.finger at lwfinger.net> wrote:
>
>   
>> The reason you are having trouble is that your AP has a NULL SSID. I'm not sure the bcm43xx-softmac
>> combination will work. I know it does not if the ESSID is hidden.
>>
>>     
> Are we talking about the same version of bcm43xx/softmac? I do
> successfully connect to AS, whose not null ESSID is hidden all the
> time, and employs WPA-PSK. The only but is that under certain
> conditions dhcp fails and I wonder whether this is bcm43xx specific or
> not. If latter, then I'll try to convince a maintainer of dhcp-client
> package of my distro to take care of that.
> Whatsoever it isn't difficult to do it yourself. But these settings
> are quite common for private WLANs, so it would be good if
> bcm43xx/softmac hadn't such shortcomings.
>
>   
I have the same bug.
AP: linksys WRT54GS with DD-WRT firmware.
Laptop: debian etch with BCM4318.


From will.dyson at gmail.com  Fri Mar 23 22:23:12 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Fri, 23 Mar 2007 17:23:12 -0400
Subject: [PATCH 2/3] bcm43xx-mac80211: accessor functions for chip DMA
	capabilities.
Message-ID: <8e6f94720703231423p2e1ed5d3sc84e82d1f24c4d2@mail.gmail.com>

Introduce and use a set of accessor functions to return the DMA capabilities
of
the chip. The detected DMA mask is accessible through bcm43xx_wldev and it
cannot vary between the rings on a chip, so no need to separately keep track
of
it on a per-ring basis. This paves the way for checking for 30bit dma
without
keeping separate track of it.

Signed-off-by: Will Dyson <will.dyson at gmail.com>
---
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.c    |   70
+++++++++-----------
 .../net/wireless/mac80211/bcm43xx/bcm43xx_dma.h    |   49 +++++++++++---
 2 files changed, 70 insertions(+), 49 deletions(-)

diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
index 4abc6c8..d09b849 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.c
@@ -418,18 +418,18 @@ static void free_ringmemory(struct bcm43xx_dmaring
*ring)

 /* Reset the RX DMA channel */
 int bcm43xx_dmacontroller_rx_reset(struct bcm43xx_wldev *dev,
-                   u16 mmio_base, int dma64)
+                   u16 mmio_base)
 {
     int i;
     u32 value;
     u16 offset;

-    offset = dma64 ? BCM43xx_DMA64_RXCTL : BCM43xx_DMA32_RXCTL;
+    offset = bcm43xx_dma64(dev) ? BCM43xx_DMA64_RXCTL :
BCM43xx_DMA32_RXCTL;
     bcm43xx_write32(dev, mmio_base + offset, 0);
     for (i = 0; i < 1000; i++) {
-        offset = dma64 ? BCM43xx_DMA64_RXSTATUS : BCM43xx_DMA32_RXSTATUS;
+        offset = bcm43xx_dma64(dev) ? BCM43xx_DMA64_RXSTATUS :
BCM43xx_DMA32_RXSTATUS;
         value = bcm43xx_read32(dev, mmio_base + offset);
-        if (dma64) {
+        if (bcm43xx_dma64(dev)) {
             value &= BCM43xx_DMA64_RXSTAT;
             if (value == BCM43xx_DMA64_RXSTAT_DISABLED) {
                 i = -1;
@@ -454,16 +454,16 @@ int bcm43xx_dmacontroller_rx_reset(struct
bcm43xx_wldev *dev,

 /* Reset the RX DMA channel */
 int bcm43xx_dmacontroller_tx_reset(struct bcm43xx_wldev *dev,
-                   u16 mmio_base, int dma64)
+                   u16 mmio_base)
 {
     int i;
     u32 value;
     u16 offset;

     for (i = 0; i < 1000; i++) {
-        offset = dma64 ? BCM43xx_DMA64_TXSTATUS : BCM43xx_DMA32_TXSTATUS;
+        offset = bcm43xx_dma64(dev) ? BCM43xx_DMA64_TXSTATUS :
BCM43xx_DMA32_TXSTATUS;
         value = bcm43xx_read32(dev, mmio_base + offset);
-        if (dma64) {
+        if (bcm43xx_dma64(dev)) {
             value &= BCM43xx_DMA64_TXSTAT;
             if (value == BCM43xx_DMA64_TXSTAT_DISABLED ||
                 value == BCM43xx_DMA64_TXSTAT_IDLEWAIT ||
@@ -478,12 +478,12 @@ int bcm43xx_dmacontroller_tx_reset(struct
bcm43xx_wldev *dev,
         }
         udelay(10);
     }
-    offset = dma64 ? BCM43xx_DMA64_TXCTL : BCM43xx_DMA32_TXCTL;
+    offset = bcm43xx_dma64(dev) ? BCM43xx_DMA64_TXCTL :
BCM43xx_DMA32_TXCTL;
     bcm43xx_write32(dev, mmio_base + offset, 0);
     for (i = 0; i < 1000; i++) {
-        offset = dma64 ? BCM43xx_DMA64_TXSTATUS : BCM43xx_DMA32_TXSTATUS;
+        offset = bcm43xx_dma64(dev) ? BCM43xx_DMA64_TXSTATUS :
BCM43xx_DMA32_TXSTATUS;
         value = bcm43xx_read32(dev, mmio_base + offset);
-        if (dma64) {
+        if (bcm43xx_dma64(dev)) {
             value &= BCM43xx_DMA64_TXSTAT;
             if (value == BCM43xx_DMA64_TXSTAT_DISABLED) {
                 i = -1;
@@ -587,7 +587,7 @@ static int dmacontroller_setup(struct bcm43xx_dmaring
*ring)
     u32 trans = ssb_dma_translation(ring->dev->dev);

     if (ring->tx) {
-        if (ring->dma64) {
+        if (bcm43xx_dma64(ring->dev)) {
             u64 ringbase = (u64)(ring->dmabase);

             addrext = ((ringbase >> 32) & SSB_DMA_TRANSLATION_MASK)
@@ -618,7 +618,7 @@ static int dmacontroller_setup(struct bcm43xx_dmaring
*ring)
         err = alloc_initial_descbuffers(ring);
         if (err)
             goto out;
-        if (ring->dma64) {
+        if (bcm43xx_dma64(ring->dev)) {
             u64 ringbase = (u64)(ring->dmabase);

             addrext = ((ringbase >> 32) & SSB_DMA_TRANSLATION_MASK)
@@ -659,15 +659,15 @@ out:
 static void dmacontroller_cleanup(struct bcm43xx_dmaring *ring)
 {
     if (ring->tx) {
-        bcm43xx_dmacontroller_tx_reset(ring->dev, ring->mmio_base,
ring->dma64);
-        if (ring->dma64) {
+        bcm43xx_dmacontroller_tx_reset(ring->dev, ring->mmio_base);
+        if (bcm43xx_dma64(ring->dev)) {
             bcm43xx_dma_write(ring, BCM43xx_DMA64_TXRINGLO, 0);
             bcm43xx_dma_write(ring, BCM43xx_DMA64_TXRINGHI, 0);
         } else
             bcm43xx_dma_write(ring, BCM43xx_DMA32_TXRING, 0);
     } else {
-        bcm43xx_dmacontroller_rx_reset(ring->dev, ring->mmio_base,
ring->dma64);
-        if (ring->dma64) {
+        bcm43xx_dmacontroller_rx_reset(ring->dev, ring->mmio_base);
+        if (bcm43xx_dma64(ring->dev)) {
             bcm43xx_dma_write(ring, BCM43xx_DMA64_RXRINGLO, 0);
             bcm43xx_dma_write(ring, BCM43xx_DMA64_RXRINGHI, 0);
         } else
@@ -725,8 +725,7 @@ static u64 supported_dma_mask(struct bcm43xx_wldev *dev)
 static
 struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct bcm43xx_wldev *dev,
                            int controller_index,
-                           int for_tx,
-                           int dma64)
+                           int for_tx)
 {
     struct bcm43xx_dmaring *ring;
     int err;
@@ -754,10 +753,9 @@ struct bcm43xx_dmaring * bcm43xx_setup_dmaring(struct
bcm43xx_wldev *dev,

     ring->dev = dev;
     ring->nr_slots = nr_slots;
-    ring->mmio_base = bcm43xx_dmacontroller_base(dma64, controller_index);
+    ring->mmio_base = bcm43xx_dmacontroller_base(bcm43xx_dma64(dev),
controller_index);
     ring->index = controller_index;
-    ring->dma64 = !!dma64;
-    if (dma64)
+    if (bcm43xx_dma64(dev))
         ring->ops = &dma64_ops;
     else
         ring->ops = &dma32_ops;
@@ -802,7 +800,7 @@ static void bcm43xx_destroy_dmaring(struct
bcm43xx_dmaring *ring)
         return;

     dprintk(KERN_INFO PFX "DMA-%s 0x%04X (%s) max used slots: %d/%d\n",
-        (ring->dma64) ? "64" : "32",
+        (bcm43xx_dma64(ring->dev)) ? "64" : "32",
         ring->mmio_base,
         (ring->tx) ? "TX" : "RX",
         ring->max_used_slots, ring->nr_slots);
@@ -850,14 +848,8 @@ int bcm43xx_dma_init(struct bcm43xx_wldev *dev)
     struct bcm43xx_dma *dma = &dev->dma;
     struct bcm43xx_dmaring *ring;
     int err;
-    u64 dmamask;
-    int dma64 = 0;

-    dmamask = supported_dma_mask(dev);
-    if (dmamask == DMA_64BIT_MASK)
-        dma64 = 1;
-
-    err = ssb_dma_set_mask(dev->dev, dmamask);
+    err = ssb_dma_set_mask(dev->dev, supported_dma_mask(dev));
     if (err) {
 #ifdef BCM43XX_MAC80211_PIO
         printk(KERN_WARNING PFX "DMA for this device not supported. "
@@ -873,52 +865,52 @@ int bcm43xx_dma_init(struct bcm43xx_wldev *dev)

     err = -ENOMEM;
     /* setup TX DMA channels. */
-    ring = bcm43xx_setup_dmaring(dev, 0, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 0, 1);
     if (!ring)
         goto out;
     dma->tx_ring0 = ring;

-    ring = bcm43xx_setup_dmaring(dev, 1, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 1, 1);
     if (!ring)
         goto err_destroy_tx0;
     dma->tx_ring1 = ring;

-    ring = bcm43xx_setup_dmaring(dev, 2, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 2, 1);
     if (!ring)
         goto err_destroy_tx1;
     dma->tx_ring2 = ring;

-    ring = bcm43xx_setup_dmaring(dev, 3, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 3, 1);
     if (!ring)
         goto err_destroy_tx2;
     dma->tx_ring3 = ring;

-    ring = bcm43xx_setup_dmaring(dev, 4, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 4, 1);
     if (!ring)
         goto err_destroy_tx3;
     dma->tx_ring4 = ring;

-    ring = bcm43xx_setup_dmaring(dev, 5, 1, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 5, 1);
     if (!ring)
         goto err_destroy_tx4;
     dma->tx_ring5 = ring;

     /* setup RX DMA channels. */
-    ring = bcm43xx_setup_dmaring(dev, 0, 0, dma64);
+    ring = bcm43xx_setup_dmaring(dev, 0, 0);
     if (!ring)
         goto err_destroy_tx5;
     dma->rx_ring0 = ring;

     if (dev->dev->id.revision < 5) {
-        ring = bcm43xx_setup_dmaring(dev, 3, 0, dma64);
+        ring = bcm43xx_setup_dmaring(dev, 3, 0);
         if (!ring)
             goto err_destroy_rx0;
         dma->rx_ring3 = ring;
     }

     dprintk(KERN_INFO PFX "%d-bit DMA initialized\n",
-        (dmamask == DMA_64BIT_MASK) ? 64 :
-        (dmamask == DMA_32BIT_MASK) ? 32 : 30);
+        (bcm43xx_dma64(dev)) ? 64 :
+        (bcm43xx_dma30(dev)) ? 32 : 30);
     err = 0;
 out:
     return err;
diff --git a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.h
b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.h
index 94fac2a..56e2f3d 100644
--- a/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.h
+++ b/drivers/net/wireless/mac80211/bcm43xx/bcm43xx_dma.h
@@ -248,8 +248,6 @@ struct bcm43xx_dmaring {
     int index;
     /* Boolean. Is this a TX ring? */
     u8 tx;
-    /* Boolean. 64bit DMA if true, 32bit DMA otherwise. */
-    u8 dma64;
     /* Boolean. Is this ring stopped at ieee80211 level? */
     u8 stopped;
     struct bcm43xx_wldev *dev;
@@ -259,6 +257,23 @@ struct bcm43xx_dmaring {
 #endif /* CONFIG_BCM43XX_MAC80211_DEBUG*/
 };

+static inline
+int bcm43xx_dma64(struct bcm43xx_wldev *dev)
+{
+    return (*dev->dev->dev->dma_mask == DMA_64BIT_MASK);
+}
+
+static inline
+int bcm43xx_dma32(struct bcm43xx_wldev *dev)
+{
+    return (*dev->dev->dev->dma_mask == DMA_32BIT_MASK);
+}
+
+static inline
+int bcm43xx_dma30(struct bcm43xx_wldev *dev)
+{
+    return (*dev->dev->dev->dma_mask == DMA_30BIT_MASK);
+}

 static inline
 u32 bcm43xx_dma_read(struct bcm43xx_dmaring *ring,
@@ -279,11 +294,9 @@ int bcm43xx_dma_init(struct bcm43xx_wldev *dev);
 void bcm43xx_dma_free(struct bcm43xx_wldev *dev);

 int bcm43xx_dmacontroller_rx_reset(struct bcm43xx_wldev *dev,
-                   u16 dmacontroller_mmio_base,
-                   int dma64);
+                   u16 dmacontroller_mmio_base);
 int bcm43xx_dmacontroller_tx_reset(struct bcm43xx_wldev *dev,
-                   u16 dmacontroller_mmio_base,
-                   int dma64);
+                   u16 dmacontroller_mmio_base);

 u16 bcm43xx_dmacontroller_base(int dma64bit, int dmacontroller_idx);

@@ -305,6 +318,24 @@ void bcm43xx_dma_rx(struct bcm43xx_dmaring *ring);


 static inline
+int bcm43xx_dma64(struct bcm43xx_dmaring *ring)
+{
+    return 0;
+}
+
+static inline
+int bcm43xx_dma32(struct bcm43xx_dmaring *ring)
+{
+    return 0;
+}
+
+static inline
+int bcm43xx_dma30(struct bcm43xx_dmaring *ring)
+{
+    return 0;
+}
+
+static inline
 int bcm43xx_dma_init(struct bcm43xx_wldev *dev)
 {
     return 0;
@@ -315,15 +346,13 @@ void bcm43xx_dma_free(struct bcm43xx_wldev *dev)
 }
 static inline
 int bcm43xx_dmacontroller_rx_reset(struct bcm43xx_wldev *dev,
-                   u16 dmacontroller_mmio_base,
-                   int dma64)
+                   u16 dmacontroller_mmio_base)
 {
     return 0;
 }
 static inline
 int bcm43xx_dmacontroller_tx_reset(struct bcm43xx_wldev *dev,
-                   u16 dmacontroller_mmio_base,
-                   int dma64)
+                   u16 dmacontroller_mmio_base)
 {
     return 0;
 }
-- 
1.5.0.3



-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070323/f6b5591c/attachment.html>

From proski at gnu.org  Thu Mar 22 22:02:45 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 22 Mar 2007 17:02:45 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <4602E8BE.1090509@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<200703222057.22530.mb@bu3sch.de>  <4602E8BE.1090509@lwfinger.net>
Message-ID: <1174597365.27496.24.camel@dv>

On Thu, 2007-03-22 at 15:36 -0500, Larry Finger wrote:
> > I think softmac and bcm43xx-sm should be in one tarball and should be built
> > together with one make invocation. Just "melt" the codebases together. :)

That's another problem with symbols if softmac is enabled in the kernel.
Unless softmac is changing quickly or has major bugs in the recent
kernels, I suggest leaving it in the kernel.

> We will find out what clashes there are.

That's quite a lot.  That's what I get if I try to compile both into the
kernel:

bcm43xx_calc_nrssi_slope
bcm43xx_calc_nrssi_threshold
bcm43xx_controller_restart
bcm43xx_debugfs_add_device
bcm43xx_debugfs_exit
bcm43xx_debugfs_init
bcm43xx_debugfs_log_txstat
bcm43xx_debugfs_remove_device
bcm43xx_default_baseband_attenuation
bcm43xx_default_radio_attenuation
bcm43xx_default_txctl1
bcm43xx_dma_free
bcm43xx_dma_init
bcm43xx_dma_rx
bcm43xx_dma_tx
bcm43xx_dma_tx_resume
bcm43xx_dma_tx_suspend
bcm43xx_dmacontroller_base
bcm43xx_dmacontroller_rx_reset
bcm43xx_dmacontroller_tx_reset
bcm43xx_dummy_transmission
bcm43xx_generate_txhdr
bcm43xx_leds_exit
bcm43xx_leds_init
bcm43xx_leds_switch_all
bcm43xx_leds_update
bcm43xx_mac_enable
bcm43xx_mac_suspend
bcm43xx_nrssi_hw_read
bcm43xx_nrssi_hw_update
bcm43xx_nrssi_hw_write
bcm43xx_nrssi_mem_update
bcm43xx_phy_init
bcm43xx_phy_init_tssi2dbm_table
bcm43xx_phy_read
bcm43xx_phy_set_baseband_attenuation
bcm43xx_phy_write
bcm43xx_phy_xmitpower
bcm43xx_pio_free
bcm43xx_pio_freeze_txqueues
bcm43xx_pio_init
bcm43xx_pio_rx
bcm43xx_pio_thaw_txqueues
bcm43xx_pio_tx
bcm43xx_pio_tx_resume
bcm43xx_pio_tx_suspend
bcm43xx_plcp_get_ratecode_cck
bcm43xx_plcp_get_ratecode_ofdm
bcm43xx_power_saving_ctl_bits
bcm43xx_printk_bitdump
bcm43xx_printk_dump
bcm43xx_radio_aci_detect
bcm43xx_radio_aci_scan
bcm43xx_radio_init2050
bcm43xx_radio_init2060
bcm43xx_radio_lock
bcm43xx_radio_read16
bcm43xx_radio_selectchannel
bcm43xx_radio_set_interference_mitigation
bcm43xx_radio_set_tx_iq
bcm43xx_radio_set_txpower_a
bcm43xx_radio_set_txpower_bg
bcm43xx_radio_turn_off
bcm43xx_radio_turn_on
bcm43xx_radio_unlock
bcm43xx_radio_write16
bcm43xx_raw_phy_lock
bcm43xx_raw_phy_unlock
bcm43xx_rx
bcm43xx_shm_read16
bcm43xx_shm_read32
bcm43xx_shm_write16
bcm43xx_shm_write32
bcm43xx_sysfs_register
bcm43xx_sysfs_unregister
bcm43xx_tsf_read
bcm43xx_tsf_write
bcm43xx_wireless_core_reset

>  It will be easy enough to change bcm43xx-sm names to avoid
> them.

s/bcm43xx/bcm4301/
or something like that

But what's needed now is a working standalone driver for all supported
cards.

-- 
Regards,
Pavel Roskin



From proski at gnu.org  Thu Mar 22 17:45:57 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 22 Mar 2007 12:45:57 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <20070322125829.GC3860@tuxdriver.com>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<1174536751.3068.69.camel@dv> <460204A1.6090906@lwfinger.net>
	<1174538092.3068.81.camel@dv>  <20070322125829.GC3860@tuxdriver.com>
Message-ID: <1174581957.18988.21.camel@dv>

On Thu, 2007-03-22 at 08:58 -0400, John W. Linville wrote:
> > Although it's unfortunate that I cannot test dadwifi and bcm43xx on the
> > same kernel.  It's quite bad, especially on the slow G3 PowerMac.
> 
> Why not?  The wireless-dev kernel still has the softmac bcm43xx driver,
> as well as the mac80211-based bcm43xx driver.

I mean, I want to test the latest bcm43xx to see is the "machine check
is gone".

It's quite common for somebody to wish to download, compile and install
the driver without the hassle of patching the kernel, especially a
vendor kernel or an embedded kernel that's hard upgrade, or a kernel
that takes hours to compile.

For a quickly progressing driver, having a standalone distribution could
be very convenient for both users and developers.  Users of exotic
processors could catch the bugs x86 hides.

> > > We will need one for the day when mac80211 replaces softmac in the mainline kernel. What would we
> > > need to do?
> 
> Why?  What value do you predict in having an out-of-tree softmac
> version available?  Would that effort be better spent on improving
> the in-tree mac80211 version?

I would say the softmac version should stay in the tree.  Firstly, it
supports older hardware.  Secondly, it's a point of reference, which is
useful until the driver is quite stable.

But most importantly, bcm43xx_mac80211 has some issues that bcm43xx
doesn't have.  I have to disable 802.11g modes just to use it.  I'm not
sure if it's related, but bcm43xx_mac80211 emits this warning on
startup:

bcm43xx_mac80211: !WARNING! Idle-TSSI phy->cur_idle_tssi measuring
failed. (cur=9, tgt=62). Disabling TX power adjustment.

I'm not really an expert here, but it looks like a very hard problem to
me.  I just don't see any practical approach to fixing it.  I don't
think it can be assumed that it will just go away.

Having a mac80211 driver with v3 firmware would be a first step at
bisecting the bug, but I guess it would be very time consuming.  On the
other hand, it could replace the softmac driver eventually.

-- 
Regards,
Pavel Roskin



From proski at gnu.org  Thu Mar 22 22:35:05 2007
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 22 Mar 2007 17:35:05 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <4602F2C9.4030605@lwfinger.net>
References: <200703220009.46180.ftoledo@docksud.com.ar>
	<200703221702.08127.mb@bu3sch.de> <4602DA72.1010306@lwfinger.net>
	<200703222057.22530.mb@bu3sch.de>  <4602E8BE.1090509@lwfinger.net>
	<1174597365.27496.24.camel@dv>  <4602F2C9.4030605@lwfinger.net>
Message-ID: <1174599305.27496.34.camel@dv>

On Thu, 2007-03-22 at 16:19 -0500, Larry Finger wrote:

> Compiling both as modules, I didn't get any messages about duplicate symbols. Did I miss something?

That's correct.  I thought your concern was about conflicts if both
drivers are linked into the kernel.

> > But what's needed now is a working standalone driver for all supported
> > cards.
> 
> Why standalone? As long as bcm43xx-softmac is mainline, isn't that enough?

I mean, many users prefer to keep the vendor kernel and compile
additional modules against it.  It's easier than to pick the right patch
and recompile the modules.

> As for your machine check
> problem, I'll send you a trial patch to see if it fixes the problem.

Thanks!  I hope to test it tonight.

-- 
Regards,
Pavel Roskin



From josejx at gentoo.org  Sun Mar 25 23:33:07 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Sun, 25 Mar 2007 17:33:07 -0400
Subject: combined on 2.6.20.3
In-Reply-To: <200703231608.44733.mb@bu3sch.de>
References: <200703220009.46180.ftoledo@docksud.com.ar>	<4602E8BE.1090509@lwfinger.net>
	<1174597365.27496.24.camel@dv> <200703231608.44733.mb@bu3sch.de>
Message-ID: <4606EA93.60205@gentoo.org>

Michael Buesch wrote:
> On Thursday 22 March 2007 22:02, Pavel Roskin wrote:
>>>  It will be easy enough to change bcm43xx-sm names to avoid
>>> them.
>> s/bcm43xx/bcm4301/
>> or something like that
> 
> I'd vote for that name change, yes.
> 

What about bcm43xx-bphy since the 4303 would also be supported by
this driver?

-Joe


From josejx at gentoo.org  Sun Mar 25 23:32:20 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Sun, 25 Mar 2007 17:32:20 -0400
Subject: BCM4310 UART [14e4:4312] (rev 01) partly working
In-Reply-To: <1174746831.6055.9.camel@john-laptop>
References: <1174746831.6055.9.camel@john-laptop>
Message-ID: <4606EA64.2030105@gentoo.org>

> I'm not sure whether this information is of interest for you, but here
> it is: (bcm4310 is not in the the list on the website - is it actually a
> 4312?)

Yes, the PCI ID database has it incorrectly listed.

-Joe


From larry.finger at lwfinger.net  Mon Mar 26 04:33:35 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Sun, 25 Mar 2007 21:33:35 -0500
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <200703251613.23880.mb@bu3sch.de>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<200703251613.23880.mb@bu3sch.de>
Message-ID: <460730FF.1050603@lwfinger.net>

Michael Buesch wrote:
> On Sunday 25 March 2007 15:45, Larry Finger wrote:
>> From: David Woodhouse <dwmw2 at infradead.org>
>>
>> Recent changes in the specs that were introduced in commit 
>> 740ac4fb08866d702be90f167665d03759bd27d0 were incorrect and resulted in machine check
>> errors on the PPC architecture for G PHY's with a revision number equal to 1. The
>> two offending changes are reverted.
> 
> I'm not sure this patch is complete.
> Joseph made changes to the specs that should fix the issue completely.
> I didn't look at the changes, yet.

Joseph has fixed the problem in initb5 (the first hunk), but the second hunk is still not in the new
specs. It was in the previous version in a slightly different form, but was found largely by trial
and error.

I would prefer that this patch go forward as is so that we don't end up with this bug in the
released version of 21.6.21. I am in the process of making the initg code match the current specs,
but that will certainly require more testing than I think we have time to complete before 2.6.21 is
released.

Larry



From dwmw2 at infradead.org  Mon Mar 26 14:13:22 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Mon, 26 Mar 2007 13:13:22 +0100
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <460730FF.1050603@lwfinger.net>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<200703251613.23880.mb@bu3sch.de>  <460730FF.1050603@lwfinger.net>
Message-ID: <1174911202.3238.15.camel@pmac.infradead.org>

On Sun, 2007-03-25 at 21:33 -0500, Larry Finger wrote:
> Joseph has fixed the problem in initb5 (the first hunk), but the second hunk is still not in the new
> specs. It was in the previous version in a slightly different form, but was found largely by trial
> and error.
> 
> I would prefer that this patch go forward as is so that we don't end up with this bug in the
> released version of 21.6.21. I am in the process of making the initg code match the current specs,
> but that will certainly require more testing than I think we have time to complete before 2.6.21 is
> released. 

FWIW I tried the mac80211 version (with v4 firmware) and saw very
similar machine checks, even after trying to apply the same 'fixes'.

-- 
dwmw2



From mb at bu3sch.de  Mon Mar 26 22:39:31 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 26 Mar 2007 22:39:31 +0200
Subject: [PATCH] bcm43xx: Fix machine check on PPC for version 1 PHY
In-Reply-To: <1174911202.3238.15.camel@pmac.infradead.org>
References: <46067d12.1uF8l72xIYAG6Vyb%Larry.Finger@lwfinger.net>
	<460730FF.1050603@lwfinger.net>
	<1174911202.3238.15.camel@pmac.infradead.org>
Message-ID: <200703262239.31415.mb@bu3sch.de>

On Monday 26 March 2007 14:13, David Woodhouse wrote:
> On Sun, 2007-03-25 at 21:33 -0500, Larry Finger wrote:
> > Joseph has fixed the problem in initb5 (the first hunk), but the second hunk is still not in the new
> > specs. It was in the previous version in a slightly different form, but was found largely by trial
> > and error.
> > 
> > I would prefer that this patch go forward as is so that we don't end up with this bug in the
> > released version of 21.6.21. I am in the process of making the initg code match the current specs,
> > but that will certainly require more testing than I think we have time to complete before 2.6.21 is
> > released. 
> 
> FWIW I tried the mac80211 version (with v4 firmware) and saw very
> similar machine checks, even after trying to apply the same 'fixes'.

logs...

-- 
Greetings Michael.


From proski at gnu.org  Tue Mar 27 04:32:32 2007
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 26 Mar 2007 22:32:32 -0400
Subject: I need a BCM4301
In-Reply-To: <4606BF6C.5050002@lwfinger.net>
References: <46068979.5050401@lwfinger.net>
	<20070325190252.1ff8f860@localhost>  <4606BF6C.5050002@lwfinger.net>
Message-ID: <1174962752.9814.15.camel@dv>

On Sun, 2007-03-25 at 13:29 -0500, Larry Finger wrote:
> Stefano Brivio wrote:
> > If the trade doesn't succeed, feel free to buy a Linksys WMP11 on eBay, you
> > will get a money refund.
> 
> Ok. I need the WPC11, which is the PCMCIA version. A WMP11 is a PCI card.

Careful, I cannot find evidence that 4301 was ever used in Linksys
WPC11.  According to http://www.seattlewireless.net/HardwareComparison
various revisions of WPC11 have Prism or RealTek chipset. 

Search for Broadcom 4301 mostly leads to Linksys WMP11 v2.7 and Dell
TrueMobile 1180 miniPCI.

If you have too few slots for PCI cards, I suggest that you buy
RouterBoard RB14 or RB18, which can hold 4 and 8 miniPCI cards
respectively.  I'm using RB14, and it's working fine.  It's seen as a
bridge:

04:01.0 PCI bridge: Hint Corp HB6 Universal PCI-PCI bridge
(non-transparent mode) (rev 15)

RB18 may be very long, make sure it fits your case.

-- 
Regards,
Pavel Roskin



From farslayer at gmail.com  Tue Mar 27 06:15:21 2007
From: farslayer at gmail.com (Far Slayer)
Date: Tue, 27 Mar 2007 00:15:21 -0400
Subject: Hardware Addition and HOW-TO for the Website
Message-ID: <f701fa460703262115x329ad2c2i97abd91ecc62fadd@mail.gmail.com>

HARDWARE ADDITION

 Belkin Wireless G Plus

Part Number F5D7011 ver. 2000

 0d:00.0 Network controller: Broadcom Corporation BCM4318 [AirForce One 54g]
802.11g Wireless LAN Controller (rev 02)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070327/5c2bda81/attachment.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070327/5c2bda81/attachment-0001.html>

From thilo at riessner.de  Tue Mar 27 16:33:05 2007
From: thilo at riessner.de (Thilo Riessner)
Date: Tue, 27 Mar 2007 16:33:05 +0200
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
Message-ID: <200703271633.05391.thilo@riessner.de>

I am using a Dell Latitude D620 with a "dell wireless 1390 802.11 b/g Mini 
PCI" card. This card is not on the list of supported devices. But it loads 
without errors:
===================== /var/log/messages ======================================
Mar 27 16:24:18 mobil1 kernel: ieee80211_crypt: unregistered algorithm 'NULL'
Mar 27 16:24:31 mobil1 kernel: ieee80211_crypt: registered algorithm 'NULL'
Mar 27 16:24:31 mobil1 kernel: ieee80211: 802.11 data/management/control 
stack, git-1.1.13
Mar 27 16:24:31 mobil1 kernel: ieee80211: Copyright (C) 2004-2005 Intel 
Corporation <jketreno at linux.intel.com>
Mar 27 16:24:31 mobil1 kernel: bcm43xx driver
==============================================================================

But there is no device found by iwconfig:
==============================================================================
# iwconfig
lo        no wireless extensions.

eth0      no wireless extensions.

sit0      no wireless extensions.
==============================================================================

the output of lspci -nv is:
==============================================================================
0c:00.0 Class 0280: 14e4:4311 (rev 01)
        Subsystem: 1028:0007
        Flags: fast devsel, IRQ 177
        Memory at ecffc000 (32-bit, non-prefetchable) [disabled] [size=16K]
        Capabilities: [40] Power Management version 2
        Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- 
Queue=0/0 Enable-
        Capabilities: [d0] Express Legacy Endpoint IRQ 0
        Capabilities: [100] Advanced Error Reporting
        Capabilities: [13c] Virtual Channel
==============================================================================

Is there any chance to get it working with the bcm43xx driver?
Thanks for any hints.

Thilo


From josejx at gentoo.org  Tue Mar 27 16:59:55 2007
From: josejx at gentoo.org (Joseph Jezak)
Date: Tue, 27 Mar 2007 10:59:55 -0400
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <200703271633.05391.thilo@riessner.de>
References: <200703271633.05391.thilo@riessner.de>
Message-ID: <4609316B.8040306@gentoo.org>

> the output of lspci -nv is:
> ==============================================================================
> 0c:00.0 Class 0280: 14e4:4311 (rev 01)
>         Subsystem: 1028:0007
>         Flags: fast devsel, IRQ 177
>         Memory at ecffc000 (32-bit, non-prefetchable) [disabled] [size=16K]
>         Capabilities: [40] Power Management version 2
>         Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- 
> Queue=0/0 Enable-
>         Capabilities: [d0] Express Legacy Endpoint IRQ 0
>         Capabilities: [100] Advanced Error Reporting
>         Capabilities: [13c] Virtual Channel
> ==============================================================================
> 
> Is there any chance to get it working with the bcm43xx driver?

This is a regular 0x4311 card.  You will need a newer kernel or
Larry's patches (found at ftp://lwfinger.dynalias.org/patches ) to
support this device.

-Joe


From larry.finger at lwfinger.net  Tue Mar 27 20:42:17 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 27 Mar 2007 13:42:17 -0500
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <4609316B.8040306@gentoo.org>
References: <200703271633.05391.thilo@riessner.de>
	<4609316B.8040306@gentoo.org>
Message-ID: <46096589.7060009@lwfinger.net>

Joseph Jezak wrote:
>> the output of lspci -nv is:
>> ==============================================================================
>> 0c:00.0 Class 0280: 14e4:4311 (rev 01)
>>         Subsystem: 1028:0007
>>         Flags: fast devsel, IRQ 177
>>         Memory at ecffc000 (32-bit, non-prefetchable) [disabled] [size=16K]
>>         Capabilities: [40] Power Management version 2
>>         Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- 
>> Queue=0/0 Enable-
>>         Capabilities: [d0] Express Legacy Endpoint IRQ 0
>>         Capabilities: [100] Advanced Error Reporting
>>         Capabilities: [13c] Virtual Channel
>> ==============================================================================
>>
>> Is there any chance to get it working with the bcm43xx driver?
> 
> This is a regular 0x4311 card.  You will need a newer kernel or
> Larry's patches (found at ftp://lwfinger.dynalias.org/patches ) to
> support this device.

As Joe said, you need at least 2.6.20 (2.6.20.4 if you have more than 1 GB RAM), or ne of the
combined_2.6.xx.patch files from the web site above.

BTW, I am the maintainer of the bcm43xx-softmac driver (the one in the kernel), and this card is
what is in my machine. It works very well.

Larry


From larry.finger at lwfinger.net  Wed Mar 28 01:27:45 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Tue, 27 Mar 2007 18:27:45 -0500
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <46096A95.7050608@Wetwork.Net>
References: <200703271633.05391.thilo@riessner.de>
	<4609316B.8040306@gentoo.org> <46096589.7060009@lwfinger.net>
	<46096A95.7050608@Wetwork.Net>
Message-ID: <4609A871.8070606@lwfinger.net>

Ehud Gavron wrote:
> I wouldn't have said anything... but yours is running "fine" and mine's
> running "very slowly."
> 
> That's the same Dell card in my laptop, and I am running
> 2.6.20-1.2933.fc6, which they indicate includes the 2.6.20.4 patches
> (http://fedoranews.org/cms/node/2817).
> 
> The performance with the bcm43xx driver is clunky at best, and the
> overall throughput as measured by various TCP utilities is around 160Kbps.
> 
> The performance using ndiswrapper is 4Mbps (which is what Comcast claims
> I have, so I can't really complain there).
> 
> I can be seeing the clunky performance, and without stopping any
> applications:
> rmmod bcm43xx
> modprobe ndiswrapper
> dhclient wlan0
> and then the applications will continue where they left off (the TCP
> connection is not terminated) and the performance is instantly improved.
> 
> I can continue working and
> rmmod ndiswrapper
> modprobe bcm43xx
> ifup eth1
> and the application will continue but in the slow performance mode.
> 
> No messages occur at the kernel level or in syslog to indicate anything
> unusual; the system has plenty of memory, CPU, etc.
> Naturally my lspci -nv looks exactly the same as everyone else's.  First
> two lines included below sig.
> 
> Thanks for any suggestions / hints / guesses you could help me with.

Use the very latest set of patches. The stuff that is coming with 2.6.21 changed my interface from
working best at 1 Mbs to having the best throughput at 36 Mbs. It doesn't do as well as the Windows
driver (ndiswrapper), but it isn't too far from it. My downlink from Time Warner is rated at & Mbs,
but I have not yet found an external site that can saturate it. I get almost as good a throughput as
my wired interface on a 100 Mps link.

All of the changes that are in 2.6.21 can be found at the ftp site in the previous messages.

Larry


From thilo at riessner.de  Wed Mar 28 14:50:05 2007
From: thilo at riessner.de (Thilo Riessner)
Date: Wed, 28 Mar 2007 14:50:05 +0200
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <4609A871.8070606@lwfinger.net>
References: <200703271633.05391.thilo@riessner.de>
	<46096A95.7050608@Wetwork.Net> <4609A871.8070606@lwfinger.net>
Message-ID: <200703281450.05579.thilo@riessner.de>

Thanks to all for the information. I'll try to build a 2.6.21rc5 kernel 
(without patches?), and present the results here as soon as it runs.

Thilo


From Larry.Finger at lwfinger.net  Wed Mar 28 16:17:37 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 28 Mar 2007 09:17:37 -0500
Subject: Machine checks on PPC with phy->rev == 1
Message-ID: <460A7901.30209@lwfinger.net>

Joe,

I have been working off-line with David Woodhouse and Pavel Roskin to sort out machine checks on PPC
hardware with a phy->rev == 1 card. As you likely recall, we submitted a patch that fixed two
distinct places in the code. One of them was a typo in the specs, but the other was found
empirically by David. Those have been fixed with a patch now queued with Linus for 2.6.21.

We did find an additional problem when I modified the phy_initg code to match the latest specs of
3/25/07. Now we get a problem in calc_loopback_gain, which David has localized to PHY registers
0x0814 and 0x0815. Based on earlier code in phy_initg (Step 4), it seems that those two registers
should be touched in this section only if phy->rev >= 2. Is there anything in the bcom driver to
support this?

Thanks,

Larry


From dwmw2 at infradead.org  Wed Mar 28 16:56:13 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Wed, 28 Mar 2007 15:56:13 +0100
Subject: Machine checks on PPC with phy->rev == 1
In-Reply-To: <460A7901.30209@lwfinger.net>
References: <460A7901.30209@lwfinger.net>
Message-ID: <1175093773.3277.176.camel@pmac.infradead.org>

On Wed, 2007-03-28 at 09:17 -0500, Larry Finger wrote:
> 
> I have been working off-line with David Woodhouse and Pavel Roskin to sort out machine checks on PPC
> hardware with a phy->rev == 1 card. As you likely recall, we submitted a patch that fixed two
> distinct places in the code. One of them was a typo in the specs, but the other was found
> empirically by David. Those have been fixed with a patch now queued with Linus for 2.6.21.
> 
> We did find an additional problem when I modified the phy_initg code to match the latest specs of
> 3/25/07. Now we get a problem in calc_loopback_gain, which David has localized to PHY registers
> 0x0814 and 0x0815. Based on earlier code in phy_initg (Step 4), it seems that those two registers
> should be touched in this section only if phy->rev >= 2. Is there anything in the bcom driver to
> support this?

FWIW this hack makes finding the machine checks _much_ easier...

--- bcm43xx_phy.c~      2007-03-28 11:10:42.000000000 +0100
+++ bcm43xx_phy.c       2007-03-28 12:15:34.000000000 +0100
@@ -131,8 +131,13 @@ u16 bcm43xx_phy_read(struct bcm43xx_priv
 {
        uint16_t foo;
        printk("phy_read %x...", offset);
+#if 0
        bcm43xx_write16(bcm, BCM43xx_MMIO_PHY_CONTROL, offset);
        foo = bcm43xx_read16(bcm, BCM43xx_MMIO_PHY_DATA);
+#else
+       outw(offset, bcm->mmio_addr + core_offset(bcm) + BCM43xx_MMIO_PHY_CONTROL - isa_io_base);
+       foo = inw(bcm->mmio_addr + core_offset(bcm) + BCM43xx_MMIO_PHY_DATA - isa_io_base);
+#endif
        printk(" = %x\n", foo);
        return foo;
 }

Coupled with printks in bcm43xx_phy_{read,write} I get no crashes any
more; just helpful output like...

phy_read 1... = 0
phy_read 811... = 0
phy_read 812... = 3
phy_read 814...<7>IN from bad port f59f53fe at f22b57ec
 = ffff
phy_read 815...<7>IN from bad port f59f53fe at f22b57ec
 = ffff
phy_read 5a... = 0
phy_read 59... = 0
phy_read 58... = 4


-- 
dwmw2



From Larry.Finger at lwfinger.net  Wed Mar 28 18:07:49 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 28 Mar 2007 11:07:49 -0500
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
Message-ID: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>

This patch implements the changes in the specifications for 2050radio_init that
were recently posted.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This material is for wireless-2.6 and the 'upstream' branch.

Larry


Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_radio.c
@@ -1343,11 +1343,110 @@ u16 bcm43xx_radio_calibrationvalue(struc
 	return ret;
 }
 
+#define LPD(L, P, D)    (((L) << 2) | ((P) << 1) | ((D) << 0))
+static u16 bcm43xx_get_812_value(struct bcm43xx_private *bcm, u8 lpd)
+{
+	struct bcm43xx_phyinfo *phy = bcm43xx_current_phy(bcm);
+	struct bcm43xx_radioinfo *radio = bcm43xx_current_radio(bcm);
+	u16 loop_or = 0;
+	u16 adj_loopback_gain = phy->loopback_gain[0];
+	u8 loop;
+	u16 extern_lna_control;
+
+	if (!phy->connected)
+		return 0;
+	if (!has_loopback_gain(phy)) {
+		if (phy->rev < 7 || !(bcm->sprom.boardflags
+		    & BCM43xx_BFL_EXTLNA)) {
+			switch (lpd) {
+			case LPD(0, 1, 1):
+				return 0x0FB2;
+			case LPD(0, 0, 1):
+				return 0x00B2;
+			case LPD(1, 0, 1):
+				return 0x30B2;
+			case LPD(1, 0, 0):
+				return 0x30B3;
+			default:
+				assert(0);
+			}
+		} else {
+			switch (lpd) {
+			case LPD(0, 1, 1):
+				return 0x8FB2;
+			case LPD(0, 0, 1):
+				return 0x80B2;
+			case LPD(1, 0, 1):
+				return 0x20B2;
+			case LPD(1, 0, 0):
+				return 0x20B3;
+			default:
+				assert(0);
+			}
+		}
+	} else {
+		if (radio->revision == 8)
+			adj_loopback_gain += 0x003E;
+		else
+			adj_loopback_gain += 0x0026;
+		if (adj_loopback_gain >= 0x46) {
+			adj_loopback_gain -= 0x46;
+			extern_lna_control = 0x3000;
+		} else if (adj_loopback_gain >= 0x3A) {
+			adj_loopback_gain -= 0x3A;
+			extern_lna_control = 0x2000;
+		} else if (adj_loopback_gain >= 0x2E) {
+			adj_loopback_gain -= 0x2E;
+			extern_lna_control = 0x1000;
+		} else {
+			adj_loopback_gain -= 0x10;
+			extern_lna_control = 0x0000;
+		}
+		for (loop = 0; loop < 16; loop++) {
+			u16 tmp = adj_loopback_gain - 6 * loop;
+			if (tmp < 6)
+				break;
+		}
+
+		loop_or = (loop << 8) | extern_lna_control;
+		if (phy->rev >= 7 && bcm->sprom.boardflags
+		    & BCM43xx_BFL_EXTLNA) {
+			if (extern_lna_control)
+				loop_or |= 0x8000;
+			switch (lpd) {
+			case LPD(0, 1, 1):
+				return 0x8F92;
+			case LPD(0, 0, 1):
+				return (0x8092 | loop_or);
+			case LPD(1, 0, 1):
+				return (0x2092 | loop_or);
+			case LPD(1, 0, 0):
+				return (0x2093 | loop_or);
+			default:
+				assert(0);
+			}
+		} else {
+			switch (lpd) {
+			case LPD(0, 1, 1):
+				return 0x0F92;
+			case LPD(0, 0, 1):
+			case LPD(1, 0, 1):
+				return (0x0092 | loop_or);
+			case LPD(1, 0, 0):
+				return (0x0093 | loop_or);
+			default:
+				assert(0);
+			}
+		}
+	}
+	return 0;
+}
+
 u16 bcm43xx_radio_init2050(struct bcm43xx_private *bcm)
 {
 	struct bcm43xx_phyinfo *phy = bcm43xx_current_phy(bcm);
 	struct bcm43xx_radioinfo *radio = bcm43xx_current_radio(bcm);
-	u16 backup[19] = { 0 };
+	u16 backup[21] = { 0 };
 	u16 ret;
 	u16 i, j;
 	u32 tmp1 = 0, tmp2 = 0;
@@ -1373,19 +1472,36 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 			backup[8] = bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS);
 			backup[9] = bcm43xx_phy_read(bcm, 0x0802);
 			bcm43xx_phy_write(bcm, 0x0814,
-			                  (bcm43xx_phy_read(bcm, 0x0814) | 0x0003));
+			                  (bcm43xx_phy_read(bcm, 0x0814)
+					  | 0x0003));
 			bcm43xx_phy_write(bcm, 0x0815,
-			                  (bcm43xx_phy_read(bcm, 0x0815) & 0xFFFC));	
+			                  (bcm43xx_phy_read(bcm, 0x0815)
+					  & 0xFFFC));
 			bcm43xx_phy_write(bcm, BCM43xx_PHY_G_CRS,
-			                  (bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS) & 0x7FFF));
+			                  (bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS)
+					  & 0x7FFF));
 			bcm43xx_phy_write(bcm, 0x0802,
 			                  (bcm43xx_phy_read(bcm, 0x0802) & 0xFFFC));
-			bcm43xx_phy_write(bcm, 0x0811, 0x01B3);
-			bcm43xx_phy_write(bcm, 0x0812, 0x0FB2);
+			if (phy->rev > 1) { /* loopback gain enabled */
+				backup[19] = bcm43xx_phy_read(bcm, 0x080F);
+				backup[20] = bcm43xx_phy_read(bcm, 0x0810);
+				if (phy->rev >= 3)
+					bcm43xx_phy_write(bcm, 0x080F, 0xC020);
+				else
+					bcm43xx_phy_write(bcm, 0x080F, 0x8020);
+				bcm43xx_phy_write(bcm, 0x0810, 0x0000);
+			}
+			bcm43xx_phy_write(bcm, 0x0812,
+					  bcm43xx_get_812_value(bcm, LPD(0, 1, 1)));
+			if (phy->rev < 7 || !(bcm->sprom.boardflags
+			    & BCM43xx_BFL_EXTLNA))
+				bcm43xx_phy_write(bcm, 0x0811, 0x01B3);
+			else
+				bcm43xx_phy_write(bcm, 0x0811, 0x09B3);
 		}
-		bcm43xx_write16(bcm, BCM43xx_MMIO_PHY_RADIO,
-		                (bcm43xx_read16(bcm, BCM43xx_MMIO_PHY_RADIO) | 0x8000));
 	}
+	bcm43xx_write16(bcm, BCM43xx_MMIO_PHY_RADIO,
+	                (bcm43xx_read16(bcm, BCM43xx_MMIO_PHY_RADIO) | 0x8000));
 	backup[10] = bcm43xx_phy_read(bcm, 0x0035);
 	bcm43xx_phy_write(bcm, 0x0035,
 	                  (bcm43xx_phy_read(bcm, 0x0035) & 0xFF7F));
@@ -1397,10 +1513,12 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		bcm43xx_write16(bcm, 0x03E6, 0x0122);
 	} else {
 		if (phy->analog >= 2)
-			bcm43xx_phy_write(bcm, 0x0003, (bcm43xx_phy_read(bcm, 0x0003)
-					& 0xFFBF) | 0x0040);
+			bcm43xx_phy_write(bcm, 0x0003,
+					  (bcm43xx_phy_read(bcm, 0x0003)
+					  & 0xFFBF) | 0x0040);
 		bcm43xx_write16(bcm, BCM43xx_MMIO_CHANNEL_EXT,
-		                (bcm43xx_read16(bcm, BCM43xx_MMIO_CHANNEL_EXT) | 0x2000));
+		                (bcm43xx_read16(bcm, BCM43xx_MMIO_CHANNEL_EXT)
+				| 0x2000));
 	}
 
 	ret = bcm43xx_radio_calibrationvalue(bcm);
@@ -1408,16 +1526,25 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 	if (phy->type == BCM43xx_PHYTYPE_B)
 		bcm43xx_radio_write16(bcm, 0x0078, 0x0026);
 
+	if (phy->connected)
+		bcm43xx_phy_write(bcm, 0x0812,
+				  bcm43xx_get_812_value(bcm, LPD(0, 1, 1)));
 	bcm43xx_phy_write(bcm, 0x0015, 0xBFAF);
 	bcm43xx_phy_write(bcm, 0x002B, 0x1403);
 	if (phy->connected)
-		bcm43xx_phy_write(bcm, 0x0812, 0x00B2);
+		bcm43xx_phy_write(bcm, 0x0812,
+				  bcm43xx_get_812_value(bcm, LPD(0, 0, 1)));
 	bcm43xx_phy_write(bcm, 0x0015, 0xBFA0);
 	bcm43xx_radio_write16(bcm, 0x0051,
 	                      (bcm43xx_radio_read16(bcm, 0x0051) | 0x0004));
-	bcm43xx_radio_write16(bcm, 0x0052, 0x0000);
-	bcm43xx_radio_write16(bcm, 0x0043,
-			      (bcm43xx_radio_read16(bcm, 0x0043) & 0xFFF0) | 0x0009);
+	if (radio->revision == 8)
+		bcm43xx_radio_write16(bcm, 0x0043, 0x001F);
+	else {
+		bcm43xx_radio_write16(bcm, 0x0052, 0x0000);
+		bcm43xx_radio_write16(bcm, 0x0043,
+				      (bcm43xx_radio_read16(bcm, 0x0043) & 0xFFF0)
+				      | 0x0009);
+	}
 	bcm43xx_phy_write(bcm, 0x0058, 0x0000);
 
 	for (i = 0; i < 16; i++) {
@@ -1425,21 +1552,25 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		bcm43xx_phy_write(bcm, 0x0059, 0xC810);
 		bcm43xx_phy_write(bcm, 0x0058, 0x000D);
 		if (phy->connected)
-			bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+			bcm43xx_phy_write(bcm, 0x0812,
+					  bcm43xx_get_812_value(bcm, LPD(1, 0, 1)));
 		bcm43xx_phy_write(bcm, 0x0015, 0xAFB0);
 		udelay(10);
 		if (phy->connected)
-			bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+			bcm43xx_phy_write(bcm, 0x0812,
+					  bcm43xx_get_812_value(bcm, LPD(1, 0, 1)));
 		bcm43xx_phy_write(bcm, 0x0015, 0xEFB0);
 		udelay(10);
 		if (phy->connected)
-			bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+			bcm43xx_phy_write(bcm, 0x0812,
+					  bcm43xx_get_812_value(bcm, LPD(1, 0, 0)));
 		bcm43xx_phy_write(bcm, 0x0015, 0xFFF0);
-		udelay(10);
+		udelay(20);
 		tmp1 += bcm43xx_phy_read(bcm, 0x002D);
 		bcm43xx_phy_write(bcm, 0x0058, 0x0000);
 		if (phy->connected)
-			bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+			bcm43xx_phy_write(bcm, 0x0812,
+					  bcm43xx_get_812_value(bcm, LPD(1, 0, 1)));
 		bcm43xx_phy_write(bcm, 0x0015, 0xAFB0);
 	}
 
@@ -1457,21 +1588,29 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 			bcm43xx_phy_write(bcm, 0x0059, 0xC810);
 			bcm43xx_phy_write(bcm, 0x0058, 0x000D);
 			if (phy->connected)
-				bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+				bcm43xx_phy_write(bcm, 0x0812,
+						  bcm43xx_get_812_value(bcm,
+						  LPD(1, 0, 1)));
 			bcm43xx_phy_write(bcm, 0x0015, 0xAFB0);
 			udelay(10);
 			if (phy->connected)
-				bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+				bcm43xx_phy_write(bcm, 0x0812,
+						  bcm43xx_get_812_value(bcm,
+						  LPD(1, 0, 1)));
 			bcm43xx_phy_write(bcm, 0x0015, 0xEFB0);
 			udelay(10);
 			if (phy->connected)
-				bcm43xx_phy_write(bcm, 0x0812, 0x30B3); /* 0x30B3 is not a typo */
+				bcm43xx_phy_write(bcm, 0x0812,
+						  bcm43xx_get_812_value(bcm,
+						  LPD(1, 0, 0)));
 			bcm43xx_phy_write(bcm, 0x0015, 0xFFF0);
 			udelay(10);
 			tmp2 += bcm43xx_phy_read(bcm, 0x002D);
 			bcm43xx_phy_write(bcm, 0x0058, 0x0000);
 			if (phy->connected)
-				bcm43xx_phy_write(bcm, 0x0812, 0x30B2);
+				bcm43xx_phy_write(bcm, 0x0812,
+						  bcm43xx_get_812_value(bcm,
+						  LPD(1, 0, 1)));
 			bcm43xx_phy_write(bcm, 0x0015, 0xAFB0);
 		}
 		tmp2++;
@@ -1497,15 +1636,20 @@ u16 bcm43xx_radio_init2050(struct bcm43x
 		bcm43xx_phy_write(bcm, 0x0030, backup[2]);
 		bcm43xx_write16(bcm, 0x03EC, backup[3]);
 	} else {
-		bcm43xx_write16(bcm, BCM43xx_MMIO_PHY_RADIO,
-				(bcm43xx_read16(bcm, BCM43xx_MMIO_PHY_RADIO) & 0x7FFF));
 		if (phy->connected) {
+			bcm43xx_write16(bcm, BCM43xx_MMIO_PHY_RADIO,
+					(bcm43xx_read16(bcm,
+					BCM43xx_MMIO_PHY_RADIO) & 0x7FFF));
 			bcm43xx_phy_write(bcm, 0x0811, backup[4]);
 			bcm43xx_phy_write(bcm, 0x0812, backup[5]);
 			bcm43xx_phy_write(bcm, 0x0814, backup[6]);
 			bcm43xx_phy_write(bcm, 0x0815, backup[7]);
 			bcm43xx_phy_write(bcm, BCM43xx_PHY_G_CRS, backup[8]);
 			bcm43xx_phy_write(bcm, 0x0802, backup[9]);
+			if (phy->rev > 1) {
+				bcm43xx_phy_write(bcm, 0x080F, backup[19]);
+				bcm43xx_phy_write(bcm, 0x0810, backup[20]);
+			}
 		}
 	}
 	if (i >= 15)
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.h
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.h
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.h
@@ -48,6 +48,10 @@ void bcm43xx_raw_phy_unlock(struct bcm43
 		local_irq_restore(flags);	\
 	} while (0)
 
+/* Card uses the loopback gain stuff */
+#define has_loopback_gain(phy) \
+        (((phy)->rev > 1) || ((phy)->connected))
+
 u16 bcm43xx_phy_read(struct bcm43xx_private *bcm, u16 offset);
 void bcm43xx_phy_write(struct bcm43xx_private *bcm, u16 offset, u16 val);
 
Index: wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
===================================================================
--- wireless-2.6.orig/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
+++ wireless-2.6/drivers/net/wireless/bcm43xx/bcm43xx_phy.c
@@ -300,16 +300,20 @@ static void bcm43xx_phy_agcsetup(struct 
 
 	if (phy->rev > 2) {
 		bcm43xx_phy_write(bcm, 0x0422, 0x287A);
-		bcm43xx_phy_write(bcm, 0x0420, (bcm43xx_phy_read(bcm, 0x0420) & 0x0FFF) | 0x3000); 
+		bcm43xx_phy_write(bcm, 0x0420, (bcm43xx_phy_read(bcm, 0x0420)
+				  & 0x0FFF) | 0x3000);
 	}
 		
-	bcm43xx_phy_write(bcm, 0x04A8, (bcm43xx_phy_read(bcm, 0x04A8) & 0x8080) | 0x7874);
+	bcm43xx_phy_write(bcm, 0x04A8, (bcm43xx_phy_read(bcm, 0x04A8) & 0x8080)
+					| 0x7874);
 	bcm43xx_phy_write(bcm, 0x048E, 0x1C00);
 
 	if (phy->rev == 1) {
-		bcm43xx_phy_write(bcm, 0x04AB, (bcm43xx_phy_read(bcm, 0x04AB) & 0xF0FF) | 0x0600);
+		bcm43xx_phy_write(bcm, 0x04AB, (bcm43xx_phy_read(bcm, 0x04AB)
+				  & 0xF0FF) | 0x0600);
 		bcm43xx_phy_write(bcm, 0x048B, 0x005E);
-		bcm43xx_phy_write(bcm, 0x048C, (bcm43xx_phy_read(bcm, 0x048C) & 0xFF00) | 0x001E);
+		bcm43xx_phy_write(bcm, 0x048C, (bcm43xx_phy_read(bcm, 0x048C)
+				  & 0xFF00) | 0x001E);
 		bcm43xx_phy_write(bcm, 0x048D, 0x0002);
 	}
 
@@ -335,7 +339,8 @@ static void bcm43xx_phy_setupg(struct bc
 	if (phy->rev == 1) {
 		bcm43xx_phy_write(bcm, 0x0406, 0x4F19);
 		bcm43xx_phy_write(bcm, BCM43xx_PHY_G_CRS,
-				  (bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS) & 0xFC3F) | 0x0340);
+				  (bcm43xx_phy_read(bcm, BCM43xx_PHY_G_CRS)
+				  & 0xFC3F) | 0x0340);
 		bcm43xx_phy_write(bcm, 0x042C, 0x005A);
 		bcm43xx_phy_write(bcm, 0x0427, 0x001A);
 


From will.dyson at gmail.com  Wed Mar 28 19:28:19 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Wed, 28 Mar 2007 13:28:19 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <200703241742.23639.mb@bu3sch.de>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703241742.23639.mb@bu3sch.de>
Message-ID: <8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>

On 3/24/07, Michael Buesch <mb at bu3sch.de> wrote:

> I _still_ think that this should be fixed in the arch DMA code
> and _not_ in every single driver on earth. But I discussed this in
> the past.

That would be nice. What would that look like to you? A GFP flag that
gets memory within the dma_mask?

> Ehm, no. This would always allocate in the DMA zone, even if there
> is no requirement to do so (on i386 for example).

Oops. That'll teach me to hurry a patch before I go away. Less than 1G
low memory is the norm.

I'll fix the word-wrap and make sure to run indent as well.

-- 
Will Dyson


From larry.finger at lwfinger.net  Wed Mar 28 19:42:26 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 28 Mar 2007 12:42:26 -0500
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>	<200703241742.23639.mb@bu3sch.de>
	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
Message-ID: <460AA902.6000609@lwfinger.net>

Will Dyson wrote:
> On 3/24/07, Michael Buesch <mb at bu3sch.de> wrote:
> 
>> I _still_ think that this should be fixed in the arch DMA code
>> and _not_ in every single driver on earth. But I discussed this in
>> the past.
> 
> That would be nice. What would that look like to you? A GFP flag that
> gets memory within the dma_mask?

To me that would mean honoring the dma_mask for _ALL_ DMA memory allocations. I have not followed
all the arguments as to why this was never fixed in the i386 code, but I know that the x86_64
architecture was forced to produce the same (wrong) results as were obtained in the i386-specific
code. I agree that it should be fixed; however, it will never happen. As a result, every driver for
hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
enough to address all of memory.

Larry



From johannes at sipsolutions.net  Wed Mar 28 19:52:17 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 28 Mar 2007 19:52:17 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <460AA902.6000609@lwfinger.net>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703241742.23639.mb@bu3sch.de>
	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
	<460AA902.6000609@lwfinger.net>
Message-ID: <1175104338.5151.71.camel@johannes.berg>

On Wed, 2007-03-28 at 12:42 -0500, Larry Finger wrote:
> We will
> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
> enough to address all of memory.

Not likely, most such machines have an IOMMU.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070328/2ec2a0f9/attachment.pgp>

From mb at bu3sch.de  Wed Mar 28 22:51:41 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 28 Mar 2007 22:51:41 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703241742.23639.mb@bu3sch.de>
	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
Message-ID: <200703282251.41972.mb@bu3sch.de>

On Wednesday 28 March 2007 19:28, Will Dyson wrote:
> On 3/24/07, Michael Buesch <mb at bu3sch.de> wrote:
> 
> > I _still_ think that this should be fixed in the arch DMA code
> > and _not_ in every single driver on earth. But I discussed this in
> > the past.
> 
> That would be nice. What would that look like to you? A GFP flag that
> gets memory within the dma_mask?

The dma_mask must be honored for _all_ DMA mapping actions without
exceptions. That's what that mask is for.

> > Ehm, no. This would always allocate in the DMA zone, even if there
> > is no requirement to do so (on i386 for example).
> 
> Oops. That'll teach me to hurry a patch before I go away. Less than 1G
> low memory is the norm.
> 
> I'll fix the word-wrap and make sure to run indent as well.

Ok, thanks.

I'll apply a patch to workaround the issue in the driver to my tree,
but only while explicitely stating that I'd like to have a fix in
the arch code for this. Unfortunately I can't easily do it myself, as I
don't have a machine with this problem here.
And yes, I know that it's probably hard to fix. ;) But it should
be possible to always honor the dma_mask. It might require some rewrite
of the lowlevel DMA code and probably some IOMMU stuff and so on, dunno.

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Mar 28 22:56:54 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 28 Mar 2007 22:56:54 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <460AA902.6000609@lwfinger.net>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
	<460AA902.6000609@lwfinger.net>
Message-ID: <200703282256.54879.mb@bu3sch.de>

On Wednesday 28 March 2007 19:42, Larry Finger wrote:
> Will Dyson wrote:
> > On 3/24/07, Michael Buesch <mb at bu3sch.de> wrote:
> > 
> >> I _still_ think that this should be fixed in the arch DMA code
> >> and _not_ in every single driver on earth. But I discussed this in
> >> the past.
> > 
> > That would be nice. What would that look like to you? A GFP flag that
> > gets memory within the dma_mask?
> 
> To me that would mean honoring the dma_mask for _ALL_ DMA memory allocations. I have not followed
> all the arguments as to why this was never fixed in the i386 code,

On i386 we are fine, as long as we don't use scatter-gather IO for the
DMA operations. If we kmalloc() the DMA buffers, we are implicitely
guaranteed (as long as nobody changed the user/kernel split) to be
under the 1G barrier (actually the barrier is at 1G minus 128M).

Although, people want to implement SG-IO for mac80211. That
would mean buffers are not copied to kernelspace, so they could
be above 1G.

> but I know that the x86_64 
> architecture was forced to produce the same (wrong) results as were obtained in the i386-specific
> code. I agree that it should be fixed; however, it will never happen.

Explain why, please. I'm very interrested in knowing why this
is so fucking broken and why nobody fixes it. ;)

> As a result, every driver for 
> hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
> enough to address all of memory.

Nope, see Johannes' mail.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Wed Mar 28 23:43:58 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 28 Mar 2007 16:43:58 -0500
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <200703282256.54879.mb@bu3sch.de>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>	<460AA902.6000609@lwfinger.net>
	<200703282256.54879.mb@bu3sch.de>
Message-ID: <460AE19E.9090300@lwfinger.net>

Michael Buesch wrote:
> On Wednesday 28 March 2007 19:42, Larry Finger wrote:
>> Will Dyson wrote:
>>> On 3/24/07, Michael Buesch <mb at bu3sch.de> wrote:
>>>
>>>> I _still_ think that this should be fixed in the arch DMA code
>>>> and _not_ in every single driver on earth. But I discussed this in
>>>> the past.
>>> That would be nice. What would that look like to you? A GFP flag that
>>> gets memory within the dma_mask?
>> To me that would mean honoring the dma_mask for _ALL_ DMA memory allocations. I have not followed
>> all the arguments as to why this was never fixed in the i386 code,
> 
> On i386 we are fine, as long as we don't use scatter-gather IO for the
> DMA operations. If we kmalloc() the DMA buffers, we are implicitely
> guaranteed (as long as nobody changed the user/kernel split) to be
> under the 1G barrier (actually the barrier is at 1G minus 128M).
> 
> Although, people want to implement SG-IO for mac80211. That
> would mean buffers are not copied to kernelspace, so they could
> be above 1G.
> 
>> but I know that the x86_64 
>> architecture was forced to produce the same (wrong) results as were obtained in the i386-specific
>> code. I agree that it should be fixed; however, it will never happen.
> 
> Explain why, please. I'm very interrested in knowing why this
> is so fucking broken and why nobody fixes it. ;)

John - do you know the history?

>> As a result, every driver for 
>> hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
>> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
>> enough to address all of memory.
> 
> Nope, see Johannes' mail.

Yes, if an IOMMU is included, but why don't we have them now on our 64-bit processors?

Larry


From mb at bu3sch.de  Wed Mar 28 23:56:59 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 28 Mar 2007 23:56:59 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <460AE19E.9090300@lwfinger.net>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703282256.54879.mb@bu3sch.de> <460AE19E.9090300@lwfinger.net>
Message-ID: <200703282356.59264.mb@bu3sch.de>

On Wednesday 28 March 2007 23:43, Larry Finger wrote:
> >> As a result, every driver for 
> >> hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
> >> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
> >> enough to address all of memory.
> > 
> > Nope, see Johannes' mail.
> 
> Yes, if an IOMMU is included, but why don't we have them now on our 64-bit processors?

Don't we? I thought all 64bit machines that support >4G Ram do have an IOMMU.

-- 
Greetings Michael.


From larry.finger at lwfinger.net  Thu Mar 29 00:16:56 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Wed, 28 Mar 2007 17:16:56 -0500
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <200703282356.59264.mb@bu3sch.de>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703282256.54879.mb@bu3sch.de> <460AE19E.9090300@lwfinger.net>
	<200703282356.59264.mb@bu3sch.de>
Message-ID: <460AE958.8060101@lwfinger.net>

Michael Buesch wrote:
> On Wednesday 28 March 2007 23:43, Larry Finger wrote:
>>>> As a result, every driver for 
>>>> hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
>>>> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
>>>> enough to address all of memory.
>>> Nope, see Johannes' mail.
>> Yes, if an IOMMU is included, but why don't we have them now on our 64-bit processors?
> 
> Don't we? I thought all 64bit machines that support >4G Ram do have an IOMMU.

My AMD Turion 64 X2 processor can address more than 4 GB RAM, but AMD's IOMMU has not yet been
released. It is a moot point as my motherboard can only support 2 GB, but I suspect there are mb's
that do.

Larry


From rjw at sisk.pl  Thu Mar 29 00:32:50 2007
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Thu, 29 Mar 2007 00:32:50 +0200
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <460AE958.8060101@lwfinger.net>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703282356.59264.mb@bu3sch.de> <460AE958.8060101@lwfinger.net>
Message-ID: <200703290032.51115.rjw@sisk.pl>

On Thursday, 29 March 2007 00:16, Larry Finger wrote:
> Michael Buesch wrote:
> > On Wednesday 28 March 2007 23:43, Larry Finger wrote:
> >>>> As a result, every driver for 
> >>>> hardware with less than 32-bit DMA addressing has to address (pun intended) the problem. We will
> >>>> probably be fighting the problem again when > 4 GB RAM computers become common and 32 bits are not
> >>>> enough to address all of memory.
> >>> Nope, see Johannes' mail.
> >> Yes, if an IOMMU is included, but why don't we have them now on our 64-bit processors?
> > 
> > Don't we? I thought all 64bit machines that support >4G Ram do have an IOMMU.
> 
> My AMD Turion 64 X2 processor can address more than 4 GB RAM, but AMD's IOMMU has not yet been
> released.

Er, are you sure?  AFAIR all of the K8 CPUs have something called GART IOMMU,
which is not a "real" IOMMU, but still it can do its job (to a limited extent,
though).

Greetings,
Rafael


From will.dyson at gmail.com  Thu Mar 29 06:36:13 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 29 Mar 2007 00:36:13 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <200703282251.41972.mb@bu3sch.de>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703241742.23639.mb@bu3sch.de>
	<8e6f94720703281028w7db9e92dq60445731e9c36dd1@mail.gmail.com>
	<200703282251.41972.mb@bu3sch.de>
Message-ID: <8e6f94720703282136q122011f9i547311ecb15ac313@mail.gmail.com>

On 3/28/07, Michael Buesch <mb at bu3sch.de> wrote:

> The dma_mask must be honored for _all_ DMA mapping actions without
> exceptions. That's what that mask is for.

As far as I can see, the DMA mapping actions _do_ honor the mask. If
the memory to be mapped is outside the mask (and no IOMMU is
available), the mapping fails. We had previously not been checking for
this failure, but that is our fault and not a problem with the DMA
api.

Larry mentioned honoring the mask for DMA allocations. But the problem
is that there doesn't seem to be a way to tell the allocator, "I'll
want to use this memory for streaming DMA eventually". Indeed, an
entirely different level of the networking stack allocates the TX
buffers.

> I'll apply a patch to workaround the issue in the driver to my tree,
> but only while explicitely stating that I'd like to have a fix in
> the arch code for this. Unfortunately I can't easily do it myself, as I
> don't have a machine with this problem here.

I'd be willing to give it a shot, if we can figure out what _should_
be done. Anyone know what other devices have less than 32bit DMA
capabilities (besides b44)?

> And yes, I know that it's probably hard to fix. ;) But it should
> be possible to always honor the dma_mask. It might require some rewrite
> of the lowlevel DMA code and probably some IOMMU stuff and so on, dunno.

If AMD had put a real IOMMU (instead of an optional "use the GART"
kludge) into the x86_64 spec, things would be much easier. But if
wishes were dollars....

-- 
Will Dyson
http://www.lucidts.com/
Linux/Mac/Win consulting


From will.dyson at gmail.com  Thu Mar 29 06:40:43 2007
From: will.dyson at gmail.com (Will Dyson)
Date: Thu, 29 Mar 2007 00:40:43 -0400
Subject: [PATCH 3/3] bcm43xx-mac80211: Work around 30bit DMA limitation
In-Reply-To: <200703290032.51115.rjw@sisk.pl>
References: <8e6f94720703231424q1ac91c4ax20bc8af5e4747683@mail.gmail.com>
	<200703282356.59264.mb@bu3sch.de> <460AE958.8060101@lwfinger.net>
	<200703290032.51115.rjw@sisk.pl>
Message-ID: <8e6f94720703282140s1dedf284x5fa9d59cbfbb3d8e@mail.gmail.com>

On 3/28/07, Rafael J. Wysocki <rjw at sisk.pl> wrote:

> Er, are you sure?  AFAIR all of the K8 CPUs have something called GART IOMMU,
> which is not a "real" IOMMU, but still it can do its job (to a limited extent,
> though).

Current Intel x86_64 chips have no such thing, however.

-- 
Will Dyson


From Larry.Finger at lwfinger.net  Thu Mar 29 07:56:10 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Mar 2007 00:56:10 -0500
Subject: A new script for bcm43xx performance testing and some results
Message-ID: <460B54FA.5050103@lwfinger.net>

Attached is a new script for testing network performance. Rather than measuring the transfer rate
to/from an Iperf server, this Perl script measures transmit and receive rates by transferring a file
from the computer under test to a mounted NFS system and back. The file on the destination is
deleted before the transfer is begun to avoid (as much as possible) any effects of caching.

For this test, I used my trusty server that is attached to the router by a 100BaseTX wired
connection. Both wireless and wired connections were as free of other traffic as possible. I tested
3 different BCM chips as before. The results are stated in KB/s, where 1KB = 1024 B. The first
number is for transmit, the second for receive. The file used for these tests is roughly 3 MB.

Wireless Rate    BCM4306 ver 2       BCM4318 ver 3        BCM4311
========================================================================

 6 Mbs           297.2 /  727.0      366.8 / 1798.2       370.9 / 1497.3
 9 Mbs           415.0 /  555.3      458.1 / 1821.9       461.1 / 1628.5
11 Mbs           436.4 /  673.6      470.7 / 1526.4       481.2 / 1411.9
18 Mbs           563.2 /  752.7      624.6 / 2006.0       566.5 / 1337.6
24 Mbs           595.8 /  718.9      681.7 / 1481.9       692.1 / 1688.2
36 Mbs           653.9 /  712.9      749.4 / 1504.2       751.0 / 1445.0
48 Mbs           681.2 /  716.6      518.9 / 1674.6       352.5 / 1509.7

The receive speeds are considerably higher than the results for transmit. I interpret this to mean
that the AP is sending as fast as it thinks is reliable, and the only effect of the Mbs rate is in
the transmission of the ACK's. In addition, there are fewer parameters that need to be set for the
receiver than for the transmitter. The jitter in the receive rate probably indicates the reliability
of these numbers. Performance of the early BCM4306 is worst with the 4318 and 4311 roughly
comparable, although the 4318 is much better at the 48 Mbs rate. It even works with a 54 Mbs setting.

The patch posted today under the subject "[PATCH] bcm43xx: Change initialization for 2050 radios"
improves these numbers by a factor of two or more, particularly for the 4306.

Larry
-------------- next part --------------
A non-text attachment was scrubbed...
Name: file_test.pl
Type: application/x-perl
Size: 3504 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070329/36fcb0b0/attachment.bin>

From johannes at sipsolutions.net  Thu Mar 29 13:09:26 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 29 Mar 2007 13:09:26 +0200
Subject: initial value extraction
Message-ID: <1175166566.8807.42.camel@johannes.berg>

Hi,

Ahem. How can this even work?

Let's build a naming scheme for initial value blogs:

name = "r" corerev "-" PHY [ "-" current PHY ] [ "-bs" ]

where:
   bs = band specific, upload when switching PHYs on
        multi-PHY cores and when initialising

   current PHY is used when a core supports multiple PHYs

   PHY types can be:
     "g"  for cores with G PHY only
     "a"  for cores with A PHY only
     "ag" for cores with A and BG PHYs
     "n"  for cores with N PHY
     "lp" for cores with LP PHY

Then my version 4 driver contains these initial values (in this order):
r4-g
r4-g-bs
r4-a
r4-a-bs
r5-g
r5-g-bs
r5-ag-a
r5-ag-g
r5-ag-a-bs
r5-ag-g-bs
r9-bg
r9-bg-bs
r9-ag-a
r9-ag-g
r9-ag-a-bs
r9-ag-g-bs
r11-n
r11-n-bs
r13-lp
r13-lp-bs


But my version 3 driver contains:

r2-b    (g?)
r2-b-bs (g?)
r2-a
r2-a-bs
r5-g
r5-g-bs
r5-ag-a
r5-ag-g
r5-ag-a-bs
r5-ag-g-bs
r11-n
r11-n-bs

And other drivers will probably contain other things... I don't see how
this can possibly work properly with the simple numbering scheme
fwcutter gives it right now.

I suggest that you adopt this naming scheme and only support extraction
from drivers where it can be verified (i.e. linux drivers).

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070329/e620e1ff/attachment.pgp>

From johannes at sipsolutions.net  Thu Mar 29 13:30:28 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 29 Mar 2007 13:30:28 +0200
Subject: A new script for bcm43xx performance testing and some results
In-Reply-To: <460B54FA.5050103@lwfinger.net>
References: <460B54FA.5050103@lwfinger.net>
Message-ID: <1175167828.8807.62.camel@johannes.berg>

Nice, thanks for doing these numbers again!

> Wireless Rate    BCM4306 ver 2       BCM4318 ver 3        BCM4311
> ========================================================================
> 
>  6 Mbs           297.2 /  727.0      366.8 / 1798.2       370.9 / 1497.3
>  9 Mbs           415.0 /  555.3      458.1 / 1821.9       461.1 / 1628.5
> 11 Mbs           436.4 /  673.6      470.7 / 1526.4       481.2 / 1411.9
> 18 Mbs           563.2 /  752.7      624.6 / 2006.0       566.5 / 1337.6
> 24 Mbs           595.8 /  718.9      681.7 / 1481.9       692.1 / 1688.2
> 36 Mbs           653.9 /  712.9      749.4 / 1504.2       751.0 / 1445.0
> 48 Mbs           681.2 /  716.6      518.9 / 1674.6       352.5 / 1509.7
> 
> The receive speeds are considerably higher than the results for transmit. I interpret this to mean
> that the AP is sending as fast as it thinks is reliable, and the only effect of the Mbs rate is in
> the transmission of the ACK's.

The ACK rate is actually determined from that shm ack rate table
depending on the incoming frame's rate, the rate you set only affects
regular transmissions.

> In addition, there are fewer parameters that need to be set for the
> receiver than for the transmitter. The jitter in the receive rate probably indicates the reliability
> of these numbers. Performance of the early BCM4306 is worst with the 4318 and 4311 roughly
> comparable, although the 4318 is much better at the 48 Mbs rate. It even works with a 54 Mbs setting.
> 
> The patch posted today under the subject "[PATCH] bcm43xx: Change initialization for 2050 radios"
> improves these numbers by a factor of two or more, particularly for the 4306.

Amazing :)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070329/d943a868/attachment.pgp>

From dwmw2 at infradead.org  Thu Mar 29 19:22:35 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Thu, 29 Mar 2007 18:22:35 +0100
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
In-Reply-To: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>
References: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>
Message-ID: <1175188955.3122.42.camel@pmac.infradead.org>

On Wed, 2007-03-28 at 11:07 -0500, Larry Finger wrote:
> This patch implements the changes in the specifications for
> 2050radio_init that were recently posted.

That seems to help performance quite a lot -- although 'rate 11M' still
runs a _lot_ faster than the 24M which the driver seems to settle at by
default, when it's sitting 1m from the AP.

-- 
dwmw2



From larry.finger at lwfinger.net  Thu Mar 29 19:57:04 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Mar 2007 12:57:04 -0500
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
In-Reply-To: <1175188955.3122.42.camel@pmac.infradead.org>
References: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>
	<1175188955.3122.42.camel@pmac.infradead.org>
Message-ID: <460BFDF0.9010401@lwfinger.net>

David Woodhouse wrote:
> On Wed, 2007-03-28 at 11:07 -0500, Larry Finger wrote:
>> This patch implements the changes in the specifications for
>> 2050radio_init that were recently posted.
> 
> That seems to help performance quite a lot -- although 'rate 11M' still
> runs a _lot_ faster than the 24M which the driver seems to settle at by
> default, when it's sitting 1m from the AP.
> 

Is the better performance for 11M in transmitting or receiving? How is it measured? My 4306's, which
should be the same as yours, do better at 24M than at 11M.

Larry



From dwmw2 at infradead.org  Thu Mar 29 20:03:02 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Thu, 29 Mar 2007 19:03:02 +0100
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
In-Reply-To: <460BFDF0.9010401@lwfinger.net>
References: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>
	<1175188955.3122.42.camel@pmac.infradead.org>
	<460BFDF0.9010401@lwfinger.net>
Message-ID: <1175191382.3122.44.camel@pmac.infradead.org>

On Thu, 2007-03-29 at 12:57 -0500, Larry Finger wrote:
> Is the better performance for 11M in transmitting or receiving? How is
> it measured? My 4306's, which should be the same as yours, do better
> at 24M than at 11M. 

It's for 'scp <somekernelrpm> shinybook:' -- it's not a particularly
good test.

And in fact the 'normal' module seems to be performing quite well today
too. I think the real performance problem comes when there are dropped
packets.

-- 
dwmw2



From larry.finger at lwfinger.net  Thu Mar 29 20:11:35 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Mar 2007 13:11:35 -0500
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
In-Reply-To: <1175191382.3122.44.camel@pmac.infradead.org>
References: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>	
	<1175188955.3122.42.camel@pmac.infradead.org>	
	<460BFDF0.9010401@lwfinger.net>
	<1175191382.3122.44.camel@pmac.infradead.org>
Message-ID: <460C0157.5030404@lwfinger.net>

David Woodhouse wrote:
> On Thu, 2007-03-29 at 12:57 -0500, Larry Finger wrote:
>> Is the better performance for 11M in transmitting or receiving? How is
>> it measured? My 4306's, which should be the same as yours, do better
>> at 24M than at 11M. 
> 
> It's for 'scp <somekernelrpm> shinybook:' -- it's not a particularly
> good test.
> 
> And in fact the 'normal' module seems to be performing quite well today
> too. I think the real performance problem comes when there are dropped
> packets.

OK, you are measuring receive speed, which is nearly independent of Bit Rate. Do you have access to
any other host on your LAN that could be an Iperf server, or that is an NFS server?

Larry


From dwmw2 at infradead.org  Thu Mar 29 20:13:33 2007
From: dwmw2 at infradead.org (David Woodhouse)
Date: Thu, 29 Mar 2007 19:13:33 +0100
Subject: [PATCH] bcm43xx: Change initialization for 2050 radios
In-Reply-To: <460C0157.5030404@lwfinger.net>
References: <460a92d5.+NfCgWddLCeb9ty2%Larry.Finger@lwfinger.net>
	<1175188955.3122.42.camel@pmac.infradead.org>
	<460BFDF0.9010401@lwfinger.net>
	<1175191382.3122.44.camel@pmac.infradead.org>
	<460C0157.5030404@lwfinger.net>
Message-ID: <1175192013.3122.47.camel@pmac.infradead.org>

On Thu, 2007-03-29 at 13:11 -0500, Larry Finger wrote:
> OK, you are measuring receive speed, which is nearly independent of
> Bit Rate. Do you have access to any other host on your LAN that could
> be an Iperf server, or that is an NFS server? 

That can be done. Need to get Fedora PS3 kernel working properly first
though...

-- 
dwmw2



From martin-langer at gmx.de  Thu Mar 29 21:06:13 2007
From: martin-langer at gmx.de (Martin Langer)
Date: Thu, 29 Mar 2007 21:06:13 +0200
Subject: initial value extraction
In-Reply-To: <1175166566.8807.42.camel@johannes.berg>
References: <1175166566.8807.42.camel@johannes.berg>
Message-ID: <20070329190613.GA3394@tuba>

On Thu, Mar 29, 2007 at 01:09:26PM +0200, Johannes Berg wrote:

> Ahem. How can this even work?

Ok, mostly I ignore your reverse engineered labels. I prefer looking at 
checksums, etc. But you're right. It's a little bit black magic here and 
I still hope that we can replace the bcm-initvals by some free code in 
the future.

> Then my version 4 driver contains these initial values (in this order):
> r4-g
> r4-g-bs
> r4-a
> r4-a-bs
> r5-g
> r5-g-bs
> r5-ag-a
> r5-ag-g
> r5-ag-a-bs
> r5-ag-g-bs
> r9-bg
> r9-bg-bs
> r9-ag-a
> r9-ag-g
> r9-ag-a-bs
> r9-ag-g-bs
> r11-n
> r11-n-bs
> r13-lp
> r13-lp-bs

r13 is new and wasn't available during the good old v3 era.

> But my version 3 driver contains:
> 
> r2-b    (g?)
> r2-b-bs (g?)
> r2-a
> r2-a-bs

r2 images are for r4 hardware, too. It's just a different name for the 
same file. V4 does no longer contain r2 stuff. So I think they simply 
renamed the r2 images. Nothing else. And r2 was a B-only revision, so 
they used the label b here. But r4 G-hardware will use r2-b initvals in 
the v3 world, too. So you can rename it to r4-g-* which is the v4 name. 

> r5-g
> r5-g-bs
> r5-ag-a
> r5-ag-g
> r5-ag-a-bs
> r5-ag-g-bs

Stop. Now fwcutter reads 6 images with length 0 here. Let's call them 
r9 images. An old version of fwcutter will create those files with 
length 0.

> r11-n
> r11-n-bs

r5 and r11 are in the same order. I don't see a problem there. Let's 
ignore them. r2-b and r4-g files have different names, but r2-b files 
will be used for r4-g hardware as I already pointed out and r13 isn't 
available in the v3 world. 

> And other drivers will probably contain other things... I don't see how
> this can possibly work properly with the simple numbering scheme
> fwcutter gives it right now.

The numbering scheme is historical from a non-reverse-engineering view.
It wasn't designed... 

If you want to know the names instead of numbers, it wouldn't be too 
hard to create a table for the proper translation.

> I suggest that you adopt this naming scheme and only support extraction
> >from drivers where it can be verified (i.e. linux drivers).

I don't think that it's worth breaking support by renaming those files. 
It would be a simple table to translate the numbers into names.

Do you have a concrete problem with a so called unverified fw release? 


Martin


From Larry.Finger at lwfinger.net  Thu Mar 29 23:46:50 2007
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Mar 2007 16:46:50 -0500
Subject: Patches for bcm43xx-softmac
Message-ID: <460C33CA.3050509@lwfinger.net>

A recent change to the specs for the initialization of 2.4 GHz radios has resulted in increased
transfer speeds for the bcm43xx-softmac driver. Thanks to Joe Jezak for all his work.

My measurements are for transfers speeds between my laptop and an FTP server connected to my router
by a 100 Mbs wired connection. Using the new patches, I get receive speeds up to 2 MB/s and transmit
speeds of up to 0.7 MB/s for the BCM4311 and the BCM4318. Speeds for the BCM4306 are slower (0.7
MB/s for receive and 0.6 MB/s for transmit).

The files needed to patch the various 2.6.20.y and 2.6.21-rc5 kernels are at
ftp://lwfinger.dynalias.org/patches. I have abandoned support for 2.6.18 and 2.6.19 kernels. The
patch for 2.6.21-rc5 can be applied to either Linus's or Linville's wireless-2.6 git tree.

Also on the FTP site are two Perl scripts for testing. One of them (perf_test.pl) uses an Iperf
server somewhere on your LAN. The other (file_test.pl) works with an NFS server on your LAN to
measure transfer rates.



From johannes at sipsolutions.net  Fri Mar 30 12:45:41 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 30 Mar 2007 12:45:41 +0200
Subject: initial value extraction
In-Reply-To: <20070329190613.GA3394@tuba>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070329190613.GA3394@tuba>
Message-ID: <1175251541.19085.14.camel@johannes.berg>

On Thu, 2007-03-29 at 21:06 +0200, Martin Langer wrote:

> r13 is new and wasn't available during the good old v3 era.

True. Was r11 even there?

> > But my version 3 driver contains:
> > 
> > r2-b    (g?)
> > r2-b-bs (g?)
> > r2-a
> > r2-a-bs
> 
> r2 images are for r4 hardware, too. It's just a different name for the 
> same file. V4 does no longer contain r2 stuff. So I think they simply 
> renamed the r2 images. Nothing else. And r2 was a B-only revision, so 
> they used the label b here. But r4 G-hardware will use r2-b initvals in 
> the v3 world, too. So you can rename it to r4-g-* which is the v4 name. 

Ah ok. I was confused then.

> > r5-g
> > r5-g-bs
> > r5-ag-a
> > r5-ag-g
> > r5-ag-a-bs
> > r5-ag-g-bs
> 
> Stop. Now fwcutter reads 6 images with length 0 here. Let's call them 
> r9 images. An old version of fwcutter will create those files with 
> length 0.

Oh, I thought it just skipped over there? I guess I didn't understand
the fwcutter code well enough.

> > And other drivers will probably contain other things... I don't see how
> > this can possibly work properly with the simple numbering scheme
> > fwcutter gives it right now.
> 
> The numbering scheme is historical from a non-reverse-engineering view.
> It wasn't designed... 

Right. A cursory look over fwcutter seemed to indicate that the numbers
were assigned linearly which would be wrong I think.

> Do you have a concrete problem with a so called unverified fw release? 

No, but I was looking at N stuff and was totally confused by the
numbering thing.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070330/6683005e/attachment.pgp>

From martin-langer at gmx.de  Fri Mar 30 18:50:02 2007
From: martin-langer at gmx.de (Martin Langer)
Date: Fri, 30 Mar 2007 18:50:02 +0200
Subject: initial value extraction
In-Reply-To: <1175251541.19085.14.camel@johannes.berg>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070329190613.GA3394@tuba>
	<1175251541.19085.14.camel@johannes.berg>
Message-ID: <20070330165002.GA3582@tuba>

On Fri, Mar 30, 2007 at 12:45:41PM +0200, Johannes Berg wrote:
> On Thu, 2007-03-29 at 21:06 +0200, Martin Langer wrote:
> 
> > r13 is new and wasn't available during the good old v3 era.
> 
> True. Was r11 even there?

r11 is only available from 3.130.x.x and 3.131.x.x. All other v3 
drivers don't have it. It's funny that 3.140 comes with older firmware 
than 3.130 and doesn't contain r11 firmware. I still don't understand 
their versioning system. It's really strange.

> > > And other drivers will probably contain other things... I don't see how
> > > this can possibly work properly with the simple numbering scheme
> > > fwcutter gives it right now.
> > 
> > The numbering scheme is historical from a non-reverse-engineering view.
> > It wasn't designed... 
> 
> Right. A cursory look over fwcutter seemed to indicate that the numbers
> were assigned linearly which would be wrong I think.

The first supported driver used linear numbering, but later ones were 
arranged in different orders and i introdcued the table ivmap[] (see 
fwcutter.h) to choose the right number. Look at the comment there. The 
numbering is probably the same order you are using:

        /* core rev 0x2, 0x4 initval numbers: 1, 2, 3, 4 */
        /* core rev 0x5 initval numbers: 5, 6, 7, 8, 9, 10 */
        /* core rev 0x9 initval numbers: 11, 12, 13, 14, 15, 16 */
        /* core rev 0xb initval numbers: 17, 18 */
        /* core rev 0xd initval numbers: 19, 20 */

There are initvals 21..25 missing in the table, but fwcutter is already 
miles ahead ;) and bcm43xx still doesn't support upload on core 
revisions >=11. Well, bcm43xx do an upload but choosing wrong files (r5 
files instead of r11). --- If I'll find some time I'll create a patch.

Martin


From johannes at sipsolutions.net  Fri Mar 30 21:00:36 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 30 Mar 2007 21:00:36 +0200
Subject: initial value extraction
In-Reply-To: <20070330165002.GA3582@tuba>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070329190613.GA3394@tuba> <1175251541.19085.14.camel@johannes.berg>
	<20070330165002.GA3582@tuba>
Message-ID: <1175281236.23438.14.camel@johannes.berg>

On Fri, 2007-03-30 at 18:50 +0200, Martin Langer wrote:

> There are initvals 21..25 missing in the table, but fwcutter is already 
> miles ahead ;) and bcm43xx still doesn't support upload on core 
> revisions >=11. Well, bcm43xx do an upload but choosing wrong files (r5 
> files instead of r11). --- If I'll find some time I'll create a patch.

I think the whole upload will have to be rewritten, also some rev >= 9
cores use rev >= 5 firmware but can do some fixups since they have
larger FIFO sizes (usually the initial values program the FIFO sizes)

I should clean up and post my IV disassembler...

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070330/4e7f41e2/attachment.pgp>

From mb at bu3sch.de  Fri Mar 30 23:19:31 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 30 Mar 2007 23:19:31 +0200
Subject: initial value extraction
In-Reply-To: <1175281236.23438.14.camel@johannes.berg>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070330165002.GA3582@tuba>
	<1175281236.23438.14.camel@johannes.berg>
Message-ID: <200703302319.31787.mb@bu3sch.de>

On Friday 30 March 2007 21:00, Johannes Berg wrote:
> On Fri, 2007-03-30 at 18:50 +0200, Martin Langer wrote:
> 
> > There are initvals 21..25 missing in the table, but fwcutter is already 
> > miles ahead ;) and bcm43xx still doesn't support upload on core 
> > revisions >=11. Well, bcm43xx do an upload but choosing wrong files (r5 
> > files instead of r11). --- If I'll find some time I'll create a patch.
> 
> I think the whole upload will have to be rewritten, also some rev >= 9
> cores use rev >= 5 firmware but can do some fixups since they have
> larger FIFO sizes (usually the initial values program the FIFO sizes)
> 
> I should clean up and post my IV disassembler...

Ok, what's actually done in the initvals _exactly_?
Does someone have a complete and exact summary?
All I know is that it's stuff dependent on the loaded
microcode and the running core revision.

Btw, I also added some mechanism to define and generate initvals
to bcm43xx-asm. I think the initvals are useful and we want
them in future, too. Even with possible free microcode.
Any comments on this implementation are desired, too.
Currently there's mechanism to define several sets of initvals
(several sets for, for example, several different core revisions)
in the microcode assembly file.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Fri Mar 30 23:26:42 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 30 Mar 2007 23:26:42 +0200
Subject: initial value extraction
In-Reply-To: <200703302319.31787.mb@bu3sch.de>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070330165002.GA3582@tuba> <1175281236.23438.14.camel@johannes.berg>
	<200703302319.31787.mb@bu3sch.de>
Message-ID: <1175290002.23438.24.camel@johannes.berg>

On Fri, 2007-03-30 at 23:19 +0200, Michael Buesch wrote:

> Ok, what's actually done in the initvals _exactly_?
> Does someone have a complete and exact summary?
> All I know is that it's stuff dependent on the loaded
> microcode and the running core revision.

Well. Saying it exactly would require a few pages worth of email ;)

Basically all the initial values do is hit registers and set various
things. For example, they'll set the RXE copy length register and the
RXE copy offset register. SHM core revision, then they program the FIFO
sizes (also up on the registers spec page). A few other FIFO parameters
are programmed, TXE template masks set...

The initial values also program the SHM layout, i.e. that key offset
pointer, a whole bunch of SHM values are set for the microcode (even
some that my disassembler doesn't handle yet meaning they might not even
be used). Finally, it sets all the microcode registers to some
pre-defined values (some of the registers are assigned special meaning
by convention, see http://bcm-v4.sipsolutions.net/802.11/ObjectMemory

> Btw, I also added some mechanism to define and generate initvals
> to bcm43xx-asm. I think the initvals are useful and we want
> them in future, too. Even with possible free microcode.

Yeah.

> Any comments on this implementation are desired, too.

Seems sane to me. a "reg" primitive would be good too, and I don't think
PHY or radio registers are required (not that they hurt).

> Currently there's mechanism to define several sets of initvals
> (several sets for, for example, several different core revisions)
> in the microcode assembly file.

:)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070330/77c5c8d1/attachment.pgp>

From johannes at sipsolutions.net  Fri Mar 30 23:36:02 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 30 Mar 2007 23:36:02 +0200
Subject: initial value extraction
In-Reply-To: <1175290002.23438.24.camel@johannes.berg>
References: <1175166566.8807.42.camel@johannes.berg>
	<20070330165002.GA3582@tuba> <1175281236.23438.14.camel@johannes.berg>
	<200703302319.31787.mb@bu3sch.de>
	<1175290002.23438.24.camel@johannes.berg>
Message-ID: <1175290562.23438.27.camel@johannes.berg>

On Fri, 2007-03-30 at 23:26 +0200, Johannes Berg wrote:

> Seems sane to me. a "reg" primitive would be good too, and I don't think
> PHY or radio registers are required (not that they hurt).

Oh, of course the shm primitives allow that. How about getting rid of
the current shm primitives again and simply using
	mem	offset, 16-bit value
	reg	number, 16-bit value

I don't see any point in programming the other object memories from the
initial values, who'd want an address in the rcmta by default? :)

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070330/7e2638f3/attachment.pgp>

From mb at bu3sch.de  Sat Mar 31 00:13:42 2007
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Mar 2007 00:13:42 +0200
Subject: initial value extraction
In-Reply-To: <1175290562.23438.27.camel@johannes.berg>
References: <1175166566.8807.42.camel@johannes.berg>
	<1175290002.23438.24.camel@johannes.berg>
	<1175290562.23438.27.camel@johannes.berg>
Message-ID: <200703310013.42530.mb@bu3sch.de>

On Friday 30 March 2007 23:36, Johannes Berg wrote:
> On Fri, 2007-03-30 at 23:26 +0200, Johannes Berg wrote:
> 
> > Seems sane to me. a "reg" primitive would be good too, and I don't think
> > PHY or radio registers are required (not that they hurt).
> 
> Oh, of course the shm primitives allow that. How about getting rid of
> the current shm primitives again and simply using
> 	mem	offset, 16-bit value
> 	reg	number, 16-bit value
> 
> I don't see any point in programming the other object memories from the
> initial values, who'd want an address in the rcmta by default? :)

Hm, by "reg" you mean that object memory where the ucode registers
are located? Sounds sane to only allow access to SHM-shared and reg.
Currently, you have access to all object memory (must specify the
routing explicitely).

I'll redesign that.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Sat Mar 31 00:18:17 2007
From: johannes at sipsolutions.net (Johannes Berg)
Date: Sat, 31 Mar 2007 00:18:17 +0200
Subject: initial value extraction
In-Reply-To: <200703310013.42530.mb@bu3sch.de>
References: <1175166566.8807.42.camel@johannes.berg>
	<1175290002.23438.24.camel@johannes.berg>
	<1175290562.23438.27.camel@johannes.berg>
	<200703310013.42530.mb@bu3sch.de>
Message-ID: <1175293097.23438.29.camel@johannes.berg>

On Sat, 2007-03-31 at 00:13 +0200, Michael Buesch wrote:

> > Oh, of course the shm primitives allow that. How about getting rid of
> > the current shm primitives again and simply using
> > 	mem	offset, 16-bit value
> > 	reg	number, 16-bit value
> > 
> > I don't see any point in programming the other object memories from the
> > initial values, who'd want an address in the rcmta by default? :)
> 
> Hm, by "reg" you mean that object memory where the ucode registers
> are located? 

Yeah, the 64 ucode registers.

> Sounds sane to only allow access to SHM-shared and reg.
> Currently, you have access to all object memory (must specify the
> routing explicitely).

Yeah, I noticed (later...) but it doesn't seem useful and quite tedious
to write.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 190 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070331/6fdc1a6f/attachment.pgp>

From gavron at Wetwork.Net  Sat Mar 31 00:02:39 2007
From: gavron at Wetwork.Net (Ehud Gavron)
Date: Fri, 30 Mar 2007 15:02:39 -0700
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <4609A871.8070606@lwfinger.net>
References: <200703271633.05391.thilo@riessner.de>
	<4609316B.8040306@gentoo.org> <46096589.7060009@lwfinger.net>
	<46096A95.7050608@Wetwork.Net> <4609A871.8070606@lwfinger.net>
Message-ID: <460D88FF.1080505@Wetwork.Net>

Since those changes are in the fedora-netdev repo, I downloaded that 
kernel* and performance jumped to over 7Mbps to outside testing places.
Wow!  Nice job guys!

Thanks for the advice, Larry, and thanks for the hard work from the 
development and spec teams!

Ehud

*ok, it wasn't quite that simple because I have an Nvidia video card.
First I downloaded kernel 2.6.20-1.2933.4.4.netdev.8.fc6, which replaced 
my 2.6.20-1.2933.fc6 (from fedora-updates repo).
No more usable video because of the Nvidia kernel module, but I could 
verify that bcm43xx worked like a charm.
Downloaded the kernel source RPM.  Changed the kernel ID from "-prep" to 
"-1.2933.fc6", built, installed, and now everything works like a 
charm... the bcm4311 card is running like a rocket... my Nvidia 
proprietary kernel module binary is loading... and life is good.  In 
short, again, THANKS!  I only mention the story so that other people 
tempted to just download the kernel will consider whether they too have 
to put up with vendors who are so shortsighted as to release binary-only 
modules requiring those of us who want to use their product (or have no 
choice, depending on circumstance) with the latest and greatest kernel...

Larry Finger wrote:
> ...
> Use the very latest set of patches. The stuff that is coming with 2.6.21 changed my interface from
> working best at 1 Mbs to having the best throughput at 36 Mbs. It doesn't do as well as the Windows
> driver (ndiswrapper), but it isn't too far from it. My downlink from Time Warner is rated at & Mbs,
> but I have not yet found an external site that can saturate it. I get almost as good a throughput as
> my wired interface on a 100 Mps link.
>
> All of the changes that are in 2.6.21 can be found at the ftp site in the previous messages.
>
> Larry
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3283 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20070330/ffbefccb/attachment.bin>

From larry.finger at lwfinger.net  Sat Mar 31 02:47:50 2007
From: larry.finger at lwfinger.net (Larry Finger)
Date: Fri, 30 Mar 2007 19:47:50 -0500
Subject: dell wireless 1390 802.11 b/g Mini PCI support?
In-Reply-To: <460D88FF.1080505@Wetwork.Net>
References: <200703271633.05391.thilo@riessner.de>	<4609316B.8040306@gentoo.org>
	<46096589.7060009@lwfinger.net>	<46096A95.7050608@Wetwork.Net>
	<4609A871.8070606@lwfinger.net> <460D88FF.1080505@Wetwork.Net>
Message-ID: <460DAFB6.2060907@lwfinger.net>

Ehud Gavron wrote:
> Since those changes are in the fedora-netdev repo, I downloaded that
> kernel* and performance jumped to over 7Mbps to outside testing places.
> Wow!  Nice job guys!
> 
> Thanks for the advice, Larry, and thanks for the hard work from the
> development and spec teams!
> 
> Ehud
> 
> *ok, it wasn't quite that simple because I have an Nvidia video card.
> First I downloaded kernel 2.6.20-1.2933.4.4.netdev.8.fc6, which replaced
> my 2.6.20-1.2933.fc6 (from fedora-updates repo).
> No more usable video because of the Nvidia kernel module, but I could
> verify that bcm43xx worked like a charm.
> Downloaded the kernel source RPM.  Changed the kernel ID from "-prep" to
> "-1.2933.fc6", built, installed, and now everything works like a
> charm... the bcm4311 card is running like a rocket... my Nvidia
> proprietary kernel module binary is loading... and life is good.  In
> short, again, THANKS!  I only mention the story so that other people
> tempted to just download the kernel will consider whether they too have
> to put up with vendors who are so shortsighted as to release binary-only
> modules requiring those of us who want to use their product (or have no
> choice, depending on circumstance) with the latest and greatest kernel...

I'm glad that someone else is getting the same kind of performance that I am. I wondered if I had
forgotten to include something in the code.

I too have an Nvidia graphics card, but I don't want to taint my kernel. That would hamper my
reporting of kernel bugs. I also have no need for 3-D acceleration; therefore, I use the 2-D
accelerator in X. It gives satisfactory performance; however, I did need to disable the
hardware-mouse option as it prevented my laptop from suspending.

Thank you for the kind words.

Larry




From geekypenguin at gmail.com  Sat Mar 31 03:30:26 2007
From: geekypenguin at gmail.com (Jory A. Pratt)
Date: Fri, 30 Mar 2007 20:30:26 -0500
Subject: 2050 radio init fix!!
Message-ID: <460DB9B2.2010408@gmail.com>

Just so everyone is aware of how well development is coming along here 
is some proof. Larry you have done an awsome job bring the softmac up to 
a very usuable standard in todays modern home network!!

Wireless interface testing using Iperf
======================================

Testing 802.11b/g bit rates
Original Bit Rate of 36 Mbs will be restored

Rate set to 5.5 Mbs with iwconfig
Transmit rate: 3.38 3.32 3.49 3.38 3.36 Mbits/sec, Max: 3.49, Min: 3.32, 
Average: 3.39, Sigma: 0.06
 Receive rate: 9.98 9.88 9.95 9.85 9.94 Mbits/sec, Max: 9.98, Min: 9.85, 
Average: 9.92, Sigma: 0.05

Rate set to 6 Mbs with iwconfig
Transmit rate: 3.86 3.90 3.93 3.95 3.87 Mbits/sec, Max: 3.95, Min: 3.86, 
Average: 3.90, Sigma: 0.03
 Receive rate: 11.5 11.8 11.7 11.8 11.8 Mbits/sec, Max: 11.8, Min: 11.5, 
Average: 11.7, Sigma: 0.1

Rate set to 9 Mbs with iwconfig
Transmit rate: 5.15 5.05 5.12 5.14 5.11 Mbits/sec, Max: 5.15, Min: 5.05, 
Average: 5.11, Sigma: 0.03
 Receive rate: 11.8 12.1 12.1 11.9 12.1 Mbits/sec, Max: 12.1, Min: 11.8, 
Average: 12.0, Sigma: 0.1

Rate set to 11 Mbs with iwconfig
Transmit rate: 5.20 5.26 5.18 5.19 5.16 Mbits/sec, Max: 5.26, Min: 5.16, 
Average: 5.20, Sigma: 0.03
 Receive rate: 9.96 10.3 10.3 10.2 10.3 Mbits/sec, Max: 10.30, Min: 
9.96, Average: 10.21, Sigma: 0.13

Rate set to 18 Mbs with iwconfig
Transmit rate: 7.51 7.62 7.59 7.40 7.60 Mbits/sec, Max: 7.62, Min: 7.40, 
Average: 7.54, Sigma: 0.08
 Receive rate: 12.6 12.5 11.0 12.5 12.6 Mbits/sec, Max: 12.6, Min: 11.0, 
Average: 12.2, Sigma: 0.6

Rate set to 24 Mbs with iwconfig
Transmit rate: 8.49 8.62 8.70 8.23 8.32 Mbits/sec, Max: 8.70, Min: 8.23, 
Average: 8.47, Sigma: 0.18
 Receive rate: 12.4 12.6 12.6 11.6 8.98 Mbits/sec, Max: 12.6, Min: 9.0, 
Average: 11.6, Sigma: 1.4

Rate set to 36 Mbs with iwconfig
Transmit rate: 8.97 9.83 10.3 10.4 10.3 Mbits/sec, Max: 10.40, Min: 
8.97, Average: 9.96, Sigma: 0.53
 Receive rate: 12.5 11.6 10.9 10.5 9.59 Mbits/sec, Max: 12.5, Min: 9.6, 
Average: 11.0, Sigma: 1.0

Rate set to 48 Mbs with iwconfig
Transmit rate: 10.9 10.5 10.5 9.75 10.9 Mbits/sec, Max: 10.9, Min: 9.8, 
Average: 10.5, Sigma: 0.4
 Receive rate: 11.3 11.3 11.7 7.97 8.02 Mbits/sec, Max: 11.7, Min: 8.0, 
Average: 10.1, Sigma: 1.7

Rate set to 54 Mbs with iwconfig
Transmit rate: 8.43 10.0 9.03 11.6 11.5 Mbits/sec, Max: 11.60, Min: 
8.43, Average: 10.11, Sigma: 1.28
 Receive rate: 9.56 9.14 12.7 12.4 11.6 Mbits/sec, Max: 12.70, Min: 
9.14, Average: 11.08, Sigma: 1.46

Bit Rate reset to original value


Enojy the results and keep moving forward. 03:02.0 Network controller: 
Broadcom Corporation BCM4318 [AirForce One 54g] 802.11g Wireless LAN 
Controller (rev 02)

Jory


From androsyn at ratbox.org  Sat Mar 31 04:49:59 2007
From: androsyn at ratbox.org (Aaron Sethman)
Date: Fri, 30 Mar 2007 22:49:59 -0400 (EDT)
Subject: Patches for bcm43xx-softmac
In-Reply-To: <460C33CA.3050509@lwfinger.net>
References: <460C33CA.3050509@lwfinger.net>
Message-ID: <Pine.LNX.4.64.0703302244110.18466@squeaker.ratbox.org>



On Thu, 29 Mar 2007, Larry Finger wrote:

> Also on the FTP site are two Perl scripts for testing. One of them (perf_test.pl) uses an Iperf
> server somewhere on your LAN. The other (file_test.pl) works with an NFS server on your LAN to
> measure transfer rates.
>

Here is somet testing from me on my BCM4311 with a 2050 radio, the laptop 
was about 8 feet away from the AP.

Rate set to 5.5 Mbs with iwconfig
Transmit rate: 18.4 18.5 18.4 18.5 18.5 Mbits/sec, Max: 18.5, Min: 18.4, 
Average: 18.5, Sigma: 0.0
  Receive rate: 18.6 18.5 18.5 18.5 18.5 Mbits/sec, Max: 18.6, Min: 18.5, 
Average: 18.5, Sigma: 0.0

Rate set to 6 Mbs with iwconfig
Transmit rate: 16.5 18.2 18.4 18.4 13.8 Mbits/sec, Max: 18.4, Min: 13.8, 
Average: 17.1, Sigma: 1.8
  Receive rate: 18.3 18.3 18.4 17.5 14.9 Mbits/sec, Max: 18.4, Min: 14.9, 
Average: 17.5, Sigma: 1.3

Rate set to 9 Mbs with iwconfig
Transmit rate: 14.6 13.2 14.8 15.2 16.6 Mbits/sec, Max: 16.6, Min: 13.2, 
Average: 14.9, Sigma: 1.1
  Receive rate: 13.9 15.0 16.0 16.2 16.6 Mbits/sec, Max: 16.6, Min: 13.9, 
Average: 15.5, Sigma: 1.0

Rate set to 11 Mbs with iwconfig
Transmit rate: 16.3 14.3 11.3 10.7 11.2 Mbits/sec, Max: 16.3, Min: 10.7, 
Average: 12.8, Sigma: 2.2
  Receive rate: 15.1 15.5 9.76 11.6 13.5 Mbits/sec, Max: 15.5, Min: 9.8, 
Average: 13.1, Sigma: 2.2


Rate set to 18 Mbs with iwconfig
Transmit rate: 16.2 18.5 18.5 18.3 18.1 Mbits/sec, Max: 18.5, Min: 16.2, 
Average: 17.9, Sigma: 0.9
  Receive rate: 17.1 18.4 18.1 18.2 17.9 Mbits/sec, Max: 18.4, Min: 17.1, 
Average: 17.9, Sigma: 0.4

Rate set to 24 Mbs with iwconfig
Transmit rate: 18.3 17.9 17.2 18.2 18.5 Mbits/sec, Max: 18.5, Min: 17.2, 
Average: 18.0, Sigma: 0.5
  Receive rate: 18.2 17.3 17.3 18.5 18.5 Mbits/sec, Max: 18.5, Min: 17.3, 
Average: 18.0, Sigma: 0.5

Rate set to 36 Mbs with iwconfig
Transmit rate: 18.6 18.6 18.5 18.3 16.9 Mbits/sec, Max: 18.6, Min: 16.9, 
Average: 18.2, Sigma: 0.6
  Receive rate: 18.7 18.4 18.4 16.8 17.2 Mbits/sec, Max: 18.7, Min: 16.8, 
Average: 17.9, Sigma: 0.8

Rate set to 48 Mbs with iwconfig
Transmit rate: 15.9 17.0 15.8 18.5 17.9 Mbits/sec, Max: 18.5, Min: 15.8, 
Average: 17.0, Sigma: 1.1
  Receive rate: 18.0 18.3 18.2 18.4 18.5 Mbits/sec, Max: 18.5, Min: 18.0, 
Average: 18.3, Sigma: 0.2


To put this in perspective here is what I got from the same setup using 
the ndiswrapper and the windows driver:

Rate set to 5.5 Mbs with iwconfig
Transmit rate: 4.23 4.19 4.27 4.26 4.29 Mbits/sec, Max: 4.29, Min: 4.19, 
Average: 4.25, Sigma: 0.03
  Receive rate: 13.3 13.0 12.7 13.2 13.2 Mbits/sec, Max: 13.3, Min: 12.7, 
Average: 13.1, Sigma: 0.2

Rate set to 6 Mbs with iwconfig
Transmit rate: 4.51 4.43 4.59 4.61 4.45 Mbits/sec, Max: 4.61, Min: 4.43, 
Average: 4.52, Sigma: 0.07
  Receive rate: 16.5 16.0 16.3 15.2 16.4 Mbits/sec, Max: 16.5, Min: 15.2, 
Average: 16.1, Sigma: 0.5

Rate set to 9 Mbs with iwconfig
Transmit rate: 6.39 6.11 6.36 6.42 6.36 Mbits/sec, Max: 6.42, Min: 6.11, 
Average: 6.33, Sigma: 0.11
  Receive rate: 16.2 16.9 16.8 16.9 16.5 Mbits/sec, Max: 16.9, Min: 16.2, 
Average: 16.7, Sigma: 0.3

Rate set to 11 Mbs with iwconfig
Transmit rate: 6.74 6.86 6.82 6.74 6.85 Mbits/sec, Max: 6.86, Min: 6.74, 
Average: 6.80, Sigma: 0.05
  Receive rate: 14.0 14.0 14.0 13.9 14.0 Mbits/sec, Max: 14.0, Min: 13.9, 
Average: 14.0, Sigma: 0.0

Rate set to 18 Mbs with iwconfig
Transmit rate: 10.8 10.9 10.8 10.8 10.8 Mbits/sec, Max: 10.9, Min: 10.8, 
Average: 10.8, Sigma: 0.0
  Receive rate: 17.4 17.4 17.9 17.8 17.7 Mbits/sec, Max: 17.9, Min: 17.4, 
Average: 17.6, Sigma: 0.2

Rate set to 24 Mbs with iwconfig
Transmit rate: 12.9 13.0 13.2 13.0 12.9 Mbits/sec, Max: 13.2, Min: 12.9, 
Average: 13.0, Sigma: 0.1
  Receive rate: 17.9 17.9 18.0 18.1 17.8 Mbits/sec, Max: 18.1, Min: 17.8, 
Average: 17.9, Sigma: 0.1

Rate set to 36 Mbs with iwconfig
Transmit rate: 16.3 16.1 15.9 16.0 16.1 Mbits/sec, Max: 16.3, Min: 15.9, 
Average: 16.1, Sigma: 0.1
  Receive rate: 18.3 17.3 17.5 18.1 18.1 Mbits/sec, Max: 18.3, Min: 17.3, 
Average: 17.9, Sigma: 0.4

Rate set to 48 Mbs with iwconfig
Transmit rate: 17.6 17.6 17.6 17.7 17.3 Mbits/sec, Max: 17.7, Min: 17.3, 
Average: 17.6, Sigma: 0.1
  Receive rate: 18.3 18.2 18.2 18.3 18.4 Mbits/sec, Max: 18.4, Min: 18.2, 
Average: 18.3, Sigma: 0.1


At this point now I'd feel pretty comfortable getting rid of the 
ndiswrapper stuff completely now.  Thanks for your excellent work on this 
everybody :)

-Aaron


