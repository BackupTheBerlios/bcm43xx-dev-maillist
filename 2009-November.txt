From mb at bu3sch.de  Fri Nov  6 18:32:44 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Nov 2009 18:32:44 +0100
Subject: [PATCH] b43: Rewrite TX bounce buffer handling
Message-ID: <200911061832.45534.mb@bu3sch.de>

Do not mess with the original skb, but allocate an independent bouncebuffer.
This protects against bad interference with mac80211's assumptions about
the skb (which already caused bugs).

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Might also be worth applying to b43legacy.


Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-11-06 16:55:02.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-11-06 18:26:23.000000000 +0100
@@ -1157,18 +1157,17 @@ struct b43_dmaring *parse_cookie(struct 
 }
 
 static int dma_tx_fragment(struct b43_dmaring *ring,
-			   struct sk_buff **in_skb)
+			   struct sk_buff *skb)
 {
-	struct sk_buff *skb = *in_skb;
 	const struct b43_dma_ops *ops = ring->ops;
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
+	struct b43_private_tx_info *priv_info = b43_get_priv_tx_info(info);
 	u8 *header;
 	int slot, old_top_slot, old_used_slots;
 	int err;
 	struct b43_dmadesc_generic *desc;
 	struct b43_dmadesc_meta *meta;
 	struct b43_dmadesc_meta *meta_hdr;
-	struct sk_buff *bounce_skb;
 	u16 cookie;
 	size_t hdrsize = b43_txhdr_size(ring->dev);
 
@@ -1212,34 +1211,28 @@ static int dma_tx_fragment(struct b43_dm
 
 	meta->skb = skb;
 	meta->is_last_fragment = 1;
+	priv_info->bouncebuffer = NULL;
 
 	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 	/* create a bounce buffer in zone_dma on mapping failure. */
 	if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
-		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC | GFP_DMA);
-		if (!bounce_skb) {
+		priv_info->bouncebuffer = kmalloc(skb->len, GFP_ATOMIC | GFP_DMA);
+		if (!priv_info->bouncebuffer) {
 			ring->current_slot = old_top_slot;
 			ring->used_slots = old_used_slots;
 			err = -ENOMEM;
 			goto out_unmap_hdr;
 		}
+		memcpy(priv_info->bouncebuffer, skb->data, skb->len);
 
-		memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
-		memcpy(bounce_skb->cb, skb->cb, sizeof(skb->cb));
-		bounce_skb->dev = skb->dev;
-		skb_set_queue_mapping(bounce_skb, skb_get_queue_mapping(skb));
-		info = IEEE80211_SKB_CB(bounce_skb);
-
-		dev_kfree_skb_any(skb);
-		skb = bounce_skb;
-		*in_skb = bounce_skb;
-		meta->skb = skb;
-		meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
+		meta->dmaaddr = map_descbuffer(ring, priv_info->bouncebuffer, skb->len, 1);
 		if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
+			kfree(priv_info->bouncebuffer);
+			priv_info->bouncebuffer = NULL;
 			ring->current_slot = old_top_slot;
 			ring->used_slots = old_used_slots;
 			err = -EIO;
-			goto out_free_bounce;
+			goto out_unmap_hdr;
 		}
 	}
 
@@ -1256,8 +1249,6 @@ static int dma_tx_fragment(struct b43_dm
 	ops->poke_tx(ring, next_slot(ring, slot));
 	return 0;
 
-out_free_bounce:
-	dev_kfree_skb_any(skb);
 out_unmap_hdr:
 	unmap_descbuffer(ring, meta_hdr->dmaaddr,
 			 hdrsize, 1);
@@ -1362,11 +1353,7 @@ int b43_dma_tx(struct b43_wldev *dev, st
 	 * static, so we don't need to store it per frame. */
 	ring->queue_prio = skb_get_queue_mapping(skb);
 
-	/* dma_tx_fragment might reallocate the skb, so invalidate pointers pointing
-	 * into the skb data or cb now. */
-	hdr = NULL;
-	info = NULL;
-	err = dma_tx_fragment(ring, &skb);
+	err = dma_tx_fragment(ring, skb);
 	if (unlikely(err == -ENOKEY)) {
 		/* Drop this packet, as we don't have the encryption key
 		 * anymore and must not transmit it unencrypted. */
@@ -1413,12 +1400,17 @@ void b43_dma_handle_txstatus(struct b43_
 		B43_WARN_ON(!(slot >= 0 && slot < ring->nr_slots));
 		desc = ops->idx2desc(ring, slot, &meta);
 
-		if (meta->skb)
-			unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
-					 1);
-		else
+		if (meta->skb) {
+			struct b43_private_tx_info *priv_info =
+				b43_get_priv_tx_info(IEEE80211_SKB_CB(meta->skb));
+
+			unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len, 1);
+			kfree(priv_info->bouncebuffer);
+			priv_info->bouncebuffer = NULL;
+		} else {
 			unmap_descbuffer(ring, meta->dmaaddr,
 					 b43_txhdr_size(dev), 1);
+		}
 
 		if (meta->is_last_fragment) {
 			struct ieee80211_tx_info *info;
Index: wireless-testing/drivers/net/wireless/b43/xmit.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/xmit.h	2009-11-06 16:55:02.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/xmit.h	2009-11-06 18:25:56.000000000 +0100
@@ -2,6 +2,8 @@
 #define B43_XMIT_H_
 
 #include "main.h"
+#include <net/mac80211.h>
+
 
 #define _b43_declare_plcp_hdr(size) \
 	struct b43_plcp_hdr##size {		\
@@ -332,4 +334,21 @@ static inline u8 b43_kidx_to_raw(struct 
 	return raw_kidx;
 }
 
+/* struct b43_private_tx_info - TX info private to b43.
+ * The structure is placed in (struct ieee80211_tx_info *)->rate_driver_data
+ *
+ * @bouncebuffer: DMA Bouncebuffer (if used)
+ */
+struct b43_private_tx_info {
+	void *bouncebuffer;
+};
+
+static inline struct b43_private_tx_info *
+b43_get_priv_tx_info(struct ieee80211_tx_info *info)
+{
+	BUILD_BUG_ON(sizeof(struct b43_private_tx_info) >
+		     sizeof(info->rate_driver_data));
+	return (struct b43_private_tx_info *)info->rate_driver_data;
+}
+
 #endif /* B43_XMIT_H_ */

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Nov  6 21:21:27 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Nov 2009 21:21:27 +0100
Subject: [PATCH] ssb-pcmcia: Fix 32bit register access in early bus scanning
Message-ID: <200911062121.28881.mb@bu3sch.de>

From:	Martin Fuzzey <mfuzzey at gmail.com>

The scan function was using 32 bit access which does not
work on 16bit CF cards.

This patch corrects this by doing two 16 bit reads like
ssb_pcmcia_read32 already does.

mb -- Removed locking. That early in init there's no need for locking.

Signed-off-by: Martin Fuzzey <mfuzzey at gmail.com>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/ssb/scan.c
===================================================================
--- wireless-testing.orig/drivers/ssb/scan.c	2009-10-09 19:50:16.000000000 +0200
+++ wireless-testing/drivers/ssb/scan.c	2009-11-06 19:24:13.000000000 +0100
@@ -162,6 +162,8 @@ static u8 chipid_to_nrcores(u16 chipid)
 static u32 scan_read32(struct ssb_bus *bus, u8 current_coreidx,
 		       u16 offset)
 {
+	u32 lo, hi;
+
 	switch (bus->bustype) {
 	case SSB_BUSTYPE_SSB:
 		offset += current_coreidx * SSB_CORE_SIZE;
@@ -174,7 +176,9 @@ static u32 scan_read32(struct ssb_bus *b
 			offset -= 0x800;
 		} else
 			ssb_pcmcia_switch_segment(bus, 0);
-		break;
+		lo = readw(bus->mmio + offset);
+		hi = readw(bus->mmio + offset + 2);
+		return lo | (hi << 16);
 	case SSB_BUSTYPE_SDIO:
 		offset += current_coreidx * SSB_CORE_SIZE;
 		return ssb_sdio_scan_read32(bus, offset);

-- 
Greetings, Michael.


From nbetcher at gmail.com  Fri Nov  6 21:46:59 2009
From: nbetcher at gmail.com (Nicholas Betcher)
Date: Fri, 6 Nov 2009 14:46:59 -0600
Subject: PCMCIA BCM4311 SPROM Failed Write
In-Reply-To: <5bd2f7660910311853v72bed73esd82f0339cc72f027@mail.gmail.com>
References: <5bd2f7660910311853v72bed73esd82f0339cc72f027@mail.gmail.com>
Message-ID: <5bd2f7660911061246l277954fay4645399129fc74df@mail.gmail.com>

Hello,
I have followed the instructions on Linux Wireless on how to read, modify,
then write a new SPROM, however when I attempt to write the new SPROM on my
laptop it fails stating: "ssb: SPROM write: Could not freeze devices. No
suspend support. Is CONFIG_PM enabled?" I can say, without a question, that
CONFIG_PM is enabled, but alas this problem persists. If it is a
compatibility issue with this particular (internal) device, can I bypass
this somehow? e.g. disabling the device on start and still being able to
write the SPROM?

Hardware is as follows: (BCM is at the bottom)

00:00.0 RAM memory [0500]: nVidia Corporation C51 Host Bridge [10de:02f3]
(rev a2)
Subsystem: Hewlett-Packard Company Device [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0
Capabilities: [44] HyperTransport: Slave or Primary Interface
 Capabilities: [e0] HyperTransport: MSI Mapping Enable+ Fixed-

00:00.1 RAM memory [0500]: nVidia Corporation C51 Memory Controller 0
[10de:02fa] (rev a2)
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: 66MHz, fast devsel

00:00.2 RAM memory [0500]: nVidia Corporation C51 Memory Controller 1
[10de:02fe] (rev a2)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: 66MHz, fast devsel

00:00.3 RAM memory [0500]: nVidia Corporation C51 Memory Controller 5
[10de:02f8] (rev a2)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: 66MHz, fast devsel

00:00.4 RAM memory [0500]: nVidia Corporation C51 Memory Controller 4
[10de:02f9] (rev a2)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0

00:00.5 RAM memory [0500]: nVidia Corporation C51 Host Bridge [10de:02ff]
(rev a2)
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0
 Capabilities: [44] #00 [00fe]
Capabilities: [fc] #00 [0000]

00:00.6 RAM memory [0500]: nVidia Corporation C51 Memory Controller 3
[10de:027f] (rev a2)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: 66MHz, fast devsel

00:00.7 RAM memory [0500]: nVidia Corporation C51 Memory Controller 2
[10de:027e] (rev a2)
Flags: 66MHz, fast devsel

00:02.0 PCI bridge [0604]: nVidia Corporation C51 PCI Express Bridge
[10de:02fc] (rev a1) (prog-if 00 [Normal decode])
Flags: bus master, fast devsel, latency 0
 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0
I/O behind bridge: 00004000-00004fff
 Memory behind bridge: b4000000-b7ffffff
Prefetchable memory behind bridge: 00000000d0000000-00000000d01fffff
 Capabilities: [40] Subsystem: nVidia Corporation Device [10de:0000]
Capabilities: [48] Power Management version 2
 Capabilities: [50] MSI: Enable+ Count=1/2 Maskable- 64bit+
Capabilities: [60] HyperTransport: MSI Mapping Enable- Fixed-
 Capabilities: [80] Express Root Port (Slot+), MSI 00
Capabilities: [100] Virtual Channel <?>
 Kernel driver in use: pcieport-driver

00:03.0 PCI bridge [0604]: nVidia Corporation C51 PCI Express Bridge
[10de:02fd] (rev a1) (prog-if 00 [Normal decode])
 Flags: bus master, fast devsel, latency 0
Bus: primary=00, secondary=03, subordinate=03, sec-latency=0
 Memory behind bridge: b8000000-bbffffff
Capabilities: [40] Subsystem: nVidia Corporation Device [10de:0000]
 Capabilities: [48] Power Management version 2
Capabilities: [50] MSI: Enable+ Count=1/2 Maskable- 64bit+
 Capabilities: [60] HyperTransport: MSI Mapping Enable- Fixed-
Capabilities: [80] Express Root Port (Slot+), MSI 00
 Capabilities: [100] Virtual Channel <?>
Kernel driver in use: pcieport-driver

00:05.0 VGA compatible controller [0300]: nVidia Corporation C51 [GeForce Go
6100] [10de:0247] (rev a2) (prog-if 00 [VGA controller])
Subsystem: Hewlett-Packard Company Device [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 10
Memory at b2000000 (32-bit, non-prefetchable) [size=16M]
 Memory at c0000000 (64-bit, prefetchable) [size=256M]
Memory at b1000000 (64-bit, non-prefetchable) [size=16M]
 [virtual] Expansion ROM at 40000000 [disabled] [size=128K]
Capabilities: [48] Power Management version 2
 Capabilities: [50] MSI: Enable- Count=1/1 Maskable- 64bit+

00:09.0 RAM memory [0500]: nVidia Corporation MCP51 Host Bridge [10de:0270]
(rev a2)
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0
 Capabilities: [44] HyperTransport: Slave or Primary Interface
Capabilities: [e0] HyperTransport: MSI Mapping Enable+ Fixed-

00:0a.0 ISA bridge [0601]: nVidia Corporation MCP51 LPC Bridge [10de:0260]
(rev a3)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0
I/O ports at 1d00 [size=128]

00:0a.1 SMBus [0c05]: nVidia Corporation MCP51 SMBus [10de:0264] (rev a3)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: 66MHz, fast devsel, IRQ 10
I/O ports at 3040 [size=64]
I/O ports at 3000 [size=64]
 Capabilities: [44] Power Management version 2
Kernel driver in use: nForce2_smbus

00:0a.3 Co-processor [0b40]: nVidia Corporation MCP51 PMU [10de:0271] (rev
a3)
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 11
Memory at b0040000 (32-bit, non-prefetchable) [size=256K]

00:0b.0 USB Controller [0c03]: nVidia Corporation MCP51 USB Controller
[10de:026d] (rev a3) (prog-if 10 [OHCI])
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 22
Memory at b0004000 (32-bit, non-prefetchable) [size=4K]
 Capabilities: [44] Power Management version 2
Kernel driver in use: ohci_hcd

00:0b.1 USB Controller [0c03]: nVidia Corporation MCP51 USB Controller
[10de:026e] (rev a3) (prog-if 20 [EHCI])
Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
 Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 23
Memory at b0005000 (32-bit, non-prefetchable) [size=256]
 Capabilities: [44] Debug port: BAR=1 offset=0098
Capabilities: [80] Power Management version 2
 Kernel driver in use: ehci_hcd

00:0d.0 IDE interface [0101]: nVidia Corporation MCP51 IDE [10de:0265] (rev
f1) (prog-if 8a [Master SecP PriP])
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0
 [virtual] Memory at 000001f0 (32-bit, non-prefetchable) [size=8]
[virtual] Memory at 000003f0 (type 3, non-prefetchable) [size=1]
 [virtual] Memory at 00000170 (32-bit, non-prefetchable) [size=8]
[virtual] Memory at 00000370 (type 3, non-prefetchable) [size=1]
 I/O ports at 3080 [size=16]
Capabilities: [44] Power Management version 2
 Kernel driver in use: pata_amd

00:0e.0 IDE interface [0101]: nVidia Corporation MCP51 Serial ATA Controller
[10de:0266] (rev f1) (prog-if 85 [Master SecO PriO])
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 21
 I/O ports at 30b0 [size=8]
I/O ports at 30a4 [size=4]
I/O ports at 30a8 [size=8]
 I/O ports at 30a0 [size=4]
I/O ports at 3090 [size=16]
Memory at b0006000 (32-bit, non-prefetchable) [size=4K]
 Capabilities: [44] Power Management version 2
Capabilities: [b0] MSI: Enable- Count=1/4 Maskable- 64bit+
 Capabilities: [cc] HyperTransport: MSI Mapping Enable- Fixed+
Kernel driver in use: sata_nv

00:10.0 PCI bridge [0604]: nVidia Corporation MCP51 PCI Bridge [10de:026f]
(rev a2) (prog-if 01 [Subtractive decode])
Flags: bus master, 66MHz, fast devsel, latency 0
 Bus: primary=00, secondary=07, subordinate=07, sec-latency=0
Capabilities: [b8] Subsystem: Gammagraphx, Inc. (or missing ID) Device
[0000:0000]
 Capabilities: [8c] HyperTransport: MSI Mapping Enable- Fixed-

00:10.1 Audio device [0403]: nVidia Corporation MCP51 High Definition Audio
[10de:026c] (rev a2)
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 18
 Memory at b0000000 (32-bit, non-prefetchable) [size=16K]
Capabilities: [44] Power Management version 2
 Capabilities: [50] MSI: Enable- Count=1/1 Maskable+ 64bit+
Capabilities: [6c] HyperTransport: MSI Mapping Enable- Fixed+
 Kernel driver in use: HDA Intel

00:14.0 Bridge [0680]: nVidia Corporation MCP51 Ethernet Controller
[10de:0269] (rev a3)
 Subsystem: Hewlett-Packard Company Presario V6133CL [103c:30b7]
Flags: bus master, 66MHz, fast devsel, latency 0, IRQ 20
 Memory at b0007000 (32-bit, non-prefetchable) [size=4K]
I/O ports at 30b8 [size=8]
 Capabilities: [44] Power Management version 2
Kernel driver in use: forcedeth

00:18.0 Host bridge [0600]: Advanced Micro Devices [AMD] K8
[Athlon64/Opteron] HyperTransport Technology Configuration [1022:1100]
Flags: fast devsel
 Capabilities: [80] HyperTransport: Host or Secondary Interface

00:18.1 Host bridge [0600]: Advanced Micro Devices [AMD] K8
[Athlon64/Opteron] Address Map [1022:1101]
 Flags: fast devsel

00:18.2 Host bridge [0600]: Advanced Micro Devices [AMD] K8
[Athlon64/Opteron] DRAM Controller [1022:1102]
 Flags: fast devsel

00:18.3 Host bridge [0600]: Advanced Micro Devices [AMD] K8
[Athlon64/Opteron] Miscellaneous Control [1022:1103]
 Flags: fast devsel
Capabilities: [f0] Secure device <?>
Kernel driver in use: k8temp

03:00.0 Network controller [0280]: Broadcom Corporation BCM4311 802.11b/g
WLAN [14e4:4311] (rev 02)
Subsystem: Hewlett-Packard Company BCM4311 802.11b/g Wireless LAN Controller
[103c:1374]
 Flags: bus master, fast devsel, latency 0, IRQ 19
Memory at b8000000 (64-bit, non-prefetchable) [size=16K]
 Capabilities: [40] Power Management version 3
Capabilities: [58] Vendor Specific Information <?>
 Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
Capabilities: [d0] Express Endpoint, MSI 00
 Capabilities: [100] Advanced Error Reporting
Capabilities: [13c] Virtual Channel <?>
 Capabilities: [160] Device Serial Number 83-d5-73-ff-ff-b6-00-1a
Capabilities: [16c] Power Budgeting <?>
 Kernel driver in use: b43-pci-bridge


Sincerely,
Nick Betcher, CPhT
Certified Pharmacy Technician
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091106/85c4f1f9/attachment.html>

From mb at bu3sch.de  Fri Nov  6 21:52:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Nov 2009 21:52:49 +0100
Subject: PCMCIA BCM4311 SPROM Failed Write
In-Reply-To: <5bd2f7660911061246l277954fay4645399129fc74df@mail.gmail.com>
References: <5bd2f7660910311853v72bed73esd82f0339cc72f027@mail.gmail.com>
	<5bd2f7660911061246l277954fay4645399129fc74df@mail.gmail.com>
Message-ID: <200911062152.51105.mb@bu3sch.de>

On Friday 06 November 2009 21:46:59 Nicholas Betcher wrote:
> Hello,
> I have followed the instructions on Linux Wireless on how to read, modify,
> then write a new SPROM, however when I attempt to write the new SPROM on my
> laptop it fails stating: "ssb: SPROM write: Could not freeze devices. No
> suspend support. Is CONFIG_PM enabled?"

Well, the mac80211/b43 suspend rewrite broke SPROM writing.
This is nontrivial to fix. Patches are welcome.

> I can say, without a question, that 
> CONFIG_PM is enabled, but alas this problem persists. If it is a
> compatibility issue with this particular (internal) device, can I bypass
> this somehow? e.g. disabling the device on start and still being able to
> write the SPROM?

It seems you want to brick your device.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Nov  7 03:41:40 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 06 Nov 2009 20:41:40 -0600
Subject: PCMCIA BCM4311 SPROM Failed Write
In-Reply-To: <5bd2f7660911061246l277954fay4645399129fc74df@mail.gmail.com>
References: <5bd2f7660910311853v72bed73esd82f0339cc72f027@mail.gmail.com>
	<5bd2f7660911061246l277954fay4645399129fc74df@mail.gmail.com>
Message-ID: <4AF4DE64.1060706@lwfinger.net>

On 11/06/2009 02:46 PM, Nicholas Betcher wrote:
> Hello,
> I have followed the instructions on Linux Wireless on how to read,
> modify, then write a new SPROM, however when I attempt to write the new
> SPROM on my laptop it fails stating: "ssb: SPROM write: Could not freeze
> devices. No suspend support. Is CONFIG_PM enabled?" I can say, without a
> question, that CONFIG_PM is enabled, but alas this problem persists. If
> it is a compatibility issue with this particular (internal) device, can
> I bypass this somehow? e.g. disabling the device on start and still
> being able to write the SPROM?

Why is it necessary to modify the SPROM?

Larry


From ccmcphe at verizon.net  Sat Nov  7 15:28:32 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Sat, 07 Nov 2009 09:28:32 -0500
Subject: 4318 CF Card Monitor Mode Problem
Message-ID: <4AF58410.6040203@verizon.net>

I'm using some 4318CF (PCMCIA) cards in some X86, ARM, and ATOM 
platforms. When the card is put into monitor mode, the CF Card will lock 
up when there is a high concentration of very active access points. What 
I have found is that the problem lies with the receiving of the frame, 
and is receiving multiple B43_PIO8_RXCTL_DATARDY's, instead of the 
normal B43_PIO8_RXCTL_FRAMERDY sequence. In order to get the card 
working for my customers, I added the below if statement in the function 
pio_rx_frame(), see code fragment below:

       /* Check if we have data and wait for it to get ready. */
        if (q->rev >= 8) {
                u32 ctl;

                ctl = b43_piorx_read32(q, B43_PIO8_RXCTL);

                if (ctl & B43_PIO8_RXCTL_DATARDY)     <-----  This is 
what I added, also in the associated else
                        goto data_ready;                               
<-----  This is what I added, also in the associated else

                if (!(ctl & B43_PIO8_RXCTL_FRAMERDY))
                        return 0;
                b43_piorx_write32(q, B43_PIO8_RXCTL,
                                  B43_PIO8_RXCTL_FRAMERDY);
                for (i = 0; i < 10; i++) {
                        ctl = b43_piorx_read32(q, B43_PIO8_RXCTL);
                        if (ctl & B43_PIO8_RXCTL_DATARDY)
                                goto data_ready;
                        udelay(10);
                }

The above addition allows the CF card to work properly and causes no 
card hangs.  I have been able to run tests in the lab for over 24 hours 
now and the card seems to be stable, where before the CF card would hang 
within an hour of testing.  I guess the code could be changed to 
(according to the specs @ sipsolutions): If ctl & B43_PIO8_RXCTL_DATARDY 
then set err_msg and goto rx_error? Even modify the line if (!(ctl & 
B43_PIO8_RXCTL_FRAMERDY)) to set err_msg to NULL and goto rx_error 
instead of returning 0?  Any suggestions? BTW: I haven't tried the other 
code options.

Thanks for your help
Tex





From mb at bu3sch.de  Sat Nov  7 17:00:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Nov 2009 17:00:06 +0100
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <4AF58410.6040203@verizon.net>
References: <4AF58410.6040203@verizon.net>
Message-ID: <200911071700.07851.mb@bu3sch.de>

On Saturday 07 November 2009 15:28:32 Clyde McPherson wrote:
> Even modify the line if (!(ctl & 
> B43_PIO8_RXCTL_FRAMERDY)) to set err_msg to NULL and goto rx_error 
> instead of returning 0?

Well, does that fix the problem?

-- 
Greetings, Michael.


From zajec5polish at gmail.com  Sat Nov  7 17:04:44 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sat, 7 Nov 2009 17:04:44 +0100
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <4AF58410.6040203@verizon.net>
References: <4AF58410.6040203@verizon.net>
Message-ID: <14b026160911070804y2ff6ee97vc78d8c051e474b8a@mail.gmail.com>

2009/11/7 Clyde McPherson <ccmcphe at verizon.net>:
> I'm using some 4318CF (PCMCIA) cards in some X86, ARM, and ATOM
> platforms. When the card is put into monitor mode, the CF Card will lock
> up when there is a high concentration of very active access points. What
> I have found is that the problem lies with the receiving of the frame,
> and is receiving multiple B43_PIO8_RXCTL_DATARDY's, instead of the
> normal B43_PIO8_RXCTL_FRAMERDY sequence. In order to get the card
> working for my customers, I added the below if statement in the function
> pio_rx_frame(), see code fragment below:
>
> ? ? ? /* Check if we have data and wait for it to get ready. */
> ? ? ? ?if (q->rev >= 8) {
> ? ? ? ? ? ? ? ?u32 ctl;
>
> ? ? ? ? ? ? ? ?ctl = b43_piorx_read32(q, B43_PIO8_RXCTL);
>
> ? ? ? ? ? ? ? ?if (ctl & B43_PIO8_RXCTL_DATARDY) ? ? <----- ?This is
> what I added, also in the associated else
> ? ? ? ? ? ? ? ? ? ? ? ?goto data_ready;
> <----- ?This is what I added, also in the associated else
>
> ? ? ? ? ? ? ? ?if (!(ctl & B43_PIO8_RXCTL_FRAMERDY))
> ? ? ? ? ? ? ? ? ? ? ? ?return 0;
> ? ? ? ? ? ? ? ?b43_piorx_write32(q, B43_PIO8_RXCTL,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?B43_PIO8_RXCTL_FRAMERDY);
> ? ? ? ? ? ? ? ?for (i = 0; i < 10; i++) {
> ? ? ? ? ? ? ? ? ? ? ? ?ctl = b43_piorx_read32(q, B43_PIO8_RXCTL);
> ? ? ? ? ? ? ? ? ? ? ? ?if (ctl & B43_PIO8_RXCTL_DATARDY)
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?goto data_ready;
> ? ? ? ? ? ? ? ? ? ? ? ?udelay(10);
> ? ? ? ? ? ? ? ?}
>
> The above addition allows the CF card to work properly and causes no
> card hangs. ?I have been able to run tests in the lab for over 24 hours
> now and the card seems to be stable, where before the CF card would hang
> within an hour of testing. ?I guess the code could be changed to
> (according to the specs @ sipsolutions): If ctl & B43_PIO8_RXCTL_DATARDY
> then set err_msg and goto rx_error? Even modify the line if (!(ctl &
> B43_PIO8_RXCTL_FRAMERDY)) to set err_msg to NULL and goto rx_error
> instead of returning 0? ?Any suggestions? BTW: I haven't tried the other
> code options.

Interesting. Does anyone know if that can be related to instability of
4318 as AP? AFAIR it was related to high traffic.

-- 
Rafa?


From mb at bu3sch.de  Sat Nov  7 18:04:33 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Nov 2009 18:04:33 +0100
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <14b026160911070804y2ff6ee97vc78d8c051e474b8a@mail.gmail.com>
References: <4AF58410.6040203@verizon.net>
	<14b026160911070804y2ff6ee97vc78d8c051e474b8a@mail.gmail.com>
Message-ID: <200911071804.35835.mb@bu3sch.de>

On Saturday 07 November 2009 17:04:44 Rafa? Mi?ecki wrote:
> Interesting. Does anyone know if that can be related to instability of
> 4318 as AP?

No. This is a compact flash card, which is a whole different story.
Get an atheros card, if you want an AP.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Nov  7 18:54:22 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Nov 2009 18:54:22 +0100
Subject: [PATCH] b43-pio: Fix RX error path for rev>=8 devices
Message-ID: <200911071854.22748.mb@bu3sch.de>

This fixes the RX error path for rev>=8 devices.
The wrong register size and definitions were used.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-11-01 13:58:48.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-11-07 18:46:11.000000000 +0100
@@ -762,7 +762,11 @@ data_ready:
 rx_error:
 	if (err_msg)
 		b43dbg(q->dev->wl, "PIO RX error: %s\n", err_msg);
-	b43_piorx_write16(q, B43_PIO_RXCTL, B43_PIO_RXCTL_DATARDY);
+	if (q->rev >= 8)
+		b43_piorx_write32(q, B43_PIO8_RXCTL, B43_PIO8_RXCTL_DATARDY);
+	else
+		b43_piorx_write16(q, B43_PIO_RXCTL, B43_PIO_RXCTL_DATARDY);
+
 	return 1;
 }
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Nov  7 18:59:51 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 7 Nov 2009 18:59:51 +0100
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <4AF5AE0A.2030304@verizon.net>
References: <4AF58410.6040203@verizon.net> <200911071700.07851.mb@bu3sch.de>
	<4AF5AE0A.2030304@verizon.net>
Message-ID: <200911071859.53186.mb@bu3sch.de>

On Saturday 07 November 2009 18:27:38 Clyde McPherson wrote:
> Yes, it fixes the problem. I'm currently running a 500 hour test on the 
> ARM and X86 platforms.


That is very weird, because it will _never_ return from the RX interrupt then,
except for the sanity check case, which will throw a huge warning if that happens.

I think we're not talking about the same thing.
Can you please send a patch with your local modifications? That's way easier to understand.


> -Tex
> Clyde McPherson
> 
> > On Saturday 07 November 2009 15:28:32 Clyde McPherson wrote:
> >   
> >> Even modify the line if (!(ctl & 
> >> B43_PIO8_RXCTL_FRAMERDY)) to set err_msg to NULL and goto rx_error 
> >> instead of returning 0?
> >>     
> >
> > Well, does that fix the problem?


-- 
Greetings, Michael.


From ccmcphe at verizon.net  Sat Nov  7 18:27:38 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Sat, 07 Nov 2009 12:27:38 -0500
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <200911071700.07851.mb@bu3sch.de>
References: <4AF58410.6040203@verizon.net> <200911071700.07851.mb@bu3sch.de>
Message-ID: <4AF5AE0A.2030304@verizon.net>

Yes, it fixes the problem. I'm currently running a 500 hour test on the 
ARM and X86 platforms.

-Tex
Clyde McPherson

> On Saturday 07 November 2009 15:28:32 Clyde McPherson wrote:
>   
>> Even modify the line if (!(ctl & 
>> B43_PIO8_RXCTL_FRAMERDY)) to set err_msg to NULL and goto rx_error 
>> instead of returning 0?
>>     
>
> Well, does that fix the problem?
>
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091107/308130cb/attachment.html>

From zajec5polish at gmail.com  Sun Nov  8 00:18:24 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sun, 8 Nov 2009 00:18:24 +0100
Subject: 4318 CF Card Monitor Mode Problem
In-Reply-To: <200911071804.35835.mb@bu3sch.de>
References: <4AF58410.6040203@verizon.net>
	<14b026160911070804y2ff6ee97vc78d8c051e474b8a@mail.gmail.com>
	<200911071804.35835.mb@bu3sch.de>
Message-ID: <14b026160911071518u1bbf443fqd2cdffef1c1f4a75@mail.gmail.com>

W dniu 7 listopada 2009 18:04 u?ytkownik Michael Buesch <mb at bu3sch.de> napisa?:
> On Saturday 07 November 2009 17:04:44 Rafa? Mi?ecki wrote:
>> Interesting. Does anyone know if that can be related to instability of
>> 4318 as AP?
>
> No. This is a compact flash card, which is a whole different story.
> Get an atheros card, if you want an AP.

Ups, OK, thanks. It's not my issue actually, I've ath9k supported card
myself in router. Plus iwlagn in notebook.

I just ask to be able to help ppl on forums/etc. And write some
wikis/articles. Thanks for clarifying.

-- 
Rafa?


From mb at bu3sch.de  Tue Nov 10 18:49:47 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 10 Nov 2009 18:49:47 +0100
Subject: kernel oops in b43 driver from compat-wireless-2.6.32-rc6
In-Reply-To: <1257872134.3213.99.camel@tesla.lan>
References: <1257872134.3213.99.camel@tesla.lan>
Message-ID: <200911101849.49281.mb@bu3sch.de>

On Tuesday 10 November 2009 17:55:34 Guido Trentalancia wrote:
> Dear Michael,
> 
> I got the following oops while using the b43 driver from the
> compat-wireless-2.6.32-rc6 package:
> 
> BUG: scheduling while atomic: compirq/10-b43/1779/0x00000100
> Modules linked in: ip6t_REJECT nf_conntrack_ipv6 ip6table_filter
> ip6_tables aes_i586 aes_generic ipt_MASQUERADE iptable_nat nf_nat sunrpc
> ipv6 dm_multipath uinput arc4 ecb crypto_blkcipher b43 rng_core mac80211
> cfg80211 rfkill_backport ssb ppdev snd_cs4281 snd_rawmidi snd_ac97_codec
> ac97_bus snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq
> snd_pcm_oss snd_mixer_oss snd_pcm snd_page_alloc snd_opl3_lib
> snd_seq_device snd_timer snd_hwdep pcspkr i2c_piix4 snd soundcore
> i2c_core ftdi_sio usbserial rtl8150 parport_pc parport yenta_socket
> rsrc_nonstatic ata_generic pata_acpi [last unloaded: microcode]
> Pid: 1779, comm: compirq/10-b43 Not tainted 2.6.27.26-gt #1
>  [<c0722efd>] ? printk+0x18/0x1b
>  [<c042639d>] __schedule_bug+0x7d/0x90
>  [<c072354d>] schedule+0x46d/0x4a0
>  [<c0423131>] ? __wake_up+0x81/0x90
>  [<c0723e4b>] __mutex_lock_slowpath+0x5b/0x90
>  [<cca09900>] ? b43_op_beacon_set_tim+0x0/0x40 [b43]
>  [<c0723ce6>] mutex_lock+0x16/0x20
>  [<cca0991a>] b43_op_beacon_set_tim+0x1a/0x40 [b43]
>  [<cc9d5317>] __sta_info_clear_tim_bit+0x57/0x70 [mac80211]
>  [<cc9d536f>] sta_info_clear_tim_bit+0x3f/0x80 [mac80211]
>  [<cc9e5055>] ieee80211_invoke_rx_handlers+0xe35/0x2000 [mac80211]
>  [<c054f8bb>] ? rb_insert_color+0xdb/0x110
>  [<c0423f8e>] ? enqueue_entity+0xde/0x350
>  [<c0403f73>] ? restore_nocheck_notrace+0x0/0xe
>  [<c0424665>] ? check_preempt_wakeup+0x165/0x280
>  [<cc9e3a6a>] ? prepare_for_handlers+0x2a/0x380 [mac80211]
>  [<cc9e6442>] __ieee80211_rx_handle_packet+0x222/0x360 [mac80211]
>  [<cc9e69e8>] ieee80211_rx+0x188/0x6e0 [mac80211]
>  [<cca1db37>] b43_rx+0x3a7/0x680 [b43]
>  [<cca229a7>] ? setup_rx_descbuffer+0x37/0x260 [b43]
>  [<cca23f58>] b43_dma_rx+0x248/0x3b0 [b43]
>  [<cca2258c>] ? b43_dma_handle_txstatus+0x16c/0x3c0 [b43]
>  [<c0403f73>] ? restore_nocheck_notrace+0x0/0xe
>  [<cca0d3a8>] b43_do_interrupt_thread+0x4b8/0x960 [b43]
>  [<c0423aa4>] ? dequeue_entity+0x14/0x170
>  [<cca0d868>] b43_interrupt_thread_handler+0x18/0x30 [b43]
>  [<cca0900f>] compat_irq_work+0xf/0x20 [b43]
>  [<c043d2ad>] run_workqueue+0x7d/0x140
>  [<cca09000>] ? compat_irq_work+0x0/0x20 [b43]
>  [<c043d70f>] worker_thread+0x7f/0xe0
>  [<c0440da0>] ? autoremove_wake_function+0x0/0x40
>  [<c043d690>] ? worker_thread+0x0/0xe0
>  [<c0440b1a>] kthread+0x3a/0x70
>  [<c0440ae0>] ? kthread+0x0/0x70
>  [<c0404a93>] kernel_thread_helper+0x7/0x14
>  =======================
> 
> It appears that the driver wants to lock a mutex in interrupt context.
> As far as I know, code executing in interrupt context cannot acquire a
> mutex and therefore a spinlock should be used.
> 
> If irqs are enabled spin_lock_irqsave() should be used instead of
> spin_lock() and anyway, it is always safer to use spin_lock_irqsave().

The patch is wrong. We cannot simply replace the lock by an unrelated one
and hope that it magically works.
However, a workaround for this problem has already been sent upstream.

-- 
Greetings, Michael.


From b3nton at gmail.com  Wed Nov 11 01:48:08 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Wed, 11 Nov 2009 00:48:08 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
Message-ID: <4AFA09C8.4060602@gmail.com>

Hello world,
I have a Dell inspiron 910 with a Broadcom wireless card.

andy:~$ lspci -vnn | grep 14e4
03:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
802.11b/g [14e4:4315] (rev 01)
	Subsystem: Broadcom Corporation Device [14e4:04b5]

Today I downloaded the current wireless-testing kernel (2.6.32-rc6-wl) 
and compiled it without the ACPI kernel driver.
It worked well for about 15 mins but then the network connection was 
lost and /var/log/sys.log started to fill up with

Nov 11 00:04:31 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 11 00:04:31 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 11 00:04:31 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 11 00:04:31 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 11 00:04:31 doughnut kernel: b43-phy0: Loading firmware version 
410.2160 (2007-05-26 15:32:10)
Nov 11 00:04:37 doughnut kernel: b43-phy0: Controller restarted
Nov 11 00:04:37 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 11 00:04:37 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...

..and so on

Andy


From Larry.Finger at lwfinger.net  Wed Nov 11 03:58:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 10 Nov 2009 20:58:47 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFA09C8.4060602@gmail.com>
References: <4AFA09C8.4060602@gmail.com>
Message-ID: <4AFA2867.3090909@lwfinger.net>

On 11/10/2009 06:48 PM, Andrew Benton wrote:
> Hello world,
> I have a Dell inspiron 910 with a Broadcom wireless card.
> 
> andy:~$ lspci -vnn | grep 14e4
> 03:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
> 802.11b/g [14e4:4315] (rev 01)
> 	Subsystem: Broadcom Corporation Device [14e4:04b5]
> 
> Today I downloaded the current wireless-testing kernel (2.6.32-rc6-wl) 
> and compiled it without the ACPI kernel driver.
> It worked well for about 15 mins but then the network connection was 
> lost and /var/log/sys.log started to fill up with
> 
> Nov 11 00:04:31 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
> 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
> Nov 11 00:04:31 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
> Nov 11 00:04:31 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
> 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
> Nov 11 00:04:31 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
> Nov 11 00:04:31 doughnut kernel: b43-phy0: Loading firmware version 
> 410.2160 (2007-05-26 15:32:10)
> Nov 11 00:04:37 doughnut kernel: b43-phy0: Controller restarted
> Nov 11 00:04:37 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 
> 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
> Nov 11 00:04:37 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...

The 0x00000800 indicates a descriptor problem. Why it should happen after 15
minutes is perplexing. If I write a diagnostic patch, could you test it?

Larry


From b3nton at gmail.com  Wed Nov 11 12:10:38 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Wed, 11 Nov 2009 11:10:38 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFA2867.3090909@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFA2867.3090909@lwfinger.net>
Message-ID: <4AFA9BAE.6060900@gmail.com>

On 11/11/09 02:58, Larry Finger wrote:
> On 11/10/2009 06:48 PM, Andrew Benton wrote:
>> Nov 11 00:04:37 doughnut kernel: b43-phy0 ERROR: Fatal DMA error:
>> 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
>> Nov 11 00:04:37 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
>
> The 0x00000800 indicates a descriptor problem. Why it should happen after 15
> minutes is perplexing. If I write a diagnostic patch, could you test it?
>
> Larry
>

Sure, I'd be glad to be of use.

Andy


From b3nton at gmail.com  Wed Nov 11 15:52:40 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Wed, 11 Nov 2009 14:52:40 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFA2867.3090909@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFA2867.3090909@lwfinger.net>
Message-ID: <4AFACFB8.1090900@gmail.com>

I recompiled my kernel today (current wireless-testing) and disabled ACPI entirely.
It worked fine for 10 minutes and then the internet connection died and left this
in /var/log/sys.log

Nov 11 14:31:31 doughnut ntpd[398]: kernel time sync status change 2001
Nov 11 14:36:57 doughnut ntpd[398]: synchronized to 130.88.200.4, stratum 2
Nov 11 14:37:31 doughnut kernel: ------------[ cut here ]------------
Nov 11 14:37:31 doughnut kernel: kernel BUG at mm/slub.c:2969!
Nov 11 14:37:31 doughnut kernel: invalid opcode: 0000 [#1] SMP
Nov 11 14:37:31 doughnut kernel: last sysfs file: /sys/devices/pci0000:00/0000:00:02.1/resource
Nov 11 14:37:31 doughnut kernel: Modules linked in:
Nov 11 14:37:31 doughnut kernel:
Nov 11 14:37:31 doughnut kernel: Pid: 343, comm: irq/17-b43 Not tainted (2.6.32-rc6-wl #1) Inspiron 910
Nov 11 14:37:31 doughnut kernel: EIP: 0060:[<c107a5b9>] EFLAGS: 00010246 CPU: 0
Nov 11 14:37:31 doughnut kernel: EIP is at kfree+0xa9/0xb0
Nov 11 14:37:31 doughnut kernel: EAX: dededede EBX: f68f8200 ECX: 40000000 EDX: c19b9da0
Nov 11 14:37:31 doughnut kernel: ESI: ef000000 EDI: 00000400 EBP: f72c5400 ESP: f6a3ded0
Nov 11 14:37:31 doughnut kernel:  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068
Nov 11 14:37:31 doughnut kernel: Process irq/17-b43 (pid: 343, ti=f6a3c000 task=f73fa380 task.ti=f6a3c000)
Nov 11 14:37:31 doughnut kernel: Stack:
Nov 11 14:37:31 doughnut kernel:  000e7ef0 c1021c31 f68f8200 ef000000 00000400 c12d47ce c13ee7c0 f73fa380
Nov 11 14:37:31 doughnut kernel: <0> 7fff7fff dededede 00000000 c141c934 f7093458 f6a3df64 f73b7000 f72c5400
Nov 11 14:37:31 doughnut kernel: <0> f72c5400 f6a3df64 00000000 c12d0556 00000000 c12c0b77 00000046 00000046
Nov 11 14:37:31 doughnut kernel: Call Trace:
Nov 11 14:37:31 doughnut kernel:  [<c1021c31>] ? update_curr_rt+0x251/0x2c0
Nov 11 14:37:31 doughnut kernel:  [<c12d47ce>] ? b43_dma_handle_txstatus+0xbe/0x270
Nov 11 14:37:31 doughnut kernel:  [<c12d0556>] ? b43_handle_txstatus+0x36/0x60
Nov 11 14:37:31 doughnut kernel:  [<c12c0b77>] ? b43_do_interrupt_thread+0x1d7/0x5d0
Nov 11 14:37:31 doughnut kernel:  [<c12c0f85>] ? b43_interrupt_thread_handler+0x15/0x30
Nov 11 14:37:31 doughnut kernel:  [<c1050a94>] ? irq_thread+0x104/0x1d0
Nov 11 14:37:31 doughnut kernel:  [<c101d320>] ? complete+0x40/0x60
Nov 11 14:37:31 doughnut kernel:  [<c1050990>] ? irq_thread+0x0/0x1d0
Nov 11 14:37:31 doughnut kernel:  [<c1039c64>] ? kthread+0x74/0x80
Nov 11 14:37:31 doughnut kernel:  [<c1039bf0>] ? kthread+0x0/0x80
Nov 11 14:37:31 doughnut kernel:  [<c10038cf>] ? kernel_thread_helper+0x7/0x18
Nov 11 14:37:31 doughnut kernel: Code: e8 1d fc ff ff eb d9 66 f7 c1 00 c0 74 1d 8b 5c 24 08 89 d0 8b 74 24 0c 8b 7c 24 10 83 c4 14 e9 8e 24 fe ff 8b 52 0c 8b 0a eb 84 <0f> 0b eb fe 8d 76 00 83 e8 60 e9 48 ff ff ff 90 8d b4 26 00 00
Nov 11 14:37:31 doughnut kernel: EIP: [<c107a5b9>] kfree+0xa9/0xb0 SS:ESP 0068:f6a3ded0
Nov 11 14:37:31 doughnut kernel: ---[ end trace 021257f2296ca88f ]---
Nov 11 14:37:31 doughnut kernel: exiting task "irq/17-b43" (343) is an active IRQ thread (irq 17)

Hopefully this means something.
It makes a change from the "b43-phy0 ERROR: Fatal DMA error"

Andy


From Larry.Finger at lwfinger.net  Wed Nov 11 20:12:59 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Nov 2009 13:12:59 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFACFB8.1090900@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFA2867.3090909@lwfinger.net>
	<4AFACFB8.1090900@gmail.com>
Message-ID: <4AFB0CBB.4050104@lwfinger.net>

On 11/11/2009 08:52 AM, Andrew Benton wrote:
> I recompiled my kernel today (current wireless-testing) and disabled ACPI entirely.
> It worked fine for 10 minutes and then the internet connection died and left this
> in /var/log/sys.log
> 
> Nov 11 14:31:31 doughnut ntpd[398]: kernel time sync status change 2001
> Nov 11 14:36:57 doughnut ntpd[398]: synchronized to 130.88.200.4, stratum 2
> Nov 11 14:37:31 doughnut kernel: ------------[ cut here ]------------
> Nov 11 14:37:31 doughnut kernel: kernel BUG at mm/slub.c:2969!
> Nov 11 14:37:31 doughnut kernel: invalid opcode: 0000 [#1] SMP
> Nov 11 14:37:31 doughnut kernel: last sysfs file: /sys/devices/pci0000:00/0000:00:02.1/resource
> Nov 11 14:37:31 doughnut kernel: Modules linked in:
> Nov 11 14:37:31 doughnut kernel:
> Nov 11 14:37:31 doughnut kernel: Pid: 343, comm: irq/17-b43 Not tainted (2.6.32-rc6-wl #1) Inspiron 910
> Nov 11 14:37:31 doughnut kernel: EIP: 0060:[<c107a5b9>] EFLAGS: 00010246 CPU: 0
> Nov 11 14:37:31 doughnut kernel: EIP is at kfree+0xa9/0xb0
> Nov 11 14:37:31 doughnut kernel: EAX: dededede EBX: f68f8200 ECX: 40000000 EDX: c19b9da0
> Nov 11 14:37:31 doughnut kernel: ESI: ef000000 EDI: 00000400 EBP: f72c5400 ESP: f6a3ded0
> Nov 11 14:37:31 doughnut kernel:  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068
> Nov 11 14:37:31 doughnut kernel: Process irq/17-b43 (pid: 343, ti=f6a3c000 task=f73fa380 task.ti=f6a3c000)
> Nov 11 14:37:31 doughnut kernel: Stack:
> Nov 11 14:37:31 doughnut kernel:  000e7ef0 c1021c31 f68f8200 ef000000 00000400 c12d47ce c13ee7c0 f73fa380
> Nov 11 14:37:31 doughnut kernel: <0> 7fff7fff dededede 00000000 c141c934 f7093458 f6a3df64 f73b7000 f72c5400
> Nov 11 14:37:31 doughnut kernel: <0> f72c5400 f6a3df64 00000000 c12d0556 00000000 c12c0b77 00000046 00000046
> Nov 11 14:37:31 doughnut kernel: Call Trace:
> Nov 11 14:37:31 doughnut kernel:  [<c1021c31>] ? update_curr_rt+0x251/0x2c0
> Nov 11 14:37:31 doughnut kernel:  [<c12d47ce>] ? b43_dma_handle_txstatus+0xbe/0x270
> Nov 11 14:37:31 doughnut kernel:  [<c12d0556>] ? b43_handle_txstatus+0x36/0x60
> Nov 11 14:37:31 doughnut kernel:  [<c12c0b77>] ? b43_do_interrupt_thread+0x1d7/0x5d0
> Nov 11 14:37:31 doughnut kernel:  [<c12c0f85>] ? b43_interrupt_thread_handler+0x15/0x30
> Nov 11 14:37:31 doughnut kernel:  [<c1050a94>] ? irq_thread+0x104/0x1d0
> Nov 11 14:37:31 doughnut kernel:  [<c101d320>] ? complete+0x40/0x60
> Nov 11 14:37:31 doughnut kernel:  [<c1050990>] ? irq_thread+0x0/0x1d0
> Nov 11 14:37:31 doughnut kernel:  [<c1039c64>] ? kthread+0x74/0x80
> Nov 11 14:37:31 doughnut kernel:  [<c1039bf0>] ? kthread+0x0/0x80
> Nov 11 14:37:31 doughnut kernel:  [<c10038cf>] ? kernel_thread_helper+0x7/0x18
> Nov 11 14:37:31 doughnut kernel: Code: e8 1d fc ff ff eb d9 66 f7 c1 00 c0 74 1d 8b 5c 24 08 89 d0 8b 74 24 0c 8b 7c 24 10 83 c4 14 e9 8e 24 fe ff 8b 52 0c 8b 0a eb 84 <0f> 0b eb fe 8d 76 00 83 e8 60 e9 48 ff ff ff 90 8d b4 26 00 00
> Nov 11 14:37:31 doughnut kernel: EIP: [<c107a5b9>] kfree+0xa9/0xb0 SS:ESP 0068:f6a3ded0
> Nov 11 14:37:31 doughnut kernel: ---[ end trace 021257f2296ca88f ]---
> Nov 11 14:37:31 doughnut kernel: exiting task "irq/17-b43" (343) is an active IRQ thread (irq 17)
> 
> Hopefully this means something.
> It makes a change from the "b43-phy0 ERROR: Fatal DMA error"

Yes it does.

Such an error in SLUB handling could be arising from a DMA problem in b43, but
it could also arise from a memory error. Please run memtest86+ for an extended
period so that a hardware error can be ruled out. A 24 hour run would be good.
If that is not possible, please do at least a 12 hour test.

Larry


From mb at bu3sch.de  Wed Nov 11 20:17:09 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 11 Nov 2009 20:17:09 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFB0CBB.4050104@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFACFB8.1090900@gmail.com>
	<4AFB0CBB.4050104@lwfinger.net>
Message-ID: <200911112017.11503.mb@bu3sch.de>

On Wednesday 11 November 2009 20:12:59 Larry Finger wrote:
> On 11/11/2009 08:52 AM, Andrew Benton wrote:
> > I recompiled my kernel today (current wireless-testing) and disabled ACPI entirely.
> > It worked fine for 10 minutes and then the internet connection died and left this
> > in /var/log/sys.log
> > 
> > Nov 11 14:31:31 doughnut ntpd[398]: kernel time sync status change 2001
> > Nov 11 14:36:57 doughnut ntpd[398]: synchronized to 130.88.200.4, stratum 2
> > Nov 11 14:37:31 doughnut kernel: ------------[ cut here ]------------
> > Nov 11 14:37:31 doughnut kernel: kernel BUG at mm/slub.c:2969!
> > Nov 11 14:37:31 doughnut kernel: invalid opcode: 0000 [#1] SMP
> > Nov 11 14:37:31 doughnut kernel: last sysfs file: /sys/devices/pci0000:00/0000:00:02.1/resource
> > Nov 11 14:37:31 doughnut kernel: Modules linked in:
> > Nov 11 14:37:31 doughnut kernel:
> > Nov 11 14:37:31 doughnut kernel: Pid: 343, comm: irq/17-b43 Not tainted (2.6.32-rc6-wl #1) Inspiron 910
> > Nov 11 14:37:31 doughnut kernel: EIP: 0060:[<c107a5b9>] EFLAGS: 00010246 CPU: 0
> > Nov 11 14:37:31 doughnut kernel: EIP is at kfree+0xa9/0xb0
> > Nov 11 14:37:31 doughnut kernel: EAX: dededede EBX: f68f8200 ECX: 40000000 EDX: c19b9da0
> > Nov 11 14:37:31 doughnut kernel: ESI: ef000000 EDI: 00000400 EBP: f72c5400 ESP: f6a3ded0
> > Nov 11 14:37:31 doughnut kernel:  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068
> > Nov 11 14:37:31 doughnut kernel: Process irq/17-b43 (pid: 343, ti=f6a3c000 task=f73fa380 task.ti=f6a3c000)
> > Nov 11 14:37:31 doughnut kernel: Stack:
> > Nov 11 14:37:31 doughnut kernel:  000e7ef0 c1021c31 f68f8200 ef000000 00000400 c12d47ce c13ee7c0 f73fa380
> > Nov 11 14:37:31 doughnut kernel: <0> 7fff7fff dededede 00000000 c141c934 f7093458 f6a3df64 f73b7000 f72c5400
> > Nov 11 14:37:31 doughnut kernel: <0> f72c5400 f6a3df64 00000000 c12d0556 00000000 c12c0b77 00000046 00000046
> > Nov 11 14:37:31 doughnut kernel: Call Trace:
> > Nov 11 14:37:31 doughnut kernel:  [<c1021c31>] ? update_curr_rt+0x251/0x2c0
> > Nov 11 14:37:31 doughnut kernel:  [<c12d47ce>] ? b43_dma_handle_txstatus+0xbe/0x270
> > Nov 11 14:37:31 doughnut kernel:  [<c12d0556>] ? b43_handle_txstatus+0x36/0x60
> > Nov 11 14:37:31 doughnut kernel:  [<c12c0b77>] ? b43_do_interrupt_thread+0x1d7/0x5d0
> > Nov 11 14:37:31 doughnut kernel:  [<c12c0f85>] ? b43_interrupt_thread_handler+0x15/0x30
> > Nov 11 14:37:31 doughnut kernel:  [<c1050a94>] ? irq_thread+0x104/0x1d0
> > Nov 11 14:37:31 doughnut kernel:  [<c101d320>] ? complete+0x40/0x60
> > Nov 11 14:37:31 doughnut kernel:  [<c1050990>] ? irq_thread+0x0/0x1d0
> > Nov 11 14:37:31 doughnut kernel:  [<c1039c64>] ? kthread+0x74/0x80
> > Nov 11 14:37:31 doughnut kernel:  [<c1039bf0>] ? kthread+0x0/0x80
> > Nov 11 14:37:31 doughnut kernel:  [<c10038cf>] ? kernel_thread_helper+0x7/0x18
> > Nov 11 14:37:31 doughnut kernel: Code: e8 1d fc ff ff eb d9 66 f7 c1 00 c0 74 1d 8b 5c 24 08 89 d0 8b 74 24 0c 8b 7c 24 10 83 c4 14 e9 8e 24 fe ff 8b 52 0c 8b 0a eb 84 <0f> 0b eb fe 8d 76 00 83 e8 60 e9 48 ff ff ff 90 8d b4 26 00 00
> > Nov 11 14:37:31 doughnut kernel: EIP: [<c107a5b9>] kfree+0xa9/0xb0 SS:ESP 0068:f6a3ded0
> > Nov 11 14:37:31 doughnut kernel: ---[ end trace 021257f2296ca88f ]---
> > Nov 11 14:37:31 doughnut kernel: exiting task "irq/17-b43" (343) is an active IRQ thread (irq 17)
> > 
> > Hopefully this means something.
> > It makes a change from the "b43-phy0 ERROR: Fatal DMA error"
> 
> Yes it does.
> 
> Such an error in SLUB handling could be arising from a DMA problem in b43, but
> it could also arise from a memory error. Please run memtest86+ for an extended
> period so that a hardware error can be ruled out. A 24 hour run would be good.
> If that is not possible, please do at least a 12 hour test.


Do we have some slub expert who can tell us what this BUG() does actually mean?
I can't make any sense of it, because I don't know the meaning of those page flags.


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Nov 11 22:43:46 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Nov 2009 15:43:46 -0600
Subject: Question regarding BUG in mm/slub.c
Message-ID: <4AFB3012.2060606@lwfinger.net>

Michael,

I don't know whether this came to you. I did not get it and I had to read it on
the LKML archive.

> What is the meaning of PageCompound(page) being zero?


From mb at bu3sch.de  Wed Nov 11 23:03:59 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 11 Nov 2009 23:03:59 +0100
Subject: Question regarding BUG in mm/slub.c
In-Reply-To: <4AFB3012.2060606@lwfinger.net>
References: <4AFB3012.2060606@lwfinger.net>
Message-ID: <200911112304.02079.mb@bu3sch.de>

On Wednesday 11 November 2009 22:43:46 Larry Finger wrote:
> Michael,
> 
> I don't know whether this came to you. I did not get it and I had to read it on
> the LKML archive.
> 
> > What is the meaning of PageCompound(page) being zero?
> 
> From Pekka Enberg:
> 
> "You're passing a pointer to kfree() that did not come from kmalloc().
> If a page is not PageSlab(), it needs to be a compound page if it came
> from the page allocator pass-through."
> 
> I guess that helps a little.

Ok, very weird.

I'd guess priv_info->bouncebuffer contains garbage, for whatever reason.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Nov 11 23:28:45 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Nov 2009 16:28:45 -0600
Subject: Question regarding BUG in mm/slub.c
In-Reply-To: <200911112304.02079.mb@bu3sch.de>
References: <4AFB3012.2060606@lwfinger.net> <200911112304.02079.mb@bu3sch.de>
Message-ID: <4AFB3A9D.7040603@lwfinger.net>

On 11/11/2009 04:03 PM, Michael Buesch wrote:
> On Wednesday 11 November 2009 22:43:46 Larry Finger wrote:
>> Michael,
>>
>> I don't know whether this came to you. I did not get it and I had to read it on
>> the LKML archive.
>>
>>> What is the meaning of PageCompound(page) being zero?
>>
>> From Pekka Enberg:
>>
>> "You're passing a pointer to kfree() that did not come from kmalloc().
>> If a page is not PageSlab(), it needs to be a compound page if it came
>> from the page allocator pass-through."
>>
>> I guess that helps a little.
> 
> Ok, very weird.
> 
> I'd guess priv_info->bouncebuffer contains garbage, for whatever reason.

With 64-bit DMA, under what circumstances would a bounce buffer be needed?

Larry


From mb at bu3sch.de  Wed Nov 11 23:40:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 11 Nov 2009 23:40:49 +0100
Subject: Question regarding BUG in mm/slub.c
In-Reply-To: <4AFB3A9D.7040603@lwfinger.net>
References: <4AFB3012.2060606@lwfinger.net> <200911112304.02079.mb@bu3sch.de>
	<4AFB3A9D.7040603@lwfinger.net>
Message-ID: <200911112340.51436.mb@bu3sch.de>

On Wednesday 11 November 2009 23:28:45 Larry Finger wrote:
> On 11/11/2009 04:03 PM, Michael Buesch wrote:
> > On Wednesday 11 November 2009 22:43:46 Larry Finger wrote:
> >> Michael,
> >>
> >> I don't know whether this came to you. I did not get it and I had to read it on
> >> the LKML archive.
> >>
> >>> What is the meaning of PageCompound(page) being zero?
> >>
> >> From Pekka Enberg:
> >>
> >> "You're passing a pointer to kfree() that did not come from kmalloc().
> >> If a page is not PageSlab(), it needs to be a compound page if it came
> >> from the page allocator pass-through."
> >>
> >> I guess that helps a little.
> > 
> > Ok, very weird.
> > 
> > I'd guess priv_info->bouncebuffer contains garbage, for whatever reason.
> 
> With 64-bit DMA, under what circumstances would a bounce buffer be needed?

Well, theoretically it could _try_ to use a bouncebuffer, because the mapping
of the skb failed for whatever non-addressspace-related reason (dma_mapping_error() returned error).
I don't think that happens, however. And in case it did happen, it should not
produce this BUG(). It should silently work.

But my guess is that some memory corruption is going on which corrupts skb->cb.
I don't see other kfree()s in the path that matches the backtrace, so for now
I'm assuming it's the bouncebuffer kfree() that causes the crash due to a crap pointer.

I guess a few WARN_ONs should be added for debugging. One to the bouncebuffer
allocation path to check whether it allocates one or not. And one to the bouncebuffer
free path which warns (and prints the pointer) if bouncebuffer!=NULL.

Also notice that the stack in this oops seems slightly corrupted. update_curr_rt should
not show up in the trace, as far as I can see.
There also are a few interesting numbers on the stack "7fff7fff dededede" and in EAX.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 12 01:37:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Nov 2009 18:37:32 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFA09C8.4060602@gmail.com>
References: <4AFA09C8.4060602@gmail.com>
Message-ID: <4AFB58CC.6010807@lwfinger.net>

Andy,

Please try the patch below to see what we can learn from the DMA descriptor
errors. Some of this code is temporary, but there are also some statements that
will probably become permanent.

Please post any messages that result.

Larry


Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c
+++ wireless-testing/drivers/net/wireless/b43/dma.c
@@ -46,6 +46,8 @@
  * into separate slots. */
 #define TX_SLOTS_PER_FRAME	2

+int dma_point = 0;
+struct b43_dmadesc_generic dma_desc_save[20];

 /* 32bit DMA ops. */
 static
@@ -190,6 +192,12 @@ static void op64_fill_descriptor(struct
 	desc->dma64.control1 = cpu_to_le32(ctl1);
 	desc->dma64.address_low = cpu_to_le32(addrlo);
 	desc->dma64.address_high = cpu_to_le32(addrhi);
+	dma_desc_save[dma_point].dma64.control0 = desc->dma64.control0;
+	dma_desc_save[dma_point].dma64.control1 = desc->dma64.control1;
+	dma_desc_save[dma_point].dma64.address_low = desc->dma64.address_low;
+	dma_desc_save[dma_point].dma64.address_high = desc->dma64.address_high;
+	if (++dma_point >= 20)
+		dma_point = 0;
 }

 static void op64_poke_tx(struct b43_dmaring *ring, int slot)
@@ -1216,8 +1224,11 @@ static int dma_tx_fragment(struct b43_dm
 	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 	/* create a bounce buffer in zone_dma on mapping failure. */
 	if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
+		printk(KERN_INFO "b43: Using bounce buffer\n");
 		bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC | GFP_DMA);
 		if (!bounce_skb) {
+			b43warn(ring->dev->wl, "Bounce buffer allocation "
+				"failed\n");
 			ring->current_slot = old_top_slot;
 			ring->used_slots = old_used_slots;
 			err = -ENOMEM;
@@ -1236,6 +1247,8 @@ static int dma_tx_fragment(struct b43_dm
 		meta->skb = skb;
 		meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 		if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
+			b43warn(ring->dev->wl, "DMA mapping error for bounce "
+				"buffer\n");
 			ring->current_slot = old_top_slot;
 			ring->used_slots = old_used_slots;
 			err = -EIO;
@@ -1620,6 +1633,25 @@ void b43_dma_tx_resume(struct b43_wldev
 	b43_power_saving_ctl_bits(dev, 0);
 }

+void b43_dump_desc_buffer(void)
+{
+	/* dump the descriptor buffer once */
+	int i, j = dma_point;
+	static int once = 0;
+
+	if (once)
+		return;
+	printk(KERN_INFO "b43: Dump of last 20 DMA descriptors\n");
+	for (i = 0; i < 20; i++) {
+		if (--j < 0)
+			j = 19;
+		printk(KERN_INFO "b43: Descr. %2d: 0x%x 0x%X 0x%X 0x%X\n", i,
+		       dma_desc_save[j].dma64.control0, dma_desc_save[j].dma64.control1,
+		       dma_desc_save[j].dma64.address_low, dma_desc_save[j].dma64.address_high);
+	}
+	once++;
+}
+
 #ifdef CONFIG_B43_PIO
 static void direct_fifo_rx(struct b43_wldev *dev, enum b43_dmatype type,
 			   u16 mmio_base, bool enable)
Index: wireless-testing/drivers/net/wireless/b43/dma.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.h
+++ wireless-testing/drivers/net/wireless/b43/dma.h
@@ -287,4 +287,5 @@ void b43_dma_rx(struct b43_dmaring *ring
 void b43_dma_direct_fifo_rx(struct b43_wldev *dev,
 			    unsigned int engine_index, bool enable);

+void b43_dump_desc_buffer(void);
 #endif /* B43_DMA_H_ */
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c
+++ wireless-testing/drivers/net/wireless/b43/main.c
@@ -1785,6 +1785,7 @@ static void b43_do_interrupt_thread(stru
 			       dma_reason[2], dma_reason[3],
 			       dma_reason[4], dma_reason[5]);
 			b43_controller_restart(dev, "DMA error");
+			b43_dump_desc_buffer();
 			return;
 		}
 		if (merged_dma_reason & B43_DMAIRQ_NONFATALMASK) {



From b3nton at gmail.com  Thu Nov 12 12:42:47 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Thu, 12 Nov 2009 11:42:47 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFB0CBB.4050104@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFA2867.3090909@lwfinger.net>
	<4AFACFB8.1090900@gmail.com> <4AFB0CBB.4050104@lwfinger.net>
Message-ID: <4AFBF4B7.8000206@gmail.com>

On 11/11/09 19:12, Larry Finger wrote:
>
> Such an error in SLUB handling could be arising from a DMA problem in b43, but
> it could also arise from a memory error. Please run memtest86+ for an extended
> period so that a hardware error can be ruled out. A 24 hour run would be good.
> If that is not possible, please do at least a 12 hour test.
>

I've run memtest86+ for more than 12 hours, so far with no errors. I'll 
run it a while longer but I don't think there's anything wrong with the 
hardware.

Andy


From mb at bu3sch.de  Thu Nov 12 12:45:58 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 12:45:58 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFBF4B7.8000206@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFB0CBB.4050104@lwfinger.net>
	<4AFBF4B7.8000206@gmail.com>
Message-ID: <200911121246.00046.mb@bu3sch.de>

On Thursday 12 November 2009 12:42:47 Andrew Benton wrote:
> On 11/11/09 19:12, Larry Finger wrote:
> >
> > Such an error in SLUB handling could be arising from a DMA problem in b43, but
> > it could also arise from a memory error. Please run memtest86+ for an extended
> > period so that a hardware error can be ruled out. A 24 hour run would be good.
> > If that is not possible, please do at least a 12 hour test.
> >
> 
> I've run memtest86+ for more than 12 hours, so far with no errors. I'll 
> run it a while longer but I don't think there's anything wrong with the 
> hardware.

I'd rather suggest trying larry's patch instead of running another memtest round.

-- 
Greetings, Michael.


From b3nton at gmail.com  Thu Nov 12 13:16:31 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Thu, 12 Nov 2009 12:16:31 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFB58CC.6010807@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFB58CC.6010807@lwfinger.net>
Message-ID: <4AFBFC9F.3070809@gmail.com>

On 12/11/09 00:37, Larry Finger wrote:
> Andy,
>
> Please try the patch below to see what we can learn from the DMA descriptor
> errors. Some of this code is temporary, but there are also some statements that
> will probably become permanent.
>
> Please post any messages that result.

The patch failed

patching file drivers/net/wireless/b43/dma.c
Hunk #3 FAILED at 1224.
Hunk #4 FAILED at 1247.
Hunk #5 succeeded at 1625 (offset -8 lines).
2 out of 5 hunks FAILED -- saving rejects to file 
drivers/net/wireless/b43/dma.c.rej
patching file drivers/net/wireless/b43/dma.h
patching file drivers/net/wireless/b43/main.c
andy:~$

I tried to apply it to the wireless-testing kernel

This line from your patch:-
bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC | GFP_DMA);

isn't in my copy of drivers/net/wireless/b43/dma.c, in mine it looks 
like this:-
priv_info->bouncebuffer = kmalloc(skb->len, GFP_ATOMIC | GFP_DMA);

Should I be working with a different kernel source?

Andy


From mb at bu3sch.de  Thu Nov 12 13:57:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 13:57:15 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFBFC9F.3070809@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFB58CC.6010807@lwfinger.net>
	<4AFBFC9F.3070809@gmail.com>
Message-ID: <200911121357.17031.mb@bu3sch.de>

On Thursday 12 November 2009 13:16:31 Andrew Benton wrote:
> On 12/11/09 00:37, Larry Finger wrote:
> > Andy,
> >
> > Please try the patch below to see what we can learn from the DMA descriptor
> > errors. Some of this code is temporary, but there are also some statements that
> > will probably become permanent.
> >
> > Please post any messages that result.
> 
> The patch failed

Larry had an outdated tree.
This patch applies against wireless-testing:

From Larry.Finger at lwfinger.net Thu Nov 12 01:37:32 2009
Return-path: <bcm43xx-dev-bounces at lists.berlios.de>
Envelope-to: mb at bu3sch.de
Delivery-date: Thu, 12 Nov 2009 00:38:24 +0000
Received: by vs166246.vserver.de with esmtp (Exim 4.69)
	id 1N8Nhg-0000zK-T1
	for mb at bu3sch.de; Thu, 12 Nov 2009 00:38:24 +0000
Received: from bat.berlios.de (localhost [127.0.0.1])
	by mail.berlios.de (Postfix) with ESMTP id 2A1D719E79B;
	Thu, 12 Nov 2009 01:38:05 +0100 (CET)
X-Original-To: bcm43xx-dev at lists.berlios.de
Delivered-To: bcm43xx-dev at lists.berlios.de
Received: from mail-yx0-f174.google.com (mail-yx0-f174.google.com
	[209.85.210.174])
	by mail.berlios.de (Postfix) with ESMTP id 22BCAB3811
	for <bcm43xx-dev at lists.berlios.de>;
	Thu, 12 Nov 2009 01:37:35 +0100 (CET)
Received: by yxe4 with SMTP id 4so1496946yxe.32
	for <bcm43xx-dev at lists.berlios.de>;
	Wed, 11 Nov 2009 16:37:34 -0800 (PST)
Received: by 10.90.10.9 with SMTP id 9mr3391390agj.69.1257986254045;
	Wed, 11 Nov 2009 16:37:34 -0800 (PST)
Received: from ?192.168.2.217? ([65.28.92.235])
	by mx.google.com with ESMTPS id 4sm1044525yxd.70.2009.11.11.16.37.32
	(version=SSLv3 cipher=RC4-MD5); Wed, 11 Nov 2009 16:37:33 -0800 (PST)
Message-ID: <4AFB58CC.6010807 at lwfinger.net>
Date: Wed, 11 Nov 2009 18:37:32 -0600
From: Larry Finger <Larry.Finger at lwfinger.net>
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US;
	rv:1.9.1.4pre) Gecko/20090915 SUSE/3.0b4-3.6 Thunderbird/3.0b4
MIME-Version: 1.0
To: Andrew Benton <b3nton at gmail.com>
Subject: Re: b43-phy0 ERROR: Fatal DMA error: 0x00000400
References: <4AFA09C8.4060602 at gmail.com>
In-Reply-To: <4AFA09C8.4060602 at gmail.com>
Cc: bcm43xx-dev at lists.berlios.de,
 Michael Buesch <mb at bu3sch.de>
X-BeenThere: bcm43xx-dev at lists.berlios.de
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: <bcm43xx-dev.lists.berlios.de>
List-Unsubscribe: <https://lists.berlios.de/mailman/listinfo/bcm43xx-dev>,
	<mailto:bcm43xx-dev-request at lists.berlios.de?subject=unsubscribe>
List-Archive: <https://lists.berlios.de/pipermail/bcm43xx-dev>
List-Post: <mailto:bcm43xx-dev at lists.berlios.de>
List-Help: <mailto:bcm43xx-dev-request at lists.berlios.de?subject=help>
List-Subscribe: <https://lists.berlios.de/mailman/listinfo/bcm43xx-dev>,
	<mailto:bcm43xx-dev-request at lists.berlios.de?subject=subscribe>
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: bcm43xx-dev-bounces at lists.berlios.de
Errors-To: bcm43xx-dev-bounces at lists.berlios.de
X-Length: 6628
X-UID: 8122

Andy,

Please try the patch below to see what we can learn from the DMA descriptor
errors. Some of this code is temporary, but there are also some statements that
will probably become permanent.

Please post any messages that result.

Larry


---
 drivers/net/wireless/b43/dma.c  |   32 ++++++++++++++++++++++++++++++++
 drivers/net/wireless/b43/dma.h  |    1 +
 drivers/net/wireless/b43/main.c |    1 +
 3 files changed, 34 insertions(+)

--- wireless-testing.orig/drivers/net/wireless/b43/dma.c
+++ wireless-testing/drivers/net/wireless/b43/dma.c
@@ -46,6 +46,8 @@
  * into separate slots. */
 #define TX_SLOTS_PER_FRAME	2
 
+int dma_point = 0;
+struct b43_dmadesc_generic dma_desc_save[20];
 
 /* 32bit DMA ops. */
 static
@@ -190,6 +192,12 @@ static void op64_fill_descriptor(struct 
 	desc->dma64.control1 = cpu_to_le32(ctl1);
 	desc->dma64.address_low = cpu_to_le32(addrlo);
 	desc->dma64.address_high = cpu_to_le32(addrhi);
+	dma_desc_save[dma_point].dma64.control0 = desc->dma64.control0;
+	dma_desc_save[dma_point].dma64.control1 = desc->dma64.control1;
+	dma_desc_save[dma_point].dma64.address_low = desc->dma64.address_low;
+	dma_desc_save[dma_point].dma64.address_high = desc->dma64.address_high;
+	if (++dma_point >= 20)
+		dma_point = 0;
 }
 
 static void op64_poke_tx(struct b43_dmaring *ring, int slot)
@@ -1216,8 +1224,11 @@ static int dma_tx_fragment(struct b43_dm
 	meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 	/* create a bounce buffer in zone_dma on mapping failure. */
 	if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
+		printk(KERN_INFO "b43: Using bounce buffer\n");
 		priv_info->bouncebuffer = kmalloc(skb->len, GFP_ATOMIC | GFP_DMA);
 		if (!priv_info->bouncebuffer) {
+			b43warn(ring->dev->wl, "Bounce buffer allocation "
+				"failed\n");
 			ring->current_slot = old_top_slot;
 			ring->used_slots = old_used_slots;
 			err = -ENOMEM;
@@ -1227,6 +1238,8 @@ static int dma_tx_fragment(struct b43_dm
 
 		meta->dmaaddr = map_descbuffer(ring, priv_info->bouncebuffer, skb->len, 1);
 		if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
+			b43warn(ring->dev->wl, "DMA mapping error for bounce "
+				"buffer\n");
 			kfree(priv_info->bouncebuffer);
 			priv_info->bouncebuffer = NULL;
 			ring->current_slot = old_top_slot;
@@ -1612,6 +1625,25 @@ void b43_dma_tx_resume(struct b43_wldev 
 	b43_power_saving_ctl_bits(dev, 0);
 }
 
+void b43_dump_desc_buffer(void)
+{
+	/* dump the descriptor buffer once */
+	int i, j = dma_point;
+	static int once = 0;
+
+	if (once)
+		return;
+	printk(KERN_INFO "b43: Dump of last 20 DMA descriptors\n");
+	for (i = 0; i < 20; i++) {
+		if (--j < 0)
+			j = 19;
+		printk(KERN_INFO "b43: Descr. %2d: 0x%x 0x%X 0x%X 0x%X\n", i,
+		       dma_desc_save[j].dma64.control0, dma_desc_save[j].dma64.control1,
+		       dma_desc_save[j].dma64.address_low, dma_desc_save[j].dma64.address_high);
+	}
+	once++;
+}
+
 #ifdef CONFIG_B43_PIO
 static void direct_fifo_rx(struct b43_wldev *dev, enum b43_dmatype type,
 			   u16 mmio_base, bool enable)
--- wireless-testing.orig/drivers/net/wireless/b43/dma.h
+++ wireless-testing/drivers/net/wireless/b43/dma.h
@@ -287,4 +287,5 @@ void b43_dma_rx(struct b43_dmaring *ring
 void b43_dma_direct_fifo_rx(struct b43_wldev *dev,
 			    unsigned int engine_index, bool enable);
 
+void b43_dump_desc_buffer(void);
 #endif /* B43_DMA_H_ */
--- wireless-testing.orig/drivers/net/wireless/b43/main.c
+++ wireless-testing/drivers/net/wireless/b43/main.c
@@ -1785,6 +1785,7 @@ static void b43_do_interrupt_thread(stru
 			       dma_reason[2], dma_reason[3],
 			       dma_reason[4], dma_reason[5]);
 			b43_controller_restart(dev, "DMA error");
+			b43_dump_desc_buffer();
 			return;
 		}
 		if (merged_dma_reason & B43_DMAIRQ_NONFATALMASK) {

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 12 16:50:37 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 09:50:37 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFBFC9F.3070809@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFB58CC.6010807@lwfinger.net>
	<4AFBFC9F.3070809@gmail.com>
Message-ID: <4AFC2ECD.7060201@lwfinger.net>

On 11/12/2009 06:16 AM, Andrew Benton wrote:
> On 12/11/09 00:37, Larry Finger wrote:
>> Andy,
>>
>> Please try the patch below to see what we can learn from the DMA descriptor
>> errors. Some of this code is temporary, but there are also some statements that
>> will probably become permanent.
>>
>> Please post any messages that result.
> 
> The patch failed
> 
> patching file drivers/net/wireless/b43/dma.c
> Hunk #3 FAILED at 1224.
> Hunk #4 FAILED at 1247.
> Hunk #5 succeeded at 1625 (offset -8 lines).
> 2 out of 5 hunks FAILED -- saving rejects to file 
> drivers/net/wireless/b43/dma.c.rej
> patching file drivers/net/wireless/b43/dma.h
> patching file drivers/net/wireless/b43/main.c
> andy:~$
> 
> I tried to apply it to the wireless-testing kernel
> 
> This line from your patch:-
> bounce_skb = __dev_alloc_skb(skb->len, GFP_ATOMIC | GFP_DMA);
> 
> isn't in my copy of drivers/net/wireless/b43/dma.c, in mine it looks 
> like this:-
> priv_info->bouncebuffer = kmalloc(skb->len, GFP_ATOMIC | GFP_DMA);
> 
> Should I be working with a different kernel source?

Sorry about the kernel mismatch. I developed that patch while offline and
waiting at an auto repair place and forgot to refresh my sources before sending
it. The revised version that Michael sent should work. If not, please let me
know and I will send an updated version.

Thanks for memory testing. We can eliminate the RAM as a source of the failure.

Larry


From b3nton at gmail.com  Thu Nov 12 17:42:07 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Thu, 12 Nov 2009 16:42:07 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC2ECD.7060201@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFB58CC.6010807@lwfinger.net>
	<4AFBFC9F.3070809@gmail.com> <4AFC2ECD.7060201@lwfinger.net>
Message-ID: <4AFC3ADF.6030104@gmail.com>

On 12/11/09 15:50, Larry Finger wrote:
> Sorry about the kernel mismatch. I developed that patch while offline and
> waiting at an auto repair place and forgot to refresh my sources before sending
> it. The revised version that Michael sent should work. If not, please let me
> know and I will send an updated version.

Indeed, it works. I've just been browsing for more than an hour with no 
problems or error messages in the syslog. I've got to do some housework 
now. I'll test it some more later.
Thanks!

Andy


From mb at bu3sch.de  Thu Nov 12 17:53:41 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 17:53:41 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC3ADF.6030104@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFC2ECD.7060201@lwfinger.net>
	<4AFC3ADF.6030104@gmail.com>
Message-ID: <200911121753.44079.mb@bu3sch.de>

On Thursday 12 November 2009 17:42:07 Andrew Benton wrote:
> On 12/11/09 15:50, Larry Finger wrote:
> > Sorry about the kernel mismatch. I developed that patch while offline and
> > waiting at an auto repair place and forgot to refresh my sources before sending
> > it. The revised version that Michael sent should work. If not, please let me
> > know and I will send an updated version.
> 
> Indeed, it works. I've just been browsing for more than an hour with no 
> problems or error messages in the syslog. I've got to do some housework 
> now. I'll test it some more later.
> Thanks!

Ehm, this patch is not supposed to fix anything. It's just a debugging patch that's
more verbose in the failure case.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 12 18:14:11 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 11:14:11 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911121753.44079.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com>
	<4AFC2ECD.7060201@lwfinger.net>	<4AFC3ADF.6030104@gmail.com>
	<200911121753.44079.mb@bu3sch.de>
Message-ID: <4AFC4263.6070403@lwfinger.net>

On 11/12/2009 10:53 AM, Michael Buesch wrote:
> On Thursday 12 November 2009 17:42:07 Andrew Benton wrote:
>> On 12/11/09 15:50, Larry Finger wrote:
>>> Sorry about the kernel mismatch. I developed that patch while offline and
>>> waiting at an auto repair place and forgot to refresh my sources before sending
>>> it. The revised version that Michael sent should work. If not, please let me
>>> know and I will send an updated version.
>>
>> Indeed, it works. I've just been browsing for more than an hour with no 
>> problems or error messages in the syslog. I've got to do some housework 
>> now. I'll test it some more later.
>> Thanks!
> 
> Ehm, this patch is not supposed to fix anything. It's just a debugging patch that's
> more verbose in the failure case.

I guess I'm a failure at writing diagnostic patches. Until there is a DMA error,
the only effect of the patch is to add a little extra time to the routine that
fills in the descriptor structure, and it adds to the data and code size. If any
of those changes have the effect of "fixing" your problem, then we have severe
difficulties. I expect that you will get the error sooner or later.

Larry


From b3nton at gmail.com  Thu Nov 12 19:45:45 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Thu, 12 Nov 2009 18:45:45 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC4263.6070403@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>
	<4AFC2ECD.7060201@lwfinger.net>	<4AFC3ADF.6030104@gmail.com>
	<200911121753.44079.mb@bu3sch.de> <4AFC4263.6070403@lwfinger.net>
Message-ID: <4AFC57D9.8070309@gmail.com>

On 12/11/09 17:14, Larry Finger wrote:
> I guess I'm a failure at writing diagnostic patches. Until there is a DMA error,
> the only effect of the patch is to add a little extra time to the routine that
> fills in the descriptor structure, and it adds to the data and code size. If any
> of those changes have the effect of "fixing" your problem, then we have severe
> difficulties. I expect that you will get the error sooner or later.
> 

Well to provoke it a little I recompiled with all the options on the 
ACPI menu set to y and now it fails to connect like so:-


Nov 12 18:40:38 doughnut kernel: wlan0: deauthenticating from 00:1e:2a:27:7e:62 by local choice (reason=3)
Nov 12 18:40:38 doughnut kernel: wlan0: direct probe to AP 00:1e:2a:27:7e:62 (try 1)
Nov 12 18:40:38 doughnut kernel: wlan0: direct probe responded
Nov 12 18:40:38 doughnut kernel: wlan0: authenticate with AP 00:1e:2a:27:7e:62 (try 1)
Nov 12 18:40:38 doughnut kernel: wlan0: authenticated
Nov 12 18:40:38 doughnut kernel: wlan0: associate with AP 00:1e:2a:27:7e:62 (try 1)
Nov 12 18:40:38 doughnut kernel: wlan0: RX AssocResp from 00:1e:2a:27:7e:62 (capab=0x411 status=0 aid=1)
Nov 12 18:40:38 doughnut kernel: wlan0: associated
Nov 12 18:40:40 doughnut ntpd[514]: frequency initialized -66.915 PPM from /home/boot/ntp.drift
Nov 12 18:40:43 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:40:43 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:40:43 doughnut kernel: b43: Dump of last 20 DMA descriptors
Nov 12 18:40:43 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x364BD020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x364BF020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x364B7020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x364B6020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x364B5020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x364B4020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  6: 0x0 0x930 0x364A8020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x364AF020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x364AE020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr.  9: 0x60000000 0x74 0x36972428 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 10: 0x80000000 0x6E 0x36A1595A 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x364AD020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x364AC020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x364AB020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x364AA020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x364A9020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x36517020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x36516020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36515020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36514020 0x80000000
Nov 12 18:40:43 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:40:49 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:40:49 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:40:49 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:40:49 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:40:55 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:40:55 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:40:55 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:40:55 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:41:00 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:41:00 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:41:00 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:41:01 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:41:06 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:41:06 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
Nov 12 18:41:06 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:41:06 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:41:12 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:41:12 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:41:12 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:41:12 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 12 18:41:14 doughnut shutdown[569]: shutting down for system halt
Nov 12 18:41:17 doughnut init: Switching to runlevel: 0
Nov 12 18:41:18 doughnut kernel: b43-phy0: Controller restarted
Nov 12 18:41:18 doughnut kernel: b43-phy0 ERROR: 
Nov 12 18:41:18 doughnut kernel: No probe response from AP 00:1e:2a:27:7e:62 after 500ms, disconnecting.
Nov 12 18:41:18 doughnut kernel: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 12 18:41:18 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 12 18:41:18 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)





From mb at bu3sch.de  Thu Nov 12 20:14:07 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 20:14:07 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC57D9.8070309@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <4AFC4263.6070403@lwfinger.net>
	<4AFC57D9.8070309@gmail.com>
Message-ID: <200911122014.09685.mb@bu3sch.de>

On Thursday 12 November 2009 19:45:45 Andrew Benton wrote:
> On 12/11/09 17:14, Larry Finger wrote:
> > I guess I'm a failure at writing diagnostic patches. Until there is a DMA error,
> > the only effect of the patch is to add a little extra time to the routine that
> > fills in the descriptor structure, and it adds to the data and code size. If any
> > of those changes have the effect of "fixing" your problem, then we have severe
> > difficulties. I expect that you will get the error sooner or later.
> > 
> 
> Well to provoke it a little I recompiled with all the options on the 
> ACPI menu set to y and now it fails to connect like so:-
> 
> 
> Nov 12 18:40:38 doughnut kernel: wlan0: deauthenticating from 00:1e:2a:27:7e:62 by local choice (reason=3)
> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe to AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe responded
> Nov 12 18:40:38 doughnut kernel: wlan0: authenticate with AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: authenticated
> Nov 12 18:40:38 doughnut kernel: wlan0: associate with AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: RX AssocResp from 00:1e:2a:27:7e:62 (capab=0x411 status=0 aid=1)
> Nov 12 18:40:38 doughnut kernel: wlan0: associated
> Nov 12 18:40:40 doughnut ntpd[514]: frequency initialized -66.915 PPM from /home/boot/ntp.drift
> Nov 12 18:40:43 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
> Nov 12 18:40:43 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
> Nov 12 18:40:43 doughnut kernel: b43: Dump of last 20 DMA descriptors
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x364BD020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x364BF020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x364B7020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x364B6020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x364B5020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x364B4020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  6: 0x0 0x930 0x364A8020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x364AF020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x364AE020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  9: 0x60000000 0x74 0x36972428 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 10: 0x80000000 0x6E 0x36A1595A 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x364AD020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x364AC020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x364AB020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x364AA020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x364A9020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x36517020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x36516020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36515020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36514020 0x80000000

This looks OK.
I guess there's something fishy going on in our descriptor memory allocation.
We have some very weird workarounds in there which I still think are wrong.
I'll try to rewrite that stuff and send a patch for testing later...

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 12 20:33:54 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 13:33:54 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC57D9.8070309@gmail.com>
References: <4AFA09C8.4060602@gmail.com>	<4AFC2ECD.7060201@lwfinger.net>	<4AFC3ADF.6030104@gmail.com>	<200911121753.44079.mb@bu3sch.de>
	<4AFC4263.6070403@lwfinger.net> <4AFC57D9.8070309@gmail.com>
Message-ID: <4AFC6322.7000300@lwfinger.net>

On 11/12/2009 12:45 PM, Andrew Benton wrote:
> On 12/11/09 17:14, Larry Finger wrote:
>> I guess I'm a failure at writing diagnostic patches. Until there is a DMA error,
>> the only effect of the patch is to add a little extra time to the routine that
>> fills in the descriptor structure, and it adds to the data and code size. If any
>> of those changes have the effect of "fixing" your problem, then we have severe
>> difficulties. I expect that you will get the error sooner or later.
>>
> 
> Well to provoke it a little I recompiled with all the options on the 
> ACPI menu set to y and now it fails to connect like so:-
> 
> 
> Nov 12 18:40:38 doughnut kernel: wlan0: deauthenticating from 00:1e:2a:27:7e:62 by local choice (reason=3)
> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe to AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe responded
> Nov 12 18:40:38 doughnut kernel: wlan0: authenticate with AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: authenticated
> Nov 12 18:40:38 doughnut kernel: wlan0: associate with AP 00:1e:2a:27:7e:62 (try 1)
> Nov 12 18:40:38 doughnut kernel: wlan0: RX AssocResp from 00:1e:2a:27:7e:62 (capab=0x411 status=0 aid=1)
> Nov 12 18:40:38 doughnut kernel: wlan0: associated
> Nov 12 18:40:40 doughnut ntpd[514]: frequency initialized -66.915 PPM from /home/boot/ntp.drift
> Nov 12 18:40:43 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
> Nov 12 18:40:43 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
> Nov 12 18:40:43 doughnut kernel: b43: Dump of last 20 DMA descriptors
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x364BD020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x364BF020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x364B7020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x364B6020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x364B5020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x364B4020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  6: 0x0 0x930 0x364A8020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x364AF020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x364AE020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr.  9: 0x60000000 0x74 0x36972428 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 10: 0x80000000 0x6E 0x36A1595A 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x364AD020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x364AC020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x364AB020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x364AA020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x364A9020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x36517020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x36516020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36515020 0x80000000
> Nov 12 18:40:43 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36514020 0x80000000

Now we have some progress. You will note the difference in the control words
(first 2 columns) for descriptors 8 & 9. They are wrong.

While Michael is coming up with a test patch, I'll nose around in the code. He
understands this part better than I, but even the blind squirrel gets a nut once
in a while.

Larry


From william.bourque at polymtl.ca  Thu Nov 12 20:32:32 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Thu, 12 Nov 2009 14:32:32 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122014.09685.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com>
	<4AFC4263.6070403@lwfinger.net>	<4AFC57D9.8070309@gmail.com>
	<200911122014.09685.mb@bu3sch.de>
Message-ID: <4AFC62D0.8060702@polymtl.ca>


Michael Buesch wrote:
> On Thursday 12 November 2009 19:45:45 Andrew Benton wrote:
>> On 12/11/09 17:14, Larry Finger wrote:
>>> I guess I'm a failure at writing diagnostic patches. Until there is a DMA error,
>>> the only effect of the patch is to add a little extra time to the routine that
>>> fills in the descriptor structure, and it adds to the data and code size. If any
>>> of those changes have the effect of "fixing" your problem, then we have severe
>>> difficulties. I expect that you will get the error sooner or later.
>>>
>> Well to provoke it a little I recompiled with all the options on the 
>> ACPI menu set to y and now it fails to connect like so:-
>>
>>
>> Nov 12 18:40:38 doughnut kernel: wlan0: deauthenticating from 00:1e:2a:27:7e:62 by local choice (reason=3)
>> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe to AP 00:1e:2a:27:7e:62 (try 1)
>> Nov 12 18:40:38 doughnut kernel: wlan0: direct probe responded
>> Nov 12 18:40:38 doughnut kernel: wlan0: authenticate with AP 00:1e:2a:27:7e:62 (try 1)
>> Nov 12 18:40:38 doughnut kernel: wlan0: authenticated
>> Nov 12 18:40:38 doughnut kernel: wlan0: associate with AP 00:1e:2a:27:7e:62 (try 1)
>> Nov 12 18:40:38 doughnut kernel: wlan0: RX AssocResp from 00:1e:2a:27:7e:62 (capab=0x411 status=0 aid=1)
>> Nov 12 18:40:38 doughnut kernel: wlan0: associated
>> Nov 12 18:40:40 doughnut ntpd[514]: frequency initialized -66.915 PPM from /home/boot/ntp.drift
>> Nov 12 18:40:43 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
>> Nov 12 18:40:43 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
>> Nov 12 18:40:43 doughnut kernel: b43: Dump of last 20 DMA descriptors
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x364BD020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x364BF020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x364B7020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x364B6020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x364B5020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x364B4020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  6: 0x0 0x930 0x364A8020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x364AF020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x364AE020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr.  9: 0x60000000 0x74 0x36972428 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 10: 0x80000000 0x6E 0x36A1595A 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x364AD020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x364AC020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x364AB020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x364AA020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x364A9020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x36517020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x36516020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36515020 0x80000000
>> Nov 12 18:40:43 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36514020 0x80000000
> 
> This looks OK.
> I guess there's something fishy going on in our descriptor memory allocation.
> We have some very weird workarounds in there which I still think are wrong.
> I'll try to rewrite that stuff and send a patch for testing later...
> 
Hi all

Sorry for the late reply... I seem to have the exact same bug here. Do 
you need more people to run the diagnostic patch?

The computer is an HP Mini 1116R with a Broadcom 4312 chipset.

william at mini:~$ lspci -vnn | grep 14e4
01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
802.11b/g [14e4:4315] (rev 01)


From mb at bu3sch.de  Thu Nov 12 20:48:26 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 20:48:26 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC6322.7000300@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net>
Message-ID: <200911122048.28428.mb@bu3sch.de>

On Thursday 12 November 2009 20:33:54 Larry Finger wrote:
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x364BD020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x364BF020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x364B7020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x364B6020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x364B5020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x364B4020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  6: 0x0 0x930 0x364A8020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x364AF020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x364AE020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr.  9: 0x60000000 0x74 0x36972428 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 10: 0x80000000 0x6E 0x36A1595A 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x364AD020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x364AC020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x364AB020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x364AA020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x364A9020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x36517020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x36516020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36515020 0x80000000
> > Nov 12 18:40:43 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36514020 0x80000000
> 
> Now we have some progress. You will note the difference in the control words
> (first 2 columns) for descriptors 8 & 9. They are wrong.

What do you think is wrong here? I think the control words are OK.

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Nov 12 20:49:07 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 20:49:07 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC62D0.8060702@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com> <200911122014.09685.mb@bu3sch.de>
	<4AFC62D0.8060702@polymtl.ca>
Message-ID: <200911122049.09622.mb@bu3sch.de>

On Thursday 12 November 2009 20:32:32 William Bourque wrote:
> Sorry for the late reply... I seem to have the exact same bug here. Do 
> you need more people to run the diagnostic patch?

Well, it doesn't hurt.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 12 21:10:59 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 14:10:59 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122048.28428.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net> <200911122048.28428.mb@bu3sch.de>
Message-ID: <4AFC6BD3.4090308@lwfinger.net>

On 11/12/2009 01:48 PM, Michael Buesch wrote:
>> Now we have some progress. You will note the difference in the control words
>> (first 2 columns) for descriptors 8 & 9. They are wrong.
> 
> What do you think is wrong here? I think the control words are OK.

At the point where I captured them, I didn't think the flags had been set, but
now I see that they have. Do the address_low values for 8 and 9 look right? They
should be aligned on a 4K boundary.

Larry




From mb at bu3sch.de  Thu Nov 12 21:25:34 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 21:25:34 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC6BD3.4090308@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911122048.28428.mb@bu3sch.de>
	<4AFC6BD3.4090308@lwfinger.net>
Message-ID: <200911122125.36453.mb@bu3sch.de>

On Thursday 12 November 2009 21:10:59 Larry Finger wrote:
> Do the address_low values for 8 and 9 look right? They
> should be aligned on a 4K boundary.

Is this really a requirement? I think the 4k alignment is only required
for the descriptor memory. We never guaranteed any alignment for the skbs.

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Nov 12 22:16:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 22:16:03 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC6322.7000300@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net>
Message-ID: <200911122216.05680.mb@bu3sch.de>

On Thursday 12 November 2009 20:33:54 Larry Finger wrote:
> While Michael is coming up with a test patch,

Here you go:
http://bu3sch.de/patches/wireless-testing/20091112-2213/patches/001-b43-rewrite-dma-ring-alloc.patch
Please test this patch (also on 64bit-DMA devices that currently work).

It seriously lacks some comments, but I'll add them later if that works.

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Thu Nov 12 22:34:00 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Thu, 12 Nov 2009 16:34:00 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122049.09622.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911122014.09685.mb@bu3sch.de>
	<4AFC62D0.8060702@polymtl.ca> <200911122049.09622.mb@bu3sch.de>
Message-ID: <4AFC7F48.9030004@polymtl.ca>

Michael Buesch wrote:
> On Thursday 12 November 2009 20:32:32 William Bourque wrote:
>> Sorry for the late reply... I seem to have the exact same bug here. Do 
>> you need more people to run the diagnostic patch?
> 
> Well, it doesn't hurt.
> 

Here we go.

I think we can observe the same problem :
[  109.273027] b43: Descr.  0: 0x10000000 0x930 0x26296020 0x80000000
[  109.273038] b43: Descr.  1: 0x0 0x930 0x26295020 0x80000000
[  109.273047] b43: Descr.  2: 0x0 0x930 0x26294020 0x80000000
...
This Decr. 0 seems weird to me.

Note : I'm using 4kb kernel stack and SLAB (just saying, if I read 
correctly the last few mails, you were suspecting something about this).

I will try with Michael's patch and see what it does. Ask me if you need 
to test something else.

- William



[   95.270306] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[   95.286145] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[   95.297707] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[   95.450299] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[   95.452754] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  109.212708] b43-phy0 debug: Chip initialized
[  109.213037] b43-phy0 debug: 64-bit DMA initialized
[  109.213169] b43-phy0 debug: QoS enabled
[  109.253562] b43-phy0 debug: Wireless interface started
[  109.272964] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  109.272990] b43-phy0: Controller RESET (DMA error) ...
[  109.273017] b43: Dump of last 20 DMA descriptors
[  109.273027] b43: Descr.  0: 0x10000000 0x930 0x26296020 0x80000000
[  109.273038] b43: Descr.  1: 0x0 0x930 0x26295020 0x80000000
[  109.273047] b43: Descr.  2: 0x0 0x930 0x26294020 0x80000000
[  109.273057] b43: Descr.  3: 0x0 0x930 0x26293020 0x80000000
[  109.273067] b43: Descr.  4: 0x0 0x930 0x26292020 0x80000000
[  109.273077] b43: Descr.  5: 0x0 0x930 0x26291020 0x80000000
[  109.273086] b43: Descr.  6: 0x0 0x930 0x26290020 0x80000000
[  109.273096] b43: Descr.  7: 0x0 0x930 0x262B7020 0x80000000
[  109.273106] b43: Descr.  8: 0x0 0x930 0x262B6020 0x80000000
[  109.273115] b43: Descr.  9: 0x0 0x930 0x262B5020 0x80000000
[  109.273125] b43: Descr. 10: 0x0 0x930 0x262B4020 0x80000000
[  109.273135] b43: Descr. 11: 0x0 0x930 0x2628B020 0x80000000
[  109.273144] b43: Descr. 12: 0x0 0x930 0x2628A020 0x80000000
[  109.273154] b43: Descr. 13: 0x0 0x930 0x26289020 0x80000000
[  109.273164] b43: Descr. 14: 0x0 0x930 0x26288020 0x80000000
[  109.273174] b43: Descr. 15: 0x0 0x930 0x2622B020 0x80000000
[  109.273183] b43: Descr. 16: 0x0 0x930 0x2622A020 0x80000000
[  109.273193] b43: Descr. 17: 0x0 0x930 0x2627B020 0x80000000
[  109.273203] b43: Descr. 18: 0x0 0x930 0x2627A020 0x80000000
[  109.273212] b43: Descr. 19: 0x0 0x930 0x26255020 0x80000000
[  109.273230] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  109.273250] b43-phy0: Controller RESET (DMA error) ...
[  109.273279] b43-phy0 debug: Adding Interface type 2
[  109.273550] b43-phy0 debug: Wireless interface stopped
[  109.273562] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  109.273634] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  109.290240] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  109.310088] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  109.330240] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  109.350234] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  109.620178] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  109.622613] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  123.396317] b43-phy0 debug: Chip initialized
[  123.396632] b43-phy0 debug: 64-bit DMA initialized
[  123.396766] b43-phy0 debug: QoS enabled
[  123.431086] b43-phy0 debug: Wireless interface started
[  123.431098] b43-phy0: Controller restarted
[  123.450896] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000



From mb at bu3sch.de  Thu Nov 12 22:39:55 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 22:39:55 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC7F48.9030004@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com> <200911122049.09622.mb@bu3sch.de>
	<4AFC7F48.9030004@polymtl.ca>
Message-ID: <200911122239.58115.mb@bu3sch.de>

On Thursday 12 November 2009 22:34:00 William Bourque wrote:
> Michael Buesch wrote:
> > On Thursday 12 November 2009 20:32:32 William Bourque wrote:
> >> Sorry for the late reply... I seem to have the exact same bug here. Do 
> >> you need more people to run the diagnostic patch?
> > 
> > Well, it doesn't hurt.
> > 
> 
> Here we go.
> 
> I think we can observe the same problem :
> [  109.273027] b43: Descr.  0: 0x10000000 0x930 0x26296020 0x80000000
> [  109.273038] b43: Descr.  1: 0x0 0x930 0x26295020 0x80000000
> [  109.273047] b43: Descr.  2: 0x0 0x930 0x26294020 0x80000000
> ...
> This Decr. 0 seems weird to me.

No it looks OK to me.
descr0 most likely is the last descriptor in your RX ring, so it has
the descriptor-table-end bit set.

> Note : I'm using 4kb kernel stack and SLAB (just saying, if I read 
> correctly the last few mails, you were suspecting something about this).

No this has nothing to do with the stack.

> I will try with Michael's patch and see what it does.

Yeah, please do so.

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Thu Nov 12 22:59:26 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Thu, 12 Nov 2009 16:59:26 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122239.58115.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911122049.09622.mb@bu3sch.de>
	<4AFC7F48.9030004@polymtl.ca> <200911122239.58115.mb@bu3sch.de>
Message-ID: <4AFC853E.1030301@polymtl.ca>

Michael Buesch wrote:
> On Thursday 12 November 2009 22:34:00 William Bourque wrote:
>> Michael Buesch wrote:
>>> On Thursday 12 November 2009 20:32:32 William Bourque wrote:
>>>> Sorry for the late reply... I seem to have the exact same bug here. Do 
>>>> you need more people to run the diagnostic patch?
>>> Well, it doesn't hurt.
>>>
>> Here we go.
>>
>> I think we can observe the same problem :
>> [  109.273027] b43: Descr.  0: 0x10000000 0x930 0x26296020 0x80000000
>> [  109.273038] b43: Descr.  1: 0x0 0x930 0x26295020 0x80000000
>> [  109.273047] b43: Descr.  2: 0x0 0x930 0x26294020 0x80000000
>> ...
>> This Decr. 0 seems weird to me.
> 
> No it looks OK to me.
> descr0 most likely is the last descriptor in your RX ring, so it has
> the descriptor-table-end bit set.
> 
>> Note : I'm using 4kb kernel stack and SLAB (just saying, if I read 
>> correctly the last few mails, you were suspecting something about this).
> 
> No this has nothing to do with the stack.
> 
>> I will try with Michael's patch and see what it does.
> 
> Yeah, please do so.
> 

It just finished compiling. Note that I applied the new patch over the 
previous diagnostic patch, not sure if it can cause a problem somehow.

root at mini ~ # uname -a
Linux mini 2.6.32-rc6-wl-wireless-testing-b43-DMA-41742-g3e14c6f-dirty 
#2 SMP PREEMPT Thu Nov 12 16:37:26 EST 2009 i686 GNU/Linux

Here is the output of dmesg. Look like it didn't has any effect in my case :

[    7.512335] ACPI: WMI: Mapper loaded
[    7.520213] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[    7.620163] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
[    7.620190] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, 
Revision 2
[    7.702892] phy0: Selected rate control algorithm 'minstrel'
[    7.703252] Registered led device: b43-phy0::tx
[    7.703301] Registered led device: b43-phy0::rx
[    7.703360] Registered led device: b43-phy0::radio
[    7.703709] Broadcom 43xx driver loaded [ Features: PLS, Firmware-ID: 
FW13 ]
...skipped
[  167.140300] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[  167.155323] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[  167.166946] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[  167.320293] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  167.322759] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  181.210227] b43-phy0 debug: Chip initialized
[  181.210588] b43-phy0 debug: 64-bit DMA initialized
[  181.210719] b43-phy0 debug: QoS enabled
[  181.251102] b43-phy0 debug: Wireless interface started
[  181.251113] b43-phy0 debug: Adding Interface type 2
[  181.270285] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  181.270321] b43-phy0: Controller RESET (DMA error) ...
[  181.270334] b43: Dump of last 20 DMA descriptors
[  181.270345] b43: Descr.  0: 0x10000000 0x930 0x2FABC020 0x80000000
[  181.270355] b43: Descr.  1: 0x0 0x930 0x2FABB020 0x80000000
[  181.270365] b43: Descr.  2: 0x0 0x930 0x2FABA020 0x80000000
[  181.270374] b43: Descr.  3: 0x0 0x930 0x2FAB9020 0x80000000
[  181.270384] b43: Descr.  4: 0x0 0x930 0x2FAB8020 0x80000000
[  181.270393] b43: Descr.  5: 0x0 0x930 0x2FA3F020 0x80000000
[  181.270403] b43: Descr.  6: 0x0 0x930 0x2FA3E020 0x80000000
[  181.270413] b43: Descr.  7: 0x0 0x930 0x2FA3D020 0x80000000
[  181.270422] b43: Descr.  8: 0x0 0x930 0x2FA3C020 0x80000000
[  181.270432] b43: Descr.  9: 0x0 0x930 0x2FA2F020 0x80000000
[  181.270442] b43: Descr. 10: 0x0 0x930 0x2FA2E020 0x80000000
[  181.270451] b43: Descr. 11: 0x0 0x930 0x2FA2D020 0x80000000
[  181.270469] b43: Descr. 12: 0x0 0x930 0x2FA2C020 0x80000000
[  181.270474] b43: Descr. 13: 0x0 0x930 0x2FA03020 0x80000000
[  181.270479] b43: Descr. 14: 0x0 0x930 0x2FA02020 0x80000000
[  181.270484] b43: Descr. 15: 0x0 0x930 0x2FA01020 0x80000000
[  181.270489] b43: Descr. 16: 0x0 0x930 0x2FA00020 0x80000000
[  181.270493] b43: Descr. 17: 0x0 0x930 0x2FAAB020 0x80000000
[  181.270498] b43: Descr. 18: 0x0 0x930 0x2FAAA020 0x80000000
[  181.270503] b43: Descr. 19: 0x0 0x930 0x2FAA9020 0x80000000
[  181.270509] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  181.270516] b43-phy0: Controller RESET (DMA error) ...
[  181.270691] b43-phy0 debug: Wireless interface stopped
[  181.270702] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  181.270770] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  181.290238] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  181.310140] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  181.330094] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  181.352749] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  181.612618] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  181.615032] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  195.370265] b43-phy0 debug: Chip initialized
[  195.370586] b43-phy0 debug: 64-bit DMA initialized
[  195.370719] b43-phy0 debug: QoS enabled
[  195.413578] b43-phy0 debug: Wireless interface started
[  195.413592] b43-phy0: Controller restarted
[  195.433402] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  195.433418] b43-phy0: Controller RESET (DMA error) ...
[  195.433428] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  195.433438] b43-phy0: Controller RESET (DMA error) ...
[  195.433632] b43-phy0 debug: Wireless interface stopped
[  195.433645] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  195.433725] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  195.433917] ADDRCONF(NETDEV_UP): wlan0: link is not ready
[  195.460256] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  195.492477] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  195.510085] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  195.530153] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  195.790121] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  195.792533] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  209.552720] b43-phy0 debug: Chip initialized
[  209.553033] b43-phy0 debug: 64-bit DMA initialized
[  209.553167] b43-phy0 debug: QoS enabled
[  209.593415] b43-phy0 debug: Wireless interface started
[  209.593562] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  209.593574] b43-phy0: Controller RESET (DMA error) ...
[  209.593701] b43-phy0: Controller restarted
[  209.613011] b43-phy0 debug: Wireless interface stopped
[  209.613024] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  209.613091] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  209.640206] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  209.650219] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  209.670109] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  209.690103] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  209.940291] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  209.942759] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  223.722850] b43-phy0 debug: Chip initialized

- William


From mb at bu3sch.de  Thu Nov 12 23:27:30 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Nov 2009 23:27:30 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC853E.1030301@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com> <200911122239.58115.mb@bu3sch.de>
	<4AFC853E.1030301@polymtl.ca>
Message-ID: <200911122327.32274.mb@bu3sch.de>

On Thursday 12 November 2009 22:59:26 William Bourque wrote:
> Michael Buesch wrote:
> > On Thursday 12 November 2009 22:34:00 William Bourque wrote:
> >> Michael Buesch wrote:
> >>> On Thursday 12 November 2009 20:32:32 William Bourque wrote:
> >>>> Sorry for the late reply... I seem to have the exact same bug here. Do 
> >>>> you need more people to run the diagnostic patch?
> >>> Well, it doesn't hurt.
> >>>
> >> Here we go.
> >>
> >> I think we can observe the same problem :
> >> [  109.273027] b43: Descr.  0: 0x10000000 0x930 0x26296020 0x80000000
> >> [  109.273038] b43: Descr.  1: 0x0 0x930 0x26295020 0x80000000
> >> [  109.273047] b43: Descr.  2: 0x0 0x930 0x26294020 0x80000000
> >> ...
> >> This Decr. 0 seems weird to me.
> > 
> > No it looks OK to me.
> > descr0 most likely is the last descriptor in your RX ring, so it has
> > the descriptor-table-end bit set.
> > 
> >> Note : I'm using 4kb kernel stack and SLAB (just saying, if I read 
> >> correctly the last few mails, you were suspecting something about this).
> > 
> > No this has nothing to do with the stack.
> > 
> >> I will try with Michael's patch and see what it does.
> > 
> > Yeah, please do so.
> > 
> 
> It just finished compiling. Note that I applied the new patch over the 
> previous diagnostic patch, not sure if it can cause a problem somehow.

That should be fine.

> Here is the output of dmesg. Look like it didn't has any effect in my case :

Ok, thanks for testing.

I'd still like larry to test the patch, because AFAIR he was the one
who added the always-GFP_DMA-on-64bit workaround. This patch removes it.
The always-GFP_DMA doesn't make any sense, however it did help in the past
to get a device working (I hope Larry remembers which one that was).

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Nov 13 00:04:50 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 17:04:50 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122216.05680.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net> <200911122216.05680.mb@bu3sch.de>
Message-ID: <4AFC9492.8050201@lwfinger.net>

On 11/12/2009 03:16 PM, Michael Buesch wrote:
> On Thursday 12 November 2009 20:33:54 Larry Finger wrote:
>> While Michael is coming up with a test patch,
> 
> Here you go:
> http://bu3sch.de/patches/wireless-testing/20091112-2213/patches/001-b43-rewrite-dma-ring-alloc.patch
> Please test this patch (also on 64bit-DMA devices that currently work).
> 
> It seriously lacks some comments, but I'll add them later if that works.

The patch did not break my working 4315 (LP PHY) system.

Larry


From mb at bu3sch.de  Fri Nov 13 00:08:52 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 00:08:52 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC9492.8050201@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911122216.05680.mb@bu3sch.de>
	<4AFC9492.8050201@lwfinger.net>
Message-ID: <200911130008.54502.mb@bu3sch.de>

On Friday 13 November 2009 00:04:50 Larry Finger wrote:
> On 11/12/2009 03:16 PM, Michael Buesch wrote:
> > On Thursday 12 November 2009 20:33:54 Larry Finger wrote:
> >> While Michael is coming up with a test patch,
> > 
> > Here you go:
> > http://bu3sch.de/patches/wireless-testing/20091112-2213/patches/001-b43-rewrite-dma-ring-alloc.patch
> > Please test this patch (also on 64bit-DMA devices that currently work).
> > 
> > It seriously lacks some comments, but I'll add them later if that works.
> 
> The patch did not break my working 4315 (LP PHY) system.

Did this system need the always-set-GFP_DMA-workaround?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Nov 13 00:23:59 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 17:23:59 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911130008.54502.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911122216.05680.mb@bu3sch.de>
	<4AFC9492.8050201@lwfinger.net> <200911130008.54502.mb@bu3sch.de>
Message-ID: <4AFC990F.4030709@lwfinger.net>

On 11/12/2009 05:08 PM, Michael Buesch wrote:
> On Friday 13 November 2009 00:04:50 Larry Finger wrote:
>> On 11/12/2009 03:16 PM, Michael Buesch wrote:
>>> On Thursday 12 November 2009 20:33:54 Larry Finger wrote:
>>>> While Michael is coming up with a test patch,
>>>
>>> Here you go:
>>> http://bu3sch.de/patches/wireless-testing/20091112-2213/patches/001-b43-rewrite-dma-ring-alloc.patch
>>> Please test this patch (also on 64bit-DMA devices that currently work).
>>>
>>> It seriously lacks some comments, but I'll add them later if that works.
>>
>> The patch did not break my working 4315 (LP PHY) system.
> 
> Did this system need the always-set-GFP_DMA-workaround?

No, then was a 14e4:4311. I have now installed that same card and it seems to be
working without the workaround. When I had that problem, I had a different
laptop than I do now, thus it is not possible to reduplicate the setup. I am
also using later firmware - version 508.1107. There may or may not be any
differences in the rev 13 fw files.

If anyone reading this list has an HP dv2100 series laptop with a BCM4311, does
this patch work for you?

Larry


From mb at bu3sch.de  Fri Nov 13 00:57:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 00:57:29 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFC990F.4030709@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911130008.54502.mb@bu3sch.de>
	<4AFC990F.4030709@lwfinger.net>
Message-ID: <200911130057.31365.mb@bu3sch.de>

On Friday 13 November 2009 00:23:59 Larry Finger wrote:
> No, then was a 14e4:4311. I have now installed that same card and it seems to be
> working without the workaround. When I had that problem, I had a different
> laptop than I do now, thus it is not possible to reduplicate the setup. I am
> also using later firmware - version 508.1107. There may or may not be any
> differences in the rev 13 fw files.

Did the machine have more than 1G RAM?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Nov 13 01:02:44 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Nov 2009 18:02:44 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911130057.31365.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911130008.54502.mb@bu3sch.de>
	<4AFC990F.4030709@lwfinger.net> <200911130057.31365.mb@bu3sch.de>
Message-ID: <4AFCA224.8060307@lwfinger.net>

On 11/12/2009 05:57 PM, Michael Buesch wrote:
> On Friday 13 November 2009 00:23:59 Larry Finger wrote:
>> No, then was a 14e4:4311. I have now installed that same card and it seems to be
>> working without the workaround. When I had that problem, I had a different
>> laptop than I do now, thus it is not possible to reduplicate the setup. I am
>> also using later firmware - version 508.1107. There may or may not be any
>> differences in the rev 13 fw files.
> 
> Did the machine have more than 1G RAM?

Yes - 1.5 GB.


From mb at bu3sch.de  Fri Nov 13 12:16:42 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 12:16:42 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFCA224.8060307@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911130057.31365.mb@bu3sch.de>
	<4AFCA224.8060307@lwfinger.net>
Message-ID: <200911131216.43704.mb@bu3sch.de>

On Friday 13 November 2009 01:02:44 Larry Finger wrote:
> On 11/12/2009 05:57 PM, Michael Buesch wrote:
> > On Friday 13 November 2009 00:23:59 Larry Finger wrote:
> >> No, then was a 14e4:4311. I have now installed that same card and it seems to be
> >> working without the workaround. When I had that problem, I had a different
> >> laptop than I do now, thus it is not possible to reduplicate the setup. I am
> >> also using later firmware - version 508.1107. There may or may not be any
> >> differences in the rev 13 fw files.
> > 
> > Did the machine have more than 1G RAM?
> 
> Yes - 1.5 GB.

Ok, so my guess is that the DMA allocator simply returned high memory
that was unusable to the device. My new code explicitly checks for that (and a
few other things) and retries with GFP_DMA in case the address has illegal bits set.
That's the same thing we do for the frame buffers, so I don't see anything wrong with it.

Yeah, the new code is big and scary, but I think it makes a whole lot more sense than
what we have now. Especially if I add some comments and do more cleanups.

-- 
Greetings, Michael.


From b3nton at gmail.com  Fri Nov 13 14:18:32 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Fri, 13 Nov 2009 13:18:32 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122216.05680.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net> <200911122216.05680.mb@bu3sch.de>
Message-ID: <4AFD5CA8.5000800@gmail.com>

On 12/11/09 21:16, Michael Buesch wrote:
> Here you go:
> http://bu3sch.de/patches/wireless-testing/20091112-2213/patches/001-b43-rewrite-dma-ring-alloc.patch
> Please test this patch (also on 64bit-DMA devices that currently work).
> 
> It seriously lacks some comments, but I'll add them later if that works.
> 

I recompiled with this patch and enabled CONFIG_ACPI_PROCESSOR=y which 
produced this:-

Nov 13 12:14:08 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 12:14:08 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 12:14:08 doughnut kernel: b43: Dump of last 20 DMA descriptors
Nov 13 12:14:08 doughnut kernel: b43: Descr.  0: 0x0 0x930 0x35CD5020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  1: 0x0 0x930 0x35CDE020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  2: 0x60000000 0x74 0x36894C28 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  3: 0x80000000 0x6E 0x35CC9810 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x35CDB020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  5: 0x60000000 0x30 0x36AEC420 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  6: 0x80000000 0x6E 0x35740672 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x35CD9020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x35CDC020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr.  9: 0x0 0x930 0x35CDD020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 10: 0x0 0x930 0x35CDF020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x35CDA020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 12: 0x60000000 0x6F 0x36AEC828 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 13: 0x80000000 0x6E 0x35CC97A2 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x3712E020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x3712F020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 16: 0x60000000 0x6F 0x36896428 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 17: 0x80000000 0x6E 0x35CC9734 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x36106020 0x80000000
Nov 13 12:14:08 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36105020 0x80000000
Nov 13 12:14:09 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 12:14:14 doughnut kernel: b43-phy0: Controller restarted
Nov 13 12:14:14 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 12:14:14 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 12:14:14 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 12:14:20 doughnut kernel: b43-phy0: Controller restarted
Nov 13 12:14:20 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 12:14:20 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 12:14:20 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 12:14:26 doughnut kernel: b43-phy0: Controller restarted
Nov 13 12:14:26 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 12:14:26 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 12:14:26 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 12:14:31 doughnut kernel: b43-phy0: Controller restarted
Nov 13 12:14:32 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 12:14:32 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 12:14:32 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 12:14:37 doughnut kernel: b43-phy0: Controller restarted


Earlier I had a very similar error with a kernel compiled without 
Michael's patch but with Larry's patch. This one was compiled with
# CONFIG_ACPI_PROCESSOR is not set 
and ran for 15 mins before it produced this:- 

Nov 13 09:26:20 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 09:26:20 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 09:26:20 doughnut kernel: b43: Dump of last 20 DMA descriptors
Nov 13 09:26:20 doughnut kernel: b43: Descr.  0: 0x60000000 0x30 0x36A06020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  1: 0x80000000 0x6E 0x360721F2 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  2: 0x0 0x930 0x36666020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  3: 0x0 0x930 0x36662020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x36661020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  5: 0x0 0x930 0x36435020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  6: 0x10000000 0x930 0x3668F020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  7: 0x0 0x930 0x36296020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  8: 0x0 0x930 0x36293020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr.  9: 0x0 0x930 0x36295020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 10: 0x0 0x930 0x3668D020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 11: 0x0 0x930 0x36437020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 12: 0x0 0x930 0x36433020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 13: 0x0 0x930 0x36434020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x36294020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 15: 0x0 0x930 0x3642A020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 16: 0x0 0x930 0x3659C020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 17: 0x0 0x930 0x364A0020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 18: 0x0 0x930 0x373FB020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x3642F020 0x80000000
Nov 13 09:26:20 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 09:26:26 doughnut kernel: b43-phy0: Controller restarted
Nov 13 09:26:26 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 09:26:26 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 09:26:26 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 09:26:31 doughnut kernel: b43-phy0: Controller restarted
Nov 13 09:26:32 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 09:26:32 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 09:26:32 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 09:26:37 doughnut kernel: b43-phy0: Controller restarted

Since I applied Larry's patch I've not had any error's with a 
kernel compiled with
# CONFIG_ACPI is not set

Thanks

Andy


From b3nton at gmail.com  Fri Nov 13 14:57:33 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Fri, 13 Nov 2009 13:57:33 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911122216.05680.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <4AFC57D9.8070309@gmail.com>
	<4AFC6322.7000300@lwfinger.net> <200911122216.05680.mb@bu3sch.de>
Message-ID: <4AFD65CD.5070705@gmail.com>

On 13/11/09 13:18, Andrew Benton wrote:
> Since I applied Larry's patch I've not had any error's with a kernel
> compiled with
> # CONFIG_ACPI is not set

Wouldn't you know it, as soon as I sent that I got this:-

Nov 13 13:21:22 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000000, 0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 13:21:22 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 13:21:22 doughnut kernel: b43: Dump of last 20 DMA descriptors
Nov 13 13:21:22 doughnut kernel: b43: Descr.  0: 0x60000000 0x604 0x36BB607C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  1: 0x80000000 0x6E 0x3684AC42 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  2: 0x60000000 0x604 0x36ADD07C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  3: 0x80000000 0x6E 0x3684ABD4 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  4: 0x0 0x930 0x36AE8020 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  5: 0x60000000 0x604 0x3116907C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  6: 0x80000000 0x6E 0x3684AB66 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  7: 0x60000000 0x604 0x36BA307C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  8: 0x80000000 0x6E 0x3684AAF8 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr.  9: 0x0 0x930 0x36BA0020 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 10: 0x60000000 0x604 0x36AF507C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 11: 0x80000000 0x6E 0x3684AA8A 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 12: 0x60000000 0x604 0x3351807C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 13: 0x80000000 0x6E 0x3684AA1C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 14: 0x0 0x930 0x3351C020 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 15: 0x60000000 0x604 0x3351F07C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 16: 0x80000000 0x6E 0x3684A9AE 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 17: 0x60000000 0x604 0x3465007C 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 18: 0x80000000 0x6E 0x3684A940 0x80000000
Nov 13 13:21:22 doughnut kernel: b43: Descr. 19: 0x0 0x930 0x36B0C020 0x80000000
Nov 13 13:21:22 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 13:21:28 doughnut kernel: b43-phy0: Controller restarted
Nov 13 13:21:28 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 13:21:28 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 13:21:28 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 13:21:33 doughnut kernel: b43-phy0: Controller restarted
Nov 13 13:21:34 doughnut kernel: b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
Nov 13 13:21:34 doughnut kernel: b43-phy0: Controller RESET (DMA error) ...
Nov 13 13:21:34 doughnut kernel: b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Nov 13 13:21:39 doughnut kernel: b43-phy0: Controller restarted

Last time I had a problem with a kernel compiled with
# CONFIG_ACPI is not set
it produced the mm/slub.c bug

Andy


From oncaphillis at snafu.de  Fri Nov 13 16:33:29 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 13 Nov 2009 16:33:29 +0100
Subject: b43 kills my kernel
Message-ID: <4AFD7C49.3000408@snafu.de>

Hi,

I have a Acer One D250 which is equipped with a BCM4312 for
which on the homepage the support is marked as "in progress".
Whenever the kernel tries to insert b43.ko it freezes. If've moved up
to 2.6.32-rc7, but is always stays like this.

<snip source="lspci -vnn">
01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
802.11b/g [14e4:4315] (rev 01)
         Subsystem: Foxconn International, Inc. Device [105b:e01b]
         Flags: bus master, fast devsel, latency 0, IRQ 11
         Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
         Capabilities: [40] Power Management version 3
         Capabilities: [58] Vendor Specific Information <?>
         Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
         Capabilities: [d0] Express Endpoint, MSI 00
         Capabilities: [100] Advanced Error Reporting
         Capabilities: [13c] Virtual Channel <?>
         Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
         Capabilities: [16c] Power Budgeting <?>
</snip>

Could someone tell me what is the best way to debug this ? May
be there is a SVN from where  to pull the most up to date sources
so I could poke a little bit to find out where it hangs.

Thank you



From Larry.Finger at lwfinger.net  Fri Nov 13 17:05:30 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 10:05:30 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911131216.43704.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911130057.31365.mb@bu3sch.de>
	<4AFCA224.8060307@lwfinger.net> <200911131216.43704.mb@bu3sch.de>
Message-ID: <4AFD83CA.2050508@lwfinger.net>

On 11/13/2009 05:16 AM, Michael Buesch wrote:
> Ok, so my guess is that the DMA allocator simply returned high memory
> that was unusable to the device. My new code explicitly checks for that (and a
> few other things) and retries with GFP_DMA in case the address has illegal bits set.
> That's the same thing we do for the frame buffers, so I don't see anything wrong with it.
> 
> Yeah, the new code is big and scary, but I think it makes a whole lot more sense than
> what we have now. Especially if I add some comments and do more cleanups.

I agree that the new code makes a lot of sense. I'm also beginning to believe
that the problem lies outside b43, and that it is merely triggered by some
interaction with ACPI and/or the BIOS. From what I found in looking back through
the DMA error reports, most (if not all) people with the problem have netbook
computers with Intel ATOM processors.

I am considering posting on LKML and the ACPI mailing lists to see if we can get
any ideas from those experts. Please comment on the draft text below:

============================

A number of users are experiencing DMA descriptor or data errors using 64-bit
DMA with the Broadcom BCM4312 wireless device. After careful review and a
rewrite of the DMA code in the driver, we have not been able to fix the problem,
but we have determined the following:

(1) The problem is much more likely to occur on netbook systems. Several of the
developers have this card in regular notebook systems. None of us have the
problem, thus it may occur only on netbooks, but several brand/model
combinations are affected including Dell Inspiron 910 and Acer Aspire One A150.

(2) If CONFIG_ACPI_PROCESSOR is not set on affected systems, the error rate is
much lower.

(3) When a DMA descriptor error occurs, a dump of the descriptors does not
reveal any obvious problems.

I do not know enough about either the ACPI or DMA code to begin debugging in
either of those regions. Any suggestions on debugging strategies, or links to
similar problems would be appreciated.

============================

Larry



From Larry.Finger at lwfinger.net  Fri Nov 13 17:12:06 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 10:12:06 -0600
Subject: b43 kills my kernel
In-Reply-To: <4AFD7C49.3000408@snafu.de>
References: <4AFD7C49.3000408@snafu.de>
Message-ID: <4AFD8556.20701@lwfinger.net>

On 11/13/2009 09:33 AM, Oncaphillis wrote:
> Hi,
> 
> I have a Acer One D250 which is equipped with a BCM4312 for
> which on the homepage the support is marked as "in progress".
> Whenever the kernel tries to insert b43.ko it freezes. If've moved up
> to 2.6.32-rc7, but is always stays like this.
> 
> <snip source="lspci -vnn">
> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
> 802.11b/g [14e4:4315] (rev 01)
>          Subsystem: Foxconn International, Inc. Device [105b:e01b]
>          Flags: bus master, fast devsel, latency 0, IRQ 11
>          Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>          Capabilities: [40] Power Management version 3
>          Capabilities: [58] Vendor Specific Information <?>
>          Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
>          Capabilities: [d0] Express Endpoint, MSI 00
>          Capabilities: [100] Advanced Error Reporting
>          Capabilities: [13c] Virtual Channel <?>
>          Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
>          Capabilities: [16c] Power Budgeting <?>
> </snip>
> 
> Could someone tell me what is the best way to debug this ? May
> be there is a SVN from where  to pull the most up to date sources
> so I could poke a little bit to find out where it hangs.

I'm beginning to hate ATOM-based netbooks. The most up to date sources are in
wireless-testing - a git repository; however, there are few differences between
w-t and Linus's sources.

Does it boot with "acpi=off" added to the boot line?

Larry


From mb at bu3sch.de  Fri Nov 13 17:18:12 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 17:18:12 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFD83CA.2050508@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net>
Message-ID: <200911131718.15273.mb@bu3sch.de>

On Friday 13 November 2009 17:05:30 Larry Finger wrote:
> (3) When a DMA descriptor error occurs, a dump of the descriptors does not
> reveal any obvious problems.

I was going to write a patch that dumps the whole affected ring. But I think we don't
see something suspicious there, either. So I guess you can ask for advice before I
did that test.
So I'll do the testpatch now, but in the meantime you can ask for advice.

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Fri Nov 13 17:41:21 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 13 Nov 2009 17:41:21 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFD8556.20701@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de> <4AFD8556.20701@lwfinger.net>
Message-ID: <4AFD8C31.1000402@snafu.de>

On 11/13/2009 05:12 PM, Larry Finger wrote:
> On 11/13/2009 09:33 AM, Oncaphillis wrote:
>> Hi,
>>
>> I have a Acer One D250 which is equipped with a BCM4312 for
>> which on the homepage the support is marked as "in progress".
>> Whenever the kernel tries to insert b43.ko it freezes. If've moved up
>> to 2.6.32-rc7, but is always stays like this.
>>
>> <snip source="lspci -vnn">
>> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312
>> 802.11b/g [14e4:4315] (rev 01)
>>           Subsystem: Foxconn International, Inc. Device [105b:e01b]
>>           Flags: bus master, fast devsel, latency 0, IRQ 11
>>           Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>           Capabilities: [40] Power Management version 3
>>           Capabilities: [58] Vendor Specific Information<?>
>>           Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
>>           Capabilities: [d0] Express Endpoint, MSI 00
>>           Capabilities: [100] Advanced Error Reporting
>>           Capabilities: [13c] Virtual Channel<?>
>>           Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
>>           Capabilities: [16c] Power Budgeting<?>
>> </snip>
>>
>> Could someone tell me what is the best way to debug this ? May
>> be there is a SVN from where  to pull the most up to date sources
>> so I could poke a little bit to find out where it hangs.
>
> I'm beginning to hate ATOM-based netbooks. The most up to date sources are in
> wireless-testing - a git repository; however, there are few differences between
> w-t and Linus's sources.
>
> Does it boot with "acpi=off" added to the boot line?

  Nope

>
> Larry



From mb at bu3sch.de  Fri Nov 13 17:52:44 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 17:52:44 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFD8C31.1000402@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFD8556.20701@lwfinger.net>
	<4AFD8C31.1000402@snafu.de>
Message-ID: <200911131752.46128.mb@bu3sch.de>

On Friday 13 November 2009 17:41:21 Oncaphillis wrote:
> On 11/13/2009 05:12 PM, Larry Finger wrote:
> > On 11/13/2009 09:33 AM, Oncaphillis wrote:
> >> Hi,
> >>
> >> I have a Acer One D250 which is equipped with a BCM4312 for
> >> which on the homepage the support is marked as "in progress".
> >> Whenever the kernel tries to insert b43.ko it freezes. If've moved up
> >> to 2.6.32-rc7, but is always stays like this.
> >>
> >> <snip source="lspci -vnn">
> >> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312
> >> 802.11b/g [14e4:4315] (rev 01)
> >>           Subsystem: Foxconn International, Inc. Device [105b:e01b]
> >>           Flags: bus master, fast devsel, latency 0, IRQ 11
> >>           Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
> >>           Capabilities: [40] Power Management version 3
> >>           Capabilities: [58] Vendor Specific Information<?>
> >>           Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
> >>           Capabilities: [d0] Express Endpoint, MSI 00
> >>           Capabilities: [100] Advanced Error Reporting
> >>           Capabilities: [13c] Virtual Channel<?>
> >>           Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
> >>           Capabilities: [16c] Power Budgeting<?>
> >> </snip>
> >>
> >> Could someone tell me what is the best way to debug this ? May
> >> be there is a SVN from where  to pull the most up to date sources
> >> so I could poke a little bit to find out where it hangs.
> >
> > I'm beginning to hate ATOM-based netbooks. The most up to date sources are in
> > wireless-testing - a git repository; however, there are few differences between
> > w-t and Linus's sources.
> >
> > Does it boot with "acpi=off" added to the boot line?
> 
>   Nope

Does it really freeze, or are you in X and just don't see the Oops message?
If it does freeze, _where_ does it freeze? What are the last kernel messages?
Got a camera to take a picture?

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Fri Nov 13 17:56:49 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Fri, 13 Nov 2009 11:56:49 -0500
Subject: b43 kills my kernel
In-Reply-To: <4AFD8C31.1000402@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFD8556.20701@lwfinger.net>
	<4AFD8C31.1000402@snafu.de>
Message-ID: <4AFD8FD1.7030203@polymtl.ca>


Oncaphillis wrote:
> On 11/13/2009 05:12 PM, Larry Finger wrote:
>> On 11/13/2009 09:33 AM, Oncaphillis wrote:
>>> Hi,
>>>
>>> I have a Acer One D250 which is equipped with a BCM4312 for
>>> which on the homepage the support is marked as "in progress".
>>> Whenever the kernel tries to insert b43.ko it freezes. If've moved up
>>> to 2.6.32-rc7, but is always stays like this.
>>>
>>> <snip source="lspci -vnn">
>>> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312
>>> 802.11b/g [14e4:4315] (rev 01)
>>>           Subsystem: Foxconn International, Inc. Device [105b:e01b]
>>>           Flags: bus master, fast devsel, latency 0, IRQ 11
>>>           Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>>           Capabilities: [40] Power Management version 3
>>>           Capabilities: [58] Vendor Specific Information<?>
>>>           Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
>>>           Capabilities: [d0] Express Endpoint, MSI 00
>>>           Capabilities: [100] Advanced Error Reporting
>>>           Capabilities: [13c] Virtual Channel<?>
>>>           Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
>>>           Capabilities: [16c] Power Budgeting<?>
>>> </snip>
>>>
>>> Could someone tell me what is the best way to debug this ? May
>>> be there is a SVN from where  to pull the most up to date sources
>>> so I could poke a little bit to find out where it hangs.
>> I'm beginning to hate ATOM-based netbooks. The most up to date sources are in
>> wireless-testing - a git repository; however, there are few differences between
>> w-t and Linus's sources.
>>
>> Does it boot with "acpi=off" added to the boot line?
> 
>   Nope
> 
>> Larry
Just a hints, my own 4312 card is unusable if I don't force PIO... still
my kernel won't crash thought.

You might want to recompile to set B43_FORCE_PIO (Force usage of PIO
instead of DMA) to yes. It is under CONFIG_B43_DEBUG (Broadcom 43xx
debugging).

It won't fix anything, it will be slow as hell, but you might be able to
boot, I guess.

- William

> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev


From netrolller.3d at gmail.com  Fri Nov 13 17:59:20 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Fri, 13 Nov 2009 17:59:20 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFD83CA.2050508@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911130057.31365.mb@bu3sch.de> 
	<4AFCA224.8060307@lwfinger.net> <200911131216.43704.mb@bu3sch.de> 
	<4AFD83CA.2050508@lwfinger.net>
Message-ID: <69e28c910911130859n17f2c346nc7a8c603106a391d@mail.gmail.com>

On Fri, Nov 13, 2009 at 5:05 PM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 11/13/2009 05:16 AM, Michael Buesch wrote:
>> Ok, so my guess is that the DMA allocator simply returned high memory
>> that was unusable to the device. My new code explicitly checks for that (and a
>> few other things) and retries with GFP_DMA in case the address has illegal bits set.
>> That's the same thing we do for the frame buffers, so I don't see anything wrong with it.
>>
>> Yeah, the new code is big and scary, but I think it makes a whole lot more sense than
>> what we have now. Especially if I add some comments and do more cleanups.
>
> I agree that the new code makes a lot of sense. I'm also beginning to believe
> that the problem lies outside b43, and that it is merely triggered by some
> interaction with ACPI and/or the BIOS. From what I found in looking back through
> the DMA error reports, most (if not all) people with the problem have netbook
> computers with Intel ATOM processors.
>
> I am considering posting on LKML and the ACPI mailing lists to see if we can get
> any ideas from those experts. Please comment on the draft text below:
>
> ============================
>
> A number of users are experiencing DMA descriptor or data errors using 64-bit
> DMA with the Broadcom BCM4312 wireless device. After careful review and a
> rewrite of the DMA code in the driver, we have not been able to fix the problem,
> but we have determined the following:
>
> (1) The problem is much more likely to occur on netbook systems. Several of the
> developers have this card in regular notebook systems. None of us have the
> problem, thus it may occur only on netbooks, but several brand/model
> combinations are affected including Dell Inspiron 910 and Acer Aspire One A150.

Linus has also reported this issue on a Core 2 ULV. I suspect that the
key part is deep-sleep support in the CPU.
Also, PhoenixBIOS seems to play part in the problem.

>
> (2) If CONFIG_ACPI_PROCESSOR is not set on affected systems, the error rate is
> much lower.
>
> (3) When a DMA descriptor error occurs, a dump of the descriptors does not
> reveal any obvious problems.
>
> I do not know enough about either the ACPI or DMA code to begin debugging in
> either of those regions. Any suggestions on debugging strategies, or links to
> similar problems would be appreciated.
>
> ============================
>
> Larry
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Fri Nov 13 18:21:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 11:21:18 -0600
Subject: 64-bit DMA problems with BCM4312 using b43
Message-ID: <4AFD958E.1000303@lwfinger.net>

A number of users are experiencing DMA descriptor or data errors using 64-bit
DMA with the Broadcom BCM4312 wireless device. After careful review and a
rewrite of the DMA code in the driver, we have not been able to fix the problem,
but we have determined the following:

(1) The problem is much more likely to occur on netbook systems. Several of the
developers have this card in regular notebook systems. None of us have the
problem. Several brand/model combinations are affected including Dell Inspiron
910 and Acer Aspire One A150. Linus has also reported the same symptoms with a
Core 2 ULV CPU. One of our devs questions if the deep-sleep support in the CPU
is a problem. It is also believed that affected systems have a Phoenix BIOS.

(2) If CONFIG_ACPI_PROCESSOR is not set on affected systems, the error rate is
much lower.

(3) When a DMA descriptor error occurs, a dump of the descriptors does not
reveal any obvious problems.

(4) Once the problem occurs, resetting of the device does not restore proper
operations. It is not a transient error.

Support for this device was not enabled in mainline until 2.6.32-rc2.

I do not know enough about either the ACPI or DMA code to begin debugging in
either of those regions. Any suggestions on debugging strategies, or links to
similar problems would be appreciated.

Thanks,

Larry



From mb at bu3sch.de  Fri Nov 13 18:36:24 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 18:36:24 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFD83CA.2050508@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net>
Message-ID: <200911131836.26857.mb@bu3sch.de>

Please test the following patch. It changes more stuff related to the
descriptor ring handling (remove the old patch first before applying this one).
http://bu3sch.de/patches/wireless-testing/20091113-1834/patches/001-b43-rewrite-dma-ring-alloc.patch

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Fri Nov 13 18:46:22 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 13 Nov 2009 18:46:22 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFD8FD1.7030203@polymtl.ca>
References: <4AFD7C49.3000408@snafu.de>
	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>
	<4AFD8FD1.7030203@polymtl.ca>
Message-ID: <4AFD9B6E.6030308@snafu.de>

On 11/13/2009 05:56 PM, William Bourque wrote:
>
> Oncaphillis wrote:
>> On 11/13/2009 05:12 PM, Larry Finger wrote:
>>> On 11/13/2009 09:33 AM, Oncaphillis wrote:
>>>> Hi,
>>>>
>>>> I have a Acer One D250 which is equipped with a BCM4312 for
>>>> which on the homepage the support is marked as "in progress".
>>>> Whenever the kernel tries to insert b43.ko it freezes. If've moved up
>>>> to 2.6.32-rc7, but is always stays like this.
>>>>
>>>> <snip source="lspci -vnn">
>>>> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312
>>>> 802.11b/g [14e4:4315] (rev 01)
>>>>            Subsystem: Foxconn International, Inc. Device [105b:e01b]
>>>>            Flags: bus master, fast devsel, latency 0, IRQ 11
>>>>            Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>>>            Capabilities: [40] Power Management version 3
>>>>            Capabilities: [58] Vendor Specific Information<?>
>>>>            Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
>>>>            Capabilities: [d0] Express Endpoint, MSI 00
>>>>            Capabilities: [100] Advanced Error Reporting
>>>>            Capabilities: [13c] Virtual Channel<?>
>>>>            Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
>>>>            Capabilities: [16c] Power Budgeting<?>
>>>> </snip>
>>>>
>>>> Could someone tell me what is the best way to debug this ? May
>>>> be there is a SVN from where  to pull the most up to date sources
>>>> so I could poke a little bit to find out where it hangs.
>>> I'm beginning to hate ATOM-based netbooks. The most up to date sources are in
>>> wireless-testing - a git repository; however, there are few differences between
>>> w-t and Linus's sources.
>>>
>>> Does it boot with "acpi=off" added to the boot line?
>>
>>    Nope
>>
>>> Larry
> Just a hints, my own 4312 card is unusable if I don't force PIO... still
> my kernel won't crash thought.
>
> You might want to recompile to set B43_FORCE_PIO (Force usage of PIO
> instead of DMA) to yes. It is under CONFIG_B43_DEBUG (Broadcom 43xx
> debugging).
>
> It won't fix anything, it will be slow as hell, but you might be able to
> boot, I guess.

  Thanks for the tip. But it still hangs
>
> - William
>


From b3nton at gmail.com  Fri Nov 13 18:57:52 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Fri, 13 Nov 2009 17:57:52 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911131836.26857.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
Message-ID: <4AFD9E20.3060501@gmail.com>

On 13/11/09 17:36, Michael Buesch wrote:
> Please test the following patch. It changes more stuff related to the
> descriptor ring handling (remove the old patch first before applying this one).
> http://bu3sch.de/patches/wireless-testing/20091113-1834/patches/001-b43-rewrite-dma-ring-alloc.patch
>

Should I still apply Larry's patch as well?

Andy


From mb at bu3sch.de  Fri Nov 13 19:01:36 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 19:01:36 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFD9E20.3060501@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com>
Message-ID: <200911131901.38692.mb@bu3sch.de>

On Friday 13 November 2009 18:57:52 Andrew Benton wrote:
> On 13/11/09 17:36, Michael Buesch wrote:
> > Please test the following patch. It changes more stuff related to the
> > descriptor ring handling (remove the old patch first before applying this one).
> > http://bu3sch.de/patches/wireless-testing/20091113-1834/patches/001-b43-rewrite-dma-ring-alloc.patch
> >
> 
> Should I still apply Larry's patch as well?

Well, it doesn't really matter. Leave it out, if it doesn't apply cleanly anymore.

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Fri Nov 13 20:10:53 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Fri, 13 Nov 2009 14:10:53 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911131836.26857.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
Message-ID: <4AFDAF3D.8070504@polymtl.ca>


Michael Buesch wrote:
> Please test the following patch. It changes more stuff related to the
> descriptor ring handling (remove the old patch first before applying this one).
> http://bu3sch.de/patches/wireless-testing/20091113-1834/patches/001-b43-rewrite-dma-ring-alloc.patch
> 

Hi

Here is the result. I provide two outputs because I tried few times ans 
it gave me somehow different results, especially about DMA descriptor.

I hope it helps.

- William


#1 :
[    7.781844] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[    7.880289] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
[    7.880314] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, 
Revision 2
[    7.958618] phy0: Selected rate control algorithm 'minstrel'
[    7.958980] Registered led device: b43-phy0::tx
[    7.959029] Registered led device: b43-phy0::rx
[    7.959085] Registered led device: b43-phy0::radio
[    7.959430] Broadcom 43xx driver loaded [ Features: PLS, Firmware-ID: 
FW13 ]
...skipped
[   99.380312] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[   99.395617] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[   99.407106] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[   99.552915] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[   99.555371] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  113.312878] b43-phy0 debug: Chip initialized
[  113.313311] b43-phy0 debug: 64-bit DMA initialized
[  113.313440] b43-phy0 debug: QoS enabled
[  113.353549] b43-phy0 debug: Wireless interface started
[  113.370279] b43-phy0 debug: Adding Interface type 2
[  113.393835] ADDRCONF(NETDEV_UP): wlan0: link is not ready
[  120.430217] b43-phy0 ERROR: Fatal DMA error: 0x00000800, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  120.430245] b43-phy0: Controller RESET (DMA error) ...
[  120.430276] b43: Dump of last 20 DMA descriptors
[  120.430290] b43: Descr.  0: 0x0 0x930 0x2587F020 0x80000000
[  120.430300] b43: Descr.  1: 0x0 0x930 0x356F3020 0x80000000
[  120.430310] b43: Descr.  2: 0x0 0x930 0x258BB020 0x80000000
[  120.430319] b43: Descr.  3: 0x0 0x930 0x368C1020 0x80000000
[  120.430329] b43: Descr.  4: 0x0 0x930 0x35744020 0x80000000
[  120.430338] b43: Descr.  5: 0x0 0x930 0x258B9020 0x80000000
[  120.430348] b43: Descr.  6: 0x0 0x930 0x35CAA020 0x80000000
[  120.430358] b43: Descr.  7: 0x0 0x930 0x35771020 0x80000000
[  120.430367] b43: Descr.  8: 0x0 0x930 0x259B8020 0x80000000
[  120.430377] b43: Descr.  9: 0x0 0x930 0x259A5020 0x80000000
[  120.430387] b43: Descr. 10: 0x10000000 0x930 0x36980020 0x80000000
[  120.430397] b43: Descr. 11: 0x0 0x930 0x25967020 0x80000000
[  120.430407] b43: Descr. 12: 0x0 0x930 0x25947020 0x80000000
[  120.430416] b43: Descr. 13: 0x0 0x930 0x35489020 0x80000000
[  120.430426] b43: Descr. 14: 0x0 0x930 0x258B3020 0x80000000
[  120.430436] b43: Descr. 15: 0x0 0x930 0x35DB4020 0x80000000
[  120.430445] b43: Descr. 16: 0x0 0x930 0x369CE020 0x80000000
[  120.430455] b43: Descr. 17: 0x0 0x930 0x3788C020 0x80000000
[  120.430465] b43: Descr. 18: 0x0 0x930 0x25966020 0x80000000
[  120.430474] b43: Descr. 19: 0x0 0x930 0x3554E020 0x80000000
[  120.430681] b43-phy0 debug: Wireless interface stopped
[  120.430698] b43-phy0 debug: DMA-64 rx_ring: Used slots 1/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  120.430804] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  120.442760] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  120.462595] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  120.482563] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, 
Failed frames 0/11 = 0.0%, Average tries 1.00
[  120.504203] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  120.762641] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  120.765121] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  134.520328] b43-phy0 debug: Chip initialized
[  134.520668] b43-phy0 debug: 64-bit DMA initialized
[  134.520799] b43-phy0 debug: QoS enabled
[  134.563410] b43-phy0 debug: Wireless interface started
[  134.563424] b43-phy0: Controller restarted
[  134.583034] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000



#2 :
[    7.834359] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[    7.930184] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
[    7.930211] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, 
Revision 2
[    8.016791] phy0: Selected rate control algorithm 'minstrel'
[    8.017151] Registered led device: b43-phy0::tx
[    8.017198] Registered led device: b43-phy0::rx
[    8.017248] Registered led device: b43-phy0::radio
[    8.017611] Broadcom 43xx driver loaded [ Features: PLS, Firmware-ID: 
FW13 ]
... skipped
[  133.030317] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[  133.046222] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[  133.057351] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[  133.210151] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  133.212556] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  146.970364] b43-phy0 debug: Chip initialized
[  146.970739] b43-phy0 debug: 64-bit DMA initialized
[  146.970870] b43-phy0 debug: QoS enabled
[  147.013587] b43-phy0 debug: Wireless interface started
[  147.032945] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  147.032968] b43-phy0: Controller RESET (DMA error) ...
[  147.032993] b43: Dump of last 20 DMA descriptors
[  147.033003] b43: Descr.  0: 0x10000000 0x930 0x259A1020 0x80000000
[  147.033013] b43: Descr.  1: 0x0 0x930 0x259A0020 0x80000000
[  147.033023] b43: Descr.  2: 0x0 0x930 0x259AF020 0x80000000
[  147.033033] b43: Descr.  3: 0x0 0x930 0x259AE020 0x80000000
[  147.033042] b43: Descr.  4: 0x0 0x930 0x259AD020 0x80000000
[  147.033052] b43: Descr.  5: 0x0 0x930 0x259AC020 0x80000000
[  147.033061] b43: Descr.  6: 0x0 0x930 0x25993020 0x80000000
[  147.033071] b43: Descr.  7: 0x0 0x930 0x25992020 0x80000000
[  147.033080] b43: Descr.  8: 0x0 0x930 0x25991020 0x80000000
[  147.033090] b43: Descr.  9: 0x0 0x930 0x25990020 0x80000000
[  147.033100] b43: Descr. 10: 0x0 0x930 0x3615F020 0x80000000
[  147.033109] b43: Descr. 11: 0x0 0x930 0x3615E020 0x80000000
[  147.033119] b43: Descr. 12: 0x0 0x930 0x3615D020 0x80000000
[  147.033128] b43: Descr. 13: 0x0 0x930 0x3615C020 0x80000000
[  147.033138] b43: Descr. 14: 0x0 0x930 0x36A2F020 0x80000000
[  147.033147] b43: Descr. 15: 0x0 0x930 0x36A2E020 0x80000000
[  147.033157] b43: Descr. 16: 0x0 0x930 0x36A2D020 0x80000000
[  147.033166] b43: Descr. 17: 0x0 0x930 0x36A2C020 0x80000000
[  147.033176] b43: Descr. 18: 0x0 0x930 0x36085020 0x80000000
[  147.033186] b43: Descr. 19: 0x0 0x930 0x36084020 0x80000000
[  147.033202] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  147.033223] b43-phy0: Controller RESET (DMA error) ...
[  147.033256] b43-phy0 debug: Adding Interface type 2
[  147.053038] b43-phy0 debug: Wireless interface stopped
[  147.053066] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  147.053134] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  147.070245] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  147.090102] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  147.110250] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  147.130222] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  147.390296] b43-phy0: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  147.392763] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  161.150373] b43-phy0 debug: Chip initialized
[  161.150707] b43-phy0 debug: 64-bit DMA initialized
[  161.150838] b43-phy0 debug: QoS enabled
[  161.193542] b43-phy0 debug: Wireless interface started
[  161.193692] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  161.193704] b43-phy0: Controller RESET (DMA error) ...


From mb at bu3sch.de  Fri Nov 13 20:11:21 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 20:11:21 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFD9B6E.6030308@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFD8FD1.7030203@polymtl.ca>
	<4AFD9B6E.6030308@snafu.de>
Message-ID: <200911132011.23582.mb@bu3sch.de>

On Friday 13 November 2009 18:46:22 Oncaphillis wrote:
>   Thanks for the tip. But it still hangs

So, any chance to tell us what "hangs" means? See my other mail.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Nov 13 20:20:06 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 13:20:06 -0600
Subject: b43 kills my kernel
In-Reply-To: <4AFD9B6E.6030308@snafu.de>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>
	<4AFD9B6E.6030308@snafu.de>
Message-ID: <4AFDB166.6000700@lwfinger.net>

On 11/13/2009 11:46 AM, Oncaphillis wrote:

>   Thanks for the tip. But it still hangs

We still need to know where it hangs. If you boot to console mode (type a 3 on
the option line in GRUB), does it boot? If it does not, what is the last line
shown on the console? If your distro shows a splash screen while booting, get
rid of it by typing an ESC after booting starts, or eliminate the
"splash=silent" option on the boot line.

If the previous boot works, log into your usual account. That should still work.
Next you should type the command startx and immediately press the keys
CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
display should shift to the log console. When the computer freezes, report what
you see on the screen. It will not scroll, nor can you save it. Write it down by
hand or take a picture.

Report what happens. If some of these steps don't work on your computer, please
tell what distro you are using.

Larry



From Larry.Finger at lwfinger.net  Fri Nov 13 20:27:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 13:27:23 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <200911131836.26857.mb@bu3sch.de>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
Message-ID: <4AFDB31B.70403@lwfinger.net>

On 11/13/2009 11:36 AM, Michael Buesch wrote:
> Please test the following patch. It changes more stuff related to the
> descriptor ring handling (remove the old patch first before applying this one).
> http://bu3sch.de/patches/wireless-testing/20091113-1834/patches/001-b43-rewrite-dma-ring-alloc.patch

This one works fine on my 4311. I'll change to the 4315 device later.

Larry


From mjg59 at srcf.ucam.org  Fri Nov 13 21:11:12 2009
From: mjg59 at srcf.ucam.org (Matthew Garrett)
Date: Fri, 13 Nov 2009 20:11:12 +0000
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <4AFD958E.1000303@lwfinger.net>
References: <4AFD958E.1000303@lwfinger.net>
Message-ID: <20091113201112.GA5540@srcf.ucam.org>

On Fri, Nov 13, 2009 at 11:21:18AM -0600, Larry Finger wrote:

> I do not know enough about either the ACPI or DMA code to begin debugging in
> either of those regions. Any suggestions on debugging strategies, or links to
> similar problems would be appreciated.

Could the hardware be highly sensitive to DMA latencies? Take a look at 
the pm_qos code in ipw2100.

-- 
Matthew Garrett | mjg59 at srcf.ucam.org


From oncaphillis at snafu.de  Fri Nov 13 21:36:31 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 13 Nov 2009 21:36:31 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFDB166.6000700@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>
	<4AFD9B6E.6030308@snafu.de> <4AFDB166.6000700@lwfinger.net>
Message-ID: <4AFDC34F.8010909@snafu.de>

On 11/13/2009 08:20 PM, Larry Finger wrote:
 > On 11/13/2009 11:46 AM, Oncaphillis wrote:
 >
 >>    Thanks for the tip. But it still hangs
 >
 > We still need to know where it hangs. If you boot to console mode 
(type a 3 on
 > the option line in GRUB), does it boot? If it does not, what is the 
last line
 > shown on the console? If your distro shows a splash screen while 
booting, get
 > rid of it by typing an ESC after booting starts, or eliminate the
 > "splash=silent" option on the boot line.
 >
 > If the previous boot works, log into your usual account. That should 
still work.
 > Next you should type the command startx and immediately press the keys
 > CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the 
F10 key. The
 > display should shift to the log console. When the computer freezes, 
report what
 > you see on the screen. It will not scroll, nor can you save it. Write 
it down by
 > hand or take a picture.

  Sorry for not giving the details. I'm using Fedora 11 with 2.6.32-rc7 
kernel. I've turned of the splash screen and boot into runlevel 3. The 
last line I see is that the distro tries to start up udev -- No oops or 
such thing.

I also did the following -- (1) removed the whole /lib/modules/XXX/ tree
and booted into the kernel. (2) Made "make modules_install;depmod -a".
If I do a "modprobe b43" it still freezes without any further message.
Surprisingly if I only remove b43.ko from the module tree it still hangs
on reboot. Looks like a "inter module" problem to me. The only other 
modules I hold are arl1.ko, atl1e.ko,atl1c.ko mii.ko and 
scsi_wait_scan.ko but the only one being loaded seems to be atl1c.ko


I actually do not have any firmware installed yet and I had a look at
the code ( also I'm not a kernel hacker) and I see that it should bail
out properly if it fails to find (and|or) initialize the firmware. So it
seems to fail quite early.

There used to be a kernel option that makes it extra verbose. What was 
that ?

Thanks

Sebastian

 > Report what happens. If some of these steps don't work on your 
computer, please
 > tell what distro you are using.
 >
 > Larry



From mb at bu3sch.de  Fri Nov 13 21:43:11 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 21:43:11 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFDC34F.8010909@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFDB166.6000700@lwfinger.net>
	<4AFDC34F.8010909@snafu.de>
Message-ID: <200911132143.13685.mb@bu3sch.de>

On Friday 13 November 2009 21:36:31 Oncaphillis wrote:
> On 11/13/2009 08:20 PM, Larry Finger wrote:
>  > On 11/13/2009 11:46 AM, Oncaphillis wrote:
>  >
>  >>    Thanks for the tip. But it still hangs
>  >
>  > We still need to know where it hangs. If you boot to console mode 
> (type a 3 on
>  > the option line in GRUB), does it boot? If it does not, what is the 
> last line
>  > shown on the console? If your distro shows a splash screen while 
> booting, get
>  > rid of it by typing an ESC after booting starts, or eliminate the
>  > "splash=silent" option on the boot line.
>  >
>  > If the previous boot works, log into your usual account. That should 
> still work.
>  > Next you should type the command startx and immediately press the keys
>  > CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the 
> F10 key. The
>  > display should shift to the log console. When the computer freezes, 
> report what
>  > you see on the screen. It will not scroll, nor can you save it. Write 
> it down by
>  > hand or take a picture.
> 
>   Sorry for not giving the details. I'm using Fedora 11 with 2.6.32-rc7 
> kernel. I've turned of the splash screen and boot into runlevel 3. The 
> last line I see is that the distro tries to start up udev -- No oops or 
> such thing.
> 
> I also did the following -- (1) removed the whole /lib/modules/XXX/ tree
> and booted into the kernel. (2) Made "make modules_install;depmod -a".
> If I do a "modprobe b43" it still freezes without any further message.
> Surprisingly if I only remove b43.ko from the module tree it still hangs
> on reboot. Looks like a "inter module" problem to me. The only other 

Looks like not related to b43, to me.

You could try to enable most of the kernel debugging options in the "kernel hacking" menu.
Memory corruption, lock debugging and softlockup detection options are the most interesting.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Nov 13 21:44:21 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Nov 2009 21:44:21 +0100
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <20091113201112.GA5540@srcf.ucam.org>
References: <4AFD958E.1000303@lwfinger.net>
	<20091113201112.GA5540@srcf.ucam.org>
Message-ID: <200911132144.24110.mb@bu3sch.de>

On Friday 13 November 2009 21:11:12 Matthew Garrett wrote:
> On Fri, Nov 13, 2009 at 11:21:18AM -0600, Larry Finger wrote:
> 
> > I do not know enough about either the ACPI or DMA code to begin debugging in
> > either of those regions. Any suggestions on debugging strategies, or links to
> > similar problems would be appreciated.
> 
> Could the hardware be highly sensitive to DMA latencies? Take a look at 
> the pm_qos code in ipw2100.

This makes perfect sense, yes. The DMA engine has so many quirks, I wouldn't be
surprised if it couldn't handle pm properly.

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Fri Nov 13 22:02:35 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 13 Nov 2009 22:02:35 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911132143.13685.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4AFDB166.6000700@lwfinger.net>
	<4AFDC34F.8010909@snafu.de> <200911132143.13685.mb@bu3sch.de>
Message-ID: <4AFDC96B.8040905@snafu.de>

On 11/13/2009 09:43 PM, Michael Buesch wrote:
> On Friday 13 November 2009 21:36:31 Oncaphillis wrote:
>> On 11/13/2009 08:20 PM, Larry Finger wrote:
>>   >  On 11/13/2009 11:46 AM, Oncaphillis wrote:
>>   >
>>   >>     Thanks for the tip. But it still hangs
>>   >
>>   >  We still need to know where it hangs. If you boot to console mode
>> (type a 3 on
>>   >  the option line in GRUB), does it boot? If it does not, what is the
>> last line
>>   >  shown on the console? If your distro shows a splash screen while
>> booting, get
>>   >  rid of it by typing an ESC after booting starts, or eliminate the
>>   >  "splash=silent" option on the boot line.
>>   >
>>   >  If the previous boot works, log into your usual account. That should
>> still work.
>>   >  Next you should type the command startx and immediately press the keys
>>   >  CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the
>> F10 key. The
>>   >  display should shift to the log console. When the computer freezes,
>> report what
>>   >  you see on the screen. It will not scroll, nor can you save it. Write
>> it down by
>>   >  hand or take a picture.
>>
>>    Sorry for not giving the details. I'm using Fedora 11 with 2.6.32-rc7
>> kernel. I've turned of the splash screen and boot into runlevel 3. The
>> last line I see is that the distro tries to start up udev -- No oops or
>> such thing.
>>
>> I also did the following -- (1) removed the whole /lib/modules/XXX/ tree
>> and booted into the kernel. (2) Made "make modules_install;depmod -a".
>> If I do a "modprobe b43" it still freezes without any further message.
>> Surprisingly if I only remove b43.ko from the module tree it still hangs
>> on reboot. Looks like a "inter module" problem to me. The only other
>
> Looks like not related to b43, to me.

   Yes -- but if I leave the kernel config like it is and
only leave out b43 it boots fine.

>
> You could try to enable most of the kernel debugging options in the "kernel hacking" menu.
> Memory corruption, lock debugging and softlockup detection options are the most interesting.
>

  I'll give that a try.



From Larry.Finger at lwfinger.net  Fri Nov 13 22:05:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 15:05:18 -0600
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <200911132144.24110.mb@bu3sch.de>
References: <4AFD958E.1000303@lwfinger.net>
	<20091113201112.GA5540@srcf.ucam.org>
	<200911132144.24110.mb@bu3sch.de>
Message-ID: <4AFDCA0E.4080007@lwfinger.net>

On 11/13/2009 02:44 PM, Michael Buesch wrote:
> On Friday 13 November 2009 21:11:12 Matthew Garrett wrote:
>> On Fri, Nov 13, 2009 at 11:21:18AM -0600, Larry Finger wrote:
>>
>>> I do not know enough about either the ACPI or DMA code to begin debugging in
>>> either of those regions. Any suggestions on debugging strategies, or links to
>>> similar problems would be appreciated.
>>
>> Could the hardware be highly sensitive to DMA latencies? Take a look at 
>> the pm_qos code in ipw2100.
> 
> This makes perfect sense, yes. The DMA engine has so many quirks, I wouldn't be
> surprised if it couldn't handle pm properly.

I'm in the process of creating a patch to set the latency to 200 usec. The
default is 2000. On my fast prosessors, it should not be anything nearly that
slow. If we determine this to be the problem, then we can try tuning.

Larry


From Larry.Finger at lwfinger.net  Fri Nov 13 22:08:01 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 15:08:01 -0600
Subject: b43 kills my kernel
In-Reply-To: <4AFDC96B.8040905@snafu.de>
References: <4AFD7C49.3000408@snafu.de>
	<4AFDB166.6000700@lwfinger.net>	<4AFDC34F.8010909@snafu.de>
	<200911132143.13685.mb@bu3sch.de> <4AFDC96B.8040905@snafu.de>
Message-ID: <4AFDCAB1.7080204@lwfinger.net>

On 11/13/2009 03:02 PM, Oncaphillis wrote:
> On 11/13/2009 09:43 PM, Michael Buesch wrote:
>> On Friday 13 November 2009 21:36:31 Oncaphillis wrote:
>>> On 11/13/2009 08:20 PM, Larry Finger wrote:
>>>   >  On 11/13/2009 11:46 AM, Oncaphillis wrote:
>>>   >
>>>   >>     Thanks for the tip. But it still hangs
>>>   >
>>>   >  We still need to know where it hangs. If you boot to console mode
>>> (type a 3 on
>>>   >  the option line in GRUB), does it boot? If it does not, what is the
>>> last line
>>>   >  shown on the console? If your distro shows a splash screen while
>>> booting, get
>>>   >  rid of it by typing an ESC after booting starts, or eliminate the
>>>   >  "splash=silent" option on the boot line.
>>>   >
>>>   >  If the previous boot works, log into your usual account. That should
>>> still work.
>>>   >  Next you should type the command startx and immediately press the keys
>>>   >  CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the
>>> F10 key. The
>>>   >  display should shift to the log console. When the computer freezes,
>>> report what
>>>   >  you see on the screen. It will not scroll, nor can you save it. Write
>>> it down by
>>>   >  hand or take a picture.
>>>
>>>    Sorry for not giving the details. I'm using Fedora 11 with 2.6.32-rc7
>>> kernel. I've turned of the splash screen and boot into runlevel 3. The
>>> last line I see is that the distro tries to start up udev -- No oops or
>>> such thing.
>>>
>>> I also did the following -- (1) removed the whole /lib/modules/XXX/ tree
>>> and booted into the kernel. (2) Made "make modules_install;depmod -a".
>>> If I do a "modprobe b43" it still freezes without any further message.
>>> Surprisingly if I only remove b43.ko from the module tree it still hangs
>>> on reboot. Looks like a "inter module" problem to me. The only other
>>
>> Looks like not related to b43, to me.
> 
>    Yes -- but if I leave the kernel config like it is and
> only leave out b43 it boots fine.
> 
>>
>> You could try to enable most of the kernel debugging options in the "kernel hacking" menu.
>> Memory corruption, lock debugging and softlockup detection options are the most interesting.
>>
> 
>   I'll give that a try.

PLease look at the files in /etc/udev/rules.d. Any of those involved? Certainly
the "persistent network" rules will be involved. I'm not sure of the name. On my
system, it is 70-persistent-network.rules.

Larry


From mjg59 at srcf.ucam.org  Fri Nov 13 22:13:06 2009
From: mjg59 at srcf.ucam.org (Matthew Garrett)
Date: Fri, 13 Nov 2009 21:13:06 +0000
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <4AFDCA0E.4080007@lwfinger.net>
References: <4AFD958E.1000303@lwfinger.net>
	<20091113201112.GA5540@srcf.ucam.org>
	<200911132144.24110.mb@bu3sch.de> <4AFDCA0E.4080007@lwfinger.net>
Message-ID: <20091113211306.GA6600@srcf.ucam.org>

On Fri, Nov 13, 2009 at 03:05:18PM -0600, Larry Finger wrote:

> I'm in the process of creating a patch to set the latency to 200 usec. The
> default is 2000. On my fast prosessors, it should not be anything nearly that
> slow. If we determine this to be the problem, then we can try tuning.

The latency is the amount of time it takes to get out of deep C states 
and into C0. That's a function of the processor design rather than the 
frequency.

-- 
Matthew Garrett | mjg59 at srcf.ucam.org


From Larry.Finger at lwfinger.net  Fri Nov 13 22:34:39 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 15:34:39 -0600
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <20091113211306.GA6600@srcf.ucam.org>
References: <4AFD958E.1000303@lwfinger.net>
	<20091113201112.GA5540@srcf.ucam.org>
	<200911132144.24110.mb@bu3sch.de> <4AFDCA0E.4080007@lwfinger.net>
	<20091113211306.GA6600@srcf.ucam.org>
Message-ID: <4AFDD0EF.7000809@lwfinger.net>

On 11/13/2009 03:13 PM, Matthew Garrett wrote:
> On Fri, Nov 13, 2009 at 03:05:18PM -0600, Larry Finger wrote:
> 
>> I'm in the process of creating a patch to set the latency to 200 usec. The
>> default is 2000. On my fast prosessors, it should not be anything nearly that
>> slow. If we determine this to be the problem, then we can try tuning.
> 
> The latency is the amount of time it takes to get out of deep C states 
> and into C0. That's a function of the processor design rather than the 
> frequency.

Thanks for that info. I should have said my Turion 64 X2 is different.

Larry


From Larry.Finger at lwfinger.net  Fri Nov 13 22:38:17 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 15:38:17 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFD9E20.3060501@gmail.com>
References: <4AFA09C8.4060602@gmail.com>
	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de> <4AFD9E20.3060501@gmail.com>
Message-ID: <4AFDD1C9.4050402@lwfinger.net>

Based on a suggestion by Matthew Garrett, please try the patch below.

Thanks,

Larry

=================


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c
+++ wireless-testing/drivers/net/wireless/b43/main.c
@@ -43,6 +43,7 @@
 #include <linux/io.h>
 #include <linux/dma-mapping.h>
 #include <asm/unaligned.h>
+#include <linux/pm_qos_params.h>

 #include "b43.h"
 #include "main.h"
@@ -3881,6 +3882,8 @@ redo:
 	if (!dev || b43_status(dev) < B43_STAT_STARTED)
 		return dev;

+	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43",
+				  PM_QOS_DEFAULT_VALUE);
 	/* Cancel work. Unlock to avoid deadlocks. */
 	mutex_unlock(&wl->mutex);
 	cancel_delayed_work_sync(&dev->periodic_work);
@@ -3963,6 +3966,9 @@ static int b43_wireless_core_start(struc
 	/* We are ready to run. */
 	b43_set_status(dev, B43_STAT_STARTED);

+	/* Set the maximum DMA latency */
+	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43", 200);
+
 	/* Start data flow (TX/RX). */
 	b43_mac_enable(dev);
 	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);






From william.bourque at polymtl.ca  Sat Nov 14 01:15:08 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Fri, 13 Nov 2009 19:15:08 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFDD1C9.4050402@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>
	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de> <4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net>
Message-ID: <4AFDF68C.4040804@polymtl.ca>


Larry Finger wrote:
> Based on a suggestion by Matthew Garrett, please try the patch below.
> 
> Thanks,
> 
> Larry
> 
> =================
> 
> 
> Index: wireless-testing/drivers/net/wireless/b43/main.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/main.c
> +++ wireless-testing/drivers/net/wireless/b43/main.c
> @@ -43,6 +43,7 @@
>  #include <linux/io.h>
>  #include <linux/dma-mapping.h>
>  #include <asm/unaligned.h>
> +#include <linux/pm_qos_params.h>
> 
>  #include "b43.h"
>  #include "main.h"
> @@ -3881,6 +3882,8 @@ redo:
>  	if (!dev || b43_status(dev) < B43_STAT_STARTED)
>  		return dev;
> 
> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43",
> +				  PM_QOS_DEFAULT_VALUE);
>  	/* Cancel work. Unlock to avoid deadlocks. */
>  	mutex_unlock(&wl->mutex);
>  	cancel_delayed_work_sync(&dev->periodic_work);
> @@ -3963,6 +3966,9 @@ static int b43_wireless_core_start(struc
>  	/* We are ready to run. */
>  	b43_set_status(dev, B43_STAT_STARTED);
> 
> +	/* Set the maximum DMA latency */
> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43", 200);
> +
>  	/* Start data flow (TX/RX). */
>  	b43_mac_enable(dev);
>  	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
> 
> 
> 
> 

Well, this one did not solve the problem but it certainly did help!

It took me some effort to make it bug again... I worked fine for 5 
minutes, I was able to browse the web and such. I was also 
removed/inserted the module a few times. It finally crashed when I tried 
to transfert a file of several MB.

Maybe the 200ms delay should be less (or more?) I think I will try to 
change it for some arbitrary number, just to see if it helps.

- William


[  393.039477] b43-phy1: Broadcom 4312 WLAN found (core revision 15)
[  393.130317] b43-phy1 debug: Found PHY: Analog 6, Type 5, Revision 1
[  393.130385] b43-phy1 debug: Found Radio: Manuf 0x17F, Version 0x2062, 
Revision 2
[  393.192506] phy1: Selected rate control algorithm 'minstrel'
[  393.193173] Registered led device: b43-phy1::tx
[  393.193241] Registered led device: b43-phy1::rx
[  393.193309] Registered led device: b43-phy1::radio
[  393.193674] Broadcom 43xx driver loaded [ Features: PLS, Firmware-ID: 
FW13 ]
[  421.362952] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[  421.381454] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[  421.392366] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[  421.540362] b43-phy1: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  421.542820] b43-phy1 debug: b2062: Using crystal tab entry 19200 kHz.
[  422.222892] b43-phy1 debug: Chip initialized
[  422.223311] b43-phy1 debug: 64-bit DMA initialized
[  422.223442] b43-phy1 debug: QoS enabled
[  422.261116] b43-phy1 debug: Wireless interface started
[  422.280460] b43-phy1 debug: Adding Interface type 2
...skipped
[  440.655981] wlan0: associate with AP ca:fe:ca:fe:ca:fe (try 1)
[  440.667704] wlan0: RX ReassocResp from ca:fe:ca:fe:ca:fe (capab=0x411 
status=0 aid=193)
[  440.667719] wlan0: invalid aid value 193; bits 15:14 not set
[  440.667727] wlan0: associated
[  450.040199] wlan0: no IPv6 routers present
[  470.103377] b43-phy1 ERROR: PHY transmission error
[  505.569818] b43-phy1 ERROR: PHY transmission error
[  505.666591] b43-phy1 ERROR: PHY transmission error
[  506.238169] b43-phy1 ERROR: PHY transmission error
[  506.717960] b43-phy1 ERROR: PHY transmission error
[  506.821628] b43-phy1 ERROR: PHY transmission error
[  506.967619] b43-phy1 ERROR: PHY transmission error
[  545.083221] b43-phy1 ERROR: PHY transmission error
[  563.656362] b43-phy1 ERROR: PHY transmission error
[  563.702653] b43-phy1 ERROR: PHY transmission error
[  563.914893] b43-phy1 ERROR: PHY transmission error
[  563.950189] b43-phy1 ERROR: PHY transmission error
[  564.077438] b43-phy1 ERROR: PHY transmission error
[  564.109533] b43-phy1 ERROR: PHY transmission error
[  564.193257] b43-phy1 ERROR: PHY transmission error
[  564.369051] b43-phy1 ERROR: PHY transmission error
[  564.398540] b43-phy1 ERROR: PHY transmission error
[  565.168589] b43: Dump of last 20 DMA descriptors
[  565.168607] b43: Descr.  0: 0x60000000 0x68 0x3619FC74 0x80000000
[  565.168619] b43: Descr.  1: 0x80000000 0x6E 0x36BFDEF0 0x80000000
[  565.168629] b43: Descr.  2: 0x0 0x930 0x36B66020 0x80000000
[  565.168639] b43: Descr.  3: 0x0 0x930 0x25989020 0x80000000
[  565.168649] b43: Descr.  4: 0x60000000 0x68 0x25ACEC74 0x80000000
[  565.168659] b43: Descr.  5: 0x80000000 0x6E 0x36BFDE82 0x80000000
[  565.168669] b43: Descr.  6: 0x0 0x930 0x25806020 0x80000000
[  565.168678] b43: Descr.  7: 0x0 0x930 0x2587B020 0x80000000
[  565.168688] b43: Descr.  8: 0x60000000 0x68 0x36B50C74 0x80000000
[  565.168698] b43: Descr.  9: 0x80000000 0x6E 0x36BFDE14 0x80000000
[  565.168708] b43: Descr. 10: 0x0 0x930 0x259F3020 0x80000000
[  565.168718] b43: Descr. 11: 0x0 0x930 0x35725020 0x80000000
[  565.168728] b43: Descr. 12: 0x60000000 0x68 0x36045074 0x80000000
[  565.168738] b43: Descr. 13: 0x80000000 0x6E 0x36BFDDA6 0x80000000
[  565.168748] b43: Descr. 14: 0x0 0x930 0x36130020 0x80000000
[  565.168758] b43: Descr. 15: 0x0 0x930 0x259B7020 0x80000000
[  565.168768] b43: Descr. 16: 0x60000000 0x68 0x25854C74 0x80000000
[  565.168778] b43: Descr. 17: 0x80000000 0x6E 0x36BFDD38 0x80000000
[  565.168788] b43: Descr. 18: 0x0 0x930 0x36AA4020 0x80000000
[  565.168798] b43: Descr. 19: 0x0 0x930 0x25925020 0x80000000
[  565.169154] b43-phy1 debug: Wireless interface stopped
[  565.169171] b43-phy1 debug: DMA-64 rx_ring: Used slots 2/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[  565.169277] b43-phy1 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  565.182764] b43-phy1 debug: DMA-64 tx_ring_AC_BE: Used slots 40/256, 
Failed frames 22/1721 = 1.2%, Average tries 1.12
[  565.202813] b43-phy1 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  565.222753] b43-phy1 debug: DMA-64 tx_ring_AC_VO: Used slots 4/256, 
Failed frames 0/71 = 0.0%, Average tries 1.00
[  565.242745] b43-phy1 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.00
[  565.500289] b43-phy1: Loading firmware version 410.2160 (2007-05-26 
15:32:10)
[  565.502746] b43-phy1 debug: b2062: Using crystal tab entry 19200 kHz.
[  579.262745] b43-phy1 debug: Chip initialized
[  579.263014] b43-phy1 debug: 64-bit DMA initialized
[  579.263147] b43-phy1 debug: QoS enabled
[  579.303401] b43-phy1 debug: Wireless interface started
[  579.303412] __ratelimit: 7 callbacks suppressed
[  579.303417] b43-phy1: Controller restarted
[  579.322866] b43-phy1 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  579.322898] b43-phy1: Controller RESET (DMA error) ...
[  579.322910] b43-phy1 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000
[  579.322917] b43-phy1: Controller RESET (DMA error) ...
[  579.323082] b43-phy1 debug: Wireless interface stopped



From b3nton at gmail.com  Sat Nov 14 01:41:49 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sat, 14 Nov 2009 00:41:49 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFDD1C9.4050402@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>
	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de> <4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net>
Message-ID: <4AFDFCCD.6050605@gmail.com>

On 13/11/09 21:38, Larry Finger wrote:
> Based on a suggestion by Matthew Garrett, please try the patch below.
>

I've only been using it for a few minutes but this looks very good. I 
compile the kernel with lots of ACPI
CONFIG_ACPI=y
CONFIG_ACPI_SYSFS_POWER=y
CONFIG_ACPI_AC=y
CONFIG_ACPI_BATTERY=y
CONFIG_ACPI_BUTTON=y
CONFIG_ACPI_VIDEO=y
CONFIG_ACPI_FAN=y
CONFIG_ACPI_DOCK=y
CONFIG_ACPI_PROCESSOR=y
CONFIG_ACPI_THERMAL=y
CONFIG_ACPI_CUSTOM_DSDT_FILE=""
CONFIG_ACPI_BLACKLIST_YEAR=0
CONFIG_PNPACPI=y
CONFIG_ATA_ACPI=y

And it seems to be working well. No errors so far. I've just downloaded 
a kernel, browsed slashdot a bit. I'll test it some more tomorrow but 
this is a BIG step in the right direction. This is the first kernel 
that's worked for me with CONFIG_ACPI_PROCESSOR=y
Thanks

Andy


From Larry.Finger at lwfinger.net  Sat Nov 14 04:05:03 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 21:05:03 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFDF68C.4040804@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca>
Message-ID: <4AFE1E5F.9040009@lwfinger.net>

On 11/13/2009 06:15 PM, William Bourque wrote:
> 
> Larry Finger wrote:
>> Based on a suggestion by Matthew Garrett, please try the patch below.
>>
>> Thanks,
>>
>> Larry
>>
>> =================
>>
>>
>> Index: wireless-testing/drivers/net/wireless/b43/main.c
>> ===================================================================
>> --- wireless-testing.orig/drivers/net/wireless/b43/main.c
>> +++ wireless-testing/drivers/net/wireless/b43/main.c
>> @@ -43,6 +43,7 @@
>>  #include <linux/io.h>
>>  #include <linux/dma-mapping.h>
>>  #include <asm/unaligned.h>
>> +#include <linux/pm_qos_params.h>
>>
>>  #include "b43.h"
>>  #include "main.h"
>> @@ -3881,6 +3882,8 @@ redo:
>>  	if (!dev || b43_status(dev) < B43_STAT_STARTED)
>>  		return dev;
>>
>> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43",
>> +				  PM_QOS_DEFAULT_VALUE);
>>  	/* Cancel work. Unlock to avoid deadlocks. */
>>  	mutex_unlock(&wl->mutex);
>>  	cancel_delayed_work_sync(&dev->periodic_work);
>> @@ -3963,6 +3966,9 @@ static int b43_wireless_core_start(struc
>>  	/* We are ready to run. */
>>  	b43_set_status(dev, B43_STAT_STARTED);
>>
>> +	/* Set the maximum DMA latency */
>> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43", 200);
>> +
>>  	/* Start data flow (TX/RX). */
>>  	b43_mac_enable(dev);
>>  	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
>>
>>
>>
>>
> 
> Well, this one did not solve the problem but it certainly did help!
> 
> It took me some effort to make it bug again... I worked fine for 5 
> minutes, I was able to browse the web and such. I was also 
> removed/inserted the module a few times. It finally crashed when I tried 
> to transfert a file of several MB.
> 
> Maybe the 200ms delay should be less (or more?) I think I will try to 
> change it for some arbitrary number, just to see if it helps.

You should try decreasing it. That parameter is used by 2 drivers in the kernel:
ipw2100 with a value of 175 and e1000e with a value of 55. I would expect the
value for the other wireless device to be closer that that for a wired
interface. Please try 150. If that also fails, try 100. BTW, the parameter is in
usec, not msec.

I'm finally encouraged that we might figure out this problem.

Larry


Larry



From Larry.Finger at lwfinger.net  Sat Nov 14 04:40:53 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Nov 2009 21:40:53 -0600
Subject: 64-bit DMA problems with BCM4312 using b43
In-Reply-To: <20091113211306.GA6600@srcf.ucam.org>
References: <4AFD958E.1000303@lwfinger.net>
	<20091113201112.GA5540@srcf.ucam.org>
	<200911132144.24110.mb@bu3sch.de> <4AFDCA0E.4080007@lwfinger.net>
	<20091113211306.GA6600@srcf.ucam.org>
Message-ID: <4AFE26C5.5080402@lwfinger.net>

On 11/13/2009 03:13 PM, Matthew Garrett wrote:
> On Fri, Nov 13, 2009 at 03:05:18PM -0600, Larry Finger wrote:
> 
>> I'm in the process of creating a patch to set the latency to 200 usec. The
>> default is 2000. On my fast prosessors, it should not be anything nearly that
>> slow. If we determine this to be the problem, then we can try tuning.
> 
> The latency is the amount of time it takes to get out of deep C states 
> and into C0. That's a function of the processor design rather than the 
> frequency.

Thanks for your suggestion. The value of 200 fixed one of the two machines and
greatly improved the other. He is currently testing with a value of 150, and
will try 100 if that still fails.

Larry




From mjg59 at srcf.ucam.org  Sat Nov 14 08:29:03 2009
From: mjg59 at srcf.ucam.org (Matthew Garrett)
Date: Sat, 14 Nov 2009 07:29:03 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFDFCCD.6050605@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de> <4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net> <4AFDFCCD.6050605@gmail.com>
Message-ID: <20091114072903.GA12662@srcf.ucam.org>

On Sat, Nov 14, 2009 at 12:41:49AM +0000, Andrew Benton wrote:

> And it seems to be working well. No errors so far. I've just downloaded 
> a kernel, browsed slashdot a bit. I'll test it some more tomorrow but 
> this is a BIG step in the right direction. This is the first kernel 
> that's worked for me with CONFIG_ACPI_PROCESSOR=y

I should emphasise that this patch works by effectively disabling deep C 
states on your CPU, which in turn will increase your power consumption. 
It's very much either a workaround for broken hardware or something that 
covers up a more subtle bug somewhere else. If it turns out that it is 
required, efforts should be made to limit it to the code regions that 
absolutely require this behaviour.

-- 
Matthew Garrett | mjg59 at srcf.ucam.org


From zajec5polish at gmail.com  Sat Nov 14 09:47:16 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sat, 14 Nov 2009 09:47:16 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <20091114072903.GA12662@srcf.ucam.org>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDFCCD.6050605@gmail.com> <20091114072903.GA12662@srcf.ucam.org>
Message-ID: <14b026160911140047vc14278bnadc16d2ff9c02e2a@mail.gmail.com>

2009/11/14 Matthew Garrett <mjg59 at srcf.ucam.org>:
> On Sat, Nov 14, 2009 at 12:41:49AM +0000, Andrew Benton wrote:
>
>> And it seems to be working well. No errors so far. I've just downloaded
>> a kernel, browsed slashdot a bit. I'll test it some more tomorrow but
>> this is a BIG step in the right direction. This is the first kernel
>> that's worked for me with CONFIG_ACPI_PROCESSOR=y
>
> I should emphasise that this patch works by effectively disabling deep C
> states on your CPU, which in turn will increase your power consumption.
> It's very much either a workaround for broken hardware or something that
> covers up a more subtle bug somewhere else. If it turns out that it is
> required, efforts should be made to limit it to the code regions that
> absolutely require this behaviour.

If this seems to be ATOM related, could we maybe ask Intel for
help/opinion? How like who, but Intel is quite friendly and
responsible. On the other hand they used same hack in they ipw2x00
driver... so maybe no much sense in that.

-- 
Rafa?


From b3nton at gmail.com  Sat Nov 14 10:52:15 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sat, 14 Nov 2009 09:52:15 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <20091114072903.GA12662@srcf.ucam.org>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de> <4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net> <4AFDFCCD.6050605@gmail.com>
	<20091114072903.GA12662@srcf.ucam.org>
Message-ID: <4AFE7DCF.4020705@gmail.com>

On 14/11/09 07:29, Matthew Garrett wrote:
>
> I should emphasise that this patch works by effectively disabling deep C
> states on your CPU, which in turn will increase your power consumption.
> It's very much either a workaround for broken hardware or something that
> covers up a more subtle bug somewhere else. If it turns out that it is
> required, efforts should be made to limit it to the code regions that
> absolutely require this behaviour.
>

It was working fine last night but I can't get that kernel to connect 
today. Nothing has changed, I can see no reason why it was working and 
isn't working now. It feels like a hardware problem.
I'm recompiling with a lower latency number (150)

Andy


From oncaphillis at snafu.de  Sat Nov 14 12:24:24 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Sat, 14 Nov 2009 12:24:24 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFDB166.6000700@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>
	<4AFD9B6E.6030308@snafu.de> <4AFDB166.6000700@lwfinger.net>
Message-ID: <4AFE9368.80500@snafu.de>

On 11/13/2009 08:20 PM, Larry Finger wrote:
> On 11/13/2009 11:46 AM, Oncaphillis wrote:
>
>>    Thanks for the tip. But it still hangs
>
> We still need to know where it hangs. If you boot to console mode (type a 3 on
> the option line in GRUB), does it boot? If it does not, what is the last line
> shown on the console? If your distro shows a splash screen while booting, get
> rid of it by typing an ESC after booting starts, or eliminate the
> "splash=silent" option on the boot line.
>
> If the previous boot works, log into your usual account. That should still work.
> Next you should type the command startx and immediately press the keys
> CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
> display should shift to the log console. When the computer freezes, report what
> you see on the screen. It will not scroll, nor can you save it. Write it down by
> hand or take a picture.
>
> Report what happens. If some of these steps don't work on your computer, please
> tell what distro you are using.
>
> Larry
>
  So now I've stripped down the kernel quite a lot and added as many
debug options that seem to make sense to me. No ACPI at all and no
network device driver except for b43, including low eneregy optins,
and PIO mode. If I leave out the b43 driver the kernel boots just
fine. If I include it I get the following on the screen:


   http://oncaphillis.net/IMG_0214.JPG

So it seems to me it doesn't even reach the loading of p43.ko
but gets stuck in the cfg80211 layer.

Any further hints how to proceed in debugging this.

Sebastian


From chris at cvine.freeserve.co.uk  Sat Nov 14 12:24:42 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Sat, 14 Nov 2009 11:24:42 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFE7DCF.4020705@gmail.com>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDFCCD.6050605@gmail.com> <20091114072903.GA12662@srcf.ucam.org>
	<4AFE7DCF.4020705@gmail.com>
Message-ID: <20091114112442.3de541ce@laptop.homenet>

On Sat, 14 Nov 2009 09:52:15 +0000
Andrew Benton <b3nton at gmail.com> wrote:
> It was working fine last night but I can't get that kernel to connect 
> today. Nothing has changed, I can see no reason why it was working
> and isn't working now. It feels like a hardware problem.
> I'm recompiling with a lower latency number (150)

Be aware that if you have been using the proprietary wl driver to send
on your bug reports, you must do a cold boot before testing b43, as if
you warm boot after having initialised the wireless device with the wl
driver then the DMA bug disappears.

Chris


From b3nton at gmail.com  Sat Nov 14 13:25:36 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sat, 14 Nov 2009 12:25:36 +0000
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <20091114112442.3de541ce@laptop.homenet>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDFCCD.6050605@gmail.com>	<20091114072903.GA12662@srcf.ucam.org>	<4AFE7DCF.4020705@gmail.com>
	<20091114112442.3de541ce@laptop.homenet>
Message-ID: <4AFEA1C0.4020701@gmail.com>

On 14/11/09 11:24, Chris Vine wrote:
> Be aware that if you have been using the proprietary wl driver to send
> on your bug reports, you must do a cold boot before testing b43, as if
> you warm boot after having initialised the wireless device with the wl
> driver then the DMA bug disappears.

That could be it. Today I can't connect with a kernel compiled with
CONFIG_ACPI_PROCESSOR=y
I think that last night I did a warm reboot from a kernel compiled with
# CONFIG_ACPI is not set
so the firmware was initialised in the device. What I don't understand 
is why I can't get the same thing to work today. I've tried recompiling 
with latencies of 150 and 100 and they didn't work either.
The only way I can get it to connect today is with
# CONFIG_ACPI_PROCESSOR is not set
Which is how it was before Larry's new patch.

Andy


From daniel at schmitt-united.de  Sat Nov 14 13:51:49 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Sat, 14 Nov 2009 13:51:49 +0100
Subject: PHY Transmission error and radio turned off with b43legacy
Message-ID: <4AFEA7E5.7050608@schmitt-united.de>

Hello group,

I managed to get AP with my bcm4306 rev 2 running using b43legacy and hostapd.
I'm using compat-wireless-2009-11-13 with patches from openwrt trunk for my 
b43legacy driver. I use libnl HEAD version und hostapd 0.6.9.

Now I have two issues.

1)
I'm using Miktorik RB/14 4miniPCI => 1PCI Adapter for driving my bcm4306 in x86 
PC. It always delivers a signal on minipci PIN 13 which powers down the radio. 
About this nothing is posted in dmesg. If I disconnect PIN13 in minipci card, 
the radio is online and I can scan for nets and start ap.
Letting b43legacy_is_hw_radio_enabled() always return 1 in rfkill.c did not help.
Here is my dmesg when I modprobe b43legacy and do "ifconfig wlan0 0.0.0.0 up":

b43legacy-phy6: Broadcom 4306 WLAN found
b43legacy-phy6 debug: Found PHY: Analog 1, Type 2, Revision 1
b43legacy-phy6 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43legacy-phy6 debug: Radio initialized
b43legacy-phy6 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
phy6: Selected rate control algorithm 'minstrel'
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
b43legacy ssb0:0: firmware: requesting b43legacy/ucode4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/pcm4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy6: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
b43legacy-phy6 debug: Chip initialized
b43legacy-phy6 debug: 30-bit DMA initialized
b43legacy-phy6 debug: Wireless interface started
b43legacy-phy6 debug: Adding Interface type 2

2)
I'm only interested in 802.11b so I allowed only bitrates 1,2,5.5 and 11 in 
hostapd.conf. By using a WLAN client and doing flood pings with 4096 bytes (ping 
-s 4095 -c 1000 -f), I get several PHY transmission errors

b43legacy-phy6 ERROR: PHY transmission error
b43legacy-phy6 ERROR: PHY transmission error
b43legacy-phy6 ERROR: PHY transmission error
b43legacy-phy6 ERROR: PHY transmission error

this message is repeated 100 times. The result of the ping command shows me 
packet loss of about 100 packets.
Is there anything I can do against these transmission errors?

Thanks,
Daniel


From oncaphillis at snafu.de  Sat Nov 14 14:37:20 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Sat, 14 Nov 2009 14:37:20 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFE9368.80500@snafu.de>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>	<4AFD9B6E.6030308@snafu.de>
	<4AFDB166.6000700@lwfinger.net> <4AFE9368.80500@snafu.de>
Message-ID: <4AFEB290.7010605@snafu.de>

On 11/14/2009 12:24 PM, Oncaphillis wrote:
> On 11/13/2009 08:20 PM, Larry Finger wrote:
>> On 11/13/2009 11:46 AM, Oncaphillis wrote:
>>
>>>     Thanks for the tip. But it still hangs
>>
>> We still need to know where it hangs. If you boot to console mode (type a 3 on
>> the option line in GRUB), does it boot? If it does not, what is the last line
>> shown on the console? If your distro shows a splash screen while booting, get
>> rid of it by typing an ESC after booting starts, or eliminate the
>> "splash=silent" option on the boot line.
>>
>> If the previous boot works, log into your usual account. That should still work.
>> Next you should type the command startx and immediately press the keys
>> CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
>> display should shift to the log console. When the computer freezes, report what
>> you see on the screen. It will not scroll, nor can you save it. Write it down by
>> hand or take a picture.
>>
>> Report what happens. If some of these steps don't work on your computer, please
>> tell what distro you are using.
>>
>> Larry
>>
>    So now I've stripped down the kernel quite a lot and added as many
> debug options that seem to make sense to me. No ACPI at all and no
> network device driver except for b43, including low eneregy optins,
> and PIO mode. If I leave out the b43 driver the kernel boots just
> fine. If I include it I get the following on the screen:
>
>
>     http://oncaphillis.net/IMG_0214.JPG
>
> So it seems to me it doesn't even reach the loading of p43.ko
> but gets stuck in the cfg80211 layer.
>

  And the same holds true with the patch 20091113

> Any further hints how to proceed in debugging this.
>
> Sebastian
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From Larry.Finger at lwfinger.net  Sat Nov 14 16:42:11 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Nov 2009 09:42:11 -0600
Subject: b43 kills my kernel
In-Reply-To: <4AFEB290.7010605@snafu.de>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>	<4AFD9B6E.6030308@snafu.de>	<4AFDB166.6000700@lwfinger.net>
	<4AFE9368.80500@snafu.de> <4AFEB290.7010605@snafu.de>
Message-ID: <4AFECFD3.1070104@lwfinger.net>

On 11/14/2009 07:37 AM, Oncaphillis wrote:
>> So it seems to me it doesn't even reach the loading of p43.ko
>> but gets stuck in the cfg80211 layer.

We can test that hypothesis. Generate a kernel without b43. Once it boots, enter
the following commands as root:

modprobe -v rfkill
modprobe -v cfg80211
modprobe -v mac80211
modprobe -v ssb

That will load the modules one by one.

Larry






From oncaphillis at snafu.de  Sat Nov 14 19:34:51 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Sat, 14 Nov 2009 19:34:51 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFECFD3.1070104@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de>	<4AFD8556.20701@lwfinger.net>	<4AFD8C31.1000402@snafu.de>	<4AFD8FD1.7030203@polymtl.ca>	<4AFD9B6E.6030308@snafu.de>	<4AFDB166.6000700@lwfinger.net>
	<4AFE9368.80500@snafu.de> <4AFEB290.7010605@snafu.de>
	<4AFECFD3.1070104@lwfinger.net>
Message-ID: <4AFEF84B.1000900@snafu.de>

On 11/14/2009 04:42 PM, Larry Finger wrote:
> On 11/14/2009 07:37 AM, Oncaphillis wrote:
>>> So it seems to me it doesn't even reach the loading of p43.ko
>>> but gets stuck in the cfg80211 layer.
>
> We can test that hypothesis. Generate a kernel without b43. Once it boots, enter
> the following commands as root:
>
> modprobe -v rfkill
> modprobe -v cfg80211
> modprobe -v mac80211
> modprobe -v ssb

  Hmm...works fine with the following dmesg:

<snip>
[  490.563574] cfg80211: Using static regulatory domain info
[  490.563582] cfg80211: Regulatory domain: US
[  490.563588]  (start_freq - end_freq @ bandwidth), (max_antenna_gain, 
max_eirp)
[  490.563596]  (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
[  490.563603]  (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
[  490.563610]  (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
[  490.563617]  (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
[  490.563624]  (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
[  490.563631]  (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
[  490.567612] cfg80211: Calling CRDA for country: US
[  490.643438] cfg80211: Regulatory domain changed to country: US
[  490.643446]  (start_freq - end_freq @ bandwidth), (max_antenna_gain, 
max_eirp)
[  490.643455]  (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2700 mBm)
[  490.643462]  (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 1700 mBm)
[  490.643469]  (5250000 KHz - 5330000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
[  490.643476]  (5490000 KHz - 5600000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
[  490.643483]  (5650000 KHz - 5710000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
[  490.643490]  (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 3000 mBm)
</snip>

Even more surprising if I compile b43.ko separately afterwards and
insert it via insmod it gets inserted without any failure, giving me


[  539.795403] Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: 
FW13 ]

but I don't see any wlan device. Next step I do is to offer a firmware
file.

<dialect value="austrian">
I'll be back
</dialect>

Sebastian


> That will load the modules one by one.
>
> Larry
>
>
>
>



From william.bourque at polymtl.ca  Sat Nov 14 19:51:24 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Sat, 14 Nov 2009 13:51:24 -0500
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFE1E5F.9040009@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
Message-ID: <4AFEFC2C.5030704@polymtl.ca>

Larry Finger wrote:
> On 11/13/2009 06:15 PM, William Bourque wrote:
>> Larry Finger wrote:
>>> Based on a suggestion by Matthew Garrett, please try the patch below.
>>>
>>> Thanks,
>>>
>>> Larry
>>>
>>> =================
>>>
>>>
>>> Index: wireless-testing/drivers/net/wireless/b43/main.c
>>> ===================================================================
>>> --- wireless-testing.orig/drivers/net/wireless/b43/main.c
>>> +++ wireless-testing/drivers/net/wireless/b43/main.c
>>> @@ -43,6 +43,7 @@
>>>  #include <linux/io.h>
>>>  #include <linux/dma-mapping.h>
>>>  #include <asm/unaligned.h>
>>> +#include <linux/pm_qos_params.h>
>>>
>>>  #include "b43.h"
>>>  #include "main.h"
>>> @@ -3881,6 +3882,8 @@ redo:
>>>  	if (!dev || b43_status(dev) < B43_STAT_STARTED)
>>>  		return dev;
>>>
>>> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43",
>>> +				  PM_QOS_DEFAULT_VALUE);
>>>  	/* Cancel work. Unlock to avoid deadlocks. */
>>>  	mutex_unlock(&wl->mutex);
>>>  	cancel_delayed_work_sync(&dev->periodic_work);
>>> @@ -3963,6 +3966,9 @@ static int b43_wireless_core_start(struc
>>>  	/* We are ready to run. */
>>>  	b43_set_status(dev, B43_STAT_STARTED);
>>>
>>> +	/* Set the maximum DMA latency */
>>> +	pm_qos_update_requirement(PM_QOS_CPU_DMA_LATENCY, "b43", 200);
>>> +
>>>  	/* Start data flow (TX/RX). */
>>>  	b43_mac_enable(dev);
>>>  	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
>>>
>>>
>>>
>>>
>> Well, this one did not solve the problem but it certainly did help!
>>
>> It took me some effort to make it bug again... I worked fine for 5 
>> minutes, I was able to browse the web and such. I was also 
>> removed/inserted the module a few times. It finally crashed when I tried 
>> to transfert a file of several MB.
>>
>> Maybe the 200ms delay should be less (or more?) I think I will try to 
>> change it for some arbitrary number, just to see if it helps.
> 
> You should try decreasing it. That parameter is used by 2 drivers in the kernel:
> ipw2100 with a value of 175 and e1000e with a value of 55. I would expect the
> value for the other wireless device to be closer that that for a wired
> interface. Please try 150. If that also fails, try 100. BTW, the parameter is in
> usec, not msec.
> 
> I'm finally encouraged that we might figure out this problem.
> 
> Larry
> 
> 
> Larry
> 

Ok, I tried with value of 150, 100 already and I'm recompiling to see 
the result with 175 and 125.

150us seems to give me the best result. As with 200 I could use the 
wireless for several minutes and insert/remove the module. However it 
failed when I tried to transfert a big file at full speed over LAN.  So 
for some reason, low speed seems to work ok (althought I ad some PHY 
Transmission error, but I suppose it is not related).

100us is worst than the unpatched code. The wireless fails as soon as I 
bring up the interface and the DMA errors then repeat at a very high 
rate. Then, when I try to remove the module, "modprobe" is having a very 
bad time. On fist try, it took around 3 minutes to be able    to remove 
the module and on the second ttry, the machine just hanged (couldn't see 
if there wasan oops or something).
In the mean time, I could tell that the DMA error where still pilling 
up, as the wireless LED was furiously flashing from red to blue (usual 
behavior on an error).

I'll try 175usec first, then 125usec to see if anything better happen 
but I doubt so... I think the patch just fixed a part of the problem, 
not the whole.

Oh and I didn't bother posting the output of dmesg as it is the exact 
same thing again but if you need it I kept it.

- William




From mb at bu3sch.de  Sat Nov 14 20:45:28 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Nov 2009 20:45:28 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFE9368.80500@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFDB166.6000700@lwfinger.net>
	<4AFE9368.80500@snafu.de>
Message-ID: <200911142045.30243.mb@bu3sch.de>

On Saturday 14 November 2009 12:24:24 Oncaphillis wrote:
> On 11/13/2009 08:20 PM, Larry Finger wrote:
> > On 11/13/2009 11:46 AM, Oncaphillis wrote:
> >
> >>    Thanks for the tip. But it still hangs
> >
> > We still need to know where it hangs. If you boot to console mode (type a 3 on
> > the option line in GRUB), does it boot? If it does not, what is the last line
> > shown on the console? If your distro shows a splash screen while booting, get
> > rid of it by typing an ESC after booting starts, or eliminate the
> > "splash=silent" option on the boot line.
> >
> > If the previous boot works, log into your usual account. That should still work.
> > Next you should type the command startx and immediately press the keys
> > CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
> > display should shift to the log console. When the computer freezes, report what
> > you see on the screen. It will not scroll, nor can you save it. Write it down by
> > hand or take a picture.
> >
> > Report what happens. If some of these steps don't work on your computer, please
> > tell what distro you are using.
> >
> > Larry
> >
>   So now I've stripped down the kernel quite a lot and added as many
> debug options that seem to make sense to me. No ACPI at all and no
> network device driver except for b43, including low eneregy optins,
> and PIO mode. If I leave out the b43 driver the kernel boots just
> fine. If I include it I get the following on the screen:
> 
> 
>    http://oncaphillis.net/IMG_0214.JPG
> 
> So it seems to me it doesn't even reach the loading of p43.ko
> but gets stuck in the cfg80211 layer.

Well, there's a TSC message after that, which is completely unrelated to cfg80211.
It could possibly be sleeping in the CRDA call and executes the TSC stuff in
parallel (given that the TSC message is only a few microseconds later).
I don't really know how parallelization is done here (if any).

> Any further hints how to proceed in debugging this.

Do you have cfg80211/mac80211 built-in or as modules? The TSC message after
the cfg80211 message might indicate that it's built-in.

It's basically impossible to tell what's going on here. You could do a git bisection
to track down the bad commit.


-- 
Greetings, Michael.


From oncaphillis at snafu.de  Sat Nov 14 21:03:09 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Sat, 14 Nov 2009 21:03:09 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911142045.30243.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4AFDB166.6000700@lwfinger.net>
	<4AFE9368.80500@snafu.de> <200911142045.30243.mb@bu3sch.de>
Message-ID: <4AFF0CFD.9040403@snafu.de>

On 11/14/2009 08:45 PM, Michael Buesch wrote:
> On Saturday 14 November 2009 12:24:24 Oncaphillis wrote:
>> On 11/13/2009 08:20 PM, Larry Finger wrote:
>>> On 11/13/2009 11:46 AM, Oncaphillis wrote:
>>>
>>>>     Thanks for the tip. But it still hangs
>>>
>>> We still need to know where it hangs. If you boot to console mode (type a 3 on
>>> the option line in GRUB), does it boot? If it does not, what is the last line
>>> shown on the console? If your distro shows a splash screen while booting, get
>>> rid of it by typing an ESC after booting starts, or eliminate the
>>> "splash=silent" option on the boot line.
>>>
>>> If the previous boot works, log into your usual account. That should still work.
>>> Next you should type the command startx and immediately press the keys
>>> CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
>>> display should shift to the log console. When the computer freezes, report what
>>> you see on the screen. It will not scroll, nor can you save it. Write it down by
>>> hand or take a picture.
>>>
>>> Report what happens. If some of these steps don't work on your computer, please
>>> tell what distro you are using.
>>>
>>> Larry
>>>
>>    So now I've stripped down the kernel quite a lot and added as many
>> debug options that seem to make sense to me. No ACPI at all and no
>> network device driver except for b43, including low eneregy optins,
>> and PIO mode. If I leave out the b43 driver the kernel boots just
>> fine. If I include it I get the following on the screen:
>>
>>
>>     http://oncaphillis.net/IMG_0214.JPG
>>
>> So it seems to me it doesn't even reach the loading of p43.ko
>> but gets stuck in the cfg80211 layer.
>
> Well, there's a TSC message after that, which is completely unrelated to cfg80211.
> It could possibly be sleeping in the CRDA call and executes the TSC stuff in
> parallel (given that the TSC message is only a few microseconds later).
> I don't really know how parallelization is done here (if any).
>
>> Any further hints how to proceed in debugging this.
>
> Do you have cfg80211/mac80211 built-in or as modules? The TSC message after
> the cfg80211 message might indicate that it's built-in.


  It used to be build in, but I successfully built and inserted all 
components (including b43) as a module (see my previous message ).

>
> It's basically impossible to tell what's going on here. You could do a git bisection
> to track down the bad commit.
>
>



From mb at bu3sch.de  Sat Nov 14 21:20:28 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Nov 2009 21:20:28 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFF0CFD.9040403@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <200911142045.30243.mb@bu3sch.de>
	<4AFF0CFD.9040403@snafu.de>
Message-ID: <200911142120.30202.mb@bu3sch.de>

On Saturday 14 November 2009 21:03:09 Oncaphillis wrote:
> On 11/14/2009 08:45 PM, Michael Buesch wrote:
> > On Saturday 14 November 2009 12:24:24 Oncaphillis wrote:
> >> On 11/13/2009 08:20 PM, Larry Finger wrote:
> >>> On 11/13/2009 11:46 AM, Oncaphillis wrote:
> >>>
> >>>>     Thanks for the tip. But it still hangs
> >>>
> >>> We still need to know where it hangs. If you boot to console mode (type a 3 on
> >>> the option line in GRUB), does it boot? If it does not, what is the last line
> >>> shown on the console? If your distro shows a splash screen while booting, get
> >>> rid of it by typing an ESC after booting starts, or eliminate the
> >>> "splash=silent" option on the boot line.
> >>>
> >>> If the previous boot works, log into your usual account. That should still work.
> >>> Next you should type the command startx and immediately press the keys
> >>> CRTL-ALT-F10. That is hold the CTRL and ALT keys while pressing the F10 key. The
> >>> display should shift to the log console. When the computer freezes, report what
> >>> you see on the screen. It will not scroll, nor can you save it. Write it down by
> >>> hand or take a picture.
> >>>
> >>> Report what happens. If some of these steps don't work on your computer, please
> >>> tell what distro you are using.
> >>>
> >>> Larry
> >>>
> >>    So now I've stripped down the kernel quite a lot and added as many
> >> debug options that seem to make sense to me. No ACPI at all and no
> >> network device driver except for b43, including low eneregy optins,
> >> and PIO mode. If I leave out the b43 driver the kernel boots just
> >> fine. If I include it I get the following on the screen:
> >>
> >>
> >>     http://oncaphillis.net/IMG_0214.JPG
> >>
> >> So it seems to me it doesn't even reach the loading of p43.ko
> >> but gets stuck in the cfg80211 layer.
> >
> > Well, there's a TSC message after that, which is completely unrelated to cfg80211.
> > It could possibly be sleeping in the CRDA call and executes the TSC stuff in
> > parallel (given that the TSC message is only a few microseconds later).
> > I don't really know how parallelization is done here (if any).
> >
> >> Any further hints how to proceed in debugging this.
> >
> > Do you have cfg80211/mac80211 built-in or as modules? The TSC message after
> > the cfg80211 message might indicate that it's built-in.
> 
> 
>   It used to be build in, but I successfully built and inserted all 
> components (including b43) as a module (see my previous message ).

Yeah, ok. That doesn't seem to be a bug in b43 then. It's the CRDA subsystem
waiting for a userspace daemon. But it won't finish waiting, because userspace
is not running, yet. I guess running cfg80211 as module is an acceptable workaround for now.

About your "device is not created" problem: Please enable CONFIG_SSB_DEBUG,
reboot and send the result. Also send the output of lspci -vvn.


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Nov 14 22:42:24 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Nov 2009 15:42:24 -0600
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <4AFEFC2C.5030704@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net> <4AFEFC2C.5030704@polymtl.ca>
Message-ID: <4AFF2440.3020008@lwfinger.net>

On 11/14/2009 12:51 PM, William Bourque wrote:
> 
> Ok, I tried with value of 150, 100 already and I'm recompiling to see 
> the result with 175 and 125.
> 
> 150us seems to give me the best result. As with 200 I could use the 
> wireless for several minutes and insert/remove the module. However it 
> failed when I tried to transfert a big file at full speed over LAN.  So 
> for some reason, low speed seems to work ok (althought I ad some PHY 
> Transmission error, but I suppose it is not related).
> 
> 100us is worst than the unpatched code. The wireless fails as soon as I 
> bring up the interface and the DMA errors then repeat at a very high 
> rate. Then, when I try to remove the module, "modprobe" is having a very 
> bad time. On fist try, it took around 3 minutes to be able    to remove 
> the module and on the second ttry, the machine just hanged (couldn't see 
> if there wasan oops or something).
> In the mean time, I could tell that the DMA error where still pilling 
> up, as the wireless LED was furiously flashing from red to blue (usual 
> behavior on an error).
> 
> I'll try 175usec first, then 125usec to see if anything better happen 
> but I doubt so... I think the patch just fixed a part of the problem, 
> not the whole.

I'm beginning to believe that this patch fixes nothing. If it were valid, it
would work as soon as you got below some threshold and you wouldn't find 100
being worse than 150. I did learn (or relearn) that it makes a difference if wl
has been installed previously without an intervening power off.

I have started looking from a different angle. I have the MMIO trace for wl
after a cold boot, and a similar one for b43. There are many differences - the
current exercise is to find out what they are doing.

Larry


From Larry.Finger at lwfinger.net  Sat Nov 14 23:29:38 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Nov 2009 16:29:38 -0600
Subject: Differences in mmio trace - need register meanings
Message-ID: <4AFF2F52.1050508@lwfinger.net>

Michael,

I now have MMIO traces after modprobe of wl and b43, both after a fresh cold
reboot. There are many similaries (of course), but some differences that could
be important in the DMA errors.

In both dumps, I see the code advancing through the cores. I don't see the PCI
configuration read/writes, thus I don't see the core selection. Once the
SSB_IDHIGH register has the correct value for the 802.11 core, I see the code
read the SPROM. In Broadcom's driver, I see additional read/write cycles that do
not happen in b43, but I cannot identify the target registers. The operations in
question are:

read16  base+0x0800 -> 0x2801
write16 base+0x0800 <- 0x3801
read16  base+0x280a -> 0x6dbe
write16 base+0x280a <- 0xedbe

Any idea what is located at offsets 0x0800 and 0x280a? Nothing in the b43 dump
reads or writes either of those locations.

Larry


From mb at bu3sch.de  Sat Nov 14 23:46:47 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Nov 2009 23:46:47 +0100
Subject: Differences in mmio trace - need register meanings
In-Reply-To: <4AFF2F52.1050508@lwfinger.net>
References: <4AFF2F52.1050508@lwfinger.net>
Message-ID: <200911142346.49055.mb@bu3sch.de>

On Saturday 14 November 2009 23:29:38 Larry Finger wrote:
> Michael,
> 
> I now have MMIO traces after modprobe of wl and b43, both after a fresh cold
> reboot. There are many similaries (of course), but some differences that could
> be important in the DMA errors.
> 
> In both dumps, I see the code advancing through the cores. I don't see the PCI
> configuration read/writes, thus I don't see the core selection. Once the
> SSB_IDHIGH register has the correct value for the 802.11 core, I see the code
> read the SPROM. In Broadcom's driver, I see additional read/write cycles that do
> not happen in b43, but I cannot identify the target registers. The operations in
> question are:
> 
> read16  base+0x0800 -> 0x2801
> write16 base+0x0800 <- 0x3801
> read16  base+0x280a -> 0x6dbe
> write16 base+0x280a <- 0xedbe
> 
> Any idea what is located at offsets 0x0800 and 0x280a? Nothing in the b43 dump
> reads or writes either of those locations.

Are you sure this still is on the ssb? It could be another device in another region
that just happens to be mapped after ssb.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Nov 15 02:14:35 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Nov 2009 19:14:35 -0600
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4AFEA7E5.7050608@schmitt-united.de>
References: <4AFEA7E5.7050608@schmitt-united.de>
Message-ID: <4AFF55FB.8060506@lwfinger.net>

On 11/14/2009 06:51 AM, Daniel Schmitt wrote:
> Hello group,
> 
> I managed to get AP with my bcm4306 rev 2 running using b43legacy and hostapd.
> I'm using compat-wireless-2009-11-13 with patches from openwrt trunk for my 
> b43legacy driver. I use libnl HEAD version und hostapd 0.6.9.
> 
> Now I have two issues.
> 
> 1)
> I'm using Miktorik RB/14 4miniPCI => 1PCI Adapter for driving my bcm4306 in x86 
> PC. It always delivers a signal on minipci PIN 13 which powers down the radio. 
> About this nothing is posted in dmesg. If I disconnect PIN13 in minipci card, 
> the radio is online and I can scan for nets and start ap.
> Letting b43legacy_is_hw_radio_enabled() always return 1 in rfkill.c did not help.
> Here is my dmesg when I modprobe b43legacy and do "ifconfig wlan0 0.0.0.0 up":

I think this is the first time we have seen a device that uses b43legacy with
any radio kill hardware. I suspect that the b43legacy_is_hw_radio_enabled() is
not looking at the correct bit. The hardware will obey the value on PIN13, no
matter what the driver does. That is why changing ...enabled() did no good.

Please build with the attached patch, and run 2 times, once with PIN13 connected
and once with PIN13 disconnected. That should let us see where the state of that
pin shows up.

> I'm only interested in 802.11b so I allowed only bitrates 1,2,5.5 and 11 in 
> hostapd.conf. By using a WLAN client and doing flood pings with 4096 bytes (ping 
> -s 4095 -c 1000 -f), I get several PHY transmission errors

Are these related to large packets? If you reduce the size to 1000, does it
still err?

Larry
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43legacy_debug_rfkill
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091114/e34e07dd/attachment.ksh>

From Larry.Finger at lwfinger.net  Sun Nov 15 02:49:12 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 14 Nov 2009 19:49:12 -0600
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <200911150231.59815.mb@bu3sch.de>
References: <4AFEA7E5.7050608@schmitt-united.de>
	<4AFF55FB.8060506@lwfinger.net> <200911150231.59815.mb@bu3sch.de>
Message-ID: <4AFF5E18.7030704@lwfinger.net>

On 11/14/2009 07:31 PM, Michael Buesch wrote:
> I guess the patch misses some curly brackets.

So it does. V2 attached.

Larry
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43legacy_debug_rfkill
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091114/186bc2fb/attachment.ksh>

From mb at bu3sch.de  Sun Nov 15 02:31:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Nov 2009 02:31:57 +0100
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4AFF55FB.8060506@lwfinger.net>
References: <4AFEA7E5.7050608@schmitt-united.de>
	<4AFF55FB.8060506@lwfinger.net>
Message-ID: <200911150231.59815.mb@bu3sch.de>

I guess the patch misses some curly brackets.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Nov 15 12:33:08 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Nov 2009 12:33:08 +0100
Subject: [PATCH stable] b43: Work around mac80211 race condition
Message-ID: <200911151233.10530.mb@bu3sch.de>

commit 18c6951091eca7645005a71b556106cc99a6f4b1
Author: Larry Finger <Larry.Finger at lwfinger.net>
Date:   Wed Jul 29 10:54:06 2009 -0500

    b43: Work around mac80211 race condition
    
    As shown in http://thread.gmane.org/gmane.linux.kernel.wireless.general/36497,
    mac80211 has a bug that allows a call to the TX routine after the queues have
    been stopped. This situation will only occur under extreme stress. Although
    b43 does not crash when this condition occurs, it does generate a WARN_ON and
    also logs a queue overrun message. This patch recognizes b43 is not at fault
    and logs a message only when the most verbose debugging mode is enabled. In
    the unlikely event that the queue is not stopped when the DMA queue becomes
    full, then a warning is issued.
    
    During testing of this patch with one output stream running repeated tcpperf
    writes and a second running a flood ping, this routine was entered with
    the DMA ring stopped about once per hour. The condition where the DMA queue is
    full but the ring has not been stopped has never been seen by me.
    
    Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
    Signed-off-by: John W. Linville <linville at tuxdriver.com>


---

We forgot to CC -stable on this patch, but it fixes a bug that users are hitting
(bug #14582)


diff --git a/drivers/net/wireless/b43/dma.c b/drivers/net/wireless/b43/dma.c
index 7964cc3..41a0e9c 100644
--- a/drivers/net/wireless/b43/dma.c
+++ b/drivers/net/wireless/b43/dma.c
@@ -1334,13 +1334,22 @@ int b43_dma_tx(struct b43_wldev *dev, struct sk_buff *skb)
 	spin_lock_irqsave(&ring->lock, flags);
 
 	B43_WARN_ON(!ring->tx);
-	/* Check if the queue was stopped in mac80211,
-	 * but we got called nevertheless.
-	 * That would be a mac80211 bug. */
-	B43_WARN_ON(ring->stopped);
 
-	if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
-		b43warn(dev->wl, "DMA queue overflow\n");
+	if (unlikely(ring->stopped)) {
+		/* We get here only because of a bug in mac80211.
+		 * Because of a race, one packet may be queued after
+		 * the queue is stopped, thus we got called when we shouldn't.
+		 * For now, just refuse the transmit. */
+		if (b43_debug(dev, B43_DBG_DMAVERBOSE))
+			b43err(dev->wl, "Packet after queue stopped\n");
+		err = -ENOSPC;
+		goto out_unlock;
+	}
+
+	if (unlikely(WARN_ON(free_slots(ring) < TX_SLOTS_PER_FRAME))) {
+		/* If we get here, we have a real error with the queue
+		 * full, but queues not stopped. */
+		b43err(dev->wl, "DMA queue overflow\n");
 		err = -ENOSPC;
 		goto out_unlock;
 	}

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Nov 15 12:34:31 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Nov 2009 12:34:31 +0100
Subject: [PATCH stable] b43: Fix DMA TX bounce buffer copying
Message-ID: <200911151234.33621.mb@bu3sch.de>

commit 9a3f45116f5e08819136cd512fd7f6450ac22aa8
Author: Michael Buesch <mb at bu3sch.de>
Date:   Wed Oct 28 22:08:13 2009 +0100

    b43: Fix DMA TX bounce buffer copying
    
    b43 allocates a bouncebuffer, if the supplied TX skb is in an invalid
    memory range for DMA.
    However, this is broken in that it fails to copy over some metadata to the
    new skb.
    
    This patch fixes three problems:
    * Failure to adjust the ieee80211_tx_info pointer to the new buffer.
      This results in a kmemcheck warning.
    * Failure to copy the skb cb, which contains ieee80211_tx_info, to the new skb.
      This results in breakage of various TX-status postprocessing (Rate control).
    * Failure to transfer the queue mapping.
      This results in the wrong queue being stopped on saturation and can result in queue overflow.
    
    Signed-off-by: Michael Buesch <mb at bu3sch.de>
    Tested-by: Christian Casteyde <casteyde.christian at free.fr>
    Signed-off-by: John W. Linville <linville at tuxdriver.com>

---

We forgot to CC -stable on this patch, but it fixes a bug that users are hitting
(bug #14582)


---
 drivers/net/wireless/b43/dma.c |   15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

--- linux-2.6.31.orig/drivers/net/wireless/b43/dma.c
+++ linux-2.6.31/drivers/net/wireless/b43/dma.c
@@ -1158,8 +1158,9 @@ struct b43_dmaring *parse_cookie(struct 
 }
 
 static int dma_tx_fragment(struct b43_dmaring *ring,
-			   struct sk_buff *skb)
+			   struct sk_buff **in_skb)
 {
+	struct sk_buff *skb = *in_skb;
 	const struct b43_dma_ops *ops = ring->ops;
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
 	u8 *header;
@@ -1225,8 +1226,14 @@ static int dma_tx_fragment(struct b43_dm
 		}
 
 		memcpy(skb_put(bounce_skb, skb->len), skb->data, skb->len);
+		memcpy(bounce_skb->cb, skb->cb, sizeof(skb->cb));
+		bounce_skb->dev = skb->dev;
+		skb_set_queue_mapping(bounce_skb, skb_get_queue_mapping(skb));
+		info = IEEE80211_SKB_CB(bounce_skb);
+
 		dev_kfree_skb_any(skb);
 		skb = bounce_skb;
+		*in_skb = bounce_skb;
 		meta->skb = skb;
 		meta->dmaaddr = map_descbuffer(ring, skb->data, skb->len, 1);
 		if (b43_dma_mapping_error(ring, meta->dmaaddr, skb->len, 1)) {
@@ -1359,7 +1366,11 @@ int b43_dma_tx(struct b43_wldev *dev, st
 	 * static, so we don't need to store it per frame. */
 	ring->queue_prio = skb_get_queue_mapping(skb);
 
-	err = dma_tx_fragment(ring, skb);
+	/* dma_tx_fragment might reallocate the skb, so invalidate pointers pointing
+	 * into the skb data or cb now. */
+	hdr = NULL;
+	info = NULL;
+	err = dma_tx_fragment(ring, &skb);
 	if (unlikely(err == -ENOKEY)) {
 		/* Drop this packet, as we don't have the encryption key
 		 * anymore and must not transmit it unencrypted. */

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Nov 15 15:40:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Nov 2009 15:40:57 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911142120.30202.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4AFF0CFD.9040403@snafu.de>
	<200911142120.30202.mb@bu3sch.de>
Message-ID: <200911151540.59226.mb@bu3sch.de>

On Saturday 14 November 2009 21:20:28 Michael Buesch wrote:
> Yeah, ok. That doesn't seem to be a bug in b43 then. It's the CRDA subsystem
> waiting for a userspace daemon. But it won't finish waiting, because userspace
> is not running, yet. I guess running cfg80211 as module is an acceptable workaround for now.

We cannot reproduce this problem and it seems unlikely to be a CRDA issue, because
it doesn't actually wait for userspace in that code.
So we won't investigate further on this issue for now, as long as there's no new information
on how to reproduce this.

-- 
Greetings, Michael.


From chris at cvine.freeserve.co.uk  Mon Nov 16 02:10:40 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Mon, 16 Nov 2009 01:10:40 +0000
Subject: b43 fatal DMA errors
In-Reply-To: <alpine.LFD.2.01.0911151536230.9384@localhost.localdomain>
References: <alpine.LFD.2.01.0910251057270.3618@localhost.localdomain>
	<69e28c910910251130v45acce96sd86dc4fd2052a707@mail.gmail.com>
	<20091025210249.7deecd71@boulder.homenet>
	<alpine.LFD.2.01.0910251414090.3618@localhost.localdomain>
	<alpine.LFD.2.01.0910251430450.3618@localhost.localdomain>
	<69e28c910910251440l483a3d7bq9751e5c8182eeb18@mail.gmail.com>
	<20091025215708.6f2f432b@boulder.homenet>
	<alpine.LFD.2.01.0910251504520.3618@localhost.localdomain>
	<20091025221346.00c0c65e@boulder.homenet>
	<alpine.LFD.2.01.0911151536230.9384@localhost.localdomain>
Message-ID: <20091116011040.2ef28890@boulder.homenet>

On Sun, 15 Nov 2009 15:42:25 -0800 (PST)
Linus Torvalds <torvalds at linux-foundation.org> wrote:
> On Sun, 25 Oct 2009, Chris Vine wrote:
> > > 
> > > And Chris, just out of interest - does FORCE_PIO work for you too?
> > 
> > Yes.
> 
> So I've been trying to debug this, but no real luck. The Broadcom
> official driver seems to _load_ for me, but I can't seem to get it to
> work or do anythign interesting. I didn't spend any real time on it,
> though.

You need to blacklist (and unload) the ssb module as well as the b43
module to use the proprietary driver.  This tripped me up to begin with.
You also need to amend Kconfig in net/wireless by hand in order to
compile the lib80211 WEP/TKIP/CCMP encryption modules (make
config/menuconfig/xconfig will not offer this as an option).

> But PIO mode continues to work fine. So how about this kind of
> "fallback" patch that just says "if we see fatal DMA errors that we
> don't understand, fall back to PIO". Makes sense to me, and makes the
> driver work for me without any special hacks.

On using PIO, I have found that it works with WEP encryption but runs
into difficulties with WPA.

Chris

PS I am not a b43 developer.




From oncaphillis at snafu.de  Mon Nov 16 02:13:58 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Mon, 16 Nov 2009 02:13:58 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911151540.59226.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4AFF0CFD.9040403@snafu.de>
	<200911142120.30202.mb@bu3sch.de> <200911151540.59226.mb@bu3sch.de>
Message-ID: <4B00A756.9040704@snafu.de>

On 11/15/2009 03:40 PM, Michael Buesch wrote:
> On Saturday 14 November 2009 21:20:28 Michael Buesch wrote:
>> Yeah, ok. That doesn't seem to be a bug in b43 then. It's the CRDA subsystem
>> waiting for a userspace daemon. But it won't finish waiting, because userspace
>> is not running, yet. I guess running cfg80211 as module is an acceptable workaround for now.
>
> We cannot reproduce this problem and it seems unlikely to be a CRDA issue, because
> it doesn't actually wait for userspace in that code.
> So we won't investigate further on this issue for now, as long as there's no new information
> on how to reproduce this.
>

Here's a little update on the issue. It isn't b43 that freezes the
system but ssb.ko, but only if the B43 option is set. I poked around
in the sbb code and found that ssb_do_read never returns:

<snip>
static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
{
         int i;
         for (i = 0; i < bus->sprom_size; i++)
           sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
         return 0;
}

</snip>

So I guess the mmio address is wrong. It is set to decimal -133791744 
when it freezes. I don't know if that's a valid mmio address but it 
seems fishy.

Sebastian

Here comes a lspci -vvnn

<snip>
00:00.0 Host bridge [0600]: Intel Corporation Mobile 945GME Express 
Memory Controller Hub [8086:27ac] (rev 03)
         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort+ >SERR- <PERR- INTx-
         Latency: 0 

         Capabilities: [e0] Vendor Specific Information <?> 

         Kernel driver in use: agpgart-intel 


00:02.0 VGA compatible controller [0300]: Intel Corporation Mobile 
945GME Express Integrated Graphics Controller [8086:27ae] (rev 03) 
(prog-if 00 [VGA controller]) 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin A routed to IRQ 11 

         Region 0: Memory at 58280000 (32-bit, non-prefetchable) 
[size=512K]
         Region 1: I/O ports at 60f0 [size=8] 

         Region 2: Memory at 40000000 (32-bit, prefetchable) [size=256M] 

         Region 3: Memory at 58300000 (32-bit, non-prefetchable) 
[size=256K]
         Expansion ROM at <unassigned> [disabled] 

         Capabilities: [90] MSI: Enable- Count=1/1 Maskable- 64bit- 

                 Address: 00000000  Data: 0000 

         Capabilities: [d0] Power Management version 2 

                 Flags: PMEClk- DSI+ D1- D2- AuxCurrent=0mA 
PME(D0-,D1-,D2-,D3hot-,D3cold-)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 


00:02.1 Display controller [0380]: Intel Corporation Mobile 
945GM/GMS/GME, 943/940GML Express Integrated Graphics Controller 
[8086:27a6] (rev 03) 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Region 0: Memory at 58200000 (32-bit, non-prefetchable) 
[size=512K]
         Capabilities: [d0] Power Management version 2 

                 Flags: PMEClk- DSI+ D1- D2- AuxCurrent=0mA 
PME(D0-,D1-,D2-,D3hot-,D3cold-)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 


00:1b.0 Audio device [0403]: Intel Corporation 82801G (ICH7 Family) High 
Definition Audio Controller [8086:27d8] (rev 02) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin A routed to IRQ 16 

         Region 0: Memory at 58340000 (64-bit, non-prefetchable) 
[size=16K]
         Capabilities: [50] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=55mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [60] MSI: Enable- Count=1/1 Maskable- 64bit+ 

                 Address: 0000000000000000  Data: 0000 

         Capabilities: [70] Express (v1) Root Complex Integrated 
Endpoint, MSI 00
                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
<64ns, L1 <1us
                         ExtTag- RBE- FLReset- 

                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop+ 

                         MaxPayload 128 bytes, MaxReadReq 128 bytes 

                 DevSta: CorrErr- UncorrErr- FatalErr- UnsuppReq- 
AuxPwr+ TransPend-
                 LnkCap: Port #0, Speed unknown, Width x0, ASPM unknown, 
Latency L0 <64ns, L1 <1us
                         ClockPM- Surprise- LLActRep- BwNot- 

                 LnkCtl: ASPM Disabled; Disabled- Retrain- CommClk- 

                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt- 

                 LnkSta: Speed unknown, Width x0, TrErr- Train- SlotClk- 
DLActive- BWMgmt- ABWMgmt-
         Capabilities: [100] Virtual Channel <?> 

         Capabilities: [130] Root Complex Link <?> 

         Kernel driver in use: HDA Intel 


00:1c.0 PCI bridge [0604]: Intel Corporation 82801G (ICH7 Family) PCI 
Express Port 1 [8086:27d0] (rev 02) (prog-if 00 [Normal decode]) 
 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 

         I/O behind bridge: 00005000-00005fff 

         Memory behind bridge: 57100000-581fffff 

         Prefetchable memory behind bridge: 
0000000050000000-0000000050ffffff
         Secondary status: 66MHz- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- <SERR- <PERR-
         BridgeCtl: Parity- SERR- NoISA- VGA- MAbort- >Reset- FastB2B- 

                 PriDiscTmr- SecDiscTmr- DiscTmrStat- DiscTmrSERREn- 

         Capabilities: [40] Express (v1) Root Port (Slot+), MSI 00 

                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
unlimited, L1 unlimited
                         ExtTag- RBE- FLReset- 

                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop- 

                         MaxPayload 128 bytes, MaxReadReq 128 bytes 

                 DevSta: CorrErr- UncorrErr- FatalErr- UnsuppReq- 
AuxPwr+ TransPend-
                 LnkCap: Port #1, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 <256ns, L1 <4us
                         ClockPM- Surprise- LLActRep+ BwNot- 

                 LnkCtl: ASPM L1 Enabled; RCB 64 bytes Disabled- 
Retrain- CommClk+
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt- 

                 LnkSta: Speed 2.5GT/s, Width x1, TrErr- Train- SlotClk+ 
DLActive+ BWMgmt- ABWMgmt-
                 SltCap: AttnBtn- PwrCtrl- MRL- AttnInd- PwrInd- 
HotPlug+ Surpise+
                         Slot #  0, PowerLimit 6.500000; Interlock- 
NoCompl-
                 SltCtl: Enable: AttnBtn- PwrFlt- MRL- PresDet- CmdCplt- 
HPIrq- LinkChg-
                         Control: AttnInd Unknown, PwrInd Unknown, 
Power- Interlock-
                 SltSta: Status: AttnBtn- PowerFlt- MRL- CmdCplt- 
PresDet+ Interlock-
                         Changed: MRL- PresDet+ LinkState+ 

                 RootCtl: ErrCorrectable- ErrNon-Fatal- ErrFatal- 
PMEIntEna- CRSVisible-
                 RootCap: CRSVisible- 

                 RootSta: PME ReqID 0000, PMEStatus- PMEPending- 

         Capabilities: [80] MSI: Enable+ Count=1/1 Maskable- 64bit- 

                 Address: fee0300c  Data: 4169 

         Capabilities: [90] Subsystem: Acer Incorporated [ALI] Device 
[1025:022f]
         Capabilities: [a0] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [100] Virtual Channel <?> 

         Capabilities: [180] Root Complex Link <?> 

         Kernel driver in use: pcieport-driver 


00:1c.1 PCI bridge [0604]: Intel Corporation 82801G (ICH7 Family) PCI 
Express Port 2 [8086:27d2] (rev 02) (prog-if 00 [Normal decode]) 
 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Bus: primary=00, secondary=02, subordinate=02, sec-latency=0 

         I/O behind bridge: 00004000-00004fff 

         Memory behind bridge: 56100000-570fffff 

         Prefetchable memory behind bridge: 
0000000051000000-0000000051ffffff
         Secondary status: 66MHz- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- <SERR- <PERR-
         BridgeCtl: Parity- SERR- NoISA- VGA- MAbort- >Reset- FastB2B- 

                 PriDiscTmr- SecDiscTmr- DiscTmrStat- DiscTmrSERREn- 

         Capabilities: [40] Express (v1) Root Port (Slot+), MSI 00 

                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
unlimited, L1 unlimited
                         ExtTag- RBE- FLReset- 

                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop- 

                         MaxPayload 128 bytes, MaxReadReq 128 bytes 

                 DevSta: CorrErr- UncorrErr- FatalErr- UnsuppReq- 
AuxPwr+ TransPend-
                 LnkCap: Port #2, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 <1us, L1 <4us
                         ClockPM- Surprise- LLActRep+ BwNot- 

                 LnkCtl: ASPM Disabled; RCB 64 bytes Disabled- Retrain- 
CommClk-
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt- 

                 LnkSta: Speed 2.5GT/s, Width x0, TrErr- Train- SlotClk+ 
DLActive- BWMgmt- ABWMgmt-
                 SltCap: AttnBtn- PwrCtrl- MRL- AttnInd- PwrInd- 
HotPlug+ Surpise+
                         Slot #  1, PowerLimit 6.500000; Interlock- 
NoCompl-
                 SltCtl: Enable: AttnBtn- PwrFlt- MRL- PresDet- CmdCplt- 
HPIrq- LinkChg-
                         Control: AttnInd Unknown, PwrInd Unknown, 
Power- Interlock-
                 SltSta: Status: AttnBtn- PowerFlt- MRL- CmdCplt- 
PresDet- Interlock-
                         Changed: MRL- PresDet- LinkState- 

                 RootCtl: ErrCorrectable- ErrNon-Fatal- ErrFatal- 
PMEIntEna- CRSVisible-
                 RootCap: CRSVisible- 

                 RootSta: PME ReqID 0000, PMEStatus- PMEPending- 

         Capabilities: [80] MSI: Enable+ Count=1/1 Maskable- 64bit- 

                 Address: fee0300c  Data: 4171 

         Capabilities: [90] Subsystem: Acer Incorporated [ALI] Device 
[1025:022f]
         Capabilities: [a0] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [100] Virtual Channel <?> 

         Capabilities: [180] Root Complex Link <?> 

         Kernel driver in use: pcieport-driver 


00:1c.2 PCI bridge [0604]: Intel Corporation 82801G (ICH7 Family) PCI 
Express Port 3 [8086:27d4] (rev 02) (prog-if 00 [Normal decode]) 
 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Bus: primary=00, secondary=03, subordinate=03, sec-latency=0 

         I/O behind bridge: 00002000-00003fff 

         Memory behind bridge: 55000000-560fffff 

         Prefetchable memory behind bridge: 
0000000052000000-0000000052ffffff
         Secondary status: 66MHz- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- <SERR- <PERR-
         BridgeCtl: Parity- SERR- NoISA- VGA- MAbort- >Reset- FastB2B- 

                 PriDiscTmr- SecDiscTmr- DiscTmrStat- DiscTmrSERREn- 

         Capabilities: [40] Express (v1) Root Port (Slot+), MSI 00 

                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
unlimited, L1 unlimited
                         ExtTag- RBE- FLReset- 

                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop- 

                         MaxPayload 128 bytes, MaxReadReq 128 bytes 

                 DevSta: CorrErr- UncorrErr- FatalErr- UnsuppReq- 
AuxPwr+ TransPend-
                 LnkCap: Port #3, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 <256ns, L1 <4us
                         ClockPM- Surprise- LLActRep+ BwNot- 

                 LnkCtl: ASPM L1 Enabled; RCB 64 bytes Disabled- 
Retrain- CommClk+
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt- 

                 LnkSta: Speed 2.5GT/s, Width x1, TrErr- Train- SlotClk+ 
DLActive+ BWMgmt- ABWMgmt-
                 SltCap: AttnBtn- PwrCtrl- MRL- AttnInd- PwrInd- 
HotPlug+ Surpise+
                         Slot #  2, PowerLimit 6.500000; Interlock- 
NoCompl-
                 SltCtl: Enable: AttnBtn- PwrFlt- MRL- PresDet- CmdCplt- 
HPIrq- LinkChg-
                         Control: AttnInd Unknown, PwrInd Unknown, 
Power- Interlock-
                 SltSta: Status: AttnBtn- PowerFlt- MRL- CmdCplt- 
PresDet+ Interlock-
                         Changed: MRL- PresDet+ LinkState+ 

                 RootCtl: ErrCorrectable- ErrNon-Fatal- ErrFatal- 
PMEIntEna- CRSVisible-
                 RootCap: CRSVisible- 

                 RootSta: PME ReqID 0000, PMEStatus- PMEPending- 

         Capabilities: [80] MSI: Enable+ Count=1/1 Maskable- 64bit- 

                 Address: fee0300c  Data: 4179 

         Capabilities: [90] Subsystem: Acer Incorporated [ALI] Device 
[1025:022f]
         Capabilities: [a0] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [100] Virtual Channel <?> 

         Capabilities: [180] Root Complex Link <?> 

         Kernel driver in use: pcieport-driver 


00:1c.3 PCI bridge [0604]: Intel Corporation 82801G (ICH7 Family) PCI 
Express Port 4 [8086:27d6] (rev 02) (prog-if 00 [Normal decode]) 
 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Bus: primary=00, secondary=04, subordinate=04, sec-latency=0 

         I/O behind bridge: 00001000-00001fff 

         Memory behind bridge: 54000000-54ffffff 

         Prefetchable memory behind bridge: 
0000000053000000-0000000053ffffff
         Secondary status: 66MHz- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- <SERR- <PERR-
         BridgeCtl: Parity- SERR- NoISA- VGA- MAbort- >Reset- FastB2B- 

                 PriDiscTmr- SecDiscTmr- DiscTmrStat- DiscTmrSERREn- 

         Capabilities: [40] Express (v1) Root Port (Slot+), MSI 00 

                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
unlimited, L1 unlimited
                         ExtTag- RBE- FLReset- 

                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop- 

                         MaxPayload 128 bytes, MaxReadReq 128 bytes 

                 DevSta: CorrErr- UncorrErr- FatalErr- UnsuppReq- 
AuxPwr+ TransPend-
                 LnkCap: Port #4, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 <1us, L1 <4us
                         ClockPM- Surprise- LLActRep+ BwNot- 

                 LnkCtl: ASPM Disabled; RCB 64 bytes Disabled- Retrain- 
CommClk-
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt- 

                 LnkSta: Speed 2.5GT/s, Width x0, TrErr- Train- SlotClk+ 
DLActive- BWMgmt- ABWMgmt-
                 SltCap: AttnBtn- PwrCtrl- MRL- AttnInd- PwrInd- 
HotPlug+ Surpise+
                         Slot #  0, PowerLimit 6.500000; Interlock- 
NoCompl-
                 SltCtl: Enable: AttnBtn- PwrFlt- MRL- PresDet- CmdCplt- 
HPIrq- LinkChg-
                         Control: AttnInd Unknown, PwrInd Unknown, 
Power- Interlock-
                 SltSta: Status: AttnBtn- PowerFlt- MRL- CmdCplt- 
PresDet- Interlock-
                         Changed: MRL- PresDet- LinkState- 

                 RootCtl: ErrCorrectable- ErrNon-Fatal- ErrFatal- 
PMEIntEna- CRSVisible-
                 RootCap: CRSVisible- 

                 RootSta: PME ReqID 0000, PMEStatus- PMEPending- 

         Capabilities: [80] MSI: Enable+ Count=1/1 Maskable- 64bit- 

                 Address: fee0300c  Data: 4181 

         Capabilities: [90] Subsystem: Acer Incorporated [ALI] Device 
[1025:022f]
         Capabilities: [a0] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [100] Virtual Channel <?> 

         Capabilities: [180] Root Complex Link <?> 

         Kernel driver in use: pcieport-driver 


00:1d.0 USB Controller [0c03]: Intel Corporation 82801G (ICH7 Family) 
USB UHCI Controller #1 [8086:27c8] (rev 02) (prog-if 00 [UHCI]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin A routed to IRQ 16 

         Region 4: I/O ports at 60a0 [size=32] 

         Kernel driver in use: uhci_hcd 


00:1d.1 USB Controller [0c03]: Intel Corporation 82801G (ICH7 Family) 
USB UHCI Controller #2 [8086:27c9] (rev 02) (prog-if 00 [UHCI]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin B routed to IRQ 17 

         Region 4: I/O ports at 6080 [size=32] 

         Kernel driver in use: uhci_hcd 


00:1d.2 USB Controller [0c03]: Intel Corporation 82801G (ICH7 Family) 
USB UHCI Controller #3 [8086:27ca] (rev 02) (prog-if 00 [UHCI]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin C routed to IRQ 18 

         Region 4: I/O ports at 6060 [size=32] 

         Kernel driver in use: uhci_hcd 


00:1d.3 USB Controller [0c03]: Intel Corporation 82801G (ICH7 Family) 
USB UHCI Controller #4 [8086:27cb] (rev 02) (prog-if 00 [UHCI]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin D routed to IRQ 19 

         Region 4: I/O ports at 6040 [size=32] 

         Kernel driver in use: uhci_hcd 


00:1d.7 USB Controller [0c03]: Intel Corporation 82801G (ICH7 Family) 
USB2 EHCI Controller [8086:27cc] (rev 02) (prog-if 20 [EHCI]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin A routed to IRQ 16 

         Region 0: Memory at 58344400 (32-bit, non-prefetchable) 
[size=1K]
         Capabilities: [50] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=375mA 
PME(D0+,D1-,D2-,D3hot+,D3cold+)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Capabilities: [58] Debug port: BAR=1 offset=00a0 

         Kernel driver in use: ehci_hcd 


00:1e.0 PCI bridge [0604]: Intel Corporation 82801 Mobile PCI Bridge 
[8086:2448] (rev e2) (prog-if 01 [Subtractive decode]) 
 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Bus: primary=00, secondary=05, subordinate=05, sec-latency=32 

         Secondary status: 66MHz- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort+ <SERR- <PERR-
         BridgeCtl: Parity- SERR- NoISA- VGA- MAbort- >Reset- FastB2B- 

                 PriDiscTmr- SecDiscTmr- DiscTmrStat- DiscTmrSERREn- 

         Capabilities: [50] Subsystem: Acer Incorporated [ALI] Device 
[1025:022f]

00:1f.0 ISA bridge [0601]: Intel Corporation 82801GBM (ICH7-M) LPC 
Interface Bridge [8086:27b9] (rev 02)
         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Capabilities: [e0] Vendor Specific Information <?> 


00:1f.1 IDE interface [0101]: Intel Corporation 82801G (ICH7 Family) IDE 
Controller [8086:27df] (rev 02) (prog-if 8a [Master SecP PriP]) 
 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx+
         Latency: 0 

         Interrupt: pin A routed to IRQ 16 

         Region 0: I/O ports at 01f0 [size=8] 

         Region 1: I/O ports at 03f4 [size=1] 

         Region 2: I/O ports at 0170 [size=8] 

         Region 3: I/O ports at 0374 [size=1] 

         Region 4: I/O ports at 60c0 [size=16] 

         Kernel driver in use: ata_piix 


00:1f.2 SATA controller [0106]: Intel Corporation 82801GBM/GHM (ICH7 
Family) SATA AHCI Controller [8086:27c5] (rev 02) (prog-if 01 [AHCI 
1.0]) 

         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin B routed to IRQ 28 

         Region 0: I/O ports at 60d8 [size=8] 

         Region 1: I/O ports at 60fc [size=4] 

         Region 2: I/O ports at 60d0 [size=8] 

         Region 3: I/O ports at 60f8 [size=4] 

         Region 4: I/O ports at 6020 [size=16] 

         Region 5: Memory at 58344000 (32-bit, non-prefetchable) 
[size=1K]
         Capabilities: [80] MSI: Enable+ Count=1/1 Maskable- 64bit- 

                 Address: fee0200c  Data: 4189 

         Capabilities: [70] Power Management version 2 

                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA 
PME(D0-,D1-,D2-,D3hot+,D3cold-)
                 Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME- 

         Kernel driver in use: ahci 


00:1f.3 SMBus [0c05]: Intel Corporation 82801G (ICH7 Family) SMBus 
Controller [8086:27da] (rev 02)
         Subsystem: Acer Incorporated [ALI] Device [1025:022f] 

         Control: I/O+ Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B+ ParErr- DEVSEL=medium 
 >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
         Interrupt: pin B routed to IRQ 17 

         Region 4: I/O ports at 6000 [size=32] 

         Kernel driver in use: i801_smbus 


01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 
802.11b/g [14e4:4315] (rev 01)
         Subsystem: Foxconn International, Inc. Device [105b:e01b] 

         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx-
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0 

         Interrupt: pin A routed to IRQ 16 

         Region 0: Memory at 57100000 (64-bit, non-prefetchable) 
[size=16K]
         Capabilities: [40] Power Management version 3 

                 Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA 
PME(D0-,D1-,D2-,D3hot-,D3cold-)
                 Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=2 PME- 

         Capabilities: [58] Vendor Specific Information <?> 

         Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+ 

                 Address: 0000000000000000  Data: 0000
         Capabilities: [d0] Express (v1) Endpoint, MSI 00
                 DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s 
<4us, L1 unlimited
                         ExtTag+ AttnBtn- AttnInd- PwrInd- RBE+ FLReset-
                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop-
                         MaxPayload 128 bytes, MaxReadReq 128 bytes
                 DevSta: CorrErr+ UncorrErr- FatalErr- UnsuppReq+ 
AuxPwr- TransPend-
                 LnkCap: Port #0, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 <4us, L1 <64us
                         ClockPM+ Surprise- LLActRep- BwNot-
                 LnkCtl: ASPM L0s L1 Enabled; RCB 64 bytes Disabled- 
Retrain- CommClk+
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
                 LnkSta: Speed 2.5GT/s, Width x1, TrErr- Train- SlotClk+ 
DLActive- BWMgmt- ABWMgmt-
         Capabilities: [100] Advanced Error Reporting
                 UESta:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                 UEMsk:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                 UESvrt: DLP+ SDES- TLP- FCP+ CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF+ MalfTLP+ ECRC- UnsupReq- ACSViol-
                 CESta:  RxErr+ BadTLP- BadDLLP- Rollover- Timeout- 
NonFatalErr+
                 CEMsk:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- 
NonFatalErr+
                 AERCap: First Error Pointer: 14, GenCap+ CGenEn- 
ChkCap+ ChkEn-
         Capabilities: [13c] Virtual Channel <?>
         Capabilities: [160] Device Serial Number 00-00-00-ff-ff-00-ff-ff
         Capabilities: [16c] Power Budgeting <?>
         Kernel driver in use: b43-pci-bridge

03:00.0 Ethernet controller [0200]: Attansic Technology Corp. Device 
[1969:1062] (rev c0)
         Subsystem: Acer Incorporated [ALI] Device [1025:022f]
         Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
ParErr- Stepping- SERR- FastB2B- DisINTx+
         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
<TAbort- <MAbort- >SERR- <PERR- INTx-
         Latency: 0
         Interrupt: pin A routed to IRQ 29
         Region 0: Memory at 55000000 (64-bit, non-prefetchable) [size=256K]
         Region 2: I/O ports at 2000 [size=128]
         Capabilities: [40] Power Management version 3
                 Flags: PMEClk- DSI- D1- D2- AuxCurrent=375mA 
PME(D0+,D1+,D2+,D3hot+,D3cold+)
                 Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=0 PME-
         Capabilities: [48] MSI: Enable+ Count=1/1 Maskable- 64bit+
                 Address: 00000000fee0200c  Data: 4191
         Capabilities: [58] Express (v1) Endpoint, MSI 00
                 DevCap: MaxPayload 4096 bytes, PhantFunc 0, Latency L0s 
<4us, L1 unlimited
                         ExtTag- AttnBtn+ AttnInd+ PwrInd+ RBE+ FLReset-
                 DevCtl: Report errors: Correctable- Non-Fatal- Fatal- 
Unsupported-
                         RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop-
                         MaxPayload 128 bytes, MaxReadReq 512 bytes
                 DevSta: CorrErr- UncorrErr+ FatalErr- UnsuppReq+ 
AuxPwr+ TransPend-
                 LnkCap: Port #0, Speed 2.5GT/s, Width x1, ASPM L0s L1, 
Latency L0 unlimited, L1 unlimited
                         ClockPM+ Surprise- LLActRep- BwNot-
                 LnkCtl: ASPM L1 Enabled; RCB 64 bytes Disabled- 
Retrain- CommClk+
                         ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
                 LnkSta: Speed 2.5GT/s, Width x1, TrErr- Train- SlotClk+ 
DLActive- BWMgmt- ABWMgmt-
         Capabilities: [6c] Vital Product Data
                 Not readable
         Capabilities: [100] Advanced Error Reporting
                 UESta:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq+ ACSViol-
                 UEMsk:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                 UESvrt: DLP- SDES+ TLP- FCP- CmpltTO- CmpltAbrt- 
UnxCmplt- RxOF+ MalfTLP+ ECRC- UnsupReq- ACSViol-
                 CESta:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- 
NonFatalErr-
                 CEMsk:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- 
NonFatalErr+
                 AERCap: First Error Pointer: 14, GenCap+ CGenEn- 
ChkCap+ ChkEn-
         Capabilities: [180] Device Serial Number ff-13-f3-bf-00-26-22-ff
         Kernel driver in use: atl1c
         Kernel modules: atl1c

</snip>


From peter at stuge.se  Mon Nov 16 03:15:40 2009
From: peter at stuge.se (Peter Stuge)
Date: Mon, 16 Nov 2009 03:15:40 +0100
Subject: b43-phy0 ERROR: Fatal DMA error: 0x00000400
In-Reply-To: <69e28c910911130859n17f2c346nc7a8c603106a391d@mail.gmail.com>
	<4AFD83CA.2050508@lwfinger.net>
References: <200911130057.31365.mb@bu3sch.de> <4AFCA224.8060307@lwfinger.net>
	<200911131216.43704.mb@bu3sch.de> <4AFD83CA.2050508@lwfinger.net>
	<69e28c910911130859n17f2c346nc7a8c603106a391d@mail.gmail.com>
	<4AFA09C8.4060602@gmail.com> <200911130057.31365.mb@bu3sch.de>
	<4AFCA224.8060307@lwfinger.net> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net>
Message-ID: <20091116021540.25664.qmail@stuge.se>

Larry Finger wrote:
> merely triggered by some interaction with ACPI and/or the BIOS.
> From what I found in looking back through the DMA error reports,
> most (if not all) people with the problem have netbook computers
> with Intel ATOM processors.

G?bor Stefanik wrote:
> Linus has also reported this issue on a Core 2 ULV. I suspect that
> the key part is deep-sleep support in the CPU.

Atom has new (lower) power states, with wakeup sequences that are
very different from previous PC platforms. I don't know exact
details, unfortunately. :\


> Also, PhoenixBIOS seems to play part in the problem.

I do know that the power sequencing is not really part of the Intel
reference platform, but rather it will be solved in a microcontroller
or embedded controller by the systems designer. The BIOS needs to
support this properly. This is all new stuff on PCs. It is very
possible that there are BIOS bugs.

If you send an email to the coreboot mailing list, it is possible
that someone there has an Atom system running coreboot and would be
willing to help test if given a card. If so, they are also very
knowledgeable about the lowlevel details.


//Peter


From peter at stuge.se  Mon Nov 16 04:02:58 2009
From: peter at stuge.se (Peter Stuge)
Date: Mon, 16 Nov 2009 04:02:58 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B00A756.9040704@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4AFF0CFD.9040403@snafu.de>
	<200911142120.30202.mb@bu3sch.de>
	<200911151540.59226.mb@bu3sch.de> <4B00A756.9040704@snafu.de>
Message-ID: <20091116030258.32619.qmail@stuge.se>

Oncaphillis wrote:
> I poked around in the sbb code and found that ssb_do_read never
> returns:
> 
> <snip>
> static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)

You wrote ssb_do_read above, this is sprom_do_read. Maybe they call
each other?


> So I guess the mmio address is wrong. It is set to decimal
> -133791744 when it freezes. I don't know if that's a valid mmio
> address but it seems fishy.

$ printf %x\\n -133791744 | sed 'sx.*\(.\{8\}\)x\1x'
f8068000

Basically looks ok, but..


> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g [14e4:4315] (rev 01)
..
>          Region 0: Memory at 57100000 (64-bit, non-prefetchable) [size=16K]

It should be closer to this region.


//Peter


From oncaphillis at snafu.de  Mon Nov 16 09:21:45 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Mon, 16 Nov 2009 09:21:45 +0100
Subject: b43 kills my kernel
In-Reply-To: <20091116030258.32619.qmail@stuge.se>
References: <4AFD7C49.3000408@snafu.de>
	<4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>
	<4B00A756.9040704@snafu.de> <20091116030258.32619.qmail@stuge.se>
Message-ID: <4B010B99.4000009@snafu.de>

On 11/16/2009 04:02 AM, Peter Stuge wrote:
> Oncaphillis wrote:
>> I poked around in the sbb code and found that ssb_do_read never
>> returns:
>>
>> <snip>
>> static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
>
> You wrote ssb_do_read above, this is sprom_do_read. Maybe they call
> each other?

No I meant sprom_do_read... It was late yesterday

>
>
>> So I guess the mmio address is wrong. It is set to decimal
>> -133791744 when it freezes. I don't know if that's a valid mmio
>> address but it seems fishy.
>
> $ printf %x\\n -133791744 | sed 'sx.*\(.\{8\}\)x\1x'
> f8068000
>
> Basically looks ok, but..
>
>
>> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g [14e4:4315] (rev 01)
> ..
>>           Region 0: Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>
> It should be closer to this region.

That was my assumption too although I'm definitely not an expert on
hardware IO and address space mapping and all of this

Sebastian

>
>
> //Peter
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From Larry.Finger at lwfinger.net  Mon Nov 16 16:27:57 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Nov 2009 09:27:57 -0600
Subject: b43 kills my kernel
In-Reply-To: <4B010B99.4000009@snafu.de>
References: <4AFD7C49.3000408@snafu.de>	<4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>
	<20091116030258.32619.qmail@stuge.se> <4B010B99.4000009@snafu.de>
Message-ID: <4B016F7D.1010705@lwfinger.net>

On 11/16/2009 02:21 AM, Oncaphillis wrote:
> On 11/16/2009 04:02 AM, Peter Stuge wrote:
>> Oncaphillis wrote:
>>> I poked around in the sbb code and found that ssb_do_read never
>>> returns:
>>>
>>> <snip>
>>> static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
>>
>> You wrote ssb_do_read above, this is sprom_do_read. Maybe they call
>> each other?
> 
> No I meant sprom_do_read... It was late yesterday
> 
>>
>>
>>> So I guess the mmio address is wrong. It is set to decimal
>>> -133791744 when it freezes. I don't know if that's a valid mmio
>>> address but it seems fishy.
>>
>> $ printf %x\\n -133791744 | sed 'sx.*\(.\{8\}\)x\1x'
>> f8068000
>>
>> Basically looks ok, but..
>>
>>
>>> 01:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g [14e4:4315] (rev 01)
>> ..
>>>           Region 0: Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>
>> It should be closer to this region.
> 
> That was my assumption too although I'm definitely not an expert on
> hardware IO and address space mapping and all of this

It should match. For instance, on my system, 'lspci -nnv' returns

04:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g
[14e4:4315] (rev 01)
        Subsystem: Hewlett-Packard Company BCM4312 802.11b/g Wireless LAN
Controller [103c:137c]
        Flags: bus master, fast devsel, latency 0, IRQ 20
        Memory at fc000000 (64-bit, non-prefetchable) [size=16K]

and when I run mmio dumps for b43, all the traced addresses are at 0xfc00XXXX.

I agree that the negative decimal converts to 0xF8068000. Could you please rerun
the test with the routine changed to

static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
{
	printk(KERN_INFO "In sprom_do_read with sprom address 0x%X\n",
		bus->mmio+SSB_SPROM_BASE);
	return 1;
}

The logic that reads the SPROM will fail, but it should not freeze the computer.

After you run the above, please post your dmesg output to see where the kernel
thinks memory should be and the output from the revised sprom_do_read().

Larry


From daniel at schmitt-united.de  Mon Nov 16 20:25:54 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 16 Nov 2009 20:25:54 +0100
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4AFF55FB.8060506@lwfinger.net>
References: <4AFEA7E5.7050608@schmitt-united.de>
	<4AFF55FB.8060506@lwfinger.net>
Message-ID: <4B01A742.2030104@schmitt-united.de>

Hi Larry,

 >I think this is the first time we have seen a device that uses b43legacy with
 >any radio kill hardware. I suspect that the b43legacy_is_hw_radio_enabled() is
 >not looking at the correct bit. The hardware will obey the value on PIN13, no
 >matter what the driver does. That is why changing ...enabled() did no good.
 >
 >Please build with the attached patch, and run 2 times, once with PIN13 connected
 >and once with PIN13 disconnected. That should let us see where the state of 
 >that pin shows up.

I applied your patch.
dmesg if PIN13 is open (wire disconnected on minipci adapter):
b43legacy-phy4: Broadcom 4306 WLAN found
b43legacy-phy4 debug: Found PHY: Analog 1, Type 2, Revision 1
b43legacy-phy4 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43legacy-phy4 debug: Radio initialized
b43legacy-phy4 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
phy4: Selected rate control algorithm 'minstrel'
udev: renamed network interface wlan0 to wlan2
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
b43legacy ssb0:0: firmware: requesting b43legacy/ucode4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/pcm4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy4: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
b43legacy-phy4 debug: Chip initialized
b43legacy-phy4 debug: 30-bit DMA initialized
Registered led device: b43legacy-phy4::tx
Registered led device: b43legacy-phy4::rx
Registered led device: b43legacy-phy4::radio
b43legacy: phy rev < 3: RADIO_ENAB_LO 0xFD71
b43legacy: RADIO_ENAB_HI 0x40
b43legacy-phy4 debug: Wireless interface started
b43legacy-phy4 debug: Adding Interface type 2

dmesg if PIN13 is connected (no modifications on minipci adapter):
b43legacy-phy2: Broadcom 4306 WLAN found
b43legacy-phy2 debug: Found PHY: Analog 1, Type 2, Revision 1
b43legacy-phy2 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43legacy-phy2 debug: Radio initialized
b43legacy-phy2 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
phy2: Selected rate control algorithm 'minstrel'
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
udev: renamed network interface wlan0 to wlan1
b43legacy ssb0:0: firmware: requesting b43legacy/ucode4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/pcm4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy2: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
b43legacy-phy2 debug: Chip initialized
b43legacy-phy2 debug: 30-bit DMA initialized
Registered led device: b43legacy-phy2::tx
Registered led device: b43legacy-phy2::rx
Registered led device: b43legacy-phy2::radio
b43legacy: phy rev < 3: RADIO_ENAB_LO 0xDD71
b43legacy: RADIO_ENAB_HI 0x10001
b43legacy-phy2 debug: Wireless interface started
b43legacy-phy2 debug: Adding Interface type 2

wow, there are many different bits ...

 >Are these related to large packets? If you reduce the size to 1000, does it
 >still err?

I tested flood pings with packet size 1000 bytes.
If I do 10000 packets (it took 33 seconds), 8 packets got lost. I got 12 PHY 
transmission errors.

Yesterday I also tested downloading 200MByte via http-wget over the wireless 
link. I downgraded Linksys WRT54GL WLAN-Client to 1MBit/s bitrate. Nevertheless 
it downloaded with roughly 400kbyte/s ... ?!?
After 100 Mbyte the connection was gone.
The b43legacy hostapd-AP reported "controller restarted" after several PHY 
Transmission errors :(
here the exact dmesg:
b43legacy-phy3 ERROR: PHY transmission error
b43legacy-phy3 debug: Wireless interface stopped
b43legacy-phy3 debug: DMA-30 0x0260 (RX) max used slots: 10/64
b43legacy-phy3 debug: DMA-30 0x0200 (RX) max used slots: 11/64
b43legacy-phy3 debug: DMA-30 0x02A0 (TX) max used slots: 0/128
b43legacy-phy3 debug: DMA-30 0x0280 (TX) max used slots: 0/128
b43legacy-phy3 debug: DMA-30 0x0260 (TX) max used slots: 0/128
b43legacy-phy3 debug: DMA-30 0x0240 (TX) max used slots: 0/128
b43legacy-phy3 debug: DMA-30 0x0220 (TX) max used slots: 128/128
b43legacy-phy3 debug: DMA-30 0x0200 (TX) max used slots: 0/128
b43legacy-phy3 debug: Radio initialized
b43legacy-phy3 debug: Radio initialized
b43legacy-phy3: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
b43legacy-phy3 debug: Chip initialized
b43legacy-phy3 debug: 30-bit DMA initialized
Registered led device: b43legacy-phy3::tx
Registered led device: b43legacy-phy3::rx
Registered led device: b43legacy-phy3::radio
b43legacy-phy3 debug: Wireless interface started
__ratelimit: 270 callbacks suppressed
b43legacy-phy3: Controller restarted

I also got
b43legacy-phy2 warning: Unexpected value for chanstat (0x7C00)
b43legacy-phy2 warning: Unexpected value for chanstat (0x7C00)
before.

I'll try the driver version of b43legacy in kernel source 2.6.31.6. Perhaps it 
is not good to have bleeding edge :-)

Thanks,
Daniel



From daniel at schmitt-united.de  Mon Nov 16 20:38:43 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 16 Nov 2009 20:38:43 +0100
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4AFF55FB.8060506@lwfinger.net>
References: <4AFEA7E5.7050608@schmitt-united.de>
	<4AFF55FB.8060506@lwfinger.net>
Message-ID: <4B01AA43.1040403@schmitt-united.de>

Hi Larry, hi Michael,

I tried driver from kernel version 2.6.31.6
Here I don't even see beacons while hostapd is running. Starting hostapd with 
"-d" only produces:

relais-sb:/tmp# hostapd -d /etc/hostapd-wlan0.conf
Configuration file: /etc/hostapd-wlan0.conf
ctrl_interface_group=0
nl80211: Add own interface ifindex 25
nl80211: Add own interface ifindex 28
BSS count 1, BSSID mask 00:00:00:00:00:00 (0 bits)
nl80211: Added 802.11b mode based on 802.11g information
RATE[0] rate=10 flags=0x2
RATE[1] rate=20 flags=0x6
RATE[2] rate=55 flags=0x4
RATE[3] rate=110 flags=0x4
Completing interface initialization
Mode: IEEE 802.11b  Channel: 1  Frequency: 2412 MHz
Flushing old station entries
Deauthenticate all stations
nl_set_encr: ifindex=25 alg=0 addr=(nil) key_idx=0 set_tx=1 seq_len=0 key_len=0
nl_set_encr: ifindex=25 alg=0 addr=(nil) key_idx=1 set_tx=0 seq_len=0 key_len=0
nl_set_encr: ifindex=25 alg=0 addr=(nil) key_idx=2 set_tx=0 seq_len=0 key_len=0
nl_set_encr: ifindex=25 alg=0 addr=(nil) key_idx=3 set_tx=0 seq_len=0 key_len=0
Using interface wlan4 with hwaddr 00:0d:3a:23:5b:d5 and ssid 'test'
Using existing control interface directory.
nl80211: Set beacon (beacon_set=0)
wlan4: Setup of interface done.

^CSignal 2 received - terminating
Flushing old station entries
Deauthenticate all stations
Control interface directory not empty - leaving it behind
relais-sb:/tmp#

I can donate this wireless card to you. I can send both of you one piece. It 
would be nice to have it running.

Daniel


From Larry.Finger at lwfinger.net  Mon Nov 16 22:48:56 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Nov 2009 15:48:56 -0600
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4B01A742.2030104@schmitt-united.de>
References: <4AFEA7E5.7050608@schmitt-united.de>	<4AFF55FB.8060506@lwfinger.net>
	<4B01A742.2030104@schmitt-united.de>
Message-ID: <4B01C8C8.8070404@lwfinger.net>

On 11/16/2009 01:25 PM, Daniel Schmitt wrote:
> Hi Larry,
> 
> I applied your patch.
> dmesg if PIN13 is open (wire disconnected on minipci adapter):
> b43legacy: phy rev < 3: RADIO_ENAB_LO 0xFD71
> b43legacy: RADIO_ENAB_HI 0x40
> 
> dmesg if PIN13 is connected (no modifications on minipci adapter):
> b43legacy: phy rev < 3: RADIO_ENAB_LO 0xDD71
> b43legacy: RADIO_ENAB_HI 0x10001
> 
> wow, there are many different bits ...

Yes, but we only consider bits that are set with PIN13 open and unset with PI13
connected. This gives us bit 0x2000 in RADIO_ENAB_LO.and bit 0x0040 in
RADIO_ENAB_HI. From the specs, I expect the difference to be in RADIO_ENAB_LO.

Please try this patch:

Index: wireless-testing/drivers/net/wireless/b43legacy/b43legacy.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/b43legacy.h
+++ wireless-testing/drivers/net/wireless/b43legacy/b43legacy.h
@@ -160,7 +160,7 @@

 /* Hardware Radio Enable masks */
 #define B43legacy_MMIO_RADIO_HWENABLED_HI_MASK (1 << 16)
-#define B43legacy_MMIO_RADIO_HWENABLED_LO_MASK (1 << 4)
+#define B43legacy_MMIO_RADIO_HWENABLED_LO_MASK (1 << 13)

 /* HostFlags. See b43legacy_hf_read/write() */
 #define B43legacy_HF_SYMW		0x00000002 /* G-PHY SYM workaround */

Larry
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43legacy_debug_rfkill
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091116/b2f44a05/attachment.ksh>

From Larry.Finger at lwfinger.net  Mon Nov 16 22:58:35 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Nov 2009 15:58:35 -0600
Subject: PHY Transmission error and radio turned off with b43legacy
In-Reply-To: <4B01AA43.1040403@schmitt-united.de>
References: <4AFEA7E5.7050608@schmitt-united.de>	<4AFF55FB.8060506@lwfinger.net>
	<4B01AA43.1040403@schmitt-united.de>
Message-ID: <4B01CB0B.8050709@lwfinger.net>

On 11/16/2009 01:38 PM, Daniel Schmitt wrote:
> 
> I tried driver from kernel version 2.6.31.6
> Here I don't even see beacons while hostapd is running. Starting hostapd with 
> "-d" only produces:

There are a lot of changes in mac80211 between 2.6.31 and 2.6.32, but not many
differences in b43legacy. The AP problems are probably there.
> 
> I can donate this wireless card to you. I can send both of you one piece. It 
> would be nice to have it running.

I have no way to use a mini-PCI card, which is what I think you have. In any
case, I have a BCM4306/2 chip in a PCMCIA format. I will, however, use that card
to test prolonged ping tests.

When you were downloading with a 1 Mb/s rate set, you only set the uplink rate.
The downlink rate is set by the AP. That is why you got 400 KB/s.

Larry


From oncaphillis at snafu.de  Tue Nov 17 00:03:32 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Tue, 17 Nov 2009 00:03:32 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B016F7D.1010705@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de>	<4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>
	<20091116030258.32619.qmail@stuge.se>
	<4B010B99.4000009@snafu.de> <4B016F7D.1010705@lwfinger.net>
Message-ID: <4B01DA44.7000707@snafu.de>


> I agree that the negative decimal converts to 0xF8068000. Could you please rerun
> the test with the routine changed to
>
> static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
> {
> 	printk(KERN_INFO "In sprom_do_read with sprom address 0x%X\n",
> 		bus->mmio+SSB_SPROM_BASE);
> 	return 1;
> }

  Which gives:

  <snip>
  [    9.972581] In sprom_do_read with sprom address 0xF8079000
  </snip>

  This address is also calculated in ssbioremap

  You may have a look at the full dmesg under:

  http://oncaphillis.net/dmesg-aspire-d250.txt

> The logic that reads the SPROM will fail, but it should not freeze the computer.
>
> After you run the above, please post your dmesg output to see where the kernel
> thinks memory should be and the output from the revised sprom_do_read().
>
> Larry



From Larry.Finger at lwfinger.net  Tue Nov 17 03:07:12 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 16 Nov 2009 20:07:12 -0600
Subject: b43 kills my kernel
In-Reply-To: <4B01DA44.7000707@snafu.de>
References: <4AFD7C49.3000408@snafu.de>	<4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>
	<20091116030258.32619.qmail@stuge.se>
	<4B010B99.4000009@snafu.de> <4B016F7D.1010705@lwfinger.net>
	<4B01DA44.7000707@snafu.de>
Message-ID: <4B020550.4080307@lwfinger.net>

On 11/16/2009 05:03 PM, Oncaphillis wrote:
> 
>  Which gives:
> 
>  <snip>
>  [    9.972581] In sprom_do_read with sprom address 0xF8079000
>  </snip>
> 
>  This address is also calculated in ssbioremap
> 
>  You may have a look at the full dmesg under:
> 
>  http://oncaphillis.net/dmesg-aspire-d250.txt

Thanks for posting the dmesg. In looking through it, the only thing I noticed
was the following:

[   25.844834] 	(5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
[   25.844844] 	(5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
[   25.845455] cfg80211: Calling CRDA for country: US
[   26.115780] name_count maxed, losing inode data: dev=00:06, inode=13081
[   26.115885] name_count maxed, losing inode data: dev=00:06, inode=13081
[   26.115944] name_count maxed, losing inode data: dev=00:06, inode=13081

There are a lot of those "name_count maxed" messages. Is this a problem with
your disk?

Larry


From daniel at schmitt-united.de  Tue Nov 17 07:15:10 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Tue, 17 Nov 2009 07:15:10 +0100
Subject: PHY Transmission error and radio turned off with b43legacy
Message-ID: <51ab59276e22ee681f29560ebac67004.squirrel@unimail.uni-dortmund.de>

Larry wrote:
>There are a lot of changes in mac80211 between 2.6.31 and 2.6.32, but not
>many differences in b43legacy. The AP problems are probably there.
OK. Is there anything I can do against "PHY transmission error"?
hostapd doesn't continue to work after controller is restarted.
I also have the problem that the wlan0-interface shall not be upped with
"ifconfig wlan0 0.0.0.0 up" before starting hostapd, otherwise no beacons
will be send. The interface must be down before starting hostapd.
If I terminate a not daemonized hostapd with CTRL+C and restart if without
rmmod+modprobe b43legacy, no beacons are sent, too. And I cannot connect
the AP.
This happens with the bleeding-edge wireless drivers 2009-11-13.

>I have no way to use a mini-PCI card, which is what I think you have. In any
>case, I have a BCM4306/2 chip in a PCMCIA format. I will, however, use that
>card to test prolonged ping tests.
OK.

>When you were downloading with a 1 Mb/s rate set, you only set the uplink
>rate. The downlink rate is set by the AP. That is why you got 400 KB/s.
Thanks for the info!

Daniel



From oncaphillis at snafu.de  Tue Nov 17 10:14:38 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Tue, 17 Nov 2009 10:14:38 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B020550.4080307@lwfinger.net>
References: <4AFD7C49.3000408@snafu.de>	<4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>
	<20091116030258.32619.qmail@stuge.se>
	<4B010B99.4000009@snafu.de> <4B016F7D.1010705@lwfinger.net>
	<4B01DA44.7000707@snafu.de> <4B020550.4080307@lwfinger.net>
Message-ID: <4B02697E.7000101@snafu.de>

> Thanks for posting the dmesg. In looking through it, the only thing I noticed
> was the following:
>
> [   25.844834] 	(5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> [   25.844844] 	(5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
> [   25.845455] cfg80211: Calling CRDA for country: US
> [   26.115780] name_count maxed, losing inode data: dev=00:06, inode=13081
> [   26.115885] name_count maxed, losing inode data: dev=00:06, inode=13081
> [   26.115944] name_count maxed, losing inode data: dev=00:06, inode=13081
>
> There are a lot of those "name_count maxed" messages. Is this a problem with
> your disk?

  Thanks for looking so closely -- although it's a little bit like if
you go to the doctor for a flue remedy and (s|)he tells you you got
tuberculosis :-). I think it's harmless. It comes from within auditsc.c.
I've turned on everything in the kernel config that smelled like "more 
verbosity" and I think (hope ?) it's harmless.

So as far as I understand both the early kernel as well as lspci think
that the mmio area of the Broadcom chip is located at 57100000 only ssb
gets the wrong address. It gets set in ssbioremap via pci_iomap. So my 
guess is that the pci_dev passed to that function is not properly set
up. I'll add more debug output into the module when i find the time
and post the results.

Sebastian


From peter at stuge.se  Wed Nov 18 08:54:21 2009
From: peter at stuge.se (Peter Stuge)
Date: Wed, 18 Nov 2009 08:54:21 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B02697E.7000101@snafu.de>
References: <4AFF0CFD.9040403@snafu.de> <200911142120.30202.mb@bu3sch.de>
	<200911151540.59226.mb@bu3sch.de> <4B00A756.9040704@snafu.de>
	<20091116030258.32619.qmail@stuge.se>
	<4B010B99.4000009@snafu.de> <4B016F7D.1010705@lwfinger.net>
	<4B01DA44.7000707@snafu.de> <4B020550.4080307@lwfinger.net>
	<4B02697E.7000101@snafu.de>
Message-ID: <20091118075421.28031.qmail@stuge.se>

Oncaphillis wrote:
> So as far as I understand both the early kernel as well as lspci
> think that the mmio area of the Broadcom chip is located at
> 57100000 only ssb gets the wrong address. It gets set in ssbioremap
> via pci_iomap.

After the call to pci_iomap, the physical address (57100000) gets
mapped into a virtual address within the process address space.

So it's fine.


//Peter


From oncaphillis at snafu.de  Wed Nov 18 15:34:23 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Wed, 18 Nov 2009 15:34:23 +0100
Subject: b43 kills my kernel
In-Reply-To: <20091118075421.28031.qmail@stuge.se>
References: <4AFF0CFD.9040403@snafu.de>
	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>
	<4B00A756.9040704@snafu.de>	<20091116030258.32619.qmail@stuge.se>	<4B010B99.4000009@snafu.de>
	<4B016F7D.1010705@lwfinger.net>	<4B01DA44.7000707@snafu.de>
	<4B020550.4080307@lwfinger.net>	<4B02697E.7000101@snafu.de>
	<20091118075421.28031.qmail@stuge.se>
Message-ID: <4B0405EF.7040700@snafu.de>

On 11/18/2009 08:54 AM, Peter Stuge wrote:
> Oncaphillis wrote:
>    
>> So as far as I understand both the early kernel as well as lspci
>> think that the mmio area of the Broadcom chip is located at
>> 57100000 only ssb gets the wrong address. It gets set in ssbioremap
>> via pci_iomap.
>>      
> After the call to pci_iomap, the physical address (57100000) gets
> mapped into a virtual address within the process address space.
>
> So it's fine.
>    

Thanks for clarification. Based on the assumption that the IO mapping
is correct I had a closer look at sprom_do_read:

<snip>

         int i;
         for (i = 0; i < bus->sprom_size; i++) {
             printk(KERN_DEBUG "In sprom_do_read idx:%d\n",i);
             sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
         }

</snip>

The first ioread16 actually succeeds, only the second one fails.
My lspci -vnn tells me that the memory is:

Memory at 57100000 (64-bit, non-prefetchable) [size=16K]

Could it be that one has to make a ioread32 here since the
memory is 64-bit ? I remember very very remotely that
in older days it was impossible or even forbidden to read
data from addresses which are not a multiple of 2/4/8 what
so ever. But that was pre-PCI.

Sebastian



From mb at bu3sch.de  Wed Nov 18 15:53:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Nov 2009 15:53:49 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B0405EF.7040700@snafu.de>
References: <4AFF0CFD.9040403@snafu.de> <20091118075421.28031.qmail@stuge.se>
	<4B0405EF.7040700@snafu.de>
Message-ID: <200911181553.49521.mb@bu3sch.de>

On Wednesday 18 November 2009 15:34:23 Oncaphillis wrote:
> On 11/18/2009 08:54 AM, Peter Stuge wrote:
> > Oncaphillis wrote:
> >    
> >> So as far as I understand both the early kernel as well as lspci
> >> think that the mmio area of the Broadcom chip is located at
> >> 57100000 only ssb gets the wrong address. It gets set in ssbioremap
> >> via pci_iomap.
> >>      
> > After the call to pci_iomap, the physical address (57100000) gets
> > mapped into a virtual address within the process address space.
> >
> > So it's fine.
> >    
> 
> Thanks for clarification. Based on the assumption that the IO mapping
> is correct I had a closer look at sprom_do_read:
> 
> <snip>
> 
>          int i;
>          for (i = 0; i < bus->sprom_size; i++) {
>              printk(KERN_DEBUG "In sprom_do_read idx:%d\n",i);
>              sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
>          }
> 
> </snip>
> 
> The first ioread16 actually succeeds, only the second one fails.

What does the first ioread16 return then?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Nov 18 18:15:54 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Nov 2009 11:15:54 -0600
Subject: b43 kills my kernel
In-Reply-To: <4B0405EF.7040700@snafu.de>
References: <4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>	<20091116030258.32619.qmail@stuge.se>	<4B010B99.4000009@snafu.de>	<4B016F7D.1010705@lwfinger.net>	<4B01DA44.7000707@snafu.de>	<4B020550.4080307@lwfinger.net>	<4B02697E.7000101@snafu.de>	<20091118075421.28031.qmail@stuge.se>
	<4B0405EF.7040700@snafu.de>
Message-ID: <4B042BCA.2060902@lwfinger.net>

On 11/18/2009 08:34 AM, Oncaphillis wrote:
> The first ioread16 actually succeeds, only the second one fails.
> My lspci -vnn tells me that the memory is:
> 
> Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
> 
> Could it be that one has to make a ioread32 here since the
> memory is 64-bit ? I remember very very remotely that
> in older days it was impossible or even forbidden to read
> data from addresses which are not a multiple of 2/4/8 what
> so ever. But that was pre-PCI.

As long as a 16-bit read is aligned on an even address, it should be OK;
however, to check completely, please try this patch:

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -251,10 +251,16 @@ static int sprom_check_crc(const u16 *sp
 static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
 {
 	int i;
+	u32 buf;

-	for (i = 0; i < bus->sprom_size; i++)
-		sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
-
+	printk(KERN_INFO "ssb: Entering %s\n", __func__);
+	for (i = 0; i < bus->sprom_size; i = i + 2) {
+		buf = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 2));
+		printk(KERN_INFO "ssb: Read 0x%.8X from SPROM\n", buf);
+		sprom[i] = buf & 0x0000FFFF;
+		sprom[i+1] = (buf >> 16) & 0x0000FFFF;
+	}
+	printk(KERN_INFO "ssb: Leaving %s\n", __func__);
 	return 0;
 }



Larry



From netrolller.3d at gmail.com  Wed Nov 18 18:25:29 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Wed, 18 Nov 2009 18:25:29 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B042BCA.2060902@lwfinger.net>
References: <4AFF0CFD.9040403@snafu.de> <20091116030258.32619.qmail@stuge.se> 
	<4B010B99.4000009@snafu.de> <4B016F7D.1010705@lwfinger.net> 
	<4B01DA44.7000707@snafu.de> <4B020550.4080307@lwfinger.net> 
	<4B02697E.7000101@snafu.de> <20091118075421.28031.qmail@stuge.se> 
	<4B0405EF.7040700@snafu.de> <4B042BCA.2060902@lwfinger.net>
Message-ID: <69e28c910911180925x7213e928q5a6c2d5c06a71d02@mail.gmail.com>

On Wed, Nov 18, 2009 at 6:15 PM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 11/18/2009 08:34 AM, Oncaphillis wrote:
>> The first ioread16 actually succeeds, only the second one fails.
>> My lspci -vnn tells me that the memory is:
>>
>> Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>
>> Could it be that one has to make a ioread32 here since the
>> memory is 64-bit ? I remember very very remotely that
>> in older days it was impossible or even forbidden to read
>> data from addresses which are not a multiple of 2/4/8 what
>> so ever. But that was pre-PCI.
>
> As long as a 16-bit read is aligned on an even address, it should be OK;
> however, to check completely, please try this patch:
>
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -251,10 +251,16 @@ static int sprom_check_crc(const u16 *sp
> ?static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
> ?{
> ? ? ? ?int i;
> + ? ? ? u32 buf;
>
> - ? ? ? for (i = 0; i < bus->sprom_size; i++)
> - ? ? ? ? ? ? ? sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
> -
> + ? ? ? printk(KERN_INFO "ssb: Entering %s\n", __func__);
> + ? ? ? for (i = 0; i < bus->sprom_size; i = i + 2) {

I know this is just a debugging patch, but we use "i+=2" or "i += 2"
in such cases.

> + ? ? ? ? ? ? ? buf = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 2));
> + ? ? ? ? ? ? ? printk(KERN_INFO "ssb: Read 0x%.8X from SPROM\n", buf);
> + ? ? ? ? ? ? ? sprom[i] = buf & 0x0000FFFF;
> + ? ? ? ? ? ? ? sprom[i+1] = (buf >> 16) & 0x0000FFFF;
> + ? ? ? }
> + ? ? ? printk(KERN_INFO "ssb: Leaving %s\n", __func__);
> ? ? ? ?return 0;
> ?}
>
>
>
> Larry
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From oncaphillis at snafu.de  Wed Nov 18 18:36:12 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Wed, 18 Nov 2009 18:36:12 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B042BCA.2060902@lwfinger.net>
References: <4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>	<20091116030258.32619.qmail@stuge.se>	<4B010B99.4000009@snafu.de>	<4B016F7D.1010705@lwfinger.net>	<4B01DA44.7000707@snafu.de>	<4B020550.4080307@lwfinger.net>	<4B02697E.7000101@snafu.de>	<20091118075421.28031.qmail@stuge.se>
	<4B0405EF.7040700@snafu.de> <4B042BCA.2060902@lwfinger.net>
Message-ID: <4B04308C.2060307@snafu.de>

On 11/18/2009 06:15 PM, Larry Finger wrote:
> On 11/18/2009 08:34 AM, Oncaphillis wrote:
>    
>> The first ioread16 actually succeeds, only the second one fails.
>> My lspci -vnn tells me that the memory is:
>>
>> Memory at 57100000 (64-bit, non-prefetchable) [size=16K]
>>
>> Could it be that one has to make a ioread32 here since the
>> memory is 64-bit ? I remember very very remotely that
>> in older days it was impossible or even forbidden to read
>> data from addresses which are not a multiple of 2/4/8 what
>> so ever. But that was pre-PCI.
>>      
> As long as a 16-bit read is aligned on an even address, it should be OK;
> however, to check completely, please try this patch:
>
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -251,10 +251,16 @@ static int sprom_check_crc(const u16 *sp
>   static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
>   {
>   	int i;
> +	u32 buf;
>
> -	for (i = 0; i<  bus->sprom_size; i++)
> -		sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
> -
> +	printk(KERN_INFO "ssb: Entering %s\n", __func__);
> +	for (i = 0; i<  bus->sprom_size; i = i + 2) {
> +		buf = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 2));
> +		printk(KERN_INFO "ssb: Read 0x%.8X from SPROM\n", buf);
> +		sprom[i] = buf&  0x0000FFFF;
> +		sprom[i+1] = (buf>>  16)&  0x0000FFFF;
> +	}
> +	printk(KERN_INFO "ssb: Leaving %s\n", __func__);
>   	return 0;
>   }
>
>
>    
I already tried something similar. Unfortunately I can not report in detail
  right now since I've once again killed my kernel and my acer stands at 
home.
  I'll give more details in a couple of hours -- but the punch line is:

  (1) if I transform the series of ioread16 into a series of ioread32 
the loop
      runs through giving me a CRC error afterwards.
  (2) I tried to compensate for different endianess by doing this:

      u32 *my_buff = (u32 *)spromm;
      u32 dw;

	for (i = 0; i<  bus->sprom_size/2; i = i++) {
		dw = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 4));
                 my_buff[i] = (dw<<  16) | (dw>>  16);
	}

      Is there something fishy in that approach ? I'm really not a
      hardware hacker. Still get a CRC error.

  (3) My next approach was to do a initial ioread16 on the index 0. And
      do the given loop afterwards including an output of read double words.
      But it seems under these conditions the ioread32 fails too, since I
      can't reach my laptop anymore.

  Sebastian




> Larry
>
>    



From mb at bu3sch.de  Wed Nov 18 18:51:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Nov 2009 18:51:29 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B04308C.2060307@snafu.de>
References: <4AFF0CFD.9040403@snafu.de> <4B042BCA.2060902@lwfinger.net>
	<4B04308C.2060307@snafu.de>
Message-ID: <200911181851.31244.mb@bu3sch.de>

On Wednesday 18 November 2009 18:36:12 Oncaphillis wrote:
> > Index: wireless-testing/drivers/ssb/pci.c
> > ===================================================================
> > --- wireless-testing.orig/drivers/ssb/pci.c
> > +++ wireless-testing/drivers/ssb/pci.c
> > @@ -251,10 +251,16 @@ static int sprom_check_crc(const u16 *sp
> >   static int sprom_do_read(struct ssb_bus *bus, u16 *sprom)
> >   {
> >   	int i;
> > +	u32 buf;
> >
> > -	for (i = 0; i<  bus->sprom_size; i++)
> > -		sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
> > -
> > +	printk(KERN_INFO "ssb: Entering %s\n", __func__);
> > +	for (i = 0; i<  bus->sprom_size; i = i + 2) {
> > +		buf = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 2));
> > +		printk(KERN_INFO "ssb: Read 0x%.8X from SPROM\n", buf);
> > +		sprom[i] = buf&  0x0000FFFF;
> > +		sprom[i+1] = (buf>>  16)&  0x0000FFFF;
> > +	}
> > +	printk(KERN_INFO "ssb: Leaving %s\n", __func__);
> >   	return 0;
> >   }
> >
> >


>       u32 *my_buff = (u32 *)spromm;
>       u32 dw;
> 
> 	for (i = 0; i<  bus->sprom_size/2; i = i++) {
> 		dw = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 4));
>                  my_buff[i] = (dw<<  16) | (dw>>  16);
> 	}
> 
>       Is there something fishy in that approach ?

Yeah, completely wrong.
Use larry's patch.

I don't see why a 16bit access would hang. This code's been like this forever
and is tested on thousands of devices. We need to find out what's special about
your device. First being: Does your device actually _have_ an sprom? Or is
it some of these freaky built-in stripped-down save-two-cents devices?

So can you check what the first 16bit read returns? Just printk it.
If it returns all-ones, there's a good chance that there is no sprom at all.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Nov 18 18:51:51 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Nov 2009 11:51:51 -0600
Subject: b43 kills my kernel
In-Reply-To: <4B04308C.2060307@snafu.de>
References: <4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>	<20091116030258.32619.qmail@stuge.se>	<4B010B99.4000009@snafu.de>	<4B016F7D.1010705@lwfinger.net>	<4B01DA44.7000707@snafu.de>	<4B020550.4080307@lwfinger.net>	<4B02697E.7000101@snafu.de>	<20091118075421.28031.qmail@stuge.se>
	<4B0405EF.7040700@snafu.de> <4B042BCA.2060902@lwfinger.net>
	<4B04308C.2060307@snafu.de>
Message-ID: <4B043437.1010402@lwfinger.net>

On 11/18/2009 11:36 AM, Oncaphillis wrote:
> I already tried something similar. Unfortunately I can not report in detail
>  right now since I've once again killed my kernel and my acer stands at
> home.
>  I'll give more details in a couple of hours -- but the punch line is:
> 
>  (1) if I transform the series of ioread16 into a series of ioread32 the
> loop
>      runs through giving me a CRC error afterwards.

For you Rev. 8 SPROM, the program will get one CRC error as it first tries for
the smaller SPROM found in versions 1-3.

>  (2) I tried to compensate for different endianess by doing this:

Endianess is not an issue as you are just ding an internal transfer with le =>
le or be => be.

>      u32 *my_buff = (u32 *)spromm;
>      u32 dw;
> 
>     for (i = 0; i<  bus->sprom_size/2; i = i++) {
>         dw = ioread32(bus->mmio + SSB_SPROM_BASE + (i * 4));
>                 my_buff[i] = (dw<<  16) | (dw>>  16);
>     }

This one certainly would fail.

After you get access to the machine, please try my patch. It has been tested
here. The first few lines from the output are:

ssb: Entering sprom_do_read
ssb: Read 0x00002801 from SPROM
ssb: Read 0x103C137C from SPROM
ssb: Read 0x6DBE0078 from SPROM

Larry


From mb at bu3sch.de  Wed Nov 18 20:53:05 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Nov 2009 20:53:05 +0100
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
Message-ID: <200911182053.05488.mb@bu3sch.de>

Enforce all device constraints on the descriptor memory region.

There are several constraints on the descriptor memory, as documented
in the specification. The current code does not enforce them and/or
incorrectly enforces them.

Those constraints are:
- The address limitations on 30/32bit engines, that also apply to
  the skbs.
- The 4k alignment requirement on 30/32bit engines.
- The 8k alignment requirement on 64bit engines.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

It's not entirely clear if any 64bit devices exist that _really_ need the 8k
alignment. However, I think it does not hurt much if we enforce it anyway.
The patch removes the always-set-GFP_DMA-on-64bit-devices hack. The combination of
the new enforcements should be enough to keep every device happy, including those
which needed the GFP_DMA hack. The new code will dynamically check if GFP_DMA is
required, instead of statically doing it all the time.
John, please queue for the next feature release. This patch still needs a fair
amount of testing. I think the best way to get it is to simply apply it. If this
causes any regressions, we can (temporary) revert it.

This also is a candidate for a b43legacy backport.


Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-11-18 19:09:38.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-11-18 19:21:17.000000000 +0100
@@ -383,44 +383,160 @@ static inline
 	}
 }
 
+/* Check if a DMA region fits the device constraints.
+ * Returns true, if the region is OK for usage with this device. */
+static inline bool b43_dma_address_ok(struct b43_dmaring *ring,
+				      dma_addr_t addr, size_t size)
+{
+	switch (ring->type) {
+	case B43_DMA_30BIT:
+		if ((u64)addr + size > (1ULL << 30))
+			return 0;
+		break;
+	case B43_DMA_32BIT:
+		if ((u64)addr + size > (1ULL << 32))
+			return 0;
+		break;
+	case B43_DMA_64BIT:
+		/* Currently we can't have addresses beyond
+		 * 64bit in the kernel. */
+		break;
+	}
+	return 1;
+}
+
+#define is_4k_aligned(addr)	(((u64)(addr) & 0x0FFFull) == 0)
+#define is_8k_aligned(addr)	(((u64)(addr) & 0x1FFFull) == 0)
+
+static void b43_unmap_and_free_ringmem(struct b43_dmaring *ring, void *base,
+				       dma_addr_t dmaaddr, size_t size)
+{
+	ssb_dma_unmap_single(ring->dev->dev, dmaaddr, size, DMA_TO_DEVICE);
+	free_pages((unsigned long)base, get_order(size));
+}
+
+static void * __b43_get_and_map_ringmem(struct b43_dmaring *ring,
+					dma_addr_t *dmaaddr, size_t size,
+					gfp_t gfp_flags)
+{
+	void *base;
+
+	base = (void *)__get_free_pages(gfp_flags, get_order(size));
+	if (!base)
+		return NULL;
+	memset(base, 0, size);
+	*dmaaddr = ssb_dma_map_single(ring->dev->dev, base, size,
+				      DMA_TO_DEVICE);
+	if (ssb_dma_mapping_error(ring->dev->dev, *dmaaddr)) {
+		free_pages((unsigned long)base, get_order(size));
+		return NULL;
+	}
+
+	return base;
+}
+
+static void * b43_get_and_map_ringmem(struct b43_dmaring *ring,
+				      dma_addr_t *dmaaddr, size_t size)
+{
+	void *base;
+
+	base = __b43_get_and_map_ringmem(ring, dmaaddr, size,
+					 GFP_KERNEL);
+	if (!base) {
+		b43err(ring->dev->wl, "Failed to allocate or map pages "
+		       "for DMA ringmemory\n");
+		return NULL;
+	}
+	if (!b43_dma_address_ok(ring, *dmaaddr, size)) {
+		/* The memory does not fit our device constraints.
+		 * Retry with GFP_DMA set to get lower memory. */
+		b43_unmap_and_free_ringmem(ring, base, *dmaaddr, size);
+		base = __b43_get_and_map_ringmem(ring, dmaaddr, size,
+						 GFP_KERNEL | GFP_DMA);
+		if (!base) {
+			b43err(ring->dev->wl, "Failed to allocate or map pages "
+			       "in the GFP_DMA region for DMA ringmemory\n");
+			return NULL;
+		}
+		if (!b43_dma_address_ok(ring, *dmaaddr, size)) {
+			b43_unmap_and_free_ringmem(ring, base, *dmaaddr, size);
+			b43err(ring->dev->wl, "Failed to allocate DMA "
+			       "ringmemory that fits device constraints\n");
+			return NULL;
+		}
+	}
+	/* We expect the memory to be 4k aligned, at least. */
+	if (B43_WARN_ON(!is_4k_aligned(*dmaaddr))) {
+		b43_unmap_and_free_ringmem(ring, base, *dmaaddr, size);
+		return NULL;
+	}
+
+	return base;
+}
+
 static int alloc_ringmemory(struct b43_dmaring *ring)
 {
-	gfp_t flags = GFP_KERNEL;
+	unsigned int required;
+	void *base;
+	dma_addr_t dmaaddr;
 
-	/* The specs call for 4K buffers for 30- and 32-bit DMA with 4K
-	 * alignment and 8K buffers for 64-bit DMA with 8K alignment. Testing
-	 * has shown that 4K is sufficient for the latter as long as the buffer
-	 * does not cross an 8K boundary.
-	 *
-	 * For unknown reasons - possibly a hardware error - the BCM4311 rev
-	 * 02, which uses 64-bit DMA, needs the ring buffer in very low memory,
-	 * which accounts for the GFP_DMA flag below.
-	 *
-	 * The flags here must match the flags in free_ringmemory below!
+	/* There are several requirements to the descriptor ring memory:
+	 * - The memory region needs to fit the address constraints for the
+	 *   device (same as for frame buffers).
+	 * - For 30/32bit DMA devices, the descriptor ring must be 4k aligned.
+	 * - For 64bit DMA devices, the descriptor ring must be 8k aligned.
 	 */
+
 	if (ring->type == B43_DMA_64BIT)
-		flags |= GFP_DMA;
-	ring->descbase = ssb_dma_alloc_consistent(ring->dev->dev,
-						  B43_DMA_RINGMEMSIZE,
-						  &(ring->dmabase), flags);
-	if (!ring->descbase) {
-		b43err(ring->dev->wl, "DMA ringmemory allocation failed\n");
+		required = ring->nr_slots * sizeof(struct b43_dmadesc64);
+	else
+		required = ring->nr_slots * sizeof(struct b43_dmadesc32);
+	if (B43_WARN_ON(required > 0x1000))
 		return -ENOMEM;
-	}
-	memset(ring->descbase, 0, B43_DMA_RINGMEMSIZE);
+
+	ring->alloc_descsize = 0x1000;
+	base = b43_get_and_map_ringmem(ring, &dmaaddr, ring->alloc_descsize);
+	if (!base)
+		return -ENOMEM;
+	ring->alloc_descbase = base;
+	ring->alloc_dmabase = dmaaddr;
+
+	if ((ring->type != B43_DMA_64BIT) || is_8k_aligned(dmaaddr)) {
+		/* We're on <=32bit DMA, or we already got 8k aligned memory.
+		 * That's all we need, so we're fine. */
+		ring->descbase = base;
+		ring->dmabase = dmaaddr;
+		return 0;
+	}
+	b43_unmap_and_free_ringmem(ring, base, dmaaddr, ring->alloc_descsize);
+
+	/* Ok, we failed at the 8k alignment requirement.
+	 * Try to force-align the memory region now. */
+	ring->alloc_descsize = 0x2000;
+	base = b43_get_and_map_ringmem(ring, &dmaaddr, ring->alloc_descsize);
+	if (!base)
+		return -ENOMEM;
+	ring->alloc_descbase = base;
+	ring->alloc_dmabase = dmaaddr;
+
+	if (is_8k_aligned(dmaaddr)) {
+		/* We're already 8k aligned. That Ok, too. */
+		ring->descbase = base;
+		ring->dmabase = dmaaddr;
+		return 0;
+	}
+	/* Force-align it to 8k */
+	ring->descbase = (void *)((u8 *)base + 0x1000);
+	ring->dmabase = dmaaddr + 0x1000;
+	B43_WARN_ON(!is_8k_aligned(ring->dmabase));
 
 	return 0;
 }
 
 static void free_ringmemory(struct b43_dmaring *ring)
 {
-	gfp_t flags = GFP_KERNEL;
-
-	if (ring->type == B43_DMA_64BIT)
-		flags |= GFP_DMA;
-
-	ssb_dma_free_consistent(ring->dev->dev, B43_DMA_RINGMEMSIZE,
-				ring->descbase, ring->dmabase, flags);
+	b43_unmap_and_free_ringmem(ring, ring->alloc_descbase,
+				   ring->alloc_dmabase, ring->alloc_descsize);
 }
 
 /* Reset the RX DMA channel */
@@ -530,29 +646,14 @@ static bool b43_dma_mapping_error(struct
 	if (unlikely(ssb_dma_mapping_error(ring->dev->dev, addr)))
 		return 1;
 
-	switch (ring->type) {
-	case B43_DMA_30BIT:
-		if ((u64)addr + buffersize > (1ULL << 30))
-			goto address_error;
-		break;
-	case B43_DMA_32BIT:
-		if ((u64)addr + buffersize > (1ULL << 32))
-			goto address_error;
-		break;
-	case B43_DMA_64BIT:
-		/* Currently we can't have addresses beyond
-		 * 64bit in the kernel. */
-		break;
+	if (!b43_dma_address_ok(ring, addr, buffersize)) {
+		/* We can't support this address. Unmap it again. */
+		unmap_descbuffer(ring, addr, buffersize, dma_to_device);
+		return 1;
 	}
 
 	/* The address is OK. */
 	return 0;
-
-address_error:
-	/* We can't support this address. Unmap it again. */
-	unmap_descbuffer(ring, addr, buffersize, dma_to_device);
-
-	return 1;
 }
 
 static bool b43_rx_buffer_is_poisoned(struct b43_dmaring *ring, struct sk_buff *skb)
@@ -614,6 +715,9 @@ static int setup_rx_descbuffer(struct b4
 	meta->dmaaddr = dmaaddr;
 	ring->ops->fill_descriptor(ring, desc, dmaaddr,
 				   ring->rx_buffersize, 0, 0, 0);
+	ssb_dma_sync_single_for_device(ring->dev->dev,
+				       ring->alloc_dmabase,
+				       ring->alloc_descsize, DMA_TO_DEVICE);
 
 	return 0;
 }
@@ -1246,6 +1350,9 @@ static int dma_tx_fragment(struct b43_dm
 	}
 	/* Now transfer the whole frame. */
 	wmb();
+	ssb_dma_sync_single_for_device(ring->dev->dev,
+				       ring->alloc_dmabase,
+				       ring->alloc_descsize, DMA_TO_DEVICE);
 	ops->poke_tx(ring, next_slot(ring, slot));
 	return 0;
 
Index: wireless-testing/drivers/net/wireless/b43/dma.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.h	2009-11-18 19:09:38.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/dma.h	2009-11-18 19:29:49.000000000 +0100
@@ -157,7 +157,6 @@ struct b43_dmadesc_generic {
 } __attribute__ ((__packed__));
 
 /* Misc DMA constants */
-#define B43_DMA_RINGMEMSIZE		PAGE_SIZE
 #define B43_DMA0_RX_FRAMEOFFSET		30
 
 /* DMA engine tuning knobs */
@@ -243,6 +242,12 @@ struct b43_dmaring {
 	/* The QOS priority assigned to this ring. Only used for TX rings.
 	 * This is the mac80211 "queue" value. */
 	u8 queue_prio;
+	/* Pointers and size of the originally allocated and mapped memory
+	 * region for the descriptor ring. */
+	void *alloc_descbase;
+	dma_addr_t alloc_dmabase;
+	unsigned int alloc_descsize;
+	/* Pointer to our wireless device. */
 	struct b43_wldev *dev;
 #ifdef CONFIG_B43_DEBUG
 	/* Maximum number of used slots. */

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Nov 18 21:31:14 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Nov 2009 14:31:14 -0600
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <200911182053.05488.mb@bu3sch.de>
References: <200911182053.05488.mb@bu3sch.de>
Message-ID: <4B045992.6070600@lwfinger.net>

On 11/18/2009 01:53 PM, Michael Buesch wrote:
> Enforce all device constraints on the descriptor memory region.
> 
> There are several constraints on the descriptor memory, as documented
> in the specification. The current code does not enforce them and/or
> incorrectly enforces them.
> 
> Those constraints are:
> - The address limitations on 30/32bit engines, that also apply to
>   the skbs.
> - The 4k alignment requirement on 30/32bit engines.
> - The 8k alignment requirement on 64bit engines.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> ---
> 
> It's not entirely clear if any 64bit devices exist that _really_ need the 8k
> alignment. However, I think it does not hurt much if we enforce it anyway.
> The patch removes the always-set-GFP_DMA-on-64bit-devices hack. The combination of
> the new enforcements should be enough to keep every device happy, including those
> which needed the GFP_DMA hack. The new code will dynamically check if GFP_DMA is
> required, instead of statically doing it all the time.
> John, please queue for the next feature release. This patch still needs a fair
> amount of testing. I think the best way to get it is to simply apply it. If this
> causes any regressions, we can (temporary) revert it.
> 
> This also is a candidate for a b43legacy backport.

Tested OK for BCM4312 (14e4:4315).

I will port/test on b43legacy as I have the hardware.

Larry



From oncaphillis at snafu.de  Wed Nov 18 23:07:29 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Wed, 18 Nov 2009 23:07:29 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B043437.1010402@lwfinger.net>
References: <4AFF0CFD.9040403@snafu.de>	<200911142120.30202.mb@bu3sch.de>	<200911151540.59226.mb@bu3sch.de>	<4B00A756.9040704@snafu.de>	<20091116030258.32619.qmail@stuge.se>	<4B010B99.4000009@snafu.de>	<4B016F7D.1010705@lwfinger.net>	<4B01DA44.7000707@snafu.de>	<4B020550.4080307@lwfinger.net>	<4B02697E.7000101@snafu.de>	<20091118075421.28031.qmail@stuge.se>
	<4B0405EF.7040700@snafu.de> <4B042BCA.2060902@lwfinger.net>
	<4B04308C.2060307@snafu.de> <4B043437.1010402@lwfinger.net>
Message-ID: <4B047021.4090608@snafu.de>

On 11/18/2009 06:51 PM, Larry Finger wrote:
> After you get access to the machine, please try my patch. It has been tested
> here. The first few lines from the output are:
>
> ssb: Entering sprom_do_read
> ssb: Read 0x00002801 from SPROM
> ssb: Read 0x103C137C from SPROM
> ssb: Read 0x6DBE0078 from SPROM
>

It seems Michaels theory about a missing sprom
is correct. It gives me:

[   10.551127] ssb: Found rev 1 PMU (capabilities 0x02A62F01)
[   10.551143] ssb: Entering sprom_do_read
[   10.551152] ssb: Read 0xFFFFFFFF from SPROM
[   10.551159] ssb: Read 0xFFFFFFFF from SPROM
...
an so on

Sebastian


From mb at bu3sch.de  Wed Nov 18 23:53:42 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Nov 2009 23:53:42 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B047021.4090608@snafu.de>
References: <4AFF0CFD.9040403@snafu.de> <4B043437.1010402@lwfinger.net>
	<4B047021.4090608@snafu.de>
Message-ID: <200911182353.43876.mb@bu3sch.de>

On Wednesday 18 November 2009 23:07:29 Oncaphillis wrote:
> On 11/18/2009 06:51 PM, Larry Finger wrote:
> > After you get access to the machine, please try my patch. It has been tested
> > here. The first few lines from the output are:
> >
> > ssb: Entering sprom_do_read
> > ssb: Read 0x00002801 from SPROM
> > ssb: Read 0x103C137C from SPROM
> > ssb: Read 0x6DBE0078 from SPROM
> >
> 
> It seems Michaels theory about a missing sprom
> is correct. It gives me:
> 
> [   10.551127] ssb: Found rev 1 PMU (capabilities 0x02A62F01)
> [   10.551143] ssb: Entering sprom_do_read
> [   10.551152] ssb: Read 0xFFFFFFFF from SPROM
> [   10.551159] ssb: Read 0xFFFFFFFF from SPROM

What kind of device is that? Some laptop? I only knew about embedded devices
using these wireless cards without sprom.
Is the card connected via (mini)pci? Or is it on-board?

What we need is a way to identify the card so we avoid accessing
the dangling bus to the sprom. I'd like to avoid the read-the-first-word-
and-check-if-its-all-ones approach, because accesses a dangling bus.
That's obviously no good and can hang the CPU due to missing bus acks.

What's the lspci -vvnn output for the card?

-- 
Greetings, Michael.


From mb at bu3sch.de  Wed Nov 18 23:59:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Nov 2009 23:59:57 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911182353.43876.mb@bu3sch.de>
References: <4AFF0CFD.9040403@snafu.de> <4B047021.4090608@snafu.de>
	<200911182353.43876.mb@bu3sch.de>
Message-ID: <200911182359.59396.mb@bu3sch.de>

On Wednesday 18 November 2009 23:53:42 Michael Buesch wrote:
> On Wednesday 18 November 2009 23:07:29 Oncaphillis wrote:
> > On 11/18/2009 06:51 PM, Larry Finger wrote:
> > > After you get access to the machine, please try my patch. It has been tested
> > > here. The first few lines from the output are:
> > >
> > > ssb: Entering sprom_do_read
> > > ssb: Read 0x00002801 from SPROM
> > > ssb: Read 0x103C137C from SPROM
> > > ssb: Read 0x6DBE0078 from SPROM
> > >
> > 
> > It seems Michaels theory about a missing sprom
> > is correct. It gives me:
> > 
> > [   10.551127] ssb: Found rev 1 PMU (capabilities 0x02A62F01)
> > [   10.551143] ssb: Entering sprom_do_read
> > [   10.551152] ssb: Read 0xFFFFFFFF from SPROM
> > [   10.551159] ssb: Read 0xFFFFFFFF from SPROM
> 
> What kind of device is that? Some laptop? I only knew about embedded devices
> using these wireless cards without sprom.
> Is the card connected via (mini)pci? Or is it on-board?
> 
> What we need is a way to identify the card so we avoid accessing
> the dangling bus to the sprom. I'd like to avoid the read-the-first-word-
> and-check-if-its-all-ones approach, because accesses a dangling bus.
> That's obviously no good and can hang the CPU due to missing bus acks.
> 
> What's the lspci -vvnn output for the card?
> 

Note that the chipcommon revision on the card is 0x16. That's a pretty high number.
I wonder if they changed something and there actually _is_ an sprom on the card,
but there's just a new way to access it (or the shadow area has to be mapped through
chipcommon first or something like that)...

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Nov 19 00:39:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 00:39:06 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B0481E6.2070100@snafu.de>
References: <4AFF0CFD.9040403@snafu.de> <200911182359.59396.mb@bu3sch.de>
	<4B0481E6.2070100@snafu.de>
Message-ID: <200911190039.09038.mb@bu3sch.de>

Please keep it on-list. This is really important to get this debugged properly.

On Thursday 19 November 2009 00:23:18 Oncaphillis wrote:
> On 11/18/2009 11:59 PM, Michael Buesch wrote:
> >> What kind of device is that? Some laptop? I only knew about embedded devices
> >> using these wireless cards without sprom.
> >> Is the card connected via (mini)pci? Or is it on-board?
> >>
> >> What we need is a way to identify the card so we avoid accessing
> >> the dangling bus to the sprom. I'd like to avoid the read-the-first-word-
> >> and-check-if-its-all-ones approach, because accesses a dangling bus.
> >> That's obviously no good and can hang the CPU due to missing bus acks.
> >>
> >> What's the lspci -vvnn output for the card?
> >>
> >
> > Note that the chipcommon revision on the card is 0x16. That's a pretty high number.
> > I wonder if they changed something and there actually _is_ an sprom on the card,
> > but there's just a new way to access it (or the shadow area has to be mapped through
> > chipcommon first or something like that)...
> 
> 
> It's an acer aspire one d250 netbook

Nice. Is it possible to open the device and take a picture of the card?
It's trivial to find out this way whether it has a SPROM or not, because it's
a separate chip.

Is it this device?
http://hax0rpedia.com/index.php/Disassembeling_the_AAO_D250

Can you open the lower-right cover shown here:
http://hax0rpedia.com/index.php/File:Aao_d250_step2.jpg
and take a closeup picture of the wireless card?
Also probably a picture of the backside of the card. That'd require removing
the card, though.

We really need to find out somehow if there is a SPROM chip on the device
and if that's the case how to access it.

> You may have a look at the full lspci -vvnn output at:

Nice, thanks.

> I did a "read the first word". Surprisingly it succeeds the first time.
> After that I may still read 32bit words. When the module tries to read
> the sprom the second time looking for a larger sprom the first read16
> fails.

Well, my guess is that _any_ subsequent 16bit read would fail from then on,
because it was still waiting for the bus-ack of the first one.
If the bus really is dangling, we must avoid to access it in the first place.

> Should I try to dump out the full 16k area reported for the device ?

I don't think that would be useful.

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Thu Nov 19 00:57:07 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 19 Nov 2009 00:57:07 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911190039.09038.mb@bu3sch.de>
References: <4AFF0CFD.9040403@snafu.de> <200911182359.59396.mb@bu3sch.de> 
	<4B0481E6.2070100@snafu.de> <200911190039.09038.mb@bu3sch.de>
Message-ID: <69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>

On Thu, Nov 19, 2009 at 12:39 AM, Michael Buesch <mb at bu3sch.de> wrote:
> Please keep it on-list. This is really important to get this debugged properly.
>
> On Thursday 19 November 2009 00:23:18 Oncaphillis wrote:
>> On 11/18/2009 11:59 PM, Michael Buesch wrote:
>> >> What kind of device is that? Some laptop? I only knew about embedded devices
>> >> using these wireless cards without sprom.
>> >> Is the card connected via (mini)pci? Or is it on-board?
>> >>
>> >> What we need is a way to identify the card so we avoid accessing
>> >> the dangling bus to the sprom. I'd like to avoid the read-the-first-word-
>> >> and-check-if-its-all-ones approach, because accesses a dangling bus.
>> >> That's obviously no good and can hang the CPU due to missing bus acks.
>> >>
>> >> What's the lspci -vvnn output for the card?
>> >>
>> >
>> > Note that the chipcommon revision on the card is 0x16. That's a pretty high number.
>> > I wonder if they changed something and there actually _is_ an sprom on the card,
>> > but there's just a new way to access it (or the shadow area has to be mapped through
>> > chipcommon first or something like that)...
>>
>>
>> It's an acer aspire one d250 netbook
>
> Nice. Is it possible to open the device and take a picture of the card?
> It's trivial to find out this way whether it has a SPROM or not, because it's
> a separate chip.

Hmm... this kinda reminds me of when the SPROM died on my Asus 4318,
causing it to display as a "14e4:0008", and freeze immediately upon
any SPROM read/write attempt. Quite possibly we have something similar
here (there is an SPROM, but it's broken - without an SPROM, the card
AFAIK can't even produce a valid PCI ID).

>
> Is it this device?
> http://hax0rpedia.com/index.php/Disassembeling_the_AAO_D250
>
> Can you open the lower-right cover shown here:
> http://hax0rpedia.com/index.php/File:Aao_d250_step2.jpg
> and take a closeup picture of the wireless card?
> Also probably a picture of the backside of the card. That'd require removing
> the card, though.
>
> We really need to find out somehow if there is a SPROM chip on the device
> and if that's the case how to access it.
>
>> You may have a look at the full lspci -vvnn output at:
>
> Nice, thanks.
>
>> I did a "read the first word". Surprisingly it succeeds the first time.
>> After that I may still read 32bit words. When the module tries to read
>> the sprom the second time looking for a larger sprom the first read16
>> fails.
>
> Well, my guess is that _any_ subsequent 16bit read would fail from then on,
> because it was still waiting for the bus-ack of the first one.
> If the bus really is dangling, we must avoid to access it in the first place.
>
>> Should I try to dump out the full 16k area reported for the device ?
>
> I don't think that would be useful.
>
> --
> Greetings, Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Thu Nov 19 01:03:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Nov 2009 18:03:18 -0600
Subject: b43 kills my kernel
In-Reply-To: <69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
References: <4AFF0CFD.9040403@snafu.de> <200911182359.59396.mb@bu3sch.de>
	<4B0481E6.2070100@snafu.de> <200911190039.09038.mb@bu3sch.de>
	<69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
Message-ID: <4B048B46.1000707@lwfinger.net>

On 11/18/2009 05:57 PM, G?bor Stefanik wrote:
> Hmm... this kinda reminds me of when the SPROM died on my Asus 4318,
> causing it to display as a "14e4:0008", and freeze immediately upon
> any SPROM read/write attempt. Quite possibly we have something similar
> here (there is an SPROM, but it's broken - without an SPROM, the card
> AFAIK can't even produce a valid PCI ID).
> 

Does this card work with Windows or with the broadcom-wl driver on Linux?
Certainly the latter would tell if there is a SPROM on the device. If wl does
work, it would be useful to see an mmio dump for it. On my system, I can see the
readout of the SPROM in that dump.

Larry






From oncaphillis at snafu.de  Thu Nov 19 01:26:41 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Thu, 19 Nov 2009 01:26:41 +0100
Subject: b43 kills my kernel
In-Reply-To: <69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
References: <4AFF0CFD.9040403@snafu.de> <200911182359.59396.mb@bu3sch.de>
	<4B0481E6.2070100@snafu.de> <200911190039.09038.mb@bu3sch.de>
	<69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
Message-ID: <4B0490C1.1010808@snafu.de>

  >>
>> Is it this device?
>> http://hax0rpedia.com/index.php/Disassembeling_the_AAO_D250
>>
>> Can you open the lower-right cover shown here:
>> http://hax0rpedia.com/index.php/File:Aao_d250_step2.jpg
>> and take a closeup picture of the wireless card?
>> Also probably a picture of the backside of the card. That'd require removing
>> the card, though.


  Hmm, surprise surprise. The slot is empty. They seem to have moved
  it onto the motherborad. Please don't ask me to look at this. My
  wife will kill me.

  The official type id on the back of the laptop is "Acer One D250-0Bk"

Sebastian
 >



From mb at bu3sch.de  Thu Nov 19 01:32:18 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 01:32:18 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B0490C1.1010808@snafu.de>
References: <4AFF0CFD.9040403@snafu.de>
	<69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
	<4B0490C1.1010808@snafu.de>
Message-ID: <200911190132.20712.mb@bu3sch.de>

On Thursday 19 November 2009 01:26:41 Oncaphillis wrote:
>   >>
> >> Is it this device?
> >> http://hax0rpedia.com/index.php/Disassembeling_the_AAO_D250
> >>
> >> Can you open the lower-right cover shown here:
> >> http://hax0rpedia.com/index.php/File:Aao_d250_step2.jpg
> >> and take a closeup picture of the wireless card?
> >> Also probably a picture of the backside of the card. That'd require removing
> >> the card, though.
> 
> 
>   Hmm, surprise surprise. The slot is empty. They seem to have moved
>   it onto the motherborad.

Whoa, sick man. :)

So I think there's a fair chance that there's no sprom at all, if
the device is on-board.
So I wonder how we can identify the device. I guess the four pci-IDs
(vendor, device, subvendor, subdevice) are OK to do so?

The next problem is where to get valid sprom data from? Do you have
the original vendor driver on CD? If there's no sprom on the device,
they must ship the sprom-image with the official driver.

-- 
Greetings, Michael.


From peter at stuge.se  Thu Nov 19 01:50:58 2009
From: peter at stuge.se (Peter Stuge)
Date: Thu, 19 Nov 2009 01:50:58 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911190132.20712.mb@bu3sch.de>
References: <4AFF0CFD.9040403@snafu.de>
	<69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
	<4B0490C1.1010808@snafu.de> <200911190132.20712.mb@bu3sch.de>
Message-ID: <20091119005058.6304.qmail@stuge.se>

Michael Buesch wrote:
> >   Hmm, surprise surprise. The slot is empty. They seem to have moved
> >   it onto the motherborad.
> 
> Whoa, sick man. :)
> 
> So I think there's a fair chance that there's no sprom at all, if
> the device is on-board.

One idea is to look up the FCC ID of the laptop in the FCC database.
Since the radio is onboard, there should be photos of the internals
in the application, which is usually available as PDF online.


//Peter


From Larry.Finger at lwfinger.net  Thu Nov 19 02:34:34 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 18 Nov 2009 19:34:34 -0600
Subject: b43 kills my kernel
In-Reply-To: <69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
References: <4AFF0CFD.9040403@snafu.de> <200911182359.59396.mb@bu3sch.de>
	<4B0481E6.2070100@snafu.de> <200911190039.09038.mb@bu3sch.de>
	<69e28c910911181557v39d7b8b4ge9117ac57c0b4959@mail.gmail.com>
Message-ID: <4B04A0AA.6050306@lwfinger.net>

I just did some RE work on some SPROM routines from the Broadcom driver and
found the following:

1. They do a quick check to see if an SPROM exists. Starting at the ssb address
+ 4 * 1024, a total of 12 words (16 bit) are read. If any of them are not 0 and
not 0xFFFF, then a flag for the presence of an SPROM is set. These reads are
done using a routine named bcmjtag_read(). I have not found it yet.

2. If the flag above is not set, then they read the SPROM data from a file that
named /etc/wlan/bcmXXXX.bin, where XXXX is the chipid.

Does the CD have such files?

Larry



From william.bourque at polymtl.ca  Thu Nov 19 06:21:45 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Thu, 19 Nov 2009 00:21:45 -0500
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <200911182053.05488.mb@bu3sch.de>
References: <200911182053.05488.mb@bu3sch.de>
Message-ID: <4B04D5E9.5020500@polymtl.ca>


Michael Buesch wrote:
> Enforce all device constraints on the descriptor memory region.
> 
> There are several constraints on the descriptor memory, as documented
> in the specification. The current code does not enforce them and/or
> incorrectly enforces them.
> 
> Those constraints are:
> - The address limitations on 30/32bit engines, that also apply to
>   the skbs.
> - The 4k alignment requirement on 30/32bit engines.
> - The 8k alignment requirement on 64bit engines.
> 

No gain on my bcm4312 [14e4:4315] on HP Mini 1116R (Atom architecture). 
The DMA errors are still present.

Also, just saying, but it seems Larry's "pm_qos_update_requirement" 
patch had some good effects; I can hardly get any connectivity without 
it. With the patch, the wireless seems to be stable for a few minutes 
before generating DMA errors... without the patch the error start piling 
up as soon the interface get up.

- William


From mb at bu3sch.de  Thu Nov 19 10:50:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 10:50:49 +0100
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <4B04D5E9.5020500@polymtl.ca>
References: <200911182053.05488.mb@bu3sch.de> <4B04D5E9.5020500@polymtl.ca>
Message-ID: <200911191050.52001.mb@bu3sch.de>

On Thursday 19 November 2009 06:21:45 William Bourque wrote:
> 
> Michael Buesch wrote:
> > Enforce all device constraints on the descriptor memory region.
> > 
> > There are several constraints on the descriptor memory, as documented
> > in the specification. The current code does not enforce them and/or
> > incorrectly enforces them.
> > 
> > Those constraints are:
> > - The address limitations on 30/32bit engines, that also apply to
> >   the skbs.
> > - The 4k alignment requirement on 30/32bit engines.
> > - The 8k alignment requirement on 64bit engines.
> > 
> 
> No gain on my bcm4312 [14e4:4315] on HP Mini 1116R (Atom architecture). 
> The DMA errors are still present.

Well, this patch doesn't fix known breakages. It just _ensures_ that the device
constraints are met, so we can rule that out and can go on looking for other bugs.
Another thing is that it removes the extremely ugly always-do-GFP_DMA thing.

> Also, just saying, but it seems Larry's "pm_qos_update_requirement" 
> patch had some good effects; I can hardly get any connectivity without 
> it. With the patch, the wireless seems to be stable for a few minutes 
> before generating DMA errors... without the patch the error start piling 
> up as soon the interface get up.

I think we do need the PM_QOS stuff. It clearly fixes part of the problem.
I think we have multiple problems here.

-- 
Greetings, Michael.


From lemenkov at gmail.com  Thu Nov 19 11:11:04 2009
From: lemenkov at gmail.com (Peter Lemenkov)
Date: Thu, 19 Nov 2009 13:11:04 +0300
Subject: [Bug 538579] New: Kernel dead, when with the default b43 Firmware, a 
	while full speed downloading
In-Reply-To: <bug-538579-184522@bugzilla.redhat.com>
References: <bug-538579-184522@bugzilla.redhat.com>
Message-ID: <adf480660911190211w7bacd10bx2ad4c72f22f36904@mail.gmail.com>

Hello All!
The reporter is encountering kernel crashes while downloading at high
speed using openfwwf firmware. He claims in a separate post, that if
he switches to proprietary firmware, the problem is gome.

What additional information should I ask him?


---------- Forwarded message ----------
From:  <bugzilla at redhat.com>
Date: 2009/11/18
Subject: [Bug 538579] New: Kernel dead,  when with the default b43
Firmware, a while full speed downloading
To: lemenkov at gmail.com


Please do not reply directly to this email. All additional
comments should be made in the comments box of this bug.

Summary: Kernel dead, ?when with the default b43 Firmware, a while
full speed downloading

https://bugzilla.redhat.com/show_bug.cgi?id=538579

? ? ? ? ? Summary: Kernel dead, ?when with the default b43 Firmware, a
? ? ? ? ? ? ? ? ? ?while full speed downloading
? ? ? ? ? Product: Fedora
? ? ? ? ? Version: 12
? ? ? ? ?Platform: i686
? ? ? ?OS/Version: Linux
? ? ? ? ? ?Status: NEW
? ? ? ? ?Severity: urgent
? ? ? ? ?Priority: low
? ? ? ? Component: b43-openfwwf
? ? ? ?AssignedTo: lemenkov at gmail.com
? ? ? ?ReportedBy: wuchuanren at gmail.com
? ? ? ? QAContact: extras-qa at fedoraproject.org
? ? ? ? ? ? ? ?CC: lemenkov at gmail.com
? Estimated Hours: 0.0
? ?Classification: Fedora


Description of problem:
kernel dead

Version-Release number of selected component (if applicable):


How reproducible:
with the default b43 Firmware, a while full speed downloading

--

the problem occurs everytime,  easy to Reproduce.
my Wlan Card:
02:00.0 Network controller: Broadcom Corporation BCM4311 802.11b/g WLAN (rev
01)

there is no problem if i use the old firmwares

--

-- 
With best regards, Peter Lemenkov.


From oncaphillis at snafu.de  Thu Nov 19 12:07:30 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Thu, 19 Nov 2009 12:07:30 +0100
Subject: b43 kills my kernel
In-Reply-To: <4AFD7C49.3000408@snafu.de>
References: <4AFD7C49.3000408@snafu.de>
Message-ID: <4B0526F2.7020901@snafu.de>

So I'm at a loss here, but if someone comes up with a bright
idea to test or needs more informations I'm willing to test
the resulting code on my machine.


Sebastian



From mb at bu3sch.de  Thu Nov 19 12:09:48 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 12:09:48 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B0526F2.7020901@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4B0526F2.7020901@snafu.de>
Message-ID: <200911191209.49872.mb@bu3sch.de>

On Thursday 19 November 2009 12:07:30 Oncaphillis wrote:
> So I'm at a loss here, but if someone comes up with a bright
> idea to test or needs more informations I'm willing to test
> the resulting code on my machine.

Erm, no. Can you please answer the questions that you didn't answer, yet?
Especially the request for the original vendor driver.

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Thu Nov 19 12:16:46 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Thu, 19 Nov 2009 12:16:46 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911191209.49872.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4B0526F2.7020901@snafu.de>
	<200911191209.49872.mb@bu3sch.de>
Message-ID: <4B05291E.9010800@snafu.de>

On 11/19/2009 12:09 PM, Michael Buesch wrote:
> On Thursday 19 November 2009 12:07:30 Oncaphillis wrote:
>    
>> So I'm at a loss here, but if someone comes up with a bright
>> idea to test or needs more informations I'm willing to test
>> the resulting code on my machine.
>>      
> Erm, no. Can you please answer the questions that you didn't answer, yet?
> Especially the request for the original vendor driver.
>
>    
oh sorry. I did that, but the mail only went to larry -- stupid me -- the
device didn't come with a CD/DVD and I killed Windows XP right away.

Sorry



From oncaphillis at snafu.de  Thu Nov 19 12:29:31 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Thu, 19 Nov 2009 12:29:31 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B05291E.9010800@snafu.de>
References: <4AFD7C49.3000408@snafu.de>
	<4B0526F2.7020901@snafu.de>	<200911191209.49872.mb@bu3sch.de>
	<4B05291E.9010800@snafu.de>
Message-ID: <4B052C1B.9080608@snafu.de>

Erm, no. Can you please answer the questions that you didn't answer, yet?
>> Especially the request for the original vendor driver.
>>
>>
>>      
> oh sorry. I did that, but the mail only went to larry -- stupid me -- the
> device didn't come with a CD/DVD and I killed Windows XP right away.
>
> Sorry
>
>    
But browsing through www.acer.de I ended up at

http://global-download.acer.com/GDFiles%5CDriver/Wireless%20LAN/Wireless%20LAN_Broadcom_5.10.79.14_XPx86_A.zip?acerid=633864454005559398&Step1=Netbook&Step2=Aspire%20One&Step3=AOD250&OS=X01&LC=de&BC=Acer&SC=EMEA_8

which seems to give you the wlan drivers in a zip




From mb at bu3sch.de  Thu Nov 19 12:30:47 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 12:30:47 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B05291E.9010800@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <200911191209.49872.mb@bu3sch.de>
	<4B05291E.9010800@snafu.de>
Message-ID: <200911191230.48913.mb@bu3sch.de>

On Thursday 19 November 2009 12:16:46 Oncaphillis wrote:
> On 11/19/2009 12:09 PM, Michael Buesch wrote:
> > On Thursday 19 November 2009 12:07:30 Oncaphillis wrote:
> >    
> >> So I'm at a loss here, but if someone comes up with a bright
> >> idea to test or needs more informations I'm willing to test
> >> the resulting code on my machine.
> >>      
> > Erm, no. Can you please answer the questions that you didn't answer, yet?
> > Especially the request for the original vendor driver.
> >
> >    
> oh sorry. I did that, but the mail only went to larry -- stupid me -- the
> device didn't come with a CD/DVD and I killed Windows XP right away.

Ok, very nice. -.-

There are two major problems with not having an sprom:

- We don't have the calibration data for the radio amplifiers.
  That could possibly be solved by providing a sane default set of data
  for a device type.
- We don't have a MAC address for the card. This one is _very_ hard to
  solve properly. Several solutions come to mind, which are not
  really clean solutions:
  1) We generate a random MAC. This would change on every reboot and break udev.
     The problem with this is obvious.
  2) We generate the MAC by hashing some device-specific PCI config space values.
     I don't know if there are any device specific serial numbers or something
     similiar in PCI config space (or somewhere else).
     So the problem with this is that I don't know _what_ to hash.
  3) We use the firmware loader to get an sprom image and have a userspace script
     take care of the generation of the image.
     The problem is the major inconvenience.

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Nov 19 13:49:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 13:49:57 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B052C1B.9080608@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4B05291E.9010800@snafu.de>
	<4B052C1B.9080608@snafu.de>
Message-ID: <200911191350.00434.mb@bu3sch.de>

Can you please try the following patch?
http://bu3sch.de/patches/wireless-testing/20091119-1349/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Thu Nov 19 14:26:42 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Thu, 19 Nov 2009 14:26:42 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911191350.00434.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4B05291E.9010800@snafu.de>
	<4B052C1B.9080608@snafu.de> <200911191350.00434.mb@bu3sch.de>
Message-ID: <4B054792.3000009@snafu.de>

On 11/19/2009 01:49 PM, Michael Buesch wrote:
> Can you please try the following patch?
> http://bu3sch.de/patches/wireless-testing/20091119-1349/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
>
>    
That seems to freeze my kernel. I tell you more in a couple of hours.


From mb at bu3sch.de  Thu Nov 19 16:27:01 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 16:27:01 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B054792.3000009@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <200911191350.00434.mb@bu3sch.de>
	<4B054792.3000009@snafu.de>
Message-ID: <200911191627.03062.mb@bu3sch.de>

On Thursday 19 November 2009 14:26:42 Oncaphillis wrote:
> On 11/19/2009 01:49 PM, Michael Buesch wrote:
> > Can you please try the following patch?
> > http://bu3sch.de/patches/wireless-testing/20091119-1349/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
> >
> >    
> That seems to freeze my kernel. I tell you more in a couple of hours.

There was a small thinko.
Please test this one:
http://bu3sch.de/patches/wireless-testing/20091119-1626/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Nov 19 16:41:12 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 16:41:12 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911191627.03062.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4B054792.3000009@snafu.de>
	<200911191627.03062.mb@bu3sch.de>
Message-ID: <200911191641.14176.mb@bu3sch.de>

On Thursday 19 November 2009 16:27:01 Michael Buesch wrote:
> On Thursday 19 November 2009 14:26:42 Oncaphillis wrote:
> > On 11/19/2009 01:49 PM, Michael Buesch wrote:
> > > Can you please try the following patch?
> > > http://bu3sch.de/patches/wireless-testing/20091119-1349/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
> > >
> > >    
> > That seems to freeze my kernel. I tell you more in a couple of hours.
> 
> There was a small thinko.
> Please test this one:
> http://bu3sch.de/patches/wireless-testing/20091119-1626/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
> 

Wait, that still can't work. I'll fix it soon...

-- 
Greetings, Michael.


From lemenkov at gmail.com  Thu Nov 19 16:54:28 2009
From: lemenkov at gmail.com (Peter Lemenkov)
Date: Thu, 19 Nov 2009 18:54:28 +0300
Subject: [Bug 538579] Kernel dead, when with the default b43 Firmware, a while 
	full speed downloading
In-Reply-To: <200911191548.nAJFmHOA011479@bz-web1.app.phx.redhat.com>
References: <bug-538579-184522@bugzilla.redhat.com>
	<200911191548.nAJFmHOA011479@bz-web1.app.phx.redhat.com>
Message-ID: <adf480660911190754j13916d39ma5a023e60a8a48fe@mail.gmail.com>

Hello All!

Here is tthe additional information about the issue.


---------- Forwarded message ----------
From:  <bugzilla at redhat.com>
Date: 2009/11/19
Subject: [Bug 538579] Kernel dead,  when with the default b43
Firmware, a while full speed downloading
To: lemenkov at gmail.com


Please do not reply directly to this email. All additional
comments should be made in the comments box of this bug.


https://bugzilla.redhat.com/show_bug.cgi?id=538579


wuchuanren at gmail.com changed:

? ? ? ? ? What ? ?|Removed ? ? ? ? ? ? ? ? ? ? |Added
----------------------------------------------------------------------------
? ? ? ? ? ? ? Flag|needinfo?(wuchuanren at gmail. |
? ? ? ? ? ? ? ? ? |com) ? ? ? ? ? ? ? ? ? ? ? ?|




--- Comment #4 from wuchuanren at gmail.com ?2009-11-19 10:48:10 EDT ---
the firmware cause to crash ist b43-openfwwf-5.2-2, which is default installed
on Fedora 12.

- i removed the openfwwf-5.2-2 since some crashs then get this to work:
? http://downloads.openwrt.org/sources/broadcom-wl-4.80.53.0.tar.bz2
?which runs up to now without any crash.
?But if i reuse the penfwwf-5.2-2 and download something even over
?500kByte/s, after 2 minutes it crash again. So i think it should be the
?wireless's problem.

- the kernel is 32bit 2.6.31, just the default kernel of Fedora 12
? ?2.6.31.5-127.fc12.i686.PAE

- The Chip is builtin inside laptop. It's not easy to get a look of its label.
?Informations that i found in dmesg :

? b43-phy0: Broadcom 4311 WLAN found (core revision 10)
? Broadcom 43xx driver loaded [ Features: PML, Firmware-ID: FW13 ]


Should i try again the problematic Firmware? ?As the kernel crashs, did it left
any information? if not, how can i help to find the bug?

thank you for forgiving my poor english

----------------
Full dmesg (the firmware is the good one):
----------------

Initializing cgroup subsys cpuset
Initializing cgroup subsys cpu
Linux version 2.6.31.5-127.fc12.i686.PAE
(mockbuild at x86-3.fedora.phx.redhat.com) (gcc version 4.4.2 20091027 (Red Hat
4.4.2-7) (GCC) ) #1 SMP Sat Nov 7 21:25:57 EST 2009
KERNEL supported cpus:
?Intel GenuineIntel
?AMD AuthenticAMD
?NSC Geode by NSC
?Cyrix CyrixInstead
?Centaur CentaurHauls
?Transmeta GenuineTMx86
?Transmeta TransmetaCPU
?UMC UMC UMC UMC
BIOS-provided physical RAM map:
?BIOS-e820: 0000000000000000 - 000000000009f800 (usable)
?BIOS-e820: 000000000009f800 - 00000000000a0000 (reserved)
?BIOS-e820: 00000000000d2000 - 00000000000d4000 (reserved)
?BIOS-e820: 00000000000dc000 - 0000000000100000 (reserved)
?BIOS-e820: 0000000000100000 - 000000007f6d0000 (usable)
?BIOS-e820: 000000007f6d0000 - 000000007f6e3000 (ACPI NVS)
?BIOS-e820: 000000007f6e3000 - 0000000080000000 (reserved)
?BIOS-e820: 00000000e0000000 - 00000000f0000000 (reserved)
?BIOS-e820: 00000000fec00000 - 00000000fec10000 (reserved)
?BIOS-e820: 00000000fed00000 - 00000000fed00400 (reserved)
?BIOS-e820: 00000000fed14000 - 00000000fed1a000 (reserved)
?BIOS-e820: 00000000fed1c000 - 00000000fed90000 (reserved)
?BIOS-e820: 00000000fee00000 - 00000000fee01000 (reserved)
?BIOS-e820: 00000000ff000000 - 0000000100000000 (reserved)
DMI 2.4 present.
last_pfn = 0x7f6d0 max_arch_pfn = 0x1000000
MTRR default type: uncachable
MTRR fixed ranges enabled:
?00000-9FFFF write-back
?A0000-BFFFF uncachable
?C0000-CFFFF write-protect
?D0000-DFFFF uncachable
?E0000-FFFFF write-protect
MTRR variable ranges enabled:
?0 base 000000000 mask F80000000 write-back
?1 base 07F700000 mask FFFF00000 uncachable
?2 base 07F800000 mask FFF800000 uncachable
?3 disabled
?4 disabled
?5 disabled
?6 disabled
?7 disabled
x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
original variable MTRRs
reg 0, base: 0GB, range: 2GB, type WB
reg 1, base: 2039MB, range: 1MB, type UC
reg 2, base: 2040MB, range: 8MB, type UC
total RAM coverred: 2039M
Found optimal setting for mtrr clean up
?gran_size: 64K ?chunk_size: 16M ?num_reg: 3 ? lose cover RAM: 0G
New variable MTRRs
reg 0, base: 0GB, range: 2GB, type WB
reg 1, base: 2039MB, range: 1MB, type UC
reg 2, base: 2040MB, range: 8MB, type UC
x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
initial memory mapped : 0 - 01000000
init_memory_mapping: 0000000000000000-00000000375fe000
NX (Execute Disable) protection: active
?0000000000 - 0000200000 page 4k
?0000200000 - 0037400000 page 2M
?0037400000 - 00375fe000 page 4k
kernel direct mapping tables up to 375fe000 @ 7000-f000
RAMDISK: 37598000 - 37fef181
Allocated new RAMDISK: 00afb000 - 01552181
Move RAMDISK from 0000000037598000 - 0000000037fef180 to 00afb000 - 01552180
ACPI: RSDP 000f7830 00024 (v02 PTLTD )
ACPI: XSDT 7f6d7f14 00084 (v01 LENOVO CB-01 ? ?06040000 ?LTP 00000000)
ACPI: FACP 7f6dfbd2 000F4 (v03 LENOVO CB-01 ? ?06040000 ALAN 00000001)
ACPI: DSDT 7f6d9120 06A3E (v02 LENOVO CB-01 ? ?06040000 INTL 20050624)
ACPI: FACS 7f6e2fc0 00040
ACPI: APIC 7f6dfcc6 00068 (v01 LENOVO CB-01 ? ?06040000 LOHR 0000005A)
ACPI: HPET 7f6dfd2e 00038 (v01 LENOVO CB-01 ? ?06040000 LOHR 0000005A)
ACPI: MCFG 7f6dfd66 0003C (v01 LENOVO CB-01 ? ?06040000 LOHR 0000005A)
ACPI: TCPA 7f6dfda2 00032 (v01 LENOVO CB-01 ? ?06040000 ? ? ?00005A52)
ACPI: TMOR 7f6dfdd4 00026 (v01 LENOVO CB-01 ? ?06040000 PTL ?00000003)
ACPI: APIC 7f6dfdfa 00068 (v01 LENOVO CB-01 ? ?06040000 ?LTP 00000000)
ACPI: BOOT 7f6dfe62 00028 (v01 LENOVO CB-01 ? ?06040000 ?LTP 00000001)
ACPI: SLIC 7f6dfe8a 00176 (v01 LENOVO CB-01 ? ?06040000 ?LTP 00000000)
ACPI: SSDT 7f6d8524 0025F (v01 ?PmRef ?Cpu0Tst 00003000 INTL 20050624)
ACPI: SSDT 7f6d847e 000A6 (v01 ?PmRef ?Cpu1Tst 00003000 INTL 20050624)
ACPI: SSDT 7f6d7f98 004E6 (v01 ?PmRef ? ?CpuPm 00003000 INTL 20050624)
ACPI: BIOS bug: multiple APIC/MADT found, using 0
ACPI: If "acpi_apic_instance=2" works better, notify linux-acpi at vger.kernel.org
ACPI: Local APIC address 0xfee00000
1152MB HIGHMEM available.
885MB LOWMEM available.
?mapped low ram: 0 - 375fe000
?low ram: 0 - 375fe000
?node 0 low ram: 00000000 - 375fe000
?node 0 bootmap 0000b000 - 00011ec0
(9 early reservations) ==> bootmem [0000000000 - 00375fe000]
?#0 [0000000000 - 0000001000] ? BIOS data page ==> [0000000000 - 0000001000]
?#1 [0000001000 - 0000002000] ? ?EX TRAMPOLINE ==> [0000001000 - 0000002000]
?#2 [0000006000 - 0000007000] ? ? ? TRAMPOLINE ==> [0000006000 - 0000007000]
?#3 [0000400000 - 0000af1210] ? ?TEXT DATA BSS ==> [0000400000 - 0000af1210]
?#4 [000009f800 - 0000100000] ? ?BIOS reserved ==> [000009f800 - 0000100000]
?#5 [0000af2000 - 0000afa200] ? ? ? ? ? ? ?BRK ==> [0000af2000 - 0000afa200]
?#6 [0000007000 - 000000b000] ? ? ? ? ?PGTABLE ==> [0000007000 - 000000b000]
?#7 [0000afb000 - 0001552181] ? ? ?NEW RAMDISK ==> [0000afb000 - 0001552181]
?#8 [000000b000 - 0000012000] ? ? ? ? ?BOOTMAP ==> [000000b000 - 0000012000]
found SMP MP-table at [c00f7910] f7910
Zone PFN ranges:
?DMA ? ? ?0x00000000 -> 0x00001000
?Normal ? 0x00001000 -> 0x000375fe
?HighMem ?0x000375fe -> 0x0007f6d0
Movable zone start PFN for each node
early_node_map[2] active PFN ranges
? ?0: 0x00000000 -> 0x0000009f
? ?0: 0x00000100 -> 0x0007f6d0
On node 0 totalpages: 521839
free_area_init_node: node 0, pgdat c0995ba0, node_mem_map c1553000
?DMA zone: 32 pages used for memmap
?DMA zone: 0 pages reserved
?DMA zone: 3967 pages, LIFO batch:0
?Normal zone: 1740 pages used for memmap
?Normal zone: 220978 pages, LIFO batch:31
?HighMem zone: 2306 pages used for memmap
?HighMem zone: 292816 pages, LIFO batch:31
Using APIC driver default
ACPI: PM-Timer IO Port: 0x1008
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] enabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x01] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 1, version 32, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Enabling APIC mode: ?Flat. ?Using 1 I/O APICs
Using ACPI (MADT) for SMP configuration information
ACPI: HPET id: 0x8086a201 base: 0xfed00000
SMP: Allowing 2 CPUs, 0 hotplug CPUs
nr_irqs_gsi: 24
PM: Registered nosave memory: 000000000009f000 - 00000000000a0000
PM: Registered nosave memory: 00000000000a0000 - 00000000000d2000
PM: Registered nosave memory: 00000000000d2000 - 00000000000d4000
PM: Registered nosave memory: 00000000000d4000 - 00000000000dc000
PM: Registered nosave memory: 00000000000dc000 - 0000000000100000
Allocating PCI resources starting at 80000000 (gap: 80000000:60000000)
NR_CPUS:32 nr_cpumask_bits:32 nr_cpu_ids:2 nr_node_ids:1
PERCPU: Embedded 15 pages at c254d000, static data 37788 bytes
Built 1 zonelists in Zone order, mobility grouping on. ?Total pages: 517761
Kernel command line: ro root=UUID=a3efaa00-09cd-45af-8e3b-93da364edf67
LANG=de_DE.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc
KEYTABLE=de-latin1-nodeadkeys rhgb quiet
PID hash table entries: 4096 (order: 12, 16384 bytes)
Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
Enabling fast FPU save and restore... done.
Enabling unmasked SIMD FPU exception support... done.
Initializing CPU#0
allocated 10438720 bytes of page_cgroup
please try 'cgroup_disable=memory' option if you don't want memory cgroups
Initializing HighMem for node 0 (000375fe:0007f6d0)
Memory: 2041248k/2087744k available (3569k kernel code, 45252k reserved, 2214k
data, 448k init, 1180488k highmem)
virtual kernel memory layout:
? ?fixmap ?: 0xffad5000 - 0xfffff000 ? (5288 kB)
? ?pkmap ? : 0xff600000 - 0xff800000 ? (2048 kB)
? ?vmalloc : 0xf7dfe000 - 0xff5fe000 ? ( 120 MB)
? ?lowmem ?: 0xc0000000 - 0xf75fe000 ? ( 885 MB)
? ? ?.init : 0xc09a7000 - 0xc0a17000 ? ( 448 kB)
? ? ?.data : 0xc077c76f - 0xc09a6028 ? (2214 kB)
? ? ?.text : 0xc0400000 - 0xc077c76f ? (3569 kB)
Checking if this processor honours the WP bit even in supervisor mode...Ok.
SLUB: Genslabs=13, HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
Hierarchical RCU implementation.
NR_IRQS:1280
Extended CMOS year: 2000
Fast TSC calibration using PIT
Detected 1596.245 MHz processor.
Console: colour VGA+ 80x25
console [tty0] enabled
hpet clockevent registered
HPET: 3 timers in total, 0 timers will be used for per-cpu timer
Calibrating delay loop (skipped), value calculated using timer frequency..
3192.49 BogoMIPS (lpj=1596245)
Security Framework initialized
SELinux: ?Initializing.
SELinux: ?Starting in permissive mode
Mount-cache hash table entries: 512
Initializing cgroup subsys ns
Initializing cgroup subsys cpuacct
Initializing cgroup subsys memory
Initializing cgroup subsys devices
Initializing cgroup subsys freezer
Initializing cgroup subsys net_cls
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 1024K
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 0
mce: CPU supports 6 MCE banks
CPU0: Thermal monitoring handled by SMI
using mwait in idle threads.
Performance Counters: Core2 events, Intel PMU driver.
... version: ? ? ? ? ? ? ? ? 2
... bit width: ? ? ? ? ? ? ? 40
... generic counters: ? ? ? ?2
... value mask: ? ? ? ? ? ? ?000000ffffffffff
... max period: ? ? ? ? ? ? ?000000007fffffff
... fixed-purpose counters: ?3
... counter mask: ? ? ? ? ? ?0000000700000003
Checking 'hlt' instruction... OK.
ACPI: Core revision 20090521
ftrace: converting mcount calls to 0f 1f 44 00 00
ftrace: allocating 20611 entries in 41 pages
..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
CPU0: Intel(R) Pentium(R) Dual ?CPU ?T2330 ?@ 1.60GHz stepping 0d
Booting processor 1 APIC 0x1 ip 0x6000
Initializing CPU#1
Calibrating delay using timer specific routine.. 3255.68 BogoMIPS (lpj=1627841)
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 1024K
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 1
mce: CPU supports 6 MCE banks
CPU1: Thermal monitoring handled by SMI
x86 PAT enabled: cpu 1, old 0x7040600070406, new 0x7010600070106
CPU1: Intel(R) Pentium(R) Dual ?CPU ?T2330 ?@ 1.60GHz stepping 0d
checking TSC synchronization [CPU#0 -> CPU#1]: passed.
Brought up 2 CPUs
Total of 2 processors activated (6448.17 BogoMIPS).
sizeof(vma)=88 bytes
sizeof(page)=32 bytes
sizeof(inode)=352 bytes
sizeof(dentry)=132 bytes
sizeof(ext3inode)=500 bytes
sizeof(buffer_head)=56 bytes
sizeof(skbuff)=192 bytes
sizeof(task_struct)=3256 bytes
CPU0 attaching sched-domain:
?domain 0: span 0-1 level MC
?groups: 0 1
CPU1 attaching sched-domain:
?domain 0: span 0-1 level MC
?groups: 1 0
Booting paravirtualized kernel on bare hardware
regulator: core version 0.5
Time: ?9:50:05 ?Date: 11/19/09
NET: Registered protocol family 16
ACPI: bus type pci registered
PCI: MCFG configuration 0: base e0000000 segment 0 buses 0 - 255
PCI: MCFG area at e0000000 reserved in E820
PCI: Using MMCONFIG for extended config space
PCI: Using configuration type 1 for base access
bio: create slab <bio-0> at 0
ACPI: EC: Look up EC in DSDT
ACPI: BIOS _OSI(Linux) query ignored
ACPI: EC: non-query interrupt received, switching to interrupt mode
ACPI: Interpreter enabled
ACPI: (supports S0 S3 S4 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: EC: GPE = 0x17, I/O: command/status = 0x66, data = 0x62
ACPI: EC: driver started in interrupt mode
ACPI: No dock devices found.
ACPI: PCI Root Bridge [PCI0] (0000:00)
pci 0000:00:02.0: reg 10 64bit mmio: [0xf8000000-0xf80fffff]
pci 0000:00:02.0: reg 18 64bit mmio: [0xd0000000-0xdfffffff]
pci 0000:00:02.0: reg 20 io port: [0x1800-0x1807]
pci 0000:00:02.1: reg 10 64bit mmio: [0xf8100000-0xf81fffff]
pci 0000:00:1a.0: reg 20 io port: [0x1820-0x183f]
pci 0000:00:1a.7: reg 10 32bit mmio: [0xf8604000-0xf86043ff]
pci 0000:00:1a.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1a.7: PME# disabled
pci 0000:00:1b.0: reg 10 64bit mmio: [0xf8400000-0xf8403fff]
pci 0000:00:1b.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1b.0: PME# disabled
pci 0000:00:1c.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.0: PME# disabled
pci 0000:00:1c.2: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.2: PME# disabled
pci 0000:00:1c.5: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.5: PME# disabled
pci 0000:00:1d.0: reg 20 io port: [0x1840-0x185f]
pci 0000:00:1d.1: reg 20 io port: [0x1860-0x187f]
pci 0000:00:1d.2: reg 20 io port: [0x1880-0x189f]
pci 0000:00:1d.7: reg 10 32bit mmio: [0xf8604400-0xf86047ff]
pci 0000:00:1d.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1d.7: PME# disabled
pci 0000:00:1f.0: quirk: region 1000-107f claimed by ICH6 ACPI/GPIO/TCO
pci 0000:00:1f.0: quirk: region 1180-11bf claimed by ICH6 GPIO
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 1 PIO at 0068 (mask 0007)
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 2 PIO at 1600 (mask 000f)
pci 0000:00:1f.2: reg 10 io port: [0x00-0x07]
pci 0000:00:1f.2: reg 14 io port: [0x00-0x03]
pci 0000:00:1f.2: reg 18 io port: [0x00-0x07]
pci 0000:00:1f.2: reg 1c io port: [0x00-0x03]
pci 0000:00:1f.2: reg 20 io port: [0x18c0-0x18cf]
pci 0000:00:1f.2: reg 24 io port: [0x18b0-0x18bf]
pci 0000:00:1f.2: PME# supported from D3hot
pci 0000:00:1f.2: PME# disabled
pci 0000:00:1f.3: reg 10 32bit mmio: [0x000000-0x0000ff]
pci 0000:00:1f.3: reg 20 io port: [0x18e0-0x18ff]
pci 0000:02:00.0: reg 10 32bit mmio: [0xf8300000-0xf8303fff]
pci 0000:02:00.0: supports D1 D2
pci 0000:02:00.0: disabling ASPM on pre-1.1 PCIe device. ?You can enable it
with 'pcie_aspm=force'
pci 0000:00:1c.0: bridge 32bit mmio: [0xf8300000-0xf83fffff]
pci 0000:00:1c.2: bridge io port: [0x2000-0x2fff]
pci 0000:00:1c.2: bridge 32bit mmio: [0xf4000000-0xf7ffffff]
pci 0000:00:1c.2: bridge 64bit mmio pref: [0xf0000000-0xf3ffffff]
pci 0000:06:00.0: reg 10 64bit mmio: [0xf8200000-0xf820ffff]
pci 0000:06:00.0: PME# supported from D3hot D3cold
pci 0000:06:00.0: PME# disabled
pci 0000:00:1c.5: bridge 32bit mmio: [0xf8200000-0xf82fffff]
pci 0000:00:1e.0: transparent bridge
pci_bus 0000:00: on NUMA node 0
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP01._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP03._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP06._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PCIB._PRT]
ACPI: PCI Interrupt Link [LNKA] (IRQs 1 3 4 5 6 7 10 12 14 15) *11
ACPI: PCI Interrupt Link [LNKB] (IRQs 1 3 *4 5 6 7 11 12 14 15)
ACPI: PCI Interrupt Link [LNKC] (IRQs 1 3 4 *5 6 7 10 12 14 15)
ACPI: PCI Interrupt Link [LNKD] (IRQs 1 3 4 5 6 7 11 12 14 15) *10
ACPI: PCI Interrupt Link [LNKE] (IRQs 1 3 4 5 6 7 10 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LNKF] (IRQs 1 3 4 5 6 7 11 12 14 15) *0, disabled.
ACPI: PCI Interrupt Link [LNKG] (IRQs 1 3 4 5 6 *7 10 12 14 15)
ACPI: PCI Interrupt Link [LNKH] (IRQs 1 *3 4 5 6 7 11 12 14 15)
vgaarb: device added: PCI:0000:00:02.0,decodes=io+mem,owns=io+mem,locks=none
vgaarb: loaded
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
PCI: old code would have set cacheline size to 32 bytes, but clflush_size = 64
PCI: pci_cache_line_size set to 64 bytes
NetLabel: Initializing
NetLabel: ?domain hash size = 128
NetLabel: ?protocols = UNLABELED CIPSOv4
NetLabel: ?unlabeled traffic allowed by default
hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
hpet0: 3 comparators, 64-bit 14.318180 MHz counter
pnp: PnP ACPI init
ACPI: bus type pnp registered
pnp: PnP ACPI: found 10 devices
ACPI: ACPI bus type pnp unregistered
system 00:01: iomem range 0xfed1c000-0xfed1ffff has been reserved
system 00:01: iomem range 0xfed14000-0xfed17fff has been reserved
system 00:01: iomem range 0xfed18000-0xfed18fff has been reserved
system 00:01: iomem range 0xfed19000-0xfed19fff has been reserved
system 00:01: iomem range 0xe0000000-0xefffffff has been reserved
system 00:01: iomem range 0xfed20000-0xfed3ffff has been reserved
system 00:01: iomem range 0xfed45000-0xfed8ffff has been reserved
system 00:04: iomem range 0xfed00000-0xfed003ff has been reserved
system 00:06: ioport range 0x680-0x69f has been reserved
system 00:06: ioport range 0x800-0x80f has been reserved
system 00:06: ioport range 0x1000-0x107f has been reserved
system 00:06: ioport range 0x1180-0x11bf has been reserved
system 00:06: ioport range 0xfe00-0xfe00 has been reserved
system 00:06: ioport range 0x1600-0x160f has been reserved
pci 0000:00:1c.0: PCI bridge, secondary bus 0000:02
pci 0000:00:1c.0: ? IO window: disabled
pci 0000:00:1c.0: ? MEM window: 0xf8300000-0xf83fffff
pci 0000:00:1c.0: ? PREFETCH window: disabled
pci 0000:00:1c.2: PCI bridge, secondary bus 0000:04
pci 0000:00:1c.2: ? IO window: 0x2000-0x2fff
pci 0000:00:1c.2: ? MEM window: 0xf4000000-0xf7ffffff
pci 0000:00:1c.2: ? PREFETCH window: 0x000000f0000000-0x000000f3ffffff
pci 0000:00:1c.5: PCI bridge, secondary bus 0000:06
pci 0000:00:1c.5: ? IO window: disabled
pci 0000:00:1c.5: ? MEM window: 0xf8200000-0xf82fffff
pci 0000:00:1c.5: ? PREFETCH window: disabled
pci 0000:00:1e.0: PCI bridge, secondary bus 0000:07
pci 0000:00:1e.0: ? IO window: disabled
pci 0000:00:1e.0: ? MEM window: disabled
pci 0000:00:1e.0: ? PREFETCH window: disabled
pci 0000:00:1c.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.0: setting latency timer to 64
pci 0000:00:1c.2: PCI INT C -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:1c.2: setting latency timer to 64
pci 0000:00:1c.5: PCI INT B -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:1c.5: setting latency timer to 64
pci 0000:00:1e.0: setting latency timer to 64
pci_bus 0000:00: resource 0 io: ?[0x00-0xffff]
pci_bus 0000:00: resource 1 mem: [0x000000-0xffffffffffffffff]
pci_bus 0000:02: resource 1 mem: [0xf8300000-0xf83fffff]
pci_bus 0000:04: resource 0 io: ?[0x2000-0x2fff]
pci_bus 0000:04: resource 1 mem: [0xf4000000-0xf7ffffff]
pci_bus 0000:04: resource 2 pref mem [0xf0000000-0xf3ffffff]
pci_bus 0000:06: resource 1 mem: [0xf8200000-0xf82fffff]
pci_bus 0000:07: resource 3 io: ?[0x00-0xffff]
pci_bus 0000:07: resource 4 mem: [0x000000-0xffffffffffffffff]
NET: Registered protocol family 2
IP route cache hash table entries: 32768 (order: 5, 131072 bytes)
TCP established hash table entries: 131072 (order: 8, 1048576 bytes)
TCP bind hash table entries: 65536 (order: 7, 524288 bytes)
TCP: Hash tables configured (established 131072 bind 65536)
TCP reno registered
NET: Registered protocol family 1
Trying to unpack rootfs image as initramfs...
Switched to high resolution mode on CPU 1
Switched to high resolution mode on CPU 0
Freeing initrd memory: 10588k freed
Simple Boot Flag at 0x36 set to 0x1
apm: BIOS not found.
audit: initializing netlink socket (disabled)
type=2000 audit(1258624205.565:1): initialized
highmem bounce pool size: 64 pages
HugeTLB registered 2 MB page size, pre-allocated 0 pages
VFS: Disk quotas dquot_6.5.2
Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
msgmni has been set to 1703
SELinux: ?Registering netfilter hooks
alg: No test for stdrng (krng)
Block layer SCSI generic (bsg) driver version 0.4 loaded (major 252)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
pci 0000:00:02.0: Boot video device
pcieport-driver 0000:00:1c.0: irq 24 for MSI/MSI-X
pcieport-driver 0000:00:1c.0: setting latency timer to 64
pcieport-driver 0000:00:1c.2: irq 25 for MSI/MSI-X
pcieport-driver 0000:00:1c.2: setting latency timer to 64
pcieport-driver 0000:00:1c.5: irq 26 for MSI/MSI-X
pcieport-driver 0000:00:1c.5: setting latency timer to 64
pci_hotplug: PCI Hot Plug PCI Core version: 0.5
pciehp: PCI Express Hot Plug Controller Driver version: 0.4
acpiphp: ACPI Hot Plug PCI Controller Driver version: 0.5
acpiphp_glue: can't get bus number, assuming 0
decode_hpp: Could not get hotplug parameters. Use defaults
acpiphp: Slot [1] registered
ACPI: AC Adapter [ACAD] (on-line)
input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
ACPI: Power Button [PWRF]
input: Lid Switch as /devices/LNXSYSTM:00/device:00/PNP0C0D:00/input/input1
ACPI: Lid Switch [LID]
input: Power Button as /devices/LNXSYSTM:00/device:00/PNP0C0C:00/input/input2
ACPI: Power Button [PWRB]
input: Sleep Button as /devices/LNXSYSTM:00/device:00/PNP0C0E:00/input/input3
ACPI: Sleep Button [SLPB]
ACPI: SSDT 7f6d8e11 00247 (v01 ?PmRef ?Cpu0Ist 00003000 INTL 20050624)
ACPI: SSDT 7f6d8783 00609 (v01 ?PmRef ?Cpu0Cst 00003001 INTL 20050624)
Monitor-Mwait will be used to enter C-1 state
Monitor-Mwait will be used to enter C-2 state
Monitor-Mwait will be used to enter C-3 state
Marking TSC unstable due to TSC halts in idle
ACPI: CPU0 (power states: C1[C1] C2[C2] C3[C3])
processor LNXCPU:00: registered as cooling_device0
ACPI: Processor [CPU0] (supports 8 throttling states)
ACPI: SSDT 7f6d9058 000C8 (v01 ?PmRef ?Cpu1Ist 00003000 INTL 20050624)
ACPI: SSDT 7f6d8d8c 00085 (v01 ?PmRef ?Cpu1Cst 00003000 INTL 20050624)
ACPI: CPU1 (power states: C1[C1] C2[C2] C3[C3])
processor LNXCPU:01: registered as cooling_device1
ACPI: Processor [CPU1] (supports 8 throttling states)
thermal LNXTHERM:01: registered as thermal_zone0
ACPI: Thermal Zone [TZ00] (40 C)
isapnp: Scanning for PnP cards...
isapnp: No Plug & Play device found
Non-volatile memory driver v1.3
Linux agpgart interface v0.103
agpgart-intel 0000:00:00.0: Intel 965GM Chipset
agpgart-intel 0000:00:00.0: detected 7676K stolen memory
agpgart-intel 0000:00:00.0: AGP aperture is 256M @ 0xd0000000
Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
brd: module loaded
loop: module loaded
input: Macintosh mouse button emulation as /devices/virtual/input/input4
ata_piix 0000:00:1f.2: version 2.13
ata_piix 0000:00:1f.2: PCI INT B -> GSI 19 (level, low) -> IRQ 19
ata_piix 0000:00:1f.2: MAP [ P0 P2 IDE IDE ]
ata_piix 0000:00:1f.2: setting latency timer to 64
scsi0 : ata_piix
scsi1 : ata_piix
ata1: SATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x18c0 irq 14
ata2: PATA max UDMA/100 cmd 0x170 ctl 0x376 bmdma 0x18c8 irq 15
Fixed MDIO Bus: probed
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci_hcd 0000:00:1a.7: PCI INT C -> GSI 18 (level, low) -> IRQ 18
ehci_hcd 0000:00:1a.7: setting latency timer to 64
ehci_hcd 0000:00:1a.7: EHCI Host Controller
ehci_hcd 0000:00:1a.7: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:1a.7: debug port 1
ehci_hcd 0000:00:1a.7: cache line size of 64 is not supported
ehci_hcd 0000:00:1a.7: irq 18, io mem 0xf8604000
ehci_hcd 0000:00:1a.7: USB 2.0 started, EHCI 1.00
usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb1: Product: EHCI Host Controller
usb usb1: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE ehci_hcd
usb usb1: SerialNumber: 0000:00:1a.7
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 2 ports detected
ehci_hcd 0000:00:1d.7: PCI INT A -> GSI 23 (level, low) -> IRQ 23
ehci_hcd 0000:00:1d.7: setting latency timer to 64
ehci_hcd 0000:00:1d.7: EHCI Host Controller
ehci_hcd 0000:00:1d.7: new USB bus registered, assigned bus number 2
ehci_hcd 0000:00:1d.7: debug port 1
ehci_hcd 0000:00:1d.7: cache line size of 64 is not supported
ehci_hcd 0000:00:1d.7: irq 23, io mem 0xf8604400
ehci_hcd 0000:00:1d.7: USB 2.0 started, EHCI 1.00
usb usb2: New USB device found, idVendor=1d6b, idProduct=0002
usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb2: Product: EHCI Host Controller
usb usb2: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE ehci_hcd
usb usb2: SerialNumber: 0000:00:1d.7
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 6 ports detected
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
uhci_hcd: USB Universal Host Controller Interface driver
uhci_hcd 0000:00:1a.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
uhci_hcd 0000:00:1a.0: setting latency timer to 64
uhci_hcd 0000:00:1a.0: UHCI Host Controller
uhci_hcd 0000:00:1a.0: new USB bus registered, assigned bus number 3
uhci_hcd 0000:00:1a.0: irq 16, io base 0x00001820
usb usb3: New USB device found, idVendor=1d6b, idProduct=0001
usb usb3: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb3: Product: UHCI Host Controller
usb usb3: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE uhci_hcd
usb usb3: SerialNumber: 0000:00:1a.0
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.0: PCI INT A -> GSI 23 (level, low) -> IRQ 23
uhci_hcd 0000:00:1d.0: setting latency timer to 64
uhci_hcd 0000:00:1d.0: UHCI Host Controller
uhci_hcd 0000:00:1d.0: new USB bus registered, assigned bus number 4
uhci_hcd 0000:00:1d.0: irq 23, io base 0x00001840
usb usb4: New USB device found, idVendor=1d6b, idProduct=0001
usb usb4: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb4: Product: UHCI Host Controller
usb usb4: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE uhci_hcd
usb usb4: SerialNumber: 0000:00:1d.0
usb usb4: configuration #1 chosen from 1 choice
hub 4-0:1.0: USB hub found
hub 4-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.1: PCI INT B -> GSI 19 (level, low) -> IRQ 19
uhci_hcd 0000:00:1d.1: setting latency timer to 64
uhci_hcd 0000:00:1d.1: UHCI Host Controller
uhci_hcd 0000:00:1d.1: new USB bus registered, assigned bus number 5
uhci_hcd 0000:00:1d.1: irq 19, io base 0x00001860
usb usb5: New USB device found, idVendor=1d6b, idProduct=0001
usb usb5: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb5: Product: UHCI Host Controller
usb usb5: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE uhci_hcd
usb usb5: SerialNumber: 0000:00:1d.1
usb usb5: configuration #1 chosen from 1 choice
hub 5-0:1.0: USB hub found
hub 5-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.2: PCI INT C -> GSI 18 (level, low) -> IRQ 18
uhci_hcd 0000:00:1d.2: setting latency timer to 64
uhci_hcd 0000:00:1d.2: UHCI Host Controller
uhci_hcd 0000:00:1d.2: new USB bus registered, assigned bus number 6
uhci_hcd 0000:00:1d.2: irq 18, io base 0x00001880
usb usb6: New USB device found, idVendor=1d6b, idProduct=0001
usb usb6: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb6: Product: UHCI Host Controller
usb usb6: Manufacturer: Linux 2.6.31.5-127.fc12.i686.PAE uhci_hcd
usb usb6: SerialNumber: 0000:00:1d.2
usb usb6: configuration #1 chosen from 1 choice
hub 6-0:1.0: USB hub found
hub 6-0:1.0: 2 ports detected
PNP: PS/2 Controller [PNP0303:PS2K,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
i8042.c: Detected active multiplexing controller, rev 1.1.
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX0 port at 0x60,0x64 irq 12
serio: i8042 AUX1 port at 0x60,0x64 irq 12
serio: i8042 AUX2 port at 0x60,0x64 irq 12
serio: i8042 AUX3 port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
rtc_cmos 00:07: RTC can wake from S4
rtc_cmos 00:07: rtc core: registered rtc_cmos as rtc0
rtc0: alarms up to one month, y3k, 242 bytes nvram, hpet irqs
device-mapper: uevent: version 1.0.3
device-mapper: ioctl: 4.15.0-ioctl (2009-04-01) initialised:
dm-devel at redhat.com
cpuidle: using governor ladder
cpuidle: using governor menu
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
usbhid: v2.6:USB HID core driver
nf_conntrack version 0.5.0 (16384 buckets, 65536 max)
CONFIG_NF_CT_ACCT is deprecated and will be removed soon. Please use
nf_conntrack.acct=1 kernel parameter, acct=1 nf_conntrack module option or
sysctl net.netfilter.nf_conntrack_acct=1 to enable it.
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 17
Using IPI No-Shortcut mode
PM: Resume from disk failed.
registered taskstats version 1
No TPM chip found, activating TPM-bypass!
?Magic number: 1:200:829
rtc_cmos 00:07: setting system clock to 2009-11-19 09:50:06 UTC (1258624206)
Initalizing network drop monitor service
input: AT Translated Set 2 keyboard as
/devices/platform/i8042/serio0/input/input5
ata2.00: ATAPI: Optiarc CD-RW CRX880A, KX07, max UDMA/33
ata1.00: HPA detected: current 225204174, native 234441648
ata1.00: ATA-8: FUJITSU MHW2120BH, 00000012, max UDMA/100
ata1.00: 225204174 sectors, multi 16: LBA48 NCQ (depth 0/32)
ata2.00: configured for UDMA/33
ata1.00: configured for UDMA/100
Clocksource tsc unstable (delta = -240843825 ns)
usb 4-1: new low speed USB device using uhci_hcd and address 2
ACPI: Battery Slot [BAT1] (battery present)
scsi 0:0:0:0: Direct-Access ? ? ATA ? ? ?FUJITSU MHW2120B 0000 PQ: 0 ANSI: 5
sd 0:0:0:0: Attached scsi generic sg0 type 0
sd 0:0:0:0: [sda] 225204174 512-byte logical blocks: (115 GB/107 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support
DPO or FUA
?sda: sda1 sda2 < sda5 sda6
scsi 1:0:0:0: CD-ROM ? ? ? ? ? ?Optiarc ?CD-RW CRX880A ? ?KX07 PQ: 0 ANSI: 5
?sda7 sda8sr0: scsi3-mmc drive: 24x/24x writer cd/rw xa/form2 cdda tray
Uniform CD-ROM driver Revision: 3.20
sr 1:0:0:0: Attached scsi CD-ROM sr0
sr 1:0:0:0: Attached scsi generic sg1 type 5
?sda9 >
sd 0:0:0:0: [sda] Attached SCSI disk
Freeing unused kernel memory: 448k freed
Write protecting the kernel text: 3572k
Write protecting the kernel read-only data: 1716k
dracut: dracut-002-13.4.git8f397a9b.fc12
udev: starting version 145
usb 4-1: New USB device found, idVendor=15d9, idProduct=0a37
usb 4-1: New USB device strings: Mfr=0, Product=1, SerialNumber=0
usb 4-1: Product: USB Mouse
usb 4-1: configuration #1 chosen from 1 choice
input: USB Mouse as
/devices/pci0000:00/0000:00:1d.0/usb4/4-1/4-1:1.0/input/input6
generic-usb 0003:15D9:0A37.0001: input,hidraw0: USB HID v1.10 Mouse [USB Mouse]
on usb-0000:00:1d.0-1/input0
[drm] Initialized drm 1.1.0 20060810
i915 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
i915 0000:00:02.0: setting latency timer to 64
i915 0000:00:02.0: irq 27 for MSI/MSI-X
fbcon: inteldrmfb (fb0) is primary device
Synaptics Touchpad, model: 1, fw: 6.2, id: 0x1a0b1, caps: 0xa04753/0x200000
input: SynPS/2 Synaptics TouchPad as
/devices/platform/i8042/serio4/input/input7
usb 4-2: new low speed USB device using uhci_hcd and address 3
[drm] LVDS-8: set mode 1024x768 e
usb 4-2: New USB device found, idVendor=046d, idProduct=c315
usb 4-2: New USB device strings: Mfr=1, Product=2, SerialNumber=0
usb 4-2: Product: Logitech USB Keyboard
usb 4-2: Manufacturer: Logitech
usb 4-2: configuration #1 chosen from 1 choice
input: Logitech Logitech USB Keyboard as
/devices/pci0000:00/0000:00:1d.0/usb4/4-2/4-2:1.0/input/input8
generic-usb 0003:046D:C315.0002: input,hidraw1: USB HID v1.10 Keyboard
[Logitech Logitech USB Keyboard] on usb-0000:00:1d.0-2/input0
Console: switching to colour frame buffer device 128x48
fb0: inteldrmfb frame buffer device
registered panic notifier
acpi device:09: registered as cooling_device2
input: Video Bus as
/devices/LNXSYSTM:00/device:00/PNP0A08:00/device:07/input/input9
ACPI: Video Device [GFX0] (multi-head: yes ?rom: no ?post: no)
[drm] Initialized i915 1.6.0 20080730 for 0000:00:02.0 on minor 0
dracut: Starting plymouth daemon
EXT4-fs (sda8): barriers enabled
kjournald2 starting: pid 256, dev sda8:8, commit interval 5 seconds
EXT4-fs (sda8): delayed allocation enabled
EXT4-fs: file extents enabled
EXT4-fs: mballoc enabled
EXT4-fs (sda8): mounted filesystem with ordered data mode
dracut: Mounted root filesystem /dev/sda8
dracut: Switching root
udev: starting version 145
tg3.c:v3.99 (April 20, 2009)
tg3 0000:06:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
tg3 0000:06:00.0: setting latency timer to 64
tg3 0000:06:00.0: PME# disabled
eth0: Tigon3 [partno(BCM95906) rev c002] (PCI Express) MAC address
00:1b:24:8e:1a:20
eth0: attached PHY is 5906 (10/100Base-TX Ethernet) (WireSpeed[0])
eth0: RXcsums[1] LinkChgREG[0] MIirq[0] ASF[0] TSOcap[1]
eth0: dma_rwctrl[76180000] dma_mask[64-bit]
iTCO_vendor_support: vendor-support=0
iTCO_wdt: Intel TCO WatchDog Timer Driver v1.05
iTCO_wdt: failed to reset NO_REBOOT flag, reboot disabled by hardware
iTCO_wdt: No card detected
b43-pci-bridge 0000:02:00.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
b43-pci-bridge 0000:02:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:02:00.0
i801_smbus 0000:00:1f.3: PCI INT C -> GSI 19 (level, low) -> IRQ 19
ACPI: I/O resource 0000:00:1f.3 [0x18e0-0x18ff] conflicts with ACPI region SMBI
[0x18e0-0x18ef]
ACPI: If an ACPI driver is available for this device, you should use it instead
of the native driver
HDA Intel 0000:00:1b.0: PCI INT A -> GSI 22 (level, low) -> IRQ 22
HDA Intel 0000:00:1b.0: setting latency timer to 64
cfg80211: Calling CRDA to update world regulatory domain
b43-phy0: Broadcom 4311 WLAN found (core revision 10)
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
name_count maxed, losing inode data: dev=00:05, inode=6196
cfg80211: World regulatory domain updated:
?(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
?(2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
?(2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
?(2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
?(5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
?(5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
hda_codec: Unknown model for ALC268, trying auto-probe from BIOS...
ALSA sound/pci/hda/hda_codec.c:3862: autoconfig: line_outs=1
(0x14/0x0/0x0/0x0/0x0)
ALSA sound/pci/hda/hda_codec.c:3866: ? ?speaker_outs=0 (0x0/0x0/0x0/0x0/0x0)
ALSA sound/pci/hda/hda_codec.c:3870: ? ?hp_outs=1 (0x15/0x0/0x0/0x0/0x0)
ALSA sound/pci/hda/hda_codec.c:3871: ? ?mono: mono_out=0x0
ALSA sound/pci/hda/hda_codec.c:3882: ? ?inputs: mic=0x18, fmic=0x19, line=0x0,
fline=0x0, cd=0x0, aux=0x0
ALSA sound/pci/hda/patch_realtek.c:1181: realtek: No valid SSID, checking
pincfg 0x4016862d for NID 0x1d
ALSA sound/pci/hda/patch_realtek.c:1197: realtek: Enabling init ASM_ID=0x862d
CODEC_ID=10ec0268
input: HDA Digital PCBeep as /devices/pci0000:00/0000:00:1b.0/input/input10
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6287
phy0: Selected rate control algorithm 'minstrel'
name_count maxed, losing inode data: dev=00:05, inode=6181
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
name_count maxed, losing inode data: dev=00:05, inode=6289
Broadcom 43xx driver loaded [ Features: PML, Firmware-ID: FW13 ]
cfg80211: Calling CRDA for country: DE
cfg80211: Regulatory domain changed to country: DE
?(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
?(2400000 KHz - 2483500 KHz @ 40000 KHz), (N/A, 2000 mBm)
?(5150000 KHz - 5350000 KHz @ 40000 KHz), (N/A, 2000 mBm)
?(5470000 KHz - 5725000 KHz @ 40000 KHz), (N/A, 2698 mBm)
device-mapper: multipath: version 1.1.0 loaded
EXT4-fs (sda8): internal journal on sda8:8
EXT4-fs (sda7): barriers enabled
kjournald2 starting: pid 711, dev sda7:8, commit interval 5 seconds
EXT4-fs (sda7): internal journal on sda7:8
EXT4-fs (sda7): delayed allocation enabled
EXT4-fs: file extents enabled
EXT4-fs: mballoc enabled
EXT4-fs (sda7): mounted filesystem with ordered data mode
Adding 2040212k swap on /dev/sda9. ?Priority:-1 extents:1 across:2040212k

--
Configure bugmail: https://bugzilla.redhat.com/userprefs.cgi?tab=email
------- You are receiving this mail because: -------
You are on the CC list for the bug.
You are the assignee for the bug.



-- 
With best regards, Peter Lemenkov.


From mb at bu3sch.de  Thu Nov 19 18:44:11 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 18:44:11 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911191641.14176.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <200911191627.03062.mb@bu3sch.de>
	<200911191641.14176.mb@bu3sch.de>
Message-ID: <200911191844.12647.mb@bu3sch.de>

On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
> Wait, that still can't work. I'll fix it soon...

Ok, here's the updated version. Please test this:
http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 19 18:58:12 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Nov 2009 11:58:12 -0600
Subject: [PATCH] b43: Improve error response for bug in openfwwf
Message-ID: <4b058734.0H90xGUti/95cLxC%Larry.Finger@lwfinger.net>

With open firmware being distributed by some distros, the problem
of a duplicate skb returned to b43_dma_handle_txstatus() is being
reported. (See Bug #538579 at bugzilla at redhat.com.)

When this problem occurs, A BUG_ON() is encountered - the kernel
panic yields little information. This patch turns that panic into
a KERN_ERR message. The interface will not continue; however, reporting
of the condition is better.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Cc: Stable <stable at vger.org>
---

John,

This change should be sent to 2.6.32. I have used a variation of it in
private testing for the openfwwf project, and would have sent it up earlier
if I had known that the open firmware was being distributed.

Larry
---

Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c
+++ wireless-testing/drivers/net/wireless/b43/dma.c
@@ -1522,7 +1522,13 @@ void b43_dma_handle_txstatus(struct b43_
 		if (meta->is_last_fragment) {
 			struct ieee80211_tx_info *info;
 
-			BUG_ON(!meta->skb);
+			if (meta->skb == (void *)0x0606060606060606) {
+				printk(KERN_ERR "b43: Duplicate free of skb\n");
+				return;
+			} else if (!meta->skb) {
+				printk(KERN_ERR "b43: skb is NULL\n");
+				return;
+			}
 
 			info = IEEE80211_SKB_CB(meta->skb);
 
@@ -1540,8 +1546,8 @@ void b43_dma_handle_txstatus(struct b43_
 #endif /* DEBUG */
 			ieee80211_tx_status(dev->wl->hw, meta->skb);
 
-			/* skb is freed by ieee80211_tx_status() */
-			meta->skb = NULL;
+			/* skb was freed by ieee80211_tx_status() - poison it */
+			meta->skb = (void *)0x0606060606060606;
 		} else {
 			/* No need to call free_descriptor_buffer here, as
 			 * this is only the txhdr, which is not allocated.


From Larry.Finger at lwfinger.net  Thu Nov 19 20:43:54 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Nov 2009 13:43:54 -0600
Subject: [PATCH] ssb: Unconditionally log results of core scans
Message-ID: <4b059ffa.0PbmHUedj2WTwpAO%Larry.Finger@lwfinger.net>

At present, the results of an SSB core scan are only logged when
CONFIG_SSB_DEBUG is "y". As this may not be set in a distro kernel,
it is difficult interpret many problems posted in bug reports or in
help forums.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-testing/drivers/ssb/scan.c
===================================================================
--- wireless-testing.orig/drivers/ssb/scan.c
+++ wireless-testing/drivers/ssb/scan.c
@@ -354,7 +354,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 		dev->bus = bus;
 		dev->ops = bus->ops;
 
-		ssb_dprintk(KERN_INFO PFX
+		printk(KERN_INFO PFX
 			    "Core %d found: %s "
 			    "(cc 0x%03X, rev 0x%02X, vendor 0x%04X)\n",
 			    i, ssb_core_name(dev->id.coreid),


From mb at bu3sch.de  Thu Nov 19 21:13:33 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 21:13:33 +0100
Subject: [PATCH] ssb: Unconditionally log results of core scans
In-Reply-To: <4b059ffa.0PbmHUedj2WTwpAO%Larry.Finger@lwfinger.net>
References: <4b059ffa.0PbmHUedj2WTwpAO%Larry.Finger@lwfinger.net>
Message-ID: <200911192113.35757.mb@bu3sch.de>

On Thursday 19 November 2009 20:43:54 Larry Finger wrote:
> At present, the results of an SSB core scan are only logged when
> CONFIG_SSB_DEBUG is "y". As this may not be set in a distro kernel,
> it is difficult interpret many problems posted in bug reports or in
> help forums.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> Index: wireless-testing/drivers/ssb/scan.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/scan.c
> +++ wireless-testing/drivers/ssb/scan.c
> @@ -354,7 +354,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
>  		dev->bus = bus;
>  		dev->ops = bus->ops;
>  
> -		ssb_dprintk(KERN_INFO PFX
> +		printk(KERN_INFO PFX
>  			    "Core %d found: %s "
>  			    "(cc 0x%03X, rev 0x%02X, vendor 0x%04X)\n",
>  			    i, ssb_core_name(dev->id.coreid),
> 
> 

Please use KERN_DEBUG

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Nov 19 21:40:46 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Nov 2009 14:40:46 -0600
Subject: [PATCH V2] ssb: Unconditionally log results of core scans
Message-ID: <4b05ad4e.6wyYtH5Wba7FJeft%Larry.Finger@lwfinger.net>

At present, the results of an SSB core scan are only logged when
CONFIG_SSB_DEBUG is "y". As this may not be set in a distro kernel,
it is difficult interpret many problems posted in bug reports or in
help forums.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

V2 - Change from KERN_INFO to KERN_DEBUG

Index: wireless-testing/drivers/ssb/scan.c
===================================================================
--- wireless-testing.orig/drivers/ssb/scan.c
+++ wireless-testing/drivers/ssb/scan.c
@@ -354,7 +354,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
 		dev->bus = bus;
 		dev->ops = bus->ops;
 
-		ssb_dprintk(KERN_INFO PFX
+		printk(KERN_DEBUG PFX
 			    "Core %d found: %s "
 			    "(cc 0x%03X, rev 0x%02X, vendor 0x%04X)\n",
 			    i, ssb_core_name(dev->id.coreid),


From mb at bu3sch.de  Thu Nov 19 22:24:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Nov 2009 22:24:29 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
Message-ID: <200911192224.29491.mb@bu3sch.de>

This rewrites the error handling policies in the TX status handler.
It tries to be error-tolerant as in "try hard to not crash the machine".
It won't recover from errors (that are bugs in the firmware or driver),
because that's impossible. However, it will return a more or less useful
error message and bail out. It also tries hard to use rate-limited messages
to not flood the syslog in case of a failure.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

This patch also adds the skb pointer poisoning. I think it's not
strictly needed to catch firmware bugs anymore, because those should
be caught by the in-order check. However, we love defensive coding, so
we try to make the code as robust as possible.

I did not try with openfirmware, but I guess it blows up in the
in-order check there pretty quickly.
Would be cool if somebody could stress this on openfirmware.

Note that if the ordering sanity check fails that can mean three things:
- Either the report ordering on one engine is wrong.
- We missed one report on the engine.
- Or we reported the status to the wrong engine.


Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-11-18 19:21:17.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-11-19 21:40:45.000000000 +0100
@@ -874,7 +874,7 @@ static void free_all_descbuffers(struct 
 	for (i = 0; i < ring->nr_slots; i++) {
 		desc = ring->ops->idx2desc(ring, i, &meta);
 
-		if (!meta->skb) {
+		if (!meta->skb || b43_dma_ptr_is_poisoned(meta->skb)) {
 			B43_WARN_ON(!ring->tx);
 			continue;
 		}
@@ -926,7 +926,7 @@ struct b43_dmaring *b43_setup_dmaring(st
 				      enum b43_dmatype type)
 {
 	struct b43_dmaring *ring;
-	int err;
+	int i, err;
 	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
@@ -941,6 +941,8 @@ struct b43_dmaring *b43_setup_dmaring(st
 			     GFP_KERNEL);
 	if (!ring->meta)
 		goto err_kfree_ring;
+	for (i = 0; i < ring->nr_slots; i++)
+		ring->meta->skb = B43_DMA_PTR_POISON;
 
 	ring->type = type;
 	ring->dev = dev;
@@ -1251,11 +1253,13 @@ struct b43_dmaring *parse_cookie(struct 
 	case 0x5000:
 		ring = dma->tx_ring_mcast;
 		break;
-	default:
-		B43_WARN_ON(1);
 	}
 	*slot = (cookie & 0x0FFF);
-	B43_WARN_ON(!(ring && *slot >= 0 && *slot < ring->nr_slots));
+	if (unlikely(!ring || *slot < 0 || *slot >= ring->nr_slots)) {
+		b43dbg(dev->wl, "TX-status contains "
+		       "invalid cookie: 0x%04X\n", cookie);
+		return NULL;
+	}
 
 	return ring;
 }
@@ -1494,19 +1498,40 @@ void b43_dma_handle_txstatus(struct b43_
 	struct b43_dmaring *ring;
 	struct b43_dmadesc_generic *desc;
 	struct b43_dmadesc_meta *meta;
-	int slot;
+	int slot, firstused;
 	bool frame_succeed;
 
 	ring = parse_cookie(dev, status->cookie, &slot);
 	if (unlikely(!ring))
 		return;
-
 	B43_WARN_ON(!ring->tx);
+
+	/* Sanity check: TX packets are processed in-order on one ring.
+	 * Check if the slot deduced from the cookie really is the first
+	 * used slot. */
+	firstused = ring->current_slot - ring->used_slots + 1;
+	if (firstused < 0)
+		firstused = ring->nr_slots + firstused;
+	if (unlikely(slot != firstused)) {
+		/* This possibly is a firmware bug and will result in
+		 * malfunction, memory leaks and/or stall of DMA functionality. */
+		b43dbg(dev->wl, "Out of order TX status report on DMA ring %d. "
+		       "Expected %d, but got %d\n",
+		       ring->index, firstused, slot);
+		return;
+	}
+
 	ops = ring->ops;
 	while (1) {
-		B43_WARN_ON(!(slot >= 0 && slot < ring->nr_slots));
+		B43_WARN_ON(slot < 0 || slot >= ring->nr_slots);
 		desc = ops->idx2desc(ring, slot, &meta);
 
+		if (b43_dma_ptr_is_poisoned(meta->skb)) {
+			b43dbg(dev->wl, "Poisoned TX slot %d (first=%d) "
+			       "on ring %d\n",
+			       slot, firstused, ring->index);
+			break;
+		}
 		if (meta->skb) {
 			struct b43_private_tx_info *priv_info =
 				b43_get_priv_tx_info(IEEE80211_SKB_CB(meta->skb));
@@ -1522,7 +1547,14 @@ void b43_dma_handle_txstatus(struct b43_
 		if (meta->is_last_fragment) {
 			struct ieee80211_tx_info *info;
 
-			BUG_ON(!meta->skb);
+			if (unlikely(!meta->skb)) {
+				/* This is a scatter-gather fragment of a frame, so
+				 * the skb pointer must not be NULL. */
+				b43dbg(dev->wl, "TX status unexpected NULL skb "
+				       "at slot %d (first=%d) on ring %d\n",
+				       slot, firstused, ring->index);
+				break;
+			}
 
 			info = IEEE80211_SKB_CB(meta->skb);
 
@@ -1540,20 +1572,29 @@ void b43_dma_handle_txstatus(struct b43_
 #endif /* DEBUG */
 			ieee80211_tx_status(dev->wl->hw, meta->skb);
 
-			/* skb is freed by ieee80211_tx_status() */
-			meta->skb = NULL;
+			/* skb will be freed by ieee80211_tx_status().
+			 * Poison our pointer. */
+			meta->skb = B43_DMA_PTR_POISON;
 		} else {
 			/* No need to call free_descriptor_buffer here, as
 			 * this is only the txhdr, which is not allocated.
 			 */
-			B43_WARN_ON(meta->skb);
+			if (unlikely(meta->skb)) {
+				b43dbg(dev->wl, "TX status unexpected non-NULL skb "
+				       "at slot %d (first=%d) on ring %d\n",
+				       slot, firstused, ring->index);
+				break;
+			}
 		}
 
 		/* Everything unmapped and free'd. So it's not used anymore. */
 		ring->used_slots--;
 
-		if (meta->is_last_fragment)
+		if (meta->is_last_fragment) {
+			/* This is the last scatter-gather
+			 * fragment of the frame. We are done. */
 			break;
+		}
 		slot = next_slot(ring, slot);
 	}
 	if (ring->stopped) {
Index: wireless-testing/drivers/net/wireless/b43/dma.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.h	2009-11-18 19:29:49.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/dma.h	2009-11-19 21:16:54.000000000 +0100
@@ -1,7 +1,7 @@
 #ifndef B43_DMA_H_
 #define B43_DMA_H_
 
-#include <linux/ieee80211.h>
+#include <linux/err.h>
 
 #include "b43.h"
 
@@ -164,6 +164,10 @@ struct b43_dmadesc_generic {
 #define B43_RXRING_SLOTS		64
 #define B43_DMA0_RX_BUFFERSIZE		IEEE80211_MAX_FRAME_LEN
 
+/* Pointer poison */
+#define B43_DMA_PTR_POISON		((void *)ERR_PTR(-ENOMEM))
+#define b43_dma_ptr_is_poisoned(ptr)	(unlikely((ptr) == B43_DMA_PTR_POISON))
+
 
 struct sk_buff;
 struct b43_private;

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Fri Nov 20 00:46:34 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 20 Nov 2009 00:46:34 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911191844.12647.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <200911191627.03062.mb@bu3sch.de>
	<200911191641.14176.mb@bu3sch.de> <200911191844.12647.mb@bu3sch.de>
Message-ID: <4B05D8DA.6030504@snafu.de>

On 11/19/2009 06:44 PM, Michael Buesch wrote:
> On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
>> Wait, that still can't work. I'll fix it soon...
>
> Ok, here's the updated version. Please test this:
> http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
>

Heureka -- seems like I'm the first linux user on the planet with a
WLAN connection on that device. The MAC address is random which
of course is a pain for DHCP but it seems to work. Appears a little
bit slow though.

==

iwconfig

wlan0     IEEE 802.11bg  ESSID:"xxxxxxxxxx"
           Mode:Managed  Frequency:2.462 GHz  Access Point:
           XX:XX:XX:XX:XX:XX
           Bit Rate=11 Mb/s   Tx-Power=27 dBm
           Retry  long limit:7   RTS thr:off   Fragment thr:off
           Encryption key:off
           Power Management:off
           Link Quality=70/70  Signal level=7 dBm
           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
           Tx excessive retries:0  Invalid misc:0   Missed beacon:0

I've x't out the access point info

==

ifconfig

wlan0     Link encap:Ethernet  HWaddr 92:09:86:56:1D:4E
           inet addr:192.168.XX.XX  Bcast:192.168.XX.XX
           Mask:255.255.255.0
           inet6 addr: xxxx::xxxx:xxxx:xxxx:xxxx/xx Scope:Link
           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
           RX packets:3425 errors:0 dropped:0 overruns:0 frame:0
           TX packets:4902 errors:0 dropped:0 overruns:0 carrier:0
           collisions:0 txqueuelen:1000
           RX bytes:346201 (338.0 KiB)  TX bytes:6049238 (5.7 MiB)

No errors reported while I'm transfering stuff via nfs

==

# dmesg | grep -E '(b43|ssb)'

[   10.028898] b43-pci-bridge 0000:01:00.0: PCI INT A -> GSI 16 (level, 
low) -> IRQ 16
[   10.028923] b43-pci-bridge 0000:01:00.0: setting latency timer to 64
[   10.036200] ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 
0x4243)
[   10.036220] ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, 
vendor 0x4243)
[   10.036237] ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
[   10.036253] ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
[   10.044137] ssb: Found rev 1 PMU (capabilities 0x02A62F01)
[   10.044165] ssb: Overriding SPROM image
[   10.052199] ssb: Sonics Silicon Backplane found on PCI device 
0000:01:00.0
[   11.892104] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[   11.907112] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
[   11.907140] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, 
Revision 2
[   11.946392] Registered led device: b43-phy0::tx
[   11.946447] Registered led device: b43-phy0::rx
[   11.946501] Registered led device: b43-phy0::radio
[   28.361189] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[   28.389230] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[   28.404838] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[   28.564385] b43-phy0: Loading firmware version 478.104 (2008-07-01 
00:50:23)
[   28.566713] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[   29.996192] b43-phy0 debug: Chip initialized
[   29.996623] b43-phy0 debug: 64-bit DMA initialized
[   29.996740] b43-phy0 debug: QoS enabled
[   30.006234] b43-phy0 debug: Wireless interface started
[   30.006297] b43-phy0 debug: Adding Interface type 2

==

Thanks a 10^6. At least now I can hang out in bars while surfing the
net.

Sorry it took so long.

I'll be happy if I can supply you with any information or patch more
code into my kernel whenever I find the time.

Cheers

Sebastian


From Larry.Finger at lwfinger.net  Fri Nov 20 00:55:07 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 19 Nov 2009 17:55:07 -0600
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <4B04D5E9.5020500@polymtl.ca>
References: <200911182053.05488.mb@bu3sch.de> <4B04D5E9.5020500@polymtl.ca>
Message-ID: <4B05DADB.3050402@lwfinger.net>

On 11/18/2009 11:21 PM, William Bourque wrote:
> Also, just saying, but it seems Larry's "pm_qos_update_requirement" 
> patch had some good effects; I can hardly get any connectivity without 
> it. With the patch, the wireless seems to be stable for a few minutes 
> before generating DMA errors... without the patch the error start piling 
> up as soon the interface get up.

If the pm_qos patch has some positive benefits, I'll push it; however, I think
this is just a band aid, not a real fix. It also has the bad side effect of
keeping the CPU from going into deep sleep, which increases the power usage with
reduced battery life.

John: Any thoughts on this matter?

Larry



From oncaphillis at snafu.de  Fri Nov 20 02:41:58 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 20 Nov 2009 02:41:58 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B05D8DA.6030504@snafu.de>
References: <4AFD7C49.3000408@snafu.de>
	<200911191627.03062.mb@bu3sch.de>	<200911191641.14176.mb@bu3sch.de>
	<200911191844.12647.mb@bu3sch.de> <4B05D8DA.6030504@snafu.de>
Message-ID: <4B05F3E6.20803@snafu.de>

On 11/20/2009 12:46 AM, Oncaphillis wrote:
> On 11/19/2009 06:44 PM, Michael Buesch wrote:
>> On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
>>> Wait, that still can't work. I'll fix it soon...
>>
>> Ok, here's the updated version. Please test this:
>> http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
>>
>
> Heureka -- seems like I'm the first linux user on the planet with a
> WLAN connection on that device. The MAC address is random which
> of course is a pain for DHCP but it seems to work. Appears a little
> bit slow though.
>

Ok -- after a while of continous I get:

[ 6415.479127] b43-phy0 debug: Removing Interface type 2
[ 6415.479601] b43-phy0 debug: Wireless interface stopped
[ 6415.479615] b43-phy0 debug: DMA-64 rx_ring: Used slots 8/64, Failed 
frames 0/0 = 0.0%, Average tries 0.00
[ 6415.479710] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.0
[ 6415.481511] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 152/256, 
Failed frames 2795/23615 = 11.8%, Averag tries 3.38
[ 6415.483077] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.0
[ 6415.485064] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 12/256, 
Failed frames 35/2939 = 1.1%, Average tris 1.05
[ 6415.487069] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
Failed frames 0/0 = 0.0%, Average tries 0.0

and loose the interface

:-(

Cheers

Sebastian


From mb at bu3sch.de  Fri Nov 20 10:27:00 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 10:27:00 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B05F3E6.20803@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4B05D8DA.6030504@snafu.de>
	<4B05F3E6.20803@snafu.de>
Message-ID: <200911201027.02760.mb@bu3sch.de>

On Friday 20 November 2009 02:41:58 Oncaphillis wrote:
> On 11/20/2009 12:46 AM, Oncaphillis wrote:
> > On 11/19/2009 06:44 PM, Michael Buesch wrote:
> >> On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
> >>> Wait, that still can't work. I'll fix it soon...
> >>
> >> Ok, here's the updated version. Please test this:
> >> http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
> >>
> >
> > Heureka -- seems like I'm the first linux user on the planet with a
> > WLAN connection on that device. The MAC address is random which
> > of course is a pain for DHCP but it seems to work.

Thanks. I'll see what I can do about this.


> [ 6415.479127] b43-phy0 debug: Removing Interface type 2
> [ 6415.479601] b43-phy0 debug: Wireless interface stopped
> [ 6415.479615] b43-phy0 debug: DMA-64 rx_ring: Used slots 8/64, Failed 
> frames 0/0 = 0.0%, Average tries 0.00
> [ 6415.479710] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, 
> Failed frames 0/0 = 0.0%, Average tries 0.0
> [ 6415.481511] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 152/256, 
> Failed frames 2795/23615 = 11.8%, Averag tries 3.38
> [ 6415.483077] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, 
> Failed frames 0/0 = 0.0%, Average tries 0.0
> [ 6415.485064] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 12/256, 
> Failed frames 35/2939 = 1.1%, Average tris 1.05
> [ 6415.487069] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, 
> Failed frames 0/0 = 0.0%, Average tries 0.0
> 
> and loose the interface

Well, somebody shuts down the interfsce. There's nothing wrong with these logs.
I would point at network manager or something like that.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Nov 20 10:29:01 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 10:29:01 +0100
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <4B05DADB.3050402@lwfinger.net>
References: <200911182053.05488.mb@bu3sch.de> <4B04D5E9.5020500@polymtl.ca>
	<4B05DADB.3050402@lwfinger.net>
Message-ID: <200911201029.03778.mb@bu3sch.de>

On Friday 20 November 2009 00:55:07 Larry Finger wrote:
> On 11/18/2009 11:21 PM, William Bourque wrote:
> > Also, just saying, but it seems Larry's "pm_qos_update_requirement" 
> > patch had some good effects; I can hardly get any connectivity without 
> > it. With the patch, the wireless seems to be stable for a few minutes 
> > before generating DMA errors... without the patch the error start piling 
> > up as soon the interface get up.
> 
> If the pm_qos patch has some positive benefits, I'll push it; however, I think
> this is just a band aid, not a real fix. It also has the bad side effect of
> keeping the CPU from going into deep sleep, which increases the power usage with
> reduced battery life.

Yes, that's why it should at least only be set if DMA is used.
We could also make it depend on specific PCI IDs, but I'm not sure how big the list would grow.

-- 
Greetings, Michael.


From oncaphillis at snafu.de  Fri Nov 20 11:29:20 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 20 Nov 2009 11:29:20 +0100
Subject: b43 kills my kernel
In-Reply-To: <200911201027.02760.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <4B05D8DA.6030504@snafu.de>
	<4B05F3E6.20803@snafu.de> <200911201027.02760.mb@bu3sch.de>
Message-ID: <4B066F80.2000605@snafu.de>

On 11/20/2009 10:27 AM, Michael Buesch wrote:
> On Friday 20 November 2009 02:41:58 Oncaphillis wrote:
>> On 11/20/2009 12:46 AM, Oncaphillis wrote:
>>> On 11/19/2009 06:44 PM, Michael Buesch wrote:
>>>> On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
>>>>> Wait, that still can't work. I'll fix it soon...
>>>>
>>>> Ok, here's the updated version. Please test this:
>>>> http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
>>>>
>>>
>>> Heureka -- seems like I'm the first linux user on the planet with a
>>> WLAN connection on that device. The MAC address is random which
>>> of course is a pain for DHCP but it seems to work.
>
> Thanks. I'll see what I can do about this.
>
>
>> [ 6415.479127] b43-phy0 debug: Removing Interface type 2
>> [ 6415.479601] b43-phy0 debug: Wireless interface stopped
>> [ 6415.479615] b43-phy0 debug: DMA-64 rx_ring: Used slots 8/64, Failed
>> frames 0/0 = 0.0%, Average tries 0.00
>> [ 6415.479710] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256,
>> Failed frames 0/0 = 0.0%, Average tries 0.0
>> [ 6415.481511] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 152/256,
>> Failed frames 2795/23615 = 11.8%, Averag tries 3.38
>> [ 6415.483077] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256,
>> Failed frames 0/0 = 0.0%, Average tries 0.0
>> [ 6415.485064] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 12/256,
>> Failed frames 35/2939 = 1.1%, Average tris 1.05
>> [ 6415.487069] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256,
>> Failed frames 0/0 = 0.0%, Average tries 0.0
>>
>> and loose the interface
>
> Well, somebody shuts down the interfsce. There's nothing wrong with these logs.
> I would point at network manager or something like that.
>


Ok -- Some more details about my experience that it appears to be slow.
As a test I've transfered a couple of 100 Mbyte files  via NFS to my
desktop.

I don't know much about the overhead it has but if wlan0 tells me
I have a 11MBit connection a throughput of at least 500kbyte/s should
be possible and I'm far away from this. It also appeared that the 
transfer freezes for a couple of seconds ( I had a look at the file
sizes on the recipient side in second intervals). Nothing
suspicious in dmesg or syslog though.

This of course is a very crude analysis, but if someone can point me
to better tools to check for data throughput and connection stability
I'll be happy to check in more detail.

Sebastian



From netrolller.3d at gmail.com  Fri Nov 20 11:39:09 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Fri, 20 Nov 2009 11:39:09 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B066F80.2000605@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <4B05D8DA.6030504@snafu.de> 
	<4B05F3E6.20803@snafu.de> <200911201027.02760.mb@bu3sch.de> 
	<4B066F80.2000605@snafu.de>
Message-ID: <69e28c910911200239w7f3d5834odac0424996092805@mail.gmail.com>

On Fri, Nov 20, 2009 at 11:29 AM, Oncaphillis <oncaphillis at snafu.de> wrote:
> On 11/20/2009 10:27 AM, Michael Buesch wrote:
>> On Friday 20 November 2009 02:41:58 Oncaphillis wrote:
>>> On 11/20/2009 12:46 AM, Oncaphillis wrote:
>>>> On 11/19/2009 06:44 PM, Michael Buesch wrote:
>>>>> On Thursday 19 November 2009 16:41:12 Michael Buesch wrote:
>>>>>> Wait, that still can't work. I'll fix it soon...
>>>>>
>>>>> Ok, here's the updated version. Please test this:
>>>>> http://bu3sch.de/patches/wireless-testing/20091119-1842/patches/002-ssb-rewrite-sprom-fallback-mechanism.patch
>>>>>
>>>>
>>>> Heureka -- seems like I'm the first linux user on the planet with a
>>>> WLAN connection on that device. The MAC address is random which
>>>> of course is a pain for DHCP but it seems to work.
>>
>> Thanks. I'll see what I can do about this.
>>
>>
>>> [ 6415.479127] b43-phy0 debug: Removing Interface type 2
>>> [ 6415.479601] b43-phy0 debug: Wireless interface stopped
>>> [ 6415.479615] b43-phy0 debug: DMA-64 rx_ring: Used slots 8/64, Failed
>>> frames 0/0 = 0.0%, Average tries 0.00
>>> [ 6415.479710] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256,
>>> Failed frames 0/0 = 0.0%, Average tries 0.0
>>> [ 6415.481511] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 152/256,
>>> Failed frames 2795/23615 = 11.8%, Averag tries 3.38
>>> [ 6415.483077] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256,
>>> Failed frames 0/0 = 0.0%, Average tries 0.0
>>> [ 6415.485064] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 12/256,
>>> Failed frames 35/2939 = 1.1%, Average tris 1.05
>>> [ 6415.487069] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256,
>>> Failed frames 0/0 = 0.0%, Average tries 0.0
>>>
>>> and loose the interface
>>
>> Well, somebody shuts down the interfsce. There's nothing wrong with these logs.
>> I would point at network manager or something like that.
>>
>
>
> Ok -- Some more details about my experience that it appears to be slow.
> As a test I've transfered a couple of 100 Mbyte files ?via NFS to my
> desktop.
>
> I don't know much about the overhead it has but if wlan0 tells me
> I have a 11MBit connection a throughput of at least 500kbyte/s should
> be possible and I'm far away from this. It also appeared that the
> transfer freezes for a couple of seconds ( I had a look at the file
> sizes on the recipient side in second intervals). Nothing
> suspicious in dmesg or syslog though.
>
> This of course is a very crude analysis, but if someone can point me
> to better tools to check for data throughput and connection stability
> I'll be happy to check in more detail.
>
> Sebastian
>

Performance issues are still normal, as periodic calibration is incomplete.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Fri Nov 20 11:54:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 11:54:06 +0100
Subject: b43 kills my kernel
In-Reply-To: <4B066F80.2000605@snafu.de>
References: <4AFD7C49.3000408@snafu.de> <200911201027.02760.mb@bu3sch.de>
	<4B066F80.2000605@snafu.de>
Message-ID: <200911201154.08090.mb@bu3sch.de>

On Friday 20 November 2009 11:29:20 Oncaphillis wrote:
> Ok -- Some more details about my experience that it appears to be slow.


Note that there are several issues. First one being the sprom calibration
values being _wrong_ for your card. Second one is LP-PHY performance being crappy in
general for the current implementation.

Can somebody give me a genuine SPROM image for an LP-PHY card, please?
Just do this:
sudo cat $(find /sys/devices -name ssb_sprom) > ssb_sprom_copy

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Nov 20 12:12:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 12:12:19 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
Message-ID: <200911201212.19588.mb@bu3sch.de>

This patch adds a generic mechanism for overriding the SPROM mechanism
on devices without SPROM hardware.

There currently is a major problem with this:
It tries to deduce a MAC address from various hardware parameters. But
currently it will result in the same MAC address for machines of the same
type. Does somebody have an idea of some device-instance specific serial
number or something similar that could be hashed into the MAC?


Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c	2009-11-19 18:34:42.000000000 +0100
+++ wireless-testing/drivers/ssb/pci.c	2009-11-19 18:37:27.000000000 +0100
@@ -252,6 +252,9 @@ static int sprom_do_read(struct ssb_bus 
 {
 	int i;
 
+	if (!bus->sprom_size)
+		return -ENODEV;
+
 	for (i = 0; i < bus->sprom_size; i++)
 		sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
 
@@ -265,6 +268,9 @@ static int sprom_do_write(struct ssb_bus
 	u32 spromctl;
 	u16 size = bus->sprom_size;
 
+	if (!size)
+		return -ENODEV;
+
 	ssb_printk(KERN_NOTICE PFX "Writing SPROM. Do NOT turn off the power! Please stand by...\n");
 	err = pci_read_config_dword(pdev, SSB_SPROMCTL, &spromctl);
 	if (err)
@@ -616,10 +622,17 @@ static int sprom_extract(struct ssb_bus 
 static int ssb_pci_sprom_get(struct ssb_bus *bus,
 			     struct ssb_sprom *sprom)
 {
-	const struct ssb_sprom *fallback;
-	int err = -ENOMEM;
+	int err;
 	u16 *buf;
 
+	bus->sprom_size = 0;
+	err = ssb_find_sprom_override(bus, sprom);
+	if (!err) {
+		ssb_printk(KERN_INFO PFX "Overriding SPROM image\n");
+		return 0;
+	}
+
+	err = -ENOMEM;
 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
 	if (!buf)
 		goto out;
@@ -637,22 +650,12 @@ static int ssb_pci_sprom_get(struct ssb_
 		sprom_do_read(bus, buf);
 		err = sprom_check_crc(buf, bus->sprom_size);
 		if (err) {
-			/* All CRC attempts failed.
-			 * Maybe there is no SPROM on the device?
-			 * If we have a fallback, use that. */
-			fallback = ssb_get_fallback_sprom();
-			if (fallback) {
-				memcpy(sprom, fallback, sizeof(*sprom));
-				err = 0;
-				goto out_free;
-			}
 			ssb_printk(KERN_WARNING PFX "WARNING: Invalid"
 				   " SPROM CRC (corrupt SPROM)\n");
 		}
 	}
 	err = sprom_extract(bus, sprom, buf, bus->sprom_size);
 
-out_free:
 	kfree(buf);
 out:
 	return err;
Index: wireless-testing/drivers/ssb/sprom.c
===================================================================
--- wireless-testing.orig/drivers/ssb/sprom.c	2009-11-19 18:34:42.000000000 +0100
+++ wireless-testing/drivers/ssb/sprom.c	2009-11-19 18:37:27.000000000 +0100
@@ -13,8 +13,13 @@
 
 #include "ssb_private.h"
 
+#include <linux/list.h>
+#include <linux/spinlock.h>
 
-static const struct ssb_sprom *fallback_sprom;
+
+/* List of registered SPROM overrides. */
+static LIST_HEAD(override_list);
+static DEFINE_SPINLOCK(override_list_lock);
 
 
 static int sprom2hex(const u16 *sprom, char *buf, size_t buf_len,
@@ -135,35 +140,34 @@ out:
 	return err ? err : count;
 }
 
-/**
- * ssb_arch_set_fallback_sprom - Set a fallback SPROM for use if no SPROM is found.
- *
- * @sprom: The SPROM data structure to register.
- *
- * With this function the architecture implementation may register a fallback
- * SPROM data structure. The fallback is only used for PCI based SSB devices,
- * where no valid SPROM can be found in the shadow registers.
- *
- * This function is useful for weird architectures that have a half-assed SSB device
- * hardwired to their PCI bus.
- *
- * Note that it does only work with PCI attached SSB devices. PCMCIA devices currently
- * don't use this fallback.
- * Architectures must provide the SPROM for native SSB devices anyway,
- * so the fallback also isn't used for native devices.
- *
- * This function is available for architecture code, only. So it is not exported.
- */
-int ssb_arch_set_fallback_sprom(const struct ssb_sprom *sprom)
-{
-	if (fallback_sprom)
-		return -EEXIST;
-	fallback_sprom = sprom;
+void ssb_register_sprom_override(struct ssb_sprom_override *ovr)
+{
+	spin_lock(&override_list_lock);
+	list_add_tail(&ovr->list, &override_list);
+	spin_unlock(&override_list_lock);
+}
+EXPORT_SYMBOL(ssb_register_sprom_override);
 
-	return 0;
+void ssb_unregister_sprom_override(struct ssb_sprom_override *ovr)
+{
+	spin_lock(&override_list_lock);
+	list_del(&ovr->list);
+	spin_unlock(&override_list_lock);
 }
+EXPORT_SYMBOL(ssb_unregister_sprom_override);
 
-const struct ssb_sprom *ssb_get_fallback_sprom(void)
+int ssb_find_sprom_override(struct ssb_bus *bus, struct ssb_sprom *buf)
 {
-	return fallback_sprom;
+	struct ssb_sprom_override *ovr;
+	int err = -ENODEV;
+
+	spin_lock(&override_list_lock);
+	list_for_each_entry(ovr, &override_list, list) {
+		err = ovr->probe(bus, buf);
+		if (!err)
+			break;
+	}
+	spin_unlock(&override_list_lock);
+
+	return err;
 }
Index: wireless-testing/drivers/ssb/ssb_private.h
===================================================================
--- wireless-testing.orig/drivers/ssb/ssb_private.h	2009-11-19 18:34:42.000000000 +0100
+++ wireless-testing/drivers/ssb/ssb_private.h	2009-11-19 18:37:27.000000000 +0100
@@ -171,7 +171,7 @@ ssize_t ssb_attr_sprom_store(struct ssb_
 			     const char *buf, size_t count,
 			     int (*sprom_check_crc)(const u16 *sprom, size_t size),
 			     int (*sprom_write)(struct ssb_bus *bus, const u16 *sprom));
-extern const struct ssb_sprom *ssb_get_fallback_sprom(void);
+extern int ssb_find_sprom_override(struct ssb_bus *bus, struct ssb_sprom *buf);
 
 
 /* core.c */
Index: wireless-testing/include/linux/ssb/ssb.h
===================================================================
--- wireless-testing.orig/include/linux/ssb/ssb.h	2009-11-19 18:34:42.000000000 +0100
+++ wireless-testing/include/linux/ssb/ssb.h	2009-11-19 18:37:27.000000000 +0100
@@ -394,9 +394,20 @@ extern int ssb_bus_sdiobus_register(stru
 
 extern void ssb_bus_unregister(struct ssb_bus *bus);
 
-/* Set a fallback SPROM.
- * See kdoc at the function definition for complete documentation. */
-extern int ssb_arch_set_fallback_sprom(const struct ssb_sprom *sprom);
+/** struct ssb_sprom_override - SPROM override handler
+ * @probe: Callback function used to probe for a SPROM override.
+ *	Puts the override image into "buf" and returns 0.
+ *	If there's no need to override the image, nonzero is returned.
+ *	This callback runs in atomic context.
+ * @list: Used internally in ssb. Do not use in the device driver.
+ */
+struct ssb_sprom_override {
+	int (*probe)(struct ssb_bus *bus, struct ssb_sprom *buf);
+	struct list_head list;
+};
+
+extern void ssb_register_sprom_override(struct ssb_sprom_override *ovr);
+extern void ssb_unregister_sprom_override(struct ssb_sprom_override *ovr);
 
 /* Suspend a SSB bus.
  * Call this from the parent bus suspend routine. */
Index: wireless-testing/drivers/ssb/b43_pci_bridge.c
===================================================================
--- wireless-testing.orig/drivers/ssb/b43_pci_bridge.c	2009-11-19 18:34:42.000000000 +0100
+++ wireless-testing/drivers/ssb/b43_pci_bridge.c	2009-11-20 12:04:09.000000000 +0100
@@ -5,13 +5,15 @@
  * because of its small size we include it in the SSB core
  * instead of creating a standalone module.
  *
- * Copyright 2007  Michael Buesch <mb at bu3sch.de>
+ * Copyright 2007-2009  Michael Buesch <mb at bu3sch.de>
  *
  * Licensed under the GNU/GPL. See COPYING for details.
  */
 
 #include <linux/pci.h>
 #include <linux/ssb/ssb.h>
+#include <linux/etherdevice.h>
+#include <linux/jhash.h>
 
 #include "ssb_private.h"
 
@@ -36,6 +38,76 @@ static const struct pci_device_id b43_pc
 };
 MODULE_DEVICE_TABLE(pci, b43_pci_bridge_tbl);
 
+
+static void pcidev_deduce_mac_address(struct pci_dev *pdev,
+				      struct ssb_sprom *sprom,
+				      const char *oui)
+{
+	u32 hash = 0x63E72B6D;
+
+	hash = jhash(&pdev->device, sizeof(pdev->device), hash);
+	hash = jhash(&pdev->subsystem_device, sizeof(pdev->subsystem_device), hash);
+	hash = jhash(&pdev->devfn, sizeof(pdev->devfn), hash);
+	//TODO: Need machine specific seed
+
+	sprom->il0mac[3] = hash;
+	sprom->il0mac[4] = hash >> 8;
+	sprom->il0mac[5] = hash >> 16;
+	memcpy(sprom->il0mac, oui, 3);
+	memcpy(sprom->et0mac, sprom->il0mac, ETH_ALEN);
+	memcpy(sprom->et1mac, sprom->il0mac, ETH_ALEN);
+}
+
+#define IS_PDEV(pdev, _vendor, _device, _subvendor, _subdevice)		( \
+	(pdev->vendor == PCI_VENDOR_ID_##_vendor) &&			\
+	(pdev->device == _device) &&					\
+	(pdev->subsystem_vendor == PCI_VENDOR_ID_##_subvendor) &&	\
+	(pdev->subsystem_device == _subdevice)				)
+
+static int b43_sprom_override_probe(struct ssb_bus *bus,
+				    struct ssb_sprom *sprom)
+{
+	struct pci_dev *pdev;
+
+	if (bus->bustype != SSB_BUSTYPE_PCI)
+		return -ENODEV;
+	pdev = bus->host_pci;
+
+	if (IS_PDEV(pdev, BROADCOM, 0x4315, FOXCONN, 0xE01B)) {
+		static const struct ssb_sprom image = {
+			.revision		= 0x02,
+			.board_rev		= 0x17,
+			.country_code		= 0x0,
+			.ant_available_bg 	= 0x3,
+			.pa0b0			= 0x15ae,
+			.pa0b1			= 0xfa85,
+			.pa0b2			= 0xfe8d,
+			.pa1b0			= 0xffff,
+			.pa1b1			= 0xffff,
+			.pa1b2			= 0xffff,
+			.gpio0			= 0xff,
+			.gpio1			= 0xff,
+			.gpio2			= 0xff,
+			.gpio3			= 0xff,
+			.maxpwr_bg		= 0x004c,
+			.itssi_bg		= 0x00,
+			.boardflags_lo		= 0x2848,
+			.boardflags_hi		= 0x0000,
+		};//FIXME This image is not the right one.
+
+		memcpy(sprom, &image, sizeof(*sprom));
+		pcidev_deduce_mac_address(pdev, sprom, "\x00\x15\x58");
+
+		return 0;
+	}
+
+	return -ENODEV;
+}
+
+static struct ssb_sprom_override b43_sprom_override = {
+	.probe		= b43_sprom_override_probe,
+};
+
 static struct pci_driver b43_pci_bridge_driver = {
 	.name = "b43-pci-bridge",
 	.id_table = b43_pci_bridge_tbl,
@@ -44,10 +116,20 @@ static struct pci_driver b43_pci_bridge_
 
 int __init b43_pci_ssb_bridge_init(void)
 {
-	return ssb_pcihost_register(&b43_pci_bridge_driver);
+	int err;
+
+	ssb_register_sprom_override(&b43_sprom_override);
+	err = ssb_pcihost_register(&b43_pci_bridge_driver);
+	if (err) {
+		ssb_unregister_sprom_override(&b43_sprom_override);
+		return err;
+	}
+
+	return 0;
 }
 
 void __exit b43_pci_ssb_bridge_exit(void)
 {
 	ssb_pcihost_unregister(&b43_pci_bridge_driver);
+	ssb_unregister_sprom_override(&b43_sprom_override);
 }

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Nov 20 12:44:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 12:44:49 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201238.08005.florian@openwrt.org>
References: <200911201212.19588.mb@bu3sch.de>
	<200911201238.08005.florian@openwrt.org>
Message-ID: <200911201244.51138.mb@bu3sch.de>

On Friday 20 November 2009 12:38:07 Florian Fainelli wrote:
> Why not call once random_ether_addr instead of using some kind of hash? Is it 
> because you
> want the same MAC from a reboot to another?

yes.

> Ok, so for BCM63xx I would no longer have to declare my SPROM, fine.

No you still need to do that. The sprom is device specific.
You need to call ssb_register_sprom_override() from the arch code with
that callback that sets up your sprom image.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Nov 20 12:59:45 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 05:59:45 -0600
Subject: b43 kills my kernel
In-Reply-To: <200911201154.08090.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de> <200911201027.02760.mb@bu3sch.de>
	<4B066F80.2000605@snafu.de> <200911201154.08090.mb@bu3sch.de>
Message-ID: <4B0684B1.1030702@lwfinger.net>

On 11/20/2009 04:54 AM, Michael Buesch wrote:
> On Friday 20 November 2009 11:29:20 Oncaphillis wrote:
>> Ok -- Some more details about my experience that it appears to be slow.
> 
> 
> Note that there are several issues. First one being the sprom calibration
> values being _wrong_ for your card. Second one is LP-PHY performance being crappy in
> general for the current implementation.
> 
> Can somebody give me a genuine SPROM image for an LP-PHY card, please?
> Just do this:
> sudo cat $(find /sys/devices -name ssb_sprom) > ssb_sprom_copy

Real LP PHY, rev 8 SPROM image attached.

Larry
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sprom.dat
Type: video/mpeg
Size: 882 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091120/fc600eff/attachment.m1v>

From Larry.Finger at lwfinger.net  Fri Nov 20 13:01:39 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 06:01:39 -0600
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <200911201029.03778.mb@bu3sch.de>
References: <200911182053.05488.mb@bu3sch.de> <4B04D5E9.5020500@polymtl.ca>
	<4B05DADB.3050402@lwfinger.net> <200911201029.03778.mb@bu3sch.de>
Message-ID: <4B068523.2060309@lwfinger.net>

On 11/20/2009 03:29 AM, Michael Buesch wrote:
> On Friday 20 November 2009 00:55:07 Larry Finger wrote:
>>
>> If the pm_qos patch has some positive benefits, I'll push it; however, I think
>> this is just a band aid, not a real fix. It also has the bad side effect of
>> keeping the CPU from going into deep sleep, which increases the power usage with
>> reduced battery life.
> 
> Yes, that's why it should at least only be set if DMA is used.
> We could also make it depend on specific PCI IDs, but I'm not sure how big the list would grow.

I'll start with the 4315.

Larry





From Larry.Finger at lwfinger.net  Fri Nov 20 13:43:05 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 06:43:05 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4AFEFC2C.5030704@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net> <4AFEFC2C.5030704@polymtl.ca>
Message-ID: <4B068ED9.5070107@lwfinger.net>

One last check. I would appreciate receiving answers to the following questions.
These questions apply to anyone else with this problem.

Does the pm_qos patch help your "fatal DMA error" problem, particularly when
booted from power-off?

If you warm-boot after loading the wl driver, does the patch make any difference?

Larry


From linville at tuxdriver.com  Fri Nov 20 14:43:06 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 20 Nov 2009 08:43:06 -0500
Subject: [PATCH] b43: Enforce DMA descriptor memory constraints
In-Reply-To: <4B05DADB.3050402@lwfinger.net>
References: <200911182053.05488.mb@bu3sch.de> <4B04D5E9.5020500@polymtl.ca>
	<4B05DADB.3050402@lwfinger.net>
Message-ID: <20091120134306.GB10281@tuxdriver.com>

On Thu, Nov 19, 2009 at 05:55:07PM -0600, Larry Finger wrote:
> On 11/18/2009 11:21 PM, William Bourque wrote:
> > Also, just saying, but it seems Larry's "pm_qos_update_requirement" 
> > patch had some good effects; I can hardly get any connectivity without 
> > it. With the patch, the wireless seems to be stable for a few minutes 
> > before generating DMA errors... without the patch the error start piling 
> > up as soon the interface get up.
> 
> If the pm_qos patch has some positive benefits, I'll push it; however, I think
> this is just a band aid, not a real fix. It also has the bad side effect of
> keeping the CPU from going into deep sleep, which increases the power usage with
> reduced battery life.
> 
> John: Any thoughts on this matter?

Missing deep sleep is bad.  At the very least you need to limit that
to devices that truly need it, as Michael suggested.

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From william.bourque at polymtl.ca  Fri Nov 20 15:05:28 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Fri, 20 Nov 2009 09:05:28 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B068ED9.5070107@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net> <4AFEFC2C.5030704@polymtl.ca>
	<4B068ED9.5070107@lwfinger.net>
Message-ID: <4B06A228.8000201@polymtl.ca>

Larry Finger wrote:
> One last check. I would appreciate receiving answers to the following questions.
> These questions apply to anyone else with this problem.
> 
> Does the pm_qos patch help your "fatal DMA error" problem, particularly when
> booted from power-off?
> 
> If you warm-boot after loading the wl driver, does the patch make any difference?
> 

I would say yes right now to both, but I'm afraid it could be coincidence.

I don't want to send you on a wrong path, I will perform and document
several tests on each case today and I will get back to you with a
definitive answer supported by documented test case.

- William


From Larry.Finger at lwfinger.net  Fri Nov 20 15:05:39 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 08:05:39 -0600
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201212.19588.mb@bu3sch.de>
References: <200911201212.19588.mb@bu3sch.de>
Message-ID: <4B06A233.2070708@lwfinger.net>

On 11/20/2009 05:12 AM, Michael Buesch wrote:
> This patch adds a generic mechanism for overriding the SPROM mechanism
> on devices without SPROM hardware.
> 
> There currently is a major problem with this:
> It tries to deduce a MAC address from various hardware parameters. But
> currently it will result in the same MAC address for machines of the same
> type. Does somebody have an idea of some device-instance specific serial
> number or something similar that could be hashed into the MAC?

You might look at the "root=" part of /proc/cmdline. Mine says
"root=/dev/disk/by-id/ata-TOSHIBA_MK2546GSX_18C2P0KCT-part1". That disk serial
number would certainly be unique. Even if it just said "root=/dev/sda1", it
would be repeatable.

Larry



From mb at bu3sch.de  Fri Nov 20 15:11:09 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Nov 2009 15:11:09 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06A233.2070708@lwfinger.net>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
Message-ID: <200911201511.11042.mb@bu3sch.de>

On Friday 20 November 2009 15:05:39 Larry Finger wrote:
> On 11/20/2009 05:12 AM, Michael Buesch wrote:
> > This patch adds a generic mechanism for overriding the SPROM mechanism
> > on devices without SPROM hardware.
> > 
> > There currently is a major problem with this:
> > It tries to deduce a MAC address from various hardware parameters. But
> > currently it will result in the same MAC address for machines of the same
> > type. Does somebody have an idea of some device-instance specific serial
> > number or something similar that could be hashed into the MAC?
> 
> You might look at the "root=" part of /proc/cmdline. Mine says
> "root=/dev/disk/by-id/ata-TOSHIBA_MK2546GSX_18C2P0KCT-part1". That disk serial
> number would certainly be unique. Even if it just said "root=/dev/sda1", it
> would be repeatable.

Ok, I think this is getting ugly :)
The problem with all this is that if you change the harddisk, or change the partitioning,
the wireless mac address would change. That would surely lead to confusion.

I think we probably have to drop this patch and instead do a mechanism that
fetches the sprom from userspace, if the card doesn't have one. This way we
can have a script in userspace that generates the image based on the PCI ID
information and just randomizes the MAC address once. The firmware loading
mechanism would be useful for that.
In case of an embedded device with the MAC in the nvram, the kernel can still
override the mac address provided by userspace.

-- 
Greetings, Michael.


From s.L-H at gmx.de  Fri Nov 20 15:34:49 2009
From: s.L-H at gmx.de (Stefan Lippers-Hollmann)
Date: Fri, 20 Nov 2009 15:34:49 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06A233.2070708@lwfinger.net>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
Message-ID: <200911201534.51602.s.L-H@gmx.de>

Hi

On Friday 20 November 2009, Larry Finger wrote:
> On 11/20/2009 05:12 AM, Michael Buesch wrote:
[...]
> You might look at the "root=" part of /proc/cmdline. Mine says
> "root=/dev/disk/by-id/ata-TOSHIBA_MK2546GSX_18C2P0KCT-part1". That disk serial
> number would certainly be unique. Even if it just said "root=/dev/sda1", it
> would be repeatable.
[...]

"by-id" has the disadvantage that it changes with the means of accessing 
the disk, namely if your driver uses the old (obsolete) ide API or is a new
libata driver.

Technically only "by-uuid" is relatively guaranteed to be stable (unless a 
partition gets cloned with dd), with "by-label" coming close (only bad if 
any disk or USB storage device duplicates an existing label, like "root").

Regards
	Stefan Lippers-Hollmann


From oncaphillis at snafu.de  Fri Nov 20 15:48:06 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 20 Nov 2009 15:48:06 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201511.11042.mb@bu3sch.de>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
	<200911201511.11042.mb@bu3sch.de>
Message-ID: <4B06AC26.6000002@snafu.de>

>> You might look at the "root=" part of /proc/cmdline. Mine says
>> "root=/dev/disk/by-id/ata-TOSHIBA_MK2546GSX_18C2P0KCT-part1". That disk serial
>> number would certainly be unique. Even if it just said "root=/dev/sda1", it
>> would be repeatable.
>
> Ok, I think this is getting ugly :)
> The problem with all this is that if you change the harddisk, or change the partitioning,
> the wireless mac address would change. That would surely lead to confusion.
>
> I think we probably have to drop this patch and instead do a mechanism that
> fetches the sprom from userspace, if the card doesn't have one. This way we
> can have a script in userspace that generates the image based on the PCI ID
> information and just randomizes the MAC address once. The firmware loading
> mechanism would be useful for that.
> In case of an embedded device with the MAC in the nvram, the kernel can still
> override the mac address provided by userspace.

  At least on my Acer One D250 dmidecode provides a mainboard
UUID.

Sebastian



From Larry.Finger at lwfinger.net  Fri Nov 20 15:51:51 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 08:51:51 -0600
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201511.11042.mb@bu3sch.de>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
	<200911201511.11042.mb@bu3sch.de>
Message-ID: <4B06AD07.7090705@lwfinger.net>

On 11/20/2009 08:11 AM, Michael Buesch wrote:
> Ok, I think this is getting ugly :)
> The problem with all this is that if you change the harddisk, or change the partitioning,
> the wireless mac address would change. That would surely lead to confusion.
> 
> I think we probably have to drop this patch and instead do a mechanism that
> fetches the sprom from userspace, if the card doesn't have one. This way we
> can have a script in userspace that generates the image based on the PCI ID
> information and just randomizes the MAC address once. The firmware loading
> mechanism would be useful for that.
> In case of an embedded device with the MAC in the nvram, the kernel can still
> override the mac address provided by userspace.

Perhaps we could have fwcutter generate pseudo-SPROM contents for the necessary
revisions and write them to /lib/firmware/b43 with randomized MAC. In fact, one
might only want to randomize the serial number part. That way ethereal would get
the vendor right.

Larry



From Larry.Finger at lwfinger.net  Fri Nov 20 15:55:29 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 08:55:29 -0600
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06ACCE.5040503@wetwork.net>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
	<4B06ACCE.5040503@wetwork.net>
Message-ID: <4B06ADE1.2000703@lwfinger.net>

On 11/20/2009 08:50 AM, Ehud Gavron wrote:
> How does WL do it?  Broadcom *has* to generate a MAC address that is
> both unique and in its assigned range.  If we can do the same thing in
> B43 that would be ideal.

They are memory mapping a file in /etc/wlan. How this file is generated is not
known. I looked at the Acer One D250 driver for Windows, but got no clue there.

Larry


From gavron at wetwork.net  Fri Nov 20 15:50:54 2009
From: gavron at wetwork.net (Ehud Gavron)
Date: Fri, 20 Nov 2009 07:50:54 -0700
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06A233.2070708@lwfinger.net>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
Message-ID: <4B06ACCE.5040503@wetwork.net>



Larry Finger wrote:
> On 11/20/2009 05:12 AM, Michael Buesch wrote:
>   
>> This patch adds a generic mechanism for overriding the SPROM mechanism
>> on devices without SPROM hardware.
>>
>> There currently is a major problem with this:
>> It tries to deduce a MAC address from various hardware parameters. But
>> currently it will result in the same MAC address for machines of the same
>> type. Does somebody have an idea of some device-instance specific serial
>> number or something similar that could be hashed into the MAC?
>>     
>
> You might look at the "root=" part of /proc/cmdline. Mine says
> "root=/dev/disk/by-id/ata-TOSHIBA_MK2546GSX_18C2P0KCT-part1". That disk serial
> number would certainly be unique. Even if it just said "root=/dev/sda1", it
> would be repeatable.
>
> Larry
>
>   
How does WL do it?  Broadcom *has* to generate a MAC address that is 
both unique and in its assigned range.  If we can do the same thing in 
B43 that would be ideal.

E
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   


From oncaphillis at snafu.de  Fri Nov 20 18:04:54 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Fri, 20 Nov 2009 18:04:54 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06B794.1080206@fback.net>
References: <200911201212.19588.mb@bu3sch.de>
	<4B06A233.2070708@lwfinger.net>	<200911201511.11042.mb@bu3sch.de>
	<4B06AC26.6000002@snafu.de> <4B06B794.1080206@fback.net>
Message-ID: <4B06CC36.2040608@snafu.de>

On 11/20/2009 04:36 PM, Bart?omiej Ochman wrote:
> Oncaphillis wrote:
>>
>> At least on my Acer One D250 dmidecode provides a mainboard
>> UUID.
> Who's the vendor of ethernet chip in this acer? Broadcom too?

lspci tells me its broadcom

See the lspci under

http://oncaphillis.net/lspci-aspire-d250.txt

and the dmidecode output under


http://oncaphillis.net/dmidecode-aspire-d250.txt

Sebastian


From Larry.Finger at lwfinger.net  Fri Nov 20 18:19:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 11:19:23 -0600
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201511.11042.mb@bu3sch.de>
References: <200911201212.19588.mb@bu3sch.de> <4B06A233.2070708@lwfinger.net>
	<200911201511.11042.mb@bu3sch.de>
Message-ID: <4B06CF9B.4040201@lwfinger.net>

On 11/20/2009 08:11 AM, Michael Buesch wrote:
> 
> I think we probably have to drop this patch and instead do a mechanism that
> fetches the sprom from userspace, if the card doesn't have one. This way we
> can have a script in userspace that generates the image based on the PCI ID
> information and just randomizes the MAC address once. The firmware loading
> mechanism would be useful for that.
> In case of an embedded device with the MAC in the nvram, the kernel can still
> override the mac address provided by userspace.
> 

Your patch may be OK. You can get the serial number for the system from
/sys/class/dmi/id/product_serial or the UUID from
/sys/class/dmi/id/product_uuid. Either would work as the initialization for the
hash.

Larry



From mtcstle at yahoo.com  Fri Nov 20 18:44:54 2009
From: mtcstle at yahoo.com (John Mountcastle)
Date: Fri, 20 Nov 2009 09:44:54 -0800 (PST)
Subject: unsubscribe
In-Reply-To: <200911192113.35757.mb@bu3sch.de>
References: <4b059ffa.0PbmHUedj2WTwpAO%Larry.Finger@lwfinger.net>
	<200911192113.35757.mb@bu3sch.de>
Message-ID: <172892.33208.qm@web65405.mail.ac4.yahoo.com>

unsubscribe me please




________________________________
From: Michael Buesch <mb at bu3sch.de>
To: Larry Finger <Larry.Finger at lwfinger.net>
Cc: linux-wireless at vger.kernel.org; bcm43xx-dev at lists.berlios.de
Sent: Thu, November 19, 2009 3:13:33 PM
Subject: Re: [PATCH] ssb: Unconditionally log results of core scans

On Thursday 19 November 2009 20:43:54 Larry Finger wrote:
> At present, the results of an SSB core scan are only logged when
> CONFIG_SSB_DEBUG is "y". As this may not be set in a distro kernel,
> it is difficult interpret many problems posted in bug reports or in
> help forums.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> Index: wireless-testing/drivers/ssb/scan.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/scan.c
> +++ wireless-testing/drivers/ssb/scan.c
> @@ -354,7 +354,7 @@ int ssb_bus_scan(struct ssb_bus *bus,
>? ??? ??? dev->bus = bus;
>? ??? ??? dev->ops = bus->ops;
>? 
> -??? ??? ssb_dprintk(KERN_INFO PFX
> +??? ??? printk(KERN_INFO PFX
>? ??? ??? ??? ? ? "Core %d found: %s "
>? ??? ??? ??? ? ? "(cc 0x%03X, rev 0x%02X, vendor 0x%04X)\n",
>? ??? ??? ??? ? ? i, ssb_core_name(dev->id.coreid),
> 
> 

Please use KERN_DEBUG

-- 
Greetings, Michael.
_______________________________________________
Bcm43xx-dev mailing list
Bcm43xx-dev at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091120/49e89071/attachment.html>

From chris at cvine.freeserve.co.uk  Fri Nov 20 20:58:34 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Fri, 20 Nov 2009 19:58:34 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B068ED9.5070107@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
Message-ID: <20091120195834.334d8bc0@boulder.homenet>

On Fri, 20 Nov 2009 06:43:05 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> One last check. I would appreciate receiving answers to the following
> questions. These questions apply to anyone else with this problem.
> 
> Does the pm_qos patch help your "fatal DMA error" problem,
> particularly when booted from power-off?
> 
> If you warm-boot after loading the wl driver, does the patch make any
> difference?

What's the date/time of the last patch you posted for this and what
kernel does it apply to?

Chris




From Larry.Finger at lwfinger.net  Fri Nov 20 21:05:25 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Nov 2009 14:05:25 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091120195834.334d8bc0@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>
	<20091120195834.334d8bc0@boulder.homenet>
Message-ID: <4B06F685.1020405@lwfinger.net>

On 11/20/2009 01:58 PM, Chris Vine wrote:
> On Fri, 20 Nov 2009 06:43:05 -0600
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
>> One last check. I would appreciate receiving answers to the following
>> questions. These questions apply to anyone else with this problem.
>>
>> Does the pm_qos patch help your "fatal DMA error" problem,
>> particularly when booted from power-off?
>>
>> If you warm-boot after loading the wl driver, does the patch make any
>> difference?
> 
> What's the date/time of the last patch you posted for this and what
> kernel does it apply to?

Friday 11/13 ar 22:38 CET. The link is at
https://lists.berlios.de/pipermail/bcm43xx-dev/2009-November/006338.html.

The patch is written for wireless-testing, but it should apply on mainline
kernels as well.

Larry



From b3nton at gmail.com  Fri Nov 20 21:23:35 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Fri, 20 Nov 2009 20:23:35 +0000
Subject: b43 kills my kernel
In-Reply-To: <200911201154.08090.mb@bu3sch.de>
References: <4AFD7C49.3000408@snafu.de>
	<200911201027.02760.mb@bu3sch.de>	<4B066F80.2000605@snafu.de>
	<200911201154.08090.mb@bu3sch.de>
Message-ID: <4B06FAC7.4070806@gmail.com>

On 20/11/09 10:54, Michael Buesch wrote:
> Can somebody give me a genuine SPROM image for an LP-PHY card, please?
> Just do this:
> sudo cat $(find /sys/devices -name ssb_sprom)>  ssb_sprom_copy
>
Does this help?

Andy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ssb_sprom_copy
Type: application/octet-stream
Size: 882 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091120/38dfaed9/attachment.obj>

From chris at cvine.freeserve.co.uk  Sat Nov 21 01:15:12 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Sat, 21 Nov 2009 00:15:12 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B06F685.1020405@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<20091120195834.334d8bc0@boulder.homenet>
	<4B06F685.1020405@lwfinger.net>
Message-ID: <20091121001512.02326eda@boulder.homenet>

On Fri, 20 Nov 2009 14:05:25 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 11/20/2009 01:58 PM, Chris Vine wrote:
> > On Fri, 20 Nov 2009 06:43:05 -0600
> > Larry Finger <Larry.Finger at lwfinger.net> wrote:
> >> One last check. I would appreciate receiving answers to the
> >> following questions. These questions apply to anyone else with
> >> this problem.
> >>
> >> Does the pm_qos patch help your "fatal DMA error" problem,
> >> particularly when booted from power-off?
> >>
> >> If you warm-boot after loading the wl driver, does the patch make
> >> any difference?
> > 
> > What's the date/time of the last patch you posted for this and what
> > kernel does it apply to?
> 
> Friday 11/13 ar 22:38 CET. The link is at
> https://lists.berlios.de/pipermail/bcm43xx-dev/2009-November/006338.html.
> 
> The patch is written for wireless-testing, but it should apply on
> mainline kernels as well.

OK.  I have applied the patch to mainline kernel 2.6.32-rc8.

COLD BOOT

On a cold boot, the patch gives rise to a very substantial improvement.
Without it, with the processor acpi module loaded, often just bringing
up the interface would cause the DMA errors, and if that didn't do it
then running 'iwlist scan' a few times always would.  At that point the
wireless device required a cold boot to get it working again.

With the patch applied and with the processor acpi module loaded it
works well for a period - I can bring up the interface, associate with
my wireless router and do some web browsing. However if I gave it a
stress test by rsyncing a large directory (actually all my
mozilla/firefox caches) then after a while, say 1 minute of full speed
throughput, I got the kernel warning at the end of this post. Shortly
after this the DMA errors arose, all throughput ceased and shortly
afterwards I got a complete kernel lock-up.  (I couldn't ssh in or nor
did anything appear in the logs.) I was not able to capture the text of
the DMA errors but they followed the usual pattern.

This is pretty well the same effect as not applying the patch and
blacklisting the processor module: I reported a few weeks ago that
blacklisting that module solves the DMA problem for me, but further
testing showed that to be wrong - I got kernel warnings (sorry I didn't
save them) followed by the usual DMA errors following sometimes by a
kernel lock-up.

WARM BOOT FROM KERNEL WITH WL MODULE INSTALLED

The patched kernel makes no change on a warm boot in the sense that if I
warm boot after initialising the wireless device with the wl module
then the b43 module appears to work correctly, both with and without
the patch applied.

On the same stress test as mentioned above, I have not been able to
induce the DMA errors nor kernel warnings.  It resolutely refuses to do
anything except work correctly.

KERNEL WARNING

The kernel warning I induced on a cold boot was as follows:

WARNING: at drivers/net/wireless/b43/dma.c:1151
b43_dma_handle_txstatus+0x55/0x420 [b43]()
Hardware name: 20021,2959
Modules linked in: arc4 ecb b43 ssb mmc_core pcmcia mac80211 cfg80211
led_class pcmcia_core i915 drm_kms_helper drm i2c_algo_bit snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss sco bnep rfcomm l2cap crc16 nfsd exportfs nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables xt_helper xt_conntrack xt_state x_tables nf_conntrack_irc nf_conntrack_ftp nf_conntrack parport_pc parport fuse snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_hwdep snd_pcm uvcvideo rtc_cmos btusb bluetooth rtc_core intel_agp rfkill snd_timer battery ac videodev rtc_lib video processor thermal usbhid tg3 psmouse v4l1_compat snd wmi thermal_sys agpgart button output hwmon i2c_i801 evdev libphy soundcore sg serio_raw snd_page_alloc
Pid: 4412, comm: irq/17-b43 Not tainted 2.6.32-rc8 #1
Call Trace:
 [<f8dd4c95>] ? b43_dma_handle_txstatus+0x55/0x420 [b43]
 [<c10328fc>] warn_slowpath_common+0x7c/0xa0
 [<f8dd4c95>] ? b43_dma_handle_txstatus+0x55/0x420 [b43]
 [<c1032935>] warn_slowpath_null+0x15/0x20
 [<f8dd4c95>] b43_dma_handle_txstatus+0x55/0x420 [b43]
 [<c10265e1>] ? __dequeue_entity+0x21/0x40
 [<c1028ee9>] ? finish_task_switch+0x39/0x80
 [<f8dceb7e>] b43_handle_txstatus+0x6e/0x80 [b43]
 [<f8dbcdbb>] b43_do_interrupt_thread+0x21b/0x910 [b43]
 [<c102a34f>] ? try_to_wake_up+0x8f/0x210
 [<f8dbd518>] b43_interrupt_thread_handler+0x18/0x30 [b43]
 [<c1068580>] irq_thread+0xc0/0x1a0
 [<c10684c0>] ? irq_thread+0x0/0x1a0
 [<c104ac24>] kthread+0x74/0x80
 [<c104abb0>] ? kthread+0x0/0x80
 [<c100384f>] kernel_thread_helper+0x7/0x38
---[ end trace 778fc6df7aca6d14 ]---
------------[ cut here ]------------
WARNING: at drivers/net/wireless/b43/dma.c:1154
b43_dma_handle_txstatus+0x6e/0x420 [b43]()
Hardware name: 20021,2959
Modules linked in: arc4 ecb b43 ssb mmc_core pcmcia mac80211 cfg80211
led_class pcmcia_core i915 drm_kms_helper drm i2c_algo_bit snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss sco bnep rfcomm l2cap crc16 nfsd exportfs nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables xt_helper xt_conntrack xt_state x_tables nf_conntrack_irc nf_conntrack_ftp nf_conntrack parport_pc parport fuse snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_hwdep snd_pcm uvcvideo rtc_cmos btusb bluetooth rtc_core intel_agp rfkill snd_timer battery ac videodev rtc_lib video processor thermal usbhid tg3 psmouse v4l1_compat snd wmi thermal_sys agpgart button output hwmon i2c_i801 evdev libphy soundcore sg serio_raw snd_page_alloc
Pid: 4412, comm: irq/17-b43 Tainted: G        W  2.6.32-rc8 #1
Call Trace:
 [<f8dd4cae>] ? b43_dma_handle_txstatus+0x6e/0x420 [b43]
 [<c10328fc>] warn_slowpath_common+0x7c/0xa0
 [<f8dd4cae>] ? b43_dma_handle_txstatus+0x6e/0x420 [b43]
 [<c1032935>] warn_slowpath_null+0x15/0x20
 [<f8dd4cae>] b43_dma_handle_txstatus+0x6e/0x420 [b43]
 [<c10265e1>] ? __dequeue_entity+0x21/0x40
 [<c1028ee9>] ? finish_task_switch+0x39/0x80
 [<f8dceb7e>] b43_handle_txstatus+0x6e/0x80 [b43]
 [<f8dbcdbb>] b43_do_interrupt_thread+0x21b/0x910 [b43]
 [<c102a34f>] ? try_to_wake_up+0x8f/0x210
 [<f8dbd518>] b43_interrupt_thread_handler+0x18/0x30 [b43]
 [<c1068580>] irq_thread+0xc0/0x1a0
 [<c10684c0>] ? irq_thread+0x0/0x1a0
 [<c104ac24>] kthread+0x74/0x80
 [<c104abb0>] ? kthread+0x0/0x80
 [<c100384f>] kernel_thread_helper+0x7/0x38
---[ end trace 778fc6df7aca6d15 ]---

Chris





From przemekkulczycki at gmail.com  Sun Nov 22 18:47:37 2009
From: przemekkulczycki at gmail.com (Przemek Kulczycki)
Date: Sun, 22 Nov 2009 18:47:37 +0100
Subject: Extracting firmware from Broadcom STA driver
Message-ID: <fe1e5a8c0911220947w4aa565f3pc8a815b42263a331@mail.gmail.com>

Hi.
Is it possible to modify b43-fwcutter to extract firmware from the
Broadcom's STA driver?
http://www.broadcom.com/support/802.11/linux_sta.php

I'm asking about that because Canonical is distributing this driver as
part of the Ubuntu CDs, so it would be possible to have a working b43
driver without having to download the firmware from the internet (the
paradox of requiring to have an internet connection to install a
network driver).
http://packages.ubuntu.com/source/karmic/bcmwl
http://packages.ubuntu.com/karmic/bcmwl-kernel-source

Did anyone try to use the firmware from this driver in the b43 driver?
If not, would anyone be willing to try?

As far as I understand, the License of this driver allows distribution
in unmodified form, so the package manager of any linux distro could
run b43-fwcutter on the STA driver and extract the firmware for use in
the b43 driver.

What do you think about it?
Would that make sense?
Or are there any legal or technical obstacles that would block it?

Does this driver differ that much from the one that is used currently
to extract the firmware?
http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o
http://mirror2.openwrt.org/sources/broadcom-wl-4.150.10.5.tar.bz2

Regards
-- 
## Przemys?aw Kulczycki >><< Azrael Nightwalker ##
# jabber: azrael[na]jabster.pl | tlen: azrael29a #
### www: http://reksio.ftj.agh.edu.pl/~azrael/ ###


From mb at bu3sch.de  Sun Nov 22 18:52:17 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 22 Nov 2009 18:52:17 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <200911192224.29491.mb@bu3sch.de>
References: <200911192224.29491.mb@bu3sch.de>
Message-ID: <200911221852.19143.mb@bu3sch.de>

On Thursday 19 November 2009 22:24:29 Michael Buesch wrote:
> This rewrites the error handling policies in the TX status handler.
> It tries to be error-tolerant as in "try hard to not crash the machine".
> It won't recover from errors (that are bugs in the firmware or driver),
> because that's impossible. However, it will return a more or less useful
> error message and bail out. It also tries hard to use rate-limited messages
> to not flood the syslog in case of a failure.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>

So did somebody try this with opensource firmware, yet?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Nov 22 19:11:52 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Nov 2009 12:11:52 -0600
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <200911221852.19143.mb@bu3sch.de>
References: <200911192224.29491.mb@bu3sch.de> <200911221852.19143.mb@bu3sch.de>
Message-ID: <4B097EE8.10902@lwfinger.net>

On 11/22/2009 11:52 AM, Michael Buesch wrote:
> On Thursday 19 November 2009 22:24:29 Michael Buesch wrote:
>> This rewrites the error handling policies in the TX status handler.
>> It tries to be error-tolerant as in "try hard to not crash the machine".
>> It won't recover from errors (that are bugs in the firmware or driver),
>> because that's impossible. However, it will return a more or less useful
>> error message and bail out. It also tries hard to use rate-limited messages
>> to not flood the syslog in case of a failure.
>>
>> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> So did somebody try this with opensource firmware, yet?

I'm testing now. So far, it has survived about 18 hours running tcpperf in one
console, and a flood ping in another. It looks really good, but I want at least
24 hours before committing.

Larry


From mb at bu3sch.de  Sun Nov 22 19:19:00 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 22 Nov 2009 19:19:00 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <4B097EE8.10902@lwfinger.net>
References: <200911192224.29491.mb@bu3sch.de>
	<200911221852.19143.mb@bu3sch.de> <4B097EE8.10902@lwfinger.net>
Message-ID: <200911221919.02550.mb@bu3sch.de>

On Sunday 22 November 2009 19:11:52 Larry Finger wrote:
> On 11/22/2009 11:52 AM, Michael Buesch wrote:
> > On Thursday 19 November 2009 22:24:29 Michael Buesch wrote:
> >> This rewrites the error handling policies in the TX status handler.
> >> It tries to be error-tolerant as in "try hard to not crash the machine".
> >> It won't recover from errors (that are bugs in the firmware or driver),
> >> because that's impossible. However, it will return a more or less useful
> >> error message and bail out. It also tries hard to use rate-limited messages
> >> to not flood the syslog in case of a failure.
> >>
> >> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> > 
> > So did somebody try this with opensource firmware, yet?
> 
> I'm testing now. So far, it has survived about 18 hours running tcpperf in one
> console, and a flood ping in another.

Cool. Thanks for testing. I'd have expected it to blow up, though. It's a little bit
strange, because there still are reports of blowing up opensource firmware. This patch
should produce better error messages in that case (it will not fix the blown firmware).

> It looks really good, but I want at least 
> 24 hours before committing.

Well, no. Just commit it, please. If this breaks, the _firmware_ has to be fixed.
Not the patch.

-- 
Greetings, Michael.


From chris at cvine.freeserve.co.uk  Sun Nov 22 20:03:53 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Sun, 22 Nov 2009 19:03:53 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091121001512.02326eda@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<20091120195834.334d8bc0@boulder.homenet>
	<4B06F685.1020405@lwfinger.net>
	<20091121001512.02326eda@boulder.homenet>
Message-ID: <20091122190353.06cfdab7@boulder.homenet>

On Sat, 21 Nov 2009 00:15:12 +0000
Chris Vine <chris at cvine.freeserve.co.uk> wrote:
> WARM BOOT FROM KERNEL WITH WL MODULE INSTALLED
> 
> The patched kernel makes no change on a warm boot in the sense that
> if I warm boot after initialising the wireless device with the wl
> module then the b43 module appears to work correctly, both with and
> without the patch applied.
> 
> On the same stress test as mentioned above, I have not been able to
> induce the DMA errors nor kernel warnings.  It resolutely refuses to
> do anything except work correctly.

This is just to say that I have carried out further stress tests today
after warm booting to an unpatched linux-2.6.32-rc8 kernel with the b43
driver (on the assumption that unpatched is the least favourable case
for the driver).  This is a warm reboot from a 2.6.31.6 kernel which had
the wl driver installed.

I have created an extended period of high speed traffic on my wireless
lan and I cannot induce any errors at all with the b43 driver on a warm
reboot.

This makes me wonder whether the patch is just (partially) masking the
problem rather than actually dealing with it.

Chris

PS   The wl driver was compiled from
hybrid-portsrc-x86_32-v5.10.91.9.3.tar.gz available at
http://www.broadcom.com/support/802.11/linux_sta.php .  (Note for
anyone want to try this with a warm boot from 2.6.32, that this driver
will not compile with 2.6.32 without patching the headers of one of the
blob glue files as one of them fails to include linux/sched.h.)




From Larry.Finger at lwfinger.net  Mon Nov 23 02:52:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Nov 2009 19:52:47 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091122190353.06cfdab7@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>
	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>
	<4B068ED9.5070107@lwfinger.net>	<20091120195834.334d8bc0@boulder.homenet>	<4B06F685.1020405@lwfinger.net>	<20091121001512.02326eda@boulder.homenet>
	<20091122190353.06cfdab7@boulder.homenet>
Message-ID: <4B09EAEF.6010202@lwfinger.net>

On 11/22/2009 01:03 PM, Chris Vine wrote:
> On Sat, 21 Nov 2009 00:15:12 +0000
> Chris Vine <chris at cvine.freeserve.co.uk> wrote:
>> WARM BOOT FROM KERNEL WITH WL MODULE INSTALLED
>>
>> The patched kernel makes no change on a warm boot in the sense that
>> if I warm boot after initialising the wireless device with the wl
>> module then the b43 module appears to work correctly, both with and
>> without the patch applied.
>>
>> On the same stress test as mentioned above, I have not been able to
>> induce the DMA errors nor kernel warnings.  It resolutely refuses to
>> do anything except work correctly.
> 
> This is just to say that I have carried out further stress tests today
> after warm booting to an unpatched linux-2.6.32-rc8 kernel with the b43
> driver (on the assumption that unpatched is the least favourable case
> for the driver).  This is a warm reboot from a 2.6.31.6 kernel which had
> the wl driver installed.
> 
> I have created an extended period of high speed traffic on my wireless
> lan and I cannot induce any errors at all with the b43 driver on a warm
> reboot.
> 
> This makes me wonder whether the patch is just (partially) masking the
> problem rather than actually dealing with it.

We know that the wl driver does something to the interface that persists across
a warm boot - we just do not know what. It does not appear to be done in any of
the MMIO traffic - at least I have not seen it in the mmio-trace output. If
anyone has a KVM setup using PCI passthrough, it is possible to trace PCI
configuration traffic?

Have you tried running your system with the patch entitled "[PATCH] b43: Rewrite
DMA Tx status handling sanity checks"? It cleared up some of the problems that I
was seeing with the open-source firmware.

Larry


From Larry.Finger at lwfinger.net  Mon Nov 23 02:55:03 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Nov 2009 19:55:03 -0600
Subject: Extracting firmware from Broadcom STA driver
In-Reply-To: <fe1e5a8c0911220947w4aa565f3pc8a815b42263a331@mail.gmail.com>
References: <fe1e5a8c0911220947w4aa565f3pc8a815b42263a331@mail.gmail.com>
Message-ID: <4B09EB77.9060509@lwfinger.net>

On 11/22/2009 11:47 AM, Przemek Kulczycki wrote:
> Hi.
> Is it possible to modify b43-fwcutter to extract firmware from the
> Broadcom's STA driver?
> http://www.broadcom.com/support/802.11/linux_sta.php
> 
> I'm asking about that because Canonical is distributing this driver as
> part of the Ubuntu CDs, so it would be possible to have a working b43
> driver without having to download the firmware from the internet (the
> paradox of requiring to have an internet connection to install a
> network driver).
> http://packages.ubuntu.com/source/karmic/bcmwl
> http://packages.ubuntu.com/karmic/bcmwl-kernel-source
> 
> Did anyone try to use the firmware from this driver in the b43 driver?
> If not, would anyone be willing to try?
> 
> As far as I understand, the License of this driver allows distribution
> in unmodified form, so the package manager of any linux distro could
> run b43-fwcutter on the STA driver and extract the firmware for use in
> the b43 driver.
> 
> What do you think about it?
> Would that make sense?
> Or are there any legal or technical obstacles that would block it?
> 
> Does this driver differ that much from the one that is used currently
> to extract the firmware?
> http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o
> http://mirror2.openwrt.org/sources/broadcom-wl-4.150.10.5.tar.bz2

The setting up of fwcutter for a new driver requires knowing where the various
sections that comprise the firmware. In the binary blob that accompanies this
driver, which is where the firmware is located, all symbolic info has been
stripped. As a result, it is impossible to know where the data is located.

Yes, it diffs from either of the above drivers. One of them has V3 firmware and
only works with b43legacy. The other has 410 firmware, which is older than the
478 firmware used by most people, and the 508 that I'm currently using.

Larry


Larry


From Larry.Finger at lwfinger.net  Mon Nov 23 02:34:09 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Nov 2009 19:34:09 -0600
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <200911192224.29491.mb@bu3sch.de>
References: <200911192224.29491.mb@bu3sch.de>
Message-ID: <4B09E691.8020205@lwfinger.net>

On 11/19/2009 03:24 PM, Michael Buesch wrote:
> This rewrites the error handling policies in the TX status handler.
> It tries to be error-tolerant as in "try hard to not crash the machine".
> It won't recover from errors (that are bugs in the firmware or driver),
> because that's impossible. However, it will return a more or less useful
> error message and bail out. It also tries hard to use rate-limited messages
> to not flood the syslog in case of a failure.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> ---

Tested and ACKed by Larry Finger. Not only does this improve the error handling
for b43, but it also appears to fix the skb == NULL error that I experienced
with the open-source firmware.

John - please push this into wireless-testing. It should also go to 2.6.32, but
it is likely too large for the current stage. At least Cc it to stable.

Larry


From Larry.Finger at lwfinger.net  Mon Nov 23 05:45:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Nov 2009 22:45:47 -0600
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <200911192224.29491.mb@bu3sch.de>
References: <200911192224.29491.mb@bu3sch.de>
Message-ID: <4B0A137B.7050604@lwfinger.net>

On 11/19/2009 03:24 PM, Michael Buesch wrote:
> This rewrites the error handling policies in the TX status handler.
> It tries to be error-tolerant as in "try hard to not crash the machine".
> It won't recover from errors (that are bugs in the firmware or driver),
> because that's impossible. However, it will return a more or less useful
> error message and bail out. It also tries hard to use rate-limited messages
> to not flood the syslog in case of a failure.

This patch definitely helped open-source firmware, but it is not a complete fix.
Usually, a failure occurs within minutes to a few hours under heavy load. For my
system, the load is repeating tcpperf transmits in one terminal, and a flood
ping in a second. This time, the system ran for ~25 hours before failing. After
removing the header to eliminate wrap-around, the messages logged are:

b43 ssb0:0: firmware: requesting b43-open/pcm5.fw
Loading OpenSource firmware version 410.31754
Hardware crypto acceleration not supported by firmware
QoS not supported by firmware
debug: Chip initialized
debug: 32-bit DMA initialized
debug: QoS disabled
debug: Wireless interface started
debug: Adding Interface type 2
wlan0: direct probe to AP 00:14:bf:85:49:fa (try 1)
wlan0: direct probe responded
wlan0: authenticate with AP 00:14:bf:85:49:fa (try 1)
wlan0: authenticated
wlan0: associate with AP 00:14:bf:85:49:fa (try 1)
wlan0: RX ReassocResp from 00:14:bf:85:49:fa (capab=0x411 status=12 aid=0)
wlan0: AP denied association (code=12)
wlan0: associate with AP 00:14:bf:85:49:fa (try 1)
wlan0: RX ReassocResp from 00:14:bf:85:49:fa (capab=0x411 status=12 aid=0)
wlan0: AP denied association (code=12)
wlan0: deauthenticating from 00:14:bf:85:49:fa by local choice (reason=3)
wlan0: direct probe to AP 00:14:bf:85:49:fa (try 1)
wlan0: direct probe to AP 00:14:bf:85:49:fa (try 1)
wlan0: direct probe responded
wlan0: authenticate with AP 00:14:bf:85:49:fa (try 1)
wlan0: authenticated
wlan0: associate with AP 00:14:bf:85:49:fa (try 1)
wlan0: RX ReassocResp from 00:14:bf:85:49:fa (capab=0x411 status=0 aid=2)
wlan0: associated
spurious 8259A interrupt: IRQ15.
SFW2-INext-DROP-DEFLT IN=wlan0 OUT=
MAC=00:18:39:5e:90:f9:00:14:bf:85:49:f8:08:00 SRC=192.168.1.1 DST=192.168.1.107
LEN=336 TOS=0x00 PREC=0x00 TTL=64 ID=64124 PROTO=UDP SPT=67 DPT=68 LEN=316
SFW2-INext-DROP-DEFLT IN=wlan0 OUT=
MAC=00:18:39:5e:90:f9:00:14:bf:85:49:f8:08:00 SRC=192.168.1.1 DST=192.168.1.107
LEN=336 TOS=0x00 PREC=0x00 TTL=64 ID=6664 PROTO=UDP SPT=67 DPT=68 LEN=316
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 146
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 148
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 118
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 150
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 152
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 154
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 156
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 158
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 160
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 162
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 164
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 134
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 166
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 168
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 170
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 172
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 174
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 176
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 178
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 180
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 182
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 184
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 154
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 186
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 156
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 188
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 158
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 190
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 160
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 192
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 162
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 194
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 196
debug: Out of order TX status report on DMA ring 1. Expected 114, but got 198

These messages continued. Unloading and reloading the driver restored the network.

Larry



From mb at bu3sch.de  Mon Nov 23 11:30:22 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 11:30:22 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <4B09E691.8020205@lwfinger.net>
References: <200911192224.29491.mb@bu3sch.de> <4B09E691.8020205@lwfinger.net>
Message-ID: <200911231130.23873.mb@bu3sch.de>

On Monday 23 November 2009 02:34:09 Larry Finger wrote:
> On 11/19/2009 03:24 PM, Michael Buesch wrote:
> > This rewrites the error handling policies in the TX status handler.
> > It tries to be error-tolerant as in "try hard to not crash the machine".
> > It won't recover from errors (that are bugs in the firmware or driver),
> > because that's impossible. However, it will return a more or less useful
> > error message and bail out. It also tries hard to use rate-limited messages
> > to not flood the syslog in case of a failure.
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> > 
> > ---
> 
> Tested and ACKed by Larry Finger. Not only does this improve the error handling
> for b43, but it also appears to fix the skb == NULL error that I experienced
> with the open-source firmware.

I don't think there's any way it can fix this. The patch doesn't change the
code behavior. It just changes the sanity checks, that under normal circumstances
should never trigger.

> John - please push this into wireless-testing. It should also go to 2.6.32, but
> it is likely too large for the current stage. At least Cc it to stable.

Don't put it into stable. This is not a fix.
I don't think it's suitable for 2.6.32 at this stage, too.

-- 
Greetings, Michael.


From johannes at sipsolutions.net  Mon Nov 23 11:18:37 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 23 Nov 2009 11:18:37 +0100
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B09EAEF.6010202@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<20091120195834.334d8bc0@boulder.homenet>	<4B06F685.1020405@lwfinger.net>
	<20091121001512.02326eda@boulder.homenet>
	<20091122190353.06cfdab7@boulder.homenet>
	<4B09EAEF.6010202@lwfinger.net>
Message-ID: <1258971517.7094.139.camel@johannes.local>

On Sun, 2009-11-22 at 19:52 -0600, Larry Finger wrote:

> We know that the wl driver does something to the interface that persists across
> a warm boot - we just do not know what. It does not appear to be done in any of
> the MMIO traffic - at least I have not seen it in the mmio-trace output. If
> anyone has a KVM setup using PCI passthrough, it is possible to trace PCI
> configuration traffic?

I'm pretty sure even the binary driver has to go through
drivers/pci/access.c, maybe you can just insert logging into that code?

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091123/25c660db/attachment.pgp>

From mb at bu3sch.de  Mon Nov 23 11:49:36 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 11:49:36 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <4B0A137B.7050604@lwfinger.net>
References: <200911192224.29491.mb@bu3sch.de> <4B0A137B.7050604@lwfinger.net>
Message-ID: <200911231149.38494.mb@bu3sch.de>

On Monday 23 November 2009 05:45:47 Larry Finger wrote:
> On 11/19/2009 03:24 PM, Michael Buesch wrote:
> > This rewrites the error handling policies in the TX status handler.
> > It tries to be error-tolerant as in "try hard to not crash the machine".
> > It won't recover from errors (that are bugs in the firmware or driver),
> > because that's impossible. However, it will return a more or less useful
> > error message and bail out. It also tries hard to use rate-limited messages
> > to not flood the syslog in case of a failure.
> 
> This patch definitely helped open-source firmware, but it is not a complete fix.

It is no fix _at_ _all_.
The patch does not change a single line of code that wasn't either an assertion
or a machine crash before.
So it just transforms assertions into more verbose assertions and crashes into
assertions without a crash.

> debug: Out of order TX status report on DMA ring 1. Expected 114, but got 146

Ok, this is what I expected.

Let's see what's going on. Here's the ring. o is unused, * is used.

ooooooooooooooo***************************************************ooooooooooooooooooooooooooo
               ^               ^                                 ^
               114             146                               newest
               oldest

So as you can see, the firmware reported a TX status for a frame right in the middle of
the ringbuffer. The new code detects this now before getting a double free and/or silent
memory corruption (freeing of used memory).

It really is illegal to report a TX status for a frame that's not the oldest one in the ring.
The firmware is required to process all frames in-order on one ring.

So how can this failure happen? I think there basically are three ways this can happen.

- First is that the ordering within one ring really gets messed up and it loses track
  of its ring pointers. I'm not sure if this is likely. Probably not.
- It messes up the ring membership. So it reports a TX status on the wrong ring.
  Note that the "ring" kernel pointer in the TX status report handler is derived
  from the cookie (and so also the number in the message "Out of order TX status
  report on DMA ring 1" is derived from the cookie). So it's untrustworthy in case of
  broken firmware. The firmware has QoS-alike mechanisms, even if QoS is disabled. Maybe
  these mechanisms are broken.
- Third is the possibility of a driver bug. I rule that out as long as nobody is
  able to reproduce it with proprietary firmware.

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Nov 23 12:05:30 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 12:05:30 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <5A2C6B7F-5617-49AA-B22A-A5574D6CD9FA@ing.unibs.it>
References: <200911192224.29491.mb@bu3sch.de> <200911231149.38494.mb@bu3sch.de>
	<5A2C6B7F-5617-49AA-B22A-A5574D6CD9FA@ing.unibs.it>
Message-ID: <200911231205.33093.mb@bu3sch.de>

On Monday 23 November 2009 12:00:15 Francesco Gringoli wrote:
> Hi Michael,
> 
> so you can observe this behavior at your site. Do you mind describing  
> the exact configuration? Maybe this time I can reproduce this  
> behavior, as I tried everything to make it happen. I also asked Larry  
> one of his boards and put it into several PCs but had no chance to  
> reproduce the crash. Could you please also report the neighboring  
> stations, the AP you are connected and so on.

I don't reproduce this, because I never really tried running the opensource firmware.
Larry reproduced it, this time.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Mon Nov 23 12:00:15 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Mon, 23 Nov 2009 12:00:15 +0100
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <200911231149.38494.mb@bu3sch.de>
References: <200911192224.29491.mb@bu3sch.de> <4B0A137B.7050604@lwfinger.net>
	<200911231149.38494.mb@bu3sch.de>
Message-ID: <5A2C6B7F-5617-49AA-B22A-A5574D6CD9FA@ing.unibs.it>

On Nov 23, 2009, at 11:49 AM, Michael Buesch wrote:

> On Monday 23 November 2009 05:45:47 Larry Finger wrote:
>> On 11/19/2009 03:24 PM, Michael Buesch wrote:
>>> This rewrites the error handling policies in the TX status handler.
>>> It tries to be error-tolerant as in "try hard to not crash the  
>>> machine".
>>> It won't recover from errors (that are bugs in the firmware or  
>>> driver),
>>> because that's impossible. However, it will return a more or less  
>>> useful
>>> error message and bail out. It also tries hard to use rate-limited  
>>> messages
>>> to not flood the syslog in case of a failure.
>>
>> This patch definitely helped open-source firmware, but it is not a  
>> complete fix.
>
> It is no fix _at_ _all_.
> The patch does not change a single line of code that wasn't either  
> an assertion
> or a machine crash before.
> So it just transforms assertions into more verbose assertions and  
> crashes into
> assertions without a crash.
>
>> debug: Out of order TX status report on DMA ring 1. Expected 114,  
>> but got 146
>
> Ok, this is what I expected.
>
> Let's see what's going on. Here's the ring. o is unused, * is used.
>
> ooooooooooooooo 
> ***************************************************ooooooooooooooooooooooooooo
>               ^               ^                                 ^
>               114             146                               newest
>               oldest
>
> So as you can see, the firmware reported a TX status for a frame  
> right in the middle of
> the ringbuffer. The new code detects this now before getting a  
> double free and/or silent
> memory corruption (freeing of used memory).
Hi Michael,

so you can observe this behavior at your site. Do you mind describing  
the exact configuration? Maybe this time I can reproduce this  
behavior, as I tried everything to make it happen. I also asked Larry  
one of his boards and put it into several PCs but had no chance to  
reproduce the crash. Could you please also report the neighboring  
stations, the AP you are connected and so on.

Many thanks,
-Francesco



Informativa sulla privacy: http://help.ing.unibs.it/privacy.php




From Larry.Finger at lwfinger.net  Mon Nov 23 16:41:56 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Nov 2009 09:41:56 -0600
Subject: [PATCH] b43: Rewrite DMA Tx status handling sanity checks
In-Reply-To: <5A2C6B7F-5617-49AA-B22A-A5574D6CD9FA@ing.unibs.it>
References: <200911192224.29491.mb@bu3sch.de> <4B0A137B.7050604@lwfinger.net>
	<200911231149.38494.mb@bu3sch.de>
	<5A2C6B7F-5617-49AA-B22A-A5574D6CD9FA@ing.unibs.it>
Message-ID: <4B0AAD44.2090908@lwfinger.net>

On 11/23/2009 05:00 AM, Francesco Gringoli wrote:
> 
> so you can observe this behavior at your site. Do you mind describing
> the exact configuration? Maybe this time I can reproduce this behavior,
> as I tried everything to make it happen. I also asked Larry one of his
> boards and put it into several PCs but had no chance to reproduce the
> crash. Could you please also report the neighboring stations, the AP you
> are connected and so on.

As Michael said, I was the one that reported the behavior. My card was a BCM4318
in a Cardbus format running V5.2 of the openfwwf. The AP is a Linksys WRT54G V5
running standard firmware v1.02.6. A list of nearby AP's with channels and
strengths are as follows:

          Cell 01 - Address: 00:14:BF:85:49:FA
                    Channel:1
                    Frequency:2.412 GHz (Channel 1)
                    Quality=70/70  Signal level=-6 dBm
                    Encryption key:on  (WPA2)
                    ESSID:"lwfdjf_rad"
          Cell 02 - Address: 00:1B:11:5C:B0:83
                    Channel:1
                    Frequency:2.412 GHz (Channel 1)
                    Quality=25/70  Signal level=-85 dBm
                    Encryption key:on   (WEP)
                    ESSID:"Browns"
          Cell 03 - Address: 00:1A:70:46:BA:B1
                    Channel:11
                    Frequency:2.462 GHz (Channel 11)
                    Quality=42/70  Signal level=-68 dBm
                    Encryption key:on    (WEP)
                    ESSID:"Larry with space"
          Cell 04 - Address: 00:23:69:81:B7:D9
                    Channel:6
                    Frequency:2.437 GHz (Channel 6)
                    Quality=34/70  Signal level=-76 dBm
                    Encryption key:on    (WEP)
                    ESSID:"Hoover"
          Cell 05 - Address: 00:14:BF:0C:7E:14
                    Channel:6
                    Frequency:2.437 GHz (Channel 6)
                    Quality=28/70  Signal level=-82 dBm
                    Encryption key:on     (WPA)
                    ESSID:"linksys"
          Cell 06 - Address: 00:22:6B:78:18:7D
                    Channel:11
                    Frequency:2.462 GHz (Channel 11)
                    Quality=26/70  Signal level=-84 dBm
                    Encryption key:on     (WPA)
                    ESSID:"Go Away"

I was connected to the AP in Cell 01. The test was my usual with a repeating
tcpperf run in one terminal and a flood ping to the same server in a second.
Please let me know if I missed any useful information.

This condition may take a long time to show up. For instance, my latest test ran
for 25 hours before failure. All other tests have failed much more quickly, but
one never knows. I have not seen this failure with standard firmware.

Larry

Larry







From mb at bu3sch.de  Mon Nov 23 20:12:13 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 20:12:13 +0100
Subject: [PATCH] ssb: Fix SPROM writing
Message-ID: <200911232012.14182.mb@bu3sch.de>

The SPROM writing routines were broken since we rewrote the suspend
handling on wireless devices, because SPROM writing depended on suspend.

This patch changes it and freezes devices with the driver remove(), probe()
callbacks instead. This also simplifies the whole logics a lot.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Tested on BCM4306


Index: wireless-testing/drivers/ssb/main.c
===================================================================
--- wireless-testing.orig/drivers/ssb/main.c	2009-11-06 21:45:29.000000000 +0100
+++ wireless-testing/drivers/ssb/main.c	2009-11-23 19:59:24.000000000 +0100
@@ -140,6 +140,19 @@ static void ssb_device_put(struct ssb_de
 		put_device(dev->dev);
 }
 
+static inline struct ssb_driver *ssb_driver_get(struct ssb_driver *drv)
+{
+	if (drv)
+		get_driver(&drv->drv);
+	return drv;
+}
+
+static inline void ssb_driver_put(struct ssb_driver *drv)
+{
+	if (drv)
+		put_driver(&drv->drv);
+}
+
 static int ssb_device_resume(struct device *dev)
 {
 	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
@@ -210,90 +223,81 @@ int ssb_bus_suspend(struct ssb_bus *bus)
 EXPORT_SYMBOL(ssb_bus_suspend);
 
 #ifdef CONFIG_SSB_SPROM
-int ssb_devices_freeze(struct ssb_bus *bus)
+/** ssb_devices_freeze - Freeze all devices on the bus.
+ *
+ * After freezing no device driver will be handling a device
+ * on this bus anymore. ssb_devices_thaw() must be called after
+ * a successful freeze to reactivate the devices.
+ *
+ * @bus: The bus.
+ * @ctx: Context structure. Pass this to ssb_devices_thaw().
+ */
+int ssb_devices_freeze(struct ssb_bus *bus, struct ssb_freeze_context *ctx)
 {
-	struct ssb_device *dev;
-	struct ssb_driver *drv;
-	int err = 0;
-	int i;
-	pm_message_t state = PMSG_FREEZE;
+	struct ssb_device *sdev;
+	struct ssb_driver *sdrv;
+	unsigned int i;
+
+	memset(ctx, 0, sizeof(*ctx));
+	ctx->bus = bus;
+	SSB_WARN_ON(bus->nr_devices > ARRAY_SIZE(ctx->device_frozen));
 
-	/* First check that we are capable to freeze all devices. */
 	for (i = 0; i < bus->nr_devices; i++) {
-		dev = &(bus->devices[i]);
-		if (!dev->dev ||
-		    !dev->dev->driver ||
-		    !device_is_registered(dev->dev))
-			continue;
-		drv = drv_to_ssb_drv(dev->dev->driver);
-		if (!drv)
+		sdev = ssb_device_get(&bus->devices[i]);
+
+		if (!sdev->dev || !sdev->dev->driver ||
+		    !device_is_registered(sdev->dev)) {
+			ssb_device_put(sdev);
 			continue;
-		if (!drv->suspend) {
-			/* Nope, can't suspend this one. */
-			return -EOPNOTSUPP;
 		}
-	}
-	/* Now suspend all devices */
-	for (i = 0; i < bus->nr_devices; i++) {
-		dev = &(bus->devices[i]);
-		if (!dev->dev ||
-		    !dev->dev->driver ||
-		    !device_is_registered(dev->dev))
-			continue;
-		drv = drv_to_ssb_drv(dev->dev->driver);
-		if (!drv)
+		sdrv = ssb_driver_get(drv_to_ssb_drv(sdev->dev->driver));
+		if (!sdrv || SSB_WARN_ON(!sdrv->remove)) {
+			ssb_device_put(sdev);
 			continue;
-		err = drv->suspend(dev, state);
-		if (err) {
-			ssb_printk(KERN_ERR PFX "Failed to freeze device %s\n",
-				   dev_name(dev->dev));
-			goto err_unwind;
 		}
+		sdrv->remove(sdev);
+		ctx->device_frozen[i] = 1;
 	}
 
 	return 0;
-err_unwind:
-	for (i--; i >= 0; i--) {
-		dev = &(bus->devices[i]);
-		if (!dev->dev ||
-		    !dev->dev->driver ||
-		    !device_is_registered(dev->dev))
-			continue;
-		drv = drv_to_ssb_drv(dev->dev->driver);
-		if (!drv)
-			continue;
-		if (drv->resume)
-			drv->resume(dev);
-	}
-	return err;
 }
 
-int ssb_devices_thaw(struct ssb_bus *bus)
+/** ssb_devices_thaw - Unfreeze all devices on the bus.
+ *
+ * This will re-attach the device drivers and re-init the devices.
+ *
+ * @ctx: The context structure from ssb_devices_freeze()
+ */
+int ssb_devices_thaw(struct ssb_freeze_context *ctx)
 {
-	struct ssb_device *dev;
-	struct ssb_driver *drv;
-	int err;
-	int i;
+	struct ssb_bus *bus = ctx->bus;
+	struct ssb_device *sdev;
+	struct ssb_driver *sdrv;
+	unsigned int i;
+	int err, result = 0;
 
 	for (i = 0; i < bus->nr_devices; i++) {
-		dev = &(bus->devices[i]);
-		if (!dev->dev ||
-		    !dev->dev->driver ||
-		    !device_is_registered(dev->dev))
+		if (!ctx->device_frozen[i])
 			continue;
-		drv = drv_to_ssb_drv(dev->dev->driver);
-		if (!drv)
+		sdev = &bus->devices[i];
+
+		if (SSB_WARN_ON(!sdev->dev || !sdev->dev->driver))
 			continue;
-		if (SSB_WARN_ON(!drv->resume))
+		sdrv = drv_to_ssb_drv(sdev->dev->driver);
+		if (SSB_WARN_ON(!sdrv || !sdrv->probe))
 			continue;
-		err = drv->resume(dev);
+
+		err = sdrv->probe(sdev, &sdev->id);
 		if (err) {
 			ssb_printk(KERN_ERR PFX "Failed to thaw device %s\n",
-				   dev_name(dev->dev));
+				   dev_name(sdev->dev));
+			result = err;
 		}
+		ssb_driver_put(sdrv);
+		ssb_device_put(sdev);
 	}
 
-	return 0;
+	return result;
 }
 #endif /* CONFIG_SSB_SPROM */
 
Index: wireless-testing/drivers/ssb/sprom.c
===================================================================
--- wireless-testing.orig/drivers/ssb/sprom.c	2009-11-23 13:31:12.000000000 +0100
+++ wireless-testing/drivers/ssb/sprom.c	2009-11-23 14:24:57.000000000 +0100
@@ -90,6 +90,7 @@ ssize_t ssb_attr_sprom_store(struct ssb_
 	u16 *sprom;
 	int res = 0, err = -ENOMEM;
 	size_t sprom_size_words = bus->sprom_size;
+	struct ssb_freeze_context freeze;
 
 	sprom = kcalloc(bus->sprom_size, sizeof(u16), GFP_KERNEL);
 	if (!sprom)
@@ -111,18 +112,13 @@ ssize_t ssb_attr_sprom_store(struct ssb_
 	err = -ERESTARTSYS;
 	if (mutex_lock_interruptible(&bus->sprom_mutex))
 		goto out_kfree;
-	err = ssb_devices_freeze(bus);
-	if (err == -EOPNOTSUPP) {
-		ssb_printk(KERN_ERR PFX "SPROM write: Could not freeze devices. "
-			   "No suspend support. Is CONFIG_PM enabled?\n");
-		goto out_unlock;
-	}
+	err = ssb_devices_freeze(bus, &freeze);
 	if (err) {
 		ssb_printk(KERN_ERR PFX "SPROM write: Could not freeze all devices\n");
 		goto out_unlock;
 	}
 	res = sprom_write(bus, sprom);
-	err = ssb_devices_thaw(bus);
+	err = ssb_devices_thaw(&freeze);
 	if (err)
 		ssb_printk(KERN_ERR PFX "SPROM write: Could not thaw all devices\n");
 out_unlock:
Index: wireless-testing/drivers/ssb/ssb_private.h
===================================================================
--- wireless-testing.orig/drivers/ssb/ssb_private.h	2009-11-23 13:31:12.000000000 +0100
+++ wireless-testing/drivers/ssb/ssb_private.h	2009-11-23 14:08:16.000000000 +0100
@@ -176,13 +176,21 @@ extern const struct ssb_sprom *ssb_get_f
 
 /* core.c */
 extern u32 ssb_calc_clock_rate(u32 plltype, u32 n, u32 m);
-extern int ssb_devices_freeze(struct ssb_bus *bus);
-extern int ssb_devices_thaw(struct ssb_bus *bus);
 extern struct ssb_bus *ssb_pci_dev_to_bus(struct pci_dev *pdev);
 int ssb_for_each_bus_call(unsigned long data,
 			  int (*func)(struct ssb_bus *bus, unsigned long data));
 extern struct ssb_bus *ssb_pcmcia_dev_to_bus(struct pcmcia_device *pdev);
 
+struct ssb_freeze_context {
+	/* Pointer to the bus */
+	struct ssb_bus *bus;
+	/* Boolean list to indicate whether a device is frozen on this bus. */
+	bool device_frozen[SSB_MAX_NR_CORES];
+};
+extern int ssb_devices_freeze(struct ssb_bus *bus, struct ssb_freeze_context *ctx);
+extern int ssb_devices_thaw(struct ssb_freeze_context *ctx);
+
+
 
 /* b43_pci_bridge.c */
 #ifdef CONFIG_SSB_B43_PCI_BRIDGE

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Mon Nov 23 20:55:06 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Nov 2009 13:55:06 -0600
Subject: [RFC] b43: Fix regression from Bug #14538
Message-ID: <4b0ae89a.w9I5fcNpeuH/GfsI%Larry.Finger@lwfinger.net>

The routine b43_is_hw_radio_enabled() has long been a problem.
For PPC architecture with PHY Revision < 3, a read of the register
B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43_status()
returns a value of 2 (B43_STAT_STARTED) (BUG 14181). Fixing that
results in Bug 14538 in which the driver is unable to reassociate
after resuming from hibernation because b43_status() returns 0.

The correct fix would be to determine why the status is 0; however,
I have not yet found why that happens. The correct value is found for
my device, which has PHY revision >= 3.

Returning TRUE when the PHY revision < 3 and b43_status() returns 0 fixes
the regression for 2.6.32.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Tested-by: Christian Casteyde <casteyde.christian at free.fr>
---

Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
+++ wireless-testing/drivers/net/wireless/b43/rfkill.c
@@ -33,9 +33,16 @@ bool b43_is_hw_radio_enabled(struct b43_
 		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
 			return 1;
 	} else {
-		if (b43_status(dev) >= B43_STAT_STARTED &&
-		    b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
-		    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
+		/* To prevent CPU fault on PPC, do not read a register
+		 * unless the interface is started; however, on resume
+		 * for hibernation, this routine is entered early. When
+		 * that happens, unconditionally return TRUE.
+		 */
+		if (b43_status(dev) >= B43_STAT_STARTED) {
+			if (b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
+			    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
+				return 1;
+		} else
 			return 1;
 	}
 	return 0;



From mb at bu3sch.de  Mon Nov 23 20:58:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 20:58:06 +0100
Subject: [PATCH] ssb: Fix range check in sprom write
Message-ID: <200911232058.06369.mb@bu3sch.de>

The range check in the sprom image parser hex2sprom() is broken.
One sprom word is 4 hex characters.
This fixes the check and also adds much better sanity checks to the code.
We better make sure the image is OK by doing some sanity checks to avoid
bricking the device by accident.

Signed-off-by: Michael Buesch <mb at bu3sch.de>
Cc: stable at kernel.org

---

Index: wireless-testing/drivers/ssb/sprom.c
===================================================================
--- wireless-testing.orig/drivers/ssb/sprom.c	2009-11-23 14:24:57.000000000 +0100
+++ wireless-testing/drivers/ssb/sprom.c	2009-11-23 20:43:04.000000000 +0100
@@ -13,6 +13,8 @@
 
 #include "ssb_private.h"
 
+#include <linux/ctype.h>
+
 
 static const struct ssb_sprom *fallback_sprom;
 
@@ -33,17 +35,27 @@ static int sprom2hex(const u16 *sprom, c
 static int hex2sprom(u16 *sprom, const char *dump, size_t len,
 		     size_t sprom_size_words)
 {
-	char tmp[5] = { 0 };
-	int cnt = 0;
+	char c, tmp[5] = { 0 };
+	int err, cnt = 0;
 	unsigned long parsed;
 
-	if (len < sprom_size_words * 2)
+	/* Strip whitespace at the end. */
+	while (len) {
+		c = dump[len - 1];
+		if (!isspace(c) && c != '\0')
+			break;
+		len--;
+	}
+	/* Length must match exactly. */
+	if (len != sprom_size_words * 4)
 		return -EINVAL;
 
 	while (cnt < sprom_size_words) {
 		memcpy(tmp, dump, 4);
 		dump += 4;
-		parsed = simple_strtoul(tmp, NULL, 16);
+		err = strict_strtoul(tmp, 16, &parsed);
+		if (err)
+			return err;
 		sprom[cnt++] = swab16((u16)parsed);
 	}
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Nov 23 21:01:34 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Nov 2009 21:01:34 +0100
Subject: [RFC] b43: Fix regression from Bug #14538
In-Reply-To: <4b0ae89a.w9I5fcNpeuH/GfsI%Larry.Finger@lwfinger.net>
References: <4b0ae89a.w9I5fcNpeuH/GfsI%Larry.Finger@lwfinger.net>
Message-ID: <200911232101.35933.mb@bu3sch.de>

On Monday 23 November 2009 20:55:06 Larry Finger wrote:
> The routine b43_is_hw_radio_enabled() has long been a problem.
> For PPC architecture with PHY Revision < 3, a read of the register
> B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43_status()
> returns a value of 2 (B43_STAT_STARTED) (BUG 14181). Fixing that
> results in Bug 14538 in which the driver is unable to reassociate
> after resuming from hibernation because b43_status() returns 0.
> 
> The correct fix would be to determine why the status is 0; however,
> I have not yet found why that happens. The correct value is found for
> my device, which has PHY revision >= 3.
> 
> Returning TRUE when the PHY revision < 3 and b43_status() returns 0 fixes
> the regression for 2.6.32.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> Tested-by: Christian Casteyde <casteyde.christian at free.fr>
> ---
> 
> Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
> +++ wireless-testing/drivers/net/wireless/b43/rfkill.c
> @@ -33,9 +33,16 @@ bool b43_is_hw_radio_enabled(struct b43_
>  		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
>  			return 1;
>  	} else {
> -		if (b43_status(dev) >= B43_STAT_STARTED &&
> -		    b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
> -		    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
> +		/* To prevent CPU fault on PPC, do not read a register
> +		 * unless the interface is started; however, on resume
> +		 * for hibernation, this routine is entered early. When
> +		 * that happens, unconditionally return TRUE.
> +		 */
> +		if (b43_status(dev) >= B43_STAT_STARTED) {
> +			if (b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
> +			    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
> +				return 1;
> +		} else
>  			return 1;
>  	}
>  	return 0;

looks OK as quick workaround.

-- 
Greetings, Michael.


From linville at tuxdriver.com  Mon Nov 23 23:33:31 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 23 Nov 2009 17:33:31 -0500
Subject: [RFC] b43: Fix regression from Bug #14538
In-Reply-To: <4b0ae89a.w9I5fcNpeuH/GfsI%Larry.Finger@lwfinger.net>
References: <4b0ae89a.w9I5fcNpeuH/GfsI%Larry.Finger@lwfinger.net>
Message-ID: <20091123223331.GC9045@tuxdriver.com>

On Mon, Nov 23, 2009 at 01:55:06PM -0600, Larry Finger wrote:
> The routine b43_is_hw_radio_enabled() has long been a problem.
> For PPC architecture with PHY Revision < 3, a read of the register
> B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43_status()
> returns a value of 2 (B43_STAT_STARTED) (BUG 14181). Fixing that
> results in Bug 14538 in which the driver is unable to reassociate
> after resuming from hibernation because b43_status() returns 0.
> 
> The correct fix would be to determine why the status is 0; however,
> I have not yet found why that happens. The correct value is found for
> my device, which has PHY revision >= 3.
> 
> Returning TRUE when the PHY revision < 3 and b43_status() returns 0 fixes
> the regression for 2.6.32.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> Tested-by: Christian Casteyde <casteyde.christian at free.fr>
> ---
> 
> Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
> +++ wireless-testing/drivers/net/wireless/b43/rfkill.c
> @@ -33,9 +33,16 @@ bool b43_is_hw_radio_enabled(struct b43_
>  		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
>  			return 1;
>  	} else {
> -		if (b43_status(dev) >= B43_STAT_STARTED &&
> -		    b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
> -		    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
> +		/* To prevent CPU fault on PPC, do not read a register
> +		 * unless the interface is started; however, on resume
> +		 * for hibernation, this routine is entered early. When
> +		 * that happens, unconditionally return TRUE.
> +		 */
> +		if (b43_status(dev) >= B43_STAT_STARTED) {
> +			if (b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
> +			    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
> +				return 1;
> +		} else
>  			return 1;
>  	}
>  	return 0;

Maybe just me, but I think this version is easier to read (and especially to see the difference):

diff --git a/drivers/net/wireless/b43/rfkill.c b/drivers/net/wireless/b43/rfkill.c
index ffdce6f..ddc3c93 100644
--- a/drivers/net/wireless/b43/rfkill.c
+++ b/drivers/net/wireless/b43/rfkill.c
@@ -33,8 +33,14 @@ bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
 		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
 			return 1;
 	} else {
-		if (b43_status(dev) >= B43_STAT_STARTED &&
-		    b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
+		/* To prevent CPU fault on PPC, do not read a register
+		 * unless the interface is started; however, on resume
+		 * for hibernation, this routine is entered early. When
+		 * that happens, unconditionally return TRUE.
+		 */
+		if (b43_status(dev) < B43_STAT_STARTED)
+ 			return 1;
+		if (b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
 		    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
 			return 1;
 	}
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From Larry.Finger at lwfinger.net  Tue Nov 24 01:40:45 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Nov 2009 18:40:45 -0600
Subject: [PATCH] b43: Fix regression from Bug #14538
Message-ID: <4b0b2b8d.xO2YhnfbtfQkOOaq%Larry.Finger@lwfinger.net>

The routine b43_is_hw_radio_enabled() has long been a problem.
For PPC architecture with PHY Revision < 3, a read of the register
B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43_status()
returns a value of 2 (B43_STAT_STARTED) (BUG 14181). Fixing that
results in Bug 14538 in which the driver is unable to reassociate
after resuming from hibernation because b43_status() returns 0.

The correct fix would be to determine why the status is 0; however,
I have not yet found why that happens. The correct value is found for
my device, which has PHY revision >= 3.

Returning TRUE when the PHY revision < 3 and b43_status() returns 0 fixes
the regression for 2.6.32.

This patch fixes the problem in Red Hat Bugzilla #538523.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Tested-by: Christian Casteyde <casteyde.christian at free.fr>
---

John,

Your suggested change was a good one and has been implemented. This is
2.6.32 material and should be backported to stable; however, it may not
apply cleanly. Should I make it Cc: stable, or submit it to GregKH in the
proper form once it is committed to mainline?

Larry
---


Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
+++ wireless-testing/drivers/net/wireless/b43/rfkill.c
@@ -33,8 +33,14 @@ bool b43_is_hw_radio_enabled(struct b43_
 		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
 			return 1;
 	} else {
-		if (b43_status(dev) >= B43_STAT_STARTED &&
-		    b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
+		/* To prevent CPU fault on PPC, do not read a register
+		 * unless the interface is started; however, on resume
+		 * for hibernation, this routine is entered early. When
+		 * that happens, unconditionally return TRUE.
+		 */
+		if (b43_status(dev) < B43_STAT_STARTED)
+			return 1;
+		if (b43_read16(dev, B43_MMIO_RADIO_HWENABLED_LO)
 		    & B43_MMIO_RADIO_HWENABLED_LO_MASK)
 			return 1;
 	}


From Larry.Finger at lwfinger.net  Tue Nov 24 01:42:36 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Nov 2009 18:42:36 -0600
Subject: [PATCH] b43legacy: Fix problem for PPC architecture noted in Red
	Hat Bugzilla #538523
Message-ID: <4b0b2bfc.wTVOnoPYuzV3oG6G%Larry.Finger@lwfinger.net>

For PPC architecture with PHY Revision < 3, a read of the register
B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43legacy_status()
returns a value of 2 (B43legacy_STAT_STARTED); however, one finds that
the driver is unable to associate after resuming from hibernation unless
this routine returns 1. To satisfy both conditions, the routine is rewritten
to return TRUE whenever b43legacy_status() returns a value < 2.

This patch fixes the second problem listed in the postings for Red Hat
Bugzilla #538523.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Cc: Stable <stable at vger.org>
---

John,

This is 2.6.32 material.

Larry
---

Index: wireless-testing/drivers/net/wireless/b43legacy/rfkill.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/rfkill.c
+++ wireless-testing/drivers/net/wireless/b43legacy/rfkill.c
@@ -34,6 +34,13 @@ bool b43legacy_is_hw_radio_enabled(struc
 		      & B43legacy_MMIO_RADIO_HWENABLED_HI_MASK))
 			return 1;
 	} else {
+		/* To prevent CPU fault on PPC, do not read a register
+		 * unless the interface is started; however, on resume
+		 * for hibernation, this routine is entered early. When
+		 * that happens, unconditionally return TRUE.
+		 */
+		if (b43legacy_status(dev) < B43legacy_STAT_STARTED)
+			return 1;
 		if (b43legacy_read16(dev, B43legacy_MMIO_RADIO_HWENABLED_LO)
 		    & B43legacy_MMIO_RADIO_HWENABLED_LO_MASK)
 			return 1;


From william.bourque at polymtl.ca  Tue Nov 24 04:58:36 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Mon, 23 Nov 2009 22:58:36 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B068ED9.5070107@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net> <4AFEFC2C.5030704@polymtl.ca>
	<4B068ED9.5070107@lwfinger.net>
Message-ID: <4B0B59EC.2000809@polymtl.ca>


Larry Finger wrote:
> One last check. I would appreciate receiving answers to the following questions.
> These questions apply to anyone else with this problem.
> 
> Does the pm_qos patch help your "fatal DMA error" problem, particularly when
> booted from power-off?
> 
> If you warm-boot after loading the wl driver, does the patch make any difference?
> 
> Larry

Hi

I run a test case scenario on my notebook to figure out the QOS patch
effect on the card reliability.
I would say that the results are not very conclusive, but it seems the
patch helped slightly, but not very time.

To explain the methodology, I ran 4 series of test (Cold boot and warm
boot, on battery and pluged in) between a patched and unpatched
wireless-testing kernel.
The time in the sheet is the time between the first line of the load of
the firmware (b43 ssb0:0: firmware: requesting b43/ucode15.fw) to the
first DMA error (b43-phy0 ERROR: Fatal DMA error: )
Three time, the card crashed but not DMA error were printed in the log.
In that case, the line about the interface failing (b43-phy0 debug:
Wireless interface stopped) were used instead.
The "time" is taken accordingly to kernel timestamp printed by dmesg.

Note that this test was design to make the card fails quickly. As soon
as the card was up, the full kernel tree was transfert over a wireless
LAN, as it has been observed before that fast rate transfert were good
at crashing DMA. (I tried "ping -f 172.16.0.1" before but the card was
still alive after 5 minutes).
Technically the following command was run : ifup wlan0 && scp -r
/usr/src/linux 172.16.0.1:~/


The result seems to show that the patch has no effect on warm-booted
system but it seems to make the card slightly more reliable on
cold-booted system, with an average time before crashing of 24.07
(patched cold boot) vs 22.98 (unpatched coldboot).

- William
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Test_BCM4312_QOS
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091123/745f0511/attachment.ksh>

From lemenkov at gmail.com  Tue Nov 24 06:37:53 2009
From: lemenkov at gmail.com (Peter Lemenkov)
Date: Tue, 24 Nov 2009 08:37:53 +0300
Subject: [PATCH] b43legacy: Fix problem for PPC architecture noted in Red 
	Hat Bugzilla #538523
In-Reply-To: <4b0b2bfc.wTVOnoPYuzV3oG6G%Larry.Finger@lwfinger.net>
References: <4b0b2bfc.wTVOnoPYuzV3oG6G%Larry.Finger@lwfinger.net>
Message-ID: <adf480660911232137x5459441chde17fb77004e3cb4@mail.gmail.com>

Hello All!

2009/11/24 Larry Finger <Larry.Finger at lwfinger.net>:
> For PPC architecture with PHY Revision < 3, a read of the register
> B43_MMIO_HWENABLED_LO will cause a CPU fault unless b43legacy_status()
> returns a value of 2 (B43legacy_STAT_STARTED); however, one finds that
> the driver is unable to associate after resuming from hibernation unless
> this routine returns 1. To satisfy both conditions, the routine is rewritten
> to return TRUE whenever b43legacy_status() returns a value < 2.
>
> This patch fixes the second problem listed in the postings for Red Hat
> Bugzilla #538523.
>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> Cc: Stable <stable at vger.org>

Seems that b43 has similar issue(s):

https://bugzilla.redhat.com/show_bug.cgi?id=539267

-- 
With best regards, Peter Lemenkov.


From Larry.Finger at lwfinger.net  Tue Nov 24 06:49:26 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Nov 2009 23:49:26 -0600
Subject: [PATCH] b43legacy: Fix problem for PPC architecture noted in
	Red 	Hat Bugzilla #538523
In-Reply-To: <adf480660911232137x5459441chde17fb77004e3cb4@mail.gmail.com>
References: <4b0b2bfc.wTVOnoPYuzV3oG6G%Larry.Finger@lwfinger.net>
	<adf480660911232137x5459441chde17fb77004e3cb4@mail.gmail.com>
Message-ID: <4B0B73E6.9060307@lwfinger.net>

On 11/23/2009 11:37 PM, Peter Lemenkov wrote:
> 
> Seems that b43 has similar issue(s):
> 
> https://bugzilla.redhat.com/show_bug.cgi?id=539267
> 

That one has already been addressed by mainline commit no.
d50bae33d1358b909ade05ae, and sent on to stable.

Thanks for the notification,

Larry


From oncaphillis at snafu.de  Tue Nov 24 09:17:39 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Tue, 24 Nov 2009 09:17:39 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B06AC26.6000002@snafu.de>
References: <200911201212.19588.mb@bu3sch.de>
	<4B06A233.2070708@lwfinger.net>	<200911201511.11042.mb@bu3sch.de>
	<4B06AC26.6000002@snafu.de>
Message-ID: <4B0B96A3.6040809@snafu.de>

>
>    At least on my Acer One D250 dmidecode provides a mainboard
> UUID.
>
> Sebastian
>

  Stupid me,

  I had a closer look at the UUID and they are using one scheme
supported by uuidgen where the last 6 bytes are the MAC
address *of eth0*




From oncaphillis at snafu.de  Tue Nov 24 09:51:37 2009
From: oncaphillis at snafu.de (Oncaphillis)
Date: Tue, 24 Nov 2009 09:51:37 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <200911201212.19588.mb@bu3sch.de>
References: <200911201212.19588.mb@bu3sch.de>
Message-ID: <4B0B9E99.1060201@snafu.de>

On 11/20/2009 12:12 PM, Michael Buesch wrote:
> This patch adds a generic mechanism for overriding the SPROM mechanism
> on devices without SPROM hardware.
>
> There currently is a major problem with this:
> It tries to deduce a MAC address from various hardware parameters. But
> currently it will result in the same MAC address for machines of the same
> type. Does somebody have an idea of some device-instance specific serial
> number or something similar that could be hashed into the MAC?
>
What version is this patch against ? I tries rc7,rc8 and 2.6.31.6.
But it doesn't work for me.

Thank you

Sebastian



From chris at cvine.freeserve.co.uk  Tue Nov 24 10:54:36 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 24 Nov 2009 09:54:36 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0B59EC.2000809@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<4B0B59EC.2000809@polymtl.ca>
Message-ID: <20091124095436.7a4176a1@boulder.homenet>

On Mon, 23 Nov 2009 22:58:36 -0500
William Bourque <william.bourque at polymtl.ca> wrote:
> Larry Finger wrote:
> > One last check. I would appreciate receiving answers to the
> > following questions. These questions apply to anyone else with this
> > problem.
> > 
> > Does the pm_qos patch help your "fatal DMA error" problem,
> > particularly when booted from power-off?
> > 
> > If you warm-boot after loading the wl driver, does the patch make
> > any difference?
> > 
> > Larry
> 
> Hi
> 
> I run a test case scenario on my notebook to figure out the QOS patch
> effect on the card reliability.
> I would say that the results are not very conclusive, but it seems the
> patch helped slightly, but not very time.
> 
> To explain the methodology, I ran 4 series of test (Cold boot and warm
> boot, on battery and pluged in) between a patched and unpatched
> wireless-testing kernel.
> The time in the sheet is the time between the first line of the load
> of the firmware (b43 ssb0:0: firmware: requesting b43/ucode15.fw) to
> the first DMA error (b43-phy0 ERROR: Fatal DMA error: )
> Three time, the card crashed but not DMA error were printed in the
> log. In that case, the line about the interface failing (b43-phy0
> debug: Wireless interface stopped) were used instead.
> The "time" is taken accordingly to kernel timestamp printed by dmesg.
> 
> Note that this test was design to make the card fails quickly. As soon
> as the card was up, the full kernel tree was transfert over a wireless
> LAN, as it has been observed before that fast rate transfert were good
> at crashing DMA. (I tried "ping -f 172.16.0.1" before but the card was
> still alive after 5 minutes).
> Technically the following command was run : ifup wlan0 && scp -r
> /usr/src/linux 172.16.0.1:~/
> 
> 
> The result seems to show that the patch has no effect on warm-booted
> system but it seems to make the card slightly more reliable on
> cold-booted system, with an average time before crashing of 24.07
> (patched cold boot) vs 22.98 (unpatched coldboot).

William,

Out of interest (I am not a b43 developer), was the warm boot a warm
boot from a kernel with the proprietary wl driver installed, and if so
does the wl driver work for you?

Chris




From mb at bu3sch.de  Tue Nov 24 11:52:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 24 Nov 2009 11:52:49 +0100
Subject: [PATCH RFC] ssb: Generic SPROM override for devices without SPROM
In-Reply-To: <4B0B9E99.1060201@snafu.de>
References: <200911201212.19588.mb@bu3sch.de> <4B0B9E99.1060201@snafu.de>
Message-ID: <200911241152.51787.mb@bu3sch.de>

On Tuesday 24 November 2009 09:51:37 Oncaphillis wrote:
> On 11/20/2009 12:12 PM, Michael Buesch wrote:
> > This patch adds a generic mechanism for overriding the SPROM mechanism
> > on devices without SPROM hardware.
> >
> > There currently is a major problem with this:
> > It tries to deduce a MAC address from various hardware parameters. But
> > currently it will result in the same MAC address for machines of the same
> > type. Does somebody have an idea of some device-instance specific serial
> > number or something similar that could be hashed into the MAC?
> >
> What version is this patch against ? I tries rc7,rc8 and 2.6.31.6.
> But it doesn't work for me.

wireless testing

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Tue Nov 24 16:50:13 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 10:50:13 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091124095436.7a4176a1@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>
	<20091124095436.7a4176a1@boulder.homenet>
Message-ID: <4B0C00B5.1000407@polymtl.ca>


Chris Vine wrote:
> On Mon, 23 Nov 2009 22:58:36 -0500
> William Bourque <william.bourque at polymtl.ca> wrote:
>> Larry Finger wrote:
>>> One last check. I would appreciate receiving answers to the
>>> following questions. These questions apply to anyone else with this
>>> problem.
>>>
>>> Does the pm_qos patch help your "fatal DMA error" problem,
>>> particularly when booted from power-off?
>>>
>>> If you warm-boot after loading the wl driver, does the patch make
>>> any difference?
>>>
>>> Larry
>> Hi
>>
>> I run a test case scenario on my notebook to figure out the QOS patch
>> effect on the card reliability.
>> I would say that the results are not very conclusive, but it seems the
>> patch helped slightly, but not very time.
>>
>> To explain the methodology, I ran 4 series of test (Cold boot and warm
>> boot, on battery and pluged in) between a patched and unpatched
>> wireless-testing kernel.
>> The time in the sheet is the time between the first line of the load
>> of the firmware (b43 ssb0:0: firmware: requesting b43/ucode15.fw) to
>> the first DMA error (b43-phy0 ERROR: Fatal DMA error: )
>> Three time, the card crashed but not DMA error were printed in the
>> log. In that case, the line about the interface failing (b43-phy0
>> debug: Wireless interface stopped) were used instead.
>> The "time" is taken accordingly to kernel timestamp printed by dmesg.
>>
>> Note that this test was design to make the card fails quickly. As soon
>> as the card was up, the full kernel tree was transfert over a wireless
>> LAN, as it has been observed before that fast rate transfert were good
>> at crashing DMA. (I tried "ping -f 172.16.0.1" before but the card was
>> still alive after 5 minutes).
>> Technically the following command was run : ifup wlan0 && scp -r
>> /usr/src/linux 172.16.0.1:~/
>>
>>
>> The result seems to show that the patch has no effect on warm-booted
>> system but it seems to make the card slightly more reliable on
>> cold-booted system, with an average time before crashing of 24.07
>> (patched cold boot) vs 22.98 (unpatched coldboot).
> 
> William,
> 
> Out of interest (I am not a b43 developer), was the warm boot a warm
> boot from a kernel with the proprietary wl driver installed, and if so
> does the wl driver work for you?

I was using the B43 (GPL) driver but with the proprietary firmware
extracted from Broadcom crap with bfwcutter.
The proprietary driver provided by Broadcom (what you refer as wl?)
fails to even detect the card. They clearly hate their customers.

- William



From chris at cvine.freeserve.co.uk  Tue Nov 24 17:35:36 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 24 Nov 2009 16:35:36 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C00B5.1000407@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<4B0B59EC.2000809@polymtl.ca>
	<20091124095436.7a4176a1@boulder.homenet>
	<4B0C00B5.1000407@polymtl.ca>
Message-ID: <20091124163536.78276489@boulder.homenet>

On Tue, 24 Nov 2009 10:50:13 -0500
William Bourque <william.bourque at polymtl.ca> wrote:
[snip]
> I was using the B43 (GPL) driver but with the proprietary firmware
> extracted from Broadcom crap with bfwcutter.
> The proprietary driver provided by Broadcom (what you refer as wl?)
> fails to even detect the card. They clearly hate their customers.

I should be very surprised if it doesn't detect your card provided you
are using the right driver (and if you haven't compiled and installed a
driver called wl.ko then so far as the proprietary driver is concerned
you aren't).

If you want to take this further, you probably want to go to
http://www.broadcom.com/support/802.11/linux_sta.php ,
install the 32-bit or 64-bit driver according to your system, get the
wl.ko driver working and then try warm booting from that and seeing if
the b43 driver then works for you - it should.  (You will need to copy
wl.ko somewhere into your working module directory by hand - it doesn't
really matter where - and after doing so run depmod -ae.)

Note that this won't compile on 2.6.32-rc* without patching one of the
files in the broadcom package, so it would probably be best to install
it in a 2.6 31 (or earlier) kernel and warm boot from that.

Chris




From william.bourque at polymtl.ca  Tue Nov 24 17:58:05 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 11:58:05 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091124163536.78276489@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>
	<20091124163536.78276489@boulder.homenet>
Message-ID: <4B0C109D.8030800@polymtl.ca>


Chris Vine wrote:
> On Tue, 24 Nov 2009 10:50:13 -0500
> William Bourque <william.bourque at polymtl.ca> wrote:
> [snip]
>> I was using the B43 (GPL) driver but with the proprietary firmware
>> extracted from Broadcom crap with bfwcutter.
>> The proprietary driver provided by Broadcom (what you refer as wl?)
>> fails to even detect the card. They clearly hate their customers.
> 
> I should be very surprised if it doesn't detect your card provided you
> are using the right driver (and if you haven't compiled and installed a
> driver called wl.ko then so far as the proprietary driver is concerned
> you aren't).
I did tried before, it succesfully built, it was loading (modprobe)
correctly but no new interface was registered by it.
However, I might have done something wrong, I will try it again to make
sure it wasn't a PEBKAC problem.

> 
> If you want to take this further, you probably want to go to
> http://www.broadcom.com/support/802.11/linux_sta.php ,
> install the 32-bit or 64-bit driver according to your system, get the
> wl.ko driver working and then try warm booting from that and seeing if
> the b43 driver then works for you - it should.  (You will need to copy
> wl.ko somewhere into your working module directory by hand - it doesn't
> really matter where - and after doing so run depmod -ae.)
> 
> Note that this won't compile on 2.6.32-rc* without patching one of the
> files in the broadcom package, so it would probably be best to install
> it in a 2.6 31 (or earlier) kernel and warm boot from that.
Right. Do you have a link to this patch? I would rather avoid
downgrading my kernel.

- William



From Larry.Finger at lwfinger.net  Tue Nov 24 18:43:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Nov 2009 11:43:32 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C109D.8030800@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>
	<4B0C109D.8030800@polymtl.ca>
Message-ID: <4B0C1B44.4020605@lwfinger.net>

On 11/24/2009 10:58 AM, William Bourque wrote:
> I did tried before, it succesfully built, it was loading (modprobe)
> correctly but no new interface was registered by it.
> However, I might have done something wrong, I will try it again to make
> sure it wasn't a PEBKAC problem.

Are you certain that neither b43 nor ssb were loaded at the time? If ssb is in
memory, it will own the PCI device.

> Right. Do you have a link to this patch? I would rather avoid
> downgrading my kernel.

I just downloaded a fresh copy of the wl driver. It compiled cleanly. The only
patch I applied is the following:

Index: hybrid-wl/Makefile
===================================================================
--- hybrid-wl.orig/Makefile
+++ hybrid-wl/Makefile
@@ -34,3 +34,5 @@ clean:

 install:
        install -D -m 755 wl.ko /lib/modules/`uname
-r`/kernel/drivers/net/wireless/wl.ko
+       depmod -a
+

With it, the dependencies are properly setup. Note, the install line above is
improperly wrapped, but you get the idea.

Larry



From william.bourque at polymtl.ca  Tue Nov 24 18:54:30 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 12:54:30 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091124163536.78276489@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>
	<20091124163536.78276489@boulder.homenet>
Message-ID: <4B0C1DD6.1030703@polymtl.ca>

Chris Vine wrote:
> On Tue, 24 Nov 2009 10:50:13 -0500
> William Bourque <william.bourque at polymtl.ca> wrote:
> [snip]
>> I was using the B43 (GPL) driver but with the proprietary firmware
>> extracted from Broadcom crap with bfwcutter.
>> The proprietary driver provided by Broadcom (what you refer as wl?)
>> fails to even detect the card. They clearly hate their customers.
> 
> I should be very surprised if it doesn't detect your card provided you
> are using the right driver (and if you haven't compiled and installed a
> driver called wl.ko then so far as the proprietary driver is concerned
> you aren't).
> 
> If you want to take this further, you probably want to go to
> http://www.broadcom.com/support/802.11/linux_sta.php ,
> install the 32-bit or 64-bit driver according to your system, get the
> wl.ko driver working and then try warm booting from that and seeing if
> the b43 driver then works for you - it should.  (You will need to copy
> wl.ko somewhere into your working module directory by hand - it doesn't
> really matter where - and after doing so run depmod -ae.)
> 
> Note that this won't compile on 2.6.32-rc* without patching one of the
> files in the broadcom package, so it would probably be best to install
> it in a 2.6 31 (or earlier) kernel and warm boot from that.
> 

So, I compiled the Broadcom proprietary driver (wl) against an old 
2.6.32-rc5 that I still had.

The compilation went fine so I guess I don't need the patch after all :
root at mini hybrid-broadcom # make
KBUILD_NOPEDANTIC=1 make -C /lib/modules/`uname -r`/build M=`pwd`
make[1]: Entering directory `/usr/src/linux-2.6.32-rc5-homemade'
   Building modules, stage 2.
   MODPOST 1 modules
WARNING: modpost: missing MODULE_LICENSE() in 
/usr/local/hybrid-broadcom/wl.o
see include/linux/module.h for more information
make[1]: Leaving directory `/usr/src/linux-2.6.32-rc5-homemade'

..the module is copied at the right place and depmoded :
root at mini hybrid-broadcom # cp wl.ko 
/lib/modules/2.6.32-rc5-homemade/kernel/drivers/net/wireless/
root at mini hybrid-broadcom # depmod -ae
WARNING: -e needs -E or -F
root at mini hybrid-broadcom #

**The system is rebooted here**

root at mini ~ # uname -a
Linux mini 2.6.32-rc5-homemade #1 SMP PREEMPT Fri Nov 13 04:15:41 EST 
2009 i686 GNU/Linux

All others b43 drivers are blacklisted and does not load at boot :
root at mini ~ # lsmod
Module                  Size  Used by
ipv6                  225039  18
wmi                     4083  0
i2c_i801                7106  0
sky2                   39059  0
evdev                   6653  14

(Yes, very few modules, I like my kernel free of useless stuff).

Now we load wl (depmod and everything was done, the build went 
correctly, I will probably output if needed) :
root at mini ~ # modprobe wl

Lsmod shown the drivers is not in use :
root at mini ~ # lsmod
Module                  Size  Used by
wl                   1262065  0
ipv6                  225039  18
wmi                     4083  0
i2c_i801                7106  0
sky2                   39059  0
evdev                   6653  14

Not much in dmesg either :
root at mini ~ # dmesg | tail -5
[   94.693445] sky2 eth0: Link is up at 100 Mbps, full duplex, flow 
control rx
[   94.693849] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[  105.540193] eth0: no IPv6 routers present
[  447.078683] wl: module license 'unspecified' taints kernel.
[  447.078691] Disabling lock debugging due to kernel taint

As you can see, it does not :
root at mini ~ # ifconfig -a 

eth0      Link encap:Ethernet  HWaddr 00:24:81:5d:10:65
           inet addr:142.133.110.63  Bcast:142.133.111.255 
Mask:255.255.254.0
           inet6 addr: fe80::224:81ff:fe5d:1065/64 Scope:Link 

           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1 

           RX packets:1670 errors:0 dropped:0 overruns:0 frame:0 

           TX packets:263 errors:0 dropped:0 overruns:0 carrier:0 

           collisions:0 txqueuelen:1000
           RX bytes:222383 (217.1 KiB)  TX bytes:37989 (37.0 KiB)
           Interrupt:17

lo        Link encap:Local Loopback
           inet addr:127.0.0.1  Mask:255.0.0.0
           inet6 addr: ::1/128 Scope:Host
           UP LOOPBACK RUNNING  MTU:16436  Metric:1
           RX packets:511 errors:0 dropped:0 overruns:0 frame:0
           TX packets:511 errors:0 dropped:0 overruns:0 carrier:0
           collisions:0 txqueuelen:0
           RX bytes:96730 (94.4 KiB)  TX bytes:96730 (94.4 KiB)


Conclusion :
The Broadcom proprietary driver (wl) FAILS to detect the card.
Feel free to point me any errors I could have made... I could try with 
the 2.6.32-rc* patch if you'd like but the compilation went fine (no 
error no warning).

- William


From Larry.Finger at lwfinger.net  Tue Nov 24 19:05:04 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Nov 2009 12:05:04 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C1DD6.1030703@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>
	<4B0C1DD6.1030703@polymtl.ca>
Message-ID: <4B0C2050.2060000@lwfinger.net>

On 11/24/2009 11:54 AM, William Bourque wrote:
> Chris Vine wrote:
>> On Tue, 24 Nov 2009 10:50:13 -0500
>> William Bourque <william.bourque at polymtl.ca> wrote:
>> [snip]
>>> I was using the B43 (GPL) driver but with the proprietary firmware
>>> extracted from Broadcom crap with bfwcutter.
>>> The proprietary driver provided by Broadcom (what you refer as wl?)
>>> fails to even detect the card. They clearly hate their customers.
>>
>> I should be very surprised if it doesn't detect your card provided you
>> are using the right driver (and if you haven't compiled and installed a
>> driver called wl.ko then so far as the proprietary driver is concerned
>> you aren't).
>>
>> If you want to take this further, you probably want to go to
>> http://www.broadcom.com/support/802.11/linux_sta.php ,
>> install the 32-bit or 64-bit driver according to your system, get the
>> wl.ko driver working and then try warm booting from that and seeing if
>> the b43 driver then works for you - it should.  (You will need to copy
>> wl.ko somewhere into your working module directory by hand - it doesn't
>> really matter where - and after doing so run depmod -ae.)
>>
>> Note that this won't compile on 2.6.32-rc* without patching one of the
>> files in the broadcom package, so it would probably be best to install
>> it in a 2.6 31 (or earlier) kernel and warm boot from that.
>>
> 
> So, I compiled the Broadcom proprietary driver (wl) against an old 
> 2.6.32-rc5 that I still had.
> 
> The compilation went fine so I guess I don't need the patch after all :
> root at mini hybrid-broadcom # make
> KBUILD_NOPEDANTIC=1 make -C /lib/modules/`uname -r`/build M=`pwd`
> make[1]: Entering directory `/usr/src/linux-2.6.32-rc5-homemade'
>    Building modules, stage 2.
>    MODPOST 1 modules
> WARNING: modpost: missing MODULE_LICENSE() in 
> /usr/local/hybrid-broadcom/wl.o
> see include/linux/module.h for more information
> make[1]: Leaving directory `/usr/src/linux-2.6.32-rc5-homemade'
> 
> ..the module is copied at the right place and depmoded :
> root at mini hybrid-broadcom # cp wl.ko 
> /lib/modules/2.6.32-rc5-homemade/kernel/drivers/net/wireless/
> root at mini hybrid-broadcom # depmod -ae
> WARNING: -e needs -E or -F
> root at mini hybrid-broadcom #
> 
> **The system is rebooted here**
> 
> root at mini ~ # uname -a
> Linux mini 2.6.32-rc5-homemade #1 SMP PREEMPT Fri Nov 13 04:15:41 EST 
> 2009 i686 GNU/Linux
> 
> All others b43 drivers are blacklisted and does not load at boot :
> root at mini ~ # lsmod
> Module                  Size  Used by
> ipv6                  225039  18
> wmi                     4083  0
> i2c_i801                7106  0
> sky2                   39059  0
> evdev                   6653  14
> 
> (Yes, very few modules, I like my kernel free of useless stuff).
> 
> Now we load wl (depmod and everything was done, the build went 
> correctly, I will probably output if needed) :
> root at mini ~ # modprobe wl
> 
> Lsmod shown the drivers is not in use :
> root at mini ~ # lsmod
> Module                  Size  Used by
> wl                   1262065  0
> ipv6                  225039  18
> wmi                     4083  0
> i2c_i801                7106  0
> sky2                   39059  0
> evdev                   6653  14
> 
> Not much in dmesg either :
> root at mini ~ # dmesg | tail -5
> [   94.693445] sky2 eth0: Link is up at 100 Mbps, full duplex, flow 
> control rx
> [   94.693849] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
> [  105.540193] eth0: no IPv6 routers present
> [  447.078683] wl: module license 'unspecified' taints kernel.
> [  447.078691] Disabling lock debugging due to kernel taint
> 
> As you can see, it does not :
> root at mini ~ # ifconfig -a 
> 
> eth0      Link encap:Ethernet  HWaddr 00:24:81:5d:10:65
>            inet addr:142.133.110.63  Bcast:142.133.111.255 
> Mask:255.255.254.0
>            inet6 addr: fe80::224:81ff:fe5d:1065/64 Scope:Link 
> 
>            UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1 
> 
>            RX packets:1670 errors:0 dropped:0 overruns:0 frame:0 
> 
>            TX packets:263 errors:0 dropped:0 overruns:0 carrier:0 
> 
>            collisions:0 txqueuelen:1000
>            RX bytes:222383 (217.1 KiB)  TX bytes:37989 (37.0 KiB)
>            Interrupt:17
> 
> lo        Link encap:Local Loopback
>            inet addr:127.0.0.1  Mask:255.0.0.0
>            inet6 addr: ::1/128 Scope:Host
>            UP LOOPBACK RUNNING  MTU:16436  Metric:1
>            RX packets:511 errors:0 dropped:0 overruns:0 frame:0
>            TX packets:511 errors:0 dropped:0 overruns:0 carrier:0
>            collisions:0 txqueuelen:0
>            RX bytes:96730 (94.4 KiB)  TX bytes:96730 (94.4 KiB)
> 
> 
> Conclusion :
> The Broadcom proprietary driver (wl) FAILS to detect the card.
> Feel free to point me any errors I could have made... I could try with 
> the 2.6.32-rc* patch if you'd like but the compilation went fine (no 
> error no warning).

The wl driver needs lib80211 as a module. Check your .config for CONFIG_LIB80211.

Larry


From william.bourque at polymtl.ca  Tue Nov 24 19:37:54 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 13:37:54 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C2050.2060000@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>
	<4B0C1DD6.1030703@polymtl.ca> <4B0C2050.2060000@lwfinger.net>
Message-ID: <4B0C2802.4070903@polymtl.ca>


Larry Finger wrote:
> On 11/24/2009 11:54 AM, William Bourque wrote:
>> Chris Vine wrote:
>>> On Tue, 24 Nov 2009 10:50:13 -0500
>>> William Bourque <william.bourque at polymtl.ca> wrote:
>>> [snip]
>>>> I was using the B43 (GPL) driver but with the proprietary firmware
>>>> extracted from Broadcom crap with bfwcutter.
>>>> The proprietary driver provided by Broadcom (what you refer as wl?)
>>>> fails to even detect the card. They clearly hate their customers.
>>> I should be very surprised if it doesn't detect your card provided you
>>> are using the right driver (and if you haven't compiled and installed a
>>> driver called wl.ko then so far as the proprietary driver is concerned
>>> you aren't).
>>>
>>> If you want to take this further, you probably want to go to
>>> http://www.broadcom.com/support/802.11/linux_sta.php ,
>>> install the 32-bit or 64-bit driver according to your system, get the
>>> wl.ko driver working and then try warm booting from that and seeing if
>>> the b43 driver then works for you - it should.  (You will need to copy
>>> wl.ko somewhere into your working module directory by hand - it doesn't
>>> really matter where - and after doing so run depmod -ae.)
>>>
>>> Note that this won't compile on 2.6.32-rc* without patching one of the
>>> files in the broadcom package, so it would probably be best to install
>>> it in a 2.6 31 (or earlier) kernel and warm boot from that.
>>>
>> So, I compiled the Broadcom proprietary driver (wl) against an old 
>> 2.6.32-rc5 that I still had.
>>
>> The compilation went fine so I guess I don't need the patch after all :
>> root at mini hybrid-broadcom # make
>> KBUILD_NOPEDANTIC=1 make -C /lib/modules/`uname -r`/build M=`pwd`
>> make[1]: Entering directory `/usr/src/linux-2.6.32-rc5-homemade'
>>    Building modules, stage 2.
>>    MODPOST 1 modules
>> WARNING: modpost: missing MODULE_LICENSE() in 
>> /usr/local/hybrid-broadcom/wl.o
>> see include/linux/module.h for more information
>> make[1]: Leaving directory `/usr/src/linux-2.6.32-rc5-homemade'
>>
>> ..the module is copied at the right place and depmoded :
>> root at mini hybrid-broadcom # cp wl.ko 
>> /lib/modules/2.6.32-rc5-homemade/kernel/drivers/net/wireless/
>> root at mini hybrid-broadcom # depmod -ae
>> WARNING: -e needs -E or -F
>> root at mini hybrid-broadcom #
>>
>> **The system is rebooted here**
>>
>> root at mini ~ # uname -a
>> Linux mini 2.6.32-rc5-homemade #1 SMP PREEMPT Fri Nov 13 04:15:41 EST 
>> 2009 i686 GNU/Linux
>>
>> All others b43 drivers are blacklisted and does not load at boot :
>> root at mini ~ # lsmod
>> Module                  Size  Used by
>> ipv6                  225039  18
>> wmi                     4083  0
>> i2c_i801                7106  0
>> sky2                   39059  0
>> evdev                   6653  14
>>
>> (Yes, very few modules, I like my kernel free of useless stuff).
>>
>> Now we load wl (depmod and everything was done, the build went 
>> correctly, I will probably output if needed) :
>> root at mini ~ # modprobe wl
>>
>> Lsmod shown the drivers is not in use :
>> root at mini ~ # lsmod
>> Module                  Size  Used by
>> wl                   1262065  0
>> ipv6                  225039  18
>> wmi                     4083  0
>> i2c_i801                7106  0
>> sky2                   39059  0
>> evdev                   6653  14
>>
>> Not much in dmesg either :
>> root at mini ~ # dmesg | tail -5
>> [   94.693445] sky2 eth0: Link is up at 100 Mbps, full duplex, flow 
>> control rx
>> [   94.693849] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
>> [  105.540193] eth0: no IPv6 routers present
>> [  447.078683] wl: module license 'unspecified' taints kernel.
>> [  447.078691] Disabling lock debugging due to kernel taint
>>
>> As you can see, it does not :
>> root at mini ~ # ifconfig -a 
>>
>> eth0      Link encap:Ethernet  HWaddr 00:24:81:5d:10:65
>>            inet addr:142.133.110.63  Bcast:142.133.111.255 
>> Mask:255.255.254.0
>>            inet6 addr: fe80::224:81ff:fe5d:1065/64 Scope:Link 
>>
>>            UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1 
>>
>>            RX packets:1670 errors:0 dropped:0 overruns:0 frame:0 
>>
>>            TX packets:263 errors:0 dropped:0 overruns:0 carrier:0 
>>
>>            collisions:0 txqueuelen:1000
>>            RX bytes:222383 (217.1 KiB)  TX bytes:37989 (37.0 KiB)
>>            Interrupt:17
>>
>> lo        Link encap:Local Loopback
>>            inet addr:127.0.0.1  Mask:255.0.0.0
>>            inet6 addr: ::1/128 Scope:Host
>>            UP LOOPBACK RUNNING  MTU:16436  Metric:1
>>            RX packets:511 errors:0 dropped:0 overruns:0 frame:0
>>            TX packets:511 errors:0 dropped:0 overruns:0 carrier:0
>>            collisions:0 txqueuelen:0
>>            RX bytes:96730 (94.4 KiB)  TX bytes:96730 (94.4 KiB)
>>
>>
>> Conclusion :
>> The Broadcom proprietary driver (wl) FAILS to detect the card.
>> Feel free to point me any errors I could have made... I could try with 
>> the 2.6.32-rc* patch if you'd like but the compilation went fine (no 
>> error no warning).
> 
> The wl driver needs lib80211 as a module. Check your .config for CONFIG_LIB80211.
> 
> Larry

lib80211 was _included_ in the kernel already but I recompiled to make 
it a module, just to make sure it was not the problem.

root at mini ~ # grep CONFIG_LIB80211 
/usr/src/linux-2.6.32-rc5-homemade/.config
CONFIG_LIB80211=m
# CONFIG_LIB80211_DEBUG is not set

root at mini ~ # lsmod
Module                  Size  Used by
ipv6                  225039  18
sky2                   39059  0
i2c_i801                7106  0
wmi                     4083  0
evdev                   6653  14

No lib80211 yet... I will load it to be certain.

root at mini ~ # modprobe lib80211
root at mini ~ # lsmod
Module                  Size  Used by
lib80211                3066  0
ipv6                  225039  18
sky2                   39059  0
i2c_i801                7106  0
wmi                     4083  0
evdev                   6653  14

root at mini ~ # modprobe wl
root at mini ~ # lsmod
Module                  Size  Used by
wl                   1262065  0
lib80211                3066  1 wl
ipv6                  225039  18
sky2                   39059  0
i2c_i801                7106  0
wmi                     4083  0
evdev                   6653  14

root at mini ~ # dmesg | tail -5
[  166.610192] eth0: no IPv6 routers present
[  875.371599] lib80211: common routines for IEEE802.11 drivers
[  875.371607] lib80211_crypt: registered algorithm 'NULL'
[  906.843243] wl: module license 'unspecified' taints kernel.
[  906.843252] Disabling lock debugging due to kernel taint

root at mini ~ # ifconfig -a
eth0      Link encap:Ethernet  HWaddr 00:24:81:5d:10:65
           inet addr:142.133.110.63  Bcast:142.133.111.255 
Mask:255.255.254.0
           inet6 addr: fe80::224:81ff:fe5d:1065/64 Scope:Link 

           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1 

           RX packets:2788 errors:0 dropped:0 overruns:0 frame:0 

           TX packets:285 errors:0 dropped:0 overruns:0 carrier:0 

           collisions:0 txqueuelen:1000
           RX bytes:327396 (319.7 KiB)  TX bytes:33786 (32.9 KiB)
           Interrupt:17

lo        Link encap:Local Loopback
           inet addr:127.0.0.1  Mask:255.0.0.0
           inet6 addr: ::1/128 Scope:Host
           UP LOOPBACK RUNNING  MTU:16436  Metric:1
           RX packets:350 errors:0 dropped:0 overruns:0 frame:0
           TX packets:350 errors:0 dropped:0 overruns:0 carrier:0
           collisions:0 txqueuelen:0
           RX bytes:82342 (80.4 KiB)  TX bytes:82342 (80.4 KiB)


Nothing changed...  Again, the Broadcom driver is helpless.

Also note all of this was made after a _warm_ boot. Do you want me to 
try everything from a cold boot?

- William


From william.bourque at polymtl.ca  Tue Nov 24 20:01:12 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 14:01:12 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C2802.4070903@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>	<4B0C1DD6.1030703@polymtl.ca>
	<4B0C2050.2060000@lwfinger.net> <4B0C2802.4070903@polymtl.ca>
Message-ID: <4B0C2D78.3030902@polymtl.ca>



> Nothing changed...  Again, the Broadcom driver is helpless.
> 
> Also note all of this was made after a _warm_ boot. Do you want me to 
> try everything from a cold boot?
> 

Just an update, cold booting didn't help.

- William


From Larry.Finger at lwfinger.net  Tue Nov 24 20:06:43 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Nov 2009 13:06:43 -0600
Subject: DMA errors with BCM4312 - an update
Message-ID: <4B0C2EC3.5010408@lwfinger.net>

This E-mail is to summarize what I have learned to date.

The pm_qos change does nothing useful. It may have helped a little, but the side
effects are far worse than the benefits.

Most systems work better with b43 when warm booted after Broadcom's wl driver
was loaded. The conclusion is that wl is making some change in the setup that
b43 is not.

(3) Based on the above, I have done MMIO and PCI-E configuration tracing for the
two drivers and found some real differences. After seeing these, I did more RE
work, and found some setup for the PCI-E core that was missed earlier. I am
still working on the changes. What I have completed is found at

http://bcm-v4.sipsolutions.net/PCI-E#PCI-E_Setup

I doubt that most of these new routines will affect the problem interfaces as
they apply only to PCI-E core revisions 7 and 8. My BCM4312 has rev 9. I do not
know what versions are giving the trouble. With SSB_DEBUG enabled, it will be in
a log line as follows:

ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)

If you are seeing the DMA error, please supply the above info.

The "PCI-E Miscellaneous Configuration" routine that is not yet finished does
run on my system and is the source of the tracing differences. If the problem
cards has a revision newer than 9, I will probably need an MMIO trace for your
device.

Larry



From william.bourque at polymtl.ca  Tue Nov 24 20:35:46 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 14:35:46 -0500
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C2D78.3030902@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>	<4B0C1DD6.1030703@polymtl.ca>	<4B0C2050.2060000@lwfinger.net>
	<4B0C2802.4070903@polymtl.ca> <4B0C2D78.3030902@polymtl.ca>
Message-ID: <4B0C3592.1030807@polymtl.ca>


Well well... While looking to activate SSB_DEBUG, I found out that SSB
was _included_ in my old 2.6.32-rc5 kernel.

I recompiled with SSB as module and the Broadcom wl driver seems to
claim the card correctly... look like ssb was claiming the PCI device
from it.

I don't remember I played in the SSB config so I suspect another
included config make the SSB to be included (instead of modularized) as
well. Still, I feel very dumb about that, I should have checked.

Sorry for the time lost.

- William


From Larry.Finger at lwfinger.net  Tue Nov 24 20:53:03 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Nov 2009 13:53:03 -0600
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C3592.1030807@polymtl.ca>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>	<4B0C1DD6.1030703@polymtl.ca>	<4B0C2050.2060000@lwfinger.net>	<4B0C2802.4070903@polymtl.ca>
	<4B0C2D78.3030902@polymtl.ca> <4B0C3592.1030807@polymtl.ca>
Message-ID: <4B0C399F.8090903@lwfinger.net>

On 11/24/2009 01:35 PM, William Bourque wrote:
> 
> Well well... While looking to activate SSB_DEBUG, I found out that SSB
> was _included_ in my old 2.6.32-rc5 kernel.
> 
> I recompiled with SSB as module and the Broadcom wl driver seems to
> claim the card correctly... look like ssb was claiming the PCI device
> from it.
> 
> I don't remember I played in the SSB config so I suspect another
> included config make the SSB to be included (instead of modularized) as
> well. Still, I feel very dumb about that, I should have checked.
> 
> Sorry for the time lost.

One of the disadvantages of building everything into the kernel. You can never
unload it!


From chris at cvine.freeserve.co.uk  Tue Nov 24 21:25:21 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 24 Nov 2009 20:25:21 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C1B44.4020605@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com> <200911131216.43704.mb@bu3sch.de>
	<4AFD83CA.2050508@lwfinger.net> <200911131836.26857.mb@bu3sch.de>
	<4AFD9E20.3060501@gmail.com> <4AFDD1C9.4050402@lwfinger.net>
	<4AFDF68C.4040804@polymtl.ca> <4AFE1E5F.9040009@lwfinger.net>
	<4AFEFC2C.5030704@polymtl.ca> <4B068ED9.5070107@lwfinger.net>
	<4B0B59EC.2000809@polymtl.ca>
	<20091124095436.7a4176a1@boulder.homenet>
	<4B0C00B5.1000407@polymtl.ca>
	<20091124163536.78276489@boulder.homenet>
	<4B0C109D.8030800@polymtl.ca> <4B0C1B44.4020605@lwfinger.net>
Message-ID: <20091124202521.70eaf0aa@boulder.homenet>

On Tue, 24 Nov 2009 11:43:32 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 11/24/2009 10:58 AM, William Bourque wrote:
> > I did tried before, it succesfully built, it was loading (modprobe)
> > correctly but no new interface was registered by it.
> > However, I might have done something wrong, I will try it again to
> > make sure it wasn't a PEBKAC problem.
> 
> Are you certain that neither b43 nor ssb were loaded at the time? If
> ssb is in memory, it will own the PCI device.
> 
> > Right. Do you have a link to this patch? I would rather avoid
> > downgrading my kernel.
> 
> I just downloaded a fresh copy of the wl driver. It compiled cleanly.
> The only patch I applied is the following:
> 
> Index: hybrid-wl/Makefile
> ===================================================================
> --- hybrid-wl.orig/Makefile
> +++ hybrid-wl/Makefile
> @@ -34,3 +34,5 @@ clean:
> 
>  install:
>         install -D -m 755 wl.ko /lib/modules/`uname
> -r`/kernel/drivers/net/wireless/wl.ko
> +       depmod -a
> +
> 
> With it, the dependencies are properly setup. Note, the install line
> above is improperly wrapped, but you get the idea.

For the record, and in case someone else needs it, I had to apply this
one: one glue file didn't include sched.h as it should have done
(presumably one of the other included headers happened to include it in
kernel >= 2.6.31 but not after). I don't know why it isn't necessary in
your cases.

Chris


--- src/wl/sys/wl_linux.c.orig	2009-11-21 10:07:59.000000000 +0000
+++ src/wl/sys/wl_linux.c	2009-11-21 10:08:32.000000000 +0000
@@ -38,6 +38,7 @@
 #include <linux/ethtool.h>
 #include <linux/completion.h>
 #include <linux/pci_ids.h>
+#include <linux/sched.h>
 #define WLC_MAXBSSCFG		1	
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)




From chris at cvine.freeserve.co.uk  Tue Nov 24 22:15:52 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 24 Nov 2009 21:15:52 +0000
Subject: DMA errors with BCM4312 - an update
In-Reply-To: <4B0C2EC3.5010408@lwfinger.net>
References: <4B0C2EC3.5010408@lwfinger.net>
Message-ID: <20091124211552.533a2b4e@boulder.homenet>

On Tue, 24 Nov 2009 13:06:43 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> This E-mail is to summarize what I have learned to date.
> 
> The pm_qos change does nothing useful. It may have helped a little,
> but the side effects are far worse than the benefits.
> 
> Most systems work better with b43 when warm booted after Broadcom's
> wl driver was loaded. The conclusion is that wl is making some change
> in the setup that b43 is not.
> 
> (3) Based on the above, I have done MMIO and PCI-E configuration
> tracing for the two drivers and found some real differences. After
> seeing these, I did more RE work, and found some setup for the PCI-E
> core that was missed earlier. I am still working on the changes. What
> I have completed is found at
> 
> http://bcm-v4.sipsolutions.net/PCI-E#PCI-E_Setup
> 
> I doubt that most of these new routines will affect the problem
> interfaces as they apply only to PCI-E core revisions 7 and 8. My
> BCM4312 has rev 9. I do not know what versions are giving the
> trouble. With SSB_DEBUG enabled, it will be in a log line as follows:
> 
> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
> 
> If you are seeing the DMA error, please supply the above info.
> 
> The "PCI-E Miscellaneous Configuration" routine that is not yet
> finished does run on my system and is the source of the tracing
> differences. If the problem cards has a revision newer than 9, I will
> probably need an MMIO trace for your device.

This is mine, the same revision as yours, but which demonstrates the
DMA errors:

ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
ssb: Found rev 1 PMU (capabilities 0x02A62F01)
ssb: SPROM revision 8 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0

Chris




From mb at bu3sch.de  Tue Nov 24 22:20:45 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 24 Nov 2009 22:20:45 +0100
Subject: DMA errors with BCM4312 - an update
In-Reply-To: <20091124211552.533a2b4e@boulder.homenet>
References: <4B0C2EC3.5010408@lwfinger.net>
	<20091124211552.533a2b4e@boulder.homenet>
Message-ID: <200911242220.47497.mb@bu3sch.de>

On Tuesday 24 November 2009 22:15:52 Chris Vine wrote:
> On Tue, 24 Nov 2009 13:06:43 -0600
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> > This E-mail is to summarize what I have learned to date.
> > 
> > The pm_qos change does nothing useful. It may have helped a little,
> > but the side effects are far worse than the benefits.
> > 
> > Most systems work better with b43 when warm booted after Broadcom's
> > wl driver was loaded. The conclusion is that wl is making some change
> > in the setup that b43 is not.
> > 
> > (3) Based on the above, I have done MMIO and PCI-E configuration
> > tracing for the two drivers and found some real differences. After
> > seeing these, I did more RE work, and found some setup for the PCI-E
> > core that was missed earlier. I am still working on the changes. What
> > I have completed is found at
> > 
> > http://bcm-v4.sipsolutions.net/PCI-E#PCI-E_Setup
> > 
> > I doubt that most of these new routines will affect the problem
> > interfaces as they apply only to PCI-E core revisions 7 and 8. My
> > BCM4312 has rev 9. I do not know what versions are giving the
> > trouble. With SSB_DEBUG enabled, it will be in a log line as follows:
> > 
> > ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
> > 
> > If you are seeing the DMA error, please supply the above info.
> > 
> > The "PCI-E Miscellaneous Configuration" routine that is not yet
> > finished does run on my system and is the source of the tracing
> > differences. If the problem cards has a revision newer than 9, I will
> > probably need an MMIO trace for your device.
> 
> This is mine, the same revision as yours, but which demonstrates the
> DMA errors:
> 
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
> ssb: Found rev 1 PMU (capabilities 0x02A62F01)

Larry, do you also have the same PMU?

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Tue Nov 24 22:33:46 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 24 Nov 2009 16:33:46 -0500
Subject: DMA errors with BCM4312 - an update
In-Reply-To: <4B0C2EC3.5010408@lwfinger.net>
References: <4B0C2EC3.5010408@lwfinger.net>
Message-ID: <4B0C513A.4090303@polymtl.ca>



Larry Finger wrote:
> This E-mail is to summarize what I have learned to date.
> 
> The pm_qos change does nothing useful. It may have helped a little, but the side
> effects are far worse than the benefits.
> 
> Most systems work better with b43 when warm booted after Broadcom's wl driver
> was loaded. The conclusion is that wl is making some change in the setup that
> b43 is not.
> 
> (3) Based on the above, I have done MMIO and PCI-E configuration tracing for the
> two drivers and found some real differences. After seeing these, I did more RE
> work, and found some setup for the PCI-E core that was missed earlier. I am
> still working on the changes. What I have completed is found at
> 
> http://bcm-v4.sipsolutions.net/PCI-E#PCI-E_Setup
> 
> I doubt that most of these new routines will affect the problem interfaces as
> they apply only to PCI-E core revisions 7 and 8. My BCM4312 has rev 9. I do not
> know what versions are giving the trouble. With SSB_DEBUG enabled, it will be in
> a log line as follows:
> 
> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
> 
> If you are seeing the DMA error, please supply the above info.
> 
> The "PCI-E Miscellaneous Configuration" routine that is not yet finished does
> run on my system and is the source of the tracing differences. If the problem
> cards has a revision newer than 9, I will probably need an MMIO trace for your
> device.
> 
> Larry
> 

Here is mine.

root at mini ~ # dmesg | grep ssb
[  138.450389] ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 
0x4243)
[  138.450420] ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, 
vendor 0x4243)
[  138.450447] ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
[  138.450473] ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
[  138.490310] ssb: Found rev 1 PMU (capabilities 0x02A62F01)
[  138.499585] ssb: SPROM revision 8 detected.
[  138.533626] ssb: Sonics Silicon Backplane found on PCI device 
0000:01:00.0


Just a note, I am testing it right now and you were right, the card does 
work if warm booted after having used wl driver. Seems like some 
initialization stuff is done differently, as the led turn active (blue ) 
even before loading any driver for the card.

- William


From b3nton at gmail.com  Tue Nov 24 23:02:00 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Tue, 24 Nov 2009 22:02:00 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <20091124202521.70eaf0aa@boulder.homenet>
References: <4AFA09C8.4060602@gmail.com>
	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>
	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>
	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>
	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>
	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>	<4B0C109D.8030800@polymtl.ca>
	<4B0C1B44.4020605@lwfinger.net>
	<20091124202521.70eaf0aa@boulder.homenet>
Message-ID: <4B0C57D8.9040203@gmail.com>

On 24/11/09 20:25, Chris Vine wrote:
> For the record, and in case someone else needs it, I had to apply this
> one: one glue file didn't include sched.h as it should have done
> (presumably one of the other included headers happened to include it in
> kernel>= 2.6.31 but not after). I don't know why it isn't necessary in
> your cases.
>
> Chris
>
>
> --- src/wl/sys/wl_linux.c.orig	2009-11-21 10:07:59.000000000 +0000
> +++ src/wl/sys/wl_linux.c	2009-11-21 10:08:32.000000000 +0000
> @@ -38,6 +38,7 @@
>   #include<linux/ethtool.h>
>   #include<linux/completion.h>
>   #include<linux/pci_ids.h>
> +#include<linux/sched.h>
>   #define WLC_MAXBSSCFG		1	
>
>   #if LINUX_VERSION_CODE>= KERNEL_VERSION(2, 6, 29)
>
The Broadcom driver compiles fine for me if I run this sed before I run 
make:-

sed -i '/types.h/a#include <linux/sched.h>' src/wl/sys/wl_linux.c

It achieves the same result as your patch.

Andy


From b3nton at gmail.com  Tue Nov 24 23:04:03 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Tue, 24 Nov 2009 22:04:03 +0000
Subject: Fatal DMA error problem with netbook and BCM4312
In-Reply-To: <4B0C2050.2060000@lwfinger.net>
References: <4AFA09C8.4060602@gmail.com>	<200911131216.43704.mb@bu3sch.de>	<4AFD83CA.2050508@lwfinger.net>	<200911131836.26857.mb@bu3sch.de>	<4AFD9E20.3060501@gmail.com>	<4AFDD1C9.4050402@lwfinger.net>	<4AFDF68C.4040804@polymtl.ca>	<4AFE1E5F.9040009@lwfinger.net>	<4AFEFC2C.5030704@polymtl.ca>	<4B068ED9.5070107@lwfinger.net>	<4B0B59EC.2000809@polymtl.ca>	<20091124095436.7a4176a1@boulder.homenet>	<4B0C00B5.1000407@polymtl.ca>	<20091124163536.78276489@boulder.homenet>	<4B0C1DD6.1030703@polymtl.ca>
	<4B0C2050.2060000@lwfinger.net>
Message-ID: <4B0C5853.9040905@gmail.com>

On 24/11/09 18:05, Larry Finger wrote:
> The wl driver needs lib80211 as a module. Check your .config for CONFIG_LIB80211.
>
> Larry

The wl driver works well for me with a monolithic kernel. The only 
module I have is wl

andy:~$ lsmod
Module                  Size  Used by
wl                   1262348  0
andy:~$



From b3nton at gmail.com  Tue Nov 24 23:37:12 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Tue, 24 Nov 2009 22:37:12 +0000
Subject: DMA errors with BCM4312 - an update
In-Reply-To: <4B0C2EC3.5010408@lwfinger.net>
References: <4B0C2EC3.5010408@lwfinger.net>
Message-ID: <4B0C6018.8020003@gmail.com>

On 24/11/09 19:06, Larry Finger wrote:
> know what versions are giving the trouble. With SSB_DEBUG enabled, it will be in
> a log line as follows:
>
> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
>
> If you are seeing the DMA error, please supply the above info.
>
I have been seeing the DMA errors (if I enable the ACPI processor module)

andy:~$ dmesg | grep ssb
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
ssb: Found rev 1 PMU (capabilities 0x02A62F01)
ssb: SPROM revision 8 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0
b43 ssb0:0: firmware: requesting b43/ucode15.fw
b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
andy:~$


From Larry.Finger at lwfinger.net  Wed Nov 25 01:39:37 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Nov 2009 18:39:37 -0600
Subject: DMA errors with BCM4312 - an update
In-Reply-To: <200911242220.47497.mb@bu3sch.de>
References: <4B0C2EC3.5010408@lwfinger.net>
	<20091124211552.533a2b4e@boulder.homenet>
	<200911242220.47497.mb@bu3sch.de>
Message-ID: <4B0C7CC9.3060005@lwfinger.net>

On 11/24/2009 03:20 PM, Michael Buesch wrote:
> On Tuesday 24 November 2009 22:15:52 Chris Vine wrote:
>> On Tue, 24 Nov 2009 13:06:43 -0600
>> Larry Finger <Larry.Finger at lwfinger.net> wrote:
>>> This E-mail is to summarize what I have learned to date.
>>>
>>> The pm_qos change does nothing useful. It may have helped a little,
>>> but the side effects are far worse than the benefits.
>>>
>>> Most systems work better with b43 when warm booted after Broadcom's
>>> wl driver was loaded. The conclusion is that wl is making some change
>>> in the setup that b43 is not.
>>>
>>> (3) Based on the above, I have done MMIO and PCI-E configuration
>>> tracing for the two drivers and found some real differences. After
>>> seeing these, I did more RE work, and found some setup for the PCI-E
>>> core that was missed earlier. I am still working on the changes. What
>>> I have completed is found at
>>>
>>> http://bcm-v4.sipsolutions.net/PCI-E#PCI-E_Setup
>>>
>>> I doubt that most of these new routines will affect the problem
>>> interfaces as they apply only to PCI-E core revisions 7 and 8. My
>>> BCM4312 has rev 9. I do not know what versions are giving the
>>> trouble. With SSB_DEBUG enabled, it will be in a log line as follows:
>>>
>>> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
>>>
>>> If you are seeing the DMA error, please supply the above info.
>>>
>>> The "PCI-E Miscellaneous Configuration" routine that is not yet
>>> finished does run on my system and is the source of the tracing
>>> differences. If the problem cards has a revision newer than 9, I will
>>> probably need an MMIO trace for your device.
>>
>> This is mine, the same revision as yours, but which demonstrates the
>> DMA errors:
>>
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
>> ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
>> ssb: Found rev 1 PMU (capabilities 0x02A62F01)
> 
> Larry, do you also have the same PMU?

ssb: Found rev 1 PMU (capabilities 0x02A62F01)

Yes - seems to be identical.

Larry


From Larry.Finger at lwfinger.net  Fri Nov 27 21:57:12 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 27 Nov 2009 14:57:12 -0600
Subject: Does this help b43 DMA errors?
Message-ID: <4B103D28.9020802@lwfinger.net>

Please try this patch without the pm_qos patch to see if it helps. The Broadcom
wl driver does this during the setup.

Thanks,

Larry

====================

Index: wireless-testing/drivers/ssb/driver_pcicore.c
===================================================================
--- wireless-testing.orig/drivers/ssb/driver_pcicore.c
+++ wireless-testing/drivers/ssb/driver_pcicore.c
@@ -606,6 +606,12 @@ int ssb_pcicore_dev_irqvecs_enable(struc
 			tmp |= 0x8;
 			ssb_pcie_write(pc, 0x4, tmp);
 		}
+		if (pdev->id.revision == 1) {
+			/* DLLP Link Control register. */
+			tmp = ssb_pcie_read(pc, 0x100);
+			tmp |= 0x40;
+			ssb_pcie_write(pc, 0x100, tmp);
+		}
 		if (pdev->id.revision == 0) {
 			const u8 serdes_rx_device = 0x1F;

@@ -615,12 +621,19 @@ int ssb_pcicore_dev_irqvecs_enable(struc
 					    6 /* CDR */, 0x0100);
 			ssb_pcie_mdio_write(pc, serdes_rx_device,
 					    7 /* CDR BW */, 0x1466);
-		} else if (pdev->id.revision == 1) {
-			/* DLLP Link Control register. */
-			tmp = ssb_pcie_read(pc, 0x100);
-			tmp |= 0x40;
-			ssb_pcie_write(pc, 0x100, tmp);
+		} else if (pdev->id.revision >= 3 && pdev->id.revision <= 5) {
+			/* DLLP Power Management Threshold */
+			tmp = ssb_pcie_read(pc, 0x128) & 0x00FF;
+			tmp |= 0x7200;
+			ssb_pcie_write(pc, 0x128, tmp);
+			/* TODO: PCIe serdes workaround */
+			/* TODO: PCIe ASPM Clock Request workaround */
+		} else {
+			/* TODO: PCIe Extend L1 Timer - for core rev 7 or 8 */
+			/* TODO: PCIe No PLL Down workaround - for core rev 3 or 4 */
+			writew(readw(bus->mmio + 0x80A) | 0x8000, bus->mmio + 0x80A);
 		}
+
 	}
 	pc->setup_done = 1;
 out:




From b3nton at gmail.com  Sat Nov 28 00:27:06 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Fri, 27 Nov 2009 23:27:06 +0000
Subject: Does this help b43 DMA errors?
In-Reply-To: <4B103D28.9020802@lwfinger.net>
References: <4B103D28.9020802@lwfinger.net>
Message-ID: <4B10604A.3010107@gmail.com>

On 27/11/09 20:57, Larry Finger wrote:
> Please try this patch without the pm_qos patch to see if it helps. The Broadcom
> wl driver does this during the setup.
>

Sorry, it doesn't help. With a kernel compiled with
CONFIG_ACPI_PROCESSOR=y
it goes straight to the usual DMA errors.
Thanks for trying.

Andy


From chris at cvine.freeserve.co.uk  Sat Nov 28 01:44:55 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Sat, 28 Nov 2009 00:44:55 +0000
Subject: Does this help b43 DMA errors?
In-Reply-To: <4B103D28.9020802@lwfinger.net>
References: <4B103D28.9020802@lwfinger.net>
Message-ID: <20091128004455.22a66bc4@boulder.homenet>

On Fri, 27 Nov 2009 14:57:12 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> Please try this patch without the pm_qos patch to see if it helps.
> The Broadcom wl driver does this during the setup.
> 
> Thanks,
> 
> Larry

It doesn't improve things I am afraid.

Chris




From william.bourque at polymtl.ca  Sat Nov 28 02:37:16 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Fri, 27 Nov 2009 20:37:16 -0500
Subject: Does this help b43 DMA errors?
In-Reply-To: <4B103D28.9020802@lwfinger.net>
References: <4B103D28.9020802@lwfinger.net>
Message-ID: <4B107ECC.2080805@polymtl.ca>


Larry Finger wrote:
> Please try this patch without the pm_qos patch to see if it helps. The Broadcom
> wl driver does this during the setup.
The DMA error is still there. There is something strange about the wl 
driver, it seems to perform some action on the card that are only done 
after the interface is brought up with b43. No clue exactly what but it 
makes the led to flash and turn blue (not useful, I know).

- William


From Larry.Finger at lwfinger.net  Sat Nov 28 18:12:20 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Nov 2009 11:12:20 -0600
Subject: II. Does this help b43 DMA errors?
Message-ID: <4B1159F4.9070108@lwfinger.net>

Thanks for testing the other patch. To try to test the differences,
I also dumped the PCI configuration writes and found one that wl does.

Please see if this one helps.

Larry

====================


Index: wireless-testing/drivers/ssb/driver_pcicore.c
===================================================================
--- wireless-testing.orig/drivers/ssb/driver_pcicore.c
+++ wireless-testing/drivers/ssb/driver_pcicore.c
@@ -325,6 +325,8 @@ static void ssb_pcicore_fixup_pcibridge(
 	ssb_printk(KERN_INFO "PCI: Fixing latency timer of device %s to %u\n",
 		   pci_name(dev), lat);
 	pci_write_config_byte(dev, PCI_LATENCY_TIMER, lat);
+
+	pci_write_config_dword(dev, 0x40, 0x6030001);
 }
 DECLARE_PCI_FIXUP_EARLY(PCI_ANY_ID, PCI_ANY_ID, ssb_pcicore_fixup_pcibridge);





From mb at bu3sch.de  Sat Nov 28 18:31:42 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 28 Nov 2009 18:31:42 +0100
Subject: II. Does this help b43 DMA errors?
In-Reply-To: <4B1159F4.9070108@lwfinger.net>
References: <4B1159F4.9070108@lwfinger.net>
Message-ID: <200911281831.44664.mb@bu3sch.de>

On Saturday 28 November 2009 18:12:20 Larry Finger wrote:
> Thanks for testing the other patch. To try to test the differences,
> I also dumped the PCI configuration writes and found one that wl does.
> 
> Please see if this one helps.
> 
> Larry
> 
> ====================
> 
> 
> Index: wireless-testing/drivers/ssb/driver_pcicore.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/driver_pcicore.c
> +++ wireless-testing/drivers/ssb/driver_pcicore.c
> @@ -325,6 +325,8 @@ static void ssb_pcicore_fixup_pcibridge(
>  	ssb_printk(KERN_INFO "PCI: Fixing latency timer of device %s to %u\n",
>  		   pci_name(dev), lat);
>  	pci_write_config_byte(dev, PCI_LATENCY_TIMER, lat);
> +
> +	pci_write_config_dword(dev, 0x40, 0x6030001);
>  }
>  DECLARE_PCI_FIXUP_EARLY(PCI_ANY_ID, PCI_ANY_ID, ssb_pcicore_fixup_pcibridge);

Uhm, this code is for embedded MIPS, only.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Nov 28 19:03:30 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Nov 2009 12:03:30 -0600
Subject: II. Does this help b43 DMA errors?
In-Reply-To: <200911281831.44664.mb@bu3sch.de>
References: <4B1159F4.9070108@lwfinger.net> <200911281831.44664.mb@bu3sch.de>
Message-ID: <4B1165F2.1090302@lwfinger.net>

On 11/28/2009 11:31 AM, Michael Buesch wrote:
> On Saturday 28 November 2009 18:12:20 Larry Finger wrote:
>> Thanks for testing the other patch. To try to test the differences,
>> I also dumped the PCI configuration writes and found one that wl does.
>>
>> Please see if this one helps.
>>
>> Larry
>>
>> ====================
>>
>>
>> Index: wireless-testing/drivers/ssb/driver_pcicore.c
>> ===================================================================
>> --- wireless-testing.orig/drivers/ssb/driver_pcicore.c
>> +++ wireless-testing/drivers/ssb/driver_pcicore.c
>> @@ -325,6 +325,8 @@ static void ssb_pcicore_fixup_pcibridge(
>>  	ssb_printk(KERN_INFO "PCI: Fixing latency timer of device %s to %u\n",
>>  		   pci_name(dev), lat);
>>  	pci_write_config_byte(dev, PCI_LATENCY_TIMER, lat);
>> +
>> +	pci_write_config_dword(dev, 0x40, 0x6030001);
>>  }
>>  DECLARE_PCI_FIXUP_EARLY(PCI_ANY_ID, PCI_ANY_ID, ssb_pcicore_fixup_pcibridge);
> 
> Uhm, this code is for embedded MIPS, only.

On my x86_64 system, I get the "Fixing latency ..." message printed out
just before the code writes 0x40 to PCI-E configuration register 0x0d
(PCI_LATENCY_TIMER). The wl driver does that same write on my machine.

Do you have any knowledge as to why this number is increased from the
default of 32?

Larry


From b3nton at gmail.com  Sat Nov 28 19:14:54 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sat, 28 Nov 2009 18:14:54 +0000
Subject: II. Does this help b43 DMA errors?
In-Reply-To: <4B1159F4.9070108@lwfinger.net>
References: <4B1159F4.9070108@lwfinger.net>
Message-ID: <4B11689E.10405@gmail.com>

On 28/11/09 17:12, Larry Finger wrote:
> Thanks for testing the other patch. To try to test the differences,
> I also dumped the PCI configuration writes and found one that wl does.
>
> Please see if this one helps.
>
> Larry
>
> ====================
>
>
> Index: wireless-testing/drivers/ssb/driver_pcicore.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/driver_pcicore.c
> +++ wireless-testing/drivers/ssb/driver_pcicore.c
> @@ -325,6 +325,8 @@ static void ssb_pcicore_fixup_pcibridge(
>   	ssb_printk(KERN_INFO "PCI: Fixing latency timer of device %s to %u\n",
>   		   pci_name(dev), lat);
>   	pci_write_config_byte(dev, PCI_LATENCY_TIMER, lat);
> +
> +	pci_write_config_dword(dev, 0x40, 0x6030001);
>   }
>   DECLARE_PCI_FIXUP_EARLY(PCI_ANY_ID, PCI_ANY_ID, ssb_pcicore_fixup_pcibridge);
>
>

Sorry, this one also doesn't help.
Thanks for trying,

Andy


From mb at bu3sch.de  Sat Nov 28 20:59:05 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 28 Nov 2009 20:59:05 +0100
Subject: II. Does this help b43 DMA errors?
In-Reply-To: <4B1165F2.1090302@lwfinger.net>
References: <4B1159F4.9070108@lwfinger.net> <200911281831.44664.mb@bu3sch.de>
	<4B1165F2.1090302@lwfinger.net>
Message-ID: <200911282059.07725.mb@bu3sch.de>

On Saturday 28 November 2009 19:03:30 Larry Finger wrote:
> On my x86_64 system, I get the "Fixing latency ..." message printed out
> just before the code writes 0x40 to PCI-E configuration register 0x0d
> (PCI_LATENCY_TIMER). The wl driver does that same write on my machine.
> 
> Do you have any knowledge as to why this number is increased from the
> default of 32?

The code should not even be compiled on that system. If the code is really
executed, that's a serious breakage.

The code is ifdefed unter CONFIG_SSB_PCICORE_HOSTMODE.
This config option must not be enabled on anything but MIPS.

I think, however, enabling CONFIG_SSB_PCICORE_HOSTMODE should lead to compile
failures on anything but MIPS.

(And the code writes 0xA8, not 0x40.)

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Nov 29 00:07:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Nov 2009 17:07:18 -0600
Subject: II. Does this help b43 DMA errors?
In-Reply-To: <200911282059.07725.mb@bu3sch.de>
References: <4B1159F4.9070108@lwfinger.net> <200911281831.44664.mb@bu3sch.de>
	<4B1165F2.1090302@lwfinger.net> <200911282059.07725.mb@bu3sch.de>
Message-ID: <4B11AD26.70506@lwfinger.net>

On 11/28/2009 01:59 PM, Michael Buesch wrote:
> 
> The code should not even be compiled on that system. If the code is really
> executed, that's a serious breakage.
> 
> The code is ifdefed unter CONFIG_SSB_PCICORE_HOSTMODE.
> This config option must not be enabled on anything but MIPS.
> 
> I think, however, enabling CONFIG_SSB_PCICORE_HOSTMODE should lead to compile
> failures on anything but MIPS.

I found where my system is changing the latency in arch/x86/pci/i386.c.
Sorry for the noise.

Larry


From Larry.Finger at lwfinger.net  Sun Nov 29 00:43:29 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Nov 2009 17:43:29 -0600
Subject: III. Does this help b43 DMA errors?
Message-ID: <4B11B5A1.8050308@lwfinger.net>

Sorry about the problem with the previous try. This one does write the
PCI configuration the same as wl does.

Please see if this one helps.

Larry

====================

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -567,6 +567,8 @@ static int sprom_extract(struct ssb_bus
 			 const u16 *in, u16 size)
 {
 	pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
+	printk(KERN_DEBUG "ssb: Set PCI Configuration word 0x40 to "
+			  "0x6030001\n");

 	memset(out, 0, sizeof(*out));





From netrolller.3d at gmail.com  Sun Nov 29 00:57:06 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 29 Nov 2009 00:57:06 +0100
Subject: III. Does this help b43 DMA errors?
In-Reply-To: <4B11B5A1.8050308@lwfinger.net>
References: <4B11B5A1.8050308@lwfinger.net>
Message-ID: <69e28c910911281557j1a8ebcb1oe57bccfdd0b7e8bb@mail.gmail.com>

??? This only adds a printk...

On Sun, Nov 29, 2009 at 12:43 AM, Larry Finger
<Larry.Finger at lwfinger.net> wrote:
> Sorry about the problem with the previous try. This one does write the
> PCI configuration the same as wl does.
>
> Please see if this one helps.
>
> Larry
>
> ====================
>
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -567,6 +567,8 @@ static int sprom_extract(struct ssb_bus
> ? ? ? ? ? ? ? ? ? ? ? ? const u16 *in, u16 size)
> ?{
> ? ? ? ?pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
> + ? ? ? printk(KERN_DEBUG "ssb: Set PCI Configuration word 0x40 to "
> + ? ? ? ? ? ? ? ? ? ? ? ? "0x6030001\n");
>
> ? ? ? ?memset(out, 0, sizeof(*out));
>
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From zajec5polish at gmail.com  Sun Nov 29 00:57:46 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sun, 29 Nov 2009 00:57:46 +0100
Subject: III. Does this help b43 DMA errors?
In-Reply-To: <4B11B5A1.8050308@lwfinger.net>
References: <4B11B5A1.8050308@lwfinger.net>
Message-ID: <14b026160911281557g3cd52fd3t22cb3936d1e28d65@mail.gmail.com>

2009/11/29 Larry Finger <Larry.Finger at lwfinger.net>:
> Sorry about the problem with the previous try. This one does write the
> PCI configuration the same as wl does.
>
> Please see if this one helps.
>
> Larry
>
> ====================
>
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -567,6 +567,8 @@ static int sprom_extract(struct ssb_bus
> ? ? ? ? ? ? ? ? ? ? ? ? const u16 *in, u16 size)
> ?{
> ? ? ? ?pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
> + ? ? ? printk(KERN_DEBUG "ssb: Set PCI Configuration word 0x40 to "
> + ? ? ? ? ? ? ? ? ? ? ? ? "0x6030001\n");
>
> ? ? ? ?memset(out, 0, sizeof(*out));

I keep staring at this... And I think you attached patch to locally
patched tree.

-- 
Rafa?


From mb at bu3sch.de  Sun Nov 29 00:58:04 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 29 Nov 2009 00:58:04 +0100
Subject: III. Does this help b43 DMA errors?
In-Reply-To: <4B11B5A1.8050308@lwfinger.net>
References: <4B11B5A1.8050308@lwfinger.net>
Message-ID: <200911290058.06505.mb@bu3sch.de>

On Sunday 29 November 2009 00:43:29 Larry Finger wrote:
> Sorry about the problem with the previous try. This one does write the
> PCI configuration the same as wl does.
> 
> Please see if this one helps.

> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -567,6 +567,8 @@ static int sprom_extract(struct ssb_bus
>  			 const u16 *in, u16 size)
>  {
>  	pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
> +	printk(KERN_DEBUG "ssb: Set PCI Configuration word 0x40 to "
> +			  "0x6030001\n");
> 
>  	memset(out, 0, sizeof(*out));

/me scratches head
quilt refresh? ;)

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Nov 29 03:59:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 28 Nov 2009 20:59:32 -0600
Subject: IIIA. Does this help b43 DMA errors?
Message-ID: <4B11E394.5060507@lwfinger.net>

It is not my day. This statement is the one that I wanted.

Please see if this one does any good.

Larry

====================

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -566,6 +566,8 @@ static void sprom_extract_r8(struct ssb_
 static int sprom_extract(struct ssb_bus *bus, struct ssb_sprom *out,
 			 const u16 *in, u16 size)
 {
+	pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
+
 	memset(out, 0, sizeof(*out));

 	out->revision = in[size - 1] & 0x00FF;





From b3nton at gmail.com  Sun Nov 29 14:29:30 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sun, 29 Nov 2009 13:29:30 +0000
Subject: IIIA. Does this help b43 DMA errors?
In-Reply-To: <4B11E394.5060507@lwfinger.net>
References: <4B11E394.5060507@lwfinger.net>
Message-ID: <4B12773A.4090109@gmail.com>

On 29/11/09 02:59, Larry Finger wrote:
> It is not my day. This statement is the one that I wanted.
>
> Please see if this one does any good.
>
> Larry
>
> ====================
>
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -566,6 +566,8 @@ static void sprom_extract_r8(struct ssb_
>   static int sprom_extract(struct ssb_bus *bus, struct ssb_sprom *out,
>   			 const u16 *in, u16 size)
>   {
> +	pci_write_config_dword(bus->host_pci, 0x40, 0x6030001);
> +
>   	memset(out, 0, sizeof(*out));
>
>   	out->revision = in[size - 1]&  0x00FF;
>
>

Sorry this doesn't help. I still get DMA errors and no network connection.

Andy


From chris at cvine.freeserve.co.uk  Sun Nov 29 17:23:30 2009
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Sun, 29 Nov 2009 16:23:30 +0000
Subject: IIIA. Does this help b43 DMA errors?
In-Reply-To: <4B11E394.5060507@lwfinger.net>
References: <4B11E394.5060507@lwfinger.net>
Message-ID: <20091129162330.455b9f5b@laptop.homenet>

On Sat, 28 Nov 2009 20:59:32 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:
> It is not my day. This statement is the one that I wanted.
> 
> Please see if this one does any good.

It doesn't improve things for me, I'm afraid.

Chris


From Larry.Finger at lwfinger.net  Sun Nov 29 19:41:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 29 Nov 2009 12:41:47 -0600
Subject: I need to see some wl output
Message-ID: <4B12C06B.9030907@lwfinger.net>

It seems that none of the "special" things that the wl driver does on my
system has any affect on the DMA errors. I would appreciate if one of
you would do the following:

1. Set CONFIG_MMIOTRACE=y in .config.

2. Apply the attached patch 'log_pciconfig' and build the resulting kernel.

3. Copy *_mmio_log to your home directory and make them executable
(chmod a+x).

4. Blacklist wl, ssb, and b43.

5. Cold boot the new kernel.

6. Run (as root) the attached "start_mmio_log"

7. modprobe wl

8. After wl is connected, run (again as root) the attached "stop_mmio_log"

9. Send me the file "dump_wl.txt" and the dmesg output from the point at
which the kernel is tainted.

Thanks,

Larry

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: log_pciconfig
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091129/3b0947b1/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: start_mmio_log
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091129/3b0947b1/attachment-0001.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: stop_mmio_log
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091129/3b0947b1/attachment-0002.ksh>

From b3nton at gmail.com  Sun Nov 29 21:44:36 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sun, 29 Nov 2009 20:44:36 +0000
Subject: I need to see some wl output
In-Reply-To: <4B12C06B.9030907@lwfinger.net>
References: <4B12C06B.9030907@lwfinger.net>
Message-ID: <4B12DD34.4060100@gmail.com>

On 29/11/09 18:41, Larry Finger wrote:
> It seems that none of the "special" things that the wl driver does on my
> system has any affect on the DMA errors. I would appreciate if one of
> you would do the following:
>
> 1. Set CONFIG_MMIOTRACE=y in .config.
>

I can't find that option. I have

CONFIG_HAVE_MMIOTRACE_SUPPORT=y

That's the only instance of MMIO in my .config
How do I set CONFIG_MMIOTRACE=y?

Andy


From netrolller.3d at gmail.com  Sun Nov 29 22:01:54 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 29 Nov 2009 22:01:54 +0100
Subject: I need to see some wl output
In-Reply-To: <4B12DD34.4060100@gmail.com>
References: <4B12C06B.9030907@lwfinger.net> <4B12DD34.4060100@gmail.com>
Message-ID: <69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>

On Sun, Nov 29, 2009 at 9:44 PM, Andrew Benton <b3nton at gmail.com> wrote:
> On 29/11/09 18:41, Larry Finger wrote:
>> It seems that none of the "special" things that the wl driver does on my
>> system has any affect on the DMA errors. I would appreciate if one of
>> you would do the following:
>>
>> 1. Set CONFIG_MMIOTRACE=y in .config.
>>
>
> I can't find that option. I have
>
> CONFIG_HAVE_MMIOTRACE_SUPPORT=y
>
> That's the only instance of MMIO in my .config
> How do I set CONFIG_MMIOTRACE=y?
>

Do not edit your config directly, use {menu|x|g}config. You need to
enable the tracing framework to see mmiotrace.

> Andy
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From b3nton at gmail.com  Sun Nov 29 22:40:15 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sun, 29 Nov 2009 21:40:15 +0000
Subject: I need to see some wl output
In-Reply-To: <69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>
References: <4B12C06B.9030907@lwfinger.net> <4B12DD34.4060100@gmail.com>
	<69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>
Message-ID: <4B12EA3F.2050104@gmail.com>

On 29/11/09 21:01, G?bor Stefanik wrote:
> Do not edit your config directly, use {menu|x|g}config. You need to
> enable the tracing framework to see mmiotrace.
> 

Thanks, I used make menuconfig, set CONFIG_MMIOTRACE=y
rebooted but when I ran start_mmio_log it said:-

root:/home/andy# '/home/andy/start_mmio_log.bash' 
/home/andy/start_mmio_log.bash: line 3: /sys/kernel/debug/tracing/buffer_size_kb: No such file or directory
/home/andy/start_mmio_log.bash: line 4: /sys/kernel/debug/tracing/current_tracer: No such file or directory
root:/home/andy# cat: /sys/kernel/debug/tracing/trace_pipe: No such file or directory

It looks like I need to enable some more options. 
Any advice on what to enable?

Andy


From b3nton at gmail.com  Mon Nov 30 00:15:36 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Sun, 29 Nov 2009 23:15:36 +0000
Subject: I need to see some wl output
In-Reply-To: <4B12C06B.9030907@lwfinger.net>
References: <4B12C06B.9030907@lwfinger.net>
Message-ID: <4B130098.3000002@gmail.com>

On 29/11/09 18:41, Larry Finger wrote:
> It seems that none of the "special" things that the wl driver does on my
> system has any affect on the DMA errors. I would appreciate if one of
> you would do the following:
>
> 1. Set CONFIG_MMIOTRACE=y in .config.
>
> 2. Apply the attached patch 'log_pciconfig' and build the resulting kernel.
>
> 3. Copy *_mmio_log to your home directory and make them executable
> (chmod a+x).
>
> 4. Blacklist wl, ssb, and b43.
>
> 5. Cold boot the new kernel.
>
> 6. Run (as root) the attached "start_mmio_log"
>
> 7. modprobe wl
>
> 8. After wl is connected, run (again as root) the attached "stop_mmio_log"
>
> 9. Send me the file "dump_wl.txt" and the dmesg output from the point at
> which the kernel is tainted.
>

I can't get this to work. I've enabled lot's of options on the kernel 
hacking menu but still /sys/kernel/debug remains completely empty. It 
takes about 30 mins to recompile a kernel on that little atom processor. 
I'll work on it some more tomorrow but it would help if someone could 
give me a clue which kernel options to enable to get this to work. 
CONFIG_MMIOTRACE=y is not enough.

Andy


From Larry.Finger at lwfinger.net  Mon Nov 30 00:15:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 29 Nov 2009 17:15:47 -0600
Subject: I need to see some wl output
In-Reply-To: <4B12EA3F.2050104@gmail.com>
References: <4B12C06B.9030907@lwfinger.net>
	<4B12DD34.4060100@gmail.com>	<69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>
	<4B12EA3F.2050104@gmail.com>
Message-ID: <4B1300A3.6070802@lwfinger.net>

On 11/29/2009 03:40 PM, Andrew Benton wrote:
> On 29/11/09 21:01, G?bor Stefanik wrote:
>> Do not edit your config directly, use {menu|x|g}config. You need to
>> enable the tracing framework to see mmiotrace.
>>
> 
> Thanks, I used make menuconfig, set CONFIG_MMIOTRACE=y
> rebooted but when I ran start_mmio_log it said:-
> 
> root:/home/andy# '/home/andy/start_mmio_log.bash' 
> /home/andy/start_mmio_log.bash: line 3: /sys/kernel/debug/tracing/buffer_size_kb: No such file or directory
> /home/andy/start_mmio_log.bash: line 4: /sys/kernel/debug/tracing/current_tracer: No such file or directory
> root:/home/andy# cat: /sys/kernel/debug/tracing/trace_pipe: No such file or directory
> 
> It looks like I need to enable some more options. 
> Any advice on what to enable?

Does /sys/kernel/debug exist? If not, you would need to

mount -t debugfs debugfs /sys/kernel/debug

In /etc/fstab, there is a line

debugfs /sys/kernel/debug       debugfs noauto 0 0

In case the above is not sufficient, I have the following in the kernel
hacking section:

#
# Kernel hacking
#
CONFIG_TRACE_IRQFLAGS_SUPPORT=y
# CONFIG_PRINTK_TIME is not set
CONFIG_ENABLE_WARN_DEPRECATED=y
CONFIG_ENABLE_MUST_CHECK=y
CONFIG_FRAME_WARN=2048
CONFIG_MAGIC_SYSRQ=y
# CONFIG_STRIP_ASM_SYMS is not set
# CONFIG_UNUSED_SYMBOLS is not set
CONFIG_DEBUG_FS=y
# CONFIG_HEADERS_CHECK is not set
CONFIG_DEBUG_KERNEL=y
# CONFIG_DEBUG_SHIRQ is not set
# CONFIG_DETECT_SOFTLOCKUP is not set
# CONFIG_DETECT_HUNG_TASK is not set
CONFIG_SCHED_DEBUG=y
# CONFIG_SCHEDSTATS is not set
CONFIG_TIMER_STATS=y
# CONFIG_DEBUG_OBJECTS is not set
# CONFIG_SLUB_DEBUG_ON is not set
# CONFIG_SLUB_STATS is not set
# CONFIG_DEBUG_KMEMLEAK is not set
CONFIG_DEBUG_RT_MUTEXES=y
CONFIG_DEBUG_PI_LIST=y
# CONFIG_RT_MUTEX_TESTER is not set
CONFIG_DEBUG_SPINLOCK=y
CONFIG_DEBUG_MUTEXES=y
CONFIG_DEBUG_LOCK_ALLOC=y
CONFIG_PROVE_LOCKING=y
CONFIG_LOCKDEP=y
# CONFIG_LOCK_STAT is not set
# CONFIG_DEBUG_LOCKDEP is not set
CONFIG_TRACE_IRQFLAGS=y
CONFIG_DEBUG_SPINLOCK_SLEEP=y
# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
CONFIG_STACKTRACE=y
# CONFIG_DEBUG_KOBJECT is not set
CONFIG_DEBUG_BUGVERBOSE=y
CONFIG_DEBUG_INFO=y
# CONFIG_DEBUG_VM is not set
# CONFIG_DEBUG_VIRTUAL is not set
# CONFIG_DEBUG_WRITECOUNT is not set
CONFIG_DEBUG_MEMORY_INIT=y
# CONFIG_DEBUG_LIST is not set
# CONFIG_DEBUG_SG is not set
# CONFIG_DEBUG_NOTIFIERS is not set
# CONFIG_DEBUG_CREDENTIALS is not set
CONFIG_ARCH_WANT_FRAME_POINTERS=y
CONFIG_FRAME_POINTER=y
# CONFIG_BOOT_PRINTK_DELAY is not set
CONFIG_RCU_TORTURE_TEST=m
# CONFIG_RCU_CPU_STALL_DETECTOR is not set
# CONFIG_BACKTRACE_SELF_TEST is not set
# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
# CONFIG_FAULT_INJECTION is not set
# CONFIG_LATENCYTOP is not set
CONFIG_SYSCTL_SYSCALL_CHECK=y
# CONFIG_DEBUG_PAGEALLOC is not set
CONFIG_USER_STACKTRACE_SUPPORT=y
CONFIG_NOP_TRACER=y
CONFIG_HAVE_FUNCTION_TRACER=y
CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST=y
CONFIG_HAVE_FUNCTION_TRACE_MCOUNT_TEST=y
CONFIG_HAVE_DYNAMIC_FTRACE=y
CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
CONFIG_RING_BUFFER=y
CONFIG_EVENT_TRACING=y
CONFIG_CONTEXT_SWITCH_TRACER=y
CONFIG_TRACING=y
CONFIG_GENERIC_TRACER=y
CONFIG_TRACING_SUPPORT=y
CONFIG_FTRACE=y
# CONFIG_FUNCTION_TRACER is not set
# CONFIG_IRQSOFF_TRACER is not set
# CONFIG_SYSPROF_TRACER is not set
# CONFIG_SCHED_TRACER is not set
# CONFIG_FTRACE_SYSCALLS is not set
# CONFIG_BOOT_TRACER is not set
CONFIG_BRANCH_PROFILE_NONE=y
# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
# CONFIG_PROFILE_ALL_BRANCHES is not set
# CONFIG_POWER_TRACER is not set
# CONFIG_STACK_TRACER is not set
# CONFIG_KMEMTRACE is not set
# CONFIG_WORKQUEUE_TRACER is not set
CONFIG_BLK_DEV_IO_TRACE=y
# CONFIG_FTRACE_STARTUP_TEST is not set
CONFIG_MMIOTRACE=y
# CONFIG_MMIOTRACE_TEST is not set
# CONFIG_RING_BUFFER_BENCHMARK is not set
# CONFIG_PROVIDE_OHCI1394_DMA_INIT is not set
# CONFIG_DYNAMIC_DEBUG is not set
CONFIG_DMA_API_DEBUG=y
# CONFIG_SAMPLES is not set
CONFIG_HAVE_ARCH_KGDB=y
# CONFIG_KGDB is not set
CONFIG_HAVE_ARCH_KMEMCHECK=y
# CONFIG_KMEMCHECK is not set
# CONFIG_STRICT_DEVMEM is not set
CONFIG_X86_VERBOSE_BOOTUP=y
CONFIG_EARLY_PRINTK=y
# CONFIG_EARLY_PRINTK_DBGP is not set
CONFIG_DEBUG_STACKOVERFLOW=y
# CONFIG_DEBUG_STACK_USAGE is not set
# CONFIG_DEBUG_PER_CPU_MAPS is not set
# CONFIG_X86_PTDUMP is not set
CONFIG_DEBUG_RODATA=y
# CONFIG_DEBUG_RODATA_TEST is not set
# CONFIG_DEBUG_NX_TEST is not set
# CONFIG_IOMMU_DEBUG is not set
# CONFIG_IOMMU_STRESS is not set
CONFIG_HAVE_MMIOTRACE_SUPPORT=y
CONFIG_IO_DELAY_TYPE_0X80=0
CONFIG_IO_DELAY_TYPE_0XED=1
CONFIG_IO_DELAY_TYPE_UDELAY=2
CONFIG_IO_DELAY_TYPE_NONE=3
CONFIG_IO_DELAY_0X80=y
# CONFIG_IO_DELAY_0XED is not set
# CONFIG_IO_DELAY_UDELAY is not set
# CONFIG_IO_DELAY_NONE is not set
CONFIG_DEFAULT_IO_DELAY_TYPE=0
# CONFIG_DEBUG_BOOT_PARAMS is not set
# CONFIG_CPA_DEBUG is not set
# CONFIG_OPTIMIZE_INLINING is not set


From Larry.Finger at lwfinger.net  Mon Nov 30 00:27:39 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 29 Nov 2009 17:27:39 -0600
Subject: I need to see some wl output
In-Reply-To: <4B130098.3000002@gmail.com>
References: <4B12C06B.9030907@lwfinger.net> <4B130098.3000002@gmail.com>
Message-ID: <4B13036B.6010001@lwfinger.net>

On 11/29/2009 05:15 PM, Andrew Benton wrote:
> On 29/11/09 18:41, Larry Finger wrote:
>> It seems that none of the "special" things that the wl driver does on my
>> system has any affect on the DMA errors. I would appreciate if one of
>> you would do the following:
>>
>> 1. Set CONFIG_MMIOTRACE=y in .config.
>>
>> 2. Apply the attached patch 'log_pciconfig' and build the resulting kernel.
>>
>> 3. Copy *_mmio_log to your home directory and make them executable
>> (chmod a+x).
>>
>> 4. Blacklist wl, ssb, and b43.
>>
>> 5. Cold boot the new kernel.
>>
>> 6. Run (as root) the attached "start_mmio_log"
>>
>> 7. modprobe wl
>>
>> 8. After wl is connected, run (again as root) the attached "stop_mmio_log"
>>
>> 9. Send me the file "dump_wl.txt" and the dmesg output from the point at
>> which the kernel is tainted.
>>
> 
> I can't get this to work. I've enabled lot's of options on the kernel 
> hacking menu but still /sys/kernel/debug remains completely empty. It 
> takes about 30 mins to recompile a kernel on that little atom processor. 
> I'll work on it some more tomorrow but it would help if someone could 
> give me a clue which kernel options to enable to get this to work. 
> CONFIG_MMIOTRACE=y is not enough.

Is debugfs mounted as in my previous E-mail?

Larry


From b3nton at gmail.com  Mon Nov 30 15:39:19 2009
From: b3nton at gmail.com (Andrew Benton)
Date: Mon, 30 Nov 2009 14:39:19 +0000
Subject: I need to see some wl output
In-Reply-To: <4B1300A3.6070802@lwfinger.net>
References: <4B12C06B.9030907@lwfinger.net>
	<4B12DD34.4060100@gmail.com>	<69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>
	<4B12EA3F.2050104@gmail.com> <4B1300A3.6070802@lwfinger.net>
Message-ID: <4B13D917.2000606@gmail.com>

On 29/11/09 23:15, Larry Finger wrote:
> Does /sys/kernel/debug exist? If not, you would need to
>
> mount -t debugfs debugfs /sys/kernel/debug
>
> In /etc/fstab, there is a line
>
> debugfs /sys/kernel/debug       debugfs noauto 0 0
>

Thanks, that's much better. I hope these files make sense. If I've done 
something wrong, let me know what to change.

Andy
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dmesg.dump
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091130/5b8c03bb/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: mydump_wl.txt
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091130/5b8c03bb/attachment.txt>

From william.bourque at polymtl.ca  Mon Nov 30 17:01:09 2009
From: william.bourque at polymtl.ca (William Bourque)
Date: Mon, 30 Nov 2009 11:01:09 -0500
Subject: I need to see some wl output
In-Reply-To: <4B12C06B.9030907@lwfinger.net>
References: <4B12C06B.9030907@lwfinger.net>
Message-ID: <4B13EC45.8080700@polymtl.ca>


Larry Finger wrote:
> It seems that none of the "special" things that the wl driver does on my
> system has any affect on the DMA errors. I would appreciate if one of
> you would do the following:
> 
> 1. Set CONFIG_MMIOTRACE=y in .config.
> 
> 2. Apply the attached patch 'log_pciconfig' and build the resulting kernel.
> 
> 3. Copy *_mmio_log to your home directory and make them executable
> (chmod a+x).
> 
> 4. Blacklist wl, ssb, and b43.
> 
> 5. Cold boot the new kernel.
> 
> 6. Run (as root) the attached "start_mmio_log"
> 
> 7. modprobe wl
> 
> 8. After wl is connected, run (again as root) the attached "stop_mmio_log"
> 
> 9. Send me the file "dump_wl.txt" and the dmesg output from the point at
> which the kernel is tainted.
> 

Hi Larry,

Here is my output.
The scripts weren't working out of box for me so I start/stopped the
logging sometime to figure out the problems.
The output should still be clean but if something is wrong, just tell me
so I will rerun this.

Thanks for the help

- William
-------------- next part --------------
A non-text attachment was scrubbed...
Name: output_william_30-11-2009.tar.gz
Type: application/x-gzip
Size: 322048 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20091130/ec11df59/attachment.bin>

From kmcquillan at gmail.com  Mon Nov 30 18:01:16 2009
From: kmcquillan at gmail.com (kevin mcquillan)
Date: Mon, 30 Nov 2009 12:01:16 -0500
Subject: 14e4:4315 bcm4312 problems
Message-ID: <BDE0B077-33BE-4797-9D83-C96B3AFECE0F@gmail.com>

Hello I recently came upon this list after searching google for an error code i received (b43 phy0: fatal dma error).  I was able to read a few of the archive posts but didn't see if the issue had been resolved.  I believe I have the same trouble as Larry Finger discussed between September and November of this year.  I have a Dell Inspiron 910 mini netbook running Ubuntu 9.10 netbook remix.  The card initially worked without much trouble but at some point after installing compat-wireless, installing and using b43fwcutter, applying patches from the aircrack-ng team, and following various tutorials online the card has stopped functioning properly.  The symptoms vary, right now when I start the netbook, it attempts to associate to my wifi network but is unable to associate, then if I attempt to disable the wireless and switch the card into monitor mode the system hangs.  Have any advice?  I guess plan B would be to buy an atheros on ebay...

Thanks,
Kevin McQuillan

From Larry.Finger at lwfinger.net  Mon Nov 30 18:13:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 30 Nov 2009 11:13:23 -0600
Subject: 14e4:4315 bcm4312 problems
In-Reply-To: <BDE0B077-33BE-4797-9D83-C96B3AFECE0F@gmail.com>
References: <BDE0B077-33BE-4797-9D83-C96B3AFECE0F@gmail.com>
Message-ID: <4B13FD33.4090103@lwfinger.net>

On 11/30/2009 11:01 AM, kevin mcquillan wrote:
> Hello I recently came upon this list after searching google for an error code i received (b43 phy0: fatal dma error).  I was able to read a few of the archive posts but didn't see if the issue had been resolved.  I believe I have the same trouble as Larry Finger discussed between September and November of this year.  I have a Dell Inspiron 910 mini netbook running Ubuntu 9.10 netbook remix.  The card initially worked without much trouble but at some point after installing compat-wireless, installing and using b43fwcutter, applying patches from the aircrack-ng team, and following various tutorials online the card has stopped functioning properly.  The symptoms vary, right now when I start the netbook, it attempts to associate to my wifi network but is unable to associate, then if I attempt to disable the wireless and switch the card into monitor mode the system hangs.  Have any advice?  I guess plan B would be to buy an atheros on ebay...

We have not yet found a fix for the DMA errors on netbooks with the Atom
processors. For the moment, you need to use the Broadcom-wl driver. I
have no idea if it works in monitor mode.

Larry


From Larry.Finger at lwfinger.net  Mon Nov 30 22:19:49 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 30 Nov 2009 15:19:49 -0600
Subject: I need to see some wl output
In-Reply-To: <4B13D917.2000606@gmail.com>
References: <4B12C06B.9030907@lwfinger.net>	<4B12DD34.4060100@gmail.com>	<69e28c910911291301x5385cd1eqf65a6f8ddfdae575@mail.gmail.com>	<4B12EA3F.2050104@gmail.com>
	<4B1300A3.6070802@lwfinger.net> <4B13D917.2000606@gmail.com>
Message-ID: <4B1436F5.6080503@lwfinger.net>

Andrew and William,

Thanks for the data. It was fine in both cases. I was hoping that some
difference between your netbook runs and mine would result in an "aha"
moment. None found so far, thus I'm back to slogging through the
differences between wl and b43.

I'll send more patches when I have other things to try.

Larry


