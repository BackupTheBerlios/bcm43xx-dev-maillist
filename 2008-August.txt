From dodofxp at gmail.com  Sat Aug  2 16:15:01 2008
From: dodofxp at gmail.com (Felipe Sere)
Date: Sat, 2 Aug 2008 16:15:01 +0200
Subject: b43 in MacBook Pro not showing interface
Message-ID: <da38d7b90808020715s2fa297bbnc262a28c4fa0464d@mail.gmail.com>

Hi everyone,

I am new to this list, so please be gentle :-) I am also no kernel developer.

My problem is the following:
even though I have extracted the firmware for the bcm from a file from
the inet (wl_apasta.o or so) to /lib/firmware and the module loads
without any errors when I do a modprobe b43, ifconfig -a does not show
any new interface...
I think the problem lies with the PCIID of my wireless chip.
Here is the output of lspci -nnv concerning the Broadcome BCM43xx chip.
0b:00.0 Network controller [0280]: Broadcom Corporation BCM4328
802.11a/b/g/n [14e4:4328] (rev 05)
	Subsystem: Apple Computer Inc. Unknown device [106b:008c]
	Flags: bus master, fast devsel, latency 0, IRQ 16
	Memory at 97300000 (64-bit, non-prefetchable) [size=16K]
	Capabilities: [40] Power Management version 3
	Capabilities: [58] Vendor Specific Information <?>
	Capabilities: [e8] Message Signalled Interrupts: Mask- 64bit+ Queue=0/0 Enable-
	Capabilities: [d0] Express Endpoint, MSI 00
	Kernel driver in use: b43-pci-bridge
	Kernel modules: ssb

I am willing to give any other needed information and help with
testing some patches.

Cheers

-- 
Felipe Sere


From netrolller.3d at gmail.com  Sat Aug  2 17:01:12 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sat, 2 Aug 2008 17:01:12 +0200
Subject: b43 in MacBook Pro not showing interface
In-Reply-To: <da38d7b90808020715s2fa297bbnc262a28c4fa0464d@mail.gmail.com>
References: <da38d7b90808020715s2fa297bbnc262a28c4fa0464d@mail.gmail.com>
Message-ID: <69e28c910808020801o4b51bb0et184e9903d31c2ef8@mail.gmail.com>

On Sat, Aug 2, 2008 at 4:15 PM, Felipe Sere <dodofxp at gmail.com> wrote:
> Hi everyone,
>
> I am new to this list, so please be gentle :-) I am also no kernel developer.
>
> My problem is the following:
> even though I have extracted the firmware for the bcm from a file from
> the inet (wl_apasta.o or so) to /lib/firmware and the module loads
> without any errors when I do a modprobe b43, ifconfig -a does not show
> any new interface...
> I think the problem lies with the PCIID of my wireless chip.
> Here is the output of lspci -nnv concerning the Broadcome BCM43xx chip.
> 0b:00.0 Network controller [0280]: Broadcom Corporation BCM4328
> 802.11a/b/g/n [14e4:4328] (rev 05)
>        Subsystem: Apple Computer Inc. Unknown device [106b:008c]
>        Flags: bus master, fast devsel, latency 0, IRQ 16
>        Memory at 97300000 (64-bit, non-prefetchable) [size=16K]
>        Capabilities: [40] Power Management version 3
>        Capabilities: [58] Vendor Specific Information <?>
>        Capabilities: [e8] Message Signalled Interrupts: Mask- 64bit+ Queue=0/0 Enable-
>        Capabilities: [d0] Express Endpoint, MSI 00
>        Kernel driver in use: b43-pci-bridge
>        Kernel modules: ssb
>
> I am willing to give any other needed information and help with
> testing some patches.
>
> Cheers
>
> --
> Felipe Sere

BCM4328 and other N-PHY/Intensi-Fi cards are not yet supported, and
there is nothing that can be done about it.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Sat Aug  2 17:14:15 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 02 Aug 2008 10:14:15 -0500
Subject: b43 in MacBook Pro not showing interface
In-Reply-To: <da38d7b90808020715s2fa297bbnc262a28c4fa0464d@mail.gmail.com>
References: <da38d7b90808020715s2fa297bbnc262a28c4fa0464d@mail.gmail.com>
Message-ID: <489479C7.3060706@lwfinger.net>

Felipe Sere wrote:
> Hi everyone,
> 
> I am new to this list, so please be gentle :-) I am also no kernel developer.
> 
> My problem is the following:
> even though I have extracted the firmware for the bcm from a file from
> the inet (wl_apasta.o or so) to /lib/firmware and the module loads
> without any errors when I do a modprobe b43, ifconfig -a does not show
> any new interface...
> I think the problem lies with the PCIID of my wireless chip.
> Here is the output of lspci -nnv concerning the Broadcome BCM43xx chip.
> 0b:00.0 Network controller [0280]: Broadcom Corporation BCM4328
> 802.11a/b/g/n [14e4:4328] (rev 05)
> 	Subsystem: Apple Computer Inc. Unknown device [106b:008c]
> 	Flags: bus master, fast devsel, latency 0, IRQ 16
> 	Memory at 97300000 (64-bit, non-prefetchable) [size=16K]
> 	Capabilities: [40] Power Management version 3
> 	Capabilities: [58] Vendor Specific Information <?>
> 	Capabilities: [e8] Message Signalled Interrupts: Mask- 64bit+ Queue=0/0 Enable-
> 	Capabilities: [d0] Express Endpoint, MSI 00
> 	Kernel driver in use: b43-pci-bridge
> 	Kernel modules: ssb
> 
> I am willing to give any other needed information and help with
> testing some patches.

At the moment, the BCM4328 is not supported by any b43 driver. The reverse 
engineering for this chip is in progress, but we cannot promise a date at which 
the driver will support this chip.

Larry


From clermytt at hotmail.com  Mon Aug  4 00:26:09 2008
From: clermytt at hotmail.com (Kobboi)
Date: Mon, 04 Aug 2008 00:26:09 +0200
Subject: Performance issue
Message-ID: <1217802370.9840.13.camel@saive.lan>

Hello,

I'm having a performance issue with my wireless card. I'd be grateful if
someone could help out, pinpoint the cause or propose a solution. I'm
using good old easy-to-crack WEP.

Kobboi

=== My hardware ==========

03:0c.0 Network controller: Broadcom Corporation BCM4306 802.11b/g
Wireless LAN Controller (rev 02) [0280: 14e4:4320 (rev 02)]
Subsystem: Belkin Unknown device 7000 [1799:7000]
Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B- DisINTx-
Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
<MAbort- >SERR- <PERR- INTx-
Latency: 64
Interrupt: pin A routed to IRQ 20
Region 0: Memory at f7efc000 (32-bit, non-prefetchable) [size=8K]
Capabilities: [40] Power Management version 2
Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot
+,D3cold+)
Status: D0 PME-Enable- DSel=0 DScale=2 PME+
Kernel driver in use: ndiswrapper

=== My software ==========

(o) ndiswrapper 1.50
with bcmwl5.sys from some driver. dmesg says
ndiswrapper: driver bcmwl5 (Broadcom,11/02/2005, 4.10.40.0) loaded
ACPI: PCI Interrupt 0000:03:0c.0[A] -> GSI 20 (level, low) -> IRQ 20
ndiswrapper: using IRQ 20
wlan0: ethernet device 00:30:bd:97:da:20 using NDIS driver: bcmwl5,
version: 0x40a2800, NDIS version: 0x501, vendor: 'NDIS Network Adapter',
14E4:4320.5.conf
wlan0: encryption modes supported: WEP; TKIP with WPA, WPA2, WPA2PSK;
AES/CCMP with WPA, WPA2, WPA2PSK

(o) linux kernel 2.6.26, from gentoo-sources package
(=vanilla kernel with some "safe" gentoo patches), b43 and b43legacy
built as modules

(o) b43-fwcutter 011

(o) b43 firmware from
http://mirror2.openwrt.org/sources/broadcom-wl-4.150.10.5.tar.bz2
(wl_apsta_mimo.o)

(o) b43legacy firmware from
http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o

=== My problem ==========

(o) My system boots with the ndiswrapper module loaded

wlan0     IEEE 802.11g  ESSID:"xxxxx"  
          Mode:Managed  Frequency:2.412 GHz  Access Point:
00:11:F5:30:88:6A   
          Bit Rate=48 Mb/s   Tx-Power:24 dBm   
          RTS thr:2347 B   Fragment thr:2346 B   
          Encryption key:xxxxx   Security mode:restricted
          Power Management:off
          Link Quality:51/100  Signal level:-63 dBm  Noise level:-96 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

Rate is good, a 131MB wget from a server connected with a wire to the
access point gets about 2MB/s.

(o) rmmod ndiswrapper and modprobe b43
dmesg says "Broadcom 43xx driver loaded [ Features: P, Firmware-ID:
FW13 ]"
Nothing happens, I guess this means my hardware is not supported by b43

(o) rmmod b43 and modprobe b43legacy
dmesg says

b43legacy-phy0: Broadcom 4306 WLAN found
b43legacy-phy0 debug: Found PHY: Analog 1, Type 2, Revision 1
b43legacy-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision
2
b43legacy-phy0 debug: Radio initialized
b43legacy-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel
config
phy0: Selected rate control algorithm 'pid'
Broadcom 43xx-legacy driver loaded [ Features: PID, Firmware-ID: FW10 ]
firmware: requesting b43legacy/ucode4.fw
firmware: requesting b43legacy/pcm4.fw
firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy0: Loading firmware version 0x127, patch level 14
(2005-04-18 02:36:27)
b43legacy-phy0 debug: Chip initialized
b43legacy-phy0 debug: 30-bit DMA initialized
b43legacy-phy0 debug: Wireless interface started
b43legacy-phy0 debug: Adding Interface type 2
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:f5:30:88:6a
wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:11:f5:30:88:6a
wlan0: RX authentication from 00:11:f5:30:88:6a (alg=0 transaction=2
status=0)
wlan0: authenticated
wlan0: associate with AP 00:11:f5:30:88:6a
wlan0: authentication frame received from 00:11:f5:30:88:6a, but not in
authenticate state - ignored
wlan0: RX AssocResp from 00:11:f5:30:88:6a (capab=0x411 status=0 aid=1)
wlan0: associated
wlan0: switched to short barker preamble (BSSID=00:11:f5:30:88:6a)

iwconfig says

wlan0     IEEE 802.11  ESSID:"xxxxx"  
          Mode:Managed  Frequency:2.412 GHz  Access Point:
00:11:F5:30:88:6A   
          Bit Rate=1 Mb/s   Tx-Power=27 dBm   
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B   
          Encryption key:xxxxx
          Link Quality=75/100  Signal level=-51 dBm  Noise level=-64 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

Transfer speed for a wget of the same file as above is a bit shaky,
average about 140-150KB/s (how can this be inline with 1Mb/s physical
speed?)

I can put the wireless speed to 54MB with iwconfig (and waiting a few
seconds), but then the transfer speed of a large file drops to 0-20KB/s

wlan0     IEEE 802.11  ESSID:"xxxxx"  
          Mode:Managed  Frequency:2.412 GHz  Access Point:
00:11:F5:30:88:6A   
          Bit Rate=54 Mb/s   Tx-Power=27 dBm   
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B   
          Encryption key:xxxxx
          Link Quality=78/100  Signal level=-49 dBm  Noise level=-64 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0



From Larry.Finger at lwfinger.net  Mon Aug  4 00:52:20 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 03 Aug 2008 17:52:20 -0500
Subject: Performance issue
In-Reply-To: <1217802370.9840.13.camel@saive.lan>
References: <1217802370.9840.13.camel@saive.lan>
Message-ID: <489636A4.2000107@lwfinger.net>

Kobboi wrote:
> Hello,
> 
> I'm having a performance issue with my wireless card. I'd be grateful if
> someone could help out, pinpoint the cause or propose a solution. I'm
> using good old easy-to-crack WEP.
> 
> Kobboi
> 
> === My hardware ==========
> 
> 03:0c.0 Network controller: Broadcom Corporation BCM4306 802.11b/g
> Wireless LAN Controller (rev 02) [0280: 14e4:4320 (rev 02)]
> 

The cause is probably an error in the reverse engineering of the code for the 
BCM4306/2. As you discovered, this card _NEEDS_ b43legacy. I don't quite know 
why users think they are smarter than the device selection code and try b43 with 
legacy devices and vice versa. These devices have never performed very well; 
however, I think they used to be better with bcm43xx than they are with 
b43legacy, but I have no real proof.

> I can put the wireless speed to 54MB with iwconfig (and waiting a few
> seconds), but then the transfer speed of a large file drops to 0-20KB/s
> 
> wlan0     IEEE 802.11  ESSID:"xxxxx"  
>           Mode:Managed  Frequency:2.412 GHz  Access Point:
> 00:11:F5:30:88:6A   
>           Bit Rate=54 Mb/s   Tx-Power=27 dBm   
>           Retry min limit:7   RTS thr:off   Fragment thr=2352 B   
>           Encryption key:xxxxx
>           Link Quality=78/100  Signal level=-49 dBm  Noise level=-64 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0

The rate-setting algorithm in mac80211 is very good. When you force a rate 
higher than it picks, you increase the error rate and drop the overall 
performance - just as you found.

Larry


From clermytt at hotmail.com  Mon Aug  4 10:44:23 2008
From: clermytt at hotmail.com (Kob Boi)
Date: Mon, 4 Aug 2008 08:44:23 +0000
Subject: Performance issue
In-Reply-To: <489636A4.2000107@lwfinger.net>
References: <1217802370.9840.13.camel@saive.lan>
	<489636A4.2000107@lwfinger.net> 
Message-ID: <BLU142-W3A580B6766F07FAE8FB9BC3780@phx.gbl>




Larry Finger wrote:>I don't quite know why users think they are smarter than the device selection code and try b43 with > legacy devices and vice versa.  With ndiswrapper being able to use a 4.x driver, I thought I could at least try b43, especially with the b43legacy performance problem. Doing a modprobe b43 wasn't exactly the biggest waste of time ever, I guess. Kobboi 

Neem je Messenger vrienden overal mee met Messenger op je gsm! Messenger voor Mobile 
_________________________________________________________________
Blijf deze zomer altijd en overal bereikbaar
http://www.startmessenger.be/nl/index.asp
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080804/9987b21a/attachment.html>

From max8455 at hotmail.com  Sat Aug  9 01:44:37 2008
From: max8455 at hotmail.com (Max Siegel)
Date: Fri, 8 Aug 2008 19:44:37 -0400
Subject: Broadcom card wont pickup access point signal
Message-ID: <BAY131-W2D0DB5F6073D518843613B7740@phx.gbl>

I can't get my card to stay turned on and even if it's on it won't have a signal more than 1mb/s and can't connect to the access point which is in the same room.  The network has a non broadcasting ssid and wep password, but even with that stuff turned off it still won't connect.  Also, I tried using the fwcutter but the commands sudo and make returned "command not found".  I am a linux novice at best, this is my first time using it and I just want wireless to work.  Thanks for any advice.




[slax-Fri Aug 08-19:35:16]
root-pt1
~ $> uname -a
Linux slax 2.6.21.5 #1 SMP Mon Jun 18 09:45:53 GMT 2007 i686 AMD Turion(tm) 64 X2 Mobile Technology TL-52 AuthenticAMD GNU/Linux
[slax-Fri Aug 08-19:35:18]
root-pt1
~ $> lspci -vvn|grep 43 -A7
00:12.0 0106: 1002:4380 (prog-if 01 [AHCI 1.0])
        Subsystem: 1002:4380
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 18
        Region 0: I/O ports at 9000 [size=8]
        Region 1: I/O ports at 9008 [size=4]
        Region 2: I/O ports at 9010 [size=8]
--
00:13.0 0c03: 1002:4387 (prog-if 10 [OHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 19
        Region 0: Memory at d0601000 (32-bit, non-prefetchable) [size=4K]

00:13.1 0c03: 1002:4388 (prog-if 10 [OHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin B routed to IRQ 20
        Region 0: Memory at d0602000 (32-bit, non-prefetchable) [size=4K]

00:13.2 0c03: 1002:4389 (prog-if 10 [OHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin C routed to IRQ 20
        Region 0: Memory at d0603000 (32-bit, non-prefetchable) [size=4K]

00:13.3 0c03: 1002:438a (prog-if 10 [OHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin B routed to IRQ 20
        Region 0: Memory at d0604000 (32-bit, non-prefetchable) [size=4K]

00:13.4 0c03: 1002:438b (prog-if 10 [OHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin C routed to IRQ 20
        Region 0: Memory at d0605000 (32-bit, non-prefetchable) [size=4K]

00:13.5 0c03: 1002:4386 (prog-if 20 [EHCI])
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV+ VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin D routed to IRQ 19
        Region 0: Memory at d0606000 (32-bit, non-prefetchable) [size=256]
        Capabilities: [c0] Power Management version 2
--
00:14.0 0c05: 1002:4385 (rev 14)
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Region 0: I/O ports at 8200 [size=16]
        Capabilities: [b0] HyperTransport: MSI Mapping

00:14.1 0101: 1002:438c (prog-if 82 [Master PriP])
        Subsystem: 103c:30c2
        Control: I/O+ Mem- BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 18
        Region 0: I/O ports at 01f0 [size=8]
        Region 1: I/O ports at 03f4 [size=1]
--
00:14.2 0403: 1002:4383
        Subsystem: 103c:30c2
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=slow >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64, Cache Line Size: 64 bytes
        Interrupt: pin ? routed to IRQ 18
        Region 0: Memory at 54000000 (64-bit, non-prefetchable) [size=16K]
        Capabilities: [50] Power Management version 2
--
00:14.3 0601: 1002:438d
        Subsystem: 103c:30c2
        Control: I/O+ Mem+ BusMaster+ SpecCycle+ MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 0

00:14.4 0604: 1002:4384 (prog-if 01 [Subtractive decode])
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop+ ParErr- Stepping- SERR- FastB2B-
        Status: Cap- 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 64
        Bus: primary=00, secondary=02, subordinate=06, sec-latency=64
        I/O behind bridge: 00001000-00001fff
        Memory behind bridge: d0100000-d03fffff
        Prefetchable memory behind bridge: 50000000-53ffffff
--
30:00.0 0280: 14e4:4312 (rev 02)
        Subsystem: 103c:1370
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR-
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 21
        Region 0: Memory at c8000000 (64-bit, non-prefetchable) [size=16K]
        Capabilities: [40] Power Management version 3
[slax-Fri Aug 08-19:35:33]
root-pt1
~ $> dmesg
Linux version 2.6.21.5 (root at slax) (gcc version 4.1.2) #1 SMP Mon Jun 18 09:45:53 GMT 2007
BIOS-provided physical RAM map:
sanitize start
sanitize end
copy_e820_map() start: 0000000000000000 size: 000000000009fc00 end: 000000000009fc00 type: 1
copy_e820_map() type is E820_RAM
copy_e820_map() start: 000000000009fc00 size: 0000000000000400 end: 00000000000a0000 type: 2
copy_e820_map() start: 00000000000e0000 size: 0000000000020000 end: 0000000000100000 type: 2
copy_e820_map() start: 0000000000100000 size: 0000000037eb0000 end: 0000000037fb0000 type: 1
copy_e820_map() type is E820_RAM
copy_e820_map() start: 0000000037fb0000 size: 0000000000018000 end: 0000000037fc8000 type: 2
copy_e820_map() start: 0000000037fc8000 size: 000000000001ffb8 end: 0000000037fe7fb8 type: 4
copy_e820_map() start: 0000000037fe7fb8 size: 0000000008018048 end: 0000000040000000 type: 2
copy_e820_map() start: 00000000e0000000 size: 0000000010000000 end: 00000000f0000000 type: 2
copy_e820_map() start: 00000000fec00000 size: 0000000000002000 end: 00000000fec02000 type: 2
copy_e820_map() start: 00000000ffbc0000 size: 0000000000100000 end: 00000000ffcc0000 type: 2
copy_e820_map() start: 00000000fff00000 size: 0000000000100000 end: 0000000100000000 type: 2
 BIOS-e820: 0000000000000000 - 000000000009fc00 (usable)
 BIOS-e820: 000000000009fc00 - 00000000000a0000 (reserved)
 BIOS-e820: 00000000000e0000 - 0000000000100000 (reserved)
 BIOS-e820: 0000000000100000 - 0000000037fb0000 (usable)
 BIOS-e820: 0000000037fb0000 - 0000000037fc8000 (reserved)
 BIOS-e820: 0000000037fc8000 - 0000000037fe7fb8 (ACPI NVS)
 BIOS-e820: 0000000037fe7fb8 - 0000000040000000 (reserved)
 BIOS-e820: 00000000e0000000 - 00000000f0000000 (reserved)
 BIOS-e820: 00000000fec00000 - 00000000fec02000 (reserved)
 BIOS-e820: 00000000ffbc0000 - 00000000ffcc0000 (reserved)
 BIOS-e820: 00000000fff00000 - 0000000100000000 (reserved)
0MB HIGHMEM available.
895MB LOWMEM available.
Entering add_active_range(0, 0, 229296) 0 entries of 256 used
Zone PFN ranges:
  DMA             0 ->     4096
  Normal       4096 ->   229296
  HighMem    229296 ->   229296
early_node_map[1] active PFN ranges
    0:        0 ->   229296
On node 0 totalpages: 229296
  DMA zone: 32 pages used for memmap
  DMA zone: 0 pages reserved
  DMA zone: 4064 pages, LIFO batch:0
  Normal zone: 1759 pages used for memmap
  Normal zone: 223441 pages, LIFO batch:31
  HighMem zone: 0 pages used for memmap
DMI 2.4 present.
ACPI: RSDP 000FE0B0, 0024 (r2 HP    )
ACPI: XSDT 37FC81BC, 0064 (r1 HPQOEM SLIC-MPC        1 HP          1)
ACPI: FACP 37FC8084, 00F4 (r4 HP     0944            3 HP          1)
ACPI Error (tbfadt-0445): 32/64X address mismatch in "Pm2ControlBlock": [00008800] [0000000000008100], using 64X [20070126]
ACPI: DSDT 37FC84A4, 11437 (r1 HP        SB400    10000 MSFT  3000001)
ACPI: FACS 37FE7D80, 0040
ACPI: SLIC 37FC8220, 0176 (r1 HPQOEM SLIC-MPC        1 HP          1)
ACPI: EPTH 37FC8398, 0038 (r1 HP     0944            1 HP          1)
ACPI: APIC 37FC83D0, 0062 (r1 HP     0944            1 HP          1)
ACPI: MCFG 37FC8434, 003C (r1 HP     0944            1 HP          1)
ACPI: TCPA 37FC8470, 0032 (r2 HP     0944            1 HP          1)
ACPI: SSDT 37FD98DB, 0059 (r1 HP       HPQNLP        1 MSFT  3000001)
ACPI: SSDT 37FD9934, 0182 (r1 HP     PSSTBLID        1 HP          1)
ATI board detected. Disabling timer routing over 8254.
ACPI: PM-Timer IO Port: 0x8008
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x00] enabled)
Processor #0 15:8 APIC version 16
ACPI: LAPIC (acpi_id[0x02] lapic_id[0x01] enabled)
Processor #1 15:8 APIC version 16
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 2, version 33, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 low level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Enabling APIC mode:  Flat.  Using 1 I/O APICs
Using ACPI (MADT) for SMP configuration information
Allocating PCI resources starting at 50000000 (gap: 40000000:a0000000)
Built 1 zonelists.  Total pages: 227505
Kernel command line: vga=791 initrd=/boot/slax/initrd.gz ramdisk_size=6666 root=/dev/ram0 rw autoexec=xcfbdev;kdm toram changes=slax.dat BOOT_IMAGE=/boot/slax/vmlinuz
mapped APIC to ffffd000 (fee00000)
mapped IOAPIC to ffffc000 (fec00000)
Enabling fast FPU save and restore... done.
Enabling unmasked SIMD FPU exception support... done.
Initializing CPU#0
PID hash table entries: 4096 (order: 12, 16384 bytes)
Detected 1596.163 MHz processor.
Console: colour dummy device 80x25
Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
Memory: 897632k/917184k available (5990k kernel code, 19076k reserved, 1918k data, 616k init, 0k highmem)
virtual kernel memory layout:
    fixmap  : 0xffe16000 - 0xfffff000   (1956 kB)
    pkmap   : 0xff800000 - 0xffc00000   (4096 kB)
    vmalloc : 0xf8800000 - 0xff7fe000   ( 111 MB)
    lowmem  : 0xc0000000 - 0xf7fb0000   ( 895 MB)
      .init : 0xc08c2000 - 0xc095c000   ( 616 kB)
      .data : 0xc06d980d - 0xc08b93cc   (1918 kB)
      .text : 0xc0100000 - 0xc06d980d   (5990 kB)
Checking if this processor honours the WP bit even in supervisor mode... Ok.
Calibrating delay using timer specific routine.. 3200.39 BogoMIPS (lpj=6400788)
Security Framework v1.0.0 initialized
Mount-cache hash table entries: 512
CPU: After generic identify, caps: 178bfbff ebd3fbff 00000000 00000000 00002001 00000000 0000001f
CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K (64 bytes/line)
CPU: L2 Cache: 512K (64 bytes/line)
CPU 0(2) -> Core 0
CPU: After all inits, caps: 178bfbff ebd3fbff 00000000 00004410 00002001 00000000 0000001f
Intel machine check architecture supported.
Intel machine check reporting enabled on CPU#0.
Compat vDSO mapped to ffffe000.
Checking 'hlt' instruction... OK.
Freeing SMP alternatives: 23k freed
ACPI: Core revision 20070126
CPU0: AMD Turion(tm) 64 X2 Mobile Technology TL-52 stepping 02
Booting processor 1/1 eip 2000
Initializing CPU#1
Calibrating delay using timer specific routine.. 3192.24 BogoMIPS (lpj=6384486)
CPU: After generic identify, caps: 178bfbff ebd3fbff 00000000 00000000 00002001 00000000 0000001f
CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K (64 bytes/line)
CPU: L2 Cache: 512K (64 bytes/line)
CPU 1(2) -> Core 1
CPU: After all inits, caps: 178bfbff ebd3fbff 00000000 00004410 00002001 00000000 0000001f
Intel machine check architecture supported.
Intel machine check reporting enabled on CPU#1.
CPU1: AMD Turion(tm) 64 X2 Mobile Technology TL-52 stepping 02
Total of 2 processors activated (6392.63 BogoMIPS).
ENABLING IO-APIC IRQs
..TIMER: vector=0x31 apic1=0 pin1=2 apic2=-1 pin2=-1
..MP-BIOS bug: 8254 timer not connected to IO-APIC
...trying to set up timer (IRQ0) through the 8259A ...  failed.
...trying to set up timer as Virtual Wire IRQ... works.
Brought up 2 CPUs
migration_cost=4000
HP Compaq Laptop series board detected. Selecting BIOS-method for reboots.
NET: Registered protocol family 16
No dock devices found.
ACPI: bus type pci registered
PCI: Using MMCONFIG
PCI: No mmconfig possible on device 00:18
Setting up standard PCI resources
ACPI: Interpreter enabled
ACPI: Using IOAPIC for interrupt routing
ACPI: PCI Root Bridge [C08B] (0000:00)
PCI: Probing PCI hardware (bus 00)
Boot video device is 0000:01:05.0
PCI: Transparent bridge - 0000:00:14.4
PCI: Bus #03 (-#06) is hidden behind transparent bridge #02 (-#03) (try 'pci=assign-busses')
Please report the result to linux-kernel to fix this permanently
ACPI: PCI Interrupt Routing Table [\_SB_.C08B._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.C08B.C08C._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.C08B.C0FC._PRT]
ACPI: PCI Interrupt Link [C145] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C146] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C147] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C148] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C149] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C14A] (IRQs 9) *0, disabled.
ACPI: PCI Interrupt Link [C14B] (IRQs 10 11) *0, disabled.
ACPI: PCI Interrupt Link [C14C] (IRQs 10 11) *0, disabled.
ACPI: Power Resource [C171] (off)
ACPI: Power Resource [C230] (off)
ACPI: Power Resource [C24C] (on)
ACPI: Power Resource [C395] (off)
ACPI: Power Resource [C396] (off)
ACPI: Power Resource [C397] (off)
ACPI: Power Resource [C398] (off)
Linux Plug and Play Support v0.97 (c) Adam Belay
pnp: PnP ACPI init
pnp: PnP ACPI: found 14 devices
SCSI subsystem initialized
libata version 2.20 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
PCI: If a device doesn't work, try "pci=routeirq".  If it helps, post a report
PCI: Cannot allocate resource region 0 of device 0000:00:14.2
pnp: 00:00: iomem range 0x0-0x9ffff could not be reserved
pnp: 00:00: iomem range 0xe0000-0xfffff could not be reserved
pnp: 00:00: iomem range 0x100000-0xffffffff could not be reserved
pnp: 00:0a: ioport range 0x40b-0x40b has been reserved
pnp: 00:0a: ioport range 0x4d0-0x4d1 has been reserved
pnp: 00:0a: iomem range 0xffb00000-0xffbfffff could not be reserved
pnp: 00:0a: iomem range 0xfff00000-0xffffffff could not be reserved
pnp: 00:0c: ioport range 0x8000-0x802f has been reserved
pnp: 00:0c: ioport range 0x8100-0x811f has been reserved
pnp: 00:0c: iomem range 0xe0000000-0xefffffff could not be reserved
pnp: 00:0c: iomem range 0xfec00000-0xfec000ff could not be reserved
pnp: 00:0c: iomem range 0xfed45000-0xfed8ffff has been reserved
pnp: 00:0d: iomem range 0xcd400-0xcffff has been reserved
pnp: 00:0d: iomem range 0xd2a00-0xd2fff has been reserved
pnp: 00:0d: iomem range 0x0-0x7ffffff could not be reserved
pnp: 00:0d: iomem range 0xfee00000-0xfee00fff has been reserved
ieee1394: Initialized config rom entry `ip1394'
ACPI: PCI Interrupt 0000:02:04.1[B] -> GSI 21 (level, low) -> IRQ 16
ohci1394: fw-host0: OHCI-1394 1.1 (PCI): IRQ=[16]  MMIO=[d0101000-d01017ff]  Max Packet=[2048]  IR/IT contexts=[4/4]
PCI: Ignore bogus resource 6 [0:0] of 0000:01:05.0
PCI: Bridge: 0000:00:01.0
  IO window: 4000-4fff
  MEM window: d0400000-d05fffff
  PREFETCH window: c0000000-c7ffffff
PCI: Bridge: 0000:00:04.0
  IO window: disabled.
  MEM window: d0000000-d00fffff
  PREFETCH window: disabled.
PCI: Bridge: 0000:00:05.0
  IO window: 2000-3fff
  MEM window: cc000000-cfffffff
  PREFETCH window: disabled.
PCI: Bridge: 0000:00:06.0
  IO window: disabled.
  MEM window: c8000000-c80fffff
  PREFETCH window: disabled.
PCI: Bus 3, cardbus bridge: 0000:02:04.0
  IO window: 00001000-000010ff
  IO window: 00001400-000014ff
  PREFETCH window: 50000000-53ffffff
  MEM window: 58000000-5bffffff
PCI: Bridge: 0000:00:14.4
  IO window: 1000-1fff
  MEM window: d0100000-d03fffff
  PREFETCH window: 50000000-53ffffff
PCI: Setting latency timer of device 0000:00:04.0 to 64
PCI: Setting latency timer of device 0000:00:05.0 to 64
PCI: Setting latency timer of device 0000:00:06.0 to 64
ACPI: PCI Interrupt 0000:02:04.0[A] -> GSI 20 (level, low) -> IRQ 17
NET: Registered protocol family 2
Time: acpi_pm clocksource has been installed.
IP route cache hash table entries: 32768 (order: 5, 131072 bytes)
TCP established hash table entries: 131072 (order: 8, 1572864 bytes)
TCP bind hash table entries: 65536 (order: 7, 524288 bytes)
TCP: Hash tables configured (established 131072 bind 65536)
TCP reno registered
checking if image is initramfs...it isn't (no cpio magic); looks like an initrd
Freeing initrd memory: 1912k freed
apm: BIOS not found.
VFS: Disk quotas dquot_6.5.1
Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
NTFS driver 2.1.28 [Flags: R/O].
JFS: nTxBlock = 7028, nTxLock = 56228
SGI XFS with ACLs, security attributes, large block numbers, no debug enabled
SGI XFS Quota Management subsystem
OCFS2 1.3.3
OCFS2 Node Manager 1.3.3
OCFS2 DLM 1.3.3
OCFS2 DLMFS 1.3.3
OCFS2 User DLM kernel interface loaded
GFS2 (built Jun 18 2007 09:35:27) installed
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
PCI: Setting latency timer of device 0000:00:04.0 to 64
assign_interrupt_mode Found MSI capability
Allocate Port Service[0000:00:04.0:pcie00]
Allocate Port Service[0000:00:04.0:pcie03]
PCI: Setting latency timer of device 0000:00:05.0 to 64
assign_interrupt_mode Found MSI capability
Allocate Port Service[0000:00:05.0:pcie00]
Allocate Port Service[0000:00:05.0:pcie03]
PCI: Setting latency timer of device 0000:00:06.0 to 64
assign_interrupt_mode Found MSI capability
Allocate Port Service[0000:00:06.0:pcie00]
Allocate Port Service[0000:00:06.0:pcie03]
pci_hotplug: PCI Hot Plug PCI Core version: 0.5
vesafb: framebuffer at 0xc0000000, mapped to 0xf8c80000, using 3072k, total 16384k
vesafb: mode is 1024x768x16, linelength=2048, pages=9
vesafb: protected mode interface info at c000:9f30
vesafb: pmi: set display start = c00c9fba, set palette = c00ca078
vesafb: scrolling: redraw
vesafb: Truecolor: size=0:5:6:5, shift=0:11:5:0
Console: switching to colour frame buffer device 128x48
fb0: VESA VGA frame buffer device
ACPI: AC Adapter [C1EB] (on-line)
ACPI: Battery Slot [C1ED] (battery present)
ACPI: Battery Slot [C1EC] (battery absent)
input: Power Button (FF) as /class/input/input0
ACPI: Power Button (FF) [PWRF]
input: Sleep Button (CM) as /class/input/input1
ACPI: Sleep Button (CM) [C28D]
input: Lid Switch as /class/input/input2
ACPI: Lid Switch [C265]
ACPI: Transitioning device [C399] to D3
ACPI: Transitioning device [C399] to D3
ACPI: Fan [C399] (off)
ACPI: Transitioning device [C39A] to D3
ACPI: Transitioning device [C39A] to D3
ACPI: Fan [C39A] (off)
ACPI: Transitioning device [C39B] to D3
ACPI: Transitioning device [C39B] to D3
ACPI: Fan [C39B] (off)
ACPI: Transitioning device [C39C] to D3
ACPI: Transitioning device [C39C] to D3
ACPI: Fan [C39C] (off)
set_level status: 0
ACPI: Video Device [C08D] (multi-head: yes  rom: no  post: no)
ACPI: Processor [C000] (supports 8 throttling states)
ACPI: Processor [C001] (supports 8 throttling states)
ACPI: Thermal Zone [TZ1] (50 C)
isapnp: Scanning for PnP cards...
isapnp: No Plug & Play device found
Real Time Clock Driver v1.12ac
Serial: 8250/16550 driver $Revision: 1.90 $ 4 ports, IRQ sharing enabled
Floppy drive(s): fd0 is 1.44M
ieee1394: Host added: ID:BUS[0-00:1023]  GUID[00023f99297d330e]
floppy0: no floppy controllers found
RAMDISK driver initialized: 16 RAM disks of 6666K size 1024 blocksize
loop: module loaded
Compaq SMART2 Driver (v 2.6.0)
HP CISS Driver (v 3.6.14)
input: Macintosh mouse button emulation as /class/input/input3
Uniform Multi-Platform E-IDE driver Revision: 7.00alpha2
ide: Assuming 33MHz system bus speed for PIO modes; override with idebus=xx
SB600_PATA: IDE controller at PCI slot 0000:00:14.1
ACPI: PCI Interrupt 0000:00:14.1[A] -> GSI 16 (level, low) -> IRQ 18
SB600_PATA: chipset revision 0
SB600_PATA: not 100% native mode: will probe irqs later
    ide0: BM-DMA at 0x5040-0x5047, BIOS settings: hda:DMA, hdb:pio
Probing IDE interface ide0...
hda: HL-DT-ST DVDRAM GSA-T20L, ATAPI CD/DVD-ROM drive
ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
Probing IDE interface ide1...
hda: ATAPI 24X DVD-ROM DVD-R-RAM CD-R/RW drive, 2048kB Cache, DMA
Uniform CD-ROM driver Revision: 3.20
ide-floppy driver 0.99.newide
Loading iSCSI transport class v2.0-724.
iscsi: registered transport (tcp)
Loading Adaptec I2O RAID: Version 2.4 Build 5go
Detecting Adaptec I2O RAID controllers...
Adaptec aacraid driver (1.1-5[2423]-mh3)
aic94xx: Adaptec aic94xx SAS/SATA driver version 1.0.3 loaded
scsi: <fdomain> Detection failed (no card)
sym53c416.c: Version 1.0.0-ac
qlogicfas: no cards were found, please specify I/O address and IRQ using iobase= and irq= options<6>QLogic Fibre Channel HBA Driver
iscsi: registered transport (qla4xxx)
QLogic iSCSI HBA Driver
Emulex LightPulse Fibre Channel SCSI driver 8.1.11
Copyright(c) 2004-2006 Emulex.  All rights reserved.
seagate: ST0x/TMC-8xx not detected.
Failed initialization of WD-7000 SCSI card!
DC390: clustering now enabled by default. If you get problems load
        with "disable_clustering=1" and report to maintainers
megaraid cmm: 2.20.2.7 (Release Date: Sun Jul 16 00:01:03 EST 2006)
megaraid: 2.20.5.1 (Release Date: Thu Nov 16 15:32:35 EST 2006)
megasas: 00.00.03.10-rc1 Wed Feb 14 10:14:25 PST 2007
GDT-HA: Storage RAID Controller Driver. Version: 3.05
GDT-HA: Found 0 PCI Storage RAID Controllers
3ware Storage Controller device driver for Linux v1.26.02.002.
3ware 9000 Storage Controller device driver for Linux v2.26.02.008.
nsp32: loading...
ipr: IBM Power RAID SCSI Device Driver version: 2.3.1 (January 23, 2007)
RocketRAID 3xxx SATA Controller driver v1.0 (060426)
st: Version 20070203, fixed bufsize 32768, s/g segs 256
ahci 0000:00:12.0: version 2.1
ACPI: PCI Interrupt 0000:00:12.0[A] -> GSI 16 (level, low) -> IRQ 18
ahci 0000:00:12.0: controller can't do 64bit DMA, forcing 32bit
ahci 0000:00:12.0: AHCI 0001.0100 32 slots 4 ports 3 Gbps 0x1 impl SATA mode
ahci 0000:00:12.0: flags: 64bit ncq ilck pm led clo pio slum part
ata1: SATA max UDMA/133 cmd 0xf8f9c100 ctl 0x00000000 bmdma 0x00000000 irq 18
ata2: SATA max UDMA/133 cmd 0xf8f9c180 ctl 0x00000000 bmdma 0x00000000 irq 18
ata3: SATA max UDMA/133 cmd 0xf8f9c200 ctl 0x00000000 bmdma 0x00000000 irq 18
ata4: SATA max UDMA/133 cmd 0xf8f9c280 ctl 0x00000000 bmdma 0x00000000 irq 18
scsi2 : ahci
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ATA-7: Hitachi HTS541612J9SA00, SBDOC7BP, max UDMA/100
ata1.00: 234441648 sectors, multi 16: LBA48
ata1.00: configured for UDMA/100
scsi3 : ahci
ata2: SATA link down (SStatus 0 SControl 0)
scsi4 : ahci
ata3: SATA link down (SStatus 0 SControl 0)
scsi5 : ahci
ata4: SATA link down (SStatus 0 SControl 0)
scsi 2:0:0:0: Direct-Access     ATA      Hitachi HTS54161 SBDO PQ: 0 ANSI: 5
SCSI device sda: 234441648 512-byte hdwr sectors (120034 MB)
sda: Write Protect is off
sda: Mode Sense: 00 3a 00 00
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
SCSI device sda: 234441648 512-byte hdwr sectors (120034 MB)
sda: Write Protect is off
sda: Mode Sense: 00 3a 00 00
SCSI device sda: write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sda: sda1 sda2
sd 2:0:0:0: Attached scsi disk sda
I2O subsystem v1.325
i2o: max drivers = 8
I2O Configuration OSM v1.323
I2O Bus Adapter OSM v1.317
I2O Block Device OSM v1.325
I2O SCSI Peripheral OSM v1.316
I2O ProcFS OSM v1.316
Fusion MPT base driver 3.04.04
Copyright (c) 1999-2007 LSI Logic Corporation
Fusion MPT SPI Host driver 3.04.04
Fusion MPT FC Host driver 3.04.04
Fusion MPT SAS Host driver 3.04.04
usbmon: debugfs is not available
ACPI: PCI Interrupt 0000:00:13.5[D] -> GSI 23 (level, low) -> IRQ 19
ehci_hcd 0000:00:13.5: EHCI Host Controller
ehci_hcd 0000:00:13.5: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:13.5: debug port 1
ehci_hcd 0000:00:13.5: irq 19, io mem 0xd0606000
ehci_hcd 0000:00:13.5: USB 2.0 started, EHCI 1.00, driver 10 Dec 2004
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 10 ports detected
116x: driver isp116x-hcd, 03 Nov 2005
ohci_hcd: 2006 August 04 USB 1.1 'Open' Host Controller (OHCI) Driver
ACPI: PCI Interrupt 0000:00:13.0[A] -> GSI 23 (level, low) -> IRQ 19
ohci_hcd 0000:00:13.0: OHCI Host Controller
ohci_hcd 0000:00:13.0: new USB bus registered, assigned bus number 2
ohci_hcd 0000:00:13.0: irq 19, io mem 0xd0601000
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 2 ports detected
ACPI: PCI Interrupt 0000:00:13.1[B] -> GSI 17 (level, low) -> IRQ 20
ohci_hcd 0000:00:13.1: OHCI Host Controller
ohci_hcd 0000:00:13.1: new USB bus registered, assigned bus number 3
ohci_hcd 0000:00:13.1: irq 20, io mem 0xd0602000
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 2 ports detected
ACPI: PCI Interrupt 0000:00:13.2[C] -> GSI 17 (level, low) -> IRQ 20
ohci_hcd 0000:00:13.2: OHCI Host Controller
ohci_hcd 0000:00:13.2: new USB bus registered, assigned bus number 4
ohci_hcd 0000:00:13.2: irq 20, io mem 0xd0603000
usb usb4: configuration #1 chosen from 1 choice
hub 4-0:1.0: USB hub found
hub 4-0:1.0: 2 ports detected
ACPI: PCI Interrupt 0000:00:13.3[B] -> GSI 17 (level, low) -> IRQ 20
ohci_hcd 0000:00:13.3: OHCI Host Controller
ohci_hcd 0000:00:13.3: new USB bus registered, assigned bus number 5
ohci_hcd 0000:00:13.3: irq 20, io mem 0xd0604000
usb usb5: configuration #1 chosen from 1 choice
hub 5-0:1.0: USB hub found
hub 5-0:1.0: 2 ports detected
ACPI: PCI Interrupt 0000:00:13.4[C] -> GSI 17 (level, low) -> IRQ 20
ohci_hcd 0000:00:13.4: OHCI Host Controller
ohci_hcd 0000:00:13.4: new USB bus registered, assigned bus number 6
ohci_hcd 0000:00:13.4: irq 20, io mem 0xd0605000
usb usb6: configuration #1 chosen from 1 choice
hub 6-0:1.0: USB hub found
hub 6-0:1.0: 2 ports detected
usb 4-1: new full speed USB device using ohci_hcd and address 2
USB Universal Host Controller Interface driver v3.0
sl811: driver sl811-hcd, 19 May 2005
Initializing USB Mass Storage driver...
usb 4-1: configuration #1 chosen from 1 choice
usbcore: registered new interface driver usb-storage
USB Mass Storage support registered.
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
drivers/usb/input/hid-core.c: v2.6:USB HID core driver
PNP: PS/2 Controller [PNP0303:C249,PNP0f13:C24A] at 0x60,0x64 irq 1,12
i8042.c: Detected active multiplexing controller, rev 1.1.
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX0 port at 0x60,0x64 irq 12
serio: i8042 AUX1 port at 0x60,0x64 irq 12
serio: i8042 AUX2 port at 0x60,0x64 irq 12
serio: i8042 AUX3 port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
md: linear personality registered for level -1
md: raid0 personality registered for level 0
md: raid1 personality registered for level 1
md: raid10 personality registered for level 10
input: AT Translated Set 2 keyboard as /class/input/input4
raid6: int32x1    707 MB/s
raid6: int32x2    610 MB/s
raid6: int32x4    537 MB/s
raid6: int32x8    375 MB/s
raid6: mmxx1     1294 MB/s
raid6: mmxx2     2443 MB/s
raid6: sse1x1    1291 MB/s
raid6: sse1x2    2146 MB/s
raid6: sse2x1    2210 MB/s
raid6: sse2x2    2984 MB/s
raid6: using algorithm sse2x2 (2984 MB/s)
md: raid6 personality registered for level 6
md: raid5 personality registered for level 5
md: raid4 personality registered for level 4
raid5: automatically using best checksumming function: pIII_sse
   pIII_sse  :  4865.000 MB/sec
raid5: using function: pIII_sse (4865.000 MB/sec)
md: multipath personality registered for level -4
device-mapper: ioctl: 4.11.0-ioctl (2006-10-12) initialised: dm-devel at redhat.com
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 1
NET: Registered protocol family 17
Starting balanced_irq
Using IPI Shortcut mode
md: Autodetecting RAID arrays.
md: autorun ...
md: ... autorun DONE.
RAMDISK: Compressed image found at block 0
VFS: Mounted root (ext2 filesystem).
Freeing unused kernel memory: 616k freed
squashfs: version 3.2-r2 (2007/01/15) Phillip Lougher
squashfs: LZMA suppport for slax.org by jro
aufs 20070723
fuse init (API version 7.8)
Yenta: CardBus bridge found at 0000:02:04.0 [103c:30c2]
Yenta: ISA IRQ mask 0x0cb8, PCI irq 17
Socket status: 30000006
Yenta: Raising subordinate bus# of parent bus (#02) from #03 to #06
pcmcia: parent PCI bridge I/O window: 0x1000 - 0x1fff
cs: IO port probe 0x1000-0x1fff: clean.
pcmcia: parent PCI bridge Memory window: 0xd0100000 - 0xd03fffff
pcmcia: parent PCI bridge Memory window: 0x50000000 - 0x53ffffff
MINIX-fs: blocksize too small for device
ISO 9660 Extensions: Microsoft Joliet Level 3
ISOFS: changing to secondary root
MINIX-fs: blocksize too small for device
ISO 9660 Extensions: Microsoft Joliet Level 3
ISOFS: changing to secondary root
UDF-fs: No partition found (1)
(1802,0):ocfs2_fill_super:561 ERROR: superblock probe failed!
GFS2: Unrecognized block device or mount point /dev/sda
GFS2: gfs2 mount does not exist
UDF-fs: No partition found (1)
(1824,0):ocfs2_fill_super:561 ERROR: superblock probe failed!
GFS2: Unrecognized block device or mount point /dev/sda
GFS2: gfs2 mount does not exist
fuse exit
GFS2: path_lookup on memory/boot returned error
GFS2: gfs2 mount does not exist
Linux agpgart interface v0.102 (c) Dave Jones
shpchp: Standard Hot Plug PCI Controller Driver version: 0.4
sd 2:0:0:0: Attached scsi generic sg0 type 0
ieee80211_crypt: registered algorithm 'NULL'
ieee80211: 802.11 data/management/control stack, git-1.1.13
ieee80211: Copyright (C) 2004-2005 Intel Corporation <jketreno at linux.intel.com>
piix4_smbus 0000:00:14.0: Found 0000:00:14.0 device
tg3.c:v3.75.2 (June 5, 2007)
ACPI: PCI Interrupt 0000:10:00.0[A] -> GSI 16 (level, low) -> IRQ 18
PCI: Setting latency timer of device 0000:10:00.0 to 64
bcm43xx driver
eth0: Tigon3 [partno(none) rev b002 PHY(5787)] (PCI Express) 10/100/1000Base-T Ethernet 00:1a:4b:62:74:12
eth0: RXcsums[1] LinkChgREG[0] MIirq[0] ASF[0] WireSpeed[1] TSOcap[1]
eth0: dma_rwctrl[76180000] dma_mask[64-bit]
ACPI: PCI Interrupt 0000:30:00.0[A] -> GSI 18 (level, low) -> IRQ 21
PCI: Setting latency timer of device 0000:30:00.0 to 64
bcm43xx: Chip ID 0x4311, rev 0x2
bcm43xx: Number of cores: 4
bcm43xx: Core 0: ID 0x800, rev 0x13, vendor 0x4243
bcm43xx: Core 1: ID 0x812, rev 0xd, vendor 0x4243
bcm43xx: Unsupported 80211 core revision 13
bcm43xx: Core 2: ID 0x817, rev 0x4, vendor 0x4243
bcm43xx: Core 3: ID 0x820, rev 0x5, vendor 0x4243
bcm43xx: PHY connected
bcm43xx: Detected PHY: Analog: 4, Type 2, Revision 9
bcm43xx: Invalid PHY Revision 9
bcm43xx: Detected Radio: ID: 2205017f (Manuf: 17f Ver: 2050 Rev: 2)
bcm43xx: Radio turned off
bcm43xx: Radio turned off
ACPI: PCI Interrupt 0000:00:14.2[A] -> GSI 16 (level, low) -> IRQ 18
si3054: cannot initialize. EXT MID = 0000
Yenta: CardBus bridge found at 0000:02:04.0 [103c:30c2]
Yenta: ISA IRQ mask 0x0cb8, PCI irq 17
Socket status: 30000006
pcmcia: parent PCI bridge I/O window: 0x1000 - 0x1fff
cs: IO port probe 0x1000-0x1fff: clean.
pcmcia: parent PCI bridge Memory window: 0xd0100000 - 0xd03fffff
pcmcia: parent PCI bridge Memory window: 0x50000000 - 0x53ffffff
cs: IO port probe 0xc00-0xcff: excluding 0xc00-0xc07 0xc10-0xc17 0xc50-0xc57 0xc68-0xc6f 0xcd0-0xcdf
cs: IO port probe 0x820-0x8ff: clean.
cs: IO port probe 0x100-0x3af: clean.
cs: IO port probe 0xa00-0xaff: clean.
input: PC Speaker as /class/input/input5
input: ImPS/2 Synaptics TouchPad as /class/input/input6
pnp: Device 00:02 activated.
parport: PnPBIOS parport detected.
pnp: Device 00:02 disabled.
lp: driver loaded but no devices found
fuse init (API version 7.8)
Capability LSM initialized
bcm43xx: PHY connected
bcm43xx: Microcode rev 0x123, pl 0x23 (2005-03-22  00:11:18)
bcm43xx: Radio turned on
bcm43xx: Radio enabled by hardware
bcm43xx: Chip initialized
bcm43xx: 64-bit DMA initialized
bcm43xx: Keys cleared
bcm43xx: Selected 802.11 core (phytype 2)
bcm43xx: FATAL ERROR: BCM43xx_IRQ_XMIT_ERROR
hda-intel: Invalid position buffer, using LPIB read method instead.
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
tg3: eth0: Link is down.
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
bcm43xx: Radio turned off
bcm43xx: DMA-64 0x0200 (RX) max used slots: 0/64
bcm43xx: DMA-64 0x0340 (TX) max used slots: 0/512
bcm43xx: DMA-64 0x0300 (TX) max used slots: 0/512
bcm43xx: DMA-64 0x02C0 (TX) max used slots: 0/512
bcm43xx: DMA-64 0x0280 (TX) max used slots: 0/512
bcm43xx: DMA-64 0x0240 (TX) max used slots: 0/512
bcm43xx: DMA-64 0x0200 (TX) max used slots: 0/512
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
bcm43xx: IRQ_READY timeout
bcm43xx: core_up for active 802.11 core failed (-19)
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
tg3: eth0: Link is down.
tg3: eth0: Link is up at 100 Mbps, full duplex.
tg3: eth0: Flow control is off for TX and off for RX.
[slax-Fri Aug 08-19:35:46]
root-pt1
~ $>


_________________________________________________________________
Your PC, mobile phone, and online services work together like never before.
http://clk.atdmt.com/MRT/go/108587394/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080808/4b3af525/attachment.html>

From Larry.Finger at lwfinger.net  Sat Aug  9 01:56:59 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 08 Aug 2008 18:56:59 -0500
Subject: Broadcom card wont pickup access point signal
In-Reply-To: <BAY131-W2D0DB5F6073D518843613B7740@phx.gbl>
References: <BAY131-W2D0DB5F6073D518843613B7740@phx.gbl>
Message-ID: <489CDD4B.1050400@lwfinger.net>

Max Siegel wrote:
> I can't get my card to stay turned on and even if it's on it won't have 
> a signal more than 1mb/s and can't connect to the access point which is 
> in the same room.  The network has a non broadcasting ssid and wep 
> password, but even with that stuff turned off it still won't connect.  
> Also, I tried using the fwcutter but the commands sudo and make returned 
> "command not found".  I am a linux novice at best, this is my first time 
> using it and I just want wireless to work.  Thanks for any advice.
> 
> 
> 
> 
> [slax-Fri Aug 08-19:35:16]
> root-pt1
> ~ $> uname -a
> Linux slax 2.6.21.5 #1 SMP Mon Jun 18 09:45:53 GMT 2007 i686 AMD 
> Turion(tm) 64 X2 Mobile Technology TL-52 AuthenticAMD GNU/Linux

--- snip ---

> 30:00.0 0280: 14e4:4312 (rev 02)
>         Subsystem: 103c:1370
>         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- 
> ParErr- Stepping- SERR- FastB2B-
>         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- 
> <TAbort- <MAbort- >SERR- <PERR-
>         Latency: 0, Cache Line Size: 64 bytes
>         Interrupt: pin A routed to IRQ 21
>         Region 0: Memory at c8000000 (64-bit, non-prefetchable) [size=16K]
>         Capabilities: [40] Power Management version 3

--- snip ---

> bcm43xx driver
> bcm43xx: Chip ID 0x4311, rev 0x2
> bcm43xx: Number of cores: 4
> bcm43xx: Core 0: ID 0x800, rev 0x13, vendor 0x4243
> bcm43xx: Core 1: ID 0x812, rev 0xd, vendor 0x4243
> bcm43xx: Unsupported 80211 core revision 13     <==================================================
> bcm43xx: Core 2: ID 0x817, rev 0x4, vendor 0x4243
> bcm43xx: Core 3: ID 0x820, rev 0x5, vendor 0x4243

You supplied all the necessary information; however, it appears that you did not 
read the output. As it states, an 80211 core with revision 13 is not supported 
(for this version of the driver). You need a newer kernel. I might have 
recommended the wireless compatibility package, but I don't think that goes back 
as far as 2.6.21.

Please install all the packages that your distro needs to build a kernel, and go 
to kernel.org, download the sources for 2.6.24 or newer (2.6.25 is better), and 
build a new kernel. Alternatively, you could install a newer distro. That would 
have the advantages of getting all the security updates for the whole system, 
not just the kernel.

Larry



From Larry.Finger at lwfinger.net  Sat Aug 16 20:09:04 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 16 Aug 2008 13:09:04 -0500
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <48A65100.9050407@lwfinger.net>
References: <200808160029.56876.mb@bu3sch.de> <48A65100.9050407@lwfinger.net>
Message-ID: <48A717C0.6020705@lwfinger.net>

Larry Finger wrote:
> 
> The patch works fine on the 802.11g portion of my BCM4312/1, which seems 
> to be the same as a BCM4311/1. This card has a PCIe format. I also 
> tested on my PCMCIA version of a BCM4318. That card works, but the 
> maximum transmit rate is only about 1/2 of what I get without it. The 
> card has a rev 09 802.11 core, a rev 7 PHY, and a rev 3 analog part. I 
> still have to test on a PCI format BCM4306/3 card, but I suspect that 
> you have already tested the 4306.

Forget what I said about the loss of transmit rate. Once I did a 
proper test, it is the same with or without the patch. For the 
BCM4318, the b43 rate is slightly reduced from using bcm43xx. The 
difference is not really great, but a reproducible reduction from 16.6 
to 14.2 Mbs with the iwconfig rate set at 54 Mbs. By comparison, the 
BCM4312 is over 20 Mbs.

Larry



From ccmcphe at verizon.net  Sat Aug 16 17:58:51 2008
From: ccmcphe at verizon.net (Tex)
Date: Sat, 16 Aug 2008 11:58:51 -0400
Subject: Cannot gain access to AP
Message-ID: <48A6F93B.2060807@verizon.net>

When I use the baseline modules from linux-2.6.25.9, I cannot associate 
with my access points, and I can't even go into monitor mode, the MAC 
address is also random.  if I use the compat_wireless (snapshot of 
06-21) I can associate with my access points and I can even go into 
monitor mode. I'm currently using x86 with Broadcom 4318 CF (PCMCIA):

Thanks in advance for your help
Tex

(FYI: 00deadbeef = fake key)
Commands entered and command results:
root at ubuntu:/var/log# iwconfig wlan0 essid trackcoach2 key 00deadbeef 
chann 4
root at ubuntu:/var/log# iwconfig
lo        no wireless extensions.

eth0      no wireless extensions.

wmaster0  no wireless extensions.

wlan0     IEEE 802.11  ESSID:"trackcoach2" 
          Mode:Managed  Frequency:2.427 GHz  Access Point: 
00:15:05:EC:2E:54  
          Bit Rate=1 Mb/s   Tx-Power=27 dBm  
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B  
          Encryption key:0FB3-CFC8-78
          Link Quality=68/100  Signal level:-43 dBm  Noise level=-72 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0


snapshot for kern.log running compat_wireless source dated 06-21:

Aug 16 11:17:28 ubuntu kernel: [  980.756067] ssb: Core 0 found: 
ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
Aug 16 11:17:28 ubuntu kernel: [  980.756182] ssb: Core 1 found: IEEE 
802.11 (cc 0x812, rev 0x09, vendor 0x4243)
Aug 16 11:17:28 ubuntu kernel: [  980.756287] ssb: Core 2 found: PCI (cc 
0x804, rev 0x0C, vendor 0x4243)
Aug 16 11:17:28 ubuntu kernel: [  980.756391] ssb: Core 3 found: PCMCIA 
(cc 0x80D, rev 0x07, vendor 0x4243)
Aug 16 11:17:28 ubuntu kernel: [  980.841103] ssb: Sonics Silicon 
Backplane found on PCMCIA device pcmcia0.0
Aug 16 11:17:28 ubuntu kernel: [  980.843423] b43-phy2: Broadcom 4318 
WLAN found
Aug 16 11:17:28 ubuntu kernel: [  980.864824] b43-phy2 debug: Found PHY: 
Analog 3, Type 2, Revision 7
Aug 16 11:17:28 ubuntu kernel: [  980.864861] b43-phy2 debug: Found 
Radio: Manuf 0x17F, Version 0x2050, Revision 8
Aug 16 11:17:28 ubuntu kernel: [  980.890769] phy2: Selected rate 
control algorithm 'pid'
Aug 16 11:17:28 ubuntu kernel: [  980.894425] Broadcom 43xx driver 
loaded [ Features: PMLR, Firmware-ID: FW13 ]
Aug 16 11:17:28 ubuntu kernel: [  981.037152] input: b43-phy2 as 
/class/input/input13

Aug 16 11:17:29 ubuntu kernel: [  981.286962] b43-phy2: Loading firmware 
version 410.2160 (2007-05-26 15:32:10)
Aug 16 11:17:29 ubuntu kernel: [  981.386914] b43-phy2 debug: Chip 
initialized
Aug 16 11:17:29 ubuntu kernel: [  981.387163] b43-phy2 debug: PIO 
initialized
Aug 16 11:17:29 ubuntu kernel: [  981.394286] Registered led device: 
b43-phy2::tx
Aug 16 11:17:29 ubuntu kernel: [  981.395342] Registered led device: 
b43-phy2::rx
Aug 16 11:17:29 ubuntu kernel: [  981.396162] Registered led device: 
b43-phy2::radio
Aug 16 11:17:29 ubuntu kernel: [  981.396236] b43-phy2 debug: Wireless 
interface started
Aug 16 11:17:29 ubuntu kernel: [  981.422452] b43-phy2 debug: Adding 
Interface type 2
Aug 16 11:17:29 ubuntu kernel: [  981.434619] ADDRCONF(NETDEV_UP): 
wlan0: link is not ready
Aug 16 11:17:40 ubuntu kernel: [  992.409510] b43-phy2 debug: Using 
hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
Aug 16 11:17:41 ubuntu kernel: [  993.176152] wlan0: Initial auth_alg=0
Aug 16 11:17:41 ubuntu kernel: [  993.176171] wlan0: authenticate with 
AP 00:15:05:ec:2e:54
Aug 16 11:17:41 ubuntu kernel: [  993.185280] wlan0: RX authentication 
from 00:15:05:ec:2e:54 (alg=0 transaction=2 status=0)
Aug 16 11:17:41 ubuntu kernel: [  993.185290] wlan0: authenticated
Aug 16 11:17:41 ubuntu kernel: [  993.185297] wlan0: associate with AP 
00:15:05:ec:2e:54
Aug 16 11:17:41 ubuntu kernel: [  993.187344] wlan0: RX AssocResp from 
00:15:05:ec:2e:54 (capab=0x431 status=0 aid=2)
Aug 16 11:17:41 ubuntu kernel: [  993.187351] wlan0: associated
Aug 16 11:17:41 ubuntu kernel: [  993.188636] ADDRCONF(NETDEV_CHANGE): 
wlan0: link becomes ready



Commands entered:
iwconfig wlan0 essid trackcoach2 key 00deadbeef chann 4
root at ubuntu:~# iwconfig
lo        no wireless extensions.

eth0      no wireless extensions.

wmaster0  no wireless extensions.

wlan0     IEEE 802.11g  ESSID:"trackcoach2" 
          Mode:Managed  Frequency:2.427 GHz  Access Point: Not-Associated  
          Tx-Power=27 dBm  
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B  
          Encryption key:0FB3-CFC8-78
          Link Quality:0  Signal level:0  Noise level:0
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0



Kernel log file using linux base linux-2.6.25.9:
Aug 16 11:46:49 ubuntu kernel: [  674.570729] pcmcia: registering new 
device pcmcia0.0
Aug 16 11:46:50 ubuntu kernel: [  675.248587] ssb: Core 0 found: 
ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
Aug 16 11:46:50 ubuntu kernel: [  675.248733] ssb: Core 1 found: IEEE 
802.11 (cc 0x812, rev 0x09, vendor 0x4243)
Aug 16 11:46:50 ubuntu kernel: [  675.248839] ssb: Core 2 found: PCI (cc 
0x804, rev 0x0C, vendor 0x4243)
Aug 16 11:46:50 ubuntu kernel: [  675.248943] ssb: Core 3 found: PCMCIA 
(cc 0x80D, rev 0x07, vendor 0x4243)
Aug 16 11:46:50 ubuntu kernel: [  675.258113] ssb: Sonics Silicon 
Backplane found on PCMCIA device pcmcia0.0
Aug 16 11:46:50 ubuntu kernel: [  675.260339] b43-phy0: Broadcom 4318 
WLAN found
Aug 16 11:46:50 ubuntu kernel: [  675.280772] b43-phy0 debug: Found PHY: 
Analog 3, Type 2, Revision 7
Aug 16 11:46:50 ubuntu kernel: [  675.280810] b43-phy0 debug: Found 
Radio: Manuf 0x17F, Version 0x2050, Revision 8
Aug 16 11:46:50 ubuntu kernel: [  675.306686] phy0: Selected rate 
control algorithm 'pid'
Aug 16 11:46:50 ubuntu kernel: [  675.527595] Broadcom 43xx driver 
loaded [ Features: PMLR, Firmware-ID: FW13 ]
Aug 16 11:46:50 ubuntu kernel: [  675.712722] input: b43-phy0 as 
/class/input/input9
Aug 16 11:46:50 ubuntu kernel: [  675.978279] b43-phy0: Loading firmware 
version 410.2160 (2007-05-26 15:32:10)
Aug 16 11:46:52 ubuntu kernel: [  677.227536] b43-phy0 debug: Chip 
initialized
Aug 16 11:46:52 ubuntu kernel: [  677.229015] b43-phy0 debug: 32-bit DMA 
initialized
Aug 16 11:46:52 ubuntu kernel: [  677.235404] b43-phy0 debug: Wireless 
interface started
Aug 16 11:46:52 ubuntu kernel: [  677.258321] b43-phy0 debug: Adding 
Interface type 2
Aug 16 11:46:52 ubuntu kernel: [  677.270523] ADDRCONF(NETDEV_UP): 
wlan0: link is not ready
Aug 16 11:47:06 ubuntu kernel: [  691.850496] b43-phy0 debug: Using 
hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff





From ccmcphe at verizon.net  Sat Aug 16 18:08:52 2008
From: ccmcphe at verizon.net (Tex)
Date: Sat, 16 Aug 2008 12:08:52 -0400
Subject: Cannot gain access to AP
In-Reply-To: <48A6F93B.2060807@verizon.net>
References: <48A6F93B.2060807@verizon.net>
Message-ID: <48A6FB94.6020102@verizon.net>

I'm sorry, the linux version is the base UBUNTU 2.6.24-19-generic not 
2.6.25.9 (I haven't tested that 1 yet).


Tex wrote:
> When I use the baseline modules from linux-2.6.25.9, I cannot 
> associate with my access points, and I can't even go into monitor 
> mode, the MAC address is also random.  if I use the compat_wireless 
> (snapshot of 06-21) I can associate with my access points and I can 
> even go into monitor mode. I'm currently using x86 with Broadcom 4318 
> CF (PCMCIA):
>
> Thanks in advance for your help
> Tex
>
> (FYI: 00deadbeef = fake key)
> Commands entered and command results:
> root at ubuntu:/var/log# iwconfig wlan0 essid trackcoach2 key 00deadbeef 
> chann 4
> root at ubuntu:/var/log# iwconfig
> lo        no wireless extensions.
>
> eth0      no wireless extensions.
>
> wmaster0  no wireless extensions.
>
> wlan0     IEEE 802.11  ESSID:"trackcoach2"          Mode:Managed  
> Frequency:2.427 GHz  Access Point: 00:15:05:EC:2E:54           Bit 
> Rate=1 Mb/s   Tx-Power=27 dBm           Retry min limit:7   RTS 
> thr:off   Fragment thr=2352 B           Encryption key:0FB3-CFC8-78
>          Link Quality=68/100  Signal level:-43 dBm  Noise level=-72 dBm
>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>
>
> snapshot for kern.log running compat_wireless source dated 06-21:
>
> Aug 16 11:17:28 ubuntu kernel: [  980.756067] ssb: Core 0 found: 
> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
> Aug 16 11:17:28 ubuntu kernel: [  980.756182] ssb: Core 1 found: IEEE 
> 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
> Aug 16 11:17:28 ubuntu kernel: [  980.756287] ssb: Core 2 found: PCI 
> (cc 0x804, rev 0x0C, vendor 0x4243)
> Aug 16 11:17:28 ubuntu kernel: [  980.756391] ssb: Core 3 found: 
> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
> Aug 16 11:17:28 ubuntu kernel: [  980.841103] ssb: Sonics Silicon 
> Backplane found on PCMCIA device pcmcia0.0
> Aug 16 11:17:28 ubuntu kernel: [  980.843423] b43-phy2: Broadcom 4318 
> WLAN found
> Aug 16 11:17:28 ubuntu kernel: [  980.864824] b43-phy2 debug: Found 
> PHY: Analog 3, Type 2, Revision 7
> Aug 16 11:17:28 ubuntu kernel: [  980.864861] b43-phy2 debug: Found 
> Radio: Manuf 0x17F, Version 0x2050, Revision 8
> Aug 16 11:17:28 ubuntu kernel: [  980.890769] phy2: Selected rate 
> control algorithm 'pid'
> Aug 16 11:17:28 ubuntu kernel: [  980.894425] Broadcom 43xx driver 
> loaded [ Features: PMLR, Firmware-ID: FW13 ]
> Aug 16 11:17:28 ubuntu kernel: [  981.037152] input: b43-phy2 as 
> /class/input/input13
>
> Aug 16 11:17:29 ubuntu kernel: [  981.286962] b43-phy2: Loading 
> firmware version 410.2160 (2007-05-26 15:32:10)
> Aug 16 11:17:29 ubuntu kernel: [  981.386914] b43-phy2 debug: Chip 
> initialized
> Aug 16 11:17:29 ubuntu kernel: [  981.387163] b43-phy2 debug: PIO 
> initialized
> Aug 16 11:17:29 ubuntu kernel: [  981.394286] Registered led device: 
> b43-phy2::tx
> Aug 16 11:17:29 ubuntu kernel: [  981.395342] Registered led device: 
> b43-phy2::rx
> Aug 16 11:17:29 ubuntu kernel: [  981.396162] Registered led device: 
> b43-phy2::radio
> Aug 16 11:17:29 ubuntu kernel: [  981.396236] b43-phy2 debug: Wireless 
> interface started
> Aug 16 11:17:29 ubuntu kernel: [  981.422452] b43-phy2 debug: Adding 
> Interface type 2
> Aug 16 11:17:29 ubuntu kernel: [  981.434619] ADDRCONF(NETDEV_UP): 
> wlan0: link is not ready
> Aug 16 11:17:40 ubuntu kernel: [  992.409510] b43-phy2 debug: Using 
> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
> Aug 16 11:17:41 ubuntu kernel: [  993.176152] wlan0: Initial auth_alg=0
> Aug 16 11:17:41 ubuntu kernel: [  993.176171] wlan0: authenticate with 
> AP 00:15:05:ec:2e:54
> Aug 16 11:17:41 ubuntu kernel: [  993.185280] wlan0: RX authentication 
> from 00:15:05:ec:2e:54 (alg=0 transaction=2 status=0)
> Aug 16 11:17:41 ubuntu kernel: [  993.185290] wlan0: authenticated
> Aug 16 11:17:41 ubuntu kernel: [  993.185297] wlan0: associate with AP 
> 00:15:05:ec:2e:54
> Aug 16 11:17:41 ubuntu kernel: [  993.187344] wlan0: RX AssocResp from 
> 00:15:05:ec:2e:54 (capab=0x431 status=0 aid=2)
> Aug 16 11:17:41 ubuntu kernel: [  993.187351] wlan0: associated
> Aug 16 11:17:41 ubuntu kernel: [  993.188636] ADDRCONF(NETDEV_CHANGE): 
> wlan0: link becomes ready
>
>
>
> Commands entered:
> iwconfig wlan0 essid trackcoach2 key 00deadbeef chann 4
> root at ubuntu:~# iwconfig
> lo        no wireless extensions.
>
> eth0      no wireless extensions.
>
> wmaster0  no wireless extensions.
>
> wlan0     IEEE 802.11g  ESSID:"trackcoach2"          Mode:Managed  
> Frequency:2.427 GHz  Access Point: Not-Associated           
> Tx-Power=27 dBm           Retry min limit:7   RTS thr:off   Fragment 
> thr=2352 B           Encryption key:0FB3-CFC8-78
>          Link Quality:0  Signal level:0  Noise level:0
>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>
>
>
> Kernel log file using linux base linux-2.6.25.9:
> Aug 16 11:46:49 ubuntu kernel: [  674.570729] pcmcia: registering new 
> device pcmcia0.0
> Aug 16 11:46:50 ubuntu kernel: [  675.248587] ssb: Core 0 found: 
> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
> Aug 16 11:46:50 ubuntu kernel: [  675.248733] ssb: Core 1 found: IEEE 
> 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
> Aug 16 11:46:50 ubuntu kernel: [  675.248839] ssb: Core 2 found: PCI 
> (cc 0x804, rev 0x0C, vendor 0x4243)
> Aug 16 11:46:50 ubuntu kernel: [  675.248943] ssb: Core 3 found: 
> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
> Aug 16 11:46:50 ubuntu kernel: [  675.258113] ssb: Sonics Silicon 
> Backplane found on PCMCIA device pcmcia0.0
> Aug 16 11:46:50 ubuntu kernel: [  675.260339] b43-phy0: Broadcom 4318 
> WLAN found
> Aug 16 11:46:50 ubuntu kernel: [  675.280772] b43-phy0 debug: Found 
> PHY: Analog 3, Type 2, Revision 7
> Aug 16 11:46:50 ubuntu kernel: [  675.280810] b43-phy0 debug: Found 
> Radio: Manuf 0x17F, Version 0x2050, Revision 8
> Aug 16 11:46:50 ubuntu kernel: [  675.306686] phy0: Selected rate 
> control algorithm 'pid'
> Aug 16 11:46:50 ubuntu kernel: [  675.527595] Broadcom 43xx driver 
> loaded [ Features: PMLR, Firmware-ID: FW13 ]
> Aug 16 11:46:50 ubuntu kernel: [  675.712722] input: b43-phy0 as 
> /class/input/input9
> Aug 16 11:46:50 ubuntu kernel: [  675.978279] b43-phy0: Loading 
> firmware version 410.2160 (2007-05-26 15:32:10)
> Aug 16 11:46:52 ubuntu kernel: [  677.227536] b43-phy0 debug: Chip 
> initialized
> Aug 16 11:46:52 ubuntu kernel: [  677.229015] b43-phy0 debug: 32-bit 
> DMA initialized
> Aug 16 11:46:52 ubuntu kernel: [  677.235404] b43-phy0 debug: Wireless 
> interface started
> Aug 16 11:46:52 ubuntu kernel: [  677.258321] b43-phy0 debug: Adding 
> Interface type 2
> Aug 16 11:46:52 ubuntu kernel: [  677.270523] ADDRCONF(NETDEV_UP): 
> wlan0: link is not ready
> Aug 16 11:47:06 ubuntu kernel: [  691.850496] b43-phy0 debug: Using 
> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
>
>
>
>



From Larry.Finger at lwfinger.net  Sat Aug 16 06:01:04 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 15 Aug 2008 23:01:04 -0500
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <48A65100.9050407@lwfinger.net>

Michael Buesch wrote:
> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
> 
> PLEASE TEST TEST TEST TEST TEST
> 
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
> 
> Please test on all of your devices.

The patch works fine on the 802.11g portion of my BCM4312/1, which 
seems to be the same as a BCM4311/1. This card has a PCIe format. I 
also tested on my PCMCIA version of a BCM4318. That card works, but 
the maximum transmit rate is only about 1/2 of what I get without it. 
The card has a rev 09 802.11 core, a rev 7 PHY, and a rev 3 analog 
part. I still have to test on a PCI format BCM4306/3 card, but I 
suspect that you have already tested the 4306.

Larry


From ccmcphe at verizon.net  Sat Aug 16 22:40:44 2008
From: ccmcphe at verizon.net (Tex)
Date: Sat, 16 Aug 2008 16:40:44 -0400
Subject: hwrng question in main.c
Message-ID: <48A73B4C.2010906@verizon.net>

I am trying to port this driver to my embedded systems that uses the ARM 
processor. The kernel it uses does not have the hwrng installed and my 
loading is error'ing out. I got the b43 driver working by ifdef'ing out 
the b43_rng_init(wl) call and the b443_rng_exit(dev->wl) call and also 
the other rng functions. My question is - will this cause any problem 
with any other API and/or module ? Currently I have seen no problems, 
but I really haven't run it through the wringer yet.

Thanks in advance
Tex



From fmarass at gmail.com  Fri Aug 15 08:39:39 2008
From: fmarass at gmail.com (Francesco Marass)
Date: Thu, 14 Aug 2008 23:39:39 -0700
Subject: sudden wlan0 no scan results
Message-ID: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>

Hello

I have a BCM4312 wireless card that I've always successfully used with
the b43 driver. However, for the past few days I've been unable to
find any wireless networks, so connecting to one was impossible.
`iwlist wlan0 scan` now always returns No scan results.

I run Debian testing, with a 2.6.25.4 x86_64 kernel. I have not made
changes to the system, aside from the usual updates and everything
else is working correctly.

My syslog when my interface worked looked like this:

Aug  2 09:19:10 febian kernel: b43-phy0: Broadcom 4311 WLAN found
Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
Type 2, Revision 8
Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found Radio: Manuf
0x17F, Version 0x2050, Revision 2
Aug  2 09:19:10 febian kernel: phy0: Selected rate control algorithm 'pid'
Aug  2 09:19:10 febian kernel: Broadcom 43xx driver loaded [ Features:
PL, Firmware-ID: FW13 ]
Aug  2 09:19:19 febian NetworkManager: <info>  starting...
Aug  2 09:19:19 febian NetworkManager: <info>  New VPN service
'openvpn' (org.freedesktop.NetworkManager.openvpn).
Aug  2 09:19:20 febian kernel: b43-phy0: Loading firmware version
410.2160 (2007-05-26 15:32:10)
Aug  2 09:19:21 febian kernel: b43-phy0 debug: Chip initialized
Aug  2 09:19:21 febian kernel: b43-phy0 debug: 32-bit DMA initialized136401
Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::tx
Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::rx
Aug  2 09:19:21 febian kernel: b43-phy0 debug: Wireless interface started
Aug  2 09:19:21 febian kernel: b43-phy0 debug: Adding Interface type 2
Aug  2 09:19:21 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
Aug  2 09:20:00 febian kernel: b43-phy0 debug: Using hardware based
encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
Aug  2 09:20:00 febian kernel: wlan0: Initial auth_alg=0
Aug  2 09:20:00 febian kernel: wlan0: authenticate with AP 00:1c:10:9f:c5:15
Aug  2 09:20:00 febian kernel: wlan0: RX authentication from
00:1c:10:9f:c5:15 (alg=0 transaction=2 status=0)
Aug  2 09:20:00 febian kernel: wlan0: authenticated
Aug  2 09:20:00 febian kernel: wlan0: associate with AP 00:1c:10:9f:c5:15
Aug  2 09:20:00 febian kernel: wlan0: RX AssocResp from
00:1c:10:9f:c5:15 (capab=0x411 status=0 aid=2)
Aug  2 09:20:00 febian kernel: wlan0: associated
Aug  2 09:20:00 febian kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link
becomes ready
Aug  2 09:20:00 febian dhclient: Internet Systems Consortium DHCP Client V3.1.1
Aug  2 09:20:00 febian dhclient: Copyright 2004-2008 Internet Systems
Consortium.
Aug  2 09:20:00 febian dhclient: All rights reserved.
Aug  2 09:20:00 febian dhclient: For info, please visit
http://www.isc.org/sw/dhcp/
Aug  2 09:20:00 febian dhclient:
Aug  2 09:20:00 febian dhclient: wmaster0: unknown hardware address type 801
Aug  2 09:20:01 febian dhclient: wmaster0: unknown hardware address type 801
Aug  2 09:20:01 febian dhclient: Listening on LPF/wlan0/XXX
Aug  2 09:20:01 febian dhclient: Sending on   LPF/wlan0/XXX
Aug  2 09:20:01 febian dhclient: Sending on   Socket/fallback
Aug  2 09:20:01 febian dhclient: DHCPDISCOVER on wlan0 to
255.255.255.255 port 67 interval 5
Aug  2 09:20:01 febian avahi-daemon[3173]: Joining mDNS multicast
group on interface wlan0.IPv6 with address fe80::21a:73ff:fe49:d828.
Aug  2 09:20:01 febian avahi-daemon[3173]: New relevant interface
wlan0.IPv6 for mDNS.
Aug  2 09:20:01 febian avahi-daemon[3173]: Registering new address
record for fe80::21a:73ff:fe49:d828 on wlan0.*.
Aug  2 09:20:02 febian dhclient: DHCPOFFER from 192.168.1.1
Aug  2 09:20:02 febian dhclient: DHCPREQUEST on wlan0 to 255.255.255.255 port 67
Aug  2 09:20:02 febian dhclient: DHCPACK from 192.168.1.1
Aug  2 09:20:02 febian avahi-daemon[3173]: Joining mDNS multicast
group on interface wlan0.IPv4 with address 192.168.1.102.
Aug  2 09:20:02 febian avahi-daemon[3173]: New relevant interface
wlan0.IPv4 for mDNS.
Aug  2 09:20:02 febian avahi-daemon[3173]: Registering new address
record for 192.168.1.102 on wlan0.IPv4.
Aug  2 09:20:02 febian dhclient: bound to 192.168.1.102 -- renewal in
40017 seconds.


Current syslog (with non-working interface):

Aug  3 16:10:50 febian kernel: b43-phy0: Broadcom 4311 WLAN found
Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
Type 2, Revision 8
Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found Radio: Manuf
0x17F, Version 0x2050, Revision 2
Aug  3 16:10:50 febian kernel: phy0: Selected rate control algorithm 'pid'
Aug  3 16:10:50 febian kernel: Broadcom 43xx driver loaded [ Features:
PL, Firmware-ID: FW13 ]
Aug  3 16:10:59 febian NetworkManager: <info>  starting...
Aug  3 16:10:59 febian NetworkManager: <info>  New VPN service
'openvpn' (org.freedesktop.NetworkManager.openvpn).
Aug  3 16:11:00 febian kernel: b43-phy0: Loading firmware version
410.2160 (2007-05-26 15:32:10)
Aug  3 16:11:01 febian kernel: b43-phy0 debug: Chip initialized
Aug  3 16:11:01 febian kernel: b43-phy0 debug: 32-bit DMA initialized
Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::tx
Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::rx
Aug  3 16:11:01 febian kernel: b43-phy0 debug: Wireless interface started
Aug  3 16:11:01 febian kernel: b43-phy0 debug: Adding Interface type 2
Aug  3 16:11:01 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready


My interfaces configuration is very simple:

iface wlan0 inet dhcp
  wireless-essid XXXX
  wireless-key YYYY


Without NetworkManager I tried the procedure by hand without success:
# ifconfig wlan0 up
# dmesg | tail
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
ff:ff:ff:ff:ff:ff
ADDRCONF(NETDEV_UP): wlan0: link is not ready
# iwconfig wlan0 essid XXX
# iwconfig wlan0 key YYY
# dmesg | tail
b43-phy0 debug: Disabling hardware based encryption for keyidx: 0,
mac: ff:ff:ff:ff:ff:ff
b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
ff:ff:ff:ff:ff:ff
# iwlist wlan0 scan
wlan0             No scan results

I even downloaded the driver again and re-cut the firmware, but it did not help.

I hope there is an explanation and a solution for this, as I am
reluctant to try the windoze driver with ndiswrapper.

I add an lspci -v regarding this card for more information:
30:00.0 Network controller: Broadcom Corporation BCM4312 802.11a/b/g (rev 01)
        Subsystem: Hewlett-Packard Company Device 1361
        Flags: bus master, fast devsel, latency 0, IRQ 18
        Memory at c8000000 (32-bit, non-prefetchable) [size=16K]
        Capabilities: <access denied>
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb


Thank you in advance

Francesco


From mb at bu3sch.de  Sat Aug 16 21:36:19 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 16 Aug 2008 21:36:19 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <48A717C0.6020705@lwfinger.net>
References: <200808160029.56876.mb@bu3sch.de> <48A65100.9050407@lwfinger.net>
	<48A717C0.6020705@lwfinger.net>
Message-ID: <200808162136.19680.mb@bu3sch.de>

On Saturday 16 August 2008, Larry Finger wrote:
> Larry Finger wrote:
> > 
> > The patch works fine on the 802.11g portion of my BCM4312/1, which seems 
> > to be the same as a BCM4311/1. This card has a PCIe format. I also 
> > tested on my PCMCIA version of a BCM4318. That card works, but the 
> > maximum transmit rate is only about 1/2 of what I get without it. The 
> > card has a rev 09 802.11 core, a rev 7 PHY, and a rev 3 analog part. I 
> > still have to test on a PCI format BCM4306/3 card, but I suspect that 
> > you have already tested the 4306.
> 
> Forget what I said about the loss of transmit rate. Once I did a 
> proper test, it is the same with or without the patch. For the 
> BCM4318, the b43 rate is slightly reduced from using bcm43xx. The 
> difference is not really great, but a reproducible reduction from 16.6 
> to 14.2 Mbs with the iwconfig rate set at 54 Mbs. By comparison, the 
> BCM4312 is over 20 Mbs.

Thanks a lot for retesting.
Loss of TX rate would be the worst thing that can happen with this patch, as
it's very very hard to debug due to the size.

I didn't test it on all of my devices, yet. I just tried a 4306, where it
doesn't cause any regression.


From mb at bu3sch.de  Sat Aug 16 00:29:56 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 16 Aug 2008 00:29:56 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
Message-ID: <200808160029.56876.mb@bu3sch.de>

This is the first part for the rewrite of the b43 PHY API.
This is needed in order to make development of N and LP code possible.

PLEASE TEST TEST TEST TEST TEST

Lots of testing on lots of different devices is needed to ensure this
doesn't introduce regressions due to typos.
95% of the patch just moves large parts of the PHY code from one file
to another. More move-patches will follow.
5% of the patch introduces an "ops" based PHY API.

Please test on all of your devices.

http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
Apply against wireless-testing.git

(Not attached to the mail, as it is really big)


From Larry.Finger at lwfinger.net  Sun Aug 17 18:03:53 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 11:03:53 -0500
Subject: hwrng question in main.c
In-Reply-To: <48A73B4C.2010906@verizon.net>
References: <48A73B4C.2010906@verizon.net>
Message-ID: <48A84BE9.6030506@lwfinger.net>

Tex wrote:
> I am trying to port this driver to my embedded systems that uses the ARM 
> processor. The kernel it uses does not have the hwrng installed and my 
> loading is error'ing out. I got the b43 driver working by ifdef'ing out 
> the b43_rng_init(wl) call and the b443_rng_exit(dev->wl) call and also 
> the other rng functions. My question is - will this cause any problem 
> with any other API and/or module ? Currently I have seen no problems, 
> but I really haven't run it through the wringer yet.

No, it won't cause any problems to eliminate the rng features. They 
are there to provide extra entropy for the random number generators. 
For an embedded system with few logins, the entropy is not a problem.

Larry



From Larry.Finger at lwfinger.net  Sun Aug 17 18:05:40 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 11:05:40 -0500
Subject: Cannot gain access to AP
In-Reply-To: <48A6FB94.6020102@verizon.net>
References: <48A6F93B.2060807@verizon.net> <48A6FB94.6020102@verizon.net>
Message-ID: <48A84C54.3070106@lwfinger.net>

Tex wrote:
> I'm sorry, the linux version is the base UBUNTU 2.6.24-19-generic not 
> 2.6.25.9 (I haven't tested that 1 yet).
> 
> 
> Tex wrote:
>> When I use the baseline modules from linux-2.6.25.9, I cannot 
>> associate with my access points, and I can't even go into monitor 
>> mode, the MAC address is also random.  if I use the compat_wireless 
>> (snapshot of 06-21) I can associate with my access points and I can 
>> even go into monitor mode. I'm currently using x86 with Broadcom 4318 
>> CF (PCMCIA):
>>
>> Thanks in advance for your help
>> Tex
>>
>> (FYI: 00deadbeef = fake key)
>> Commands entered and command results:
>> root at ubuntu:/var/log# iwconfig wlan0 essid trackcoach2 key 00deadbeef 
>> chann 4
>> root at ubuntu:/var/log# iwconfig
>> lo        no wireless extensions.
>>
>> eth0      no wireless extensions.
>>
>> wmaster0  no wireless extensions.
>>
>> wlan0     IEEE 802.11  ESSID:"trackcoach2"          Mode:Managed  
>> Frequency:2.427 GHz  Access Point: 00:15:05:EC:2E:54           Bit 
>> Rate=1 Mb/s   Tx-Power=27 dBm           Retry min limit:7   RTS 
>> thr:off   Fragment thr=2352 B           Encryption key:0FB3-CFC8-78
>>          Link Quality=68/100  Signal level:-43 dBm  Noise level=-72 dBm
>>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>>
>>
>> snapshot for kern.log running compat_wireless source dated 06-21:
>>
>> Aug 16 11:17:28 ubuntu kernel: [  980.756067] ssb: Core 0 found: 
>> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
>> Aug 16 11:17:28 ubuntu kernel: [  980.756182] ssb: Core 1 found: IEEE 
>> 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
>> Aug 16 11:17:28 ubuntu kernel: [  980.756287] ssb: Core 2 found: PCI 
>> (cc 0x804, rev 0x0C, vendor 0x4243)
>> Aug 16 11:17:28 ubuntu kernel: [  980.756391] ssb: Core 3 found: 
>> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
>> Aug 16 11:17:28 ubuntu kernel: [  980.841103] ssb: Sonics Silicon 
>> Backplane found on PCMCIA device pcmcia0.0
>> Aug 16 11:17:28 ubuntu kernel: [  980.843423] b43-phy2: Broadcom 4318 
>> WLAN found
>> Aug 16 11:17:28 ubuntu kernel: [  980.864824] b43-phy2 debug: Found 
>> PHY: Analog 3, Type 2, Revision 7
>> Aug 16 11:17:28 ubuntu kernel: [  980.864861] b43-phy2 debug: Found 
>> Radio: Manuf 0x17F, Version 0x2050, Revision 8
>> Aug 16 11:17:28 ubuntu kernel: [  980.890769] phy2: Selected rate 
>> control algorithm 'pid'
>> Aug 16 11:17:28 ubuntu kernel: [  980.894425] Broadcom 43xx driver 
>> loaded [ Features: PMLR, Firmware-ID: FW13 ]
>> Aug 16 11:17:28 ubuntu kernel: [  981.037152] input: b43-phy2 as 
>> /class/input/input13
>>
>> Aug 16 11:17:29 ubuntu kernel: [  981.286962] b43-phy2: Loading 
>> firmware version 410.2160 (2007-05-26 15:32:10)
>> Aug 16 11:17:29 ubuntu kernel: [  981.386914] b43-phy2 debug: Chip 
>> initialized
>> Aug 16 11:17:29 ubuntu kernel: [  981.387163] b43-phy2 debug: PIO 
>> initialized
>> Aug 16 11:17:29 ubuntu kernel: [  981.394286] Registered led device: 
>> b43-phy2::tx
>> Aug 16 11:17:29 ubuntu kernel: [  981.395342] Registered led device: 
>> b43-phy2::rx
>> Aug 16 11:17:29 ubuntu kernel: [  981.396162] Registered led device: 
>> b43-phy2::radio
>> Aug 16 11:17:29 ubuntu kernel: [  981.396236] b43-phy2 debug: Wireless 
>> interface started
>> Aug 16 11:17:29 ubuntu kernel: [  981.422452] b43-phy2 debug: Adding 
>> Interface type 2
>> Aug 16 11:17:29 ubuntu kernel: [  981.434619] ADDRCONF(NETDEV_UP): 
>> wlan0: link is not ready
>> Aug 16 11:17:40 ubuntu kernel: [  992.409510] b43-phy2 debug: Using 
>> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
>> Aug 16 11:17:41 ubuntu kernel: [  993.176152] wlan0: Initial auth_alg=0
>> Aug 16 11:17:41 ubuntu kernel: [  993.176171] wlan0: authenticate with 
>> AP 00:15:05:ec:2e:54
>> Aug 16 11:17:41 ubuntu kernel: [  993.185280] wlan0: RX authentication 
>> from 00:15:05:ec:2e:54 (alg=0 transaction=2 status=0)
>> Aug 16 11:17:41 ubuntu kernel: [  993.185290] wlan0: authenticated
>> Aug 16 11:17:41 ubuntu kernel: [  993.185297] wlan0: associate with AP 
>> 00:15:05:ec:2e:54
>> Aug 16 11:17:41 ubuntu kernel: [  993.187344] wlan0: RX AssocResp from 
>> 00:15:05:ec:2e:54 (capab=0x431 status=0 aid=2)
>> Aug 16 11:17:41 ubuntu kernel: [  993.187351] wlan0: associated
>> Aug 16 11:17:41 ubuntu kernel: [  993.188636] ADDRCONF(NETDEV_CHANGE): 
>> wlan0: link becomes ready
>>
>>
>>
>> Commands entered:
>> iwconfig wlan0 essid trackcoach2 key 00deadbeef chann 4
>> root at ubuntu:~# iwconfig
>> lo        no wireless extensions.
>>
>> eth0      no wireless extensions.
>>
>> wmaster0  no wireless extensions.
>>
>> wlan0     IEEE 802.11g  ESSID:"trackcoach2"          Mode:Managed  
>> Frequency:2.427 GHz  Access Point: Not-Associated           
>> Tx-Power=27 dBm           Retry min limit:7   RTS thr:off   Fragment 
>> thr=2352 B           Encryption key:0FB3-CFC8-78
>>          Link Quality:0  Signal level:0  Noise level:0
>>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>>
>>
>>
>> Kernel log file using linux base linux-2.6.25.9:
>> Aug 16 11:46:49 ubuntu kernel: [  674.570729] pcmcia: registering new 
>> device pcmcia0.0
>> Aug 16 11:46:50 ubuntu kernel: [  675.248587] ssb: Core 0 found: 
>> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
>> Aug 16 11:46:50 ubuntu kernel: [  675.248733] ssb: Core 1 found: IEEE 
>> 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
>> Aug 16 11:46:50 ubuntu kernel: [  675.248839] ssb: Core 2 found: PCI 
>> (cc 0x804, rev 0x0C, vendor 0x4243)
>> Aug 16 11:46:50 ubuntu kernel: [  675.248943] ssb: Core 3 found: 
>> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
>> Aug 16 11:46:50 ubuntu kernel: [  675.258113] ssb: Sonics Silicon 
>> Backplane found on PCMCIA device pcmcia0.0
>> Aug 16 11:46:50 ubuntu kernel: [  675.260339] b43-phy0: Broadcom 4318 
>> WLAN found
>> Aug 16 11:46:50 ubuntu kernel: [  675.280772] b43-phy0 debug: Found 
>> PHY: Analog 3, Type 2, Revision 7
>> Aug 16 11:46:50 ubuntu kernel: [  675.280810] b43-phy0 debug: Found 
>> Radio: Manuf 0x17F, Version 0x2050, Revision 8
>> Aug 16 11:46:50 ubuntu kernel: [  675.306686] phy0: Selected rate 
>> control algorithm 'pid'
>> Aug 16 11:46:50 ubuntu kernel: [  675.527595] Broadcom 43xx driver 
>> loaded [ Features: PMLR, Firmware-ID: FW13 ]
>> Aug 16 11:46:50 ubuntu kernel: [  675.712722] input: b43-phy0 as 
>> /class/input/input9
>> Aug 16 11:46:50 ubuntu kernel: [  675.978279] b43-phy0: Loading 
>> firmware version 410.2160 (2007-05-26 15:32:10)
>> Aug 16 11:46:52 ubuntu kernel: [  677.227536] b43-phy0 debug: Chip 
>> initialized
>> Aug 16 11:46:52 ubuntu kernel: [  677.229015] b43-phy0 debug: 32-bit 
>> DMA initialized
>> Aug 16 11:46:52 ubuntu kernel: [  677.235404] b43-phy0 debug: Wireless 
>> interface started
>> Aug 16 11:46:52 ubuntu kernel: [  677.258321] b43-phy0 debug: Adding 
>> Interface type 2
>> Aug 16 11:46:52 ubuntu kernel: [  677.270523] ADDRCONF(NETDEV_UP): 
>> wlan0: link is not ready
>> Aug 16 11:47:06 ubuntu kernel: [  691.850496] b43-phy0 debug: Using 
>> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff

Please provide two extra pieces of information:

(1) From the command 'lspci -nnv', post the first two lines that 
describe your BCM4318.

(2) Post the ooutput from 'ifconfig'

Larry


From Larry.Finger at lwfinger.net  Sun Aug 17 18:36:44 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 11:36:44 -0500
Subject: sudden wlan0 no scan results
In-Reply-To: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>
References: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>
Message-ID: <48A8539C.7000805@lwfinger.net>

Francesco Marass wrote:
> Hello
> 
> I have a BCM4312 wireless card that I've always successfully used with
> the b43 driver. However, for the past few days I've been unable to
> find any wireless networks, so connecting to one was impossible.
> `iwlist wlan0 scan` now always returns No scan results.
> 
> I run Debian testing, with a 2.6.25.4 x86_64 kernel. I have not made
> changes to the system, aside from the usual updates and everything
> else is working correctly.
> 
> My syslog when my interface worked looked like this:
> 
> Aug  2 09:19:10 febian kernel: b43-phy0: Broadcom 4311 WLAN found
> Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
> Type 2, Revision 8
> Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found Radio: Manuf
> 0x17F, Version 0x2050, Revision 2
> Aug  2 09:19:10 febian kernel: phy0: Selected rate control algorithm 'pid'
> Aug  2 09:19:10 febian kernel: Broadcom 43xx driver loaded [ Features:
> PL, Firmware-ID: FW13 ]
> Aug  2 09:19:19 febian NetworkManager: <info>  starting...
> Aug  2 09:19:19 febian NetworkManager: <info>  New VPN service
> 'openvpn' (org.freedesktop.NetworkManager.openvpn).
> Aug  2 09:19:20 febian kernel: b43-phy0: Loading firmware version
> 410.2160 (2007-05-26 15:32:10)
> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Chip initialized
> Aug  2 09:19:21 febian kernel: b43-phy0 debug: 32-bit DMA initialized136401
> Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::tx
> Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::rx
> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Wireless interface started
> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Adding Interface type 2
> Aug  2 09:19:21 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
> Aug  2 09:20:00 febian kernel: b43-phy0 debug: Using hardware based
> encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
> Aug  2 09:20:00 febian kernel: wlan0: Initial auth_alg=0
> Aug  2 09:20:00 febian kernel: wlan0: authenticate with AP 00:1c:10:9f:c5:15
> Aug  2 09:20:00 febian kernel: wlan0: RX authentication from
> 00:1c:10:9f:c5:15 (alg=0 transaction=2 status=0)
> Aug  2 09:20:00 febian kernel: wlan0: authenticated
> Aug  2 09:20:00 febian kernel: wlan0: associate with AP 00:1c:10:9f:c5:15
> Aug  2 09:20:00 febian kernel: wlan0: RX AssocResp from
> 00:1c:10:9f:c5:15 (capab=0x411 status=0 aid=2)
> Aug  2 09:20:00 febian kernel: wlan0: associated
> Aug  2 09:20:00 febian kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link
> becomes ready
> Aug  2 09:20:00 febian dhclient: Internet Systems Consortium DHCP Client V3.1.1
> Aug  2 09:20:00 febian dhclient: Copyright 2004-2008 Internet Systems
> Consortium.
> Aug  2 09:20:00 febian dhclient: All rights reserved.
> Aug  2 09:20:00 febian dhclient: For info, please visit
> http://www.isc.org/sw/dhcp/
> Aug  2 09:20:00 febian dhclient:
> Aug  2 09:20:00 febian dhclient: wmaster0: unknown hardware address type 801
> Aug  2 09:20:01 febian dhclient: wmaster0: unknown hardware address type 801
> Aug  2 09:20:01 febian dhclient: Listening on LPF/wlan0/XXX
> Aug  2 09:20:01 febian dhclient: Sending on   LPF/wlan0/XXX
> Aug  2 09:20:01 febian dhclient: Sending on   Socket/fallback
> Aug  2 09:20:01 febian dhclient: DHCPDISCOVER on wlan0 to
> 255.255.255.255 port 67 interval 5
> Aug  2 09:20:01 febian avahi-daemon[3173]: Joining mDNS multicast
> group on interface wlan0.IPv6 with address fe80::21a:73ff:fe49:d828.
> Aug  2 09:20:01 febian avahi-daemon[3173]: New relevant interface
> wlan0.IPv6 for mDNS.
> Aug  2 09:20:01 febian avahi-daemon[3173]: Registering new address
> record for fe80::21a:73ff:fe49:d828 on wlan0.*.
> Aug  2 09:20:02 febian dhclient: DHCPOFFER from 192.168.1.1
> Aug  2 09:20:02 febian dhclient: DHCPREQUEST on wlan0 to 255.255.255.255 port 67
> Aug  2 09:20:02 febian dhclient: DHCPACK from 192.168.1.1
> Aug  2 09:20:02 febian avahi-daemon[3173]: Joining mDNS multicast
> group on interface wlan0.IPv4 with address 192.168.1.102.
> Aug  2 09:20:02 febian avahi-daemon[3173]: New relevant interface
> wlan0.IPv4 for mDNS.
> Aug  2 09:20:02 febian avahi-daemon[3173]: Registering new address
> record for 192.168.1.102 on wlan0.IPv4.
> Aug  2 09:20:02 febian dhclient: bound to 192.168.1.102 -- renewal in
> 40017 seconds.
> 
> 
> Current syslog (with non-working interface):
> 
> Aug  3 16:10:50 febian kernel: b43-phy0: Broadcom 4311 WLAN found
> Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
> Type 2, Revision 8
> Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found Radio: Manuf
> 0x17F, Version 0x2050, Revision 2
> Aug  3 16:10:50 febian kernel: phy0: Selected rate control algorithm 'pid'
> Aug  3 16:10:50 febian kernel: Broadcom 43xx driver loaded [ Features:
> PL, Firmware-ID: FW13 ]
> Aug  3 16:10:59 febian NetworkManager: <info>  starting...
> Aug  3 16:10:59 febian NetworkManager: <info>  New VPN service
> 'openvpn' (org.freedesktop.NetworkManager.openvpn).
> Aug  3 16:11:00 febian kernel: b43-phy0: Loading firmware version
> 410.2160 (2007-05-26 15:32:10)
> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Chip initialized
> Aug  3 16:11:01 febian kernel: b43-phy0 debug: 32-bit DMA initialized
> Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::tx
> Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::rx
> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Wireless interface started
> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Adding Interface type 2
> Aug  3 16:11:01 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not ready
> 
> 
> My interfaces configuration is very simple:
> 
> iface wlan0 inet dhcp
>   wireless-essid XXXX
>   wireless-key YYYY
> 
> 
> Without NetworkManager I tried the procedure by hand without success:
> # ifconfig wlan0 up
> # dmesg | tail
> b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
> b43-phy0 debug: Chip initialized
> b43-phy0 debug: 32-bit DMA initialized
> Registered led device: b43-phy0::tx
> Registered led device: b43-phy0::rx
> b43-phy0 debug: Wireless interface started
> b43-phy0 debug: Adding Interface type 2
> b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
> ff:ff:ff:ff:ff:ff
> ADDRCONF(NETDEV_UP): wlan0: link is not ready
> # iwconfig wlan0 essid XXX
> # iwconfig wlan0 key YYY
> # dmesg | tail
> b43-phy0 debug: Disabling hardware based encryption for keyidx: 0,
> mac: ff:ff:ff:ff:ff:ff
> b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
> ff:ff:ff:ff:ff:ff
> # iwlist wlan0 scan
> wlan0             No scan results
> 
> I even downloaded the driver again and re-cut the firmware, but it did not help.
> 
> I hope there is an explanation and a solution for this, as I am
> reluctant to try the windoze driver with ndiswrapper.
> 
> I add an lspci -v regarding this card for more information:
> 30:00.0 Network controller: Broadcom Corporation BCM4312 802.11a/b/g (rev 01)
>         Subsystem: Hewlett-Packard Company Device 1361
>         Flags: bus master, fast devsel, latency 0, IRQ 18
>         Memory at c8000000 (32-bit, non-prefetchable) [size=16K]
>         Capabilities: <access denied>
>         Kernel driver in use: b43-pci-bridge
>         Kernel modules: ssb

I don't see anything wrong with b43. The message shows that your 
interface is not UP. I use openSUSE and I don't know exactly what the 
command 'iface' does, but it looks as if something changed there, or 
in other network support software.

Did you make any changes in your system? Perhaps reloading the package 
that contains iface will fix the problem.

Larry



From Illth at gmx.de  Sun Aug 17 22:25:48 2008
From: Illth at gmx.de (Thomas Ilnseher)
Date: Sun, 17 Aug 2008 22:25:48 +0200
Subject: ETA for LP PHY support
Message-ID: <20080817202548.266690@gmx.net>

Hi,

I got an asus WL520GU (with LP PHY).

Unfortunately, even the specs on bcm-v4 are quite incomplete yet.
Is there any ETA when specs are complete, when prelimanry support is added
(offset to previous date, of course) ?

I'm trying to read the code of phy.c, but there are still some things that i don't understand.
I can't ask (non stupid) questions about that right now, cause i'm still reading.

How much time would it take me to get accomplished to this stuff ?

my experience:
a) C Programming (apps) ++
b) kernel programming 0 (simple patches only)
c) wlan stuff --

should i try to hak this stuff (once specs are there) or should i wait, cause you could do this in a couple of weeks ?

Thanks,

Tom
-- 
GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196


From gavron at wetwork.net  Sun Aug 17 21:26:21 2008
From: gavron at wetwork.net (Ehud Gavron)
Date: Sun, 17 Aug 2008 12:26:21 -0700
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <48A87B5D.7010402@wetwork.net>

Works fine here.  iperf same results as prior to patch. 

b43-phy0: Broadcom 4311 WLAN found
b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2

2.6.27-rc2-wl on Ubuntu 8.04 (don't even ask how long it takes to build 
a new kernel and create a debian package and install it...)

Ehud

Michael Buesch wrote:
> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
>
> PLEASE TEST TEST TEST TEST TEST
>
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
>
> Please test on all of your devices.
>
> http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> Apply against wireless-testing.git
>
> (Not attached to the mail, as it is really big)
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   


From Larry.Finger at lwfinger.net  Sun Aug 17 22:42:53 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 15:42:53 -0500
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY  -- good on 4311
In-Reply-To: <48A87B5D.7010402@wetwork.net>
References: <200808160029.56876.mb@bu3sch.de> <48A87B5D.7010402@wetwork.net>
Message-ID: <48A88D4D.9050001@lwfinger.net>

Ehud Gavron wrote:
> Works fine here.  iperf same results as prior to patch.
> b43-phy0: Broadcom 4311 WLAN found
> b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
> 
> 2.6.27-rc2-wl on Ubuntu 8.04 (don't even ask how long it takes to build 
> a new kernel and create a debian package and install it...)

I know, which is one of the reasons I don't use a Debian-based distro. 
I want nothing to do with one whose stated goal is to make it so 
difficult to change the kernel that the users won't do it.

Larry



From Larry.Finger at lwfinger.net  Sun Aug 17 23:33:48 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 16:33:48 -0500
Subject: ETA for LP PHY support
In-Reply-To: <20080817202548.266690@gmx.net>
References: <20080817202548.266690@gmx.net>
Message-ID: <48A8993C.3070901@lwfinger.net>

Thomas Ilnseher wrote:
> Hi,
> 
> I got an asus WL520GU (with LP PHY).
> 
> Unfortunately, even the specs on bcm-v4 are quite incomplete yet.
> Is there any ETA when specs are complete, when prelimanry support is added
> (offset to previous date, of course) ?
> 
> I'm trying to read the code of phy.c, but there are still some things that i don't understand.
> I can't ask (non stupid) questions about that right now, cause i'm still reading.
> 
> How much time would it take me to get accomplished to this stuff ?
> 
> my experience:
> a) C Programming (apps) ++
> b) kernel programming 0 (simple patches only)
> c) wlan stuff --
> 
> should i try to hak this stuff (once specs are there) or should i wait, cause you could do this in a couple of weeks ?

Of the nearly 70 individual routines that make up the LP PHY crore 
routines, only 6 have not yet translated and/or entered into the 
private area of the specifications. Before coding can start, we need 
to finish the translations, write the private specs, and transform 
them what is required for the public area. Those jobs should be done 
in a couple of weeks.

I'm sure that Michael will be glad for any help he can get in the 
coding, but you will need to coordinate with him.

Larry


From fmarass at gmail.com  Mon Aug 18 03:58:32 2008
From: fmarass at gmail.com (Francesco Marass)
Date: Sun, 17 Aug 2008 18:58:32 -0700
Subject: sudden wlan0 no scan results
In-Reply-To: <48A8539C.7000805@lwfinger.net>
References: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>
	<48A8539C.7000805@lwfinger.net>
Message-ID: <4016b2fa0808171858h39ad9783ic57debe0c1c11661@mail.gmail.com>

Thank you for your reply.

There is no iface command: I was not clear enough and just pasted the
/etc/network/interfaces iface stanza for my wireless. So

iface wlan0 inet dhcp
  wireless-essid XXXX
  wireless-key YYYY

is how my wlan0 interface is configured within /etc/network/interfaces.

I did not really make changes to the system. I did install some
SELinux packages, but right after I purged for various reasons.

How do I turn on the interface, if after my attempts (with ifup,
iwconfig, network-manager, ...) I still do not get scan results? (I
wonder whether I am even able to scan, or just do not find networks)

Thank you

Francesco

On 8/17/08, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> Francesco Marass wrote:
>> Hello
>>
>> I have a BCM4312 wireless card that I've always successfully used with
>> the b43 driver. However, for the past few days I've been unable to
>> find any wireless networks, so connecting to one was impossible.
>> `iwlist wlan0 scan` now always returns No scan results.
>>
>> I run Debian testing, with a 2.6.25.4 x86_64 kernel. I have not made
>> changes to the system, aside from the usual updates and everything
>> else is working correctly.
>>
>> My syslog when my interface worked looked like this:
>>
>> Aug  2 09:19:10 febian kernel: b43-phy0: Broadcom 4311 WLAN found
>> Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
>> Type 2, Revision 8
>> Aug  2 09:19:10 febian kernel: b43-phy0 debug: Found Radio: Manuf
>> 0x17F, Version 0x2050, Revision 2
>> Aug  2 09:19:10 febian kernel: phy0: Selected rate control algorithm 'pid'
>> Aug  2 09:19:10 febian kernel: Broadcom 43xx driver loaded [ Features:
>> PL, Firmware-ID: FW13 ]
>> Aug  2 09:19:19 febian NetworkManager: <info>  starting...
>> Aug  2 09:19:19 febian NetworkManager: <info>  New VPN service
>> 'openvpn' (org.freedesktop.NetworkManager.openvpn).
>> Aug  2 09:19:20 febian kernel: b43-phy0: Loading firmware version
>> 410.2160 (2007-05-26 15:32:10)
>> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Chip initialized
>> Aug  2 09:19:21 febian kernel: b43-phy0 debug: 32-bit DMA
>> initialized136401
>> Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::tx
>> Aug  2 09:19:21 febian kernel: Registered led device: b43-phy0::rx
>> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Wireless interface started
>> Aug  2 09:19:21 febian kernel: b43-phy0 debug: Adding Interface type 2
>> Aug  2 09:19:21 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not
>> ready
>> Aug  2 09:20:00 febian kernel: b43-phy0 debug: Using hardware based
>> encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
>> Aug  2 09:20:00 febian kernel: wlan0: Initial auth_alg=0
>> Aug  2 09:20:00 febian kernel: wlan0: authenticate with AP
>> 00:1c:10:9f:c5:15
>> Aug  2 09:20:00 febian kernel: wlan0: RX authentication from
>> 00:1c:10:9f:c5:15 (alg=0 transaction=2 status=0)
>> Aug  2 09:20:00 febian kernel: wlan0: authenticated
>> Aug  2 09:20:00 febian kernel: wlan0: associate with AP 00:1c:10:9f:c5:15
>> Aug  2 09:20:00 febian kernel: wlan0: RX AssocResp from
>> 00:1c:10:9f:c5:15 (capab=0x411 status=0 aid=2)
>> Aug  2 09:20:00 febian kernel: wlan0: associated
>> Aug  2 09:20:00 febian kernel: ADDRCONF(NETDEV_CHANGE): wlan0: link
>> becomes ready
>> Aug  2 09:20:00 febian dhclient: Internet Systems Consortium DHCP Client
>> V3.1.1
>> Aug  2 09:20:00 febian dhclient: Copyright 2004-2008 Internet Systems
>> Consortium.
>> Aug  2 09:20:00 febian dhclient: All rights reserved.
>> Aug  2 09:20:00 febian dhclient: For info, please visit
>> http://www.isc.org/sw/dhcp/
>> Aug  2 09:20:00 febian dhclient:
>> Aug  2 09:20:00 febian dhclient: wmaster0: unknown hardware address type
>> 801
>> Aug  2 09:20:01 febian dhclient: wmaster0: unknown hardware address type
>> 801
>> Aug  2 09:20:01 febian dhclient: Listening on LPF/wlan0/XXX
>> Aug  2 09:20:01 febian dhclient: Sending on   LPF/wlan0/XXX
>> Aug  2 09:20:01 febian dhclient: Sending on   Socket/fallback
>> Aug  2 09:20:01 febian dhclient: DHCPDISCOVER on wlan0 to
>> 255.255.255.255 port 67 interval 5
>> Aug  2 09:20:01 febian avahi-daemon[3173]: Joining mDNS multicast
>> group on interface wlan0.IPv6 with address fe80::21a:73ff:fe49:d828.
>> Aug  2 09:20:01 febian avahi-daemon[3173]: New relevant interface
>> wlan0.IPv6 for mDNS.
>> Aug  2 09:20:01 febian avahi-daemon[3173]: Registering new address
>> record for fe80::21a:73ff:fe49:d828 on wlan0.*.
>> Aug  2 09:20:02 febian dhclient: DHCPOFFER from 192.168.1.1
>> Aug  2 09:20:02 febian dhclient: DHCPREQUEST on wlan0 to 255.255.255.255
>> port 67
>> Aug  2 09:20:02 febian dhclient: DHCPACK from 192.168.1.1
>> Aug  2 09:20:02 febian avahi-daemon[3173]: Joining mDNS multicast
>> group on interface wlan0.IPv4 with address 192.168.1.102.
>> Aug  2 09:20:02 febian avahi-daemon[3173]: New relevant interface
>> wlan0.IPv4 for mDNS.
>> Aug  2 09:20:02 febian avahi-daemon[3173]: Registering new address
>> record for 192.168.1.102 on wlan0.IPv4.
>> Aug  2 09:20:02 febian dhclient: bound to 192.168.1.102 -- renewal in
>> 40017 seconds.
>>
>>
>> Current syslog (with non-working interface):
>>
>> Aug  3 16:10:50 febian kernel: b43-phy0: Broadcom 4311 WLAN found
>> Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found PHY: Analog 4,
>> Type 2, Revision 8
>> Aug  3 16:10:50 febian kernel: b43-phy0 debug: Found Radio: Manuf
>> 0x17F, Version 0x2050, Revision 2
>> Aug  3 16:10:50 febian kernel: phy0: Selected rate control algorithm 'pid'
>> Aug  3 16:10:50 febian kernel: Broadcom 43xx driver loaded [ Features:
>> PL, Firmware-ID: FW13 ]
>> Aug  3 16:10:59 febian NetworkManager: <info>  starting...
>> Aug  3 16:10:59 febian NetworkManager: <info>  New VPN service
>> 'openvpn' (org.freedesktop.NetworkManager.openvpn).
>> Aug  3 16:11:00 febian kernel: b43-phy0: Loading firmware version
>> 410.2160 (2007-05-26 15:32:10)
>> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Chip initialized
>> Aug  3 16:11:01 febian kernel: b43-phy0 debug: 32-bit DMA initialized
>> Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::tx
>> Aug  3 16:11:01 febian kernel: Registered led device: b43-phy0::rx
>> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Wireless interface started
>> Aug  3 16:11:01 febian kernel: b43-phy0 debug: Adding Interface type 2
>> Aug  3 16:11:01 febian kernel: ADDRCONF(NETDEV_UP): wlan0: link is not
>> ready
>>
>>
>> My interfaces configuration is very simple:
>>
>> iface wlan0 inet dhcp
>>   wireless-essid XXXX
>>   wireless-key YYYY
>>
>>
>> Without NetworkManager I tried the procedure by hand without success:
>> # ifconfig wlan0 up
>> # dmesg | tail
>> b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
>> b43-phy0 debug: Chip initialized
>> b43-phy0 debug: 32-bit DMA initialized
>> Registered led device: b43-phy0::tx
>> Registered led device: b43-phy0::rx
>> b43-phy0 debug: Wireless interface started
>> b43-phy0 debug: Adding Interface type 2
>> b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
>> ff:ff:ff:ff:ff:ff
>> ADDRCONF(NETDEV_UP): wlan0: link is not ready
>> # iwconfig wlan0 essid XXX
>> # iwconfig wlan0 key YYY
>> # dmesg | tail
>> b43-phy0 debug: Disabling hardware based encryption for keyidx: 0,
>> mac: ff:ff:ff:ff:ff:ff
>> b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
>> ff:ff:ff:ff:ff:ff
>> # iwlist wlan0 scan
>> wlan0             No scan results
>>
>> I even downloaded the driver again and re-cut the firmware, but it did not
>> help.
>>
>> I hope there is an explanation and a solution for this, as I am
>> reluctant to try the windoze driver with ndiswrapper.
>>
>> I add an lspci -v regarding this card for more information:
>> 30:00.0 Network controller: Broadcom Corporation BCM4312 802.11a/b/g (rev
>> 01)
>>         Subsystem: Hewlett-Packard Company Device 1361
>>         Flags: bus master, fast devsel, latency 0, IRQ 18
>>         Memory at c8000000 (32-bit, non-prefetchable) [size=16K]
>>         Capabilities: <access denied>
>>         Kernel driver in use: b43-pci-bridge
>>         Kernel modules: ssb
>
> I don't see anything wrong with b43. The message shows that your
> interface is not UP. I use openSUSE and I don't know exactly what the
> command 'iface' does, but it looks as if something changed there, or
> in other network support software.
>
> Did you make any changes in your system? Perhaps reloading the package
> that contains iface will fix the problem.
>
> Larry
>
>


From Larry.Finger at lwfinger.net  Mon Aug 18 04:38:23 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 17 Aug 2008 21:38:23 -0500
Subject: sudden wlan0 no scan results
In-Reply-To: <4016b2fa0808171858h39ad9783ic57debe0c1c11661@mail.gmail.com>
References: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>	
	<48A8539C.7000805@lwfinger.net>
	<4016b2fa0808171858h39ad9783ic57debe0c1c11661@mail.gmail.com>
Message-ID: <48A8E09F.2020407@lwfinger.net>

Francesco Marass wrote:
> Thank you for your reply.
> 
> There is no iface command: I was not clear enough and just pasted the
> /etc/network/interfaces iface stanza for my wireless. So
> 
> iface wlan0 inet dhcp
>   wireless-essid XXXX
>   wireless-key YYYY
> 
> is how my wlan0 interface is configured within /etc/network/interfaces.
> 
> I did not really make changes to the system. I did install some
> SELinux packages, but right after I purged for various reasons.
> 
> How do I turn on the interface, if after my attempts (with ifup,
> iwconfig, network-manager, ...) I still do not get scan results? (I
> wonder whether I am even able to scan, or just do not find networks)

It looks as if something is wrong with wpa_supplicant. When using NM, 
please check your 'ps ax' listing to see that it is running. In 
addition, look at the NetworkManager log in /var/log to see what it says.

Larry


From hs4233 at mail.mn-solutions.de  Mon Aug 18 09:41:10 2008
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Mon, 18 Aug 2008 09:41:10 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <48A88D4D.9050001@lwfinger.net>
References: <200808160029.56876.mb@bu3sch.de> <48A87B5D.7010402@wetwork.net>
	<48A88D4D.9050001@lwfinger.net>
Message-ID: <200808180941.10485.hs4233@mail.mn-solutions.de>

> I know, which is one of the reasons I don't use a Debian-based
> distro. I want nothing to do with one whose stated goal is to
> make it so difficult to change the kernel that the users won't
> do it.

Huh?  I use "make install modules_install" from my kernel source 
dir (which I usually get via git) and that works fine, as in 
every distro on earth.

Hehe, but I seldom use distro kernels, not even when I used Red 
Hat or Mandrake in old times :-)


From post at hendrik-sattler.de  Mon Aug 18 12:06:20 2008
From: post at hendrik-sattler.de (Hendrik Sattler)
Date: Mon, 18 Aug 2008 12:06:20 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <200808180941.10485.hs4233@mail.mn-solutions.de>
References: <200808160029.56876.mb@bu3sch.de> <48A88D4D.9050001@lwfinger.net>
	<200808180941.10485.hs4233@mail.mn-solutions.de>
Message-ID: <200808181206.21060.post@hendrik-sattler.de>

Am Montag, 18. August 2008 09:41:10 schrieb Holger Schurig:
> > I know, which is one of the reasons I don't use a Debian-based
> > distro. I want nothing to do with one whose stated goal is to
> > make it so difficult to change the kernel that the users won't
> > do it.
>
> Huh?  I use "make install modules_install" from my kernel source
> dir (which I usually get via git) and that works fine, as in
> every distro on earth.

And "make-kpkg --revision 1 kernel-image" isn't that much harder, either. You 
then get a .deb that you can install with dpkg like any other locally created 
package. It won't recompile everything if you don't change the revision.

Simply don't complain about something you never tried...

HS



From mb at bu3sch.de  Mon Aug 18 14:57:36 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 18 Aug 2008 14:57:36 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <200808180941.10485.hs4233@mail.mn-solutions.de>
References: <200808160029.56876.mb@bu3sch.de> <48A88D4D.9050001@lwfinger.net>
	<200808180941.10485.hs4233@mail.mn-solutions.de>
Message-ID: <200808181457.36858.mb@bu3sch.de>

On Monday 18 August 2008 09:41:10 Holger Schurig wrote:
> > I know, which is one of the reasons I don't use a Debian-based
> > distro. I want nothing to do with one whose stated goal is to
> > make it so difficult to change the kernel that the users won't
> > do it.
> 
> Huh?  I use "make install modules_install" from my kernel source 
> dir (which I usually get via git) and that works fine, as in 
> every distro on earth.

I can only second that.
I simply ignore any distro specific kernel handling and override
the grub/yaboot entries as I desire. I also ignore any rpm or deb
for installing a kernel. I do it this way since the very beginning
and it works fine on debian and non-debian distros.

In general, I do always ignore the packet manager, but install
custom compiled software in a specific directory so it does not
interfere in any way with the distro packets.


-- 
Greetings Michael.


From mb at bu3sch.de  Mon Aug 18 15:01:29 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 18 Aug 2008 15:01:29 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <48A87B5D.7010402@wetwork.net>
References: <200808160029.56876.mb@bu3sch.de> <48A87B5D.7010402@wetwork.net>
Message-ID: <200808181501.30057.mb@bu3sch.de>

On Sunday 17 August 2008 21:26:21 Ehud Gavron wrote:
> Works fine here.  iperf same results as prior to patch. 
> 
> b43-phy0: Broadcom 4311 WLAN found
> b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2

Thanks a lot for testing.

I want to encourage people again to test this patch.
This really needs a lot of testing, because a regression caused by this
would really really be a bad thing.
Even if you think your card was already tested by somebody else, please test
it anyway. There are so many different cards with matching revision numbers
that really are slightly different.

Get wireless-testing.git:
git clone git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-testing.git

and apply the patch
http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch

Please test basic features, throughput and longterm stability of the connection.

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Aug 18 15:07:12 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 18 Aug 2008 15:07:12 +0200
Subject: ETA for LP PHY support
In-Reply-To: <48A8993C.3070901@lwfinger.net>
References: <20080817202548.266690@gmx.net> <48A8993C.3070901@lwfinger.net>
Message-ID: <200808181507.12556.mb@bu3sch.de>

On Sunday 17 August 2008 23:33:48 Larry Finger wrote:
> Thomas Ilnseher wrote:
> > Hi,
> > 
> > I got an asus WL520GU (with LP PHY).
> > 
> > Unfortunately, even the specs on bcm-v4 are quite incomplete yet.
> > Is there any ETA when specs are complete, when prelimanry support is added
> > (offset to previous date, of course) ?
> > 
> > I'm trying to read the code of phy.c, but there are still some things that i don't understand.
> > I can't ask (non stupid) questions about that right now, cause i'm still reading.
> > 
> > How much time would it take me to get accomplished to this stuff ?
> > 
> > my experience:
> > a) C Programming (apps) ++
> > b) kernel programming 0 (simple patches only)
> > c) wlan stuff --
> > 
> > should i try to hak this stuff (once specs are there) or should i wait, cause you could do this in a couple of weeks ?
> 
> Of the nearly 70 individual routines that make up the LP PHY crore 
> routines, only 6 have not yet translated and/or entered into the 
> private area of the specifications. Before coding can start, we need 
> to finish the translations, write the private specs, and transform 
> them what is required for the public area. Those jobs should be done 
> in a couple of weeks.
> 
> I'm sure that Michael will be glad for any help he can get in the 
> coding, but you will need to coordinate with him.


Yeah. And I'd finally also like to get actual hardware with an LP PHY.
Does anybody have spare hardware or a pointer to a webshop to buy one?
PCI, PCI-Express, Cardbus and mini-PCI cards are the possible choices.
Cardbus would be preferred.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Mon Aug 18 15:48:55 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 18 Aug 2008 08:48:55 -0500
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY  -- good on 4311
In-Reply-To: <200808180941.10485.hs4233@mail.mn-solutions.de>
References: <200808160029.56876.mb@bu3sch.de> <48A87B5D.7010402@wetwork.net>
	<48A88D4D.9050001@lwfinger.net>
	<200808180941.10485.hs4233@mail.mn-solutions.de>
Message-ID: <48A97DC7.10808@lwfinger.net>

Holger Schurig wrote:
> Huh?  I use "make install modules_install" from my kernel source 
> dir (which I usually get via git) and that works fine, as in 
> every distro on earth.
> 
> Hehe, but I seldom use distro kernels, not even when I used Red 
> Hat or Mandrake in old times :-)

I tried that with Ubuntu 8.04 and the resulting kernel wouldn't boot. 
Only when I went through the process of making the ".deb" and 
installing that did the new kernel start properly. I didn't 
investigate it thoroughly as I was only testing one patch - I quickly 
fled back to openSUSE.

Larry


From gene.heskett at verizon.net  Mon Aug 18 17:03:25 2008
From: gene.heskett at verizon.net (Gene Heskett)
Date: Mon, 18 Aug 2008 11:03:25 -0400
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY -- good on 4311
In-Reply-To: <48A97DC7.10808@lwfinger.net>
References: <200808160029.56876.mb@bu3sch.de>
	<200808180941.10485.hs4233@mail.mn-solutions.de>
	<48A97DC7.10808@lwfinger.net>
Message-ID: <200808181103.25867.gene.heskett@verizon.net>

On Monday 18 August 2008, Larry Finger wrote:
>Holger Schurig wrote:
>> Huh?  I use "make install modules_install" from my kernel source
>> dir (which I usually get via git) and that works fine, as in
>> every distro on earth.
>>
>> Hehe, but I seldom use distro kernels, not even when I used Red
>> Hat or Mandrake in old times :-)
>
>I tried that with Ubuntu 8.04 and the resulting kernel wouldn't boot.
>Only when I went through the process of making the ".deb" and
>installing that did the new kernel start properly. I didn't
>investigate it thoroughly as I was only testing one patch - I quickly
>fled back to openSUSE.
>
>Larry

I've been doing that for years, Larry.  I use a couple of scripts that I edit 
the version & patch names in, one to build the src tree, and one to actually 
do the compile & install, leaving me to edit grub.conf/menu.lst.  I can fwd 
them if you like.  Currently running 2.6.27-rc3, much smoother than any 
fedora released kernel.

Which I did try for about 12 hours recently, just long enough for the nvidia 
driver to scribble all over the system and when I had re-installed the radeon 
card, I had a goodly amount of my .kde to recover from amanda's carefully 
kept backups. !*&%$^%&@ nvidia crap drivers.

-- 
Cheers, Gene
"There are four boxes to be used in defense of liberty:
 soap, ballot, jury, and ammo. Please use in that order."
-Ed Howdershelt (Author)
Measure with a micrometer.  Mark with chalk.  Cut with an axe.


From fmarass at gmail.com  Tue Aug 19 06:25:40 2008
From: fmarass at gmail.com (Francesco Marass)
Date: Mon, 18 Aug 2008 21:25:40 -0700
Subject: sudden wlan0 no scan results
In-Reply-To: <48A8E09F.2020407@lwfinger.net>
References: <4016b2fa0808142339i5e88e787tfbc7c014d607f225@mail.gmail.com>
	<48A8539C.7000805@lwfinger.net>
	<4016b2fa0808171858h39ad9783ic57debe0c1c11661@mail.gmail.com>
	<48A8E09F.2020407@lwfinger.net>
Message-ID: <4016b2fa0808182125l620ecee3l8a9be1f2cd8c3277@mail.gmail.com>

I'm not using WPA but WEP for now, so the wpa_supplicant script
figures that out and exits without problems. NetworkManager is running
and this is what syslog says about it:

Aug 18 09:41:21 febian NetworkManager: <WARN>  nm_signal_handler():
Caught signal 15, shutting down normally.
Aug 18 09:41:21 febian NetworkManager: <info>  Caught terminiation signal
Aug 18 09:41:21 febian NetworkManager: <debug> [1219077681.283986]
nm_print_open_socks(): Open Sockets List:
Aug 18 09:41:21 febian NetworkManager: <debug> [1219077681.284081]
nm_print_open_socks(): Open Sockets List Done.
Aug 18 09:41:21 febian NetworkManager: <info>  Deactivating device eth1.
Aug 18 19:52:46 febian kernel: udev: renamed network interface eth0 to eth1
Aug 18 19:52:51 febian avahi-daemon[5860]: Network interface
enumeration completed.
Aug 18 19:52:55 febian NetworkManager: <info>  starting...
Aug 18 19:52:55 febian NetworkManager: <info>  New VPN service
'openvpn' (org.freedesktop.NetworkManager.openvpn).
Aug 18 19:52:55 febian NetworkManager: <info>  New VPN service 'vpnc'
(org.freedesktop.NetworkManager.vpnc).
Aug 18 19:52:56 febian NetworkManager: <info>  eth1: Device is
fully-supported using driver 'tg3'.
Aug 18 19:52:56 febian NetworkManager: <info>  nm_device_init():
waiting for device's worker thread to start
Aug 18 19:52:57 febian NetworkManager: <info>  nm_device_init():
device's worker thread started, continuing.
Aug 18 19:52:57 febian NetworkManager: <info>  Now managing wired
Ethernet (802.3) device 'eth1'.
Aug 18 19:52:57 febian NetworkManager: <info>  Deactivating device eth1.
Aug 18 19:52:57 febian NetworkManager: <info>  Will activate wired
connection 'eth1' because it now has a link.
Aug 18 19:52:57 febian NetworkManager: <info>  SWITCH: no current
connection, found better connection 'eth1'.
Aug 18 19:52:57 febian NetworkManager: <info>  Will activate connection 'eth1'.
Aug 18 19:52:57 febian NetworkManager: <info>  Device eth1 activation
scheduled...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) started...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
1 of 5 (Device Prepare) scheduled...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
1 of 5 (Device Prepare) started...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
2 of 5 (Device Configure) scheduled...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
1 of 5 (Device Prepare) complete.
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
2 of 5 (Device Configure) starting...
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
2 of 5 (Device Configure) successful.
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
3 of 5 (IP Configure Start) scheduled.
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
2 of 5 (Device Configure) complete.
Aug 18 19:52:57 febian NetworkManager: <info>  Activation (eth1) Stage
3 of 5 (IP Configure Start) started...
Aug 18 19:52:58 febian NetworkManager: <info>  Activation (eth1)
Beginning DHCP transaction.
Aug 18 19:52:58 febian NetworkManager: <info>  Activation (eth1) Stage
3 of 5 (IP Configure Start) complete.
Aug 18 19:52:58 febian NetworkManager: <info>  DHCP daemon state is
now 12 (successfully started) for interface eth1
Aug 18 19:52:59 febian NetworkManager: <info>  DHCP daemon state is
now 1 (starting) for interface eth1
Aug 18 19:53:00 febian NetworkManager: <info>  DHCP daemon state is
now 4 (reboot) for interface eth1
Aug 18 19:53:00 febian NetworkManager: <info>  Activation (eth1) Stage
4 of 5 (IP Configure Get) scheduled...
Aug 18 19:53:00 febian NetworkManager: <info>  Activation (eth1) Stage
4 of 5 (IP Configure Get) started...
Aug 18 19:53:00 febian NetworkManager: <info>  Retrieved the following
IP4 configuration from the DHCP daemon:
Aug 18 19:53:00 febian NetworkManager: <info>    address 192.168.1.103
Aug 18 19:53:00 febian NetworkManager: <info>    netmask 255.255.255.0
Aug 18 19:53:00 febian NetworkManager: <info>    broadcast 192.168.1.255
Aug 18 19:53:00 febian NetworkManager: <info>    gateway 192.168.1.1
Aug 18 19:53:00 febian NetworkManager: <info>    nameserver 64.59.160.13
Aug 18 19:53:00 febian NetworkManager: <info>    nameserver 64.59.160.15
Aug 18 19:53:00 febian NetworkManager: <info>    domain name 'gv.shawcable.net'
Aug 18 19:53:00 febian NetworkManager: <info>  Activation (eth1) Stage
5 of 5 (IP Configure Commit) scheduled...
Aug 18 19:53:00 febian NetworkManager: <info>  Activation (eth1) Stage
4 of 5 (IP Configure Get) complete.
Aug 18 19:53:00 febian NetworkManager: <info>  Activation (eth1) Stage
5 of 5 (IP Configure Commit) started...
Aug 18 19:53:01 febian NetworkManager: <info>  DHCP returned name
servers but system has disabled dynamic modification!
Aug 18 19:53:01 febian NetworkManager: <info>  Activation (eth1)
Finish handler scheduled.
Aug 18 19:53:01 febian NetworkManager: <info>  Activation (eth1) Stage
5 of 5 (IP Configure Commit) complete.
Aug 18 19:53:01 febian NetworkManager: <info>  Activation (eth1)
successful, device activated.

There is no mention of wlan0, even after an ifconfig wlan0 up.



On 8/17/08, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> Francesco Marass wrote:
>> Thank you for your reply.
>>
>> There is no iface command: I was not clear enough and just pasted the
>> /etc/network/interfaces iface stanza for my wireless. So
>>
>> iface wlan0 inet dhcp
>>   wireless-essid XXXX
>>   wireless-key YYYY
>>
>> is how my wlan0 interface is configured within /etc/network/interfaces.
>>
>> I did not really make changes to the system. I did install some
>> SELinux packages, but right after I purged for various reasons.
>>
>> How do I turn on the interface, if after my attempts (with ifup,
>> iwconfig, network-manager, ...) I still do not get scan results? (I
>> wonder whether I am even able to scan, or just do not find networks)
>
> It looks as if something is wrong with wpa_supplicant. When using NM,
> please check your 'ps ax' listing to see that it is running. In
> addition, look at the NetworkManager log in /var/log to see what it says.
>
> Larry
>


From zajec5polish at gmail.com  Tue Aug 19 08:32:27 2008
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Tue, 19 Aug 2008 08:32:27 +0200
Subject: Progress in open source firmware stopped?
Message-ID: <14b026160808182332ud109f79l59529288dcf540de@mail.gmail.com>

Checking your git Michael at
http://bu3sch.de/gitweb?p=b43-ucode.git;a=summary
I can see last update on 2008-07-22.

Just wanted to ask about status of this open source firmware. Are you
going to develop this anymore? Is there some problem stopping
development? Or you are simply little busy to work on it?

-- 
Rafa? Mi?ecki

From mb at bu3sch.de  Tue Aug 19 17:30:54 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 19 Aug 2008 17:30:54 +0200
Subject: Progress in open source firmware stopped?
In-Reply-To: <14b026160808182332ud109f79l59529288dcf540de@mail.gmail.com>
References: <14b026160808182332ud109f79l59529288dcf540de@mail.gmail.com>
Message-ID: <200808191730.54360.mb@bu3sch.de>

On Tuesday 19 August 2008 08:32:27 Rafa? Mi?ecki wrote:
> Checking your git Michael at
> http://bu3sch.de/gitweb?p=b43-ucode.git;a=summary
> I can see last update on 2008-07-22.
> 
> Just wanted to ask about status of this open source firmware. Are you
> going to develop this anymore? Is there some problem stopping
> development? Or you are simply little busy to work on it?

I'm busy with other things

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Aug 19 17:40:53 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Tue, 19 Aug 2008 08:40:53 -0700
Subject: Progress in open source firmware stopped?
In-Reply-To: <200808191730.54360.mb@bu3sch.de>
References: <14b026160808182332ud109f79l59529288dcf540de@mail.gmail.com>
	<200808191730.54360.mb@bu3sch.de>
Message-ID: <48AAE985.7060006@wetwork.net>

What kind of things?  Are they baked goods?  Do they have sugar on top?  
Don't keep us in suspense.

Ehud

Michael Buesch wrote:
> On Tuesday 19 August 2008 08:32:27 Rafa? Mi?ecki wrote:
>   
>> Checking your git Michael at
>> http://bu3sch.de/gitweb?p=b43-ucode.git;a=summary
>> I can see last update on 2008-07-22.
>>
>> Just wanted to ask about status of this open source firmware. Are you
>> going to develop this anymore? Is there some problem stopping
>> development? Or you are simply little busy to work on it?
>>     
>
> I'm busy with other things
>
>   


From mb at bu3sch.de  Tue Aug 19 18:16:09 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 19 Aug 2008 18:16:09 +0200
Subject: Progress in open source firmware stopped?
In-Reply-To: <48AAE985.7060006@wetwork.net>
References: <14b026160808182332ud109f79l59529288dcf540de@mail.gmail.com>
	<200808191730.54360.mb@bu3sch.de> <48AAE985.7060006@wetwork.net>
Message-ID: <200808191816.09173.mb@bu3sch.de>

On Tuesday 19 August 2008 17:40:53 gavron at wetwork.net wrote:
> What kind of things?  Are they baked goods?  Do they have sugar on top?  
> Don't keep us in suspense.

Unrelated to this project. See my website and git repositories for a subset of it.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Tue Aug 19 19:50:31 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 19 Aug 2008 12:50:31 -0500
Subject: [PATCH] ssb: Update for Rev. 5 SPROM
Message-ID: <48ab07e7.X4EO+1uHeB9cIHfj%Larry.Finger@lwfinger.net>

Although a revision 5 SPROM has not been seen in the wild, the
open-source portion of the MIPS driver 4.150.10.5 describes its
layout, which is mostly inherited from revision 4. This patch
implements the differences.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This is 2.6.28 material. As we have not yet seen a rev 5 SPROM,
this material has only been compile tested, but it should be
put into the kernel before the stuff for rev 8 that will be
needed for the LP PHY.

Larry
---

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -399,14 +399,19 @@ static void sprom_extract_r123(struct ss
 	out->antenna_gain.ghz5.a3 = gain;
 }
 
-static void sprom_extract_r4(struct ssb_sprom *out, const u16 *in)
+static void sprom_extract_r45(struct ssb_sprom *out, const u16 *in)
 {
 	int i;
 	u16 v;
+	u16 il0mac_offset;
 
+	if (out->revision == 4)
+		il0mac_offset = SSB_SPROM4_IL0MAC;
+	else
+		il0mac_offset = SSB_SPROM5_IL0MAC;
 	/* extract the equivalent of the r1 variables */
 	for (i = 0; i < 3; i++) {
-		v = in[SPOFF(SSB_SPROM4_IL0MAC) + i];
+		v = in[SPOFF(il0mac_offset) + i];
 		*(((__be16 *)out->il0mac) + i) = cpu_to_be16(v);
 	}
 	for (i = 0; i < 3; i++) {
@@ -420,9 +425,15 @@ static void sprom_extract_r4(struct ssb_
 	SPEX(et0phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET0A, 0);
 	SPEX(et1phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET1A,
 	     SSB_SPROM4_ETHPHY_ET1A_SHIFT);
-	SPEX(country_code, SSB_SPROM4_CCODE, 0xFFFF, 0);
-	SPEX(boardflags_lo, SSB_SPROM4_BFLLO, 0xFFFF, 0);
-	SPEX(boardflags_hi, SSB_SPROM4_BFLHI, 0xFFFF, 0);
+	if (out->revision == 4) {
+		SPEX(country_code, SSB_SPROM4_CCODE, 0xFFFF, 0);
+		SPEX(boardflags_lo, SSB_SPROM4_BFLLO, 0xFFFF, 0);
+		SPEX(boardflags_hi, SSB_SPROM4_BFLHI, 0xFFFF, 0);
+	} else {
+		SPEX(country_code, SSB_SPROM5_CCODE, 0xFFFF, 0);
+		SPEX(boardflags_lo, SSB_SPROM5_BFLLO, 0xFFFF, 0);
+		SPEX(boardflags_hi, SSB_SPROM5_BFLHI, 0xFFFF, 0);
+	}
 	SPEX(ant_available_a, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_A,
 	     SSB_SPROM4_ANTAVAIL_A_SHIFT);
 	SPEX(ant_available_bg, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_BG,
@@ -433,12 +444,21 @@ static void sprom_extract_r4(struct ssb_
 	SPEX(maxpwr_a, SSB_SPROM4_MAXP_A, SSB_SPROM4_MAXP_A_MASK, 0);
 	SPEX(itssi_a, SSB_SPROM4_MAXP_A, SSB_SPROM4_ITSSI_A,
 	     SSB_SPROM4_ITSSI_A_SHIFT);
-	SPEX(gpio0, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P0, 0);
-	SPEX(gpio1, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P1,
-	     SSB_SPROM4_GPIOA_P1_SHIFT);
-	SPEX(gpio2, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P2, 0);
-	SPEX(gpio3, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P3,
-	     SSB_SPROM4_GPIOB_P3_SHIFT);
+	if (out->revision == 4) {
+		SPEX(gpio0, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P0, 0);
+		SPEX(gpio1, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P1,
+		     SSB_SPROM4_GPIOA_P1_SHIFT);
+		SPEX(gpio2, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P2, 0);
+		SPEX(gpio3, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P3,
+		     SSB_SPROM4_GPIOB_P3_SHIFT);
+	} else {
+		SPEX(gpio0, SSB_SPROM5_GPIOA, SSB_SPROM5_GPIOA_P0, 0);
+		SPEX(gpio1, SSB_SPROM5_GPIOA, SSB_SPROM5_GPIOA_P1,
+		     SSB_SPROM5_GPIOA_P1_SHIFT);
+		SPEX(gpio2, SSB_SPROM5_GPIOB, SSB_SPROM5_GPIOB_P2, 0);
+		SPEX(gpio3, SSB_SPROM5_GPIOB, SSB_SPROM5_GPIOB_P3,
+		     SSB_SPROM5_GPIOB_P3_SHIFT);
+	}
 
 	/* Extract the antenna gain values. */
 	SPEX(antenna_gain.ghz24.a0, SSB_SPROM4_AGAIN01,
@@ -471,16 +491,16 @@ static int sprom_extract(struct ssb_bus
 	} else if (bus->chip_id == 0x4321) {
 		/* the BCM4328 has a chipid == 0x4321 and a rev 4 SPROM */
 		out->revision = 4;
-		sprom_extract_r4(out, in);
+		sprom_extract_r45(out, in);
 	} else {
 		if (out->revision == 0)
 			goto unsupported;
 		if (out->revision >= 1 && out->revision <= 3) {
 			sprom_extract_r123(out, in);
 		}
-		if (out->revision == 4)
-			sprom_extract_r4(out, in);
-		if (out->revision >= 5)
+		if (out->revision == 4 || out->revision == 5)
+			sprom_extract_r45(out, in);
+		if (out->revision > 5)
 			goto unsupported;
 	}
 
Index: wireless-testing/include/linux/ssb/ssb_regs.h
===================================================================
--- wireless-testing.orig/include/linux/ssb/ssb_regs.h
+++ wireless-testing/include/linux/ssb/ssb_regs.h
@@ -316,6 +316,21 @@
 #define SSB_SPROM4_PA1B1		0x1090
 #define SSB_SPROM4_PA1B2		0x1092
 
+/* SPROM Revision 5 (inherits most data from rev 4) */
+#define SSB_SPROM5_BFLLO		0x104A	/* Boardflags (low 16 bits) */
+#define SSB_SPROM5_BFLHI		0x104C  /* Board Flags Hi */
+#define SSB_SPROM5_IL0MAC		0x1052	/* 6 byte MAC address for a/b/g/n */
+#define SSB_SPROM5_CCODE		0x1044	/* Country Code (2 bytes) */
+#define SSB_SPROM5_GPIOA		0x1076	/* Gen. Purpose IO # 0 and 1 */
+#define  SSB_SPROM5_GPIOA_P0		0x00FF	/* Pin 0 */
+#define  SSB_SPROM5_GPIOA_P1		0xFF00	/* Pin 1 */
+#define  SSB_SPROM5_GPIOA_P1_SHIFT	8
+#define SSB_SPROM5_GPIOB		0x1078	/* Gen. Purpose IO # 2 and 3 */
+#define  SSB_SPROM5_GPIOB_P2		0x00FF	/* Pin 2 */
+#define  SSB_SPROM5_GPIOB_P3		0xFF00	/* Pin 3 */
+#define  SSB_SPROM5_GPIOB_P3_SHIFT	8
+
+
 /* Values for SSB_SPROM1_BINF_CCODE */
 enum {
 	SSB_SPROM1CCODE_WORLD = 0,


From mb at bu3sch.de  Tue Aug 19 19:53:08 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 19 Aug 2008 19:53:08 +0200
Subject: [PATCH] ssb: Update for Rev. 5 SPROM
In-Reply-To: <48ab07e7.X4EO+1uHeB9cIHfj%Larry.Finger@lwfinger.net>
References: <48ab07e7.X4EO+1uHeB9cIHfj%Larry.Finger@lwfinger.net>
Message-ID: <200808191953.08723.mb@bu3sch.de>

On Tuesday 19 August 2008 19:50:31 Larry Finger wrote:
> Although a revision 5 SPROM has not been seen in the wild, the
> open-source portion of the MIPS driver 4.150.10.5 describes its
> layout, which is mostly inherited from revision 4. This patch
> implements the differences.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

Acked-by: Michael Buesch <mb at bu3sch.de>

> ---
> 
> John,
> 
> This is 2.6.28 material. As we have not yet seen a rev 5 SPROM,
> this material has only been compile tested, but it should be
> put into the kernel before the stuff for rev 8 that will be
> needed for the LP PHY.
> 
> Larry
> ---
> 
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -399,14 +399,19 @@ static void sprom_extract_r123(struct ss
>  	out->antenna_gain.ghz5.a3 = gain;
>  }
>  
> -static void sprom_extract_r4(struct ssb_sprom *out, const u16 *in)
> +static void sprom_extract_r45(struct ssb_sprom *out, const u16 *in)
>  {
>  	int i;
>  	u16 v;
> +	u16 il0mac_offset;
>  
> +	if (out->revision == 4)
> +		il0mac_offset = SSB_SPROM4_IL0MAC;
> +	else
> +		il0mac_offset = SSB_SPROM5_IL0MAC;
>  	/* extract the equivalent of the r1 variables */
>  	for (i = 0; i < 3; i++) {
> -		v = in[SPOFF(SSB_SPROM4_IL0MAC) + i];
> +		v = in[SPOFF(il0mac_offset) + i];
>  		*(((__be16 *)out->il0mac) + i) = cpu_to_be16(v);
>  	}
>  	for (i = 0; i < 3; i++) {
> @@ -420,9 +425,15 @@ static void sprom_extract_r4(struct ssb_
>  	SPEX(et0phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET0A, 0);
>  	SPEX(et1phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET1A,
>  	     SSB_SPROM4_ETHPHY_ET1A_SHIFT);
> -	SPEX(country_code, SSB_SPROM4_CCODE, 0xFFFF, 0);
> -	SPEX(boardflags_lo, SSB_SPROM4_BFLLO, 0xFFFF, 0);
> -	SPEX(boardflags_hi, SSB_SPROM4_BFLHI, 0xFFFF, 0);
> +	if (out->revision == 4) {
> +		SPEX(country_code, SSB_SPROM4_CCODE, 0xFFFF, 0);
> +		SPEX(boardflags_lo, SSB_SPROM4_BFLLO, 0xFFFF, 0);
> +		SPEX(boardflags_hi, SSB_SPROM4_BFLHI, 0xFFFF, 0);
> +	} else {
> +		SPEX(country_code, SSB_SPROM5_CCODE, 0xFFFF, 0);
> +		SPEX(boardflags_lo, SSB_SPROM5_BFLLO, 0xFFFF, 0);
> +		SPEX(boardflags_hi, SSB_SPROM5_BFLHI, 0xFFFF, 0);
> +	}
>  	SPEX(ant_available_a, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_A,
>  	     SSB_SPROM4_ANTAVAIL_A_SHIFT);
>  	SPEX(ant_available_bg, SSB_SPROM4_ANTAVAIL, SSB_SPROM4_ANTAVAIL_BG,
> @@ -433,12 +444,21 @@ static void sprom_extract_r4(struct ssb_
>  	SPEX(maxpwr_a, SSB_SPROM4_MAXP_A, SSB_SPROM4_MAXP_A_MASK, 0);
>  	SPEX(itssi_a, SSB_SPROM4_MAXP_A, SSB_SPROM4_ITSSI_A,
>  	     SSB_SPROM4_ITSSI_A_SHIFT);
> -	SPEX(gpio0, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P0, 0);
> -	SPEX(gpio1, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P1,
> -	     SSB_SPROM4_GPIOA_P1_SHIFT);
> -	SPEX(gpio2, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P2, 0);
> -	SPEX(gpio3, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P3,
> -	     SSB_SPROM4_GPIOB_P3_SHIFT);
> +	if (out->revision == 4) {
> +		SPEX(gpio0, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P0, 0);
> +		SPEX(gpio1, SSB_SPROM4_GPIOA, SSB_SPROM4_GPIOA_P1,
> +		     SSB_SPROM4_GPIOA_P1_SHIFT);
> +		SPEX(gpio2, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P2, 0);
> +		SPEX(gpio3, SSB_SPROM4_GPIOB, SSB_SPROM4_GPIOB_P3,
> +		     SSB_SPROM4_GPIOB_P3_SHIFT);
> +	} else {
> +		SPEX(gpio0, SSB_SPROM5_GPIOA, SSB_SPROM5_GPIOA_P0, 0);
> +		SPEX(gpio1, SSB_SPROM5_GPIOA, SSB_SPROM5_GPIOA_P1,
> +		     SSB_SPROM5_GPIOA_P1_SHIFT);
> +		SPEX(gpio2, SSB_SPROM5_GPIOB, SSB_SPROM5_GPIOB_P2, 0);
> +		SPEX(gpio3, SSB_SPROM5_GPIOB, SSB_SPROM5_GPIOB_P3,
> +		     SSB_SPROM5_GPIOB_P3_SHIFT);
> +	}
>  
>  	/* Extract the antenna gain values. */
>  	SPEX(antenna_gain.ghz24.a0, SSB_SPROM4_AGAIN01,
> @@ -471,16 +491,16 @@ static int sprom_extract(struct ssb_bus
>  	} else if (bus->chip_id == 0x4321) {
>  		/* the BCM4328 has a chipid == 0x4321 and a rev 4 SPROM */
>  		out->revision = 4;
> -		sprom_extract_r4(out, in);
> +		sprom_extract_r45(out, in);
>  	} else {
>  		if (out->revision == 0)
>  			goto unsupported;
>  		if (out->revision >= 1 && out->revision <= 3) {
>  			sprom_extract_r123(out, in);
>  		}
> -		if (out->revision == 4)
> -			sprom_extract_r4(out, in);
> -		if (out->revision >= 5)
> +		if (out->revision == 4 || out->revision == 5)
> +			sprom_extract_r45(out, in);
> +		if (out->revision > 5)
>  			goto unsupported;
>  	}
>  
> Index: wireless-testing/include/linux/ssb/ssb_regs.h
> ===================================================================
> --- wireless-testing.orig/include/linux/ssb/ssb_regs.h
> +++ wireless-testing/include/linux/ssb/ssb_regs.h
> @@ -316,6 +316,21 @@
>  #define SSB_SPROM4_PA1B1		0x1090
>  #define SSB_SPROM4_PA1B2		0x1092
>  
> +/* SPROM Revision 5 (inherits most data from rev 4) */
> +#define SSB_SPROM5_BFLLO		0x104A	/* Boardflags (low 16 bits) */
> +#define SSB_SPROM5_BFLHI		0x104C  /* Board Flags Hi */
> +#define SSB_SPROM5_IL0MAC		0x1052	/* 6 byte MAC address for a/b/g/n */
> +#define SSB_SPROM5_CCODE		0x1044	/* Country Code (2 bytes) */
> +#define SSB_SPROM5_GPIOA		0x1076	/* Gen. Purpose IO # 0 and 1 */
> +#define  SSB_SPROM5_GPIOA_P0		0x00FF	/* Pin 0 */
> +#define  SSB_SPROM5_GPIOA_P1		0xFF00	/* Pin 1 */
> +#define  SSB_SPROM5_GPIOA_P1_SHIFT	8
> +#define SSB_SPROM5_GPIOB		0x1078	/* Gen. Purpose IO # 2 and 3 */
> +#define  SSB_SPROM5_GPIOB_P2		0x00FF	/* Pin 2 */
> +#define  SSB_SPROM5_GPIOB_P3		0xFF00	/* Pin 3 */
> +#define  SSB_SPROM5_GPIOB_P3_SHIFT	8
> +
> +
>  /* Values for SSB_SPROM1_BINF_CCODE */
>  enum {
>  	SSB_SPROM1CCODE_WORLD = 0,
> 
> 



-- 
Greetings Michael.


From ccmcphe at verizon.net  Tue Aug 19 22:28:06 2008
From: ccmcphe at verizon.net (Tex)
Date: Tue, 19 Aug 2008 16:28:06 -0400
Subject: Cannot gain access to AP
In-Reply-To: <48A84C54.3070106@lwfinger.net>
References: <48A6F93B.2060807@verizon.net> <48A6FB94.6020102@verizon.net>
	<48A84C54.3070106@lwfinger.net>
Message-ID: <48AB2CD6.9070606@verizon.net>

Larry Finger wrote:
> Tex wrote:
>> I'm sorry, the linux version is the base UBUNTU 2.6.24-19-generic not 
>> 2.6.25.9 (I haven't tested that 1 yet).
>>
>>
>> Tex wrote:
>>> When I use the baseline modules from linux-2.6.25.9, I cannot 
>>> associate with my access points, and I can't even go into monitor 
>>> mode, the MAC address is also random.  if I use the compat_wireless 
>>> (snapshot of 06-21) I can associate with my access points and I can 
>>> even go into monitor mode. I'm currently using x86 with Broadcom 
>>> 4318 CF (PCMCIA):
>>>
>>> Thanks in advance for your help
>>> Tex
>>>
>>> (FYI: 00deadbeef = fake key)
>>> Commands entered and command results:
>>> root at ubuntu:/var/log# iwconfig wlan0 essid trackcoach2 key 
>>> 00deadbeef chann 4
>>> root at ubuntu:/var/log# iwconfig
>>> lo        no wireless extensions.
>>>
>>> eth0      no wireless extensions.
>>>
>>> wmaster0  no wireless extensions.
>>>
>>> wlan0     IEEE 802.11  ESSID:"trackcoach2"          Mode:Managed  
>>> Frequency:2.427 GHz  Access Point: 00:15:05:EC:2E:54           Bit 
>>> Rate=1 Mb/s   Tx-Power=27 dBm           Retry min limit:7   RTS 
>>> thr:off   Fragment thr=2352 B           Encryption key:0FB3-CFC8-78
>>>          Link Quality=68/100  Signal level:-43 dBm  Noise level=-72 dBm
>>>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>>>
>>>
>>> snapshot for kern.log running compat_wireless source dated 06-21:
>>>
>>> Aug 16 11:17:28 ubuntu kernel: [  980.756067] ssb: Core 0 found: 
>>> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
>>> Aug 16 11:17:28 ubuntu kernel: [  980.756182] ssb: Core 1 found: 
>>> IEEE 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
>>> Aug 16 11:17:28 ubuntu kernel: [  980.756287] ssb: Core 2 found: PCI 
>>> (cc 0x804, rev 0x0C, vendor 0x4243)
>>> Aug 16 11:17:28 ubuntu kernel: [  980.756391] ssb: Core 3 found: 
>>> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
>>> Aug 16 11:17:28 ubuntu kernel: [  980.841103] ssb: Sonics Silicon 
>>> Backplane found on PCMCIA device pcmcia0.0
>>> Aug 16 11:17:28 ubuntu kernel: [  980.843423] b43-phy2: Broadcom 
>>> 4318 WLAN found
>>> Aug 16 11:17:28 ubuntu kernel: [  980.864824] b43-phy2 debug: Found 
>>> PHY: Analog 3, Type 2, Revision 7
>>> Aug 16 11:17:28 ubuntu kernel: [  980.864861] b43-phy2 debug: Found 
>>> Radio: Manuf 0x17F, Version 0x2050, Revision 8
>>> Aug 16 11:17:28 ubuntu kernel: [  980.890769] phy2: Selected rate 
>>> control algorithm 'pid'
>>> Aug 16 11:17:28 ubuntu kernel: [  980.894425] Broadcom 43xx driver 
>>> loaded [ Features: PMLR, Firmware-ID: FW13 ]
>>> Aug 16 11:17:28 ubuntu kernel: [  981.037152] input: b43-phy2 as 
>>> /class/input/input13
>>>
>>> Aug 16 11:17:29 ubuntu kernel: [  981.286962] b43-phy2: Loading 
>>> firmware version 410.2160 (2007-05-26 15:32:10)
>>> Aug 16 11:17:29 ubuntu kernel: [  981.386914] b43-phy2 debug: Chip 
>>> initialized
>>> Aug 16 11:17:29 ubuntu kernel: [  981.387163] b43-phy2 debug: PIO 
>>> initialized
>>> Aug 16 11:17:29 ubuntu kernel: [  981.394286] Registered led device: 
>>> b43-phy2::tx
>>> Aug 16 11:17:29 ubuntu kernel: [  981.395342] Registered led device: 
>>> b43-phy2::rx
>>> Aug 16 11:17:29 ubuntu kernel: [  981.396162] Registered led device: 
>>> b43-phy2::radio
>>> Aug 16 11:17:29 ubuntu kernel: [  981.396236] b43-phy2 debug: 
>>> Wireless interface started
>>> Aug 16 11:17:29 ubuntu kernel: [  981.422452] b43-phy2 debug: Adding 
>>> Interface type 2
>>> Aug 16 11:17:29 ubuntu kernel: [  981.434619] ADDRCONF(NETDEV_UP): 
>>> wlan0: link is not ready
>>> Aug 16 11:17:40 ubuntu kernel: [  992.409510] b43-phy2 debug: Using 
>>> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
>>> Aug 16 11:17:41 ubuntu kernel: [  993.176152] wlan0: Initial auth_alg=0
>>> Aug 16 11:17:41 ubuntu kernel: [  993.176171] wlan0: authenticate 
>>> with AP 00:15:05:ec:2e:54
>>> Aug 16 11:17:41 ubuntu kernel: [  993.185280] wlan0: RX 
>>> authentication from 00:15:05:ec:2e:54 (alg=0 transaction=2 status=0)
>>> Aug 16 11:17:41 ubuntu kernel: [  993.185290] wlan0: authenticated
>>> Aug 16 11:17:41 ubuntu kernel: [  993.185297] wlan0: associate with 
>>> AP 00:15:05:ec:2e:54
>>> Aug 16 11:17:41 ubuntu kernel: [  993.187344] wlan0: RX AssocResp 
>>> from 00:15:05:ec:2e:54 (capab=0x431 status=0 aid=2)
>>> Aug 16 11:17:41 ubuntu kernel: [  993.187351] wlan0: associated
>>> Aug 16 11:17:41 ubuntu kernel: [  993.188636] 
>>> ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
>>>
>>>
>>>
>>> Commands entered:
>>> iwconfig wlan0 essid trackcoach2 key 00deadbeef chann 4
>>> root at ubuntu:~# iwconfig
>>> lo        no wireless extensions.
>>>
>>> eth0      no wireless extensions.
>>>
>>> wmaster0  no wireless extensions.
>>>
>>> wlan0     IEEE 802.11g  ESSID:"trackcoach2"          Mode:Managed  
>>> Frequency:2.427 GHz  Access Point: Not-Associated           
>>> Tx-Power=27 dBm           Retry min limit:7   RTS thr:off   Fragment 
>>> thr=2352 B           Encryption key:0FB3-CFC8-78
>>>          Link Quality:0  Signal level:0  Noise level:0
>>>          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>>>          Tx excessive retries:0  Invalid misc:0   Missed beacon:0
>>>
>>>
>>>
>>> Kernel log file using linux base linux-2.6.25.9:
>>> Aug 16 11:46:49 ubuntu kernel: [  674.570729] pcmcia: registering 
>>> new device pcmcia0.0
>>> Aug 16 11:46:50 ubuntu kernel: [  675.248587] ssb: Core 0 found: 
>>> ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
>>> Aug 16 11:46:50 ubuntu kernel: [  675.248733] ssb: Core 1 found: 
>>> IEEE 802.11 (cc 0x812, rev 0x09, vendor 0x4243)
>>> Aug 16 11:46:50 ubuntu kernel: [  675.248839] ssb: Core 2 found: PCI 
>>> (cc 0x804, rev 0x0C, vendor 0x4243)
>>> Aug 16 11:46:50 ubuntu kernel: [  675.248943] ssb: Core 3 found: 
>>> PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
>>> Aug 16 11:46:50 ubuntu kernel: [  675.258113] ssb: Sonics Silicon 
>>> Backplane found on PCMCIA device pcmcia0.0
>>> Aug 16 11:46:50 ubuntu kernel: [  675.260339] b43-phy0: Broadcom 
>>> 4318 WLAN found
>>> Aug 16 11:46:50 ubuntu kernel: [  675.280772] b43-phy0 debug: Found 
>>> PHY: Analog 3, Type 2, Revision 7
>>> Aug 16 11:46:50 ubuntu kernel: [  675.280810] b43-phy0 debug: Found 
>>> Radio: Manuf 0x17F, Version 0x2050, Revision 8
>>> Aug 16 11:46:50 ubuntu kernel: [  675.306686] phy0: Selected rate 
>>> control algorithm 'pid'
>>> Aug 16 11:46:50 ubuntu kernel: [  675.527595] Broadcom 43xx driver 
>>> loaded [ Features: PMLR, Firmware-ID: FW13 ]
>>> Aug 16 11:46:50 ubuntu kernel: [  675.712722] input: b43-phy0 as 
>>> /class/input/input9
>>> Aug 16 11:46:50 ubuntu kernel: [  675.978279] b43-phy0: Loading 
>>> firmware version 410.2160 (2007-05-26 15:32:10)
>>> Aug 16 11:46:52 ubuntu kernel: [  677.227536] b43-phy0 debug: Chip 
>>> initialized
>>> Aug 16 11:46:52 ubuntu kernel: [  677.229015] b43-phy0 debug: 32-bit 
>>> DMA initialized
>>> Aug 16 11:46:52 ubuntu kernel: [  677.235404] b43-phy0 debug: 
>>> Wireless interface started
>>> Aug 16 11:46:52 ubuntu kernel: [  677.258321] b43-phy0 debug: Adding 
>>> Interface type 2
>>> Aug 16 11:46:52 ubuntu kernel: [  677.270523] ADDRCONF(NETDEV_UP): 
>>> wlan0: link is not ready
>>> Aug 16 11:47:06 ubuntu kernel: [  691.850496] b43-phy0 debug: Using 
>>> hardware based encryption for keyidx: 0, mac: ff:ff:ff:ff:ff:ff
>
> Please provide two extra pieces of information:
>
> (1) From the command 'lspci -nnv', post the first two lines that 
> describe your BCM4318.
>
> (2) Post the ooutput from 'ifconfig'
>
> Larry
>
The ifconfig is:

eth0      Link encap:Ethernet  HWaddr 00:08:02:93:eb:7a 
          inet addr:192.168.1.12  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::208:2ff:fe93:eb7a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:3489 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2073 errors:0 dropped:0 overruns:0 carrier:0
          collisions:27 txqueuelen:1000
          RX bytes:478898 (467.6 KB)  TX bytes:311913 (304.6 KB)

lo        Link encap:Local Loopback 
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

wlan0     Link encap:Ethernet  HWaddr fe:d2:a5:61:e7:3f  <-------------- 
Bad MAC Address
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

wmaster0  Link encap:UNSPEC  HWaddr 
FE-D2-A5-61-E7-3F-00-00-00-00-00-00-00-00-00-00 
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root at ubuntu:~#

The lspci -nnv is : (You won't see the Broadcom here, it's below on the 
PCMCIA)

root at ubuntu:~# lspci -nnv
00:00.0 Host bridge [0600]: Intel Corporation 82845 845 [Brookdale] 
Chipset Host Bridge [8086:1a30] (rev 04)
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, fast devsel, latency 0
    Memory at 60000000 (32-bit, prefetchable) [size=256M]
    Capabilities: [e4] Vendor Specific Information
    Capabilities: [a0] AGP version 2.0

00:01.0 PCI bridge [0604]: Intel Corporation 82845 845 [Brookdale] 
Chipset AGP Bridge [8086:1a31] (rev 04) (prog-if 00 [Normal decode])
    Flags: bus master, 66MHz, fast devsel, latency 64
    Bus: primary=00, secondary=01, subordinate=01, sec-latency=0
    I/O behind bridge: 00003000-00003fff
    Memory behind bridge: 40400000-404fffff
    Prefetchable memory behind bridge: 48000000-4fffffff

00:1e.0 PCI bridge [0604]: Intel Corporation 82801 Mobile PCI Bridge 
[8086:2448] (rev 42) (prog-if 00 [Normal decode])
    Flags: bus master, fast devsel, latency 0
    Bus: primary=00, secondary=02, subordinate=07, sec-latency=32
    I/O behind bridge: 00002000-00002fff
    Memory behind bridge: 40000000-403fffff
    Prefetchable memory behind bridge: 50000000-57ffffff

00:1f.0 ISA bridge [0601]: Intel Corporation 82801CAM ISA Bridge (LPC) 
[8086:248c] (rev 02)
    Flags: bus master, medium devsel, latency 0

00:1f.1 IDE interface [0101]: Intel Corporation 82801CAM IDE U100 
Controller [8086:248a] (rev 02) (prog-if 8a [Master SecP PriP])
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 0, IRQ 11
    I/O ports at 01f0 [size=8]
    I/O ports at 03f4 [size=1]
    I/O ports at 0170 [size=8]
    I/O ports at 0374 [size=1]
    I/O ports at 4440 [size=16]
    Memory at 58000000 (32-bit, non-prefetchable) [size=1K]

00:1f.5 Multimedia audio controller [0401]: Intel Corporation 
82801CA/CAM AC'97 Audio Controller [8086:2485] (rev 02)
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 0, IRQ 11
    I/O ports at 4000 [size=256]
    I/O ports at 4400 [size=64]

01:00.0 VGA compatible controller [0300]: ATI Technologies Inc Radeon 
Mobility M7 LW [Radeon Mobility 7500] [1002:4c57] (prog-if 00 [VGA 
controller])
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, stepping, 66MHz, medium devsel, latency 66, IRQ 11
    Memory at 48000000 (32-bit, prefetchable) [size=128M]
    I/O ports at 3000 [size=256]
    Memory at 40400000 (32-bit, non-prefetchable) [size=64K]
    [virtual] Expansion ROM at 40420000 [disabled] [size=128K]
    Capabilities: [58] AGP version 2.0
    Capabilities: [50] Power Management version 2

02:04.0 Communication controller [0780]: Agere Systems LT WinModem 
[11c1:0450] (rev 02)
    Subsystem: AMBIT Microsystem Corp. Evo N600c [1468:0450]
    Flags: bus master, medium devsel, latency 66, IRQ 11
    Memory at 40280000 (32-bit, non-prefetchable) [size=256]
    I/O ports at 2440 [size=8]
    I/O ports at 2000 [size=256]
    Capabilities: [f8] Power Management version 2

02:06.0 CardBus bridge [0607]: Texas Instruments PCI1420 PC card Cardbus 
Controller [104c:ac51]
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 168, IRQ 11
    Memory at 40000000 (32-bit, non-prefetchable) [size=4K]
    Bus: primary=02, secondary=03, subordinate=03, sec-latency=176
    Memory window 0: 50000000-53fff000 (prefetchable)
    Memory window 1: 5c000000-5ffff000
    I/O window 0: 00002800-000028ff
    I/O window 1: 00002c00-00002cff
    16-bit legacy interface ports at 0001

02:06.1 CardBus bridge [0607]: Texas Instruments PCI1420 PC card Cardbus 
Controller [104c:ac51]
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 168, IRQ 11
    Memory at 40080000 (32-bit, non-prefetchable) [size=4K]
    Bus: primary=02, secondary=04, subordinate=07, sec-latency=176
    Memory window 0: 54000000-57fff000 (prefetchable)
    Memory window 1: 70000000-73fff000
    I/O window 0: 00001400-000014ff
    I/O window 1: 00001800-000018ff
    16-bit legacy interface ports at 0001

02:08.0 Ethernet controller [0200]: Intel Corporation 82801CAM (ICH3) 
PRO/100 VM (KM) Ethernet Controller [8086:1038] (rev 42)
    Subsystem: Compaq Computer Corporation Evo N600c [0e11:0098]
    Flags: bus master, medium devsel, latency 66, IRQ 10
    Memory at 40100000 (32-bit, non-prefetchable) [size=4K]
    I/O ports at 2400 [size=64]
    Capabilities: [dc] Power Management version 2

02:0e.0 USB Controller [0c03]: NEC Corporation USB [1033:0035] (rev 41) 
(prog-if 10 [OHCI])
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 64, IRQ 10
    Memory at 40180000 (32-bit, non-prefetchable) [size=4K]
    Capabilities: [40] Power Management version 2

02:0e.1 USB Controller [0c03]: NEC Corporation USB [1033:0035] (rev 41) 
(prog-if 10 [OHCI])
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 64, IRQ 10
    Memory at 40200000 (32-bit, non-prefetchable) [size=4K]
    Capabilities: [40] Power Management version 2

02:0e.2 USB Controller [0c03]: NEC Corporation USB 2.0 [1033:00e0] (rev 
02) (prog-if 20 [EHCI])
    Subsystem: Compaq Computer Corporation Unknown device [0e11:00b7]
    Flags: bus master, medium devsel, latency 64, IRQ 10
    Memory at 40300000 (32-bit, non-prefetchable) [size=256]
    Capabilities: [40] Power Management version 2

But Larry, the card is a CF and its coming off the PCMCIA (Not CARDBUS), 
here's my pccardctl info on it:

root at ubuntu:~# pccardctl info
PRODID_1="Broadcom"
PRODID_2="802.11g SC CF"
PRODID_3="4.0"
PRODID_4=""
MANFID=02d0,0448
FUNCID=6
PRODID_1=""
PRODID_2=""
PRODID_3=""
PRODID_4=""
MANFID=0000,0000
FUNCID=255


Since I was confused about the version, I also verified the version: It's:

root at ubuntu:~# uname -a
Linux ubuntu 2.6.25.9 #3 SMP Sat Aug 16 08:51:11 EDT 2008 i686 GNU/Linux
I also confirmed that the compat-wireless dated 06-21 works - I just 
have to do a ifconfig wlan0 up command to get it associated.

Thanks much
Tex





From Larry.Finger at lwfinger.net  Tue Aug 19 22:44:06 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 19 Aug 2008 15:44:06 -0500
Subject: Cannot gain access to AP
In-Reply-To: <48AB2CD6.9070606@verizon.net>
References: <48A6F93B.2060807@verizon.net> <48A6FB94.6020102@verizon.net>
	<48A84C54.3070106@lwfinger.net> <48AB2CD6.9070606@verizon.net>
Message-ID: <48AB3096.1030109@lwfinger.net>

Tex wrote:
> But Larry, the card is a CF and its coming off the PCMCIA (Not CARDBUS), 
> here's my pccardctl info on it:
> 
> root at ubuntu:~# pccardctl info
> PRODID_1="Broadcom"
> PRODID_2="802.11g SC CF"
> PRODID_3="4.0"
> PRODID_4=""
> MANFID=02d0,0448
> FUNCID=6
> PRODID_1=""
> PRODID_2=""
> PRODID_3=""
> PRODID_4=""
> MANFID=0000,0000
> FUNCID=255
> 
> 
> Since I was confused about the version, I also verified the version: It's:
> 
> root at ubuntu:~# uname -a
> Linux ubuntu 2.6.25.9 #3 SMP Sat Aug 16 08:51:11 EDT 2008 i686 GNU/Linux
> I also confirmed that the compat-wireless dated 06-21 works - I just 
> have to do a ifconfig wlan0 up command to get it associated.

I have two PCMCIA-format cards, but both are Cardbus devices and show 
up in the lspci output, which is why I assumed yours would. As long as 
compat-wireless works, you are good. Eventually, the Ubuntu kernel 
will catch up with whatever patch fixed your device. Until then, plan 
on using compat-wireless.

I'm glad it works.

Larry




From Larry.Finger at lwfinger.net  Thu Aug 21 00:40:32 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 20 Aug 2008 17:40:32 -0500
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <48AC9D60.9000902@lwfinger.net>

Michael Buesch wrote:
> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
> 
> PLEASE TEST TEST TEST TEST TEST
> 
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
> 
> Please test on all of your devices.

I have now tested on a BCM4311/2 with positive results. The transmit 
throughput is roughly the same at 20.7 Mbs with a 54 Mbs bulk rate.

Larry



From Larry.Finger at lwfinger.net  Thu Aug 21 00:45:06 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 20 Aug 2008 17:45:06 -0500
Subject: [PATCH] ssb: Clean up extraction of MAC addresses from SPROM
Message-ID: <48ac9e72.4qL3A3C1AOiGC/YJ%Larry.Finger@lwfinger.net>

Only rev 1 and 2 ssb SPROMs have fields named et0mac and et1mac;
however, all of the extraction routines extract pseudo data for these
fields from regions that are all 1's resulting in a hardware address
of FF:FF:FF:FF:FF:FF. This patch forces such a fill at the beginning of
the data extraction process, and only does the formal extraction if the
SPROM rev is 1 or 2.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This is 2.6.28 material.

Larry
---

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -327,11 +327,9 @@ static void sprom_extract_r123(struct ss
 	s8 gain;
 	u16 loc[3];
 
-	if (out->revision == 3) {			/* rev 3 moved MAC */
+	if (out->revision == 3)			/* rev 3 moved MAC */
 		loc[0] = SSB_SPROM3_IL0MAC;
-		loc[1] = SSB_SPROM3_ET0MAC;
-		loc[2] = SSB_SPROM3_ET1MAC;
-	} else {
+	else {
 		loc[0] = SSB_SPROM1_IL0MAC;
 		loc[1] = SSB_SPROM1_ET0MAC;
 		loc[2] = SSB_SPROM1_ET1MAC;
@@ -340,13 +338,15 @@ static void sprom_extract_r123(struct ss
 		v = in[SPOFF(loc[0]) + i];
 		*(((__be16 *)out->il0mac) + i) = cpu_to_be16(v);
 	}
-	for (i = 0; i < 3; i++) {
-		v = in[SPOFF(loc[1]) + i];
-		*(((__be16 *)out->et0mac) + i) = cpu_to_be16(v);
-	}
-	for (i = 0; i < 3; i++) {
-		v = in[SPOFF(loc[2]) + i];
-		*(((__be16 *)out->et1mac) + i) = cpu_to_be16(v);
+	if (out->revision < 3) { 	/* only rev 1-2 have et0, et1 */
+		for (i = 0; i < 3; i++) {
+			v = in[SPOFF(loc[1]) + i];
+			*(((__be16 *)out->et0mac) + i) = cpu_to_be16(v);
+		}
+		for (i = 0; i < 3; i++) {
+			v = in[SPOFF(loc[2]) + i];
+			*(((__be16 *)out->et1mac) + i) = cpu_to_be16(v);
+		}
 	}
 	SPEX(et0phyaddr, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET0A, 0);
 	SPEX(et1phyaddr, SSB_SPROM1_ETHPHY, SSB_SPROM1_ETHPHY_ET1A,
@@ -409,19 +409,11 @@ static void sprom_extract_r45(struct ssb
 		il0mac_offset = SSB_SPROM4_IL0MAC;
 	else
 		il0mac_offset = SSB_SPROM5_IL0MAC;
-	/* extract the equivalent of the r1 variables */
+	/* extract the MAC address */
 	for (i = 0; i < 3; i++) {
 		v = in[SPOFF(il0mac_offset) + i];
 		*(((__be16 *)out->il0mac) + i) = cpu_to_be16(v);
 	}
-	for (i = 0; i < 3; i++) {
-		v = in[SPOFF(SSB_SPROM4_ET0MAC) + i];
-		*(((__be16 *)out->et0mac) + i) = cpu_to_be16(v);
-	}
-	for (i = 0; i < 3; i++) {
-		v = in[SPOFF(SSB_SPROM4_ET1MAC) + i];
-		*(((__be16 *)out->et1mac) + i) = cpu_to_be16(v);
-	}
 	SPEX(et0phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET0A, 0);
 	SPEX(et1phyaddr, SSB_SPROM4_ETHPHY, SSB_SPROM4_ETHPHY_ET1A,
 	     SSB_SPROM4_ETHPHY_ET1A_SHIFT);
@@ -482,6 +474,8 @@ static int sprom_extract(struct ssb_bus
 
 	out->revision = in[size - 1] & 0x00FF;
 	ssb_dprintk(KERN_DEBUG PFX "SPROM revision %d detected.\n", out->revision);
+	memset(out->et0mac, 0xFF, 6);		/* preset et0 and et1 mac */
+	memset(out->et1mac, 0xFF, 6);
 	if ((bus->chip_id & 0xFF00) == 0x4400) {
 		/* Workaround: The BCM44XX chip has a stupid revision
 		 * number stored in the SPROM.
Index: wireless-testing/include/linux/ssb/ssb_regs.h
===================================================================
--- wireless-testing.orig/include/linux/ssb/ssb_regs.h
+++ wireless-testing/include/linux/ssb/ssb_regs.h
@@ -245,8 +245,6 @@
 
 /* SPROM Revision 3 (inherits most data from rev 2) */
 #define SSB_SPROM3_IL0MAC		0x104A	/* 6 bytes MAC address for 802.11b/g */
-#define SSB_SPROM3_ET0MAC		0x1050	/* 6 bytes MAC address for Ethernet ?? */
-#define SSB_SPROM3_ET1MAC		0x1050	/* 6 bytes MAC address for 802.11a ?? */
 #define SSB_SPROM3_OFDMAPO		0x102C	/* A-PHY OFDM Mid Power Offset (4 bytes, BigEndian) */
 #define SSB_SPROM3_OFDMALPO		0x1030	/* A-PHY OFDM Low Power Offset (4 bytes, BigEndian) */
 #define SSB_SPROM3_OFDMAHPO		0x1034	/* A-PHY OFDM High Power Offset (4 bytes, BigEndian) */
@@ -267,8 +265,6 @@
 
 /* SPROM Revision 4 */
 #define SSB_SPROM4_IL0MAC		0x104C	/* 6 byte MAC address for a/b/g/n */
-#define SSB_SPROM4_ET0MAC		0x1018	/* 6 bytes MAC address for Ethernet ?? */
-#define SSB_SPROM4_ET1MAC		0x1018	/* 6 bytes MAC address for 802.11a ?? */
 #define SSB_SPROM4_ETHPHY		0x105A	/* Ethernet PHY settings ?? */
 #define  SSB_SPROM4_ETHPHY_ET0A		0x001F	/* MII Address for enet0 */
 #define  SSB_SPROM4_ETHPHY_ET1A		0x03E0	/* MII Address for enet1 */



From mb at bu3sch.de  Thu Aug 21 15:07:57 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 21 Aug 2008 15:07:57 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <48AC9D60.9000902@lwfinger.net>
References: <200808160029.56876.mb@bu3sch.de> <48AC9D60.9000902@lwfinger.net>
Message-ID: <200808211507.58659.mb@bu3sch.de>

On Thursday 21 August 2008 00:40:32 Larry Finger wrote:
> Michael Buesch wrote:
> > This is the first part for the rewrite of the b43 PHY API.
> > This is needed in order to make development of N and LP code possible.
> > 
> > PLEASE TEST TEST TEST TEST TEST
> > 
> > Lots of testing on lots of different devices is needed to ensure this
> > doesn't introduce regressions due to typos.
> > 95% of the patch just moves large parts of the PHY code from one file
> > to another. More move-patches will follow.
> > 5% of the patch introduces an "ops" based PHY API.
> > 
> > Please test on all of your devices.
> 
> I have now tested on a BCM4311/2 with positive results. The transmit 
> throughput is roughly the same at 20.7 Mbs with a 54 Mbs bulk rate.

Thanks :)

I'll also do more testing and submit the patch soon.

Anybody who didn't test his device, yet, please do so. If you discover
a breakage after the merge, that will be _very_ unfortunate and we will have
to live with the breakage until it is fixed (which can be very hard to do).

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Aug 21 15:37:48 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 21 Aug 2008 15:37:48 +0200
Subject: [PATCH] ssb: Clean up extraction of MAC addresses from SPROM
In-Reply-To: <48ac9e72.4qL3A3C1AOiGC/YJ%Larry.Finger@lwfinger.net>
References: <48ac9e72.4qL3A3C1AOiGC/YJ%Larry.Finger@lwfinger.net>
Message-ID: <200808211537.48800.mb@bu3sch.de>

On Thursday 21 August 2008 00:45:06 Larry Finger wrote:
> Only rev 1 and 2 ssb SPROMs have fields named et0mac and et1mac;
> however, all of the extraction routines extract pseudo data for these
> fields from regions that are all 1's resulting in a hardware address
> of FF:FF:FF:FF:FF:FF. This patch forces such a fill at the beginning of
> the data extraction process, and only does the formal extraction if the
> SPROM rev is 1 or 2.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---

ack

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Aug 21 18:58:51 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 21 Aug 2008 18:58:51 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808211643.m7LGhuaq002925@mi0.bluebottle.com>
References: <200808160029.56876.mb@bu3sch.de>
	<200808211643.m7LGhuaq002925@mi0.bluebottle.com>
Message-ID: <200808211858.51899.mb@bu3sch.de>

On Thursday 21 August 2008 18:16:23 Sean Hodges wrote:
> On Sat, 2008-08-16 at 00:29 +0200, Michael Buesch wrote:
> > This is the first part for the rewrite of the b43 PHY API.
> > This is needed in order to make development of N and LP code possible.
> > 
> > PLEASE TEST TEST TEST TEST TEST
> > 
> > Lots of testing on lots of different devices is needed to ensure this
> > doesn't introduce regressions due to typos.
> > 95% of the patch just moves large parts of the PHY code from one file
> > to another. More move-patches will follow.
> > 5% of the patch introduces an "ops" based PHY API.
> > 
> > Please test on all of your devices.
> > 
> > http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> > Apply against wireless-testing.git
> 
> As a novice to driver development, is there some way I can help with
> testing this?
> 
> I have no experience of driver development/testing, but have an N-PHY

To say it once again:
Despite the fact that the subject of this email mentiones N and LP PHYs, it
implements _nothing_ N and LP related. It just _prepares_ the code for the
future when we will add N and LP stuff (and other PHY stuff. Also A/B/G related).

-- 
Greetings Michael.


From seanhodges at bluebottle.com  Thu Aug 21 18:16:23 2008
From: seanhodges at bluebottle.com (Sean Hodges)
Date: Thu, 21 Aug 2008 17:16:23 +0100
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <200808211643.m7LGhuao002925@mi0.bluebottle.com>

On Sat, 2008-08-16 at 00:29 +0200, Michael Buesch wrote:
> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
> 
> PLEASE TEST TEST TEST TEST TEST
> 
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
> 
> Please test on all of your devices.
> 
> http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> Apply against wireless-testing.git

As a novice to driver development, is there some way I can help with
testing this?

I have no experience of driver development/testing, but have an N-PHY
BCM4328 wireless NIC that is just itching to be eventually freed from
ndiswrapper :) I'd be happy to lend some help testing new patches and
feeding back results, if I could get a few pointers on where to get
started...

I'm running 2.6.24-19 kernel release, and my card is listed by lspci as:

06:00.0 Network controller: Broadcom Corporation BCM4328 802.11a/b/g/n
(rev 03)


Sean








From Larry.Finger at lwfinger.net  Thu Aug 21 20:36:50 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 21 Aug 2008 13:36:50 -0500
Subject: PHY TRANSMISSION ERRORS
Message-ID: <48ADB5C2.2020203@lwfinger.net>

I recently switched from a BCM4312/1 to a BCM4311/2 PCIe card. Running 
the latest from wireless-testing, I began seeing the PHY TRANSMISSION 
ERROR storms. None had ever been seen for the BCM4312/1. Since booting 
2.6.26 from wireless-testing, none have been observed.

Is this a regression since 2.6.26, or are these errors really 
intermittent? If you see these, please tell me how frequently they 
occur, and as much about the behavior with kernel version as you know.

Thanks,

Larry


From seanhodges at bluebottle.com  Thu Aug 21 22:27:45 2008
From: seanhodges at bluebottle.com (Sean Hodges)
Date: Thu, 21 Aug 2008 21:27:45 +0100
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808211858.51899.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
	<200808211643.m7LGhuaq002925@mi0.bluebottle.com>
	<200808211858.51899.mb@bu3sch.de>
Message-ID: <1219350465.8914.2.camel@SEAN-PC>

Thanks for the repeated explanation, the offer remains when it might be
needed.

Sean


On Thu, 2008-08-21 at 18:58 +0200, Michael Buesch wrote:
> On Thursday 21 August 2008 18:16:23 Sean Hodges wrote:
> > On Sat, 2008-08-16 at 00:29 +0200, Michael Buesch wrote:
> > > This is the first part for the rewrite of the b43 PHY API.
> > > This is needed in order to make development of N and LP code possible.
> > > 
> > > PLEASE TEST TEST TEST TEST TEST
> > > 
> > > Lots of testing on lots of different devices is needed to ensure this
> > > doesn't introduce regressions due to typos.
> > > 95% of the patch just moves large parts of the PHY code from one file
> > > to another. More move-patches will follow.
> > > 5% of the patch introduces an "ops" based PHY API.
> > > 
> > > Please test on all of your devices.
> > > 
> > > http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> > > Apply against wireless-testing.git
> > 
> > As a novice to driver development, is there some way I can help with
> > testing this?
> > 
> > I have no experience of driver development/testing, but have an N-PHY
> 
> To say it once again:
> Despite the fact that the subject of this email mentiones N and LP PHYs, it
> implements _nothing_ N and LP related. It just _prepares_ the code for the
> future when we will add N and LP stuff (and other PHY stuff. Also A/B/G related).
> 




From zajec5polish at gmail.com  Fri Aug 22 13:06:05 2008
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Fri, 22 Aug 2008 13:06:05 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <14b026160808220406q51069496u98de6ed57c7f13a4@mail.gmail.com>

2008/8/16 Michael Buesch <mb at bu3sch.de>:
> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
>
> PLEASE TEST TEST TEST TEST TEST
>
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
>
> Please test on all of your devices.
>
> http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> Apply against wireless-testing.git

Applied to today wireless-testing git. Connected to my AP without
problem, connection stable for 90min and 600MB of download. I didn't
test speed performance as my antenna in broken. So everything seems to
work fine for me.

b43-pci-bridge 0000:06:05.0: PCI INT A -> GSI 21 (level, low) -> IRQ 21
b43-phy0: Broadcom 4318 WLAN found
b43-phy0 debug: Found PHY: Analog 3, Type 2, Revision 7
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
input: b43-phy0 as /devices/virtual/input/input8
firmware: requesting b43/ucode5.fw
firmware: requesting b43/pcm5.fw
firmware: requesting b43/b0g0initvals5.fw
firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software

-- 
Rafa? Mi?ecki

From celejar at gmail.com  Fri Aug 22 20:50:21 2008
From: celejar at gmail.com (Celejar)
Date: Fri, 22 Aug 2008 14:50:21 -0400
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <20080822145021.b37a7e01.celejar@gmail.com>

On Sat, 16 Aug 2008 00:29:56 +0200
Michael Buesch <mb at bu3sch.de> wrote:

> This is the first part for the rewrite of the b43 PHY API.
> This is needed in order to make development of N and LP code possible.
> 
> PLEASE TEST TEST TEST TEST TEST
> 
> Lots of testing on lots of different devices is needed to ensure this
> doesn't introduce regressions due to typos.
> 95% of the patch just moves large parts of the PHY code from one file
> to another. More move-patches will follow.
> 5% of the patch introduces an "ops" based PHY API.
> 
> Please test on all of your devices.
> 
> http://bu3sch.de/patches/wireless-testing/20080816-0023/patches/002-b43-phy-ops.patch
> Apply against wireless-testing.git

Tested on my 4318:

$ dmesg | grep b43

b43-pci-bridge 0000:06:02.0: enabling device (0000 -> 0002)
b43-pci-bridge 0000:06:02.0: PCI INT A -> GSI 22 (level, low) -> IRQ 22
b43-pci-bridge 0000:06:02.0: setting latency timer to 64
b43-phy0: Broadcom 4318 WLAN found
b43-phy0 debug: Found PHY: Analog 3, Type 2, Revision 7
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
input: b43-phy0 as /class/input/input8
firmware: requesting b43/ucode5.fw
firmware: requesting b43/pcm5.fw
firmware: requesting b43/b0g0initvals5.fw
firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software

[Looks the same as Rafa? Mi?ecki's]


From mb at bu3sch.de  Sat Aug 23 15:59:49 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 23 Aug 2008 15:59:49 +0200
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <20080822145021.b37a7e01.celejar@gmail.com>
References: <200808160029.56876.mb@bu3sch.de>
	<20080822145021.b37a7e01.celejar@gmail.com>
Message-ID: <200808231559.51169.mb@bu3sch.de>

On Friday 22 August 2008 20:50:21 Celejar wrote:
> Tested on my 4318:

Thanks a lot!

-- 
Greetings Michael.


From benoit.knecht at gmail.com  Sun Aug 24 14:24:38 2008
From: benoit.knecht at gmail.com (=?utf-8?Q?Beno=C3=AEt?= Knecht)
Date: Sun, 24 Aug 2008 12:24:38 +0000
Subject: [PATCH RFT] b43: Rewrite PHY API for N-PHY/LP-PHY
In-Reply-To: <200808160029.56876.mb@bu3sch.de>
References: <200808160029.56876.mb@bu3sch.de>
Message-ID: <20080824122438.GA6399@wilfried.groenland>

Michael Buesch wrote:
> PLEASE TEST TEST TEST TEST TEST

I tested your patch on my 4318, and it seems performance and stability
are pretty much the same as unpatched wireless-testing. Here's what
dmesg has to say:
# dmesg | grep b43
b43-pci-bridge 0001:10:12.0: enabling device (0004 -> 0006)
b43-phy0: Broadcom 4318 WLAN found
b43-phy0 debug: Found PHY: Analog 3, Type 2, Revision 7
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
b43-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
firmware: requesting b43/ucode5.fw
firmware: requesting b43/pcm5.fw
firmware: requesting b43/b0g0initvals5.fw
firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac:
00:16:b6:a3:26:91
b43-phy0 debug: Using hardware based encryption for keyidx: 1, mac:
ff:ff:ff:ff:ff:ff

and the exact description of my card:
# lspci -vn
0001:10:12.0 0280: 14e4:4318 (rev 02)
        Subsystem: 106b:4318
        Flags: bus master, fast devsel, latency 16, IRQ 52
        Memory at 80084000 (32-bit, non-prefetchable) [size=8K]
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb

I transfered some files around using both patched and unpatched
wireless-testing, and I get very similar results in both cases:
around 2.6 MB/s upload and 3.5 MB/s download. This is a couple rooms
away from the AP, with a signal quality of 58/100.

I will continue using this kernel for some time, and will report back
here if I notice anything peculiar.

I hope I didn't forget anything useful, but the bottom line is that I
didn't see any difference between patched and unpatched
wireless-testing, and if you need me to run some more tests, I'd be
happy to; please let me know.

--
Beno?t


From awilliamson at mandriva.com  Mon Aug 25 20:08:39 2008
From: awilliamson at mandriva.com (Adam Williamson)
Date: Mon, 25 Aug 2008 11:08:39 -0700
Subject: Broadcom's own driver: firmware?
Message-ID: <1219687719.13668.60.camel@lenovo.local.net>

Hi, all. Sorry if this has been discussed before, but I checked the
archives and couldn't find anything.

I just found out that Broadcom released an official Linux driver:

http://www.broadcom.com/support/802.11/linux_sta.php

Now, the license it's under is fairly obviously not F/OSS (besides, it
comes with a binary blob), so it's not going to kill b43 or anything. I
don't know how *good* it actually is, I haven't tried it yet.

However, the real point that occurred to me is firmware. Presumably,
this thing has firmware in it somewhere. Has anyone considered whether
we could extract the firmware from this for use with b43, rather than
from the Windows driver?

The license this driver is under is not F/OSS, but it's not as
restrictive as the license on the Windows driver. It explicitly allows
redistribution, in unmodified form. So it wouldn't be okay to extract
the firmware from this driver and just package that, but distros *could*
package the entire driver (without ever actually using it) and then
automatically extract the firmware from it when setting up b43. This
would finally solve the Firmware Minefield issue caused by distros not
being able to ship firmware for b43 in any way.

Has anyone looked at this? Is it possible? Am I way off base? :) Thanks!
-- 
adamw



From mb at bu3sch.de  Mon Aug 25 21:54:18 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 25 Aug 2008 21:54:18 +0200
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
Message-ID: <200808252154.18571.mb@bu3sch.de>

This patch improves the recalculation of the TX attenuations
for improved scaling of the TX power under load.
This should improve (reduce) the time it takes the RC algorithm
to find the best transmission rate.
It should also improve the scaling of the attenuations to changed
environment (moving laptop, roaming, etc...)

This patch is experimental, but please test it a lot.
Please test performance and throughput of the wireless link (iperf, wget, ...)


The patch is available here:
http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch

It _requires_ this patch to be applied _first_:
http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/003-b43-phy-ops.patch

The patches apply to wireless-testing.git:
git clone git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-testing.git

Thanks for supporting development of b43.

-- 
Greetings Michael.


From ccmcphe at verizon.net  Mon Aug 25 22:22:58 2008
From: ccmcphe at verizon.net (Tex)
Date: Mon, 25 Aug 2008 16:22:58 -0400
Subject: Cannot gain access to AP
In-Reply-To: <48AB3096.1030109@lwfinger.net>
References: <48A6F93B.2060807@verizon.net> <48A6FB94.6020102@verizon.net>
	<48A84C54.3070106@lwfinger.net> <48AB2CD6.9070606@verizon.net>
	<48AB3096.1030109@lwfinger.net>
Message-ID: <48B314A2.6000104@verizon.net>

Larry Finger wrote:
> Tex wrote:
>> But Larry, the card is a CF and its coming off the PCMCIA (Not 
>> CARDBUS), here's my pccardctl info on it:
>>
>> root at ubuntu:~# pccardctl info
>> PRODID_1="Broadcom"
>> PRODID_2="802.11g SC CF"
>> PRODID_3="4.0"
>> PRODID_4=""
>> MANFID=02d0,0448
>> FUNCID=6
>> PRODID_1=""
>> PRODID_2=""
>> PRODID_3=""
>> PRODID_4=""
>> MANFID=0000,0000
>> FUNCID=255
>>
>>
>> Since I was confused about the version, I also verified the version: 
>> It's:
>>
>> root at ubuntu:~# uname -a
>> Linux ubuntu 2.6.25.9 #3 SMP Sat Aug 16 08:51:11 EDT 2008 i686 GNU/Linux
>> I also confirmed that the compat-wireless dated 06-21 works - I just 
>> have to do a ifconfig wlan0 up command to get it associated.
>
> I have two PCMCIA-format cards, but both are Cardbus devices and show 
> up in the lspci output, which is why I assumed yours would. As long as 
> compat-wireless works, you are good. Eventually, the Ubuntu kernel 
> will catch up with whatever patch fixed your device. Until then, plan 
> on using compat-wireless.
>
> I'm glad it works.
>
> Larry
>
>
>
I just downloaded the latest kernel 2.6.26 and all is well with my 
Broadcom CF card.
All different options work with the card now.

Thanks for your help
Tex



From ccmcphe at verizon.net  Mon Aug 25 22:22:58 2008
From: ccmcphe at verizon.net (Tex)
Date: Mon, 25 Aug 2008 16:22:58 -0400
Subject: Cannot gain access to AP
In-Reply-To: <48AB3096.1030109@lwfinger.net>
References: <48A6F93B.2060807@verizon.net> <48A6FB94.6020102@verizon.net>
	<48A84C54.3070106@lwfinger.net> <48AB2CD6.9070606@verizon.net>
	<48AB3096.1030109@lwfinger.net>
Message-ID: <48B314A2.6000104@verizon.net>

Larry Finger wrote:
> Tex wrote:
>> But Larry, the card is a CF and its coming off the PCMCIA (Not 
>> CARDBUS), here's my pccardctl info on it:
>>
>> root at ubuntu:~# pccardctl info
>> PRODID_1="Broadcom"
>> PRODID_2="802.11g SC CF"
>> PRODID_3="4.0"
>> PRODID_4=""
>> MANFID=02d0,0448
>> FUNCID=6
>> PRODID_1=""
>> PRODID_2=""
>> PRODID_3=""
>> PRODID_4=""
>> MANFID=0000,0000
>> FUNCID=255
>>
>>
>> Since I was confused about the version, I also verified the version: 
>> It's:
>>
>> root at ubuntu:~# uname -a
>> Linux ubuntu 2.6.25.9 #3 SMP Sat Aug 16 08:51:11 EDT 2008 i686 GNU/Linux
>> I also confirmed that the compat-wireless dated 06-21 works - I just 
>> have to do a ifconfig wlan0 up command to get it associated.
>
> I have two PCMCIA-format cards, but both are Cardbus devices and show 
> up in the lspci output, which is why I assumed yours would. As long as 
> compat-wireless works, you are good. Eventually, the Ubuntu kernel 
> will catch up with whatever patch fixed your device. Until then, plan 
> on using compat-wireless.
>
> I'm glad it works.
>
> Larry
>
>
>
I just downloaded the latest kernel 2.6.26 and all is well with my 
Broadcom CF card.
All different options work with the card now.

Thanks for your help
Tex



From mb at bu3sch.de  Mon Aug 25 22:27:59 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 25 Aug 2008 22:27:59 +0200
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
In-Reply-To: <200808252154.18571.mb@bu3sch.de>
References: <200808252154.18571.mb@bu3sch.de>
Message-ID: <200808252227.59315.mb@bu3sch.de>

On Monday 25 August 2008 21:54:18 Michael Buesch wrote:
> The patch is available here:
> http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch

Here's an updated version with a major bug fixed:
http://bu3sch.de/patches/wireless-testing/20080825-2227/patches/004-b43-NEW-rewrite-txpower-adjusting.patch

-- 
Greetings Michael.


From gavron at wetwork.net  Tue Aug 26 00:09:25 2008
From: gavron at wetwork.net (Ehud Gavron)
Date: Mon, 25 Aug 2008 15:09:25 -0700
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
In-Reply-To: <200808252227.59315.mb@bu3sch.de>
References: <200808252154.18571.mb@bu3sch.de> <200808252227.59315.mb@bu3sch.de>
Message-ID: <48B32D95.2000105@wetwork.net>

Michael Buesch wrote:
> On Monday 25 August 2008 21:54:18 Michael Buesch wrote:
>   
>> The patch is available here:
>> http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
>>     
>
> Here's an updated version with a major bug fixed:
> http://bu3sch.de/patches/wireless-testing/20080825-2227/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
>
>   
iperf, wget, speedtest.net, and sftp all show similar performance.

Ehud
0c:00.0 Network controller: Broadcom Corporation BCM4311 802.11b/g WLAN 
(rev 01)
    Subsystem: Dell Wireless 1390 WLAN Mini-Card
    Flags: bus master, fast devsel, latency 0, IRQ 17
    Memory at ecffc000 (32-bit, non-prefetchable) [size=16K]
    Capabilities: [40] Power Management version 2
    Capabilities: [58] Message Signalled Interrupts: Mask- 64bit- 
Queue=0/0 Enable-
    Capabilities: [d0] Express Legacy Endpoint IRQ 0
    Capabilities: [100] Advanced Error Reporting
    Capabilities: [13c] Virtual Channel

root at egdell:~# uname -a
Linux egdell 2.6.27-rc3-20080825-wl #1 SMP Mon Aug 25 14:08:15 MST 2008 
x86_64 GNU/Linux
root at egdell:~# dmesg | grep b43
b43-pci-bridge 0000:0c:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
b43-pci-bridge 0000:0c:00.0: setting latency timer to 64
b43-phy0: Broadcom 4311 WLAN found
b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
input: b43-phy0 as /class/input/input8
firmware: requesting b43/ucode5.fw
firmware: requesting b43/pcm5.fw
firmware: requesting b43/b0g0initvals5.fw
firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac: 
ff:ff:ff:ff:ff:ff
b43-phy0 debug: Disabling hardware based encryption for keyidx: 0, mac: 
ff:ff:ff:ff:ff:ff
b43-phy0 debug: Removing Interface type 2
b43-phy0 debug: Wireless interface stopped
b43-phy0 debug: DMA-32 rx_ring: Used slots 32/64, Failed frames 0/0 = 
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BK: Used slots 0/128, Failed frames 
0/0 = 0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BE: Used slots 128/128, Failed frames 
42/41538 = 0.1%, Average tries 1.24
b43-phy0 debug: DMA-32 tx_ring_AC_VI: Used slots 0/128, Failed frames 
0/0 = 0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_VO: Used slots 2/128, Failed frames 
0/86 = 0.0%, Average tries 1.00
b43-phy0 debug: DMA-32 tx_ring_mcast: Used slots 0/128, Failed frames 
0/0 = 0.0%, Average tries 0.00
input: b43-phy0 as /class/input/input9
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0 debug: Using hardware based encryption for keyidx: 0, mac: 
ff:ff:ff:ff:ff:ff

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3296 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080825/6c038e41/attachment.bin>

From mb at bu3sch.de  Wed Aug 27 18:53:02 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 27 Aug 2008 18:53:02 +0200
Subject: [PATCH] b43: Implement dynamic PHY API
Message-ID: <200808271853.02849.mb@bu3sch.de>

This patch implements a dynamic "ops" based PHY API.
This is needed in order to conveniently support future PHY types
to avoid the "switch"-hell.

This patch does not change any functionality. It just moves lots
of code from one place to another and adjusts it for the changed
data structures.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Due to the size, this patch is not inlined.
Please find it here:
http://bu3sch.de/patches/wireless-testing/20080827-1750/patches/003-b43-phy-ops.patch

You may notice that after this patch is applied the file "phy.c" will
still contain some unused code.
This will be fixed in a future patch by moving that code to "phy_a.c".
I do not want to further bloat this patch. It's already big enough.

I'm sorry for pushing such a big patch upstream. :)

Please apply for the next bugfix push, if you want to get Dave _really_ mad.
Apply to 2.6.28, if you decide that he would probably kill you. ;)
(I think he would *hint*)


From celejar at gmail.com  Wed Aug 27 19:04:04 2008
From: celejar at gmail.com (Celejar)
Date: Wed, 27 Aug 2008 13:04:04 -0400
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
In-Reply-To: <200808252227.59315.mb@bu3sch.de>
References: <200808252154.18571.mb@bu3sch.de> <200808252227.59315.mb@bu3sch.de>
Message-ID: <20080827130404.b1556ea6.celejar@gmail.com>

On Mon, 25 Aug 2008 22:27:59 +0200
Michael Buesch <mb at bu3sch.de> wrote:

> On Monday 25 August 2008 21:54:18 Michael Buesch wrote:
> > The patch is available here:
> > http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
> 
> Here's an updated version with a major bug fixed:
> http://bu3sch.de/patches/wireless-testing/20080825-2227/patches/004-b43-NEW-rewrite-txpower-adjusting.patch

I've been testing this on my 4318, and it seems to be working fine.  As
I've mentioned previously, my network performance is not great in
general, but I don't see a drop off with this version, or any errors in
dmesg.  BTW, applying the patch threw one error, even though most of it
applied cleanly, and the driver seems to work.  Is that normal?  [I'm
sorry I didn't save the error message.]

> Greetings Michael.

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From mb at bu3sch.de  Wed Aug 27 19:10:53 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 27 Aug 2008 19:10:53 +0200
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
In-Reply-To: <20080827130404.b1556ea6.celejar@gmail.com>
References: <200808252154.18571.mb@bu3sch.de> <200808252227.59315.mb@bu3sch.de>
	<20080827130404.b1556ea6.celejar@gmail.com>
Message-ID: <200808271910.53587.mb@bu3sch.de>

On Wednesday 27 August 2008 19:04:04 Celejar wrote:
> On Mon, 25 Aug 2008 22:27:59 +0200
> Michael Buesch <mb at bu3sch.de> wrote:
> 
> > On Monday 25 August 2008 21:54:18 Michael Buesch wrote:
> > > The patch is available here:
> > > http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
> > 
> > Here's an updated version with a major bug fixed:
> > http://bu3sch.de/patches/wireless-testing/20080825-2227/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
> 
> I've been testing this on my 4318, and it seems to be working fine.  As
> I've mentioned previously, my network performance is not great in
> general, but I don't see a drop off with this version, or any errors in
> dmesg.  BTW, applying the patch threw one error, even though most of it
> applied cleanly, and the driver seems to work.  Is that normal?  [I'm
> sorry I didn't save the error message.]

It shouldn't throw an error, if you use latest wireless-testing.git as base.


-- 
Greetings Michael.


From celejar at gmail.com  Wed Aug 27 20:19:12 2008
From: celejar at gmail.com (Celejar)
Date: Wed, 27 Aug 2008 14:19:12 -0400
Subject: [PATCH RFC/RFT] b43: Improve TX power recalculation under load
In-Reply-To: <200808271910.53587.mb@bu3sch.de>
References: <200808252154.18571.mb@bu3sch.de> <200808252227.59315.mb@bu3sch.de>
	<20080827130404.b1556ea6.celejar@gmail.com>
	<200808271910.53587.mb@bu3sch.de>
Message-ID: <20080827141912.17860f72.celejar@gmail.com>

On Wed, 27 Aug 2008 19:10:53 +0200
Michael Buesch <mb at bu3sch.de> wrote:

> On Wednesday 27 August 2008 19:04:04 Celejar wrote:
> > On Mon, 25 Aug 2008 22:27:59 +0200
> > Michael Buesch <mb at bu3sch.de> wrote:
> > 
> > > On Monday 25 August 2008 21:54:18 Michael Buesch wrote:
> > > > The patch is available here:
> > > > http://bu3sch.de/patches/wireless-testing/20080825-2146/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
> > > 
> > > Here's an updated version with a major bug fixed:
> > > http://bu3sch.de/patches/wireless-testing/20080825-2227/patches/004-b43-NEW-rewrite-txpower-adjusting.patch
> > 
> > I've been testing this on my 4318, and it seems to be working fine.  As
> > I've mentioned previously, my network performance is not great in
> > general, but I don't see a drop off with this version, or any errors in
> > dmesg.  BTW, applying the patch threw one error, even though most of it
> > applied cleanly, and the driver seems to work.  Is that normal?  [I'm
> > sorry I didn't save the error message.]
> 
> It shouldn't throw an error, if you use latest wireless-testing.git as base.

I was, but I think my mistake was the failure to do both 'git-clean -f'
and 'git-checkout -f'.

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From susanhigashi at gmail.com  Thu Aug 28 02:12:18 2008
From: susanhigashi at gmail.com (Susan Higashi)
Date: Wed, 27 Aug 2008 21:12:18 -0300
Subject: Wireless Problems - Ubuntu 8.04
Message-ID: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>

Hello for all,
I have tried the tips listed in
http://linuxwireless.org/en/users/Drivers/b43#b43andb43legacy, but my
wireless is not working yet. =(

First, I installed the firmware: *"sudo
/usr/share/b43-fwcutter/install_bcm43xx_firmware.sh"*
Second, I runned the folowing lines:

*wget http://bu3sch.de/b43/fwcutter/b43-fwcutter-011.tar.bz2
tar xjf b43-fwcutter-011.tar.bz2
cd b43-fwcutter-011
make
cd ..*

Finally, these lines were done:

*export FIRMWARE_INSTALL_DIR="/lib/firmware"
wget http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o
sudo ./b43-fwcutter-011/b43-fwcutter -w "$FIRMWARE_INSTALL_DIR"
wl_apsta-3.130.20.0.o*


After all my wireless net is not workin yet... Anybody can help me,
pleaseee?
Thank you very much!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080827/2114f9aa/attachment.html>

From zajec5polish at gmail.com  Thu Aug 28 09:46:19 2008
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Thu, 28 Aug 2008 09:46:19 +0200
Subject: Wireless Problems - Ubuntu 8.04
In-Reply-To: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
References: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
Message-ID: <14b026160808280046h5c9787c9m4eee1c6cccbad949@mail.gmail.com>

2008/8/28 Susan Higashi <susanhigashi at gmail.com>:
> Hello for all,
> I have tried the tips listed in
> http://linuxwireless.org/en/users/Drivers/b43#b43andb43legacy, but my
> wireless is not working yet. =(
>
> First, I installed the firmware: "sudo
> /usr/share/b43-fwcutter/install_bcm43xx_firmware.sh"

I do not have Ubuntu but guess that using this script should already
install firmware. Next steps was unnecessary I think.

After booting check output of command:
dmesg | grep b43
and post it here, plese.

-- 
Rafa? Mi?ecki

From illth at gmx.de  Thu Aug 28 09:39:14 2008
From: illth at gmx.de (Thomas Ilnseher)
Date: Thu, 28 Aug 2008 09:39:14 +0200
Subject: Wireless Problems - Ubuntu 8.04
In-Reply-To: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
References: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
Message-ID: <1219909154.5457.3.camel@pcmik05.zmk.uni-kl.de>


Am Mittwoch, den 27.08.2008, 21:12 -0300 schrieb Susan Higashi:
> Hello for all, 
> I have tried the tips listed in
> http://linuxwireless.org/en/users/Drivers/b43#b43andb43legacy, but my
> wireless is not working yet. =(
> 
> First, I installed the firmware:
> "sudo /usr/share/b43-fwcutter/install_bcm43xx_firmware.sh"

did you get any error messages then ?
this should have been enough. other steps should *NOT* be required.
> Second, I runned the folowing lines:
> wget http://bu3sch.de/b43/fwcutter/b43-fwcutter-011.tar.bz2
> 
> tar xjf b43-fwcutter-011.tar.bz2
> cd b43-fwcutter-011
> make
> cd ..
> Finally, these lines were done:
> export FIRMWARE_INSTALL_DIR="/lib/firmware"
> wget http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o
> 
> sudo ./b43-fwcutter-011/b43-fwcutter -w "$FIRMWARE_INSTALL_DIR" wl_apsta-3.130.20.0.o
> 
> After all my wireless net is not workin yet... Anybody can help me,
> pleaseee?

maybe you should provide these information:

* Output of "lspci" (sudo lspci)
* Output of "lsmod"
* Output of "dmesg" (relevant lines at least)

> Thank you very much!!
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
-- 
Thomas Ilnseher <illth at gmx.de>



From susanhigashi at gmail.com  Thu Aug 28 13:44:57 2008
From: susanhigashi at gmail.com (Susan Higashi)
Date: Thu, 28 Aug 2008 08:44:57 -0300
Subject: Wireless Problems - Ubuntu 8.04
In-Reply-To: <14b026160808280046h5c9787c9m4eee1c6cccbad949@mail.gmail.com>
References: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
	<14b026160808280046h5c9787c9m4eee1c6cccbad949@mail.gmail.com>
Message-ID: <b81ef96c0808280444g2be951efxe9c6704db7f1f4fc@mail.gmail.com>

I tried "dmesg | grep b43" as Rafa? Mi?ecki told me but nothing was
returned.
Here is what Thomas Ilnseher asked:

root at su-laptop:/home/su# *lspci*
00:00.0 Host bridge: Intel Corporation Mobile 915GM/PM/GMS/910GML Express
Processor to DRAM Controller (rev 03)
00:02.0 VGA compatible controller: Intel Corporation Mobile 915GM/GMS/910GML
Express Graphics Controller (rev 03)
00:02.1 Display controller: Intel Corporation Mobile 915GM/GMS/910GML
Express Graphics Controller (rev 03)
00:1c.0 PCI bridge: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6 Family)
PCI Express Port 1 (rev 03)
00:1d.0 USB Controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6
Family) USB UHCI #1 (rev 03)
00:1d.1 USB Controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6
Family) USB UHCI #2 (rev 03)
00:1d.2 USB Controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6
Family) USB UHCI #3 (rev 03)
00:1d.3 USB Controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6
Family) USB UHCI #4 (rev 03)
00:1d.7 USB Controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6
Family) USB2 EHCI Controller (rev 03)
00:1e.0 PCI bridge: Intel Corporation 82801 Mobile PCI Bridge (rev d3)
00:1e.2 Multimedia audio controller: Intel Corporation 82801FB/FBM/FR/FW/FRW
(ICH6 Family) AC'97 Audio Controller (rev 03)
00:1e.3 Modem: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6 Family) AC'97
Modem Controller (rev 03)
00:1f.0 ISA bridge: Intel Corporation 82801FBM (ICH6M) LPC Interface Bridge
(rev 03)
00:1f.2 IDE interface: Intel Corporation 82801FBM (ICH6M) SATA Controller
(rev 03)
00:1f.3 SMBus: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6 Family) SMBus
Controller (rev 03)
02:00.0 Ethernet controller: Marvell Technology Group Ltd. 88E8036 PCI-E
Fast Ethernet Controller (rev 10)
06:04.0 CardBus bridge: Texas Instruments PCIxx21/x515 Cardbus Controller
06:04.2 FireWire (IEEE 1394): Texas Instruments OHCI Compliant IEEE 1394
Host Controller
06:04.3 Mass storage controller: Texas Instruments PCIxx21 Integrated
FlashMedia Controller
06:04.4 SD Host controller: Texas Instruments
PCI6411/6421/6611/6621/7411/7421/7611/7621 Secure Digital Controller
07:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8180L
802.11b MAC (rev 20)
================================================================
root at su-laptop:/home/su# *lsmod*
Module                  Size  Used by
ipv6                  267780  8
i915                   32512  2
drm                    82580  3 i915
rfcomm                 41744  2
l2cap                  25728  13 rfcomm
bluetooth              61156  4 rfcomm,l2cap
ppdev                  10372  0
cpufreq_stats           7104  0
cpufreq_powersave       2688  0
cpufreq_userspace       5284  0
cpufreq_conservative     8712  0
cpufreq_ondemand        9740  0
freq_table              5536  2 cpufreq_stats,cpufreq_ondemand
sbs                    15112  0
sbshc                   7680  1 sbs
dock                   11280  0
iptable_filter          3840  0
ip_tables              14820  1 iptable_filter
x_tables               16132  1 ip_tables
nls_iso8859_1           4992  1
nls_cp437               6656  1
vfat                   14464  1
fat                    54556  1 vfat
af_packet              23812  0
sbp2                   24072  0
lp                     12324  0
joydev                 13120  0
pcmcia                 40876  0
evdev                  13056  7
parport_pc             36260  1
parport                37832  3 ppdev,lp,parport_pc
snd_intel8x0           35356  3
snd_ac97_codec        101028  1 snd_intel8x0
ac97_bus                3072  1 snd_ac97_codec
psmouse                40336  0
snd_pcm_oss            42144  0
snd_mixer_oss          17920  1 snd_pcm_oss
serio_raw               7940  0
tifm_7xx1               8576  0
sdhci                  19076  0
yenta_socket           27276  2
rsrc_nonstatic         13696  1 yenta_socket
tifm_core              11012  1 tifm_7xx1
mmc_core               51460  1 sdhci
pcmcia_core            40596  3 pcmcia,yenta_socket,rsrc_nonstatic
snd_pcm                78596  3 snd_intel8x0,snd_ac97_codec,snd_pcm_oss
sky2                   47492  0
snd_seq_dummy           4868  0
battery                14212  0
container               5632  0
ac                      6916  0
video                  19856  0
output                  4736  1 video
snd_seq_oss            35584  0
snd_seq_midi            9376  0
snd_rawmidi            25760  1 snd_seq_midi
pcspkr                  4224  0
snd_seq_midi_event      8320  2 snd_seq_oss,snd_seq_midi
snd_seq                54224  6
snd_seq_dummy,snd_seq_oss,snd_seq_midi,snd_seq_midi_event
snd_timer              24836  2 snd_pcm,snd_seq
snd_seq_device          9612  5
snd_seq_dummy,snd_seq_oss,snd_seq_midi,snd_rawmidi,snd_seq
iTCO_wdt               13092  0
iTCO_vendor_support     4868  1 iTCO_wdt
snd                    56996  17
snd_intel8x0,snd_ac97_codec,snd_pcm_oss,snd_mixer_oss,snd_pcm,snd_seq_dummy,snd_seq_oss,snd_rawmidi,snd_seq,snd_timer,snd_seq_device
button                  9232  0
soundcore               8800  1 snd
snd_page_alloc         11400  2 snd_intel8x0,snd_pcm
shpchp                 34452  0
pci_hotplug            30880  1 shpchp
intel_agp              25492  1
agpgart                34760  3 drm,intel_agp
ext3                  136712  1
jbd                    48404  1 ext3
mbcache                 9600  1 ext3
usbhid                 31872  0
hid                    38784  1 usbhid
sg                     36880  0
sr_mod                 17956  0
cdrom                  37408  1 sr_mod
sd_mod                 30720  4
pata_acpi               8320  0
ahci                   28420  0
ata_piix               19588  3
ata_generic             8324  0
libata                159344  4 pata_acpi,ahci,ata_piix,ata_generic
scsi_mod              151436  5 sbp2,sg,sr_mod,sd_mod,libata
ohci1394               33584  0
ieee1394               93752  2 sbp2,ohci1394
ehci_hcd               37900  0
uhci_hcd               27024  0
usbcore               146028  4 usbhid,ehci_hcd,uhci_hcd
thermal                16796  0
processor              36872  2 thermal
fan                     5636  0
fbcon                  42912  0
tileblit                3456  1 fbcon
font                    9472  1 fbcon
bitblit                 6784  1 fbcon
softcursor              3072  1 bitblit
fuse                   50580  3
================================================================
root at su-laptop:/home/su# *dmesg *
[    0.000000] Linux version 2.6.24-16-generic (buildd at palmer) (gcc version
4.2.3 (Ubuntu 4.2.3-2ubuntu7)) #1 SMP Thu Apr 10 13:23:42 UTC 2008 (Ubuntu
2.6.24-16.30-generic)
[    0.000000] BIOS-provided physical RAM map:
[    0.000000]  BIOS-e820: 0000000000000000 - 000000000009f800 (usable)
[    0.000000]  BIOS-e820: 000000000009f800 - 00000000000a0000 (reserved)
[    0.000000]  BIOS-e820: 00000000000dc000 - 0000000000100000 (reserved)
[    0.000000]  BIOS-e820: 0000000000100000 - 000000001f6e0000 (usable)
[    0.000000]  BIOS-e820: 000000001f6e0000 - 000000001f6ea000 (ACPI data)
[    0.000000]  BIOS-e820: 000000001f6ea000 - 000000001f700000 (ACPI NVS)
[    0.000000]  BIOS-e820: 000000001f700000 - 0000000020000000 (reserved)
[    0.000000]  BIOS-e820: 00000000e0000000 - 00000000f0006000 (reserved)
[    0.000000]  BIOS-e820: 00000000f0008000 - 00000000f000c000 (reserved)
[    0.000000]  BIOS-e820: 00000000fed20000 - 00000000fed90000 (reserved)
[    0.000000]  BIOS-e820: 00000000ff000000 - 0000000100000000 (reserved)
[    0.000000] 0MB HIGHMEM available.
[    0.000000] 502MB LOWMEM available.
[    0.000000] Entering add_active_range(0, 0, 128736) 0 entries of 256 used
[    0.000000] Zone PFN ranges:
[    0.000000]   DMA             0 ->     4096
[    0.000000]   Normal       4096 ->   128736
[    0.000000]   HighMem    128736 ->   128736
[    0.000000] Movable zone start PFN for each node
[    0.000000] early_node_map[1] active PFN ranges
[    0.000000]     0:        0 ->   128736
[    0.000000] On node 0 totalpages: 128736
[    0.000000]   DMA zone: 32 pages used for memmap
[    0.000000]   DMA zone: 0 pages reserved
[    0.000000]   DMA zone: 4064 pages, LIFO batch:0
[    0.000000]   Normal zone: 973 pages used for memmap
[    0.000000]   Normal zone: 123667 pages, LIFO batch:31
[    0.000000]   HighMem zone: 0 pages used for memmap
[    0.000000]   Movable zone: 0 pages used for memmap
[    0.000000] DMI present.
[    0.000000] ACPI: RSDP signature @ 0xC00F69D0 checksum 0
[    0.000000] ACPI: RSDP 000F69D0, 0014 (r0 TOSCPL)
[    0.000000] ACPI: RSDT 1F6E25A5, 0044 (r1 TOSCPL   RSDT    6040000
LTP        0)
[    0.000000] ACPI: APIC 1F6E9E88, 0068 (r1 INTEL  ALVISO    6040000
LOHR       5F)
[    0.000000] ACPI: FACP 1F6E9EF0, 0074 (r1 TOSCPL ALVISO    6040000
LOHR       32)
[    0.000000] ACPI: DSDT 1F6E36C5, 67C3 (r1 TOSCPL ALVISO    6040000 MSFT
100000E)
[    0.000000] ACPI: FACS 1F6FAFC0, 0040
[    0.000000] ACPI: BOOT 1F6E9FD8, 0028 (r1 PTLTD  $SBFTBL$  6040000
LTP        1)
[    0.000000] ACPI: MCFG 1F6E9F9C, 003C (r1 INTEL  ALVISO    6040000
LOHR       5F)
[    0.000000] ACPI: SSDT 1F6E3072, 064F (r1 SataRe  SataPri     1000 INTL
20030224)
[    0.000000] ACPI: SSDT 1F6E29E0, 0692 (r1 SataRe  SataSec     1000 INTL
20030224)
[    0.000000] ACPI: SSDT 1F6E2802, 01DE (r1  PmRef  Cpu0Cst     3001 INTL
20030224)
[    0.000000] ACPI: SSDT 1F6E25E9, 0219 (r1  PmRef    CpuPm     3000 INTL
20030224)
[    0.000000] ACPI: DMI detected: Toshiba
[    0.000000] ACPI: PM-Timer IO Port: 0x1008
[    0.000000] ACPI: Local APIC address 0xfee00000
[    0.000000] ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
[    0.000000] Processor #0 6:13 APIC version 20
[    0.000000] ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] disabled)
[    0.000000] ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
[    0.000000] ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
[    0.000000] ACPI: IOAPIC (id[0x01] address[0xfec00000] gsi_base[0])
[    0.000000] IOAPIC[0]: apic_id 1, version 32, address 0xfec00000, GSI
0-23
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.000000] ACPI: IRQ0 used by override.
[    0.000000] ACPI: IRQ2 used by override.
[    0.000000] ACPI: IRQ9 used by override.
[    0.000000] Enabling APIC mode:  Flat.  Using 1 I/O APICs
[    0.000000] Using ACPI (MADT) for SMP configuration information
[    0.000000] Allocating PCI resources starting at 30000000 (gap:
20000000:c0000000)
[    0.000000] swsusp: Registered nosave memory region: 000000000009f000 -
00000000000a0000
[    0.000000] swsusp: Registered nosave memory region: 00000000000a0000 -
00000000000dc000
[    0.000000] swsusp: Registered nosave memory region: 00000000000dc000 -
0000000000100000
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total
pages: 127731
[    0.000000] Kernel command line:
root=UUID=8d4fb767-94fa-47a7-a269-e0d865c8a089 ro quiet splash
[    0.000000] mapped APIC to ffffb000 (fee00000)
[    0.000000] mapped IOAPIC to ffffa000 (fec00000)
[    0.000000] Enabling fast FPU save and restore... done.
[    0.000000] Enabling unmasked SIMD FPU exception support... done.
[    0.000000] Initializing CPU#0
[    0.000000] PID hash table entries: 2048 (order: 11, 8192 bytes)
[    0.000000] Detected 1396.536 MHz processor.
[   11.023143] Console: colour VGA+ 80x25
[   11.023151] console [tty0] enabled
[   11.023372] Dentry cache hash table entries: 65536 (order: 6, 262144
bytes)
[   11.023649] Inode-cache hash table entries: 32768 (order: 5, 131072
bytes)
[   11.038541] Memory: 498084k/514944k available (2157k kernel code, 16244k
reserved, 998k data, 364k init, 0k highmem)
[   11.038551] virtual kernel memory layout:
[   11.038552]     fixmap  : 0xfff4b000 - 0xfffff000   ( 720 kB)
[   11.038554]     pkmap   : 0xff800000 - 0xffc00000   (4096 kB)
[   11.038555]     vmalloc : 0xe0000000 - 0xff7fe000   ( 503 MB)
[   11.038557]     lowmem  : 0xc0000000 - 0xdf6e0000   ( 502 MB)
[   11.038558]       .init : 0xc041b000 - 0xc0476000   ( 364 kB)
[   11.038560]       .data : 0xc031b5a4 - 0xc0414dc4   ( 998 kB)
[   11.038561]       .text : 0xc0100000 - 0xc031b5a4   (2157 kB)
[   11.038565] Checking if this processor honours the WP bit even in
supervisor mode... Ok.
[   11.038609] SLUB: Genslabs=11, HWalign=64, Order=0-1, MinObjects=4,
CPUs=1, Nodes=1
[   11.118612] Calibrating delay using timer specific routine.. 2796.37
BogoMIPS (lpj=5592755)
[   11.118643] Security Framework initialized
[   11.118652] SELinux:  Disabled at boot.
[   11.118669] AppArmor: AppArmor initialized
[   11.118674] Failure registering capabilities with primary security
module.
[   11.118686] Mount-cache hash table entries: 512
[   11.118840] CPU: After generic identify, caps: afe9fbff 00000000 00000000
00000000 00000000 00000000 00000000 00000000
[   11.118857] CPU: L1 I cache: 32K, L1 D cache: 32K
[   11.118860] CPU: L2 cache: 1024K
[   11.118864] CPU: After all inits, caps: afe9fbff 00000000 00000000
00002040 00000000 00000000 00000000 00000000
[   11.118874] Compat vDSO mapped to ffffe000.
[   11.118888] Checking 'hlt' instruction... OK.
[   11.135075] SMP alternatives: switching to UP code
[   11.137381] Freeing SMP alternatives: 11k freed
[   11.137510] Early unpacking initramfs... done
[   11.595890] ACPI: Core revision 20070126
[   11.595989] ACPI: Looking for DSDT in initramfs... error, file /DSDT.aml
not found.
[   11.632456] CPU0: Intel(R) Celeron(R) M processor         1.40GHz
stepping 08
[   11.632484] Total of 1 processors activated (2796.37 BogoMIPS).
[   11.632680] ENABLING IO-APIC IRQs
[   11.632883] ..TIMER: vector=0x31 apic1=0 pin1=2 apic2=-1 pin2=-1
[   11.778478] Brought up 1 CPUs
[   11.778509] CPU0 attaching sched-domain:
[   11.778512]  domain 0: span 01
[   11.778514]   groups: 01
[   11.778725] net_namespace: 64 bytes
[   11.778735] Booting paravirtualized kernel on bare hardware
[   11.779319] Time:  8:31:26  Date: 08/28/08
[   11.779350] NET: Registered protocol family 16
[   11.779584] EISA bus registered
[   11.779613] ACPI: bus type pci registered
[   11.780205] PCI: PCI BIOS revision 2.10 entry at 0xfd944, last bus=7
[   11.780211] PCI: Using configuration type 1
[   11.780213] Setting up standard PCI resources
[   11.785016] ACPI: EC: Look up EC in DSDT
[   11.800525] ACPI: Interpreter enabled
[   11.800529] ACPI: (supports S0 S3 S4 S5)
[   11.800544] ACPI: Using IOAPIC for interrupt routing
[   11.847204] ACPI: EC: GPE = 0x1d, I/O: command/status = 0x66, data = 0x62
[   11.847208] ACPI: EC: driver started in poll mode
[   11.847255] ACPI: PCI Root Bridge [PCI0] (0000:00)
[   11.848073] Force enabled HPET at base address 0xfed00000
[   11.848083] PCI quirk: region 1000-107f claimed by ICH6 ACPI/GPIO/TCO
[   11.848088] PCI quirk: region 1180-11bf claimed by ICH6 GPIO
[   11.848865] PCI: Transparent bridge - 0000:00:1e.0
[   11.848953] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
[   11.849289] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP01._PRT]
[   11.849462] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PCIB._PRT]
[   11.856891] ACPI: PCI Interrupt Link [LNKA] (IRQs 1 3 4 5 6 7 *10 12 14
15)
[   11.857011] ACPI: PCI Interrupt Link [LNKB] (IRQs 1 3 4 5 6 7 11 12 14
15) *10
[   11.857127] ACPI: PCI Interrupt Link [LNKC] (IRQs 1 3 4 5 6 7 10 12 14
15) *11
[   11.857242] ACPI: PCI Interrupt Link [LNKD] (IRQs 1 3 4 5 6 7 *11 12 14
15)
[   11.857357] ACPI: PCI Interrupt Link [LNKE] (IRQs 1 3 4 5 6 7 10 12 14
15) *11
[   11.857475] ACPI: PCI Interrupt Link [LNKF] (IRQs 1 3 4 5 6 7 11 12 14
15) *0, disabled.
[   11.857590] ACPI: PCI Interrupt Link [LNKG] (IRQs 1 3 4 5 6 7 10 12 14
15) *0, disabled.
[   11.857707] ACPI: PCI Interrupt Link [LNKH] (IRQs 1 3 4 5 6 7 *11 12 14
15)
[   11.857858] Linux Plug and Play Support v0.97 (c) Adam Belay
[   11.857896] pnp: PnP ACPI init
[   11.857908] ACPI: bus type pnp registered
[   11.882643] pnp: PnP ACPI: found 11 devices
[   11.882646] ACPI: ACPI bus type pnp unregistered
[   11.882651] PnPBIOS: Disabled by ACPI PNP
[   11.882906] PCI: Using ACPI for IRQ routing
[   11.882910] PCI: If a device doesn't work, try "pci=routeirq".  If it
helps, post a report
[   11.918396] NET: Registered protocol family 8
[   11.918399] NET: Registered protocol family 20
[   11.918596] hpet clockevent registered
[   11.918603] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[   11.918608] hpet0: 3 64-bit timers, 14318180 Hz
[   11.919661] AppArmor: AppArmor Filesystem Enabled
[   11.922386] Time: tsc clocksource has been installed.
[   11.930427] system 00:01: ioport range 0xfe00-0xfe7f has been reserved
[   11.930431] system 00:01: ioport range 0xfe80-0xfeff has been reserved
[   11.930434] system 00:01: ioport range 0xff00-0xff7f has been reserved
[   11.930438] system 00:01: iomem range 0xe0000000-0xefffffff could not be
reserved
[   11.930442] system 00:01: iomem range 0xf0000000-0xf0003fff could not be
reserved
[   11.930446] system 00:01: iomem range 0xf0004000-0xf0004fff could not be
reserved
[   11.930450] system 00:01: iomem range 0xf0005000-0xf0005fff could not be
reserved
[   11.930454] system 00:01: iomem range 0xf0008000-0xf000bfff could not be
reserved
[   11.930458] system 00:01: iomem range 0xfed20000-0xfed8ffff could not be
reserved
[   11.930467] system 00:05: ioport range 0x800-0x80f has been reserved
[   11.930471] system 00:05: ioport range 0x1000-0x107f has been reserved
[   11.930474] system 00:05: ioport range 0x1180-0x11bf has been reserved
[   11.930478] system 00:05: ioport range 0x1640-0x164f has been reserved
[   11.960969] PCI: Bridge: 0000:00:1c.0
[   11.960973]   IO window: 3000-3fff
[   11.960980]   MEM window: b4000000-b7ffffff
[   11.960985]   PREFETCH window: d0000000-d3ffffff
[   11.960997] PCI: Bus 7, cardbus bridge: 0000:06:04.0
[   11.961000]   IO window: 00001400-000014ff
[   11.961006]   IO window: 00002800-000028ff
[   11.961012]   PREFETCH window: 34000000-37ffffff
[   11.961018]   MEM window: 38000000-3bffffff
[   11.961023] PCI: Bridge: 0000:00:1e.0
[   11.961025]   IO window: disabled.
[   11.961031]   MEM window: b8000000-b80fffff
[   11.961036]   PREFETCH window: disabled.
[   11.961071] ACPI: PCI Interrupt 0000:00:1c.0[A] -> GSI 17 (level, low) ->
IRQ 16
[   11.961081] PCI: Setting latency timer of device 0000:00:1c.0 to 64
[   11.961095] PCI: Setting latency timer of device 0000:00:1e.0 to 64
[   11.961114] ACPI: PCI Interrupt 0000:06:04.0[A] -> GSI 16 (level, low) ->
IRQ 17
[   11.961131] NET: Registered protocol family 2
[   11.998441] IP route cache hash table entries: 4096 (order: 2, 16384
bytes)
[   11.998675] TCP established hash table entries: 16384 (order: 5, 131072
bytes)
[   11.998806] TCP bind hash table entries: 16384 (order: 5, 131072 bytes)
[   11.998935] TCP: Hash tables configured (established 16384 bind 16384)
[   11.998938] TCP reno registered
[   12.010507] checking if image is initramfs...<7>Switched to high
resolution mode on CPU 0
[   12.442042]  it is
[   12.908373] Freeing initrd memory: 7700k freed
[   12.908639] Simple Boot Flag at 0x36 set to 0x1
[   12.909151] audit: initializing netlink socket (disabled)
[   12.909171] audit(1219912286.732:1): initialized
[   12.911707] VFS: Disk quotas dquot_6.5.1
[   12.911808] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[   12.911991] io scheduler noop registered
[   12.911994] io scheduler anticipatory registered
[   12.911997] io scheduler deadline registered
[   12.912011] io scheduler cfq registered (default)
[   12.912026] Boot video device is 0000:00:02.0
[   12.912262] PCI: Setting latency timer of device 0000:00:1c.0 to 64
[   12.912319] assign_interrupt_mode Found MSI capability
[   12.912373] Allocate Port Service[0000:00:1c.0:pcie00]
[   12.912418] Allocate Port Service[0000:00:1c.0:pcie02]
[   12.912720] isapnp: Scanning for PnP cards...
[   13.266980] isapnp: No Plug & Play device found
[   13.302323] Real Time Clock Driver v1.12ac
[   13.302460] Serial: 8250/16550 driver $Revision: 1.90 $ 4 ports, IRQ
sharing enabled
[   13.302621] serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[   13.303461] 00:07: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[   13.303700] ACPI: PCI Interrupt 0000:00:1e.3[B] -> GSI 20 (level, low) ->
IRQ 18
[   13.303710] ACPI: PCI interrupt for device 0000:00:1e.3 disabled
[   13.304472] RAMDISK driver initialized: 16 RAM disks of 65536K size 1024
blocksize
[   13.304568] input: Macintosh mouse button emulation as
/devices/virtual/input/input0
[   13.304687] PNP: PS/2 Controller [PNP0303:PS2K,PNP0f13:PS2M] at 0x60,0x64
irq 1,12
[   13.305031] i8042.c: Detected active multiplexing controller, rev 1.1.
[   13.305103] serio: i8042 KBD port at 0x60,0x64 irq 1
[   13.305108] serio: i8042 AUX0 port at 0x60,0x64 irq 12
[   13.305111] serio: i8042 AUX1 port at 0x60,0x64 irq 12
[   13.305114] serio: i8042 AUX2 port at 0x60,0x64 irq 12
[   13.305117] serio: i8042 AUX3 port at 0x60,0x64 irq 12
[   13.310031] mice: PS/2 mouse device common for all mice
[   13.310171] EISA: Probing bus 0 at eisa.0
[   13.310178] Cannot allocate resource for EISA slot 1
[   13.310181] Cannot allocate resource for EISA slot 2
[   13.310184] Cannot allocate resource for EISA slot 3
[   13.310207] EISA: Detected 0 cards.
[   13.310210] cpuidle: using governor ladder
[   13.310213] cpuidle: using governor menu
[   13.310330] NET: Registered protocol family 1
[   13.310364] Using IPI No-Shortcut mode
[   13.310410] registered taskstats version 1
[   13.310557]   Magic number: 4:441:524
[   13.310702] BIOS EDD facility v0.16 2004-Jun-25, 0 devices found
[   13.310705] EDD information not available.
[   13.310938] Freeing unused kernel memory: 364k freed
[   13.313403] input: AT Translated Set 2 keyboard as
/devices/platform/i8042/serio0/input/input1
[   14.574466] fuse init (API version 7.9)
[   14.594913] ACPI: CPU0 (power states: C1[C1] C2[C2] C3[C3])
[   14.594933] ACPI Exception (processor_core-0816): AE_NOT_FOUND, Processor
Device is not present [20070126]
[   15.333136] usbcore: registered new interface driver usbfs
[   15.333167] usbcore: registered new interface driver hub
[   15.345101] usbcore: registered new device driver usb
[   15.361084] USB Universal Host Controller Interface driver v3.0
[   15.361169] ACPI: PCI Interrupt 0000:00:1d.0[A] -> GSI 23 (level, low) ->
IRQ 19
[   15.361184] PCI: Setting latency timer of device 0000:00:1d.0 to 64
[   15.361189] uhci_hcd 0000:00:1d.0: UHCI Host Controller
[   15.361613] uhci_hcd 0000:00:1d.0: new USB bus registered, assigned bus
number 1
[   15.361651] uhci_hcd 0000:00:1d.0: irq 19, io base 0x00001820
[   15.361826] usb usb1: configuration #1 chosen from 1 choice
[   15.361856] hub 1-0:1.0: USB hub found
[   15.361863] hub 1-0:1.0: 2 ports detected
[   15.465170] ACPI: PCI Interrupt 0000:00:1d.1[B] -> GSI 19 (level, low) ->
IRQ 20
[   15.465186] PCI: Setting latency timer of device 0000:00:1d.1 to 64
[   15.465192] uhci_hcd 0000:00:1d.1: UHCI Host Controller
[   15.465221] uhci_hcd 0000:00:1d.1: new USB bus registered, assigned bus
number 2
[   15.465257] uhci_hcd 0000:00:1d.1: irq 20, io base 0x00001840
[   15.465395] usb usb2: configuration #1 chosen from 1 choice
[   15.465427] hub 2-0:1.0: USB hub found
[   15.465434] hub 2-0:1.0: 2 ports detected
[   15.569109] ACPI: PCI Interrupt 0000:00:1d.2[C] -> GSI 18 (level, low) ->
IRQ 21
[   15.569126] PCI: Setting latency timer of device 0000:00:1d.2 to 64
[   15.569132] uhci_hcd 0000:00:1d.2: UHCI Host Controller
[   15.569160] uhci_hcd 0000:00:1d.2: new USB bus registered, assigned bus
number 3
[   15.569195] uhci_hcd 0000:00:1d.2: irq 21, io base 0x00001860
[   15.569333] usb usb3: configuration #1 chosen from 1 choice
[   15.569362] hub 3-0:1.0: USB hub found
[   15.569369] hub 3-0:1.0: 2 ports detected
[   15.593284] SCSI subsystem initialized
[   15.667998] libata version 3.00 loaded.
[   15.673042] ACPI: PCI Interrupt 0000:00:1d.3[D] -> GSI 16 (level, low) ->
IRQ 17
[   15.673056] PCI: Setting latency timer of device 0000:00:1d.3 to 64
[   15.673062] uhci_hcd 0000:00:1d.3: UHCI Host Controller
[   15.673090] uhci_hcd 0000:00:1d.3: new USB bus registered, assigned bus
number 4
[   15.673127] uhci_hcd 0000:00:1d.3: irq 17, io base 0x00001880
[   15.673263] usb usb4: configuration #1 chosen from 1 choice
[   15.673300] hub 4-0:1.0: USB hub found
[   15.673306] hub 4-0:1.0: 2 ports detected
[   15.704943] usb 1-2: new low speed USB device using uhci_hcd and address
2
[   15.777149] ACPI: PCI Interrupt 0000:00:1d.7[A] -> GSI 23 (level, low) ->
IRQ 19
[   15.777168] PCI: Setting latency timer of device 0000:00:1d.7 to 64
[   15.777173] ehci_hcd 0000:00:1d.7: EHCI Host Controller
[   15.777203] ehci_hcd 0000:00:1d.7: new USB bus registered, assigned bus
number 5
[   15.781121] ehci_hcd 0000:00:1d.7: debug port 1
[   15.781129] PCI: cache line size of 32 is not supported by device
0000:00:1d.7
[   15.781138] ehci_hcd 0000:00:1d.7: irq 19, io mem 0xb0040000
[   15.832884] ehci_hcd 0000:00:1d.7: USB 2.0 started, EHCI 1.00, driver 10
Dec 2004
[   15.833040] usb usb5: configuration #1 chosen from 1 choice
[   15.833071] hub 5-0:1.0: USB hub found
[   15.833079] hub 5-0:1.0: 8 ports detected
[   15.937145] ACPI: PCI Interrupt 0000:06:04.2[C] -> GSI 18 (level, low) ->
IRQ 21
[   15.986968] ohci1394: fw-host0: OHCI-1394 1.1 (PCI): IRQ=[21]
MMIO=[b8007000-b80077ff]  Max Packet=[2048]  IR/IT contexts=[4/8]
[   15.995000] ata_piix 0000:00:1f.2: version 2.12
[   15.995010] ata_piix 0000:00:1f.2: MAP [ P0 P2 IDE IDE ]
[   15.995049] ACPI: PCI Interrupt 0000:00:1f.2[B] -> GSI 19 (level, low) ->
IRQ 20
[   15.995092] PCI: Setting latency timer of device 0000:00:1f.2 to 64
[   15.996048] scsi0 : ata_piix
[   15.996682] scsi1 : ata_piix
[   15.997807] ata1: SATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x18b0 irq
14
[   15.997811] ata2: PATA max UDMA/100 cmd 0x170 ctl 0x376 bmdma 0x18b8 irq
15
[   16.161273] ata1.00: ATA-6: HTS541060G9AT00, MB3OA60A, max UDMA/100
[   16.161281] ata1.00: 117210240 sectors, multi 16: LBA48
[   16.161285] ata1.00: applying bridge limits
[   16.177274] ata1.00: configured for UDMA/100
[   16.228716] usb 1-2: device not accepting address 2, error -71
[   16.416637] Clocksource tsc unstable (delta = -699119011 ns)
[   16.421070] Time: hpet clocksource has been installed.
[   16.429922] ata2.00: ATAPI: DV-W28EAT, 1.9B, max UDMA/33
[   16.450465] ata2.00: configured for UDMA/33
[   16.450616] scsi 0:0:0:0: Direct-Access     ATA      HTS541060G9AT00
MB3O PQ: 0 ANSI: 5
[   16.452177] scsi 1:0:0:0: CD-ROM            TEAC     DV-W28EAT
1.9B PQ: 0 ANSI: 5
[   16.472542] Driver 'sd' needs updating - please use bus_type methods
[   16.472651] sd 0:0:0:0: [sda] 117210240 512-byte hardware sectors (60012
MB)
[   16.472667] sd 0:0:0:0: [sda] Write Protect is off
[   16.472671] sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[   16.472691] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled,
doesn't support DPO or FUA
[   16.472747] sd 0:0:0:0: [sda] 117210240 512-byte hardware sectors (60012
MB)
[   16.472759] sd 0:0:0:0: [sda] Write Protect is off
[   16.472762] sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[   16.472780] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled,
doesn't support DPO or FUA
[   16.472784]  sda:<4>Driver 'sr' needs updating - please use bus_type
methods
[   16.489500] usb 1-2: new low speed USB device using uhci_hcd and address
4
[   16.493301]  sda1 < sda5 sda6 > sda2 sda3
[   16.522652] sd 0:0:0:0: [sda] Attached SCSI disk
[   16.530342] sd 0:0:0:0: Attached scsi generic sg0 type 0
[   16.530368] sr 1:0:0:0: Attached scsi generic sg1 type 5
[   16.577498] sr0: scsi3-mmc drive: 24x/24x writer dvd-ram cd/rw xa/form2
cdda tray
[   16.577506] Uniform CD-ROM driver Revision: 3.20
[   16.577576] sr 1:0:0:0: Attached scsi CD-ROM sr0
[   16.667579] usb 1-2: configuration #1 chosen from 1 choice
[   16.695994] usbcore: registered new interface driver hiddev
[   16.708840] input: Logitech Logitech USB Optical Mouse as
/devices/pci0000:00/0000:00:1d.0/usb1/1-2/1-2:1.0/input/input2
[   16.713487] input,hidraw0: USB HID v1.11 Mouse [Logitech Logitech USB
Optical Mouse] on usb-0000:00:1d.0-2
[   16.713508] usbcore: registered new interface driver usbhid
[   16.713513] /build/buildd/linux-2.6.24/drivers/hid/usbhid/hid-core.c:
v2.6:USB HID core driver
[   16.894078] Attempting manual resume
[   16.894083] swsusp: Resume From Partition 8:6
[   16.894086] PM: Checking swsusp image.
[   16.894294] PM: Resume from disk failed.
[   16.933259] kjournald starting.  Commit interval 5 seconds
[   16.933276] EXT3-fs: mounted filesystem with ordered data mode.
[   24.756000] Linux agpgart interface v0.102
[   24.823250] agpgart: Detected an Intel 915GM Chipset.
[   24.823549] agpgart: Detected 7932K stolen memory.
[   24.900716] pci_hotplug: PCI Hot Plug PCI Core version: 0.5
[   25.007975] agpgart: AGP aperture is 256M @ 0xc0000000
[   25.008012] shpchp: Standard Hot Plug PCI Controller Driver version: 0.4
[   25.455603] intel_rng: FWH not detected
[   25.555771] input: Power Button (FF) as /devices/virtual/input/input3
[   25.571476] ACPI: Power Button (FF) [PWRF]
[   25.571835] input: Lid Switch as /devices/virtual/input/input4
[   25.571925] ACPI: Lid Switch [LID0]
[   25.571998] input: Power Button (CM) as /devices/virtual/input/input5
[   25.583525] ACPI: Power Button (CM) [PWRB]
[   25.771505] iTCO_vendor_support: vendor-support=0
[   25.827459] iTCO_wdt: Intel TCO WatchDog Timer Driver v1.02 (26-Jul-2007)
[   25.827577] iTCO_wdt: Found a ICH6-M TCO device (Version=2,
TCOBASE=0x1060)
[   25.827617] iTCO_wdt: initialized. heartbeat=30 sec (nowayout=0)
[   26.526183] input: PC Speaker as /devices/platform/pcspkr/input/input6
[   27.343528] input: Video Bus as
/devices/LNXSYSTM:00/device:00/PNP0A08:00/device:01/LNXVIDEO:00/input/input7
[   27.354802] ACPI: Video Device [VGA] (multi-head: yes  rom: no  post: no)
[   27.355271] input: Video Bus as
/devices/LNXSYSTM:00/device:00/PNP0A08:00/LNXVIDEO:01/input/input8
[   27.370791] ACPI: Video Device [GFX0] (multi-head: yes  rom: yes  post:
no)
[   27.511162] ACPI: AC Adapter [ACAD] (on-line)
[   28.111205] ACPI: Battery Slot [BAT1] (battery present)
[   28.606530] ACPI: PCI Interrupt 0000:02:00.0[A] -> GSI 16 (level, low) ->
IRQ 17
[   28.606548] PCI: Setting latency timer of device 0000:02:00.0 to 64
[   28.606591] sky2 0000:02:00.0: v1.20 addr 0xb4000000 irq 17 Yukon-FE
(0xb7) rev 1
[   28.607083] sky2 eth0: addr 00:0f:b0:d9:42:04
[   29.350076] Yenta: CardBus bridge found at 0000:06:04.0 [1179:ff00]
[   29.350101] Yenta: Enabling burst memory read transactions
[   29.350108] Yenta: Using CSCINT to route CSC interrupts to PCI
[   29.350110] Yenta: Routing CardBus interrupts to PCI
[   29.350117] Yenta TI: socket 0000:06:04.0, mfunc 0x10aa1b22, devctl 0x66
[   29.379191] sdhci: Secure Digital Host Controller Interface driver
[   29.379197] sdhci: Copyright(c) Pierre Ossman
[   29.582695] Yenta: ISA IRQ mask 0x0cf8, PCI irq 17
[   29.582701] Socket status: 30000820
[   29.582704] Yenta: Raising subordinate bus# of parent bus (#06) from #07
to #0a
[   29.582711] pcmcia: parent PCI bridge Memory window: 0xb8000000 -
0xb80fffff
[   29.630133] sdhci: SDHCI controller found at 0000:06:04.4 [104c:8034]
(rev 0)
[   29.630160] ACPI: PCI Interrupt 0000:06:04.4[D] -> GSI 19 (level, low) ->
IRQ 20
[   29.630189] sdhci:slot0: Will use DMA mode even though HW doesn't fully
claim to support it.
[   29.630238] mmc0: SDHCI at 0xb8008000 irq 20 DMA
[   29.630250] sdhci:slot1: Will use DMA mode even though HW doesn't fully
claim to support it.
[   29.630283] mmc1: SDHCI at 0xb8007c00 irq 20 DMA
[   29.630294] sdhci:slot2: Will use DMA mode even though HW doesn't fully
claim to support it.
[   29.630325] mmc2: SDHCI at 0xb8007800 irq 20 DMA
[   29.630367] ACPI: PCI Interrupt 0000:06:04.3[B] -> GSI 17 (level, low) ->
IRQ 16
[   29.827889] ACPI: PCI Interrupt 0000:00:1e.2[A] -> GSI 17 (level, low) ->
IRQ 16
[   29.827925] PCI: Setting latency timer of device 0000:00:1e.2 to 64
[   29.979857] input: PS/2 Mouse as /devices/virtual/input/input9
[   30.005473] input: AlpsPS/2 ALPS GlidePoint as
/devices/platform/i8042/serio4/input/input10
[   30.020539] parport_pc 00:08: reported by Plug and Play ACPI
[   30.020611] parport0: PC-style at 0x378 (0x778), irq 7, dma 1
[PCSPP,TRISTATE,COMPAT,ECP,DMA]
[   30.277612] pccard: CardBus card inserted into slot 0
[   30.653445] intel8x0_measure_ac97_clock: measured 55395 usecs
[   30.653451] intel8x0: clocking to 48000
[   31.918565] sky2 eth0: enabling interface
[   32.434373] cs: IO port probe 0x100-0x3af: clean.
[   32.436086] cs: IO port probe 0x3e0-0x4ff: excluding 0x4d0-0x4d7
[   32.436828] cs: IO port probe 0x820-0x8ff: clean.
[   32.437430] cs: IO port probe 0xc00-0xcf7: clean.
[   32.438208] cs: IO port probe 0xa00-0xaff: clean.
[   32.649690] lp0: using parport0 (interrupt-driven).
[   32.727767] Adding 1831336k swap on /dev/sda6.  Priority:-1 extents:1
across:1831336k
[   33.336617] NET: Registered protocol family 17
[   33.348230] EXT3 FS on sda3, internal journal
[   33.467204] sky2 eth0: Link is up at 100 Mbps, full duplex, flow control
both
[   34.604003] ip_tables: (C) 2000-2006 Netfilter Core Team
[   35.058493] No dock devices found.
[   36.243515] apm: BIOS version 1.2 Flags 0x03 (Driver version 1.16ac)
[   36.243522] apm: overridden by ACPI.
[   36.390126] ppdev: user-space parallel port driver
[   36.539384] audit(1219923112.454:2): type=1503
operation="inode_permission" requested_mask="a::" denied_mask="a::"
name="/dev/tty" pid=4968 profile="/usr/sbin/cupsd" namespace="default"
[   37.655012] Bluetooth: Core ver 2.11
[   37.655955] NET: Registered protocol family 31
[   37.655959] Bluetooth: HCI device and connection manager initialized
[   37.655965] Bluetooth: HCI socket layer initialized
[   37.679360] Bluetooth: L2CAP ver 2.9
[   37.679365] Bluetooth: L2CAP socket layer initialized
[   37.742319] Bluetooth: RFCOMM socket layer initialized
[   37.742342] Bluetooth: RFCOMM TTY layer initialized
[   37.742344] Bluetooth: RFCOMM ver 1.8
[   40.321368] [drm] Initialized drm 1.1.0 20060810
[   40.325431] ACPI: PCI Interrupt 0000:00:02.0[A] -> GSI 16 (level, low) ->
IRQ 17
[   40.325443] PCI: Setting latency timer of device 0000:00:02.0 to 64
[   40.325541] [drm] Initialized i915 1.6.0 20060119 on minor 0
[   67.974272] NET: Registered protocol family 10
[   67.975009] lo: Disabled Privacy Extensions
[   73.875386] eth0: no IPv6 routers present
[  114.537884] ACPI: EC: non-query interrupt received, switching to
interrupt mode
[  177.299813] sky2 eth0: disabling interface
[  177.401511] sky2 eth0: enabling interface
[  177.404350] ADDRCONF(NETDEV_UP): eth0: link is not ready
[  178.597503] sky2 eth0: Link is up at 100 Mbps, full duplex, flow control
both
[  178.597753] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[  182.273466] eth0: no IPv6 routers present
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080828/c19dddb1/attachment.html>

From Larry.Finger at lwfinger.net  Thu Aug 28 17:19:25 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 28 Aug 2008 10:19:25 -0500
Subject: Wireless Problems - Ubuntu 8.04
In-Reply-To: <b81ef96c0808280444g2be951efxe9c6704db7f1f4fc@mail.gmail.com>
References: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>	<14b026160808280046h5c9787c9m4eee1c6cccbad949@mail.gmail.com>
	<b81ef96c0808280444g2be951efxe9c6704db7f1f4fc@mail.gmail.com>
Message-ID: <48B6C1FD.6060001@lwfinger.net>

Susan Higashi wrote:

> 07:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8180L 
> 802.11b MAC (rev 20)

The above line is why 'dmesg | grep b43' provides nothing. You do not 
have a Broadcom device. Thus installing firmware for it does 
absolutely no good. Your wireless device is an RTL8180L. The current 
kernel supports a number of 8180 PCI devices; however, I don't see a 
driver loaded for yours in the lsmod listing below. That means that 
your specific device is not supported, or Ubuntu didn't configure it. 
To determine if the device is supported, you need to issue the command 
'lspci -nnv' and post the first two lines of the section that starts 
"07:00.0". For better coverage of your problem, I suggest that you 
post to linux-wireless at vger.kernel.org, where other that Broadcom 
devices are handled. I read that list too, and will be able to follow 
up on your posting.

Larry



From mb at bu3sch.de  Thu Aug 28 19:13:51 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 28 Aug 2008 19:13:51 +0200
Subject: [PATCH] b43: Don't use memcpy for overlapping areas
Message-ID: <200808281913.52260.mb@bu3sch.de>

It is valid to pass &gphy->rfatt and &gphy->bbatt as rfatt and bbatt
pointer arguments to the function. So we have to use memmove for the
possibly overlapping memory areas.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, since we have new policies for bugfixes and I can't prove that this
will actually fix something for somebody in real life, please queue for
the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/phy_g.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.c	2008-08-28 19:03:11.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.c	2008-08-28 19:08:13.000000000 +0200
@@ -229,17 +229,18 @@ void b43_set_txpower_g(struct b43_wldev 
 	rf = rfatt->att;
 	tx_bias = lo->tx_bias;
 	tx_magn = lo->tx_magn;
 	if (unlikely(tx_bias == 0xFF))
 		tx_bias = 0;
 
-	/* Save the values for later */
+	/* Save the values for later. Use memmove, because it's valid
+	 * to pass &gphy->rfatt as rfatt pointer argument. Same for bbatt. */
 	gphy->tx_control = tx_control;
-	memcpy(&gphy->rfatt, rfatt, sizeof(*rfatt));
+	memmove(&gphy->rfatt, rfatt, sizeof(*rfatt));
 	gphy->rfatt.with_padmix = !!(tx_control & B43_TXCTL_TXMIX);
-	memcpy(&gphy->bbatt, bbatt, sizeof(*bbatt));
+	memmove(&gphy->bbatt, bbatt, sizeof(*bbatt));
 
 	if (b43_debug(dev, B43_DBG_XMITPOWER)) {
 		b43dbg(dev->wl, "Tuning TX-power to bbatt(%u), "
 		       "rfatt(%u), tx_control(0x%02X), "
 		       "tx_bias(0x%02X), tx_magn(0x%02X)\n",
 		       bb, rf, tx_control, tx_bias, tx_magn);


From susanhigashi at gmail.com  Thu Aug 28 19:34:15 2008
From: susanhigashi at gmail.com (Susan Higashi)
Date: Thu, 28 Aug 2008 14:34:15 -0300
Subject: Wireless Problems - Ubuntu 8.04
In-Reply-To: <48B6C1FD.6060001@lwfinger.net>
References: <b81ef96c0808271712t6ba1124cs6597a0efb8b6f0ea@mail.gmail.com>
	<14b026160808280046h5c9787c9m4eee1c6cccbad949@mail.gmail.com>
	<b81ef96c0808280444g2be951efxe9c6704db7f1f4fc@mail.gmail.com>
	<48B6C1FD.6060001@lwfinger.net>
Message-ID: <b81ef96c0808281034g4360a9f9n261a55fda221e5b0@mail.gmail.com>

Thanks for your explanation Larry, here is what you asked:

07:00.0 Ethernet controller [0200]: Realtek Semiconductor Co., Ltd. RTL8180L
802.11b MAC [10ec:8180] (rev 20)
    Subsystem: Realtek Semiconductor Co., Ltd. RTL8180L 802.11b MAC
[10ec:8180]
    Flags: medium devsel, IRQ 17
    I/O ports at 1400 [disabled] [size=256]
    Memory at 38000000 (32-bit, non-prefetchable) [disabled] [size=512]
    Capabilities: [50] Power Management version 2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080828/653947b5/attachment.html>

From mb at bu3sch.de  Thu Aug 28 19:33:40 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 28 Aug 2008 19:33:40 +0200
Subject: [PATCH] b43: Rewrite TX power adjustment
Message-ID: <200808281933.41136.mb@bu3sch.de>

This patch rewrites the TX power recalculation algorithms to scale better
with changed enviromnent. If there's low
TX traffic, the power will be checked against the desired values
every 60 seconds.
If there is high TX traffic, the check is redone every 2 seconds. This improves
the reaction times a lot and confuses the rate control less.
It will also reduce the time it initially takes to tune to a new TX power
value. With the old algorithm it could take about 30 to 45 seconds to settle to
a new power value. This will happen in about two to four seconds now.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2008-08-28 18:38:22.000000000 +0200
@@ -170,12 +170,17 @@ enum {
 #define B43_SHM_SH_RADAR		0x0066	/* Radar register */
 #define B43_SHM_SH_PHYTXNOI		0x006E	/* PHY noise directly after TX (lower 8bit only) */
 #define B43_SHM_SH_RFRXSP1		0x0072	/* RF RX SP Register 1 */
 #define B43_SHM_SH_CHAN			0x00A0	/* Current channel (low 8bit only) */
 #define  B43_SHM_SH_CHAN_5GHZ		0x0100	/* Bit set, if 5Ghz channel */
 #define B43_SHM_SH_BCMCFIFOID		0x0108	/* Last posted cookie to the bcast/mcast FIFO */
+/* TSSI information */
+#define B43_SHM_SH_TSSI_CCK		0x0058	/* TSSI for last 4 CCK frames (32bit) */
+#define B43_SHM_SH_TSSI_OFDM_A		0x0068	/* TSSI for last 4 OFDM frames (32bit) */
+#define B43_SHM_SH_TSSI_OFDM_G		0x0070	/* TSSI for last 4 OFDM frames (32bit) */
+#define  B43_TSSI_MAX			0x7F	/* Max value for one TSSI value */
 /* SHM_SHARED TX FIFO variables */
 #define B43_SHM_SH_SIZE01		0x0098	/* TX FIFO size for FIFO 0 (low) and 1 (high) */
 #define B43_SHM_SH_SIZE23		0x009A	/* TX FIFO size for FIFO 2 and 3 */
 #define B43_SHM_SH_SIZE45		0x009C	/* TX FIFO size for FIFO 4 and 5 */
 #define B43_SHM_SH_SIZE67		0x009E	/* TX FIFO size for FIFO 6 and 7 */
 /* SHM_SHARED background noise */
@@ -645,12 +650,17 @@ struct b43_wl {
 
 	/* The current QOS parameters for the 4 queues.
 	 * This is protected by the irq_lock. */
 	struct b43_qos_params qos_params[4];
 	/* Workqueue for updating QOS parameters in hardware. */
 	struct work_struct qos_update_work;
+
+	/* Work for adjustment of the transmission power.
+	 * This is scheduled when we determine that the actual TX output
+	 * power doesn't match what we want. */
+	struct work_struct txpower_adjust_work;
 };
 
 /* In-memory representation of a cached microcode file. */
 struct b43_firmware_file {
 	const char *filename;
 	const struct firmware *data;
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-08-28 18:41:27.000000000 +0200
@@ -2802,12 +2802,15 @@ err_gpio_clean:
 static void b43_periodic_every60sec(struct b43_wldev *dev)
 {
 	const struct b43_phy_operations *ops = dev->phy.ops;
 
 	if (ops->pwork_60sec)
 		ops->pwork_60sec(dev);
+
+	/* Force check the TX power emission now. */
+	b43_phy_txpower_check(dev, B43_TXPWR_IGNORE_TIME);
 }
 
 static void b43_periodic_every30sec(struct b43_wldev *dev)
 {
 	/* Update device statistics. */
 	b43_calculate_link_quality(dev);
@@ -2832,14 +2835,12 @@ static void b43_periodic_every15sec(stru
 		}
 	}
 
 	if (phy->ops->pwork_15sec)
 		phy->ops->pwork_15sec(dev);
 
-	phy->ops->xmitpower(dev);
-
 	atomic_set(&phy->txerr_cnt, B43_PHY_TX_BADNESS_LIMIT);
 	wmb();
 }
 
 static void do_periodic_work(struct b43_wldev *dev)
 {
@@ -3379,16 +3380,19 @@ static int b43_op_config(struct ieee8021
 	}
 
 	dev->wl->radiotap_enabled = !!(conf->flags & IEEE80211_CONF_RADIOTAP);
 
 	/* Adjust the desired TX power level. */
 	if (conf->power_level != 0) {
-		if (conf->power_level != phy->power_level) {
-			phy->power_level = conf->power_level;
-			phy->ops->xmitpower(dev);
+		spin_lock_irqsave(&wl->irq_lock, flags);
+		if (conf->power_level != phy->desired_txpower) {
+			phy->desired_txpower = conf->power_level;
+			b43_phy_txpower_check(dev, B43_TXPWR_IGNORE_TIME |
+						   B43_TXPWR_IGNORE_TSSI);
 		}
+		spin_unlock_irqrestore(&wl->irq_lock, flags);
 	}
 
 	/* Antennas for RX and management frame TX. */
 	antenna = b43_antenna_from_ieee80211(dev, conf->antenna_sel_tx);
 	b43_mgmtframe_txantenna(dev, antenna);
 	antenna = b43_antenna_from_ieee80211(dev, conf->antenna_sel_rx);
@@ -3782,12 +3786,13 @@ static int b43_phy_versioning(struct b43
 }
 
 static void setup_struct_phy_for_init(struct b43_wldev *dev,
 				      struct b43_phy *phy)
 {
 	phy->hardware_power_control = !!modparam_hwpctl;
+	phy->next_txpwr_check_time = jiffies;
 	/* PHY TX errors counter. */
 	atomic_set(&phy->txerr_cnt, B43_PHY_TX_BADNESS_LIMIT);
 }
 
 static void setup_struct_wldev_for_init(struct b43_wldev *dev)
 {
@@ -4201,12 +4206,14 @@ static void b43_op_stop(struct ieee80211
 
 	mutex_lock(&wl->mutex);
 	if (b43_status(dev) >= B43_STAT_STARTED)
 		b43_wireless_core_stop(dev);
 	b43_wireless_core_exit(dev);
 	mutex_unlock(&wl->mutex);
+
+	cancel_work_sync(&(wl->txpower_adjust_work));
 }
 
 static int b43_op_set_retry_limit(struct ieee80211_hw *hw,
 				  u32 short_retry_limit, u32 long_retry_limit)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
@@ -4578,12 +4585,13 @@ static int b43_wireless_init(struct ssb_
 	spin_lock_init(&wl->leds_lock);
 	spin_lock_init(&wl->shm_lock);
 	mutex_init(&wl->mutex);
 	INIT_LIST_HEAD(&wl->devlist);
 	INIT_WORK(&wl->qos_update_work, b43_qos_update_work);
 	INIT_WORK(&wl->beacon_update_trigger, b43_beacon_update_trigger_work);
+	INIT_WORK(&wl->txpower_adjust_work, b43_phy_txpower_adjust_work);
 
 	ssb_set_devtypedata(dev, wl);
 	b43info(wl, "Broadcom %04X WLAN found\n", dev->bus->chip_id);
 	err = 0;
       out:
 	return err;
Index: wireless-testing/drivers/net/wireless/b43/phy_common.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.c	2008-08-28 18:53:16.000000000 +0200
@@ -271,6 +271,97 @@ void b43_software_rfkill(struct b43_wlde
 		state = RFKILL_STATE_SOFT_BLOCKED;
 	}
 
 	phy->ops->software_rfkill(dev, state);
 	phy->radio_on = (state == RFKILL_STATE_UNBLOCKED);
 }
+
+/**
+ * b43_phy_txpower_adjust_work - TX power workqueue.
+ *
+ * Workqueue for updating the TX power parameters in hardware.
+ */
+void b43_phy_txpower_adjust_work(struct work_struct *work)
+{
+	struct b43_wl *wl = container_of(work, struct b43_wl,
+					 txpower_adjust_work);
+	struct b43_wldev *dev;
+
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+
+	if (likely(dev && (b43_status(dev) >= B43_STAT_STARTED)))
+		dev->phy.ops->adjust_txpower(dev);
+
+	mutex_unlock(&wl->mutex);
+}
+
+/* Called with wl->irq_lock locked */
+void b43_phy_txpower_check(struct b43_wldev *dev, unsigned int flags)
+{
+	struct b43_phy *phy = &dev->phy;
+	unsigned long now = jiffies;
+	enum b43_txpwr_result result;
+
+	if (!(flags & B43_TXPWR_IGNORE_TIME)) {
+		/* Check if it's time for a TXpower check. */
+		if (time_before(now, phy->next_txpwr_check_time))
+			return; /* Not yet */
+	}
+	/* The next check will be needed in two seconds, or later. */
+	phy->next_txpwr_check_time = round_jiffies(now + (HZ * 2));
+
+	if ((dev->dev->bus->boardinfo.vendor == SSB_BOARDVENDOR_BCM) &&
+	    (dev->dev->bus->boardinfo.type == SSB_BOARD_BU4306))
+		return; /* No software txpower adjustment needed */
+
+ 	result = phy->ops->recalc_txpower(dev, !!(flags & B43_TXPWR_IGNORE_TSSI));
+	if (result == B43_TXPWR_RES_DONE)
+		return; /* We are done. */
+	B43_WARN_ON(result != B43_TXPWR_RES_NEED_ADJUST);
+	B43_WARN_ON(phy->ops->adjust_txpower == NULL);
+
+	/* We must adjust the transmission power in hardware.
+	 * Schedule b43_phy_txpower_adjust_work(). */
+	queue_work(dev->wl->hw->workqueue, &dev->wl->txpower_adjust_work);
+}
+
+int b43_phy_shm_tssi_read(struct b43_wldev *dev, u16 shm_offset)
+{
+	const bool is_ofdm = (shm_offset != B43_SHM_SH_TSSI_CCK);
+	unsigned int a, b, c, d;
+	unsigned int average;
+	u32 tmp;
+
+	tmp = b43_shm_read32(dev, B43_SHM_SHARED, shm_offset);
+	a = tmp & 0xFF;
+	b = (tmp >> 8) & 0xFF;
+	c = (tmp >> 16) & 0xFF;
+	d = (tmp >> 24) & 0xFF;
+	if (a == 0 || a == B43_TSSI_MAX ||
+	    b == 0 || b == B43_TSSI_MAX ||
+	    c == 0 || c == B43_TSSI_MAX ||
+	    d == 0 || d == B43_TSSI_MAX)
+		return -ENOENT;
+	/* The values are OK. Clear them. */
+	tmp = B43_TSSI_MAX | (B43_TSSI_MAX << 8) |
+	      (B43_TSSI_MAX << 16) | (B43_TSSI_MAX << 24);
+	b43_shm_write32(dev, B43_SHM_SHARED, shm_offset, tmp);
+
+	if (is_ofdm) {
+		a = (a + 32) & 0x3F;
+		b = (b + 32) & 0x3F;
+		c = (c + 32) & 0x3F;
+		d = (d + 32) & 0x3F;
+	}
+
+	/* Get the average of the values with 0.5 added to each value. */
+	average = (a + b + c + d + 2) / 4;
+	if (is_ofdm) {
+		/* Adjust for CCK-boost */
+		if (b43_shm_read16(dev, B43_SHM_SHARED, B43_SHM_SH_HOSTFLO)
+		    & B43_HF_CCKBOOST)
+			average = (average >= 13) ? (average - 13) : 0;
+	}
+
+	return average;
+}
Index: wireless-testing/drivers/net/wireless/b43/phy_common.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.h	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.h	2008-08-28 18:38:22.000000000 +0200
@@ -58,12 +58,23 @@ enum {
 
 	B43_ANTENNA_AUTO = B43_ANTENNA_AUTO0,
 	B43_ANTENNA_DEFAULT = B43_ANTENNA_AUTO,
 };
 
 /**
+ * enum b43_txpwr_result - Return value for the recalc_txpower PHY op.
+ *
+ * @B43_TXPWR_RES_NEED_ADJUST:	Values changed. Hardware adjustment is needed.
+ * @B43_TXPWR_RES_DONE:		No more work to do. Everything is done.
+ */
+enum b43_txpwr_result {
+	B43_TXPWR_RES_NEED_ADJUST,
+	B43_TXPWR_RES_DONE,
+};
+
+/**
  * struct b43_phy_operations - Function pointers for PHY ops.
  *
  * @prepare:		Prepare the PHY. This is called before @init.
  * 			Can be NULL, if not required.
  * @init:		Initialize the PHY.
  * 			Must not be NULL.
@@ -93,14 +104,29 @@ enum {
  * 			Must not be NULL.
  * @set_rx_antenna:	Set the antenna used for RX.
  * 			Can be NULL, if not supported.
  * @interf_mitigation:	Switch the Interference Mitigation mode.
  * 			Can be NULL, if not supported.
  *
- * @xmitpower:		FIXME REMOVEME
+ * @recalc_txpower:	Recalculate the transmission power parameters.
+ * 			This callback has to recalculate the TX power settings,
+ * 			but does not need to write them to the hardware, yet.
+ * 			Returns enum b43_txpwr_result to indicate whether the hardware
+ * 			needs to be adjusted.
+ * 			If B43_TXPWR_NEED_ADJUST is returned, @adjust_txpower
+ * 			will be called later.
+ * 			If the parameter "ignore_tssi" is true, the TSSI values should
+ * 			be ignored and a recalculation of the power settings should be
+ * 			done even if the TSSI values did not change.
+ * 			This callback is called with wl->irq_lock held and must not sleep.
  * 			Must not be NULL.
+ * @adjust_txpower:	Write the previously calculated TX power settings
+ * 			(from @recalc_txpower) to the hardware.
+ * 			This function may sleep.
+ * 			Can be NULL, if (and ONLY if) @recalc_txpower _always_
+ * 			returns B43_TXPWR_RES_DONE.
  *
  * @pwork_15sec:	Periodic work. Called every 15 seconds.
  * 			Can be NULL, if not required.
  * @pwork_60sec:	Periodic work. Called every 60 seconds.
  * 			Can be NULL, if not required.
  */
@@ -124,13 +150,15 @@ struct b43_phy_operations {
 	unsigned int (*get_default_chan)(struct b43_wldev *dev);
 	void (*set_rx_antenna)(struct b43_wldev *dev, int antenna);
 	int (*interf_mitigation)(struct b43_wldev *dev,
 				 enum b43_interference_mitigation new_mode);
 
 	/* Transmission power adjustment */
-	void (*xmitpower)(struct b43_wldev *dev);
+	enum b43_txpwr_result (*recalc_txpower)(struct b43_wldev *dev,
+						bool ignore_tssi);
+	void (*adjust_txpower)(struct b43_wldev *dev);
 
 	/* Misc */
 	void (*pwork_15sec)(struct b43_wldev *dev);
 	void (*pwork_60sec)(struct b43_wldev *dev);
 };
 
@@ -180,17 +208,21 @@ struct b43_phy {
 
 	/* Software state of the radio */
 	bool radio_on;
 
 	/* Desired TX power level (in dBm).
 	 * This is set by the user and adjusted in b43_phy_xmitpower(). */
-	u8 power_level;
+	int desired_txpower;
 
 	/* Hardware Power Control enabled? */
 	bool hardware_power_control;
 
+	/* The time (in absolute jiffies) when the next TX power output
+	 * check is needed. */
+	unsigned long next_txpwr_check_time;
+
 	/* current channel */
 	unsigned int channel;
 
 	/* PHY TX errors counter. */
 	atomic_t txerr_cnt;
 
@@ -306,7 +338,44 @@ int b43_switch_channel(struct b43_wldev 
 
 /**
  * b43_software_rfkill - Turn the radio ON or OFF in software.
  */
 void b43_software_rfkill(struct b43_wldev *dev, enum rfkill_state state);
 
+/**
+ * b43_phy_txpower_check - Check TX power output.
+ *
+ * Compare the current TX power output to the desired power emission
+ * and schedule an adjustment in case it mismatches.
+ * Requires wl->irq_lock locked.
+ *
+ * @flags:	OR'ed enum b43_phy_txpower_check_flags flags.
+ * 		See the docs below.
+ */
+void b43_phy_txpower_check(struct b43_wldev *dev, unsigned int flags);
+/**
+ * enum b43_phy_txpower_check_flags - Flags for b43_phy_txpower_check()
+ *
+ * @B43_TXPWR_IGNORE_TIME: Ignore the schedule time and force-redo
+ *                         the check now.
+ * @B43_TXPWR_IGNORE_TSSI: Redo the recalculation, even if the average
+ *                         TSSI did not change.
+ */
+enum b43_phy_txpower_check_flags {
+	B43_TXPWR_IGNORE_TIME		= (1 << 0),
+	B43_TXPWR_IGNORE_TSSI		= (1 << 1),
+};
+
+struct work_struct;
+void b43_phy_txpower_adjust_work(struct work_struct *work);
+
+/**
+ * b43_phy_shm_tssi_read - Read the average of the last 4 TSSI from SHM.
+ *
+ * @shm_offset:		The SHM address to read the values from.
+ *
+ * Returns the average of the 4 TSSI values, or a negative error code.
+ */
+int b43_phy_shm_tssi_read(struct b43_wldev *dev, u16 shm_offset);
+
+
 #endif /* LINUX_B43_PHY_COMMON_H_ */
Index: wireless-testing/drivers/net/wireless/b43/phy_g.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.c	2008-08-28 19:03:11.000000000 +0200
@@ -2656,12 +2656,13 @@ static int b43_gphy_op_allocate(struct b
 
 	gphy->interfmode = B43_INTERFMODE_NONE;
 
 	/* OFDM-table address caching. */
 	gphy->ofdmtab_addr_direction = B43_OFDMTAB_DIRECTION_UNKNOWN;
 
+	gphy->average_tssi = 0xFF;
 
 	lo = kzalloc(sizeof(*lo), GFP_KERNEL);
 	if (!lo) {
 		err = -ENOMEM;
 		goto err_free_gphy;
 	}
@@ -3008,119 +3009,26 @@ static void b43_put_attenuation_into_ran
 	}
 
 	*_rfatt = clamp_val(rfatt, rf_min, rf_max);
 	*_bbatt = clamp_val(bbatt, bb_min, bb_max);
 }
 
-static void b43_gphy_op_xmitpower(struct b43_wldev *dev)
+static void b43_gphy_op_adjust_txpower(struct b43_wldev *dev)
 {
-	struct ssb_bus *bus = dev->dev->bus;
 	struct b43_phy *phy = &dev->phy;
 	struct b43_phy_g *gphy = phy->g;
-	u16 tmp;
-	s8 v0, v1, v2, v3;
-	s8 average;
-	int max_pwr;
-	int desired_pwr, estimated_pwr, pwr_adjust;
-	int rfatt_delta, bbatt_delta;
 	int rfatt, bbatt;
 	u8 tx_control;
 
-	if (gphy->cur_idle_tssi == 0)
-		return;
-	if ((bus->boardinfo.vendor == SSB_BOARDVENDOR_BCM) &&
-	    (bus->boardinfo.type == SSB_BOARD_BU4306))
-		return;
-
-	tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x0058);
-	v0 = (s8) (tmp & 0x00FF);
-	v1 = (s8) ((tmp & 0xFF00) >> 8);
-	tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x005A);
-	v2 = (s8) (tmp & 0x00FF);
-	v3 = (s8) ((tmp & 0xFF00) >> 8);
-	tmp = 0;
-
-	if (v0 == 0x7F || v1 == 0x7F || v2 == 0x7F
-	    || v3 == 0x7F) {
-		tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x0070);
-		v0 = (s8) (tmp & 0x00FF);
-		v1 = (s8) ((tmp & 0xFF00) >> 8);
-		tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x0072);
-		v2 = (s8) (tmp & 0x00FF);
-		v3 = (s8) ((tmp & 0xFF00) >> 8);
-		if (v0 == 0x7F || v1 == 0x7F || v2 == 0x7F
-		    || v3 == 0x7F)
-			return;
-		v0 = (v0 + 0x20) & 0x3F;
-		v1 = (v1 + 0x20) & 0x3F;
-		v2 = (v2 + 0x20) & 0x3F;
-		v3 = (v3 + 0x20) & 0x3F;
-		tmp = 1;
-	}
-	b43_shm_clear_tssi(dev);
-
-	average = (v0 + v1 + v2 + v3 + 2) / 4;
-
-	if (tmp && (b43_shm_read16(dev, B43_SHM_SHARED, 0x005E) & 0x8))
-		average -= 13;
-
-	estimated_pwr = b43_gphy_estimate_power_out(dev, average);
-
-	max_pwr = dev->dev->bus->sprom.maxpwr_bg;
-	if ((dev->dev->bus->sprom.boardflags_lo
-	    & B43_BFL_PACTRL) && (phy->type == B43_PHYTYPE_G))
-		max_pwr -= 0x3;
-	if (unlikely(max_pwr <= 0)) {
-		b43warn(dev->wl,
-			"Invalid max-TX-power value in SPROM.\n");
-		max_pwr = 60;	/* fake it */
-		dev->dev->bus->sprom.maxpwr_bg = max_pwr;
-	}
-
-	/*TODO:
-	   max_pwr = min(REG - dev->dev->bus->sprom.antennagain_bgphy - 0x6, max_pwr)
-	   where REG is the max power as per the regulatory domain
-	 */
-
-	/* Get desired power (in Q5.2) */
-	desired_pwr = INT_TO_Q52(phy->power_level);
-	/* And limit it. max_pwr already is Q5.2 */
-	desired_pwr = clamp_val(desired_pwr, 0, max_pwr);
-	if (b43_debug(dev, B43_DBG_XMITPOWER)) {
-		b43dbg(dev->wl,
-		       "Current TX power output: " Q52_FMT
-		       " dBm, " "Desired TX power output: "
-		       Q52_FMT " dBm\n", Q52_ARG(estimated_pwr),
-		       Q52_ARG(desired_pwr));
-	}
-
-	/* Calculate the adjustment delta. */
-	pwr_adjust = desired_pwr - estimated_pwr;
-
-	/* RF attenuation delta. */
-	rfatt_delta = ((pwr_adjust + 7) / 8);
-	/* Lower attenuation => Bigger power output. Negate it. */
-	rfatt_delta = -rfatt_delta;
-
-	/* Baseband attenuation delta. */
-	bbatt_delta = pwr_adjust / 2;
-	/* Lower attenuation => Bigger power output. Negate it. */
-	bbatt_delta = -bbatt_delta;
-	/* RF att affects power level 4 times as much as
-	 * Baseband attennuation. Subtract it. */
-	bbatt_delta -= 4 * rfatt_delta;
-
-	/* So do we finally need to adjust something? */
-	if ((rfatt_delta == 0) && (bbatt_delta == 0))
-		return;
+	spin_lock_irq(&dev->wl->irq_lock);
 
 	/* Calculate the new attenuation values. */
 	bbatt = gphy->bbatt.att;
-	bbatt += bbatt_delta;
+	bbatt += gphy->bbatt_delta;
 	rfatt = gphy->rfatt.att;
-	rfatt += rfatt_delta;
+	rfatt += gphy->rfatt_delta;
 
 	b43_put_attenuation_into_ranges(dev, &bbatt, &rfatt);
 	tx_control = gphy->tx_control;
 	if ((phy->radio_ver == 0x2050) && (phy->radio_rev == 2)) {
 		if (rfatt <= 1) {
 			if (tx_control == 0) {
@@ -3149,21 +3057,134 @@ static void b43_gphy_op_xmitpower(struct
 	/* Save the control values */
 	gphy->tx_control = tx_control;
 	b43_put_attenuation_into_ranges(dev, &bbatt, &rfatt);
 	gphy->rfatt.att = rfatt;
 	gphy->bbatt.att = bbatt;
 
+	/* We drop the lock early, so we can sleep during hardware
+	 * adjustment. Possible races with op_recalc_txpower are harmless,
+	 * as we will be called once again in case we raced. */
+	spin_unlock_irq(&dev->wl->irq_lock);
+
+	if (b43_debug(dev, B43_DBG_XMITPOWER))
+		b43dbg(dev->wl, "Adjusting TX power\n");
+
 	/* Adjust the hardware */
 	b43_phy_lock(dev);
 	b43_radio_lock(dev);
 	b43_set_txpower_g(dev, &gphy->bbatt, &gphy->rfatt,
 			  gphy->tx_control);
 	b43_radio_unlock(dev);
 	b43_phy_unlock(dev);
 }
 
+static enum b43_txpwr_result b43_gphy_op_recalc_txpower(struct b43_wldev *dev,
+							bool ignore_tssi)
+{
+	struct b43_phy *phy = &dev->phy;
+	struct b43_phy_g *gphy = phy->g;
+	unsigned int average_tssi;
+	int cck_result, ofdm_result;
+	int estimated_pwr, desired_pwr, pwr_adjust;
+	int rfatt_delta, bbatt_delta;
+	unsigned int max_pwr;
+
+	/* First get the average TSSI */
+	cck_result = b43_phy_shm_tssi_read(dev, B43_SHM_SH_TSSI_CCK);
+	ofdm_result = b43_phy_shm_tssi_read(dev, B43_SHM_SH_TSSI_OFDM_G);
+	if ((cck_result < 0) && (ofdm_result < 0)) {
+		/* No TSSI information available */
+		if (!ignore_tssi)
+			goto no_adjustment_needed;
+		cck_result = 0;
+		ofdm_result = 0;
+	}
+	if (cck_result < 0)
+		average_tssi = ofdm_result;
+	else if (ofdm_result < 0)
+		average_tssi = cck_result;
+	else
+		average_tssi = (cck_result + ofdm_result) / 2;
+	/* Merge the average with the stored value. */
+	if (likely(gphy->average_tssi != 0xFF))
+		average_tssi = (average_tssi + gphy->average_tssi) / 2;
+	gphy->average_tssi = average_tssi;
+	B43_WARN_ON(average_tssi >= B43_TSSI_MAX);
+
+	/* Estimate the TX power emission based on the TSSI */
+	estimated_pwr = b43_gphy_estimate_power_out(dev, average_tssi);
+
+	B43_WARN_ON(phy->type != B43_PHYTYPE_G);
+	max_pwr = dev->dev->bus->sprom.maxpwr_bg;
+	if (dev->dev->bus->sprom.boardflags_lo & B43_BFL_PACTRL)
+		max_pwr -= 3; /* minus 0.75 */
+	if (unlikely(max_pwr >= INT_TO_Q52(30/*dBm*/))) {
+		b43warn(dev->wl,
+			"Invalid max-TX-power value in SPROM.\n");
+		max_pwr = INT_TO_Q52(20); /* fake it */
+		dev->dev->bus->sprom.maxpwr_bg = max_pwr;
+	}
+
+	/* Get desired power (in Q5.2) */
+	if (phy->desired_txpower < 0)
+		desired_pwr = INT_TO_Q52(0);
+	else
+		desired_pwr = INT_TO_Q52(phy->desired_txpower);
+	/* And limit it. max_pwr already is Q5.2 */
+	desired_pwr = clamp_val(desired_pwr, 0, max_pwr);
+	if (b43_debug(dev, B43_DBG_XMITPOWER)) {
+		b43dbg(dev->wl,
+		       "[TX power]  current = " Q52_FMT
+		       " dBm,  desired = " Q52_FMT
+		       " dBm,  max = " Q52_FMT "\n",
+		       Q52_ARG(estimated_pwr),
+		       Q52_ARG(desired_pwr),
+		       Q52_ARG(max_pwr));
+	}
+
+	/* Calculate the adjustment delta. */
+	pwr_adjust = desired_pwr - estimated_pwr;
+	if (pwr_adjust == 0)
+		goto no_adjustment_needed;
+
+	/* RF attenuation delta. */
+	rfatt_delta = ((pwr_adjust + 7) / 8);
+	/* Lower attenuation => Bigger power output. Negate it. */
+	rfatt_delta = -rfatt_delta;
+
+	/* Baseband attenuation delta. */
+	bbatt_delta = pwr_adjust / 2;
+	/* Lower attenuation => Bigger power output. Negate it. */
+	bbatt_delta = -bbatt_delta;
+	/* RF att affects power level 4 times as much as
+	 * Baseband attennuation. Subtract it. */
+	bbatt_delta -= 4 * rfatt_delta;
+
+	if (b43_debug(dev, B43_DBG_XMITPOWER)) {
+		int dbm = pwr_adjust < 0 ? -pwr_adjust : pwr_adjust;
+		b43dbg(dev->wl,
+		       "[TX power deltas]  %s" Q52_FMT " dBm   =>   "
+		       "bbatt-delta = %d,  rfatt-delta = %d\n",
+		       (pwr_adjust < 0 ? "-" : ""), Q52_ARG(dbm),
+		       bbatt_delta, rfatt_delta);
+	}
+	/* So do we finally need to adjust something in hardware? */
+	if ((rfatt_delta == 0) && (bbatt_delta == 0))
+		goto no_adjustment_needed;
+
+	/* Save the deltas for later when we adjust the power. */
+	gphy->bbatt_delta = bbatt_delta;
+	gphy->rfatt_delta = rfatt_delta;
+
+	/* We need to adjust the TX power on the device. */
+	return B43_TXPWR_RES_NEED_ADJUST;
+
+no_adjustment_needed:
+	return B43_TXPWR_RES_DONE;
+}
+
 static void b43_gphy_op_pwork_15sec(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
 	struct b43_phy_g *gphy = phy->g;
 
 	//TODO: update_aci_moving_average
@@ -3220,10 +3241,11 @@ const struct b43_phy_operations b43_phyo
 	.supports_hwpctl	= b43_gphy_op_supports_hwpctl,
 	.software_rfkill	= b43_gphy_op_software_rfkill,
 	.switch_channel		= b43_gphy_op_switch_channel,
 	.get_default_chan	= b43_gphy_op_get_default_chan,
 	.set_rx_antenna		= b43_gphy_op_set_rx_antenna,
 	.interf_mitigation	= b43_gphy_op_interf_mitigation,
-	.xmitpower		= b43_gphy_op_xmitpower,
+	.recalc_txpower		= b43_gphy_op_recalc_txpower,
+	.adjust_txpower		= b43_gphy_op_adjust_txpower,
 	.pwork_15sec		= b43_gphy_op_pwork_15sec,
 	.pwork_60sec		= b43_gphy_op_pwork_60sec,
 };
Index: wireless-testing/drivers/net/wireless/b43/phy_g.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.h	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.h	2008-08-28 18:38:22.000000000 +0200
@@ -112,13 +112,12 @@ static inline bool b43_compare_bbatt(con
 #define B43_TXCTL_TXMIX		0x10	/* TX Mixer Gain */
 
 struct b43_txpower_lo_control;
 
 struct b43_phy_g {
 	bool initialised;
-	bool dyn_tssi_tbl;	/* tssi2dbm is kmalloc()ed. */
 
 	/* ACI (adjacent channel interference) flags. */
 	bool aci_enable;
 	bool aci_wlan_automatic;
 	bool aci_hw_rssi;
 
@@ -132,33 +131,42 @@ struct b43_phy_g {
 		u16 rfoverval;
 	} radio_off_context;
 
 	u16 minlowsig[2];
 	u16 minlowsigpos[2];
 
-	/* TSSI to dBm table in use */
+	/* Pointer to the table used to convert a
+	 * TSSI value to dBm-Q5.2 */
 	const s8 *tssi2dbm;
+	/* tssi2dbm is kmalloc()ed. Only used for free()ing. */
+	bool dyn_tssi_tbl;
 	/* Target idle TSSI */
 	int tgt_idle_tssi;
 	/* Current idle TSSI */
 	int cur_idle_tssi;
+	/* The current average TSSI.
+	 * Needs irq_lock, as it's updated in the IRQ path. */
+	u8 average_tssi;
+	/* Current TX power level attenuation control values */
+	struct b43_bbatt bbatt;
+	struct b43_rfatt rfatt;
+	u8 tx_control;		/* B43_TXCTL_XXX */
+	/* The calculated attenuation deltas that are used later
+	 * when adjusting the actual power output. */
+	int bbatt_delta;
+	int rfatt_delta;
 
 	/* LocalOscillator control values. */
 	struct b43_txpower_lo_control *lo_control;
 	/* Values from b43_calc_loopback_gain() */
 	s16 max_lb_gain;	/* Maximum Loopback gain in hdB */
 	s16 trsw_rx_gain;	/* TRSW RX gain in hdB */
 	s16 lna_lod_gain;	/* LNA lod */
 	s16 lna_gain;		/* LNA */
 	s16 pga_gain;		/* PGA */
 
-	/* Current TX power level attenuation control values */
-	struct b43_bbatt bbatt;
-	struct b43_rfatt rfatt;
-	u8 tx_control;		/* B43_TXCTL_XXX */
-
 	/* Current Interference Mitigation mode */
 	int interfmode;
 	/* Stack of saved values from the Interference Mitigation code.
 	 * Each value in the stack is layed out as follows:
 	 * bit 0-11:  offset
 	 * bit 12-15: register ID
Index: wireless-testing/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/xmit.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/xmit.c	2008-08-28 18:58:20.000000000 +0200
@@ -677,12 +677,14 @@ void b43_handle_txstatus(struct b43_wlde
 	}
 
 	if (b43_using_pio_transfers(dev))
 		b43_pio_handle_txstatus(dev, status);
 	else
 		b43_dma_handle_txstatus(dev, status);
+
+	b43_phy_txpower_check(dev, 0);
 }
 
 /* Fill out the mac80211 TXstatus report based on the b43-specific
  * txstatus report data. This returns a boolean whether the frame was
  * successfully transmitted. */
 bool b43_fill_txstatus_report(struct ieee80211_tx_info *report,
Index: wireless-testing/drivers/net/wireless/b43/nphy.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/nphy.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/nphy.c	2008-08-28 18:38:22.000000000 +0200
@@ -31,16 +31,22 @@
 
 
 void b43_nphy_set_rxantenna(struct b43_wldev *dev, int antenna)
 {//TODO
 }
 
-void b43_nphy_xmitpower(struct b43_wldev *dev)
+static void b43_nphy_op_adjust_txpower(struct b43_wldev *dev)
 {//TODO
 }
 
+static enum b43_txpwr_result b43_nphy_op_recalc_txpower(struct b43_wldev *dev,
+							bool ignore_tssi)
+{//TODO
+	return B43_TXPWR_RES_DONE;
+}
+
 static void b43_chantab_radio_upload(struct b43_wldev *dev,
 				     const struct b43_nphy_channeltab_entry *e)
 {
 	b43_radio_write16(dev, B2055_PLL_REF, e->radio_pll_ref);
 	b43_radio_write16(dev, B2055_RF_PLLMOD0, e->radio_rf_pllmod0);
 	b43_radio_write16(dev, B2055_RF_PLLMOD1, e->radio_rf_pllmod1);
@@ -599,23 +605,20 @@ static unsigned int b43_nphy_op_get_defa
 {
 	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)
 		return 1;
 	return 36;
 }
 
-static void b43_nphy_op_xmitpower(struct b43_wldev *dev)
-{//TODO
-}
-
 const struct b43_phy_operations b43_phyops_n = {
 	.allocate		= b43_nphy_op_allocate,
 	.init			= b43_nphy_op_init,
 	.exit			= b43_nphy_op_exit,
 	.phy_read		= b43_nphy_op_read,
 	.phy_write		= b43_nphy_op_write,
 	.radio_read		= b43_nphy_op_radio_read,
 	.radio_write		= b43_nphy_op_radio_write,
 	.software_rfkill	= b43_nphy_op_software_rfkill,
 	.switch_channel		= b43_nphy_op_switch_channel,
 	.get_default_chan	= b43_nphy_op_get_default_chan,
-	.xmitpower		= b43_nphy_op_xmitpower,
+	.recalc_txpower		= b43_nphy_op_recalc_txpower,
+	.adjust_txpower		= b43_nphy_op_adjust_txpower,
 };
Index: wireless-testing/drivers/net/wireless/b43/phy_a.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_a.c	2008-08-28 18:38:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_a.c	2008-08-28 18:38:22.000000000 +0200
@@ -502,16 +502,22 @@ static void b43_aphy_op_set_rx_antenna(s
 	}
 
 	hf |= B43_HF_ANTDIVHELP;
 	b43_hf_write(dev, hf);
 }
 
-static void b43_aphy_op_xmitpower(struct b43_wldev *dev)
+static void b43_aphy_op_adjust_txpower(struct b43_wldev *dev)
 {//TODO
 }
 
+static enum b43_txpwr_result b43_aphy_op_recalc_txpower(struct b43_wldev *dev,
+							bool ignore_tssi)
+{//TODO
+	return B43_TXPWR_RES_DONE;
+}
+
 static void b43_aphy_op_pwork_15sec(struct b43_wldev *dev)
 {//TODO
 }
 
 static void b43_aphy_op_pwork_60sec(struct b43_wldev *dev)
 {//TODO
@@ -527,10 +533,11 @@ const struct b43_phy_operations b43_phyo
 	.radio_write		= b43_aphy_op_radio_write,
 	.supports_hwpctl	= b43_aphy_op_supports_hwpctl,
 	.software_rfkill	= b43_aphy_op_software_rfkill,
 	.switch_channel		= b43_aphy_op_switch_channel,
 	.get_default_chan	= b43_aphy_op_get_default_chan,
 	.set_rx_antenna		= b43_aphy_op_set_rx_antenna,
-	.xmitpower		= b43_aphy_op_xmitpower,
+	.recalc_txpower		= b43_aphy_op_recalc_txpower,
+	.adjust_txpower		= b43_aphy_op_adjust_txpower,
 	.pwork_15sec		= b43_aphy_op_pwork_15sec,
 	.pwork_60sec		= b43_aphy_op_pwork_60sec,
 };


From Larry.Finger at lwfinger.net  Fri Aug 29 21:33:41 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 29 Aug 2008 14:33:41 -0500
Subject: [Fwd: Another new email address]
Message-ID: <48B84F15.4030003@lwfinger.net>



-------- Original Message --------
Subject: 	Another new email address
Date: 	Tue, 26 Aug 2008 22:05:32 -0500
From: 	Bette Ourada <b.ourada at hotmail.com>
To: 	<eagle157 at means.net>, <sgo511 at yahoo.com>, <sruthchild at redred.com>,
<r_darlene at hotmail.com>, <wesradke at msn.com>,
<bourada at integritybank.com>, <fingerelec at meltel.net>,
<larry.finger at att.net>, <ourbeatr at charter.net>, 
<dhalstenson at sio.midco.net>




This woman is crazy.  I now have another new email address.  The other
one wouldn't work so well.  We will see how this goes.

Address is b.ourada at hotmail.com <mailto:b.ourada at hotmail.com>

Bette

------------------------------------------------------------------------
Get ideas on sharing photos from people like you. Find new ways to
share. Get Ideas Here!
<http://www.windowslive.com/explore/photogallery/posts?ocid=TXT_TAGLM_WL_Photo_Gallery_082008>


From mb at bu3sch.de  Sat Aug 30 02:09:08 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 02:09:08 +0200
Subject: [PATCH] b43: Move remaining code from phy.c to phy_a.c
Message-ID: <200808300209.08805.mb@bu3sch.de>

This moves the remaining code from phy.c to phy_a.c
phy.c is removed.
No functional change. Just moving code and removing dead code.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Please queue for the next merge window.

Index: wireless-testing/drivers/net/wireless/b43/phy.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy.c	2008-08-29 00:55:14.000000000 +0200
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,489 +0,0 @@
-/*
-
-  Broadcom B43 wireless driver
-
-  Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
-  Copyright (c) 2005-2007 Stefano Brivio <stefano.brivio at polimi.it>
-  Copyright (c) 2005, 2006 Michael Buesch <mb at bu3sch.de>
-  Copyright (c) 2005, 2006 Danny van Dyk <kugelfang at gentoo.org>
-  Copyright (c) 2005, 2006 Andreas Jaggi <andreas.jaggi at waterwave.ch>
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
-  Boston, MA 02110-1301, USA.
-
-*/
-
-#include <linux/delay.h>
-#include <linux/io.h>
-#include <linux/types.h>
-#include <linux/bitrev.h>
-
-#include "b43.h"
-#include "phy.h"
-#include "nphy.h"
-#include "main.h"
-#include "tables.h"
-#include "lo.h"
-#include "wa.h"
-
-
-static void b43_shm_clear_tssi(struct b43_wldev *dev)
-{
-	struct b43_phy *phy = &dev->phy;
-
-	switch (phy->type) {
-	case B43_PHYTYPE_A:
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x0068, 0x7F7F);
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x006a, 0x7F7F);
-		break;
-	case B43_PHYTYPE_B:
-	case B43_PHYTYPE_G:
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x0058, 0x7F7F);
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x005a, 0x7F7F);
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x0070, 0x7F7F);
-		b43_shm_write16(dev, B43_SHM_SHARED, 0x0072, 0x7F7F);
-		break;
-	}
-}
-
-/* http://bcm-specs.sipsolutions.net/EstimatePowerOut
- * This function converts a TSSI value to dBm in Q5.2
- */
-static s8 b43_phy_estimate_power_out(struct b43_wldev *dev, s8 tssi)
-{
-	struct b43_phy *phy = &dev->phy;
-	s8 dbm = 0;
-	s32 tmp;
-
-	tmp = (phy->tgt_idle_tssi - phy->cur_idle_tssi + tssi);
-
-	switch (phy->type) {
-	case B43_PHYTYPE_A:
-		tmp += 0x80;
-		tmp = clamp_val(tmp, 0x00, 0xFF);
-		dbm = phy->tssi2dbm[tmp];
-		//TODO: There's a FIXME on the specs
-		break;
-	case B43_PHYTYPE_B:
-	case B43_PHYTYPE_G:
-		tmp = clamp_val(tmp, 0x00, 0x3F);
-		dbm = phy->tssi2dbm[tmp];
-		break;
-	default:
-		B43_WARN_ON(1);
-	}
-
-	return dbm;
-}
-
-void b43_put_attenuation_into_ranges(struct b43_wldev *dev,
-				     int *_bbatt, int *_rfatt)
-{
-	int rfatt = *_rfatt;
-	int bbatt = *_bbatt;
-	struct b43_txpower_lo_control *lo = dev->phy.lo_control;
-
-	/* Get baseband and radio attenuation values into their permitted ranges.
-	 * Radio attenuation affects power level 4 times as much as baseband. */
-
-	/* Range constants */
-	const int rf_min = lo->rfatt_list.min_val;
-	const int rf_max = lo->rfatt_list.max_val;
-	const int bb_min = lo->bbatt_list.min_val;
-	const int bb_max = lo->bbatt_list.max_val;
-
-	while (1) {
-		if (rfatt > rf_max && bbatt > bb_max - 4)
-			break;	/* Can not get it into ranges */
-		if (rfatt < rf_min && bbatt < bb_min + 4)
-			break;	/* Can not get it into ranges */
-		if (bbatt > bb_max && rfatt > rf_max - 1)
-			break;	/* Can not get it into ranges */
-		if (bbatt < bb_min && rfatt < rf_min + 1)
-			break;	/* Can not get it into ranges */
-
-		if (bbatt > bb_max) {
-			bbatt -= 4;
-			rfatt += 1;
-			continue;
-		}
-		if (bbatt < bb_min) {
-			bbatt += 4;
-			rfatt -= 1;
-			continue;
-		}
-		if (rfatt > rf_max) {
-			rfatt -= 1;
-			bbatt += 4;
-			continue;
-		}
-		if (rfatt < rf_min) {
-			rfatt += 1;
-			bbatt -= 4;
-			continue;
-		}
-		break;
-	}
-
-	*_rfatt = clamp_val(rfatt, rf_min, rf_max);
-	*_bbatt = clamp_val(bbatt, bb_min, bb_max);
-}
-
-/* http://bcm-specs.sipsolutions.net/RecalculateTransmissionPower */
-void b43_phy_xmitpower(struct b43_wldev *dev)
-{
-	struct ssb_bus *bus = dev->dev->bus;
-	struct b43_phy *phy = &dev->phy;
-
-	if (phy->cur_idle_tssi == 0)
-		return;
-	if ((bus->boardinfo.vendor == SSB_BOARDVENDOR_BCM) &&
-	    (bus->boardinfo.type == SSB_BOARD_BU4306))
-		return;
-#ifdef CONFIG_B43_DEBUG
-	if (phy->manual_txpower_control)
-		return;
-#endif
-
-	switch (phy->type) {
-	case B43_PHYTYPE_A:{
-
-			//TODO: Nothing for A PHYs yet :-/
-
-			break;
-		}
-	case B43_PHYTYPE_B:
-	case B43_PHYTYPE_G:{
-			u16 tmp;
-			s8 v0, v1, v2, v3;
-			s8 average;
-			int max_pwr;
-			int desired_pwr, estimated_pwr, pwr_adjust;
-			int rfatt_delta, bbatt_delta;
-			int rfatt, bbatt;
-			u8 tx_control;
-
-			tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x0058);
-			v0 = (s8) (tmp & 0x00FF);
-			v1 = (s8) ((tmp & 0xFF00) >> 8);
-			tmp = b43_shm_read16(dev, B43_SHM_SHARED, 0x005A);
-			v2 = (s8) (tmp & 0x00FF);
-			v3 = (s8) ((tmp & 0xFF00) >> 8);
-			tmp = 0;
-
-			if (v0 == 0x7F || v1 == 0x7F || v2 == 0x7F
-			    || v3 == 0x7F) {
-				tmp =
-				    b43_shm_read16(dev, B43_SHM_SHARED, 0x0070);
-				v0 = (s8) (tmp & 0x00FF);
-				v1 = (s8) ((tmp & 0xFF00) >> 8);
-				tmp =
-				    b43_shm_read16(dev, B43_SHM_SHARED, 0x0072);
-				v2 = (s8) (tmp & 0x00FF);
-				v3 = (s8) ((tmp & 0xFF00) >> 8);
-				if (v0 == 0x7F || v1 == 0x7F || v2 == 0x7F
-				    || v3 == 0x7F)
-					return;
-				v0 = (v0 + 0x20) & 0x3F;
-				v1 = (v1 + 0x20) & 0x3F;
-				v2 = (v2 + 0x20) & 0x3F;
-				v3 = (v3 + 0x20) & 0x3F;
-				tmp = 1;
-			}
-			b43_shm_clear_tssi(dev);
-
-			average = (v0 + v1 + v2 + v3 + 2) / 4;
-
-			if (tmp
-			    && (b43_shm_read16(dev, B43_SHM_SHARED, 0x005E) &
-				0x8))
-				average -= 13;
-
-			estimated_pwr =
-			    b43_phy_estimate_power_out(dev, average);
-
-			max_pwr = dev->dev->bus->sprom.maxpwr_bg;
-			if ((dev->dev->bus->sprom.boardflags_lo
-			    & B43_BFL_PACTRL) && (phy->type == B43_PHYTYPE_G))
-				max_pwr -= 0x3;
-			if (unlikely(max_pwr <= 0)) {
-				b43warn(dev->wl,
-					"Invalid max-TX-power value in SPROM.\n");
-				max_pwr = 60;	/* fake it */
-				dev->dev->bus->sprom.maxpwr_bg = max_pwr;
-			}
-
-			/*TODO:
-			   max_pwr = min(REG - dev->dev->bus->sprom.antennagain_bgphy - 0x6, max_pwr)
-			   where REG is the max power as per the regulatory domain
-			 */
-
-			/* Get desired power (in Q5.2) */
-			desired_pwr = INT_TO_Q52(phy->power_level);
-			/* And limit it. max_pwr already is Q5.2 */
-			desired_pwr = clamp_val(desired_pwr, 0, max_pwr);
-			if (b43_debug(dev, B43_DBG_XMITPOWER)) {
-				b43dbg(dev->wl,
-				       "Current TX power output: " Q52_FMT
-				       " dBm, " "Desired TX power output: "
-				       Q52_FMT " dBm\n", Q52_ARG(estimated_pwr),
-				       Q52_ARG(desired_pwr));
-			}
-
-			/* Calculate the adjustment delta. */
-			pwr_adjust = desired_pwr - estimated_pwr;
-
-			/* RF attenuation delta. */
-			rfatt_delta = ((pwr_adjust + 7) / 8);
-			/* Lower attenuation => Bigger power output. Negate it. */
-			rfatt_delta = -rfatt_delta;
-
-			/* Baseband attenuation delta. */
-			bbatt_delta = pwr_adjust / 2;
-			/* Lower attenuation => Bigger power output. Negate it. */
-			bbatt_delta = -bbatt_delta;
-			/* RF att affects power level 4 times as much as
-			 * Baseband attennuation. Subtract it. */
-			bbatt_delta -= 4 * rfatt_delta;
-
-			/* So do we finally need to adjust something? */
-			if ((rfatt_delta == 0) && (bbatt_delta == 0))
-				return;
-
-			/* Calculate the new attenuation values. */
-			bbatt = phy->bbatt.att;
-			bbatt += bbatt_delta;
-			rfatt = phy->rfatt.att;
-			rfatt += rfatt_delta;
-
-			b43_put_attenuation_into_ranges(dev, &bbatt, &rfatt);
-			tx_control = phy->tx_control;
-			if ((phy->radio_ver == 0x2050) && (phy->radio_rev == 2)) {
-				if (rfatt <= 1) {
-					if (tx_control == 0) {
-						tx_control =
-						    B43_TXCTL_PA2DB |
-						    B43_TXCTL_TXMIX;
-						rfatt += 2;
-						bbatt += 2;
-					} else if (dev->dev->bus->sprom.
-						   boardflags_lo &
-						   B43_BFL_PACTRL) {
-						bbatt += 4 * (rfatt - 2);
-						rfatt = 2;
-					}
-				} else if (rfatt > 4 && tx_control) {
-					tx_control = 0;
-					if (bbatt < 3) {
-						rfatt -= 3;
-						bbatt += 2;
-					} else {
-						rfatt -= 2;
-						bbatt -= 2;
-					}
-				}
-			}
-			/* Save the control values */
-			phy->tx_control = tx_control;
-			b43_put_attenuation_into_ranges(dev, &bbatt, &rfatt);
-			phy->rfatt.att = rfatt;
-			phy->bbatt.att = bbatt;
-
-			/* Adjust the hardware */
-			b43_phy_lock(dev);
-			b43_radio_lock(dev);
-			b43_set_txpower_g(dev, &phy->bbatt, &phy->rfatt,
-					  phy->tx_control);
-			b43_radio_unlock(dev);
-			b43_phy_unlock(dev);
-			break;
-		}
-	case B43_PHYTYPE_N:
-		b43_nphy_xmitpower(dev);
-		break;
-	default:
-		B43_WARN_ON(1);
-	}
-}
-
-static inline s32 b43_tssi2dbm_ad(s32 num, s32 den)
-{
-	if (num < 0)
-		return num / den;
-	else
-		return (num + den / 2) / den;
-}
-
-static inline
-    s8 b43_tssi2dbm_entry(s8 entry[], u8 index, s16 pab0, s16 pab1, s16 pab2)
-{
-	s32 m1, m2, f = 256, q, delta;
-	s8 i = 0;
-
-	m1 = b43_tssi2dbm_ad(16 * pab0 + index * pab1, 32);
-	m2 = max(b43_tssi2dbm_ad(32768 + index * pab2, 256), 1);
-	do {
-		if (i > 15)
-			return -EINVAL;
-		q = b43_tssi2dbm_ad(f * 4096 -
-				    b43_tssi2dbm_ad(m2 * f, 16) * f, 2048);
-		delta = abs(q - f);
-		f = q;
-		i++;
-	} while (delta >= 2);
-	entry[index] = clamp_val(b43_tssi2dbm_ad(m1 * f, 8192), -127, 128);
-	return 0;
-}
-
-/* http://bcm-specs.sipsolutions.net/TSSI_to_DBM_Table */
-int b43_phy_init_tssi2dbm_table(struct b43_wldev *dev)
-{
-	struct b43_phy *phy = &dev->phy;
-	s16 pab0, pab1, pab2;
-	u8 idx;
-	s8 *dyn_tssi2dbm;
-
-	if (phy->type == B43_PHYTYPE_A) {
-		pab0 = (s16) (dev->dev->bus->sprom.pa1b0);
-		pab1 = (s16) (dev->dev->bus->sprom.pa1b1);
-		pab2 = (s16) (dev->dev->bus->sprom.pa1b2);
-	} else {
-		pab0 = (s16) (dev->dev->bus->sprom.pa0b0);
-		pab1 = (s16) (dev->dev->bus->sprom.pa0b1);
-		pab2 = (s16) (dev->dev->bus->sprom.pa0b2);
-	}
-
-	if ((dev->dev->bus->chip_id == 0x4301) && (phy->radio_ver != 0x2050)) {
-		phy->tgt_idle_tssi = 0x34;
-		phy->tssi2dbm = b43_tssi2dbm_b_table;
-		return 0;
-	}
-
-	if (pab0 != 0 && pab1 != 0 && pab2 != 0 &&
-	    pab0 != -1 && pab1 != -1 && pab2 != -1) {
-		/* The pabX values are set in SPROM. Use them. */
-		if (phy->type == B43_PHYTYPE_A) {
-			if ((s8) dev->dev->bus->sprom.itssi_a != 0 &&
-			    (s8) dev->dev->bus->sprom.itssi_a != -1)
-				phy->tgt_idle_tssi =
-				    (s8) (dev->dev->bus->sprom.itssi_a);
-			else
-				phy->tgt_idle_tssi = 62;
-		} else {
-			if ((s8) dev->dev->bus->sprom.itssi_bg != 0 &&
-			    (s8) dev->dev->bus->sprom.itssi_bg != -1)
-				phy->tgt_idle_tssi =
-				    (s8) (dev->dev->bus->sprom.itssi_bg);
-			else
-				phy->tgt_idle_tssi = 62;
-		}
-		dyn_tssi2dbm = kmalloc(64, GFP_KERNEL);
-		if (dyn_tssi2dbm == NULL) {
-			b43err(dev->wl, "Could not allocate memory "
-			       "for tssi2dbm table\n");
-			return -ENOMEM;
-		}
-		for (idx = 0; idx < 64; idx++)
-			if (b43_tssi2dbm_entry
-			    (dyn_tssi2dbm, idx, pab0, pab1, pab2)) {
-				phy->tssi2dbm = NULL;
-				b43err(dev->wl, "Could not generate "
-				       "tssi2dBm table\n");
-				kfree(dyn_tssi2dbm);
-				return -ENODEV;
-			}
-		phy->tssi2dbm = dyn_tssi2dbm;
-		phy->dyn_tssi_tbl = 1;
-	} else {
-		/* pabX values not set in SPROM. */
-		switch (phy->type) {
-		case B43_PHYTYPE_A:
-			/* APHY needs a generated table. */
-			phy->tssi2dbm = NULL;
-			b43err(dev->wl, "Could not generate tssi2dBm "
-			       "table (wrong SPROM info)!\n");
-			return -ENODEV;
-		case B43_PHYTYPE_B:
-			phy->tgt_idle_tssi = 0x34;
-			phy->tssi2dbm = b43_tssi2dbm_b_table;
-			break;
-		case B43_PHYTYPE_G:
-			phy->tgt_idle_tssi = 0x34;
-			phy->tssi2dbm = b43_tssi2dbm_g_table;
-			break;
-		}
-	}
-
-	return 0;
-}
-
-void b43_radio_turn_on(struct b43_wldev *dev)
-{
-	struct b43_phy *phy = &dev->phy;
-	int err;
-	u8 channel;
-
-	might_sleep();
-
-	if (phy->radio_on)
-		return;
-
-	switch (phy->type) {
-	case B43_PHYTYPE_A:
-		b43_radio_write16(dev, 0x0004, 0x00C0);
-		b43_radio_write16(dev, 0x0005, 0x0008);
-		b43_phy_write(dev, 0x0010, b43_phy_read(dev, 0x0010) & 0xFFF7);
-		b43_phy_write(dev, 0x0011, b43_phy_read(dev, 0x0011) & 0xFFF7);
-		b43_radio_init2060(dev);
-		break;
-	case B43_PHYTYPE_B:
-	case B43_PHYTYPE_G:
-		//XXX
-		break;
-	case B43_PHYTYPE_N:
-		b43_nphy_radio_turn_on(dev);
-		break;
-	default:
-		B43_WARN_ON(1);
-	}
-	phy->radio_on = 1;
-}
-
-void b43_radio_turn_off(struct b43_wldev *dev, bool force)
-{
-	struct b43_phy *phy = &dev->phy;
-
-	if (!phy->radio_on && !force)
-		return;
-
-	switch (phy->type) {
-	case B43_PHYTYPE_N:
-		b43_nphy_radio_turn_off(dev);
-		break;
-	case B43_PHYTYPE_A:
-		b43_radio_write16(dev, 0x0004, 0x00FF);
-		b43_radio_write16(dev, 0x0005, 0x00FB);
-		b43_phy_write(dev, 0x0010, b43_phy_read(dev, 0x0010) | 0x0008);
-		b43_phy_write(dev, 0x0011, b43_phy_read(dev, 0x0011) | 0x0008);
-		break;
-	case B43_PHYTYPE_G: {
-		//XXX
-		break;
-	}
-	default:
-		B43_WARN_ON(1);
-	}
-	phy->radio_on = 0;
-}
Index: wireless-testing/drivers/net/wireless/b43/phy_a.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_a.c	2008-08-29 00:55:16.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_a.c	2008-08-30 02:02:55.000000000 +0200
@@ -55,12 +55,31 @@ static inline u16 freq_r3A_value(u16 fre
 	else
 		value = 0x0040;
 
 	return value;
 }
 
+#if 0
+/* This function converts a TSSI value to dBm in Q5.2 */
+static s8 b43_aphy_estimate_power_out(struct b43_wldev *dev, s8 tssi)
+{
+	struct b43_phy *phy = &dev->phy;
+	struct b43_phy_a *aphy = phy->a;
+	s8 dbm = 0;
+	s32 tmp;
+
+	tmp = (aphy->tgt_idle_tssi - aphy->cur_idle_tssi + tssi);
+	tmp += 0x80;
+	tmp = clamp_val(tmp, 0x00, 0xFF);
+	dbm = aphy->tssi2dbm[tmp];
+	//TODO: There's a FIXME on the specs
+
+	return dbm;
+}
+#endif
+
 void b43_radio_set_tx_iq(struct b43_wldev *dev)
 {
 	static const u8 data_high[5] = { 0x00, 0x40, 0x80, 0x90, 0xD0 };
 	static const u8 data_low[5] = { 0x00, 0x01, 0x05, 0x06, 0x0A };
 	u16 tmp = b43_radio_read16(dev, 0x001E);
 	int i, j;
@@ -323,24 +342,71 @@ void b43_phy_inita(struct b43_wldev *dev
 		b43_phy_write(dev, B43_PHY_OFDM(0x6E),
 				  (b43_phy_read(dev, B43_PHY_OFDM(0x6E))
 				   & 0xE000) | 0x3CF);
 	}
 }
 
+/* Initialise the TSSI->dBm lookup table */
+static int b43_aphy_init_tssi2dbm_table(struct b43_wldev *dev)
+{
+	struct b43_phy *phy = &dev->phy;
+	struct b43_phy_a *aphy = phy->a;
+	s16 pab0, pab1, pab2;
+
+	pab0 = (s16) (dev->dev->bus->sprom.pa1b0);
+	pab1 = (s16) (dev->dev->bus->sprom.pa1b1);
+	pab2 = (s16) (dev->dev->bus->sprom.pa1b2);
+
+	if (pab0 != 0 && pab1 != 0 && pab2 != 0 &&
+	    pab0 != -1 && pab1 != -1 && pab2 != -1) {
+		/* The pabX values are set in SPROM. Use them. */
+		if ((s8) dev->dev->bus->sprom.itssi_a != 0 &&
+		    (s8) dev->dev->bus->sprom.itssi_a != -1)
+			aphy->tgt_idle_tssi =
+			    (s8) (dev->dev->bus->sprom.itssi_a);
+		else
+			aphy->tgt_idle_tssi = 62;
+		aphy->tssi2dbm = b43_generate_dyn_tssi2dbm_tab(dev, pab0,
+							       pab1, pab2);
+		if (!aphy->tssi2dbm)
+			return -ENOMEM;
+	} else {
+		/* pabX values not set in SPROM,
+		 * but APHY needs a generated table. */
+		aphy->tssi2dbm = NULL;
+		b43err(dev->wl, "Could not generate tssi2dBm "
+		       "table (wrong SPROM info)!\n");
+		return -ENODEV;
+	}
+
+	return 0;
+}
+
 static int b43_aphy_op_allocate(struct b43_wldev *dev)
 {
 	struct b43_phy_a *aphy;
+	int err;
 
 	aphy = kzalloc(sizeof(*aphy), GFP_KERNEL);
 	if (!aphy)
 		return -ENOMEM;
 	dev->phy.a = aphy;
 
 	//TODO init struct b43_phy_a
 
+	err = b43_aphy_init_tssi2dbm_table(dev);
+	if (err)
+		goto err_free_aphy;
+
 	return 0;
+
+err_free_aphy:
+	kfree(aphy);
+	dev->phy.a = NULL;
+
+	return err;
 }
 
 static int b43_aphy_op_init(struct b43_wldev *dev)
 {
 	struct b43_phy_a *aphy = dev->phy.a;
 
@@ -356,12 +422,13 @@ static void b43_aphy_op_exit(struct b43_
 
 	if (aphy->initialised) {
 		//TODO
 		aphy->initialised = 0;
 	}
 	//TODO
+	kfree(aphy->tssi2dbm);
 	kfree(aphy);
 	dev->phy.a = NULL;
 }
 
 static inline u16 adjust_phyreg(struct b43_wldev *dev, u16 offset)
 {
@@ -427,13 +494,29 @@ static bool b43_aphy_op_supports_hwpctl(
 {
 	return (dev->phy.rev >= 5);
 }
 
 static void b43_aphy_op_software_rfkill(struct b43_wldev *dev,
 					enum rfkill_state state)
-{//TODO
+{
+	struct b43_phy *phy = &dev->phy;
+
+	if (state == RFKILL_STATE_UNBLOCKED) {
+		if (phy->radio_on)
+			return;
+		b43_radio_write16(dev, 0x0004, 0x00C0);
+		b43_radio_write16(dev, 0x0005, 0x0008);
+		b43_phy_write(dev, 0x0010, b43_phy_read(dev, 0x0010) & 0xFFF7);
+		b43_phy_write(dev, 0x0011, b43_phy_read(dev, 0x0011) & 0xFFF7);
+		b43_radio_init2060(dev);
+	} else {
+		b43_radio_write16(dev, 0x0004, 0x00FF);
+		b43_radio_write16(dev, 0x0005, 0x00FB);
+		b43_phy_write(dev, 0x0010, b43_phy_read(dev, 0x0010) | 0x0008);
+		b43_phy_write(dev, 0x0011, b43_phy_read(dev, 0x0011) | 0x0008);
+	}
 }
 
 static int b43_aphy_op_switch_channel(struct b43_wldev *dev,
 				      unsigned int new_channel)
 {
 	if (new_channel > 200)
Index: wireless-testing/drivers/net/wireless/b43/phy_a.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_a.h	2008-08-29 00:55:14.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_a.h	2008-08-30 02:00:52.000000000 +0200
@@ -102,12 +102,20 @@ void b43_ofdmtab_write32(struct b43_wlde
 			 u16 offset, u32 value);
 
 
 struct b43_phy_a {
 	bool initialised;
 
+	/* Pointer to the table used to convert a
+	 * TSSI value to dBm-Q5.2 */
+	const s8 *tssi2dbm;
+	/* Target idle TSSI */
+	int tgt_idle_tssi;
+	/* Current idle TSSI */
+	int cur_idle_tssi;//FIXME value currently not set
+
 	/* A-PHY TX Power control value. */
 	u16 txpwr_offset;
 
 	//TODO lots of missing stuff
 };
 
Index: wireless-testing/drivers/net/wireless/b43/phy_g.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.h	2008-08-29 00:55:16.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.h	2008-08-30 01:49:15.000000000 +0200
@@ -199,11 +199,13 @@ struct b43_phy_g {
 
 void b43_gphy_set_baseband_attenuation(struct b43_wldev *dev,
 				       u16 baseband_attenuation);
 void b43_gphy_channel_switch(struct b43_wldev *dev,
 			     unsigned int channel,
 			     bool synthetic_pu_workaround);
+u8 * b43_generate_dyn_tssi2dbm_tab(struct b43_wldev *dev,
+				   s16 pab0, s16 pab1, s16 pab2);
 
 struct b43_phy_operations;
 extern const struct b43_phy_operations b43_phyops_g;
 
 #endif /* LINUX_B43_PHY_G_H_ */


From mb at bu3sch.de  Sat Aug 30 02:27:19 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 02:27:19 +0200
Subject: [PATCH] b43: Move code from nphy.* to phy_n.*
Message-ID: <200808300227.20256.mb@bu3sch.de>

Sourcecode files for PHY code are named by phy_XXX.{c,h}
where XXX is the PHY type.
Move the N-PHY code to match the other files.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/Makefile
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Makefile	2008-08-30 02:13:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Makefile	2008-08-30 02:17:12.000000000 +0200
@@ -1,13 +1,13 @@
 b43-y				+= main.o
 b43-y				+= tables.o
 b43-$(CONFIG_B43_NPHY)		+= tables_nphy.o
 b43-y				+= phy_common.o
 b43-y				+= phy_g.o
 b43-y				+= phy_a.o
-b43-$(CONFIG_B43_NPHY)		+= nphy.o
+b43-$(CONFIG_B43_NPHY)		+= phy_n.o
 b43-y				+= sysfs.o
 b43-y				+= xmit.o
 b43-y				+= lo.o
 b43-y				+= wa.o
 b43-y				+= dma.o
 b43-$(CONFIG_B43_PIO)		+= pio.o
Index: wireless-testing/drivers/net/wireless/b43/nphy.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/nphy.c	2008-08-30 02:13:22.000000000 +0200
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,624 +0,0 @@
-/*
-
-  Broadcom B43 wireless driver
-  IEEE 802.11n PHY support
-
-  Copyright (c) 2008 Michael Buesch <mb at bu3sch.de>
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
-  Boston, MA 02110-1301, USA.
-
-*/
-
-#include <linux/delay.h>
-#include <linux/types.h>
-
-#include "b43.h"
-#include "nphy.h"
-#include "tables_nphy.h"
-
-
-void b43_nphy_set_rxantenna(struct b43_wldev *dev, int antenna)
-{//TODO
-}
-
-static void b43_nphy_op_adjust_txpower(struct b43_wldev *dev)
-{//TODO
-}
-
-static enum b43_txpwr_result b43_nphy_op_recalc_txpower(struct b43_wldev *dev,
-							bool ignore_tssi)
-{//TODO
-	return B43_TXPWR_RES_DONE;
-}
-
-static void b43_chantab_radio_upload(struct b43_wldev *dev,
-				     const struct b43_nphy_channeltab_entry *e)
-{
-	b43_radio_write16(dev, B2055_PLL_REF, e->radio_pll_ref);
-	b43_radio_write16(dev, B2055_RF_PLLMOD0, e->radio_rf_pllmod0);
-	b43_radio_write16(dev, B2055_RF_PLLMOD1, e->radio_rf_pllmod1);
-	b43_radio_write16(dev, B2055_VCO_CAPTAIL, e->radio_vco_captail);
-	b43_radio_write16(dev, B2055_VCO_CAL1, e->radio_vco_cal1);
-	b43_radio_write16(dev, B2055_VCO_CAL2, e->radio_vco_cal2);
-	b43_radio_write16(dev, B2055_PLL_LFC1, e->radio_pll_lfc1);
-	b43_radio_write16(dev, B2055_PLL_LFR1, e->radio_pll_lfr1);
-	b43_radio_write16(dev, B2055_PLL_LFC2, e->radio_pll_lfc2);
-	b43_radio_write16(dev, B2055_LGBUF_CENBUF, e->radio_lgbuf_cenbuf);
-	b43_radio_write16(dev, B2055_LGEN_TUNE1, e->radio_lgen_tune1);
-	b43_radio_write16(dev, B2055_LGEN_TUNE2, e->radio_lgen_tune2);
-	b43_radio_write16(dev, B2055_C1_LGBUF_ATUNE, e->radio_c1_lgbuf_atune);
-	b43_radio_write16(dev, B2055_C1_LGBUF_GTUNE, e->radio_c1_lgbuf_gtune);
-	b43_radio_write16(dev, B2055_C1_RX_RFR1, e->radio_c1_rx_rfr1);
-	b43_radio_write16(dev, B2055_C1_TX_PGAPADTN, e->radio_c1_tx_pgapadtn);
-	b43_radio_write16(dev, B2055_C1_TX_MXBGTRIM, e->radio_c1_tx_mxbgtrim);
-	b43_radio_write16(dev, B2055_C2_LGBUF_ATUNE, e->radio_c2_lgbuf_atune);
-	b43_radio_write16(dev, B2055_C2_LGBUF_GTUNE, e->radio_c2_lgbuf_gtune);
-	b43_radio_write16(dev, B2055_C2_RX_RFR1, e->radio_c2_rx_rfr1);
-	b43_radio_write16(dev, B2055_C2_TX_PGAPADTN, e->radio_c2_tx_pgapadtn);
-	b43_radio_write16(dev, B2055_C2_TX_MXBGTRIM, e->radio_c2_tx_mxbgtrim);
-}
-
-static void b43_chantab_phy_upload(struct b43_wldev *dev,
-				   const struct b43_nphy_channeltab_entry *e)
-{
-	b43_phy_write(dev, B43_NPHY_BW1A, e->phy_bw1a);
-	b43_phy_write(dev, B43_NPHY_BW2, e->phy_bw2);
-	b43_phy_write(dev, B43_NPHY_BW3, e->phy_bw3);
-	b43_phy_write(dev, B43_NPHY_BW4, e->phy_bw4);
-	b43_phy_write(dev, B43_NPHY_BW5, e->phy_bw5);
-	b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
-}
-
-static void b43_nphy_tx_power_fix(struct b43_wldev *dev)
-{
-	//TODO
-}
-
-/* Tune the hardware to a new channel. */
-static int nphy_channel_switch(struct b43_wldev *dev, unsigned int channel)
-{
-	const struct b43_nphy_channeltab_entry *tabent;
-
-	tabent = b43_nphy_get_chantabent(dev, channel);
-	if (!tabent)
-		return -ESRCH;
-
-	//FIXME enable/disable band select upper20 in RXCTL
-	if (0 /*FIXME 5Ghz*/)
-		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x20);
-	else
-		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x50);
-	b43_chantab_radio_upload(dev, tabent);
-	udelay(50);
-	b43_radio_write16(dev, B2055_VCO_CAL10, 5);
-	b43_radio_write16(dev, B2055_VCO_CAL10, 45);
-	b43_radio_write16(dev, B2055_VCO_CAL10, 65);
-	udelay(300);
-	if (0 /*FIXME 5Ghz*/)
-		b43_phy_set(dev, B43_NPHY_BANDCTL, B43_NPHY_BANDCTL_5GHZ);
-	else
-		b43_phy_mask(dev, B43_NPHY_BANDCTL, ~B43_NPHY_BANDCTL_5GHZ);
-	b43_chantab_phy_upload(dev, tabent);
-	b43_nphy_tx_power_fix(dev);
-
-	return 0;
-}
-
-static void b43_radio_init2055_pre(struct b43_wldev *dev)
-{
-	b43_phy_mask(dev, B43_NPHY_RFCTL_CMD,
-		     ~B43_NPHY_RFCTL_CMD_PORFORCE);
-	b43_phy_set(dev, B43_NPHY_RFCTL_CMD,
-		    B43_NPHY_RFCTL_CMD_CHIP0PU |
-		    B43_NPHY_RFCTL_CMD_OEPORFORCE);
-	b43_phy_set(dev, B43_NPHY_RFCTL_CMD,
-		    B43_NPHY_RFCTL_CMD_PORFORCE);
-}
-
-static void b43_radio_init2055_post(struct b43_wldev *dev)
-{
-	struct ssb_sprom *sprom = &(dev->dev->bus->sprom);
-	struct ssb_boardinfo *binfo = &(dev->dev->bus->boardinfo);
-	int i;
-	u16 val;
-
-	b43_radio_mask(dev, B2055_MASTER1, 0xFFF3);
-	msleep(1);
-	if ((sprom->revision != 4) || !(sprom->boardflags_hi & 0x0002)) {
-		if ((binfo->vendor != PCI_VENDOR_ID_BROADCOM) ||
-		    (binfo->type != 0x46D) ||
-		    (binfo->rev < 0x41)) {
-			b43_radio_mask(dev, B2055_C1_RX_BB_REG, 0x7F);
-			b43_radio_mask(dev, B2055_C1_RX_BB_REG, 0x7F);
-			msleep(1);
-		}
-	}
-	b43_radio_maskset(dev, B2055_RRCCAL_NOPTSEL, 0x3F, 0x2C);
-	msleep(1);
-	b43_radio_write16(dev, B2055_CAL_MISC, 0x3C);
-	msleep(1);
-	b43_radio_mask(dev, B2055_CAL_MISC, 0xFFBE);
-	msleep(1);
-	b43_radio_set(dev, B2055_CAL_LPOCTL, 0x80);
-	msleep(1);
-	b43_radio_set(dev, B2055_CAL_MISC, 0x1);
-	msleep(1);
-	b43_radio_set(dev, B2055_CAL_MISC, 0x40);
-	msleep(1);
-	for (i = 0; i < 100; i++) {
-		val = b43_radio_read16(dev, B2055_CAL_COUT2);
-		if (val & 0x80)
-			break;
-		udelay(10);
-	}
-	msleep(1);
-	b43_radio_mask(dev, B2055_CAL_LPOCTL, 0xFF7F);
-	msleep(1);
-	nphy_channel_switch(dev, dev->phy.channel);
-	b43_radio_write16(dev, B2055_C1_RX_BB_LPF, 0x9);
-	b43_radio_write16(dev, B2055_C2_RX_BB_LPF, 0x9);
-	b43_radio_write16(dev, B2055_C1_RX_BB_MIDACHP, 0x83);
-	b43_radio_write16(dev, B2055_C2_RX_BB_MIDACHP, 0x83);
-}
-
-/* Initialize a Broadcom 2055 N-radio */
-static void b43_radio_init2055(struct b43_wldev *dev)
-{
-	b43_radio_init2055_pre(dev);
-	if (b43_status(dev) < B43_STAT_INITIALIZED)
-		b2055_upload_inittab(dev, 0, 1);
-	else
-		b2055_upload_inittab(dev, 0/*FIXME on 5ghz band*/, 0);
-	b43_radio_init2055_post(dev);
-}
-
-void b43_nphy_radio_turn_on(struct b43_wldev *dev)
-{
-	b43_radio_init2055(dev);
-}
-
-void b43_nphy_radio_turn_off(struct b43_wldev *dev)
-{
-	b43_phy_mask(dev, B43_NPHY_RFCTL_CMD,
-		     ~B43_NPHY_RFCTL_CMD_EN);
-}
-
-#define ntab_upload(dev, offset, data) do { \
-		unsigned int i;						\
-		for (i = 0; i < (offset##_SIZE); i++)			\
-			b43_ntab_write(dev, (offset) + i, (data)[i]);	\
-	} while (0)
-
-/* Upload the N-PHY tables. */
-static void b43_nphy_tables_init(struct b43_wldev *dev)
-{
-	/* Static tables */
-	ntab_upload(dev, B43_NTAB_FRAMESTRUCT, b43_ntab_framestruct);
-	ntab_upload(dev, B43_NTAB_FRAMELT, b43_ntab_framelookup);
-	ntab_upload(dev, B43_NTAB_TMAP, b43_ntab_tmap);
-	ntab_upload(dev, B43_NTAB_TDTRN, b43_ntab_tdtrn);
-	ntab_upload(dev, B43_NTAB_INTLEVEL, b43_ntab_intlevel);
-	ntab_upload(dev, B43_NTAB_PILOT, b43_ntab_pilot);
-	ntab_upload(dev, B43_NTAB_PILOTLT, b43_ntab_pilotlt);
-	ntab_upload(dev, B43_NTAB_TDI20A0, b43_ntab_tdi20a0);
-	ntab_upload(dev, B43_NTAB_TDI20A1, b43_ntab_tdi20a1);
-	ntab_upload(dev, B43_NTAB_TDI40A0, b43_ntab_tdi40a0);
-	ntab_upload(dev, B43_NTAB_TDI40A1, b43_ntab_tdi40a1);
-	ntab_upload(dev, B43_NTAB_BDI, b43_ntab_bdi);
-	ntab_upload(dev, B43_NTAB_CHANEST, b43_ntab_channelest);
-	ntab_upload(dev, B43_NTAB_MCS, b43_ntab_mcs);
-
-	/* Volatile tables */
-	ntab_upload(dev, B43_NTAB_NOISEVAR10, b43_ntab_noisevar10);
-	ntab_upload(dev, B43_NTAB_NOISEVAR11, b43_ntab_noisevar11);
-	ntab_upload(dev, B43_NTAB_C0_ESTPLT, b43_ntab_estimatepowerlt0);
-	ntab_upload(dev, B43_NTAB_C1_ESTPLT, b43_ntab_estimatepowerlt1);
-	ntab_upload(dev, B43_NTAB_C0_ADJPLT, b43_ntab_adjustpower0);
-	ntab_upload(dev, B43_NTAB_C1_ADJPLT, b43_ntab_adjustpower1);
-	ntab_upload(dev, B43_NTAB_C0_GAINCTL, b43_ntab_gainctl0);
-	ntab_upload(dev, B43_NTAB_C1_GAINCTL, b43_ntab_gainctl1);
-	ntab_upload(dev, B43_NTAB_C0_IQLT, b43_ntab_iqlt0);
-	ntab_upload(dev, B43_NTAB_C1_IQLT, b43_ntab_iqlt1);
-	ntab_upload(dev, B43_NTAB_C0_LOFEEDTH, b43_ntab_loftlt0);
-	ntab_upload(dev, B43_NTAB_C1_LOFEEDTH, b43_ntab_loftlt1);
-}
-
-static void b43_nphy_workarounds(struct b43_wldev *dev)
-{
-	struct b43_phy *phy = &dev->phy;
-	unsigned int i;
-
-	b43_phy_set(dev, B43_NPHY_IQFLIP,
-		    B43_NPHY_IQFLIP_ADC1 | B43_NPHY_IQFLIP_ADC2);
-	if (1 /* FIXME band is 2.4GHz */) {
-		b43_phy_set(dev, B43_NPHY_CLASSCTL,
-			    B43_NPHY_CLASSCTL_CCKEN);
-	} else {
-		b43_phy_mask(dev, B43_NPHY_CLASSCTL,
-			     ~B43_NPHY_CLASSCTL_CCKEN);
-	}
-	b43_radio_set(dev, B2055_C1_TX_RF_SPARE, 0x8);
-	b43_phy_write(dev, B43_NPHY_TXFRAMEDELAY, 8);
-
-	/* Fixup some tables */
-	b43_ntab_write(dev, B43_NTAB16(8, 0x00), 0xA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x10), 0xA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x02), 0xCDAA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x12), 0xCDAA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x08), 0);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x18), 0);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x07), 0x7AAB);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x17), 0x7AAB);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x06), 0x800);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x16), 0x800);
-
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO1, 0x2D8);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP1, 0x301);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO2, 0x2D8);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP2, 0x301);
-
-	//TODO set RF sequence
-
-	/* Set narrowband clip threshold */
-	b43_phy_write(dev, B43_NPHY_C1_NBCLIPTHRES, 66);
-	b43_phy_write(dev, B43_NPHY_C2_NBCLIPTHRES, 66);
-
-	/* Set wideband clip 2 threshold */
-	b43_phy_maskset(dev, B43_NPHY_C1_CLIPWBTHRES,
-			~B43_NPHY_C1_CLIPWBTHRES_CLIP2,
-			21 << B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT);
-	b43_phy_maskset(dev, B43_NPHY_C2_CLIPWBTHRES,
-			~B43_NPHY_C2_CLIPWBTHRES_CLIP2,
-			21 << B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT);
-
-	/* Set Clip 2 detect */
-	b43_phy_set(dev, B43_NPHY_C1_CGAINI,
-		    B43_NPHY_C1_CGAINI_CL2DETECT);
-	b43_phy_set(dev, B43_NPHY_C2_CGAINI,
-		    B43_NPHY_C2_CGAINI_CL2DETECT);
-
-	if (0 /*FIXME*/) {
-		/* Set dwell lengths */
-		b43_phy_write(dev, B43_NPHY_CLIP1_NBDWELL_LEN, 43);
-		b43_phy_write(dev, B43_NPHY_CLIP2_NBDWELL_LEN, 43);
-		b43_phy_write(dev, B43_NPHY_W1CLIP1_DWELL_LEN, 9);
-		b43_phy_write(dev, B43_NPHY_W1CLIP2_DWELL_LEN, 9);
-
-		/* Set gain backoff */
-		b43_phy_maskset(dev, B43_NPHY_C1_CGAINI,
-				~B43_NPHY_C1_CGAINI_GAINBKOFF,
-				1 << B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT);
-		b43_phy_maskset(dev, B43_NPHY_C2_CGAINI,
-				~B43_NPHY_C2_CGAINI_GAINBKOFF,
-				1 << B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT);
-
-		/* Set HPVGA2 index */
-		b43_phy_maskset(dev, B43_NPHY_C1_INITGAIN,
-				~B43_NPHY_C1_INITGAIN_HPVGA2,
-				6 << B43_NPHY_C1_INITGAIN_HPVGA2_SHIFT);
-		b43_phy_maskset(dev, B43_NPHY_C2_INITGAIN,
-				~B43_NPHY_C2_INITGAIN_HPVGA2,
-				6 << B43_NPHY_C2_INITGAIN_HPVGA2_SHIFT);
-
-		//FIXME verify that the specs really mean to use autoinc here.
-		for (i = 0; i < 3; i++)
-			b43_ntab_write(dev, B43_NTAB16(7, 0x106) + i, 0x673);
-	}
-
-	/* Set minimum gain value */
-	b43_phy_maskset(dev, B43_NPHY_C1_MINMAX_GAIN,
-			~B43_NPHY_C1_MINGAIN,
-			23 << B43_NPHY_C1_MINGAIN_SHIFT);
-	b43_phy_maskset(dev, B43_NPHY_C2_MINMAX_GAIN,
-			~B43_NPHY_C2_MINGAIN,
-			23 << B43_NPHY_C2_MINGAIN_SHIFT);
-
-	if (phy->rev < 2) {
-		b43_phy_mask(dev, B43_NPHY_SCRAM_SIGCTL,
-			     ~B43_NPHY_SCRAM_SIGCTL_SCM);
-	}
-
-	/* Set phase track alpha and beta */
-	b43_phy_write(dev, B43_NPHY_PHASETR_A0, 0x125);
-	b43_phy_write(dev, B43_NPHY_PHASETR_A1, 0x1B3);
-	b43_phy_write(dev, B43_NPHY_PHASETR_A2, 0x105);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B0, 0x16E);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B1, 0xCD);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B2, 0x20);
-}
-
-static void b43_nphy_reset_cca(struct b43_wldev *dev)
-{
-	u16 bbcfg;
-
-	ssb_write32(dev->dev, SSB_TMSLOW,
-		    ssb_read32(dev->dev, SSB_TMSLOW) | SSB_TMSLOW_FGC);
-	bbcfg = b43_phy_read(dev, B43_NPHY_BBCFG);
-	b43_phy_set(dev, B43_NPHY_BBCFG, B43_NPHY_BBCFG_RSTCCA);
-	b43_phy_write(dev, B43_NPHY_BBCFG,
-		      bbcfg & ~B43_NPHY_BBCFG_RSTCCA);
-	ssb_write32(dev->dev, SSB_TMSLOW,
-		    ssb_read32(dev->dev, SSB_TMSLOW) & ~SSB_TMSLOW_FGC);
-}
-
-enum b43_nphy_rf_sequence {
-	B43_RFSEQ_RX2TX,
-	B43_RFSEQ_TX2RX,
-	B43_RFSEQ_RESET2RX,
-	B43_RFSEQ_UPDATE_GAINH,
-	B43_RFSEQ_UPDATE_GAINL,
-	B43_RFSEQ_UPDATE_GAINU,
-};
-
-static void b43_nphy_force_rf_sequence(struct b43_wldev *dev,
-				       enum b43_nphy_rf_sequence seq)
-{
-	static const u16 trigger[] = {
-		[B43_RFSEQ_RX2TX]		= B43_NPHY_RFSEQTR_RX2TX,
-		[B43_RFSEQ_TX2RX]		= B43_NPHY_RFSEQTR_TX2RX,
-		[B43_RFSEQ_RESET2RX]		= B43_NPHY_RFSEQTR_RST2RX,
-		[B43_RFSEQ_UPDATE_GAINH]	= B43_NPHY_RFSEQTR_UPGH,
-		[B43_RFSEQ_UPDATE_GAINL]	= B43_NPHY_RFSEQTR_UPGL,
-		[B43_RFSEQ_UPDATE_GAINU]	= B43_NPHY_RFSEQTR_UPGU,
-	};
-	int i;
-
-	B43_WARN_ON(seq >= ARRAY_SIZE(trigger));
-
-	b43_phy_set(dev, B43_NPHY_RFSEQMODE,
-		    B43_NPHY_RFSEQMODE_CAOVER | B43_NPHY_RFSEQMODE_TROVER);
-	b43_phy_set(dev, B43_NPHY_RFSEQTR, trigger[seq]);
-	for (i = 0; i < 200; i++) {
-		if (!(b43_phy_read(dev, B43_NPHY_RFSEQST) & trigger[seq]))
-			goto ok;
-		msleep(1);
-	}
-	b43err(dev->wl, "RF sequence status timeout\n");
-ok:
-	b43_phy_mask(dev, B43_NPHY_RFSEQMODE,
-		     ~(B43_NPHY_RFSEQMODE_CAOVER | B43_NPHY_RFSEQMODE_TROVER));
-}
-
-static void b43_nphy_bphy_init(struct b43_wldev *dev)
-{
-	unsigned int i;
-	u16 val;
-
-	val = 0x1E1F;
-	for (i = 0; i < 14; i++) {
-		b43_phy_write(dev, B43_PHY_N_BMODE(0x88 + i), val);
-		val -= 0x202;
-	}
-	val = 0x3E3F;
-	for (i = 0; i < 16; i++) {
-		b43_phy_write(dev, B43_PHY_N_BMODE(0x97 + i), val);
-		val -= 0x202;
-	}
-	b43_phy_write(dev, B43_PHY_N_BMODE(0x38), 0x668);
-}
-
-/* RSSI Calibration */
-static void b43_nphy_rssi_cal(struct b43_wldev *dev, u8 type)
-{
-	//TODO
-}
-
-int b43_phy_initn(struct b43_wldev *dev)
-{
-	struct b43_phy *phy = &dev->phy;
-	u16 tmp;
-
-	//TODO: Spectral management
-	b43_nphy_tables_init(dev);
-
-	/* Clear all overrides */
-	b43_phy_write(dev, B43_NPHY_RFCTL_OVER, 0);
-	b43_phy_write(dev, B43_NPHY_RFCTL_INTC1, 0);
-	b43_phy_write(dev, B43_NPHY_RFCTL_INTC2, 0);
-	b43_phy_write(dev, B43_NPHY_RFCTL_INTC3, 0);
-	b43_phy_write(dev, B43_NPHY_RFCTL_INTC4, 0);
-	b43_phy_mask(dev, B43_NPHY_RFSEQMODE,
-		     ~(B43_NPHY_RFSEQMODE_CAOVER |
-		       B43_NPHY_RFSEQMODE_TROVER));
-	b43_phy_write(dev, B43_NPHY_AFECTL_OVER, 0);
-
-	tmp = (phy->rev < 2) ? 64 : 59;
-	b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
-			~B43_NPHY_BPHY_CTL3_SCALE,
-			tmp << B43_NPHY_BPHY_CTL3_SCALE_SHIFT);
-
-	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_20M, 0x20);
-	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_40M, 0x20);
-
-	b43_phy_write(dev, B43_NPHY_TXREALFD, 184);
-	b43_phy_write(dev, B43_NPHY_MIMO_CRSTXEXT, 200);
-	b43_phy_write(dev, B43_NPHY_PLOAD_CSENSE_EXTLEN, 80);
-	b43_phy_write(dev, B43_NPHY_C2_BCLIPBKOFF, 511);
-
-	//TODO MIMO-Config
-	//TODO Update TX/RX chain
-
-	if (phy->rev < 2) {
-		b43_phy_write(dev, B43_NPHY_DUP40_GFBL, 0xAA8);
-		b43_phy_write(dev, B43_NPHY_DUP40_BL, 0x9A4);
-	}
-	b43_nphy_workarounds(dev);
-	b43_nphy_reset_cca(dev);
-
-	ssb_write32(dev->dev, SSB_TMSLOW,
-		    ssb_read32(dev->dev, SSB_TMSLOW) | B43_TMSLOW_MACPHYCLKEN);
-	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RX2TX);
-	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RESET2RX);
-
-	b43_phy_read(dev, B43_NPHY_CLASSCTL); /* dummy read */
-	//TODO read core1/2 clip1 thres regs
-
-	if (1 /* FIXME Band is 2.4GHz */)
-		b43_nphy_bphy_init(dev);
-	//TODO disable TX power control
-	//TODO Fix the TX power settings
-	//TODO Init periodic calibration with reason 3
-	b43_nphy_rssi_cal(dev, 2);
-	b43_nphy_rssi_cal(dev, 0);
-	b43_nphy_rssi_cal(dev, 1);
-	//TODO get TX gain
-	//TODO init superswitch
-	//TODO calibrate LO
-	//TODO idle TSSI TX pctl
-	//TODO TX power control power setup
-	//TODO table writes
-	//TODO TX power control coefficients
-	//TODO enable TX power control
-	//TODO control antenna selection
-	//TODO init radar detection
-	//TODO reset channel if changed
-
-	b43err(dev->wl, "IEEE 802.11n devices are not supported, yet.\n");
-	return 0;
-}
-
-static int b43_nphy_op_allocate(struct b43_wldev *dev)
-{
-	struct b43_phy_n *nphy;
-
-	nphy = kzalloc(sizeof(*nphy), GFP_KERNEL);
-	if (!nphy)
-		return -ENOMEM;
-	dev->phy.n = nphy;
-
-	//TODO init struct b43_phy_n
-
-	return 0;
-}
-
-static int b43_nphy_op_init(struct b43_wldev *dev)
-{
-	struct b43_phy_n *nphy = dev->phy.n;
-	int err;
-
-	err = b43_phy_initn(dev);
-	if (err)
-		return err;
-	nphy->initialised = 1;
-
-	return 0;
-}
-
-static void b43_nphy_op_exit(struct b43_wldev *dev)
-{
-	struct b43_phy_n *nphy = dev->phy.n;
-
-	if (nphy->initialised) {
-		//TODO
-		nphy->initialised = 0;
-	}
-	//TODO
-	kfree(nphy);
-	dev->phy.n = NULL;
-}
-
-static inline void check_phyreg(struct b43_wldev *dev, u16 offset)
-{
-#if B43_DEBUG
-	if ((offset & B43_PHYROUTE) == B43_PHYROUTE_OFDM_GPHY) {
-		/* OFDM registers are onnly available on A/G-PHYs */
-		b43err(dev->wl, "Invalid OFDM PHY access at "
-		       "0x%04X on N-PHY\n", offset);
-		dump_stack();
-	}
-	if ((offset & B43_PHYROUTE) == B43_PHYROUTE_EXT_GPHY) {
-		/* Ext-G registers are only available on G-PHYs */
-		b43err(dev->wl, "Invalid EXT-G PHY access at "
-		       "0x%04X on N-PHY\n", offset);
-		dump_stack();
-	}
-#endif /* B43_DEBUG */
-}
-
-static u16 b43_nphy_op_read(struct b43_wldev *dev, u16 reg)
-{
-	check_phyreg(dev, reg);
-	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
-	return b43_read16(dev, B43_MMIO_PHY_DATA);
-}
-
-static void b43_nphy_op_write(struct b43_wldev *dev, u16 reg, u16 value)
-{
-	check_phyreg(dev, reg);
-	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
-	b43_write16(dev, B43_MMIO_PHY_DATA, value);
-}
-
-static u16 b43_nphy_op_radio_read(struct b43_wldev *dev, u16 reg)
-{
-	/* Register 1 is a 32-bit register. */
-	B43_WARN_ON(reg == 1);
-	/* N-PHY needs 0x100 for read access */
-	reg |= 0x100;
-
-	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
-	return b43_read16(dev, B43_MMIO_RADIO_DATA_LOW);
-}
-
-static void b43_nphy_op_radio_write(struct b43_wldev *dev, u16 reg, u16 value)
-{
-	/* Register 1 is a 32-bit register. */
-	B43_WARN_ON(reg == 1);
-
-	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
-	b43_write16(dev, B43_MMIO_RADIO_DATA_LOW, value);
-}
-
-static void b43_nphy_op_software_rfkill(struct b43_wldev *dev,
-					enum rfkill_state state)
-{//TODO
-}
-
-static int b43_nphy_op_switch_channel(struct b43_wldev *dev,
-				      unsigned int new_channel)
-{
-	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ) {
-		if ((new_channel < 1) || (new_channel > 14))
-			return -EINVAL;
-	} else {
-		if (new_channel > 200)
-			return -EINVAL;
-	}
-
-	return nphy_channel_switch(dev, new_channel);
-}
-
-static unsigned int b43_nphy_op_get_default_chan(struct b43_wldev *dev)
-{
-	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)
-		return 1;
-	return 36;
-}
-
-const struct b43_phy_operations b43_phyops_n = {
-	.allocate		= b43_nphy_op_allocate,
-	.init			= b43_nphy_op_init,
-	.exit			= b43_nphy_op_exit,
-	.phy_read		= b43_nphy_op_read,
-	.phy_write		= b43_nphy_op_write,
-	.radio_read		= b43_nphy_op_radio_read,
-	.radio_write		= b43_nphy_op_radio_write,
-	.software_rfkill	= b43_nphy_op_software_rfkill,
-	.switch_channel		= b43_nphy_op_switch_channel,
-	.get_default_chan	= b43_nphy_op_get_default_chan,
-	.recalc_txpower		= b43_nphy_op_recalc_txpower,
-	.adjust_txpower		= b43_nphy_op_adjust_txpower,
-};
Index: wireless-testing/drivers/net/wireless/b43/nphy.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/nphy.h	2008-08-30 02:13:22.000000000 +0200
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,932 +0,0 @@
-#ifndef B43_NPHY_H_
-#define B43_NPHY_H_
-
-#include "phy_common.h"
-
-
-/* N-PHY registers. */
-
-#define B43_NPHY_BBCFG				B43_PHY_N(0x001) /* BB config */
-#define  B43_NPHY_BBCFG_RSTCCA			0x4000 /* Reset CCA */
-#define  B43_NPHY_BBCFG_RSTRX			0x8000 /* Reset RX */
-#define B43_NPHY_CHANNEL			B43_PHY_N(0x005) /* Channel */
-#define B43_NPHY_TXERR				B43_PHY_N(0x007) /* TX error */
-#define B43_NPHY_BANDCTL			B43_PHY_N(0x009) /* Band control */
-#define  B43_NPHY_BANDCTL_5GHZ			0x0001 /* Use the 5GHz band */
-#define B43_NPHY_4WI_ADDR			B43_PHY_N(0x00B) /* Four-wire bus address */
-#define B43_NPHY_4WI_DATAHI			B43_PHY_N(0x00C) /* Four-wire bus data high */
-#define B43_NPHY_4WI_DATALO			B43_PHY_N(0x00D) /* Four-wire bus data low */
-#define B43_NPHY_BIST_STAT0			B43_PHY_N(0x00E) /* Built-in self test status 0 */
-#define B43_NPHY_BIST_STAT1			B43_PHY_N(0x00F) /* Built-in self test status 1 */
-
-#define B43_NPHY_C1_DESPWR			B43_PHY_N(0x018) /* Core 1 desired power */
-#define B43_NPHY_C1_CCK_DESPWR			B43_PHY_N(0x019) /* Core 1 CCK desired power */
-#define B43_NPHY_C1_BCLIPBKOFF			B43_PHY_N(0x01A) /* Core 1 barely clip backoff */
-#define B43_NPHY_C1_CCK_BCLIPBKOFF		B43_PHY_N(0x01B) /* Core 1 CCK barely clip backoff */
-#define B43_NPHY_C1_CGAINI			B43_PHY_N(0x01C) /* Core 1 compute gain info */
-#define  B43_NPHY_C1_CGAINI_GAINBKOFF		0x001F /* Gain backoff */
-#define  B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT	0
-#define  B43_NPHY_C1_CGAINI_CLIPGBKOFF		0x03E0 /* Clip gain backoff */
-#define  B43_NPHY_C1_CGAINI_CLIPGBKOFF_SHIFT	5
-#define  B43_NPHY_C1_CGAINI_GAINSTEP		0x1C00 /* Gain step */
-#define  B43_NPHY_C1_CGAINI_GAINSTEP_SHIFT	10
-#define  B43_NPHY_C1_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
-#define B43_NPHY_C1_CCK_CGAINI			B43_PHY_N(0x01D) /* Core 1 CCK compute gain info */
-#define  B43_NPHY_C1_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
-#define  B43_NPHY_C1_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip gain backoff */
-#define B43_NPHY_C1_MINMAX_GAIN			B43_PHY_N(0x01E) /* Core 1 min/max gain */
-#define  B43_NPHY_C1_MINGAIN			0x00FF /* Minimum gain */
-#define  B43_NPHY_C1_MINGAIN_SHIFT		0
-#define  B43_NPHY_C1_MAXGAIN			0xFF00 /* Maximum gain */
-#define  B43_NPHY_C1_MAXGAIN_SHIFT		8
-#define B43_NPHY_C1_CCK_MINMAX_GAIN		B43_PHY_N(0x01F) /* Core 1 CCK min/max gain */
-#define  B43_NPHY_C1_CCK_MINGAIN		0x00FF /* Minimum gain */
-#define  B43_NPHY_C1_CCK_MINGAIN_SHIFT		0
-#define  B43_NPHY_C1_CCK_MAXGAIN		0xFF00 /* Maximum gain */
-#define  B43_NPHY_C1_CCK_MAXGAIN_SHIFT		8
-#define B43_NPHY_C1_INITGAIN			B43_PHY_N(0x020) /* Core 1 initial gain code */
-#define  B43_NPHY_C1_INITGAIN_EXTLNA		0x0001 /* External LNA index */
-#define  B43_NPHY_C1_INITGAIN_LNA		0x0006 /* LNA index */
-#define  B43_NPHY_C1_INITGAIN_LNAIDX_SHIFT	1
-#define  B43_NPHY_C1_INITGAIN_HPVGA1		0x0078 /* HPVGA1 index */
-#define  B43_NPHY_C1_INITGAIN_HPVGA1_SHIFT	3
-#define  B43_NPHY_C1_INITGAIN_HPVGA2		0x0F80 /* HPVGA2 index */
-#define  B43_NPHY_C1_INITGAIN_HPVGA2_SHIFT	7
-#define  B43_NPHY_C1_INITGAIN_TRRX		0x1000 /* TR RX index */
-#define  B43_NPHY_C1_INITGAIN_TRTX		0x2000 /* TR TX index */
-#define B43_NPHY_C1_CLIP1_HIGAIN		B43_PHY_N(0x021) /* Core 1 clip1 high gain code */
-#define B43_NPHY_C1_CLIP1_MEDGAIN		B43_PHY_N(0x022) /* Core 1 clip1 medium gain code */
-#define B43_NPHY_C1_CLIP1_LOGAIN		B43_PHY_N(0x023) /* Core 1 clip1 low gain code */
-#define B43_NPHY_C1_CLIP2_GAIN			B43_PHY_N(0x024) /* Core 1 clip2 gain code */
-#define B43_NPHY_C1_FILTERGAIN			B43_PHY_N(0x025) /* Core 1 filter gain */
-#define B43_NPHY_C1_LPF_QHPF_BW			B43_PHY_N(0x026) /* Core 1 LPF Q HP F bandwidth */
-#define B43_NPHY_C1_CLIPWBTHRES			B43_PHY_N(0x027) /* Core 1 clip wideband threshold */
-#define  B43_NPHY_C1_CLIPWBTHRES_CLIP2		0x003F /* Clip 2 */
-#define  B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT	0
-#define  B43_NPHY_C1_CLIPWBTHRES_CLIP1		0x0FC0 /* Clip 1 */
-#define  B43_NPHY_C1_CLIPWBTHRES_CLIP1_SHIFT	6
-#define B43_NPHY_C1_W1THRES			B43_PHY_N(0x028) /* Core 1 W1 threshold */
-#define B43_NPHY_C1_EDTHRES			B43_PHY_N(0x029) /* Core 1 ED threshold */
-#define B43_NPHY_C1_SMSIGTHRES			B43_PHY_N(0x02A) /* Core 1 small sig threshold */
-#define B43_NPHY_C1_NBCLIPTHRES			B43_PHY_N(0x02B) /* Core 1 NB clip threshold */
-#define B43_NPHY_C1_CLIP1THRES			B43_PHY_N(0x02C) /* Core 1 clip1 threshold */
-#define B43_NPHY_C1_CLIP2THRES			B43_PHY_N(0x02D) /* Core 1 clip2 threshold */
-
-#define B43_NPHY_C2_DESPWR			B43_PHY_N(0x02E) /* Core 2 desired power */
-#define B43_NPHY_C2_CCK_DESPWR			B43_PHY_N(0x02F) /* Core 2 CCK desired power */
-#define B43_NPHY_C2_BCLIPBKOFF			B43_PHY_N(0x030) /* Core 2 barely clip backoff */
-#define B43_NPHY_C2_CCK_BCLIPBKOFF		B43_PHY_N(0x031) /* Core 2 CCK barely clip backoff */
-#define B43_NPHY_C2_CGAINI			B43_PHY_N(0x032) /* Core 2 compute gain info */
-#define  B43_NPHY_C2_CGAINI_GAINBKOFF		0x001F /* Gain backoff */
-#define  B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT	0
-#define  B43_NPHY_C2_CGAINI_CLIPGBKOFF		0x03E0 /* Clip gain backoff */
-#define  B43_NPHY_C2_CGAINI_CLIPGBKOFF_SHIFT	5
-#define  B43_NPHY_C2_CGAINI_GAINSTEP		0x1C00 /* Gain step */
-#define  B43_NPHY_C2_CGAINI_GAINSTEP_SHIFT	10
-#define  B43_NPHY_C2_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
-#define B43_NPHY_C2_CCK_CGAINI			B43_PHY_N(0x033) /* Core 2 CCK compute gain info */
-#define  B43_NPHY_C2_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
-#define  B43_NPHY_C2_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip gain backoff */
-#define B43_NPHY_C2_MINMAX_GAIN			B43_PHY_N(0x034) /* Core 2 min/max gain */
-#define  B43_NPHY_C2_MINGAIN			0x00FF /* Minimum gain */
-#define  B43_NPHY_C2_MINGAIN_SHIFT		0
-#define  B43_NPHY_C2_MAXGAIN			0xFF00 /* Maximum gain */
-#define  B43_NPHY_C2_MAXGAIN_SHIFT		8
-#define B43_NPHY_C2_CCK_MINMAX_GAIN		B43_PHY_N(0x035) /* Core 2 CCK min/max gain */
-#define  B43_NPHY_C2_CCK_MINGAIN		0x00FF /* Minimum gain */
-#define  B43_NPHY_C2_CCK_MINGAIN_SHIFT		0
-#define  B43_NPHY_C2_CCK_MAXGAIN		0xFF00 /* Maximum gain */
-#define  B43_NPHY_C2_CCK_MAXGAIN_SHIFT		8
-#define B43_NPHY_C2_INITGAIN			B43_PHY_N(0x036) /* Core 2 initial gain code */
-#define  B43_NPHY_C2_INITGAIN_EXTLNA		0x0001 /* External LNA index */
-#define  B43_NPHY_C2_INITGAIN_LNA		0x0006 /* LNA index */
-#define  B43_NPHY_C2_INITGAIN_LNAIDX_SHIFT	1
-#define  B43_NPHY_C2_INITGAIN_HPVGA1		0x0078 /* HPVGA1 index */
-#define  B43_NPHY_C2_INITGAIN_HPVGA1_SHIFT	3
-#define  B43_NPHY_C2_INITGAIN_HPVGA2		0x0F80 /* HPVGA2 index */
-#define  B43_NPHY_C2_INITGAIN_HPVGA2_SHIFT	7
-#define  B43_NPHY_C2_INITGAIN_TRRX		0x1000 /* TR RX index */
-#define  B43_NPHY_C2_INITGAIN_TRTX		0x2000 /* TR TX index */
-#define B43_NPHY_C2_CLIP1_HIGAIN		B43_PHY_N(0x037) /* Core 2 clip1 high gain code */
-#define B43_NPHY_C2_CLIP1_MEDGAIN		B43_PHY_N(0x038) /* Core 2 clip1 medium gain code */
-#define B43_NPHY_C2_CLIP1_LOGAIN		B43_PHY_N(0x039) /* Core 2 clip1 low gain code */
-#define B43_NPHY_C2_CLIP2_GAIN			B43_PHY_N(0x03A) /* Core 2 clip2 gain code */
-#define B43_NPHY_C2_FILTERGAIN			B43_PHY_N(0x03B) /* Core 2 filter gain */
-#define B43_NPHY_C2_LPF_QHPF_BW			B43_PHY_N(0x03C) /* Core 2 LPF Q HP F bandwidth */
-#define B43_NPHY_C2_CLIPWBTHRES			B43_PHY_N(0x03D) /* Core 2 clip wideband threshold */
-#define  B43_NPHY_C2_CLIPWBTHRES_CLIP2		0x003F /* Clip 2 */
-#define  B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT	0
-#define  B43_NPHY_C2_CLIPWBTHRES_CLIP1		0x0FC0 /* Clip 1 */
-#define  B43_NPHY_C2_CLIPWBTHRES_CLIP1_SHIFT	6
-#define B43_NPHY_C2_W1THRES			B43_PHY_N(0x03E) /* Core 2 W1 threshold */
-#define B43_NPHY_C2_EDTHRES			B43_PHY_N(0x03F) /* Core 2 ED threshold */
-#define B43_NPHY_C2_SMSIGTHRES			B43_PHY_N(0x040) /* Core 2 small sig threshold */
-#define B43_NPHY_C2_NBCLIPTHRES			B43_PHY_N(0x041) /* Core 2 NB clip threshold */
-#define B43_NPHY_C2_CLIP1THRES			B43_PHY_N(0x042) /* Core 2 clip1 threshold */
-#define B43_NPHY_C2_CLIP2THRES			B43_PHY_N(0x043) /* Core 2 clip2 threshold */
-
-#define B43_NPHY_CRS_THRES1			B43_PHY_N(0x044) /* CRS threshold 1 */
-#define B43_NPHY_CRS_THRES2			B43_PHY_N(0x045) /* CRS threshold 2 */
-#define B43_NPHY_CRS_THRES3			B43_PHY_N(0x046) /* CRS threshold 3 */
-#define B43_NPHY_CRSCTL				B43_PHY_N(0x047) /* CRS control */
-#define B43_NPHY_DCFADDR			B43_PHY_N(0x048) /* DC filter address */
-#define B43_NPHY_RXF20_NUM0			B43_PHY_N(0x049) /* RX filter 20 numerator 0 */
-#define B43_NPHY_RXF20_NUM1			B43_PHY_N(0x04A) /* RX filter 20 numerator 1 */
-#define B43_NPHY_RXF20_NUM2			B43_PHY_N(0x04B) /* RX filter 20 numerator 2 */
-#define B43_NPHY_RXF20_DENOM0			B43_PHY_N(0x04C) /* RX filter 20 denominator 0 */
-#define B43_NPHY_RXF20_DENOM1			B43_PHY_N(0x04D) /* RX filter 20 denominator 1 */
-#define B43_NPHY_RXF20_NUM10			B43_PHY_N(0x04E) /* RX filter 20 numerator 10 */
-#define B43_NPHY_RXF20_NUM11			B43_PHY_N(0x04F) /* RX filter 20 numerator 11 */
-#define B43_NPHY_RXF20_NUM12			B43_PHY_N(0x050) /* RX filter 20 numerator 12 */
-#define B43_NPHY_RXF20_DENOM10			B43_PHY_N(0x051) /* RX filter 20 denominator 10 */
-#define B43_NPHY_RXF20_DENOM11			B43_PHY_N(0x052) /* RX filter 20 denominator 11 */
-#define B43_NPHY_RXF40_NUM0			B43_PHY_N(0x053) /* RX filter 40 numerator 0 */
-#define B43_NPHY_RXF40_NUM1			B43_PHY_N(0x054) /* RX filter 40 numerator 1 */
-#define B43_NPHY_RXF40_NUM2			B43_PHY_N(0x055) /* RX filter 40 numerator 2 */
-#define B43_NPHY_RXF40_DENOM0			B43_PHY_N(0x056) /* RX filter 40 denominator 0 */
-#define B43_NPHY_RXF40_DENOM1			B43_PHY_N(0x057) /* RX filter 40 denominator 1 */
-#define B43_NPHY_RXF40_NUM10			B43_PHY_N(0x058) /* RX filter 40 numerator 10 */
-#define B43_NPHY_RXF40_NUM11			B43_PHY_N(0x059) /* RX filter 40 numerator 11 */
-#define B43_NPHY_RXF40_NUM12			B43_PHY_N(0x05A) /* RX filter 40 numerator 12 */
-#define B43_NPHY_RXF40_DENOM10			B43_PHY_N(0x05B) /* RX filter 40 denominator 10 */
-#define B43_NPHY_RXF40_DENOM11			B43_PHY_N(0x05C) /* RX filter 40 denominator 11 */
-#define B43_NPHY_PPROC_RSTLEN			B43_PHY_N(0x060) /* Packet processing reset length */
-#define B43_NPHY_INITCARR_DLEN			B43_PHY_N(0x061) /* Initial carrier detection length */
-#define B43_NPHY_CLIP1CARR_DLEN			B43_PHY_N(0x062) /* Clip1 carrier detection length */
-#define B43_NPHY_CLIP2CARR_DLEN			B43_PHY_N(0x063) /* Clip2 carrier detection length */
-#define B43_NPHY_INITGAIN_SLEN			B43_PHY_N(0x064) /* Initial gain settle length */
-#define B43_NPHY_CLIP1GAIN_SLEN			B43_PHY_N(0x065) /* Clip1 gain settle length */
-#define B43_NPHY_CLIP2GAIN_SLEN			B43_PHY_N(0x066) /* Clip2 gain settle length */
-#define B43_NPHY_PACKGAIN_SLEN			B43_PHY_N(0x067) /* Packet gain settle length */
-#define B43_NPHY_CARRSRC_TLEN			B43_PHY_N(0x068) /* Carrier search timeout length */
-#define B43_NPHY_TISRC_TLEN			B43_PHY_N(0x069) /* Timing search timeout length */
-#define B43_NPHY_ENDROP_TLEN			B43_PHY_N(0x06A) /* Energy drop timeout length */
-#define B43_NPHY_CLIP1_NBDWELL_LEN		B43_PHY_N(0x06B) /* Clip1 NB dwell length */
-#define B43_NPHY_CLIP2_NBDWELL_LEN		B43_PHY_N(0x06C) /* Clip2 NB dwell length */
-#define B43_NPHY_W1CLIP1_DWELL_LEN		B43_PHY_N(0x06D) /* W1 clip1 dwell length */
-#define B43_NPHY_W1CLIP2_DWELL_LEN		B43_PHY_N(0x06E) /* W1 clip2 dwell length */
-#define B43_NPHY_W2CLIP1_DWELL_LEN		B43_PHY_N(0x06F) /* W2 clip1 dwell length */
-#define B43_NPHY_PLOAD_CSENSE_EXTLEN		B43_PHY_N(0x070) /* Payload carrier sense extension length */
-#define B43_NPHY_EDROP_CSENSE_EXTLEN		B43_PHY_N(0x071) /* Energy drop carrier sense extension length */
-#define B43_NPHY_TABLE_ADDR			B43_PHY_N(0x072) /* Table address */
-#define B43_NPHY_TABLE_DATALO			B43_PHY_N(0x073) /* Table data low */
-#define B43_NPHY_TABLE_DATAHI			B43_PHY_N(0x074) /* Table data high */
-#define B43_NPHY_WWISE_LENIDX			B43_PHY_N(0x075) /* WWiSE length index */
-#define B43_NPHY_TGNSYNC_LENIDX			B43_PHY_N(0x076) /* TGNsync length index */
-#define B43_NPHY_TXMACIF_HOLDOFF		B43_PHY_N(0x077) /* TX MAC IF Hold off */
-#define B43_NPHY_RFCTL_CMD			B43_PHY_N(0x078) /* RF control (command) */
-#define  B43_NPHY_RFCTL_CMD_START		0x0001 /* Start sequence */
-#define  B43_NPHY_RFCTL_CMD_RXTX		0x0002 /* RX/TX */
-#define  B43_NPHY_RFCTL_CMD_CORESEL		0x0038 /* Core select */
-#define  B43_NPHY_RFCTL_CMD_CORESEL_SHIFT	3
-#define  B43_NPHY_RFCTL_CMD_PORFORCE		0x0040 /* POR force */
-#define  B43_NPHY_RFCTL_CMD_OEPORFORCE		0x0080 /* OE POR force */
-#define  B43_NPHY_RFCTL_CMD_RXEN		0x0100 /* RX enable */
-#define  B43_NPHY_RFCTL_CMD_TXEN		0x0200 /* TX enable */
-#define  B43_NPHY_RFCTL_CMD_CHIP0PU		0x0400 /* Chip0 PU */
-#define  B43_NPHY_RFCTL_CMD_EN			0x0800 /* Radio enabled */
-#define  B43_NPHY_RFCTL_CMD_SEQENCORE		0xF000 /* Seq en core */
-#define  B43_NPHY_RFCTL_CMD_SEQENCORE_SHIFT	12
-#define B43_NPHY_RFCTL_RSSIO1			B43_PHY_N(0x07A) /* RF control (RSSI others 1) */
-#define  B43_NPHY_RFCTL_RSSIO1_RXPD		0x0001 /* RX PD */
-#define  B43_NPHY_RFCTL_RSSIO1_TXPD		0x0002 /* TX PD */
-#define  B43_NPHY_RFCTL_RSSIO1_PAPD		0x0004 /* PA PD */
-#define  B43_NPHY_RFCTL_RSSIO1_RSSICTL		0x0030 /* RSSI control */
-#define  B43_NPHY_RFCTL_RSSIO1_LPFBW		0x00C0 /* LPF bandwidth */
-#define  B43_NPHY_RFCTL_RSSIO1_HPFBWHI		0x0100 /* HPF bandwidth high */
-#define  B43_NPHY_RFCTL_RSSIO1_HIQDISCO		0x0200 /* HIQ dis core */
-#define B43_NPHY_RFCTL_RXG1			B43_PHY_N(0x07B) /* RF control (RX gain 1) */
-#define B43_NPHY_RFCTL_TXG1			B43_PHY_N(0x07C) /* RF control (TX gain 1) */
-#define B43_NPHY_RFCTL_RSSIO2			B43_PHY_N(0x07D) /* RF control (RSSI others 2) */
-#define  B43_NPHY_RFCTL_RSSIO2_RXPD		0x0001 /* RX PD */
-#define  B43_NPHY_RFCTL_RSSIO2_TXPD		0x0002 /* TX PD */
-#define  B43_NPHY_RFCTL_RSSIO2_PAPD		0x0004 /* PA PD */
-#define  B43_NPHY_RFCTL_RSSIO2_RSSICTL		0x0030 /* RSSI control */
-#define  B43_NPHY_RFCTL_RSSIO2_LPFBW		0x00C0 /* LPF bandwidth */
-#define  B43_NPHY_RFCTL_RSSIO2_HPFBWHI		0x0100 /* HPF bandwidth high */
-#define  B43_NPHY_RFCTL_RSSIO2_HIQDISCO		0x0200 /* HIQ dis core */
-#define B43_NPHY_RFCTL_RXG2			B43_PHY_N(0x07E) /* RF control (RX gain 2) */
-#define B43_NPHY_RFCTL_TXG2			B43_PHY_N(0x07F) /* RF control (TX gain 2) */
-#define B43_NPHY_RFCTL_RSSIO3			B43_PHY_N(0x080) /* RF control (RSSI others 3) */
-#define  B43_NPHY_RFCTL_RSSIO3_RXPD		0x0001 /* RX PD */
-#define  B43_NPHY_RFCTL_RSSIO3_TXPD		0x0002 /* TX PD */
-#define  B43_NPHY_RFCTL_RSSIO3_PAPD		0x0004 /* PA PD */
-#define  B43_NPHY_RFCTL_RSSIO3_RSSICTL		0x0030 /* RSSI control */
-#define  B43_NPHY_RFCTL_RSSIO3_LPFBW		0x00C0 /* LPF bandwidth */
-#define  B43_NPHY_RFCTL_RSSIO3_HPFBWHI		0x0100 /* HPF bandwidth high */
-#define  B43_NPHY_RFCTL_RSSIO3_HIQDISCO		0x0200 /* HIQ dis core */
-#define B43_NPHY_RFCTL_RXG3			B43_PHY_N(0x081) /* RF control (RX gain 3) */
-#define B43_NPHY_RFCTL_TXG3			B43_PHY_N(0x082) /* RF control (TX gain 3) */
-#define B43_NPHY_RFCTL_RSSIO4			B43_PHY_N(0x083) /* RF control (RSSI others 4) */
-#define  B43_NPHY_RFCTL_RSSIO4_RXPD		0x0001 /* RX PD */
-#define  B43_NPHY_RFCTL_RSSIO4_TXPD		0x0002 /* TX PD */
-#define  B43_NPHY_RFCTL_RSSIO4_PAPD		0x0004 /* PA PD */
-#define  B43_NPHY_RFCTL_RSSIO4_RSSICTL		0x0030 /* RSSI control */
-#define  B43_NPHY_RFCTL_RSSIO4_LPFBW		0x00C0 /* LPF bandwidth */
-#define  B43_NPHY_RFCTL_RSSIO4_HPFBWHI		0x0100 /* HPF bandwidth high */
-#define  B43_NPHY_RFCTL_RSSIO4_HIQDISCO		0x0200 /* HIQ dis core */
-#define B43_NPHY_RFCTL_RXG4			B43_PHY_N(0x084) /* RF control (RX gain 4) */
-#define B43_NPHY_RFCTL_TXG4			B43_PHY_N(0x085) /* RF control (TX gain 4) */
-#define B43_NPHY_C1_TXIQ_COMP_OFF		B43_PHY_N(0x087) /* Core 1 TX I/Q comp offset */
-#define B43_NPHY_C2_TXIQ_COMP_OFF		B43_PHY_N(0x088) /* Core 2 TX I/Q comp offset */
-#define B43_NPHY_C1_TXCTL			B43_PHY_N(0x08B) /* Core 1 TX control */
-#define B43_NPHY_C2_TXCTL			B43_PHY_N(0x08C) /* Core 2 TX control */
-#define B43_NPHY_SCRAM_SIGCTL			B43_PHY_N(0x090) /* Scram signal control */
-#define  B43_NPHY_SCRAM_SIGCTL_INITST		0x007F /* Initial state value */
-#define  B43_NPHY_SCRAM_SIGCTL_INITST_SHIFT	0
-#define  B43_NPHY_SCRAM_SIGCTL_SCM		0x0080 /* Scram control mode */
-#define  B43_NPHY_SCRAM_SIGCTL_SICE		0x0100 /* Scram index control enable */
-#define  B43_NPHY_SCRAM_SIGCTL_START		0xFE00 /* Scram start bit */
-#define  B43_NPHY_SCRAM_SIGCTL_START_SHIFT	9
-#define B43_NPHY_RFCTL_INTC1			B43_PHY_N(0x091) /* RF control (intc 1) */
-#define B43_NPHY_RFCTL_INTC2			B43_PHY_N(0x092) /* RF control (intc 2) */
-#define B43_NPHY_RFCTL_INTC3			B43_PHY_N(0x093) /* RF control (intc 3) */
-#define B43_NPHY_RFCTL_INTC4			B43_PHY_N(0x094) /* RF control (intc 4) */
-#define B43_NPHY_NRDTO_WWISE			B43_PHY_N(0x095) /* # datatones WWiSE */
-#define B43_NPHY_NRDTO_TGNSYNC			B43_PHY_N(0x096) /* # datatones TGNsync */
-#define B43_NPHY_SIGFMOD_WWISE			B43_PHY_N(0x097) /* Signal field mod WWiSE */
-#define B43_NPHY_LEG_SIGFMOD_11N		B43_PHY_N(0x098) /* Legacy signal field mod 11n */
-#define B43_NPHY_HT_SIGFMOD_11N			B43_PHY_N(0x099) /* HT signal field mod 11n */
-#define B43_NPHY_C1_RXIQ_COMPA0			B43_PHY_N(0x09A) /* Core 1 RX I/Q comp A0 */
-#define B43_NPHY_C1_RXIQ_COMPB0			B43_PHY_N(0x09B) /* Core 1 RX I/Q comp B0 */
-#define B43_NPHY_C2_RXIQ_COMPA1			B43_PHY_N(0x09C) /* Core 2 RX I/Q comp A1 */
-#define B43_NPHY_C2_RXIQ_COMPB1			B43_PHY_N(0x09D) /* Core 2 RX I/Q comp B1 */
-#define B43_NPHY_RXCTL				B43_PHY_N(0x0A0) /* RX control */
-#define  B43_NPHY_RXCTL_BSELU20			0x0010 /* Band select upper 20 */
-#define  B43_NPHY_RXCTL_RIFSEN			0x0080 /* RIFS enable */
-#define B43_NPHY_RFSEQMODE			B43_PHY_N(0x0A1) /* RF seq mode */
-#define  B43_NPHY_RFSEQMODE_CAOVER		0x0001 /* Core active override */
-#define  B43_NPHY_RFSEQMODE_TROVER		0x0002 /* Trigger override */
-#define B43_NPHY_RFSEQCA			B43_PHY_N(0x0A2) /* RF seq core active */
-#define  B43_NPHY_RFSEQCA_TXEN			0x000F /* TX enable */
-#define  B43_NPHY_RFSEQCA_TXEN_SHIFT		0
-#define  B43_NPHY_RFSEQCA_RXEN			0x00F0 /* RX enable */
-#define  B43_NPHY_RFSEQCA_RXEN_SHIFT		4
-#define  B43_NPHY_RFSEQCA_TXDIS			0x0F00 /* TX disable */
-#define  B43_NPHY_RFSEQCA_TXDIS_SHIFT		8
-#define  B43_NPHY_RFSEQCA_RXDIS			0xF000 /* RX disable */
-#define  B43_NPHY_RFSEQCA_RXDIS_SHIFT		12
-#define B43_NPHY_RFSEQTR			B43_PHY_N(0x0A3) /* RF seq trigger */
-#define  B43_NPHY_RFSEQTR_RX2TX			0x0001 /* RX2TX */
-#define  B43_NPHY_RFSEQTR_TX2RX			0x0002 /* TX2RX */
-#define  B43_NPHY_RFSEQTR_UPGH			0x0004 /* Update gain H */
-#define  B43_NPHY_RFSEQTR_UPGL			0x0008 /* Update gain L */
-#define  B43_NPHY_RFSEQTR_UPGU			0x0010 /* Update gain U */
-#define  B43_NPHY_RFSEQTR_RST2RX		0x0020 /* Reset to RX */
-#define B43_NPHY_RFSEQST			B43_PHY_N(0x0A4) /* RF seq status. Values same as trigger. */
-#define B43_NPHY_AFECTL_OVER			B43_PHY_N(0x0A5) /* AFE control override */
-#define B43_NPHY_AFECTL_C1			B43_PHY_N(0x0A6) /* AFE control core 1 */
-#define B43_NPHY_AFECTL_C2			B43_PHY_N(0x0A7) /* AFE control core 2 */
-#define B43_NPHY_AFECTL_C3			B43_PHY_N(0x0A8) /* AFE control core 3 */
-#define B43_NPHY_AFECTL_C4			B43_PHY_N(0x0A9) /* AFE control core 4 */
-#define B43_NPHY_AFECTL_DACGAIN1		B43_PHY_N(0x0AA) /* AFE control DAC gain 1 */
-#define B43_NPHY_AFECTL_DACGAIN2		B43_PHY_N(0x0AB) /* AFE control DAC gain 2 */
-#define B43_NPHY_AFECTL_DACGAIN3		B43_PHY_N(0x0AC) /* AFE control DAC gain 3 */
-#define B43_NPHY_AFECTL_DACGAIN4		B43_PHY_N(0x0AD) /* AFE control DAC gain 4 */
-#define B43_NPHY_STR_ADDR1			B43_PHY_N(0x0AE) /* STR address 1 */
-#define B43_NPHY_STR_ADDR2			B43_PHY_N(0x0AF) /* STR address 2 */
-#define B43_NPHY_CLASSCTL			B43_PHY_N(0x0B0) /* Classifier control */
-#define  B43_NPHY_CLASSCTL_CCKEN		0x0001 /* CCK enable */
-#define  B43_NPHY_CLASSCTL_OFDMEN		0x0002 /* OFDM enable */
-#define  B43_NPHY_CLASSCTL_WAITEDEN		0x0004 /* Waited enable */
-#define B43_NPHY_IQFLIP				B43_PHY_N(0x0B1) /* I/Q flip */
-#define  B43_NPHY_IQFLIP_ADC1			0x0001 /* ADC1 */
-#define  B43_NPHY_IQFLIP_ADC2			0x0010 /* ADC2 */
-#define B43_NPHY_SISO_SNR_THRES			B43_PHY_N(0x0B2) /* SISO SNR threshold */
-#define B43_NPHY_SIGMA_N_MULT			B43_PHY_N(0x0B3) /* Sigma N multiplier */
-#define B43_NPHY_TXMACDELAY			B43_PHY_N(0x0B4) /* TX MAC delay */
-#define B43_NPHY_TXFRAMEDELAY			B43_PHY_N(0x0B5) /* TX frame delay */
-#define B43_NPHY_MLPARM				B43_PHY_N(0x0B6) /* ML parameters */
-#define B43_NPHY_MLCTL				B43_PHY_N(0x0B7) /* ML control */
-#define B43_NPHY_WWISE_20NCYCDAT		B43_PHY_N(0x0B8) /* WWiSE 20 N cyc data */
-#define B43_NPHY_WWISE_40NCYCDAT		B43_PHY_N(0x0B9) /* WWiSE 40 N cyc data */
-#define B43_NPHY_TGNSYNC_20NCYCDAT		B43_PHY_N(0x0BA) /* TGNsync 20 N cyc data */
-#define B43_NPHY_TGNSYNC_40NCYCDAT		B43_PHY_N(0x0BB) /* TGNsync 40 N cyc data */
-#define B43_NPHY_INITSWIZP			B43_PHY_N(0x0BC) /* Initial swizzle pattern */
-#define B43_NPHY_TXTAILCNT			B43_PHY_N(0x0BD) /* TX tail count value */
-#define B43_NPHY_BPHY_CTL1			B43_PHY_N(0x0BE) /* B PHY control 1 */
-#define B43_NPHY_BPHY_CTL2			B43_PHY_N(0x0BF) /* B PHY control 2 */
-#define  B43_NPHY_BPHY_CTL2_LUT			0x001F /* LUT index */
-#define  B43_NPHY_BPHY_CTL2_LUT_SHIFT		0
-#define  B43_NPHY_BPHY_CTL2_MACDEL		0x7FE0 /* MAC delay */
-#define  B43_NPHY_BPHY_CTL2_MACDEL_SHIFT	5
-#define B43_NPHY_IQLOCAL_CMD			B43_PHY_N(0x0C0) /* I/Q LO cal command */
-#define  B43_NPHY_IQLOCAL_CMD_EN		0x8000
-#define B43_NPHY_IQLOCAL_CMDNNUM		B43_PHY_N(0x0C1) /* I/Q LO cal command N num */
-#define B43_NPHY_IQLOCAL_CMDGCTL		B43_PHY_N(0x0C2) /* I/Q LO cal command G control */
-#define B43_NPHY_SAMP_CMD			B43_PHY_N(0x0C3) /* Sample command */
-#define  B43_NPHY_SAMP_CMD_STOP			0x0002 /* Stop */
-#define B43_NPHY_SAMP_LOOPCNT			B43_PHY_N(0x0C4) /* Sample loop count */
-#define B43_NPHY_SAMP_WAITCNT			B43_PHY_N(0x0C5) /* Sample wait count */
-#define B43_NPHY_SAMP_DEPCNT			B43_PHY_N(0x0C6) /* Sample depth count */
-#define B43_NPHY_SAMP_STAT			B43_PHY_N(0x0C7) /* Sample status */
-#define B43_NPHY_GPIO_LOOEN			B43_PHY_N(0x0C8) /* GPIO low out enable */
-#define B43_NPHY_GPIO_HIOEN			B43_PHY_N(0x0C9) /* GPIO high out enable */
-#define B43_NPHY_GPIO_SEL			B43_PHY_N(0x0CA) /* GPIO select */
-#define B43_NPHY_GPIO_CLKCTL			B43_PHY_N(0x0CB) /* GPIO clock control */
-#define B43_NPHY_TXF_20CO_AS0			B43_PHY_N(0x0CC) /* TX filter 20 coeff A stage 0 */
-#define B43_NPHY_TXF_20CO_AS1			B43_PHY_N(0x0CD) /* TX filter 20 coeff A stage 1 */
-#define B43_NPHY_TXF_20CO_AS2			B43_PHY_N(0x0CE) /* TX filter 20 coeff A stage 2 */
-#define B43_NPHY_TXF_20CO_B32S0			B43_PHY_N(0x0CF) /* TX filter 20 coeff B32 stage 0 */
-#define B43_NPHY_TXF_20CO_B1S0			B43_PHY_N(0x0D0) /* TX filter 20 coeff B1 stage 0 */
-#define B43_NPHY_TXF_20CO_B32S1			B43_PHY_N(0x0D1) /* TX filter 20 coeff B32 stage 1 */
-#define B43_NPHY_TXF_20CO_B1S1			B43_PHY_N(0x0D2) /* TX filter 20 coeff B1 stage 1 */
-#define B43_NPHY_TXF_20CO_B32S2			B43_PHY_N(0x0D3) /* TX filter 20 coeff B32 stage 2 */
-#define B43_NPHY_TXF_20CO_B1S2			B43_PHY_N(0x0D4) /* TX filter 20 coeff B1 stage 2 */
-#define B43_NPHY_SIGFLDTOL			B43_PHY_N(0x0D5) /* Signal fld tolerance */
-#define B43_NPHY_TXSERFLD			B43_PHY_N(0x0D6) /* TX service field */
-#define B43_NPHY_AFESEQ_RX2TX_PUD		B43_PHY_N(0x0D7) /* AFE seq RX2TX power up/down delay */
-#define B43_NPHY_AFESEQ_TX2RX_PUD		B43_PHY_N(0x0D8) /* AFE seq TX2RX power up/down delay */
-#define B43_NPHY_TGNSYNC_SCRAMI0		B43_PHY_N(0x0D9) /* TGNsync scram init 0 */
-#define B43_NPHY_TGNSYNC_SCRAMI1		B43_PHY_N(0x0DA) /* TGNsync scram init 1 */
-#define B43_NPHY_INITSWIZPATTLEG		B43_PHY_N(0x0DB) /* Initial swizzle pattern leg */
-#define B43_NPHY_BPHY_CTL3			B43_PHY_N(0x0DC) /* B PHY control 3 */
-#define  B43_NPHY_BPHY_CTL3_SCALE		0x00FF /* Scale */
-#define  B43_NPHY_BPHY_CTL3_SCALE_SHIFT		0
-#define  B43_NPHY_BPHY_CTL3_FSC			0xFF00 /* Frame start count value */
-#define  B43_NPHY_BPHY_CTL3_FSC_SHIFT		8
-#define B43_NPHY_BPHY_CTL4			B43_PHY_N(0x0DD) /* B PHY control 4 */
-#define B43_NPHY_C1_TXBBMULT			B43_PHY_N(0x0DE) /* Core 1 TX BB multiplier */
-#define B43_NPHY_C2_TXBBMULT			B43_PHY_N(0x0DF) /* Core 2 TX BB multiplier */
-#define B43_NPHY_TXF_40CO_AS0			B43_PHY_N(0x0E1) /* TX filter 40 coeff A stage 0 */
-#define B43_NPHY_TXF_40CO_AS1			B43_PHY_N(0x0E2) /* TX filter 40 coeff A stage 1 */
-#define B43_NPHY_TXF_40CO_AS2			B43_PHY_N(0x0E3) /* TX filter 40 coeff A stage 2 */
-#define B43_NPHY_TXF_40CO_B32S0			B43_PHY_N(0x0E4) /* TX filter 40 coeff B32 stage 0 */
-#define B43_NPHY_TXF_40CO_B1S0			B43_PHY_N(0x0E5) /* TX filter 40 coeff B1 stage 0 */
-#define B43_NPHY_TXF_40CO_B32S1			B43_PHY_N(0x0E6) /* TX filter 40 coeff B32 stage 1 */
-#define B43_NPHY_TXF_40CO_B1S1			B43_PHY_N(0x0E7) /* TX filter 40 coeff B1 stage 1 */
-#define B43_NPHY_TXF_40CO_B32S2			B43_PHY_N(0x0E8) /* TX filter 40 coeff B32 stage 2 */
-#define B43_NPHY_TXF_40CO_B1S2			B43_PHY_N(0x0E9) /* TX filter 40 coeff B1 stage 2 */
-#define B43_NPHY_BIST_STAT2			B43_PHY_N(0x0EA) /* BIST status 2 */
-#define B43_NPHY_BIST_STAT3			B43_PHY_N(0x0EB) /* BIST status 3 */
-#define B43_NPHY_RFCTL_OVER			B43_PHY_N(0x0EC) /* RF control override */
-#define B43_NPHY_MIMOCFG			B43_PHY_N(0x0ED) /* MIMO config */
-#define  B43_NPHY_MIMOCFG_GFMIX			0x0004 /* Greenfield or mixed mode */
-#define  B43_NPHY_MIMOCFG_AUTO			0x0100 /* Greenfield/mixed mode auto */
-#define B43_NPHY_RADAR_BLNKCTL			B43_PHY_N(0x0EE) /* Radar blank control */
-#define B43_NPHY_A0RADAR_FIFOCTL		B43_PHY_N(0x0EF) /* Antenna 0 radar FIFO control */
-#define B43_NPHY_A1RADAR_FIFOCTL		B43_PHY_N(0x0F0) /* Antenna 1 radar FIFO control */
-#define B43_NPHY_A0RADAR_FIFODAT		B43_PHY_N(0x0F1) /* Antenna 0 radar FIFO data */
-#define B43_NPHY_A1RADAR_FIFODAT		B43_PHY_N(0x0F2) /* Antenna 1 radar FIFO data */
-#define B43_NPHY_RADAR_THRES0			B43_PHY_N(0x0F3) /* Radar threshold 0 */
-#define B43_NPHY_RADAR_THRES1			B43_PHY_N(0x0F4) /* Radar threshold 1 */
-#define B43_NPHY_RADAR_THRES0R			B43_PHY_N(0x0F5) /* Radar threshold 0R */
-#define B43_NPHY_RADAR_THRES1R			B43_PHY_N(0x0F6) /* Radar threshold 1R */
-#define B43_NPHY_CSEN_20IN40_DLEN		B43_PHY_N(0x0F7) /* Carrier sense 20 in 40 dwell length */
-#define B43_NPHY_RFCTL_LUT_TRSW_LO1		B43_PHY_N(0x0F8) /* RF control LUT TRSW lower 1 */
-#define B43_NPHY_RFCTL_LUT_TRSW_UP1		B43_PHY_N(0x0F9) /* RF control LUT TRSW upper 1 */
-#define B43_NPHY_RFCTL_LUT_TRSW_LO2		B43_PHY_N(0x0FA) /* RF control LUT TRSW lower 2 */
-#define B43_NPHY_RFCTL_LUT_TRSW_UP2		B43_PHY_N(0x0FB) /* RF control LUT TRSW upper 2 */
-#define B43_NPHY_RFCTL_LUT_TRSW_LO3		B43_PHY_N(0x0FC) /* RF control LUT TRSW lower 3 */
-#define B43_NPHY_RFCTL_LUT_TRSW_UP3		B43_PHY_N(0x0FD) /* RF control LUT TRSW upper 3 */
-#define B43_NPHY_RFCTL_LUT_TRSW_LO4		B43_PHY_N(0x0FE) /* RF control LUT TRSW lower 4 */
-#define B43_NPHY_RFCTL_LUT_TRSW_UP4		B43_PHY_N(0x0FF) /* RF control LUT TRSW upper 4 */
-#define B43_NPHY_RFCTL_LUT_LNAPA1		B43_PHY_N(0x100) /* RF control LUT LNA PA 1 */
-#define B43_NPHY_RFCTL_LUT_LNAPA2		B43_PHY_N(0x101) /* RF control LUT LNA PA 2 */
-#define B43_NPHY_RFCTL_LUT_LNAPA3		B43_PHY_N(0x102) /* RF control LUT LNA PA 3 */
-#define B43_NPHY_RFCTL_LUT_LNAPA4		B43_PHY_N(0x103) /* RF control LUT LNA PA 4 */
-#define B43_NPHY_TGNSYNC_CRCM0			B43_PHY_N(0x104) /* TGNsync CRC mask 0 */
-#define B43_NPHY_TGNSYNC_CRCM1			B43_PHY_N(0x105) /* TGNsync CRC mask 1 */
-#define B43_NPHY_TGNSYNC_CRCM2			B43_PHY_N(0x106) /* TGNsync CRC mask 2 */
-#define B43_NPHY_TGNSYNC_CRCM3			B43_PHY_N(0x107) /* TGNsync CRC mask 3 */
-#define B43_NPHY_TGNSYNC_CRCM4			B43_PHY_N(0x108) /* TGNsync CRC mask 4 */
-#define B43_NPHY_CRCPOLY			B43_PHY_N(0x109) /* CRC polynomial */
-#define B43_NPHY_SIGCNT				B43_PHY_N(0x10A) /* # sig count */
-#define B43_NPHY_SIGSTARTBIT_CTL		B43_PHY_N(0x10B) /* Sig start bit control */
-#define B43_NPHY_CRCPOLY_ORDER			B43_PHY_N(0x10C) /* CRC polynomial order */
-#define B43_NPHY_RFCTL_CST0			B43_PHY_N(0x10D) /* RF control core swap table 0 */
-#define B43_NPHY_RFCTL_CST1			B43_PHY_N(0x10E) /* RF control core swap table 1 */
-#define B43_NPHY_RFCTL_CST2O			B43_PHY_N(0x10F) /* RF control core swap table 2 + others */
-#define B43_NPHY_BPHY_CTL5			B43_PHY_N(0x111) /* B PHY control 5 */
-#define B43_NPHY_RFSEQ_LPFBW			B43_PHY_N(0x112) /* RF seq LPF bandwidth */
-#define B43_NPHY_TSSIBIAS1			B43_PHY_N(0x114) /* TSSI bias val 1 */
-#define B43_NPHY_TSSIBIAS2			B43_PHY_N(0x115) /* TSSI bias val 2 */
-#define  B43_NPHY_TSSIBIAS_BIAS			0x00FF /* Bias */
-#define  B43_NPHY_TSSIBIAS_BIAS_SHIFT		0
-#define  B43_NPHY_TSSIBIAS_VAL			0xFF00 /* Value */
-#define  B43_NPHY_TSSIBIAS_VAL_SHIFT		8
-#define B43_NPHY_ESTPWR1			B43_PHY_N(0x118) /* Estimated power 1 */
-#define B43_NPHY_ESTPWR2			B43_PHY_N(0x119) /* Estimated power 2 */
-#define  B43_NPHY_ESTPWR_PWR			0x00FF /* Estimated power */
-#define  B43_NPHY_ESTPWR_PWR_SHIFT		0
-#define  B43_NPHY_ESTPWR_VALID			0x0100 /* Estimated power valid */
-#define B43_NPHY_TSSI_MAXTXFDT			B43_PHY_N(0x11C) /* TSSI max TX frame delay time */
-#define  B43_NPHY_TSSI_MAXTXFDT_VAL		0x00FF /* max TX frame delay time */
-#define  B43_NPHY_TSSI_MAXTXFDT_VAL_SHIFT	0
-#define B43_NPHY_TSSI_MAXTDT			B43_PHY_N(0x11D) /* TSSI max TSSI delay time */
-#define  B43_NPHY_TSSI_MAXTDT_VAL		0x00FF /* max TSSI delay time */
-#define  B43_NPHY_TSSI_MAXTDT_VAL_SHIFT		0
-#define B43_NPHY_ITSSI1				B43_PHY_N(0x11E) /* TSSI idle 1 */
-#define B43_NPHY_ITSSI2				B43_PHY_N(0x11F) /* TSSI idle 2 */
-#define  B43_NPHY_ITSSI_VAL			0x00FF /* Idle TSSI */
-#define  B43_NPHY_ITSSI_VAL_SHIFT		0
-#define B43_NPHY_TSSIMODE			B43_PHY_N(0x122) /* TSSI mode */
-#define  B43_NPHY_TSSIMODE_EN			0x0001 /* TSSI enable */
-#define  B43_NPHY_TSSIMODE_PDEN			0x0002 /* Power det enable */
-#define B43_NPHY_RXMACIFM			B43_PHY_N(0x123) /* RX Macif mode */
-#define B43_NPHY_CRSIT_COCNT_LO			B43_PHY_N(0x124) /* CRS idle time CRS-on count (low) */
-#define B43_NPHY_CRSIT_COCNT_HI			B43_PHY_N(0x125) /* CRS idle time CRS-on count (high) */
-#define B43_NPHY_CRSIT_MTCNT_LO			B43_PHY_N(0x126) /* CRS idle time measure time count (low) */
-#define B43_NPHY_CRSIT_MTCNT_HI			B43_PHY_N(0x127) /* CRS idle time measure time count (high) */
-#define B43_NPHY_SAMTWC				B43_PHY_N(0x128) /* Sample tail wait count */
-#define B43_NPHY_IQEST_CMD			B43_PHY_N(0x129) /* I/Q estimate command */
-#define  B43_NPHY_IQEST_CMD_START		0x0001 /* Start */
-#define  B43_NPHY_IQEST_CMD_MODE		0x0002 /* Mode */
-#define B43_NPHY_IQEST_WT			B43_PHY_N(0x12A) /* I/Q estimate wait time */
-#define  B43_NPHY_IQEST_WT_VAL			0x00FF /* Wait time */
-#define  B43_NPHY_IQEST_WT_VAL_SHIFT		0
-#define B43_NPHY_IQEST_SAMCNT			B43_PHY_N(0x12B) /* I/Q estimate sample count */
-#define B43_NPHY_IQEST_IQACC_LO0		B43_PHY_N(0x12C) /* I/Q estimate I/Q acc lo 0 */
-#define B43_NPHY_IQEST_IQACC_HI0		B43_PHY_N(0x12D) /* I/Q estimate I/Q acc hi 0 */
-#define B43_NPHY_IQEST_IPACC_LO0		B43_PHY_N(0x12E) /* I/Q estimate I power acc lo 0 */
-#define B43_NPHY_IQEST_IPACC_HI0		B43_PHY_N(0x12F) /* I/Q estimate I power acc hi 0 */
-#define B43_NPHY_IQEST_QPACC_LO0		B43_PHY_N(0x130) /* I/Q estimate Q power acc lo 0 */
-#define B43_NPHY_IQEST_QPACC_HI0		B43_PHY_N(0x131) /* I/Q estimate Q power acc hi 0 */
-#define B43_NPHY_IQEST_IQACC_LO1		B43_PHY_N(0x134) /* I/Q estimate I/Q acc lo 1 */
-#define B43_NPHY_IQEST_IQACC_HI1		B43_PHY_N(0x135) /* I/Q estimate I/Q acc hi 1 */
-#define B43_NPHY_IQEST_IPACC_LO1		B43_PHY_N(0x136) /* I/Q estimate I power acc lo 1 */
-#define B43_NPHY_IQEST_IPACC_HI1		B43_PHY_N(0x137) /* I/Q estimate I power acc hi 1 */
-#define B43_NPHY_IQEST_QPACC_LO1		B43_PHY_N(0x138) /* I/Q estimate Q power acc lo 1 */
-#define B43_NPHY_IQEST_QPACC_HI1		B43_PHY_N(0x139) /* I/Q estimate Q power acc hi 1 */
-#define B43_NPHY_MIMO_CRSTXEXT			B43_PHY_N(0x13A) /* MIMO PHY CRS TX extension */
-#define B43_NPHY_PWRDET1			B43_PHY_N(0x13B) /* Power det 1 */
-#define B43_NPHY_PWRDET2			B43_PHY_N(0x13C) /* Power det 2 */
-#define B43_NPHY_MAXRSSI_DTIME			B43_PHY_N(0x13F) /* RSSI max RSSI delay time */
-#define B43_NPHY_PIL_DW0			B43_PHY_N(0x141) /* Pilot data weight 0 */
-#define B43_NPHY_PIL_DW1			B43_PHY_N(0x142) /* Pilot data weight 1 */
-#define B43_NPHY_PIL_DW2			B43_PHY_N(0x143) /* Pilot data weight 2 */
-#define  B43_NPHY_PIL_DW_BPSK			0x000F /* BPSK */
-#define  B43_NPHY_PIL_DW_BPSK_SHIFT		0
-#define  B43_NPHY_PIL_DW_QPSK			0x00F0 /* QPSK */
-#define  B43_NPHY_PIL_DW_QPSK_SHIFT		4
-#define  B43_NPHY_PIL_DW_16QAM			0x0F00 /* 16-QAM */
-#define  B43_NPHY_PIL_DW_16QAM_SHIFT		8
-#define  B43_NPHY_PIL_DW_64QAM			0xF000 /* 64-QAM */
-#define  B43_NPHY_PIL_DW_64QAM_SHIFT		12
-#define B43_NPHY_FMDEM_CFG			B43_PHY_N(0x144) /* FM demodulation config */
-#define B43_NPHY_PHASETR_A0			B43_PHY_N(0x145) /* Phase track alpha 0 */
-#define B43_NPHY_PHASETR_A1			B43_PHY_N(0x146) /* Phase track alpha 1 */
-#define B43_NPHY_PHASETR_A2			B43_PHY_N(0x147) /* Phase track alpha 2 */
-#define B43_NPHY_PHASETR_B0			B43_PHY_N(0x148) /* Phase track beta 0 */
-#define B43_NPHY_PHASETR_B1			B43_PHY_N(0x149) /* Phase track beta 1 */
-#define B43_NPHY_PHASETR_B2			B43_PHY_N(0x14A) /* Phase track beta 2 */
-#define B43_NPHY_PHASETR_CHG0			B43_PHY_N(0x14B) /* Phase track change 0 */
-#define B43_NPHY_PHASETR_CHG1			B43_PHY_N(0x14C) /* Phase track change 1 */
-#define B43_NPHY_PHASETW_OFF			B43_PHY_N(0x14D) /* Phase track offset */
-#define B43_NPHY_RFCTL_DBG			B43_PHY_N(0x14E) /* RF control debug */
-#define B43_NPHY_CCK_SHIFTB_REF			B43_PHY_N(0x150) /* CCK shiftbits reference var */
-#define B43_NPHY_OVER_DGAIN0			B43_PHY_N(0x152) /* Override digital gain 0 */
-#define B43_NPHY_OVER_DGAIN1			B43_PHY_N(0x153) /* Override digital gain 1 */
-#define  B43_NPHY_OVER_DGAIN_FDGV		0x0007 /* Force digital gain value */
-#define  B43_NPHY_OVER_DGAIN_FDGV_SHIFT		0
-#define  B43_NPHY_OVER_DGAIN_FDGEN		0x0008 /* Force digital gain enable */
-#define  B43_NPHY_OVER_DGAIN_CCKDGECV		0xFF00 /* CCK digital gain enable count value */
-#define  B43_NPHY_OVER_DGAIN_CCKDGECV_SHIFT	8
-#define B43_NPHY_BIST_STAT4			B43_PHY_N(0x156) /* BIST status 4 */
-#define B43_NPHY_RADAR_MAL			B43_PHY_N(0x157) /* Radar MA length */
-#define B43_NPHY_RADAR_SRCCTL			B43_PHY_N(0x158) /* Radar search control */
-#define B43_NPHY_VLD_DTSIG			B43_PHY_N(0x159) /* VLD data tones sig */
-#define B43_NPHY_VLD_DTDAT			B43_PHY_N(0x15A) /* VLD data tones data */
-#define B43_NPHY_C1_BPHY_RXIQCA0		B43_PHY_N(0x15B) /* Core 1 B PHY RX I/Q comp A0 */
-#define B43_NPHY_C1_BPHY_RXIQCB0		B43_PHY_N(0x15C) /* Core 1 B PHY RX I/Q comp B0 */
-#define B43_NPHY_C2_BPHY_RXIQCA1		B43_PHY_N(0x15D) /* Core 2 B PHY RX I/Q comp A1 */
-#define B43_NPHY_C2_BPHY_RXIQCB1		B43_PHY_N(0x15E) /* Core 2 B PHY RX I/Q comp B1 */
-#define B43_NPHY_FREQGAIN0			B43_PHY_N(0x160) /* Frequency gain 0 */
-#define B43_NPHY_FREQGAIN1			B43_PHY_N(0x161) /* Frequency gain 1 */
-#define B43_NPHY_FREQGAIN2			B43_PHY_N(0x162) /* Frequency gain 2 */
-#define B43_NPHY_FREQGAIN3			B43_PHY_N(0x163) /* Frequency gain 3 */
-#define B43_NPHY_FREQGAIN4			B43_PHY_N(0x164) /* Frequency gain 4 */
-#define B43_NPHY_FREQGAIN5			B43_PHY_N(0x165) /* Frequency gain 5 */
-#define B43_NPHY_FREQGAIN6			B43_PHY_N(0x166) /* Frequency gain 6 */
-#define B43_NPHY_FREQGAIN7			B43_PHY_N(0x167) /* Frequency gain 7 */
-#define B43_NPHY_FREQGAIN_BYPASS		B43_PHY_N(0x168) /* Frequency gain bypass */
-#define B43_NPHY_TRLOSS				B43_PHY_N(0x169) /* TR loss value */
-#define B43_NPHY_C1_ADCCLIP			B43_PHY_N(0x16A) /* Core 1 ADC clip */
-#define B43_NPHY_C2_ADCCLIP			B43_PHY_N(0x16B) /* Core 2 ADC clip */
-#define B43_NPHY_LTRN_OFFGAIN			B43_PHY_N(0x16F) /* LTRN offset gain */
-#define B43_NPHY_LTRN_OFF			B43_PHY_N(0x170) /* LTRN offset */
-#define B43_NPHY_NRDATAT_WWISE20SIG		B43_PHY_N(0x171) /* # data tones WWiSE 20 sig */
-#define B43_NPHY_NRDATAT_WWISE40SIG		B43_PHY_N(0x172) /* # data tones WWiSE 40 sig */
-#define B43_NPHY_NRDATAT_TGNSYNC20SIG		B43_PHY_N(0x173) /* # data tones TGNsync 20 sig */
-#define B43_NPHY_NRDATAT_TGNSYNC40SIG		B43_PHY_N(0x174) /* # data tones TGNsync 40 sig */
-#define B43_NPHY_WWISE_CRCM0			B43_PHY_N(0x175) /* WWiSE CRC mask 0 */
-#define B43_NPHY_WWISE_CRCM1			B43_PHY_N(0x176) /* WWiSE CRC mask 1 */
-#define B43_NPHY_WWISE_CRCM2			B43_PHY_N(0x177) /* WWiSE CRC mask 2 */
-#define B43_NPHY_WWISE_CRCM3			B43_PHY_N(0x178) /* WWiSE CRC mask 3 */
-#define B43_NPHY_WWISE_CRCM4			B43_PHY_N(0x179) /* WWiSE CRC mask 4 */
-#define B43_NPHY_CHANEST_CDDSH			B43_PHY_N(0x17A) /* Channel estimate CDD shift */
-#define B43_NPHY_HTAGC_WCNT			B43_PHY_N(0x17B) /* HT ADC wait counters */
-#define B43_NPHY_SQPARM				B43_PHY_N(0x17C) /* SQ params */
-#define B43_NPHY_MCSDUP6M			B43_PHY_N(0x17D) /* MCS dup 6M */
-#define B43_NPHY_NDATAT_DUP40			B43_PHY_N(0x17E) /* # data tones dup 40 */
-#define B43_NPHY_DUP40_TGNSYNC_CYCD		B43_PHY_N(0x17F) /* Dup40 TGNsync cycle data */
-#define B43_NPHY_DUP40_GFBL			B43_PHY_N(0x180) /* Dup40 GF format BL address */
-#define B43_NPHY_DUP40_BL			B43_PHY_N(0x181) /* Dup40 format BL address */
-#define B43_NPHY_LEGDUP_FTA			B43_PHY_N(0x182) /* Legacy dup frm table address */
-#define B43_NPHY_PACPROC_DBG			B43_PHY_N(0x183) /* Packet processing debug */
-#define B43_NPHY_PIL_CYC1			B43_PHY_N(0x184) /* Pilot cycle counter 1 */
-#define B43_NPHY_PIL_CYC2			B43_PHY_N(0x185) /* Pilot cycle counter 2 */
-#define B43_NPHY_TXF_20CO_S0A1			B43_PHY_N(0x186) /* TX filter 20 coeff stage 0 A1 */
-#define B43_NPHY_TXF_20CO_S0A2			B43_PHY_N(0x187) /* TX filter 20 coeff stage 0 A2 */
-#define B43_NPHY_TXF_20CO_S1A1			B43_PHY_N(0x188) /* TX filter 20 coeff stage 1 A1 */
-#define B43_NPHY_TXF_20CO_S1A2			B43_PHY_N(0x189) /* TX filter 20 coeff stage 1 A2 */
-#define B43_NPHY_TXF_20CO_S2A1			B43_PHY_N(0x18A) /* TX filter 20 coeff stage 2 A1 */
-#define B43_NPHY_TXF_20CO_S2A2			B43_PHY_N(0x18B) /* TX filter 20 coeff stage 2 A2 */
-#define B43_NPHY_TXF_20CO_S0B1			B43_PHY_N(0x18C) /* TX filter 20 coeff stage 0 B1 */
-#define B43_NPHY_TXF_20CO_S0B2			B43_PHY_N(0x18D) /* TX filter 20 coeff stage 0 B2 */
-#define B43_NPHY_TXF_20CO_S0B3			B43_PHY_N(0x18E) /* TX filter 20 coeff stage 0 B3 */
-#define B43_NPHY_TXF_20CO_S1B1			B43_PHY_N(0x18F) /* TX filter 20 coeff stage 1 B1 */
-#define B43_NPHY_TXF_20CO_S1B2			B43_PHY_N(0x190) /* TX filter 20 coeff stage 1 B2 */
-#define B43_NPHY_TXF_20CO_S1B3			B43_PHY_N(0x191) /* TX filter 20 coeff stage 1 B3 */
-#define B43_NPHY_TXF_20CO_S2B1			B43_PHY_N(0x192) /* TX filter 20 coeff stage 2 B1 */
-#define B43_NPHY_TXF_20CO_S2B2			B43_PHY_N(0x193) /* TX filter 20 coeff stage 2 B2 */
-#define B43_NPHY_TXF_20CO_S2B3			B43_PHY_N(0x194) /* TX filter 20 coeff stage 2 B3 */
-#define B43_NPHY_TXF_40CO_S0A1			B43_PHY_N(0x195) /* TX filter 40 coeff stage 0 A1 */
-#define B43_NPHY_TXF_40CO_S0A2			B43_PHY_N(0x196) /* TX filter 40 coeff stage 0 A2 */
-#define B43_NPHY_TXF_40CO_S1A1			B43_PHY_N(0x197) /* TX filter 40 coeff stage 1 A1 */
-#define B43_NPHY_TXF_40CO_S1A2			B43_PHY_N(0x198) /* TX filter 40 coeff stage 1 A2 */
-#define B43_NPHY_TXF_40CO_S2A1			B43_PHY_N(0x199) /* TX filter 40 coeff stage 2 A1 */
-#define B43_NPHY_TXF_40CO_S2A2			B43_PHY_N(0x19A) /* TX filter 40 coeff stage 2 A2 */
-#define B43_NPHY_TXF_40CO_S0B1			B43_PHY_N(0x19B) /* TX filter 40 coeff stage 0 B1 */
-#define B43_NPHY_TXF_40CO_S0B2			B43_PHY_N(0x19C) /* TX filter 40 coeff stage 0 B2 */
-#define B43_NPHY_TXF_40CO_S0B3			B43_PHY_N(0x19D) /* TX filter 40 coeff stage 0 B3 */
-#define B43_NPHY_TXF_40CO_S1B1			B43_PHY_N(0x19E) /* TX filter 40 coeff stage 1 B1 */
-#define B43_NPHY_TXF_40CO_S1B2			B43_PHY_N(0x19F) /* TX filter 40 coeff stage 1 B2 */
-#define B43_NPHY_TXF_40CO_S1B3			B43_PHY_N(0x1A0) /* TX filter 40 coeff stage 1 B3 */
-#define B43_NPHY_TXF_40CO_S2B1			B43_PHY_N(0x1A1) /* TX filter 40 coeff stage 2 B1 */
-#define B43_NPHY_TXF_40CO_S2B2			B43_PHY_N(0x1A2) /* TX filter 40 coeff stage 2 B2 */
-#define B43_NPHY_TXF_40CO_S2B3			B43_PHY_N(0x1A3) /* TX filter 40 coeff stage 2 B3 */
-#define B43_NPHY_RSSIMC_0I_RSSI_X		B43_PHY_N(0x1A4) /* RSSI multiplication coefficient 0 I RSSI X */
-#define B43_NPHY_RSSIMC_0I_RSSI_Y		B43_PHY_N(0x1A5) /* RSSI multiplication coefficient 0 I RSSI Y */
-#define B43_NPHY_RSSIMC_0I_RSSI_Z		B43_PHY_N(0x1A6) /* RSSI multiplication coefficient 0 I RSSI Z */
-#define B43_NPHY_RSSIMC_0I_TBD			B43_PHY_N(0x1A7) /* RSSI multiplication coefficient 0 I TBD */
-#define B43_NPHY_RSSIMC_0I_PWRDET		B43_PHY_N(0x1A8) /* RSSI multiplication coefficient 0 I power det */
-#define B43_NPHY_RSSIMC_0I_TSSI			B43_PHY_N(0x1A9) /* RSSI multiplication coefficient 0 I TSSI */
-#define B43_NPHY_RSSIMC_0Q_RSSI_X		B43_PHY_N(0x1AA) /* RSSI multiplication coefficient 0 Q RSSI X */
-#define B43_NPHY_RSSIMC_0Q_RSSI_Y		B43_PHY_N(0x1AB) /* RSSI multiplication coefficient 0 Q RSSI Y */
-#define B43_NPHY_RSSIMC_0Q_RSSI_Z		B43_PHY_N(0x1AC) /* RSSI multiplication coefficient 0 Q RSSI Z */
-#define B43_NPHY_RSSIMC_0Q_TBD			B43_PHY_N(0x1AD) /* RSSI multiplication coefficient 0 Q TBD */
-#define B43_NPHY_RSSIMC_0Q_PWRDET		B43_PHY_N(0x1AE) /* RSSI multiplication coefficient 0 Q power det */
-#define B43_NPHY_RSSIMC_0Q_TSSI			B43_PHY_N(0x1AF) /* RSSI multiplication coefficient 0 Q TSSI */
-#define B43_NPHY_RSSIMC_1I_RSSI_X		B43_PHY_N(0x1B0) /* RSSI multiplication coefficient 1 I RSSI X */
-#define B43_NPHY_RSSIMC_1I_RSSI_Y		B43_PHY_N(0x1B1) /* RSSI multiplication coefficient 1 I RSSI Y */
-#define B43_NPHY_RSSIMC_1I_RSSI_Z		B43_PHY_N(0x1B2) /* RSSI multiplication coefficient 1 I RSSI Z */
-#define B43_NPHY_RSSIMC_1I_TBD			B43_PHY_N(0x1B3) /* RSSI multiplication coefficient 1 I TBD */
-#define B43_NPHY_RSSIMC_1I_PWRDET		B43_PHY_N(0x1B4) /* RSSI multiplication coefficient 1 I power det */
-#define B43_NPHY_RSSIMC_1I_TSSI			B43_PHY_N(0x1B5) /* RSSI multiplication coefficient 1 I TSSI */
-#define B43_NPHY_RSSIMC_1Q_RSSI_X		B43_PHY_N(0x1B6) /* RSSI multiplication coefficient 1 Q RSSI X */
-#define B43_NPHY_RSSIMC_1Q_RSSI_Y		B43_PHY_N(0x1B7) /* RSSI multiplication coefficient 1 Q RSSI Y */
-#define B43_NPHY_RSSIMC_1Q_RSSI_Z		B43_PHY_N(0x1B8) /* RSSI multiplication coefficient 1 Q RSSI Z */
-#define B43_NPHY_RSSIMC_1Q_TBD			B43_PHY_N(0x1B9) /* RSSI multiplication coefficient 1 Q TBD */
-#define B43_NPHY_RSSIMC_1Q_PWRDET		B43_PHY_N(0x1BA) /* RSSI multiplication coefficient 1 Q power det */
-#define B43_NPHY_RSSIMC_1Q_TSSI			B43_PHY_N(0x1BB) /* RSSI multiplication coefficient 1 Q TSSI */
-#define B43_NPHY_SAMC_WCNT			B43_PHY_N(0x1BC) /* Sample collect wait counter */
-#define B43_NPHY_PTHROUGH_CNT			B43_PHY_N(0x1BD) /* Pass-through counter */
-#define B43_NPHY_LTRN_OFF_G20L			B43_PHY_N(0x1C4) /* LTRN offset gain 20L */
-#define B43_NPHY_LTRN_OFF_20L			B43_PHY_N(0x1C5) /* LTRN offset 20L */
-#define B43_NPHY_LTRN_OFF_G20U			B43_PHY_N(0x1C6) /* LTRN offset gain 20U */
-#define B43_NPHY_LTRN_OFF_20U			B43_PHY_N(0x1C7) /* LTRN offset 20U */
-#define B43_NPHY_DSSSCCK_GAINSL			B43_PHY_N(0x1C8) /* DSSS/CCK gain settle length */
-#define B43_NPHY_GPIO_LOOUT			B43_PHY_N(0x1C9) /* GPIO low out */
-#define B43_NPHY_GPIO_HIOUT			B43_PHY_N(0x1CA) /* GPIO high out */
-#define B43_NPHY_CRS_CHECK			B43_PHY_N(0x1CB) /* CRS check */
-#define B43_NPHY_ML_LOGSS_RAT			B43_PHY_N(0x1CC) /* ML/logss ratio */
-#define B43_NPHY_DUPSCALE			B43_PHY_N(0x1CD) /* Dup scale */
-#define B43_NPHY_BW1A				B43_PHY_N(0x1CE) /* BW 1A */
-#define B43_NPHY_BW2				B43_PHY_N(0x1CF) /* BW 2 */
-#define B43_NPHY_BW3				B43_PHY_N(0x1D0) /* BW 3 */
-#define B43_NPHY_BW4				B43_PHY_N(0x1D1) /* BW 4 */
-#define B43_NPHY_BW5				B43_PHY_N(0x1D2) /* BW 5 */
-#define B43_NPHY_BW6				B43_PHY_N(0x1D3) /* BW 6 */
-#define B43_NPHY_COALEN0			B43_PHY_N(0x1D4) /* Coarse length 0 */
-#define B43_NPHY_COALEN1			B43_PHY_N(0x1D5) /* Coarse length 1 */
-#define B43_NPHY_CRSTHRES_1U			B43_PHY_N(0x1D6) /* CRS threshold 1 U */
-#define B43_NPHY_CRSTHRES_2U			B43_PHY_N(0x1D7) /* CRS threshold 2 U */
-#define B43_NPHY_CRSTHRES_3U			B43_PHY_N(0x1D8) /* CRS threshold 3 U */
-#define B43_NPHY_CRSCTL_U			B43_PHY_N(0x1D9) /* CRS control U */
-#define B43_NPHY_CRSTHRES_1L			B43_PHY_N(0x1DA) /* CRS threshold 1 L */
-#define B43_NPHY_CRSTHRES_2L			B43_PHY_N(0x1DB) /* CRS threshold 2 L */
-#define B43_NPHY_CRSTHRES_3L			B43_PHY_N(0x1DC) /* CRS threshold 3 L */
-#define B43_NPHY_CRSCTL_L			B43_PHY_N(0x1DD) /* CRS control L */
-#define B43_NPHY_STRA_1U			B43_PHY_N(0x1DE) /* STR address 1 U */
-#define B43_NPHY_STRA_2U			B43_PHY_N(0x1DF) /* STR address 2 U */
-#define B43_NPHY_STRA_1L			B43_PHY_N(0x1E0) /* STR address 1 L */
-#define B43_NPHY_STRA_2L			B43_PHY_N(0x1E1) /* STR address 2 L */
-#define B43_NPHY_CRSCHECK1			B43_PHY_N(0x1E2) /* CRS check 1 */
-#define B43_NPHY_CRSCHECK2			B43_PHY_N(0x1E3) /* CRS check 2 */
-#define B43_NPHY_CRSCHECK3			B43_PHY_N(0x1E4) /* CRS check 3 */
-#define B43_NPHY_JMPSTP0			B43_PHY_N(0x1E5) /* Jump step 0 */
-#define B43_NPHY_JMPSTP1			B43_PHY_N(0x1E6) /* Jump step 1 */
-#define B43_NPHY_TXPCTL_CMD			B43_PHY_N(0x1E7) /* TX power control command */
-#define  B43_NPHY_TXPCTL_CMD_INIT		0x007F /* Init */
-#define  B43_NPHY_TXPCTL_CMD_INIT_SHIFT		0
-#define  B43_NPHY_TXPCTL_CMD_COEFF		0x2000 /* Power control coefficients */
-#define  B43_NPHY_TXPCTL_CMD_HWPCTLEN		0x4000 /* Hardware TX power control enable */
-#define  B43_NPHY_TXPCTL_CMD_PCTLEN		0x8000 /* TX power control enable */
-#define B43_NPHY_TXPCTL_N			B43_PHY_N(0x1E8) /* TX power control N num */
-#define  B43_NPHY_TXPCTL_N_TSSID		0x00FF /* N TSSI delay */
-#define  B43_NPHY_TXPCTL_N_TSSID_SHIFT		0
-#define  B43_NPHY_TXPCTL_N_NPTIL2		0x0700 /* N PT integer log2 */
-#define  B43_NPHY_TXPCTL_N_NPTIL2_SHIFT		8
-#define B43_NPHY_TXPCTL_ITSSI			B43_PHY_N(0x1E9) /* TX power control idle TSSI */
-#define  B43_NPHY_TXPCTL_ITSSI_0		0x003F /* Idle TSSI 0 */
-#define  B43_NPHY_TXPCTL_ITSSI_0_SHIFT		0
-#define  B43_NPHY_TXPCTL_ITSSI_1		0x3F00 /* Idle TSSI 1 */
-#define  B43_NPHY_TXPCTL_ITSSI_1_SHIFT		8
-#define  B43_NPHY_TXPCTL_ITSSI_BINF		0x8000 /* Raw TSSI offset bin format */
-#define B43_NPHY_TXPCTL_TPWR			B43_PHY_N(0x1EA) /* TX power control target power */
-#define  B43_NPHY_TXPCTL_TPWR_0			0x00FF /* Power 0 */
-#define  B43_NPHY_TXPCTL_TPWR_0_SHIFT		0
-#define  B43_NPHY_TXPCTL_TPWR_1			0xFF00 /* Power 1 */
-#define  B43_NPHY_TXPCTL_TPWR_1_SHIFT		8
-#define B43_NPHY_TXPCTL_BIDX			B43_PHY_N(0x1EB) /* TX power control base index */
-#define  B43_NPHY_TXPCTL_BIDX_0			0x007F /* uC base index 0 */
-#define  B43_NPHY_TXPCTL_BIDX_0_SHIFT		0
-#define  B43_NPHY_TXPCTL_BIDX_1			0x7F00 /* uC base index 1 */
-#define  B43_NPHY_TXPCTL_BIDX_1_SHIFT		8
-#define  B43_NPHY_TXPCTL_BIDX_LOAD		0x8000 /* Load base index */
-#define B43_NPHY_TXPCTL_PIDX			B43_PHY_N(0x1EC) /* TX power control power index */
-#define  B43_NPHY_TXPCTL_PIDX_0			0x007F /* uC power index 0 */
-#define  B43_NPHY_TXPCTL_PIDX_0_SHIFT		0
-#define  B43_NPHY_TXPCTL_PIDX_1			0x7F00 /* uC power index 1 */
-#define  B43_NPHY_TXPCTL_PIDX_1_SHIFT		8
-#define B43_NPHY_C1_TXPCTL_STAT			B43_PHY_N(0x1ED) /* Core 1 TX power control status */
-#define B43_NPHY_C2_TXPCTL_STAT			B43_PHY_N(0x1EE) /* Core 2 TX power control status */
-#define  B43_NPHY_TXPCTL_STAT_EST		0x00FF /* Estimated power */
-#define  B43_NPHY_TXPCTL_STAT_EST_SHIFT		0
-#define  B43_NPHY_TXPCTL_STAT_BIDX		0x7F00 /* Base index */
-#define  B43_NPHY_TXPCTL_STAT_BIDX_SHIFT	8
-#define  B43_NPHY_TXPCTL_STAT_ESTVALID		0x8000 /* Estimated power valid */
-#define B43_NPHY_SMALLSGS_LEN			B43_PHY_N(0x1EF) /* Small sig gain settle length */
-#define B43_NPHY_PHYSTAT_GAIN0			B43_PHY_N(0x1F0) /* PHY stats gain info 0 */
-#define B43_NPHY_PHYSTAT_GAIN1			B43_PHY_N(0x1F1) /* PHY stats gain info 1 */
-#define B43_NPHY_PHYSTAT_FREQEST		B43_PHY_N(0x1F2) /* PHY stats frequency estimate */
-#define B43_NPHY_PHYSTAT_ADVRET			B43_PHY_N(0x1F3) /* PHY stats ADV retard */
-#define B43_NPHY_PHYLB_MODE			B43_PHY_N(0x1F4) /* PHY loopback mode */
-#define B43_NPHY_TONE_MIDX20_1			B43_PHY_N(0x1F5) /* Tone map index 20/1 */
-#define B43_NPHY_TONE_MIDX20_2			B43_PHY_N(0x1F6) /* Tone map index 20/2 */
-#define B43_NPHY_TONE_MIDX20_3			B43_PHY_N(0x1F7) /* Tone map index 20/3 */
-#define B43_NPHY_TONE_MIDX40_1			B43_PHY_N(0x1F8) /* Tone map index 40/1 */
-#define B43_NPHY_TONE_MIDX40_2			B43_PHY_N(0x1F9) /* Tone map index 40/2 */
-#define B43_NPHY_TONE_MIDX40_3			B43_PHY_N(0x1FA) /* Tone map index 40/3 */
-#define B43_NPHY_TONE_MIDX40_4			B43_PHY_N(0x1FB) /* Tone map index 40/4 */
-#define B43_NPHY_PILTONE_MIDX1			B43_PHY_N(0x1FC) /* Pilot tone map index 1 */
-#define B43_NPHY_PILTONE_MIDX2			B43_PHY_N(0x1FD) /* Pilot tone map index 2 */
-#define B43_NPHY_PILTONE_MIDX3			B43_PHY_N(0x1FE) /* Pilot tone map index 3 */
-#define B43_NPHY_TXRIFS_FRDEL			B43_PHY_N(0x1FF) /* TX RIFS frame delay */
-#define B43_NPHY_AFESEQ_RX2TX_PUD_40M		B43_PHY_N(0x200) /* AFE seq rx2tx power up/down delay 40M */
-#define B43_NPHY_AFESEQ_TX2RX_PUD_40M		B43_PHY_N(0x201) /* AFE seq tx2rx power up/down delay 40M */
-#define B43_NPHY_AFESEQ_RX2TX_PUD_20M		B43_PHY_N(0x202) /* AFE seq rx2tx power up/down delay 20M */
-#define B43_NPHY_AFESEQ_TX2RX_PUD_20M		B43_PHY_N(0x203) /* AFE seq tx2rx power up/down delay 20M */
-#define B43_NPHY_RX_SIGCTL			B43_PHY_N(0x204) /* RX signal control */
-#define B43_NPHY_RXPIL_CYCNT0			B43_PHY_N(0x205) /* RX pilot cycle counter 0 */
-#define B43_NPHY_RXPIL_CYCNT1			B43_PHY_N(0x206) /* RX pilot cycle counter 1 */
-#define B43_NPHY_RXPIL_CYCNT2			B43_PHY_N(0x207) /* RX pilot cycle counter 2 */
-#define B43_NPHY_AFESEQ_RX2TX_PUD_10M		B43_PHY_N(0x208) /* AFE seq rx2tx power up/down delay 10M */
-#define B43_NPHY_AFESEQ_TX2RX_PUD_10M		B43_PHY_N(0x209) /* AFE seq tx2rx power up/down delay 10M */
-#define B43_NPHY_DSSSCCK_CRSEXTL		B43_PHY_N(0x20A) /* DSSS/CCK CRS extension length */
-#define B43_NPHY_ML_LOGSS_RATSLOPE		B43_PHY_N(0x20B) /* ML/logss ratio slope */
-#define B43_NPHY_RIFS_SRCTL			B43_PHY_N(0x20C) /* RIFS search timeout length */
-#define B43_NPHY_TXREALFD			B43_PHY_N(0x20D) /* TX real frame delay */
-#define B43_NPHY_HPANT_SWTHRES			B43_PHY_N(0x20E) /* High power antenna switch threshold */
-#define B43_NPHY_EDCRS_ASSTHRES0		B43_PHY_N(0x210) /* ED CRS assert threshold 0 */
-#define B43_NPHY_EDCRS_ASSTHRES1		B43_PHY_N(0x211) /* ED CRS assert threshold 1 */
-#define B43_NPHY_EDCRS_DEASSTHRES0		B43_PHY_N(0x212) /* ED CRS deassert threshold 0 */
-#define B43_NPHY_EDCRS_DEASSTHRES1		B43_PHY_N(0x213) /* ED CRS deassert threshold 1 */
-#define B43_NPHY_STR_WTIME20U			B43_PHY_N(0x214) /* STR wait time 20U */
-#define B43_NPHY_STR_WTIME20L			B43_PHY_N(0x215) /* STR wait time 20L */
-#define B43_NPHY_TONE_MIDX657M			B43_PHY_N(0x216) /* Tone map index 657M */
-#define B43_NPHY_HTSIGTONES			B43_PHY_N(0x217) /* HT signal tones */
-#define B43_NPHY_RSSI1				B43_PHY_N(0x219) /* RSSI value 1 */
-#define B43_NPHY_RSSI2				B43_PHY_N(0x21A) /* RSSI value 2 */
-#define B43_NPHY_CHAN_ESTHANG			B43_PHY_N(0x21D) /* Channel estimate hang */
-#define B43_NPHY_FINERX2_CGC			B43_PHY_N(0x221) /* Fine RX 2 clock gate control */
-#define  B43_NPHY_FINERX2_CGC_DECGC		0x0008 /* Decode gated clocks */
-#define B43_NPHY_TXPCTL_INIT			B43_PHY_N(0x222) /* TX power controll init */
-#define  B43_NPHY_TXPCTL_INIT_PIDXI1		0x00FF /* Power index init 1 */
-#define  B43_NPHY_TXPCTL_INIT_PIDXI1_SHIFT	0
-
-
-
-/* Broadcom 2055 radio registers */
-
-#define B2055_GEN_SPARE			0x00 /* GEN spare */
-#define B2055_SP_PINPD			0x02 /* SP PIN PD */
-#define B2055_C1_SP_RSSI		0x03 /* SP RSSI Core 1 */
-#define B2055_C1_SP_PDMISC		0x04 /* SP PD MISC Core 1 */
-#define B2055_C2_SP_RSSI		0x05 /* SP RSSI Core 2 */
-#define B2055_C2_SP_PDMISC		0x06 /* SP PD MISC Core 2 */
-#define B2055_C1_SP_RXGC1		0x07 /* SP RX GC1 Core 1 */
-#define B2055_C1_SP_RXGC2		0x08 /* SP RX GC2 Core 1 */
-#define B2055_C2_SP_RXGC1		0x09 /* SP RX GC1 Core 2 */
-#define B2055_C2_SP_RXGC2		0x0A /* SP RX GC2 Core 2 */
-#define B2055_C1_SP_LPFBWSEL		0x0B /* SP LPF BW select Core 1 */
-#define B2055_C2_SP_LPFBWSEL		0x0C /* SP LPF BW select Core 2 */
-#define B2055_C1_SP_TXGC1		0x0D /* SP TX GC1 Core 1 */
-#define B2055_C1_SP_TXGC2		0x0E /* SP TX GC2 Core 1 */
-#define B2055_C2_SP_TXGC1		0x0F /* SP TX GC1 Core 2 */
-#define B2055_C2_SP_TXGC2		0x10 /* SP TX GC2 Core 2 */
-#define B2055_MASTER1			0x11 /* Master control 1 */
-#define B2055_MASTER2			0x12 /* Master control 2 */
-#define B2055_PD_LGEN			0x13 /* PD LGEN */
-#define B2055_PD_PLLTS			0x14 /* PD PLL TS */
-#define B2055_C1_PD_LGBUF		0x15 /* PD Core 1 LGBUF */
-#define B2055_C1_PD_TX			0x16 /* PD Core 1 TX */
-#define B2055_C1_PD_RXTX		0x17 /* PD Core 1 RXTX */
-#define B2055_C1_PD_RSSIMISC		0x18 /* PD Core 1 RSSI MISC */
-#define B2055_C2_PD_LGBUF		0x19 /* PD Core 2 LGBUF */
-#define B2055_C2_PD_TX			0x1A /* PD Core 2 TX */
-#define B2055_C2_PD_RXTX		0x1B /* PD Core 2 RXTX */
-#define B2055_C2_PD_RSSIMISC		0x1C /* PD Core 2 RSSI MISC */
-#define B2055_PWRDET_LGEN		0x1D /* PWRDET LGEN */
-#define B2055_C1_PWRDET_LGBUF		0x1E /* PWRDET LGBUF Core 1 */
-#define B2055_C1_PWRDET_RXTX		0x1F /* PWRDET RXTX Core 1 */
-#define B2055_C2_PWRDET_LGBUF		0x20 /* PWRDET LGBUF Core 2 */
-#define B2055_C2_PWRDET_RXTX		0x21 /* PWRDET RXTX Core 2 */
-#define B2055_RRCCAL_CS			0x22 /* RRCCAL Control spare */
-#define B2055_RRCCAL_NOPTSEL		0x23 /* RRCCAL N OPT SEL */
-#define B2055_CAL_MISC			0x24 /* CAL MISC */
-#define B2055_CAL_COUT			0x25 /* CAL Counter out */
-#define B2055_CAL_COUT2			0x26 /* CAL Counter out 2 */
-#define B2055_CAL_CVARCTL		0x27 /* CAL CVAR Control */
-#define B2055_CAL_RVARCTL		0x28 /* CAL RVAR Control */
-#define B2055_CAL_LPOCTL		0x29 /* CAL LPO Control */
-#define B2055_CAL_TS			0x2A /* CAL TS */
-#define B2055_CAL_RCCALRTS		0x2B /* CAL RCCAL READ TS */
-#define B2055_CAL_RCALRTS		0x2C /* CAL RCAL READ TS */
-#define B2055_PADDRV			0x2D /* PAD driver */
-#define B2055_XOCTL1			0x2E /* XO Control 1 */
-#define B2055_XOCTL2			0x2F /* XO Control 2 */
-#define B2055_XOREGUL			0x30 /* XO Regulator */
-#define B2055_XOMISC			0x31 /* XO misc */
-#define B2055_PLL_LFC1			0x32 /* PLL LF C1 */
-#define B2055_PLL_CALVTH		0x33 /* PLL CAL VTH */
-#define B2055_PLL_LFC2			0x34 /* PLL LF C2 */
-#define B2055_PLL_REF			0x35 /* PLL reference */
-#define B2055_PLL_LFR1			0x36 /* PLL LF R1 */
-#define B2055_PLL_PFDCP			0x37 /* PLL PFD CP */
-#define B2055_PLL_IDAC_CPOPAMP		0x38 /* PLL IDAC CPOPAMP */
-#define B2055_PLL_CPREG			0x39 /* PLL CP Regulator */
-#define B2055_PLL_RCAL			0x3A /* PLL RCAL */
-#define B2055_RF_PLLMOD0		0x3B /* RF PLL MOD0 */
-#define B2055_RF_PLLMOD1		0x3C /* RF PLL MOD1 */
-#define B2055_RF_MMDIDAC1		0x3D /* RF MMD IDAC 1 */
-#define B2055_RF_MMDIDAC0		0x3E /* RF MMD IDAC 0 */
-#define B2055_RF_MMDSP			0x3F /* RF MMD spare */
-#define B2055_VCO_CAL1			0x40 /* VCO cal 1 */
-#define B2055_VCO_CAL2			0x41 /* VCO cal 2 */
-#define B2055_VCO_CAL3			0x42 /* VCO cal 3 */
-#define B2055_VCO_CAL4			0x43 /* VCO cal 4 */
-#define B2055_VCO_CAL5			0x44 /* VCO cal 5 */
-#define B2055_VCO_CAL6			0x45 /* VCO cal 6 */
-#define B2055_VCO_CAL7			0x46 /* VCO cal 7 */
-#define B2055_VCO_CAL8			0x47 /* VCO cal 8 */
-#define B2055_VCO_CAL9			0x48 /* VCO cal 9 */
-#define B2055_VCO_CAL10			0x49 /* VCO cal 10 */
-#define B2055_VCO_CAL11			0x4A /* VCO cal 11 */
-#define B2055_VCO_CAL12			0x4B /* VCO cal 12 */
-#define B2055_VCO_CAL13			0x4C /* VCO cal 13 */
-#define B2055_VCO_CAL14			0x4D /* VCO cal 14 */
-#define B2055_VCO_CAL15			0x4E /* VCO cal 15 */
-#define B2055_VCO_CAL16			0x4F /* VCO cal 16 */
-#define B2055_VCO_KVCO			0x50 /* VCO KVCO */
-#define B2055_VCO_CAPTAIL		0x51 /* VCO CAP TAIL */
-#define B2055_VCO_IDACVCO		0x52 /* VCO IDAC VCO */
-#define B2055_VCO_REG			0x53 /* VCO Regulator */
-#define B2055_PLL_RFVTH			0x54 /* PLL RF VTH */
-#define B2055_LGBUF_CENBUF		0x55 /* LGBUF CEN BUF */
-#define B2055_LGEN_TUNE1		0x56 /* LGEN tune 1 */
-#define B2055_LGEN_TUNE2		0x57 /* LGEN tune 2 */
-#define B2055_LGEN_IDAC1		0x58 /* LGEN IDAC 1 */
-#define B2055_LGEN_IDAC2		0x59 /* LGEN IDAC 2 */
-#define B2055_LGEN_BIASC		0x5A /* LGEN BIAS counter */
-#define B2055_LGEN_BIASIDAC		0x5B /* LGEN BIAS IDAC */
-#define B2055_LGEN_RCAL			0x5C /* LGEN RCAL */
-#define B2055_LGEN_DIV			0x5D /* LGEN div */
-#define B2055_LGEN_SPARE2		0x5E /* LGEN spare 2 */
-#define B2055_C1_LGBUF_ATUNE		0x5F /* Core 1 LGBUF A tune */
-#define B2055_C1_LGBUF_GTUNE		0x60 /* Core 1 LGBUF G tune */
-#define B2055_C1_LGBUF_DIV		0x61 /* Core 1 LGBUF div */
-#define B2055_C1_LGBUF_AIDAC		0x62 /* Core 1 LGBUF A IDAC */
-#define B2055_C1_LGBUF_GIDAC		0x63 /* Core 1 LGBUF G IDAC */
-#define B2055_C1_LGBUF_IDACFO		0x64 /* Core 1 LGBUF IDAC filter override */
-#define B2055_C1_LGBUF_SPARE		0x65 /* Core 1 LGBUF spare */
-#define B2055_C1_RX_RFSPC1		0x66 /* Core 1 RX RF SPC1 */
-#define B2055_C1_RX_RFR1		0x67 /* Core 1 RX RF reg 1 */
-#define B2055_C1_RX_RFR2		0x68 /* Core 1 RX RF reg 2 */
-#define B2055_C1_RX_RFRCAL		0x69 /* Core 1 RX RF RCAL */
-#define B2055_C1_RX_BB_BLCMP		0x6A /* Core 1 RX Baseband BUFI LPF CMP */
-#define B2055_C1_RX_BB_LPF		0x6B /* Core 1 RX Baseband LPF */
-#define B2055_C1_RX_BB_MIDACHP		0x6C /* Core 1 RX Baseband MIDAC High-pass */
-#define B2055_C1_RX_BB_VGA1IDAC		0x6D /* Core 1 RX Baseband VGA1 IDAC */
-#define B2055_C1_RX_BB_VGA2IDAC		0x6E /* Core 1 RX Baseband VGA2 IDAC */
-#define B2055_C1_RX_BB_VGA3IDAC		0x6F /* Core 1 RX Baseband VGA3 IDAC */
-#define B2055_C1_RX_BB_BUFOCTL		0x70 /* Core 1 RX Baseband BUFO Control */
-#define B2055_C1_RX_BB_RCCALCTL		0x71 /* Core 1 RX Baseband RCCAL Control */
-#define B2055_C1_RX_BB_RSSICTL1		0x72 /* Core 1 RX Baseband RSSI Control 1 */
-#define B2055_C1_RX_BB_RSSICTL2		0x73 /* Core 1 RX Baseband RSSI Control 2 */
-#define B2055_C1_RX_BB_RSSICTL3		0x74 /* Core 1 RX Baseband RSSI Control 3 */
-#define B2055_C1_RX_BB_RSSICTL4		0x75 /* Core 1 RX Baseband RSSI Control 4 */
-#define B2055_C1_RX_BB_RSSICTL5		0x76 /* Core 1 RX Baseband RSSI Control 5 */
-#define B2055_C1_RX_BB_REG		0x77 /* Core 1 RX Baseband Regulator */
-#define B2055_C1_RX_BB_SPARE1		0x78 /* Core 1 RX Baseband spare 1 */
-#define B2055_C1_RX_TXBBRCAL		0x79 /* Core 1 RX TX BB RCAL */
-#define B2055_C1_TX_RF_SPGA		0x7A /* Core 1 TX RF SGM PGA */
-#define B2055_C1_TX_RF_SPAD		0x7B /* Core 1 TX RF SGM PAD */
-#define B2055_C1_TX_RF_CNTPGA1		0x7C /* Core 1 TX RF counter PGA 1 */
-#define B2055_C1_TX_RF_CNTPAD1		0x7D /* Core 1 TX RF counter PAD 1 */
-#define B2055_C1_TX_RF_PGAIDAC		0x7E /* Core 1 TX RF PGA IDAC */
-#define B2055_C1_TX_PGAPADTN		0x7F /* Core 1 TX PGA PAD TN */
-#define B2055_C1_TX_PADIDAC1		0x80 /* Core 1 TX PAD IDAC 1 */
-#define B2055_C1_TX_PADIDAC2		0x81 /* Core 1 TX PAD IDAC 2 */
-#define B2055_C1_TX_MXBGTRIM		0x82 /* Core 1 TX MX B/G TRIM */
-#define B2055_C1_TX_RF_RCAL		0x83 /* Core 1 TX RF RCAL */
-#define B2055_C1_TX_RF_PADTSSI1		0x84 /* Core 1 TX RF PAD TSSI1 */
-#define B2055_C1_TX_RF_PADTSSI2		0x85 /* Core 1 TX RF PAD TSSI2 */
-#define B2055_C1_TX_RF_SPARE		0x86 /* Core 1 TX RF spare */
-#define B2055_C1_TX_RF_IQCAL1		0x87 /* Core 1 TX RF I/Q CAL 1 */
-#define B2055_C1_TX_RF_IQCAL2		0x88 /* Core 1 TX RF I/Q CAL 2 */
-#define B2055_C1_TXBB_RCCAL		0x89 /* Core 1 TXBB RC CAL Control */
-#define B2055_C1_TXBB_LPF1		0x8A /* Core 1 TXBB LPF 1 */
-#define B2055_C1_TX_VOSCNCL		0x8B /* Core 1 TX VOS CNCL */
-#define B2055_C1_TX_LPF_MXGMIDAC	0x8C /* Core 1 TX LPF MXGM IDAC */
-#define B2055_C1_TX_BB_MXGM		0x8D /* Core 1 TX BB MXGM */
-#define B2055_C2_LGBUF_ATUNE		0x8E /* Core 2 LGBUF A tune */
-#define B2055_C2_LGBUF_GTUNE		0x8F /* Core 2 LGBUF G tune */
-#define B2055_C2_LGBUF_DIV		0x90 /* Core 2 LGBUF div */
-#define B2055_C2_LGBUF_AIDAC		0x91 /* Core 2 LGBUF A IDAC */
-#define B2055_C2_LGBUF_GIDAC		0x92 /* Core 2 LGBUF G IDAC */
-#define B2055_C2_LGBUF_IDACFO		0x93 /* Core 2 LGBUF IDAC filter override */
-#define B2055_C2_LGBUF_SPARE		0x94 /* Core 2 LGBUF spare */
-#define B2055_C2_RX_RFSPC1		0x95 /* Core 2 RX RF SPC1 */
-#define B2055_C2_RX_RFR1		0x96 /* Core 2 RX RF reg 1 */
-#define B2055_C2_RX_RFR2		0x97 /* Core 2 RX RF reg 2 */
-#define B2055_C2_RX_RFRCAL		0x98 /* Core 2 RX RF RCAL */
-#define B2055_C2_RX_BB_BLCMP		0x99 /* Core 2 RX Baseband BUFI LPF CMP */
-#define B2055_C2_RX_BB_LPF		0x9A /* Core 2 RX Baseband LPF */
-#define B2055_C2_RX_BB_MIDACHP		0x9B /* Core 2 RX Baseband MIDAC High-pass */
-#define B2055_C2_RX_BB_VGA1IDAC		0x9C /* Core 2 RX Baseband VGA1 IDAC */
-#define B2055_C2_RX_BB_VGA2IDAC		0x9D /* Core 2 RX Baseband VGA2 IDAC */
-#define B2055_C2_RX_BB_VGA3IDAC		0x9E /* Core 2 RX Baseband VGA3 IDAC */
-#define B2055_C2_RX_BB_BUFOCTL		0x9F /* Core 2 RX Baseband BUFO Control */
-#define B2055_C2_RX_BB_RCCALCTL		0xA0 /* Core 2 RX Baseband RCCAL Control */
-#define B2055_C2_RX_BB_RSSICTL1		0xA1 /* Core 2 RX Baseband RSSI Control 1 */
-#define B2055_C2_RX_BB_RSSICTL2		0xA2 /* Core 2 RX Baseband RSSI Control 2 */
-#define B2055_C2_RX_BB_RSSICTL3		0xA3 /* Core 2 RX Baseband RSSI Control 3 */
-#define B2055_C2_RX_BB_RSSICTL4		0xA4 /* Core 2 RX Baseband RSSI Control 4 */
-#define B2055_C2_RX_BB_RSSICTL5		0xA5 /* Core 2 RX Baseband RSSI Control 5 */
-#define B2055_C2_RX_BB_REG		0xA6 /* Core 2 RX Baseband Regulator */
-#define B2055_C2_RX_BB_SPARE1		0xA7 /* Core 2 RX Baseband spare 1 */
-#define B2055_C2_RX_TXBBRCAL		0xA8 /* Core 2 RX TX BB RCAL */
-#define B2055_C2_TX_RF_SPGA		0xA9 /* Core 2 TX RF SGM PGA */
-#define B2055_C2_TX_RF_SPAD		0xAA /* Core 2 TX RF SGM PAD */
-#define B2055_C2_TX_RF_CNTPGA1		0xAB /* Core 2 TX RF counter PGA 1 */
-#define B2055_C2_TX_RF_CNTPAD1		0xAC /* Core 2 TX RF counter PAD 1 */
-#define B2055_C2_TX_RF_PGAIDAC		0xAD /* Core 2 TX RF PGA IDAC */
-#define B2055_C2_TX_PGAPADTN		0xAE /* Core 2 TX PGA PAD TN */
-#define B2055_C2_TX_PADIDAC1		0xAF /* Core 2 TX PAD IDAC 1 */
-#define B2055_C2_TX_PADIDAC2		0xB0 /* Core 2 TX PAD IDAC 2 */
-#define B2055_C2_TX_MXBGTRIM		0xB1 /* Core 2 TX MX B/G TRIM */
-#define B2055_C2_TX_RF_RCAL		0xB2 /* Core 2 TX RF RCAL */
-#define B2055_C2_TX_RF_PADTSSI1		0xB3 /* Core 2 TX RF PAD TSSI1 */
-#define B2055_C2_TX_RF_PADTSSI2		0xB4 /* Core 2 TX RF PAD TSSI2 */
-#define B2055_C2_TX_RF_SPARE		0xB5 /* Core 2 TX RF spare */
-#define B2055_C2_TX_RF_IQCAL1		0xB6 /* Core 2 TX RF I/Q CAL 1 */
-#define B2055_C2_TX_RF_IQCAL2		0xB7 /* Core 2 TX RF I/Q CAL 2 */
-#define B2055_C2_TXBB_RCCAL		0xB8 /* Core 2 TXBB RC CAL Control */
-#define B2055_C2_TXBB_LPF1		0xB9 /* Core 2 TXBB LPF 1 */
-#define B2055_C2_TX_VOSCNCL		0xBA /* Core 2 TX VOS CNCL */
-#define B2055_C2_TX_LPF_MXGMIDAC	0xBB /* Core 2 TX LPF MXGM IDAC */
-#define B2055_C2_TX_BB_MXGM		0xBC /* Core 2 TX BB MXGM */
-#define B2055_PRG_GCHP21		0xBD /* PRG GC HPVGA23 21 */
-#define B2055_PRG_GCHP22		0xBE /* PRG GC HPVGA23 22 */
-#define B2055_PRG_GCHP23		0xBF /* PRG GC HPVGA23 23 */
-#define B2055_PRG_GCHP24		0xC0 /* PRG GC HPVGA23 24 */
-#define B2055_PRG_GCHP25		0xC1 /* PRG GC HPVGA23 25 */
-#define B2055_PRG_GCHP26		0xC2 /* PRG GC HPVGA23 26 */
-#define B2055_PRG_GCHP27		0xC3 /* PRG GC HPVGA23 27 */
-#define B2055_PRG_GCHP28		0xC4 /* PRG GC HPVGA23 28 */
-#define B2055_PRG_GCHP29		0xC5 /* PRG GC HPVGA23 29 */
-#define B2055_PRG_GCHP30		0xC6 /* PRG GC HPVGA23 30 */
-#define B2055_C1_LNA_GAINBST		0xCD /* Core 1 LNA GAINBST */
-#define B2055_C1_B0NB_RSSIVCM		0xD2 /* Core 1 B0 narrow-band RSSI VCM */
-#define B2055_C1_GENSPARE2		0xD6 /* Core 1 GEN spare 2 */
-#define B2055_C2_LNA_GAINBST		0xD9 /* Core 2 LNA GAINBST */
-#define B2055_C2_B0NB_RSSIVCM		0xDE /* Core 2 B0 narrow-band RSSI VCM */
-#define B2055_C2_GENSPARE2		0xE2 /* Core 2 GEN spare 2 */
-
-
-
-struct b43_wldev;
-
-struct b43_phy_n {
-	bool initialised;
-
-	//TODO lots of missing stuff
-};
-
-
-struct b43_phy_operations;
-extern const struct b43_phy_operations b43_phyops_n;
-
-#endif /* B43_NPHY_H_ */
Index: wireless-testing/drivers/net/wireless/b43/phy_n.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/phy_n.c	2008-08-30 02:18:43.000000000 +0200
@@ -0,0 +1,624 @@
+/*
+
+  Broadcom B43 wireless driver
+  IEEE 802.11n PHY support
+
+  Copyright (c) 2008 Michael Buesch <mb at bu3sch.de>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+#include <linux/delay.h>
+#include <linux/types.h>
+
+#include "b43.h"
+#include "phy_n.h"
+#include "tables_nphy.h"
+
+
+void b43_nphy_set_rxantenna(struct b43_wldev *dev, int antenna)
+{//TODO
+}
+
+static void b43_nphy_op_adjust_txpower(struct b43_wldev *dev)
+{//TODO
+}
+
+static enum b43_txpwr_result b43_nphy_op_recalc_txpower(struct b43_wldev *dev,
+							bool ignore_tssi)
+{//TODO
+	return B43_TXPWR_RES_DONE;
+}
+
+static void b43_chantab_radio_upload(struct b43_wldev *dev,
+				     const struct b43_nphy_channeltab_entry *e)
+{
+	b43_radio_write16(dev, B2055_PLL_REF, e->radio_pll_ref);
+	b43_radio_write16(dev, B2055_RF_PLLMOD0, e->radio_rf_pllmod0);
+	b43_radio_write16(dev, B2055_RF_PLLMOD1, e->radio_rf_pllmod1);
+	b43_radio_write16(dev, B2055_VCO_CAPTAIL, e->radio_vco_captail);
+	b43_radio_write16(dev, B2055_VCO_CAL1, e->radio_vco_cal1);
+	b43_radio_write16(dev, B2055_VCO_CAL2, e->radio_vco_cal2);
+	b43_radio_write16(dev, B2055_PLL_LFC1, e->radio_pll_lfc1);
+	b43_radio_write16(dev, B2055_PLL_LFR1, e->radio_pll_lfr1);
+	b43_radio_write16(dev, B2055_PLL_LFC2, e->radio_pll_lfc2);
+	b43_radio_write16(dev, B2055_LGBUF_CENBUF, e->radio_lgbuf_cenbuf);
+	b43_radio_write16(dev, B2055_LGEN_TUNE1, e->radio_lgen_tune1);
+	b43_radio_write16(dev, B2055_LGEN_TUNE2, e->radio_lgen_tune2);
+	b43_radio_write16(dev, B2055_C1_LGBUF_ATUNE, e->radio_c1_lgbuf_atune);
+	b43_radio_write16(dev, B2055_C1_LGBUF_GTUNE, e->radio_c1_lgbuf_gtune);
+	b43_radio_write16(dev, B2055_C1_RX_RFR1, e->radio_c1_rx_rfr1);
+	b43_radio_write16(dev, B2055_C1_TX_PGAPADTN, e->radio_c1_tx_pgapadtn);
+	b43_radio_write16(dev, B2055_C1_TX_MXBGTRIM, e->radio_c1_tx_mxbgtrim);
+	b43_radio_write16(dev, B2055_C2_LGBUF_ATUNE, e->radio_c2_lgbuf_atune);
+	b43_radio_write16(dev, B2055_C2_LGBUF_GTUNE, e->radio_c2_lgbuf_gtune);
+	b43_radio_write16(dev, B2055_C2_RX_RFR1, e->radio_c2_rx_rfr1);
+	b43_radio_write16(dev, B2055_C2_TX_PGAPADTN, e->radio_c2_tx_pgapadtn);
+	b43_radio_write16(dev, B2055_C2_TX_MXBGTRIM, e->radio_c2_tx_mxbgtrim);
+}
+
+static void b43_chantab_phy_upload(struct b43_wldev *dev,
+				   const struct b43_nphy_channeltab_entry *e)
+{
+	b43_phy_write(dev, B43_NPHY_BW1A, e->phy_bw1a);
+	b43_phy_write(dev, B43_NPHY_BW2, e->phy_bw2);
+	b43_phy_write(dev, B43_NPHY_BW3, e->phy_bw3);
+	b43_phy_write(dev, B43_NPHY_BW4, e->phy_bw4);
+	b43_phy_write(dev, B43_NPHY_BW5, e->phy_bw5);
+	b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
+}
+
+static void b43_nphy_tx_power_fix(struct b43_wldev *dev)
+{
+	//TODO
+}
+
+/* Tune the hardware to a new channel. */
+static int nphy_channel_switch(struct b43_wldev *dev, unsigned int channel)
+{
+	const struct b43_nphy_channeltab_entry *tabent;
+
+	tabent = b43_nphy_get_chantabent(dev, channel);
+	if (!tabent)
+		return -ESRCH;
+
+	//FIXME enable/disable band select upper20 in RXCTL
+	if (0 /*FIXME 5Ghz*/)
+		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x20);
+	else
+		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x50);
+	b43_chantab_radio_upload(dev, tabent);
+	udelay(50);
+	b43_radio_write16(dev, B2055_VCO_CAL10, 5);
+	b43_radio_write16(dev, B2055_VCO_CAL10, 45);
+	b43_radio_write16(dev, B2055_VCO_CAL10, 65);
+	udelay(300);
+	if (0 /*FIXME 5Ghz*/)
+		b43_phy_set(dev, B43_NPHY_BANDCTL, B43_NPHY_BANDCTL_5GHZ);
+	else
+		b43_phy_mask(dev, B43_NPHY_BANDCTL, ~B43_NPHY_BANDCTL_5GHZ);
+	b43_chantab_phy_upload(dev, tabent);
+	b43_nphy_tx_power_fix(dev);
+
+	return 0;
+}
+
+static void b43_radio_init2055_pre(struct b43_wldev *dev)
+{
+	b43_phy_mask(dev, B43_NPHY_RFCTL_CMD,
+		     ~B43_NPHY_RFCTL_CMD_PORFORCE);
+	b43_phy_set(dev, B43_NPHY_RFCTL_CMD,
+		    B43_NPHY_RFCTL_CMD_CHIP0PU |
+		    B43_NPHY_RFCTL_CMD_OEPORFORCE);
+	b43_phy_set(dev, B43_NPHY_RFCTL_CMD,
+		    B43_NPHY_RFCTL_CMD_PORFORCE);
+}
+
+static void b43_radio_init2055_post(struct b43_wldev *dev)
+{
+	struct ssb_sprom *sprom = &(dev->dev->bus->sprom);
+	struct ssb_boardinfo *binfo = &(dev->dev->bus->boardinfo);
+	int i;
+	u16 val;
+
+	b43_radio_mask(dev, B2055_MASTER1, 0xFFF3);
+	msleep(1);
+	if ((sprom->revision != 4) || !(sprom->boardflags_hi & 0x0002)) {
+		if ((binfo->vendor != PCI_VENDOR_ID_BROADCOM) ||
+		    (binfo->type != 0x46D) ||
+		    (binfo->rev < 0x41)) {
+			b43_radio_mask(dev, B2055_C1_RX_BB_REG, 0x7F);
+			b43_radio_mask(dev, B2055_C1_RX_BB_REG, 0x7F);
+			msleep(1);
+		}
+	}
+	b43_radio_maskset(dev, B2055_RRCCAL_NOPTSEL, 0x3F, 0x2C);
+	msleep(1);
+	b43_radio_write16(dev, B2055_CAL_MISC, 0x3C);
+	msleep(1);
+	b43_radio_mask(dev, B2055_CAL_MISC, 0xFFBE);
+	msleep(1);
+	b43_radio_set(dev, B2055_CAL_LPOCTL, 0x80);
+	msleep(1);
+	b43_radio_set(dev, B2055_CAL_MISC, 0x1);
+	msleep(1);
+	b43_radio_set(dev, B2055_CAL_MISC, 0x40);
+	msleep(1);
+	for (i = 0; i < 100; i++) {
+		val = b43_radio_read16(dev, B2055_CAL_COUT2);
+		if (val & 0x80)
+			break;
+		udelay(10);
+	}
+	msleep(1);
+	b43_radio_mask(dev, B2055_CAL_LPOCTL, 0xFF7F);
+	msleep(1);
+	nphy_channel_switch(dev, dev->phy.channel);
+	b43_radio_write16(dev, B2055_C1_RX_BB_LPF, 0x9);
+	b43_radio_write16(dev, B2055_C2_RX_BB_LPF, 0x9);
+	b43_radio_write16(dev, B2055_C1_RX_BB_MIDACHP, 0x83);
+	b43_radio_write16(dev, B2055_C2_RX_BB_MIDACHP, 0x83);
+}
+
+/* Initialize a Broadcom 2055 N-radio */
+static void b43_radio_init2055(struct b43_wldev *dev)
+{
+	b43_radio_init2055_pre(dev);
+	if (b43_status(dev) < B43_STAT_INITIALIZED)
+		b2055_upload_inittab(dev, 0, 1);
+	else
+		b2055_upload_inittab(dev, 0/*FIXME on 5ghz band*/, 0);
+	b43_radio_init2055_post(dev);
+}
+
+void b43_nphy_radio_turn_on(struct b43_wldev *dev)
+{
+	b43_radio_init2055(dev);
+}
+
+void b43_nphy_radio_turn_off(struct b43_wldev *dev)
+{
+	b43_phy_mask(dev, B43_NPHY_RFCTL_CMD,
+		     ~B43_NPHY_RFCTL_CMD_EN);
+}
+
+#define ntab_upload(dev, offset, data) do { \
+		unsigned int i;						\
+		for (i = 0; i < (offset##_SIZE); i++)			\
+			b43_ntab_write(dev, (offset) + i, (data)[i]);	\
+	} while (0)
+
+/* Upload the N-PHY tables. */
+static void b43_nphy_tables_init(struct b43_wldev *dev)
+{
+	/* Static tables */
+	ntab_upload(dev, B43_NTAB_FRAMESTRUCT, b43_ntab_framestruct);
+	ntab_upload(dev, B43_NTAB_FRAMELT, b43_ntab_framelookup);
+	ntab_upload(dev, B43_NTAB_TMAP, b43_ntab_tmap);
+	ntab_upload(dev, B43_NTAB_TDTRN, b43_ntab_tdtrn);
+	ntab_upload(dev, B43_NTAB_INTLEVEL, b43_ntab_intlevel);
+	ntab_upload(dev, B43_NTAB_PILOT, b43_ntab_pilot);
+	ntab_upload(dev, B43_NTAB_PILOTLT, b43_ntab_pilotlt);
+	ntab_upload(dev, B43_NTAB_TDI20A0, b43_ntab_tdi20a0);
+	ntab_upload(dev, B43_NTAB_TDI20A1, b43_ntab_tdi20a1);
+	ntab_upload(dev, B43_NTAB_TDI40A0, b43_ntab_tdi40a0);
+	ntab_upload(dev, B43_NTAB_TDI40A1, b43_ntab_tdi40a1);
+	ntab_upload(dev, B43_NTAB_BDI, b43_ntab_bdi);
+	ntab_upload(dev, B43_NTAB_CHANEST, b43_ntab_channelest);
+	ntab_upload(dev, B43_NTAB_MCS, b43_ntab_mcs);
+
+	/* Volatile tables */
+	ntab_upload(dev, B43_NTAB_NOISEVAR10, b43_ntab_noisevar10);
+	ntab_upload(dev, B43_NTAB_NOISEVAR11, b43_ntab_noisevar11);
+	ntab_upload(dev, B43_NTAB_C0_ESTPLT, b43_ntab_estimatepowerlt0);
+	ntab_upload(dev, B43_NTAB_C1_ESTPLT, b43_ntab_estimatepowerlt1);
+	ntab_upload(dev, B43_NTAB_C0_ADJPLT, b43_ntab_adjustpower0);
+	ntab_upload(dev, B43_NTAB_C1_ADJPLT, b43_ntab_adjustpower1);
+	ntab_upload(dev, B43_NTAB_C0_GAINCTL, b43_ntab_gainctl0);
+	ntab_upload(dev, B43_NTAB_C1_GAINCTL, b43_ntab_gainctl1);
+	ntab_upload(dev, B43_NTAB_C0_IQLT, b43_ntab_iqlt0);
+	ntab_upload(dev, B43_NTAB_C1_IQLT, b43_ntab_iqlt1);
+	ntab_upload(dev, B43_NTAB_C0_LOFEEDTH, b43_ntab_loftlt0);
+	ntab_upload(dev, B43_NTAB_C1_LOFEEDTH, b43_ntab_loftlt1);
+}
+
+static void b43_nphy_workarounds(struct b43_wldev *dev)
+{
+	struct b43_phy *phy = &dev->phy;
+	unsigned int i;
+
+	b43_phy_set(dev, B43_NPHY_IQFLIP,
+		    B43_NPHY_IQFLIP_ADC1 | B43_NPHY_IQFLIP_ADC2);
+	if (1 /* FIXME band is 2.4GHz */) {
+		b43_phy_set(dev, B43_NPHY_CLASSCTL,
+			    B43_NPHY_CLASSCTL_CCKEN);
+	} else {
+		b43_phy_mask(dev, B43_NPHY_CLASSCTL,
+			     ~B43_NPHY_CLASSCTL_CCKEN);
+	}
+	b43_radio_set(dev, B2055_C1_TX_RF_SPARE, 0x8);
+	b43_phy_write(dev, B43_NPHY_TXFRAMEDELAY, 8);
+
+	/* Fixup some tables */
+	b43_ntab_write(dev, B43_NTAB16(8, 0x00), 0xA);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x10), 0xA);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x02), 0xCDAA);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x12), 0xCDAA);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x08), 0);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x18), 0);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x07), 0x7AAB);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x17), 0x7AAB);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x06), 0x800);
+	b43_ntab_write(dev, B43_NTAB16(8, 0x16), 0x800);
+
+	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO1, 0x2D8);
+	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP1, 0x301);
+	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO2, 0x2D8);
+	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP2, 0x301);
+
+	//TODO set RF sequence
+
+	/* Set narrowband clip threshold */
+	b43_phy_write(dev, B43_NPHY_C1_NBCLIPTHRES, 66);
+	b43_phy_write(dev, B43_NPHY_C2_NBCLIPTHRES, 66);
+
+	/* Set wideband clip 2 threshold */
+	b43_phy_maskset(dev, B43_NPHY_C1_CLIPWBTHRES,
+			~B43_NPHY_C1_CLIPWBTHRES_CLIP2,
+			21 << B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT);
+	b43_phy_maskset(dev, B43_NPHY_C2_CLIPWBTHRES,
+			~B43_NPHY_C2_CLIPWBTHRES_CLIP2,
+			21 << B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT);
+
+	/* Set Clip 2 detect */
+	b43_phy_set(dev, B43_NPHY_C1_CGAINI,
+		    B43_NPHY_C1_CGAINI_CL2DETECT);
+	b43_phy_set(dev, B43_NPHY_C2_CGAINI,
+		    B43_NPHY_C2_CGAINI_CL2DETECT);
+
+	if (0 /*FIXME*/) {
+		/* Set dwell lengths */
+		b43_phy_write(dev, B43_NPHY_CLIP1_NBDWELL_LEN, 43);
+		b43_phy_write(dev, B43_NPHY_CLIP2_NBDWELL_LEN, 43);
+		b43_phy_write(dev, B43_NPHY_W1CLIP1_DWELL_LEN, 9);
+		b43_phy_write(dev, B43_NPHY_W1CLIP2_DWELL_LEN, 9);
+
+		/* Set gain backoff */
+		b43_phy_maskset(dev, B43_NPHY_C1_CGAINI,
+				~B43_NPHY_C1_CGAINI_GAINBKOFF,
+				1 << B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT);
+		b43_phy_maskset(dev, B43_NPHY_C2_CGAINI,
+				~B43_NPHY_C2_CGAINI_GAINBKOFF,
+				1 << B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT);
+
+		/* Set HPVGA2 index */
+		b43_phy_maskset(dev, B43_NPHY_C1_INITGAIN,
+				~B43_NPHY_C1_INITGAIN_HPVGA2,
+				6 << B43_NPHY_C1_INITGAIN_HPVGA2_SHIFT);
+		b43_phy_maskset(dev, B43_NPHY_C2_INITGAIN,
+				~B43_NPHY_C2_INITGAIN_HPVGA2,
+				6 << B43_NPHY_C2_INITGAIN_HPVGA2_SHIFT);
+
+		//FIXME verify that the specs really mean to use autoinc here.
+		for (i = 0; i < 3; i++)
+			b43_ntab_write(dev, B43_NTAB16(7, 0x106) + i, 0x673);
+	}
+
+	/* Set minimum gain value */
+	b43_phy_maskset(dev, B43_NPHY_C1_MINMAX_GAIN,
+			~B43_NPHY_C1_MINGAIN,
+			23 << B43_NPHY_C1_MINGAIN_SHIFT);
+	b43_phy_maskset(dev, B43_NPHY_C2_MINMAX_GAIN,
+			~B43_NPHY_C2_MINGAIN,
+			23 << B43_NPHY_C2_MINGAIN_SHIFT);
+
+	if (phy->rev < 2) {
+		b43_phy_mask(dev, B43_NPHY_SCRAM_SIGCTL,
+			     ~B43_NPHY_SCRAM_SIGCTL_SCM);
+	}
+
+	/* Set phase track alpha and beta */
+	b43_phy_write(dev, B43_NPHY_PHASETR_A0, 0x125);
+	b43_phy_write(dev, B43_NPHY_PHASETR_A1, 0x1B3);
+	b43_phy_write(dev, B43_NPHY_PHASETR_A2, 0x105);
+	b43_phy_write(dev, B43_NPHY_PHASETR_B0, 0x16E);
+	b43_phy_write(dev, B43_NPHY_PHASETR_B1, 0xCD);
+	b43_phy_write(dev, B43_NPHY_PHASETR_B2, 0x20);
+}
+
+static void b43_nphy_reset_cca(struct b43_wldev *dev)
+{
+	u16 bbcfg;
+
+	ssb_write32(dev->dev, SSB_TMSLOW,
+		    ssb_read32(dev->dev, SSB_TMSLOW) | SSB_TMSLOW_FGC);
+	bbcfg = b43_phy_read(dev, B43_NPHY_BBCFG);
+	b43_phy_set(dev, B43_NPHY_BBCFG, B43_NPHY_BBCFG_RSTCCA);
+	b43_phy_write(dev, B43_NPHY_BBCFG,
+		      bbcfg & ~B43_NPHY_BBCFG_RSTCCA);
+	ssb_write32(dev->dev, SSB_TMSLOW,
+		    ssb_read32(dev->dev, SSB_TMSLOW) & ~SSB_TMSLOW_FGC);
+}
+
+enum b43_nphy_rf_sequence {
+	B43_RFSEQ_RX2TX,
+	B43_RFSEQ_TX2RX,
+	B43_RFSEQ_RESET2RX,
+	B43_RFSEQ_UPDATE_GAINH,
+	B43_RFSEQ_UPDATE_GAINL,
+	B43_RFSEQ_UPDATE_GAINU,
+};
+
+static void b43_nphy_force_rf_sequence(struct b43_wldev *dev,
+				       enum b43_nphy_rf_sequence seq)
+{
+	static const u16 trigger[] = {
+		[B43_RFSEQ_RX2TX]		= B43_NPHY_RFSEQTR_RX2TX,
+		[B43_RFSEQ_TX2RX]		= B43_NPHY_RFSEQTR_TX2RX,
+		[B43_RFSEQ_RESET2RX]		= B43_NPHY_RFSEQTR_RST2RX,
+		[B43_RFSEQ_UPDATE_GAINH]	= B43_NPHY_RFSEQTR_UPGH,
+		[B43_RFSEQ_UPDATE_GAINL]	= B43_NPHY_RFSEQTR_UPGL,
+		[B43_RFSEQ_UPDATE_GAINU]	= B43_NPHY_RFSEQTR_UPGU,
+	};
+	int i;
+
+	B43_WARN_ON(seq >= ARRAY_SIZE(trigger));
+
+	b43_phy_set(dev, B43_NPHY_RFSEQMODE,
+		    B43_NPHY_RFSEQMODE_CAOVER | B43_NPHY_RFSEQMODE_TROVER);
+	b43_phy_set(dev, B43_NPHY_RFSEQTR, trigger[seq]);
+	for (i = 0; i < 200; i++) {
+		if (!(b43_phy_read(dev, B43_NPHY_RFSEQST) & trigger[seq]))
+			goto ok;
+		msleep(1);
+	}
+	b43err(dev->wl, "RF sequence status timeout\n");
+ok:
+	b43_phy_mask(dev, B43_NPHY_RFSEQMODE,
+		     ~(B43_NPHY_RFSEQMODE_CAOVER | B43_NPHY_RFSEQMODE_TROVER));
+}
+
+static void b43_nphy_bphy_init(struct b43_wldev *dev)
+{
+	unsigned int i;
+	u16 val;
+
+	val = 0x1E1F;
+	for (i = 0; i < 14; i++) {
+		b43_phy_write(dev, B43_PHY_N_BMODE(0x88 + i), val);
+		val -= 0x202;
+	}
+	val = 0x3E3F;
+	for (i = 0; i < 16; i++) {
+		b43_phy_write(dev, B43_PHY_N_BMODE(0x97 + i), val);
+		val -= 0x202;
+	}
+	b43_phy_write(dev, B43_PHY_N_BMODE(0x38), 0x668);
+}
+
+/* RSSI Calibration */
+static void b43_nphy_rssi_cal(struct b43_wldev *dev, u8 type)
+{
+	//TODO
+}
+
+int b43_phy_initn(struct b43_wldev *dev)
+{
+	struct b43_phy *phy = &dev->phy;
+	u16 tmp;
+
+	//TODO: Spectral management
+	b43_nphy_tables_init(dev);
+
+	/* Clear all overrides */
+	b43_phy_write(dev, B43_NPHY_RFCTL_OVER, 0);
+	b43_phy_write(dev, B43_NPHY_RFCTL_INTC1, 0);
+	b43_phy_write(dev, B43_NPHY_RFCTL_INTC2, 0);
+	b43_phy_write(dev, B43_NPHY_RFCTL_INTC3, 0);
+	b43_phy_write(dev, B43_NPHY_RFCTL_INTC4, 0);
+	b43_phy_mask(dev, B43_NPHY_RFSEQMODE,
+		     ~(B43_NPHY_RFSEQMODE_CAOVER |
+		       B43_NPHY_RFSEQMODE_TROVER));
+	b43_phy_write(dev, B43_NPHY_AFECTL_OVER, 0);
+
+	tmp = (phy->rev < 2) ? 64 : 59;
+	b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
+			~B43_NPHY_BPHY_CTL3_SCALE,
+			tmp << B43_NPHY_BPHY_CTL3_SCALE_SHIFT);
+
+	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_20M, 0x20);
+	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_40M, 0x20);
+
+	b43_phy_write(dev, B43_NPHY_TXREALFD, 184);
+	b43_phy_write(dev, B43_NPHY_MIMO_CRSTXEXT, 200);
+	b43_phy_write(dev, B43_NPHY_PLOAD_CSENSE_EXTLEN, 80);
+	b43_phy_write(dev, B43_NPHY_C2_BCLIPBKOFF, 511);
+
+	//TODO MIMO-Config
+	//TODO Update TX/RX chain
+
+	if (phy->rev < 2) {
+		b43_phy_write(dev, B43_NPHY_DUP40_GFBL, 0xAA8);
+		b43_phy_write(dev, B43_NPHY_DUP40_BL, 0x9A4);
+	}
+	b43_nphy_workarounds(dev);
+	b43_nphy_reset_cca(dev);
+
+	ssb_write32(dev->dev, SSB_TMSLOW,
+		    ssb_read32(dev->dev, SSB_TMSLOW) | B43_TMSLOW_MACPHYCLKEN);
+	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RX2TX);
+	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RESET2RX);
+
+	b43_phy_read(dev, B43_NPHY_CLASSCTL); /* dummy read */
+	//TODO read core1/2 clip1 thres regs
+
+	if (1 /* FIXME Band is 2.4GHz */)
+		b43_nphy_bphy_init(dev);
+	//TODO disable TX power control
+	//TODO Fix the TX power settings
+	//TODO Init periodic calibration with reason 3
+	b43_nphy_rssi_cal(dev, 2);
+	b43_nphy_rssi_cal(dev, 0);
+	b43_nphy_rssi_cal(dev, 1);
+	//TODO get TX gain
+	//TODO init superswitch
+	//TODO calibrate LO
+	//TODO idle TSSI TX pctl
+	//TODO TX power control power setup
+	//TODO table writes
+	//TODO TX power control coefficients
+	//TODO enable TX power control
+	//TODO control antenna selection
+	//TODO init radar detection
+	//TODO reset channel if changed
+
+	b43err(dev->wl, "IEEE 802.11n devices are not supported, yet.\n");
+	return 0;
+}
+
+static int b43_nphy_op_allocate(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy;
+
+	nphy = kzalloc(sizeof(*nphy), GFP_KERNEL);
+	if (!nphy)
+		return -ENOMEM;
+	dev->phy.n = nphy;
+
+	//TODO init struct b43_phy_n
+
+	return 0;
+}
+
+static int b43_nphy_op_init(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy = dev->phy.n;
+	int err;
+
+	err = b43_phy_initn(dev);
+	if (err)
+		return err;
+	nphy->initialised = 1;
+
+	return 0;
+}
+
+static void b43_nphy_op_exit(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy = dev->phy.n;
+
+	if (nphy->initialised) {
+		//TODO
+		nphy->initialised = 0;
+	}
+	//TODO
+	kfree(nphy);
+	dev->phy.n = NULL;
+}
+
+static inline void check_phyreg(struct b43_wldev *dev, u16 offset)
+{
+#if B43_DEBUG
+	if ((offset & B43_PHYROUTE) == B43_PHYROUTE_OFDM_GPHY) {
+		/* OFDM registers are onnly available on A/G-PHYs */
+		b43err(dev->wl, "Invalid OFDM PHY access at "
+		       "0x%04X on N-PHY\n", offset);
+		dump_stack();
+	}
+	if ((offset & B43_PHYROUTE) == B43_PHYROUTE_EXT_GPHY) {
+		/* Ext-G registers are only available on G-PHYs */
+		b43err(dev->wl, "Invalid EXT-G PHY access at "
+		       "0x%04X on N-PHY\n", offset);
+		dump_stack();
+	}
+#endif /* B43_DEBUG */
+}
+
+static u16 b43_nphy_op_read(struct b43_wldev *dev, u16 reg)
+{
+	check_phyreg(dev, reg);
+	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
+	return b43_read16(dev, B43_MMIO_PHY_DATA);
+}
+
+static void b43_nphy_op_write(struct b43_wldev *dev, u16 reg, u16 value)
+{
+	check_phyreg(dev, reg);
+	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
+	b43_write16(dev, B43_MMIO_PHY_DATA, value);
+}
+
+static u16 b43_nphy_op_radio_read(struct b43_wldev *dev, u16 reg)
+{
+	/* Register 1 is a 32-bit register. */
+	B43_WARN_ON(reg == 1);
+	/* N-PHY needs 0x100 for read access */
+	reg |= 0x100;
+
+	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
+	return b43_read16(dev, B43_MMIO_RADIO_DATA_LOW);
+}
+
+static void b43_nphy_op_radio_write(struct b43_wldev *dev, u16 reg, u16 value)
+{
+	/* Register 1 is a 32-bit register. */
+	B43_WARN_ON(reg == 1);
+
+	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
+	b43_write16(dev, B43_MMIO_RADIO_DATA_LOW, value);
+}
+
+static void b43_nphy_op_software_rfkill(struct b43_wldev *dev,
+					enum rfkill_state state)
+{//TODO
+}
+
+static int b43_nphy_op_switch_channel(struct b43_wldev *dev,
+				      unsigned int new_channel)
+{
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ) {
+		if ((new_channel < 1) || (new_channel > 14))
+			return -EINVAL;
+	} else {
+		if (new_channel > 200)
+			return -EINVAL;
+	}
+
+	return nphy_channel_switch(dev, new_channel);
+}
+
+static unsigned int b43_nphy_op_get_default_chan(struct b43_wldev *dev)
+{
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)
+		return 1;
+	return 36;
+}
+
+const struct b43_phy_operations b43_phyops_n = {
+	.allocate		= b43_nphy_op_allocate,
+	.init			= b43_nphy_op_init,
+	.exit			= b43_nphy_op_exit,
+	.phy_read		= b43_nphy_op_read,
+	.phy_write		= b43_nphy_op_write,
+	.radio_read		= b43_nphy_op_radio_read,
+	.radio_write		= b43_nphy_op_radio_write,
+	.software_rfkill	= b43_nphy_op_software_rfkill,
+	.switch_channel		= b43_nphy_op_switch_channel,
+	.get_default_chan	= b43_nphy_op_get_default_chan,
+	.recalc_txpower		= b43_nphy_op_recalc_txpower,
+	.adjust_txpower		= b43_nphy_op_adjust_txpower,
+};
Index: wireless-testing/drivers/net/wireless/b43/phy_n.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/phy_n.h	2008-08-30 02:16:07.000000000 +0200
@@ -0,0 +1,932 @@
+#ifndef B43_NPHY_H_
+#define B43_NPHY_H_
+
+#include "phy_common.h"
+
+
+/* N-PHY registers. */
+
+#define B43_NPHY_BBCFG				B43_PHY_N(0x001) /* BB config */
+#define  B43_NPHY_BBCFG_RSTCCA			0x4000 /* Reset CCA */
+#define  B43_NPHY_BBCFG_RSTRX			0x8000 /* Reset RX */
+#define B43_NPHY_CHANNEL			B43_PHY_N(0x005) /* Channel */
+#define B43_NPHY_TXERR				B43_PHY_N(0x007) /* TX error */
+#define B43_NPHY_BANDCTL			B43_PHY_N(0x009) /* Band control */
+#define  B43_NPHY_BANDCTL_5GHZ			0x0001 /* Use the 5GHz band */
+#define B43_NPHY_4WI_ADDR			B43_PHY_N(0x00B) /* Four-wire bus address */
+#define B43_NPHY_4WI_DATAHI			B43_PHY_N(0x00C) /* Four-wire bus data high */
+#define B43_NPHY_4WI_DATALO			B43_PHY_N(0x00D) /* Four-wire bus data low */
+#define B43_NPHY_BIST_STAT0			B43_PHY_N(0x00E) /* Built-in self test status 0 */
+#define B43_NPHY_BIST_STAT1			B43_PHY_N(0x00F) /* Built-in self test status 1 */
+
+#define B43_NPHY_C1_DESPWR			B43_PHY_N(0x018) /* Core 1 desired power */
+#define B43_NPHY_C1_CCK_DESPWR			B43_PHY_N(0x019) /* Core 1 CCK desired power */
+#define B43_NPHY_C1_BCLIPBKOFF			B43_PHY_N(0x01A) /* Core 1 barely clip backoff */
+#define B43_NPHY_C1_CCK_BCLIPBKOFF		B43_PHY_N(0x01B) /* Core 1 CCK barely clip backoff */
+#define B43_NPHY_C1_CGAINI			B43_PHY_N(0x01C) /* Core 1 compute gain info */
+#define  B43_NPHY_C1_CGAINI_GAINBKOFF		0x001F /* Gain backoff */
+#define  B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT	0
+#define  B43_NPHY_C1_CGAINI_CLIPGBKOFF		0x03E0 /* Clip gain backoff */
+#define  B43_NPHY_C1_CGAINI_CLIPGBKOFF_SHIFT	5
+#define  B43_NPHY_C1_CGAINI_GAINSTEP		0x1C00 /* Gain step */
+#define  B43_NPHY_C1_CGAINI_GAINSTEP_SHIFT	10
+#define  B43_NPHY_C1_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
+#define B43_NPHY_C1_CCK_CGAINI			B43_PHY_N(0x01D) /* Core 1 CCK compute gain info */
+#define  B43_NPHY_C1_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
+#define  B43_NPHY_C1_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip gain backoff */
+#define B43_NPHY_C1_MINMAX_GAIN			B43_PHY_N(0x01E) /* Core 1 min/max gain */
+#define  B43_NPHY_C1_MINGAIN			0x00FF /* Minimum gain */
+#define  B43_NPHY_C1_MINGAIN_SHIFT		0
+#define  B43_NPHY_C1_MAXGAIN			0xFF00 /* Maximum gain */
+#define  B43_NPHY_C1_MAXGAIN_SHIFT		8
+#define B43_NPHY_C1_CCK_MINMAX_GAIN		B43_PHY_N(0x01F) /* Core 1 CCK min/max gain */
+#define  B43_NPHY_C1_CCK_MINGAIN		0x00FF /* Minimum gain */
+#define  B43_NPHY_C1_CCK_MINGAIN_SHIFT		0
+#define  B43_NPHY_C1_CCK_MAXGAIN		0xFF00 /* Maximum gain */
+#define  B43_NPHY_C1_CCK_MAXGAIN_SHIFT		8
+#define B43_NPHY_C1_INITGAIN			B43_PHY_N(0x020) /* Core 1 initial gain code */
+#define  B43_NPHY_C1_INITGAIN_EXTLNA		0x0001 /* External LNA index */
+#define  B43_NPHY_C1_INITGAIN_LNA		0x0006 /* LNA index */
+#define  B43_NPHY_C1_INITGAIN_LNAIDX_SHIFT	1
+#define  B43_NPHY_C1_INITGAIN_HPVGA1		0x0078 /* HPVGA1 index */
+#define  B43_NPHY_C1_INITGAIN_HPVGA1_SHIFT	3
+#define  B43_NPHY_C1_INITGAIN_HPVGA2		0x0F80 /* HPVGA2 index */
+#define  B43_NPHY_C1_INITGAIN_HPVGA2_SHIFT	7
+#define  B43_NPHY_C1_INITGAIN_TRRX		0x1000 /* TR RX index */
+#define  B43_NPHY_C1_INITGAIN_TRTX		0x2000 /* TR TX index */
+#define B43_NPHY_C1_CLIP1_HIGAIN		B43_PHY_N(0x021) /* Core 1 clip1 high gain code */
+#define B43_NPHY_C1_CLIP1_MEDGAIN		B43_PHY_N(0x022) /* Core 1 clip1 medium gain code */
+#define B43_NPHY_C1_CLIP1_LOGAIN		B43_PHY_N(0x023) /* Core 1 clip1 low gain code */
+#define B43_NPHY_C1_CLIP2_GAIN			B43_PHY_N(0x024) /* Core 1 clip2 gain code */
+#define B43_NPHY_C1_FILTERGAIN			B43_PHY_N(0x025) /* Core 1 filter gain */
+#define B43_NPHY_C1_LPF_QHPF_BW			B43_PHY_N(0x026) /* Core 1 LPF Q HP F bandwidth */
+#define B43_NPHY_C1_CLIPWBTHRES			B43_PHY_N(0x027) /* Core 1 clip wideband threshold */
+#define  B43_NPHY_C1_CLIPWBTHRES_CLIP2		0x003F /* Clip 2 */
+#define  B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT	0
+#define  B43_NPHY_C1_CLIPWBTHRES_CLIP1		0x0FC0 /* Clip 1 */
+#define  B43_NPHY_C1_CLIPWBTHRES_CLIP1_SHIFT	6
+#define B43_NPHY_C1_W1THRES			B43_PHY_N(0x028) /* Core 1 W1 threshold */
+#define B43_NPHY_C1_EDTHRES			B43_PHY_N(0x029) /* Core 1 ED threshold */
+#define B43_NPHY_C1_SMSIGTHRES			B43_PHY_N(0x02A) /* Core 1 small sig threshold */
+#define B43_NPHY_C1_NBCLIPTHRES			B43_PHY_N(0x02B) /* Core 1 NB clip threshold */
+#define B43_NPHY_C1_CLIP1THRES			B43_PHY_N(0x02C) /* Core 1 clip1 threshold */
+#define B43_NPHY_C1_CLIP2THRES			B43_PHY_N(0x02D) /* Core 1 clip2 threshold */
+
+#define B43_NPHY_C2_DESPWR			B43_PHY_N(0x02E) /* Core 2 desired power */
+#define B43_NPHY_C2_CCK_DESPWR			B43_PHY_N(0x02F) /* Core 2 CCK desired power */
+#define B43_NPHY_C2_BCLIPBKOFF			B43_PHY_N(0x030) /* Core 2 barely clip backoff */
+#define B43_NPHY_C2_CCK_BCLIPBKOFF		B43_PHY_N(0x031) /* Core 2 CCK barely clip backoff */
+#define B43_NPHY_C2_CGAINI			B43_PHY_N(0x032) /* Core 2 compute gain info */
+#define  B43_NPHY_C2_CGAINI_GAINBKOFF		0x001F /* Gain backoff */
+#define  B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT	0
+#define  B43_NPHY_C2_CGAINI_CLIPGBKOFF		0x03E0 /* Clip gain backoff */
+#define  B43_NPHY_C2_CGAINI_CLIPGBKOFF_SHIFT	5
+#define  B43_NPHY_C2_CGAINI_GAINSTEP		0x1C00 /* Gain step */
+#define  B43_NPHY_C2_CGAINI_GAINSTEP_SHIFT	10
+#define  B43_NPHY_C2_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
+#define B43_NPHY_C2_CCK_CGAINI			B43_PHY_N(0x033) /* Core 2 CCK compute gain info */
+#define  B43_NPHY_C2_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
+#define  B43_NPHY_C2_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip gain backoff */
+#define B43_NPHY_C2_MINMAX_GAIN			B43_PHY_N(0x034) /* Core 2 min/max gain */
+#define  B43_NPHY_C2_MINGAIN			0x00FF /* Minimum gain */
+#define  B43_NPHY_C2_MINGAIN_SHIFT		0
+#define  B43_NPHY_C2_MAXGAIN			0xFF00 /* Maximum gain */
+#define  B43_NPHY_C2_MAXGAIN_SHIFT		8
+#define B43_NPHY_C2_CCK_MINMAX_GAIN		B43_PHY_N(0x035) /* Core 2 CCK min/max gain */
+#define  B43_NPHY_C2_CCK_MINGAIN		0x00FF /* Minimum gain */
+#define  B43_NPHY_C2_CCK_MINGAIN_SHIFT		0
+#define  B43_NPHY_C2_CCK_MAXGAIN		0xFF00 /* Maximum gain */
+#define  B43_NPHY_C2_CCK_MAXGAIN_SHIFT		8
+#define B43_NPHY_C2_INITGAIN			B43_PHY_N(0x036) /* Core 2 initial gain code */
+#define  B43_NPHY_C2_INITGAIN_EXTLNA		0x0001 /* External LNA index */
+#define  B43_NPHY_C2_INITGAIN_LNA		0x0006 /* LNA index */
+#define  B43_NPHY_C2_INITGAIN_LNAIDX_SHIFT	1
+#define  B43_NPHY_C2_INITGAIN_HPVGA1		0x0078 /* HPVGA1 index */
+#define  B43_NPHY_C2_INITGAIN_HPVGA1_SHIFT	3
+#define  B43_NPHY_C2_INITGAIN_HPVGA2		0x0F80 /* HPVGA2 index */
+#define  B43_NPHY_C2_INITGAIN_HPVGA2_SHIFT	7
+#define  B43_NPHY_C2_INITGAIN_TRRX		0x1000 /* TR RX index */
+#define  B43_NPHY_C2_INITGAIN_TRTX		0x2000 /* TR TX index */
+#define B43_NPHY_C2_CLIP1_HIGAIN		B43_PHY_N(0x037) /* Core 2 clip1 high gain code */
+#define B43_NPHY_C2_CLIP1_MEDGAIN		B43_PHY_N(0x038) /* Core 2 clip1 medium gain code */
+#define B43_NPHY_C2_CLIP1_LOGAIN		B43_PHY_N(0x039) /* Core 2 clip1 low gain code */
+#define B43_NPHY_C2_CLIP2_GAIN			B43_PHY_N(0x03A) /* Core 2 clip2 gain code */
+#define B43_NPHY_C2_FILTERGAIN			B43_PHY_N(0x03B) /* Core 2 filter gain */
+#define B43_NPHY_C2_LPF_QHPF_BW			B43_PHY_N(0x03C) /* Core 2 LPF Q HP F bandwidth */
+#define B43_NPHY_C2_CLIPWBTHRES			B43_PHY_N(0x03D) /* Core 2 clip wideband threshold */
+#define  B43_NPHY_C2_CLIPWBTHRES_CLIP2		0x003F /* Clip 2 */
+#define  B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT	0
+#define  B43_NPHY_C2_CLIPWBTHRES_CLIP1		0x0FC0 /* Clip 1 */
+#define  B43_NPHY_C2_CLIPWBTHRES_CLIP1_SHIFT	6
+#define B43_NPHY_C2_W1THRES			B43_PHY_N(0x03E) /* Core 2 W1 threshold */
+#define B43_NPHY_C2_EDTHRES			B43_PHY_N(0x03F) /* Core 2 ED threshold */
+#define B43_NPHY_C2_SMSIGTHRES			B43_PHY_N(0x040) /* Core 2 small sig threshold */
+#define B43_NPHY_C2_NBCLIPTHRES			B43_PHY_N(0x041) /* Core 2 NB clip threshold */
+#define B43_NPHY_C2_CLIP1THRES			B43_PHY_N(0x042) /* Core 2 clip1 threshold */
+#define B43_NPHY_C2_CLIP2THRES			B43_PHY_N(0x043) /* Core 2 clip2 threshold */
+
+#define B43_NPHY_CRS_THRES1			B43_PHY_N(0x044) /* CRS threshold 1 */
+#define B43_NPHY_CRS_THRES2			B43_PHY_N(0x045) /* CRS threshold 2 */
+#define B43_NPHY_CRS_THRES3			B43_PHY_N(0x046) /* CRS threshold 3 */
+#define B43_NPHY_CRSCTL				B43_PHY_N(0x047) /* CRS control */
+#define B43_NPHY_DCFADDR			B43_PHY_N(0x048) /* DC filter address */
+#define B43_NPHY_RXF20_NUM0			B43_PHY_N(0x049) /* RX filter 20 numerator 0 */
+#define B43_NPHY_RXF20_NUM1			B43_PHY_N(0x04A) /* RX filter 20 numerator 1 */
+#define B43_NPHY_RXF20_NUM2			B43_PHY_N(0x04B) /* RX filter 20 numerator 2 */
+#define B43_NPHY_RXF20_DENOM0			B43_PHY_N(0x04C) /* RX filter 20 denominator 0 */
+#define B43_NPHY_RXF20_DENOM1			B43_PHY_N(0x04D) /* RX filter 20 denominator 1 */
+#define B43_NPHY_RXF20_NUM10			B43_PHY_N(0x04E) /* RX filter 20 numerator 10 */
+#define B43_NPHY_RXF20_NUM11			B43_PHY_N(0x04F) /* RX filter 20 numerator 11 */
+#define B43_NPHY_RXF20_NUM12			B43_PHY_N(0x050) /* RX filter 20 numerator 12 */
+#define B43_NPHY_RXF20_DENOM10			B43_PHY_N(0x051) /* RX filter 20 denominator 10 */
+#define B43_NPHY_RXF20_DENOM11			B43_PHY_N(0x052) /* RX filter 20 denominator 11 */
+#define B43_NPHY_RXF40_NUM0			B43_PHY_N(0x053) /* RX filter 40 numerator 0 */
+#define B43_NPHY_RXF40_NUM1			B43_PHY_N(0x054) /* RX filter 40 numerator 1 */
+#define B43_NPHY_RXF40_NUM2			B43_PHY_N(0x055) /* RX filter 40 numerator 2 */
+#define B43_NPHY_RXF40_DENOM0			B43_PHY_N(0x056) /* RX filter 40 denominator 0 */
+#define B43_NPHY_RXF40_DENOM1			B43_PHY_N(0x057) /* RX filter 40 denominator 1 */
+#define B43_NPHY_RXF40_NUM10			B43_PHY_N(0x058) /* RX filter 40 numerator 10 */
+#define B43_NPHY_RXF40_NUM11			B43_PHY_N(0x059) /* RX filter 40 numerator 11 */
+#define B43_NPHY_RXF40_NUM12			B43_PHY_N(0x05A) /* RX filter 40 numerator 12 */
+#define B43_NPHY_RXF40_DENOM10			B43_PHY_N(0x05B) /* RX filter 40 denominator 10 */
+#define B43_NPHY_RXF40_DENOM11			B43_PHY_N(0x05C) /* RX filter 40 denominator 11 */
+#define B43_NPHY_PPROC_RSTLEN			B43_PHY_N(0x060) /* Packet processing reset length */
+#define B43_NPHY_INITCARR_DLEN			B43_PHY_N(0x061) /* Initial carrier detection length */
+#define B43_NPHY_CLIP1CARR_DLEN			B43_PHY_N(0x062) /* Clip1 carrier detection length */
+#define B43_NPHY_CLIP2CARR_DLEN			B43_PHY_N(0x063) /* Clip2 carrier detection length */
+#define B43_NPHY_INITGAIN_SLEN			B43_PHY_N(0x064) /* Initial gain settle length */
+#define B43_NPHY_CLIP1GAIN_SLEN			B43_PHY_N(0x065) /* Clip1 gain settle length */
+#define B43_NPHY_CLIP2GAIN_SLEN			B43_PHY_N(0x066) /* Clip2 gain settle length */
+#define B43_NPHY_PACKGAIN_SLEN			B43_PHY_N(0x067) /* Packet gain settle length */
+#define B43_NPHY_CARRSRC_TLEN			B43_PHY_N(0x068) /* Carrier search timeout length */
+#define B43_NPHY_TISRC_TLEN			B43_PHY_N(0x069) /* Timing search timeout length */
+#define B43_NPHY_ENDROP_TLEN			B43_PHY_N(0x06A) /* Energy drop timeout length */
+#define B43_NPHY_CLIP1_NBDWELL_LEN		B43_PHY_N(0x06B) /* Clip1 NB dwell length */
+#define B43_NPHY_CLIP2_NBDWELL_LEN		B43_PHY_N(0x06C) /* Clip2 NB dwell length */
+#define B43_NPHY_W1CLIP1_DWELL_LEN		B43_PHY_N(0x06D) /* W1 clip1 dwell length */
+#define B43_NPHY_W1CLIP2_DWELL_LEN		B43_PHY_N(0x06E) /* W1 clip2 dwell length */
+#define B43_NPHY_W2CLIP1_DWELL_LEN		B43_PHY_N(0x06F) /* W2 clip1 dwell length */
+#define B43_NPHY_PLOAD_CSENSE_EXTLEN		B43_PHY_N(0x070) /* Payload carrier sense extension length */
+#define B43_NPHY_EDROP_CSENSE_EXTLEN		B43_PHY_N(0x071) /* Energy drop carrier sense extension length */
+#define B43_NPHY_TABLE_ADDR			B43_PHY_N(0x072) /* Table address */
+#define B43_NPHY_TABLE_DATALO			B43_PHY_N(0x073) /* Table data low */
+#define B43_NPHY_TABLE_DATAHI			B43_PHY_N(0x074) /* Table data high */
+#define B43_NPHY_WWISE_LENIDX			B43_PHY_N(0x075) /* WWiSE length index */
+#define B43_NPHY_TGNSYNC_LENIDX			B43_PHY_N(0x076) /* TGNsync length index */
+#define B43_NPHY_TXMACIF_HOLDOFF		B43_PHY_N(0x077) /* TX MAC IF Hold off */
+#define B43_NPHY_RFCTL_CMD			B43_PHY_N(0x078) /* RF control (command) */
+#define  B43_NPHY_RFCTL_CMD_START		0x0001 /* Start sequence */
+#define  B43_NPHY_RFCTL_CMD_RXTX		0x0002 /* RX/TX */
+#define  B43_NPHY_RFCTL_CMD_CORESEL		0x0038 /* Core select */
+#define  B43_NPHY_RFCTL_CMD_CORESEL_SHIFT	3
+#define  B43_NPHY_RFCTL_CMD_PORFORCE		0x0040 /* POR force */
+#define  B43_NPHY_RFCTL_CMD_OEPORFORCE		0x0080 /* OE POR force */
+#define  B43_NPHY_RFCTL_CMD_RXEN		0x0100 /* RX enable */
+#define  B43_NPHY_RFCTL_CMD_TXEN		0x0200 /* TX enable */
+#define  B43_NPHY_RFCTL_CMD_CHIP0PU		0x0400 /* Chip0 PU */
+#define  B43_NPHY_RFCTL_CMD_EN			0x0800 /* Radio enabled */
+#define  B43_NPHY_RFCTL_CMD_SEQENCORE		0xF000 /* Seq en core */
+#define  B43_NPHY_RFCTL_CMD_SEQENCORE_SHIFT	12
+#define B43_NPHY_RFCTL_RSSIO1			B43_PHY_N(0x07A) /* RF control (RSSI others 1) */
+#define  B43_NPHY_RFCTL_RSSIO1_RXPD		0x0001 /* RX PD */
+#define  B43_NPHY_RFCTL_RSSIO1_TXPD		0x0002 /* TX PD */
+#define  B43_NPHY_RFCTL_RSSIO1_PAPD		0x0004 /* PA PD */
+#define  B43_NPHY_RFCTL_RSSIO1_RSSICTL		0x0030 /* RSSI control */
+#define  B43_NPHY_RFCTL_RSSIO1_LPFBW		0x00C0 /* LPF bandwidth */
+#define  B43_NPHY_RFCTL_RSSIO1_HPFBWHI		0x0100 /* HPF bandwidth high */
+#define  B43_NPHY_RFCTL_RSSIO1_HIQDISCO		0x0200 /* HIQ dis core */
+#define B43_NPHY_RFCTL_RXG1			B43_PHY_N(0x07B) /* RF control (RX gain 1) */
+#define B43_NPHY_RFCTL_TXG1			B43_PHY_N(0x07C) /* RF control (TX gain 1) */
+#define B43_NPHY_RFCTL_RSSIO2			B43_PHY_N(0x07D) /* RF control (RSSI others 2) */
+#define  B43_NPHY_RFCTL_RSSIO2_RXPD		0x0001 /* RX PD */
+#define  B43_NPHY_RFCTL_RSSIO2_TXPD		0x0002 /* TX PD */
+#define  B43_NPHY_RFCTL_RSSIO2_PAPD		0x0004 /* PA PD */
+#define  B43_NPHY_RFCTL_RSSIO2_RSSICTL		0x0030 /* RSSI control */
+#define  B43_NPHY_RFCTL_RSSIO2_LPFBW		0x00C0 /* LPF bandwidth */
+#define  B43_NPHY_RFCTL_RSSIO2_HPFBWHI		0x0100 /* HPF bandwidth high */
+#define  B43_NPHY_RFCTL_RSSIO2_HIQDISCO		0x0200 /* HIQ dis core */
+#define B43_NPHY_RFCTL_RXG2			B43_PHY_N(0x07E) /* RF control (RX gain 2) */
+#define B43_NPHY_RFCTL_TXG2			B43_PHY_N(0x07F) /* RF control (TX gain 2) */
+#define B43_NPHY_RFCTL_RSSIO3			B43_PHY_N(0x080) /* RF control (RSSI others 3) */
+#define  B43_NPHY_RFCTL_RSSIO3_RXPD		0x0001 /* RX PD */
+#define  B43_NPHY_RFCTL_RSSIO3_TXPD		0x0002 /* TX PD */
+#define  B43_NPHY_RFCTL_RSSIO3_PAPD		0x0004 /* PA PD */
+#define  B43_NPHY_RFCTL_RSSIO3_RSSICTL		0x0030 /* RSSI control */
+#define  B43_NPHY_RFCTL_RSSIO3_LPFBW		0x00C0 /* LPF bandwidth */
+#define  B43_NPHY_RFCTL_RSSIO3_HPFBWHI		0x0100 /* HPF bandwidth high */
+#define  B43_NPHY_RFCTL_RSSIO3_HIQDISCO		0x0200 /* HIQ dis core */
+#define B43_NPHY_RFCTL_RXG3			B43_PHY_N(0x081) /* RF control (RX gain 3) */
+#define B43_NPHY_RFCTL_TXG3			B43_PHY_N(0x082) /* RF control (TX gain 3) */
+#define B43_NPHY_RFCTL_RSSIO4			B43_PHY_N(0x083) /* RF control (RSSI others 4) */
+#define  B43_NPHY_RFCTL_RSSIO4_RXPD		0x0001 /* RX PD */
+#define  B43_NPHY_RFCTL_RSSIO4_TXPD		0x0002 /* TX PD */
+#define  B43_NPHY_RFCTL_RSSIO4_PAPD		0x0004 /* PA PD */
+#define  B43_NPHY_RFCTL_RSSIO4_RSSICTL		0x0030 /* RSSI control */
+#define  B43_NPHY_RFCTL_RSSIO4_LPFBW		0x00C0 /* LPF bandwidth */
+#define  B43_NPHY_RFCTL_RSSIO4_HPFBWHI		0x0100 /* HPF bandwidth high */
+#define  B43_NPHY_RFCTL_RSSIO4_HIQDISCO		0x0200 /* HIQ dis core */
+#define B43_NPHY_RFCTL_RXG4			B43_PHY_N(0x084) /* RF control (RX gain 4) */
+#define B43_NPHY_RFCTL_TXG4			B43_PHY_N(0x085) /* RF control (TX gain 4) */
+#define B43_NPHY_C1_TXIQ_COMP_OFF		B43_PHY_N(0x087) /* Core 1 TX I/Q comp offset */
+#define B43_NPHY_C2_TXIQ_COMP_OFF		B43_PHY_N(0x088) /* Core 2 TX I/Q comp offset */
+#define B43_NPHY_C1_TXCTL			B43_PHY_N(0x08B) /* Core 1 TX control */
+#define B43_NPHY_C2_TXCTL			B43_PHY_N(0x08C) /* Core 2 TX control */
+#define B43_NPHY_SCRAM_SIGCTL			B43_PHY_N(0x090) /* Scram signal control */
+#define  B43_NPHY_SCRAM_SIGCTL_INITST		0x007F /* Initial state value */
+#define  B43_NPHY_SCRAM_SIGCTL_INITST_SHIFT	0
+#define  B43_NPHY_SCRAM_SIGCTL_SCM		0x0080 /* Scram control mode */
+#define  B43_NPHY_SCRAM_SIGCTL_SICE		0x0100 /* Scram index control enable */
+#define  B43_NPHY_SCRAM_SIGCTL_START		0xFE00 /* Scram start bit */
+#define  B43_NPHY_SCRAM_SIGCTL_START_SHIFT	9
+#define B43_NPHY_RFCTL_INTC1			B43_PHY_N(0x091) /* RF control (intc 1) */
+#define B43_NPHY_RFCTL_INTC2			B43_PHY_N(0x092) /* RF control (intc 2) */
+#define B43_NPHY_RFCTL_INTC3			B43_PHY_N(0x093) /* RF control (intc 3) */
+#define B43_NPHY_RFCTL_INTC4			B43_PHY_N(0x094) /* RF control (intc 4) */
+#define B43_NPHY_NRDTO_WWISE			B43_PHY_N(0x095) /* # datatones WWiSE */
+#define B43_NPHY_NRDTO_TGNSYNC			B43_PHY_N(0x096) /* # datatones TGNsync */
+#define B43_NPHY_SIGFMOD_WWISE			B43_PHY_N(0x097) /* Signal field mod WWiSE */
+#define B43_NPHY_LEG_SIGFMOD_11N		B43_PHY_N(0x098) /* Legacy signal field mod 11n */
+#define B43_NPHY_HT_SIGFMOD_11N			B43_PHY_N(0x099) /* HT signal field mod 11n */
+#define B43_NPHY_C1_RXIQ_COMPA0			B43_PHY_N(0x09A) /* Core 1 RX I/Q comp A0 */
+#define B43_NPHY_C1_RXIQ_COMPB0			B43_PHY_N(0x09B) /* Core 1 RX I/Q comp B0 */
+#define B43_NPHY_C2_RXIQ_COMPA1			B43_PHY_N(0x09C) /* Core 2 RX I/Q comp A1 */
+#define B43_NPHY_C2_RXIQ_COMPB1			B43_PHY_N(0x09D) /* Core 2 RX I/Q comp B1 */
+#define B43_NPHY_RXCTL				B43_PHY_N(0x0A0) /* RX control */
+#define  B43_NPHY_RXCTL_BSELU20			0x0010 /* Band select upper 20 */
+#define  B43_NPHY_RXCTL_RIFSEN			0x0080 /* RIFS enable */
+#define B43_NPHY_RFSEQMODE			B43_PHY_N(0x0A1) /* RF seq mode */
+#define  B43_NPHY_RFSEQMODE_CAOVER		0x0001 /* Core active override */
+#define  B43_NPHY_RFSEQMODE_TROVER		0x0002 /* Trigger override */
+#define B43_NPHY_RFSEQCA			B43_PHY_N(0x0A2) /* RF seq core active */
+#define  B43_NPHY_RFSEQCA_TXEN			0x000F /* TX enable */
+#define  B43_NPHY_RFSEQCA_TXEN_SHIFT		0
+#define  B43_NPHY_RFSEQCA_RXEN			0x00F0 /* RX enable */
+#define  B43_NPHY_RFSEQCA_RXEN_SHIFT		4
+#define  B43_NPHY_RFSEQCA_TXDIS			0x0F00 /* TX disable */
+#define  B43_NPHY_RFSEQCA_TXDIS_SHIFT		8
+#define  B43_NPHY_RFSEQCA_RXDIS			0xF000 /* RX disable */
+#define  B43_NPHY_RFSEQCA_RXDIS_SHIFT		12
+#define B43_NPHY_RFSEQTR			B43_PHY_N(0x0A3) /* RF seq trigger */
+#define  B43_NPHY_RFSEQTR_RX2TX			0x0001 /* RX2TX */
+#define  B43_NPHY_RFSEQTR_TX2RX			0x0002 /* TX2RX */
+#define  B43_NPHY_RFSEQTR_UPGH			0x0004 /* Update gain H */
+#define  B43_NPHY_RFSEQTR_UPGL			0x0008 /* Update gain L */
+#define  B43_NPHY_RFSEQTR_UPGU			0x0010 /* Update gain U */
+#define  B43_NPHY_RFSEQTR_RST2RX		0x0020 /* Reset to RX */
+#define B43_NPHY_RFSEQST			B43_PHY_N(0x0A4) /* RF seq status. Values same as trigger. */
+#define B43_NPHY_AFECTL_OVER			B43_PHY_N(0x0A5) /* AFE control override */
+#define B43_NPHY_AFECTL_C1			B43_PHY_N(0x0A6) /* AFE control core 1 */
+#define B43_NPHY_AFECTL_C2			B43_PHY_N(0x0A7) /* AFE control core 2 */
+#define B43_NPHY_AFECTL_C3			B43_PHY_N(0x0A8) /* AFE control core 3 */
+#define B43_NPHY_AFECTL_C4			B43_PHY_N(0x0A9) /* AFE control core 4 */
+#define B43_NPHY_AFECTL_DACGAIN1		B43_PHY_N(0x0AA) /* AFE control DAC gain 1 */
+#define B43_NPHY_AFECTL_DACGAIN2		B43_PHY_N(0x0AB) /* AFE control DAC gain 2 */
+#define B43_NPHY_AFECTL_DACGAIN3		B43_PHY_N(0x0AC) /* AFE control DAC gain 3 */
+#define B43_NPHY_AFECTL_DACGAIN4		B43_PHY_N(0x0AD) /* AFE control DAC gain 4 */
+#define B43_NPHY_STR_ADDR1			B43_PHY_N(0x0AE) /* STR address 1 */
+#define B43_NPHY_STR_ADDR2			B43_PHY_N(0x0AF) /* STR address 2 */
+#define B43_NPHY_CLASSCTL			B43_PHY_N(0x0B0) /* Classifier control */
+#define  B43_NPHY_CLASSCTL_CCKEN		0x0001 /* CCK enable */
+#define  B43_NPHY_CLASSCTL_OFDMEN		0x0002 /* OFDM enable */
+#define  B43_NPHY_CLASSCTL_WAITEDEN		0x0004 /* Waited enable */
+#define B43_NPHY_IQFLIP				B43_PHY_N(0x0B1) /* I/Q flip */
+#define  B43_NPHY_IQFLIP_ADC1			0x0001 /* ADC1 */
+#define  B43_NPHY_IQFLIP_ADC2			0x0010 /* ADC2 */
+#define B43_NPHY_SISO_SNR_THRES			B43_PHY_N(0x0B2) /* SISO SNR threshold */
+#define B43_NPHY_SIGMA_N_MULT			B43_PHY_N(0x0B3) /* Sigma N multiplier */
+#define B43_NPHY_TXMACDELAY			B43_PHY_N(0x0B4) /* TX MAC delay */
+#define B43_NPHY_TXFRAMEDELAY			B43_PHY_N(0x0B5) /* TX frame delay */
+#define B43_NPHY_MLPARM				B43_PHY_N(0x0B6) /* ML parameters */
+#define B43_NPHY_MLCTL				B43_PHY_N(0x0B7) /* ML control */
+#define B43_NPHY_WWISE_20NCYCDAT		B43_PHY_N(0x0B8) /* WWiSE 20 N cyc data */
+#define B43_NPHY_WWISE_40NCYCDAT		B43_PHY_N(0x0B9) /* WWiSE 40 N cyc data */
+#define B43_NPHY_TGNSYNC_20NCYCDAT		B43_PHY_N(0x0BA) /* TGNsync 20 N cyc data */
+#define B43_NPHY_TGNSYNC_40NCYCDAT		B43_PHY_N(0x0BB) /* TGNsync 40 N cyc data */
+#define B43_NPHY_INITSWIZP			B43_PHY_N(0x0BC) /* Initial swizzle pattern */
+#define B43_NPHY_TXTAILCNT			B43_PHY_N(0x0BD) /* TX tail count value */
+#define B43_NPHY_BPHY_CTL1			B43_PHY_N(0x0BE) /* B PHY control 1 */
+#define B43_NPHY_BPHY_CTL2			B43_PHY_N(0x0BF) /* B PHY control 2 */
+#define  B43_NPHY_BPHY_CTL2_LUT			0x001F /* LUT index */
+#define  B43_NPHY_BPHY_CTL2_LUT_SHIFT		0
+#define  B43_NPHY_BPHY_CTL2_MACDEL		0x7FE0 /* MAC delay */
+#define  B43_NPHY_BPHY_CTL2_MACDEL_SHIFT	5
+#define B43_NPHY_IQLOCAL_CMD			B43_PHY_N(0x0C0) /* I/Q LO cal command */
+#define  B43_NPHY_IQLOCAL_CMD_EN		0x8000
+#define B43_NPHY_IQLOCAL_CMDNNUM		B43_PHY_N(0x0C1) /* I/Q LO cal command N num */
+#define B43_NPHY_IQLOCAL_CMDGCTL		B43_PHY_N(0x0C2) /* I/Q LO cal command G control */
+#define B43_NPHY_SAMP_CMD			B43_PHY_N(0x0C3) /* Sample command */
+#define  B43_NPHY_SAMP_CMD_STOP			0x0002 /* Stop */
+#define B43_NPHY_SAMP_LOOPCNT			B43_PHY_N(0x0C4) /* Sample loop count */
+#define B43_NPHY_SAMP_WAITCNT			B43_PHY_N(0x0C5) /* Sample wait count */
+#define B43_NPHY_SAMP_DEPCNT			B43_PHY_N(0x0C6) /* Sample depth count */
+#define B43_NPHY_SAMP_STAT			B43_PHY_N(0x0C7) /* Sample status */
+#define B43_NPHY_GPIO_LOOEN			B43_PHY_N(0x0C8) /* GPIO low out enable */
+#define B43_NPHY_GPIO_HIOEN			B43_PHY_N(0x0C9) /* GPIO high out enable */
+#define B43_NPHY_GPIO_SEL			B43_PHY_N(0x0CA) /* GPIO select */
+#define B43_NPHY_GPIO_CLKCTL			B43_PHY_N(0x0CB) /* GPIO clock control */
+#define B43_NPHY_TXF_20CO_AS0			B43_PHY_N(0x0CC) /* TX filter 20 coeff A stage 0 */
+#define B43_NPHY_TXF_20CO_AS1			B43_PHY_N(0x0CD) /* TX filter 20 coeff A stage 1 */
+#define B43_NPHY_TXF_20CO_AS2			B43_PHY_N(0x0CE) /* TX filter 20 coeff A stage 2 */
+#define B43_NPHY_TXF_20CO_B32S0			B43_PHY_N(0x0CF) /* TX filter 20 coeff B32 stage 0 */
+#define B43_NPHY_TXF_20CO_B1S0			B43_PHY_N(0x0D0) /* TX filter 20 coeff B1 stage 0 */
+#define B43_NPHY_TXF_20CO_B32S1			B43_PHY_N(0x0D1) /* TX filter 20 coeff B32 stage 1 */
+#define B43_NPHY_TXF_20CO_B1S1			B43_PHY_N(0x0D2) /* TX filter 20 coeff B1 stage 1 */
+#define B43_NPHY_TXF_20CO_B32S2			B43_PHY_N(0x0D3) /* TX filter 20 coeff B32 stage 2 */
+#define B43_NPHY_TXF_20CO_B1S2			B43_PHY_N(0x0D4) /* TX filter 20 coeff B1 stage 2 */
+#define B43_NPHY_SIGFLDTOL			B43_PHY_N(0x0D5) /* Signal fld tolerance */
+#define B43_NPHY_TXSERFLD			B43_PHY_N(0x0D6) /* TX service field */
+#define B43_NPHY_AFESEQ_RX2TX_PUD		B43_PHY_N(0x0D7) /* AFE seq RX2TX power up/down delay */
+#define B43_NPHY_AFESEQ_TX2RX_PUD		B43_PHY_N(0x0D8) /* AFE seq TX2RX power up/down delay */
+#define B43_NPHY_TGNSYNC_SCRAMI0		B43_PHY_N(0x0D9) /* TGNsync scram init 0 */
+#define B43_NPHY_TGNSYNC_SCRAMI1		B43_PHY_N(0x0DA) /* TGNsync scram init 1 */
+#define B43_NPHY_INITSWIZPATTLEG		B43_PHY_N(0x0DB) /* Initial swizzle pattern leg */
+#define B43_NPHY_BPHY_CTL3			B43_PHY_N(0x0DC) /* B PHY control 3 */
+#define  B43_NPHY_BPHY_CTL3_SCALE		0x00FF /* Scale */
+#define  B43_NPHY_BPHY_CTL3_SCALE_SHIFT		0
+#define  B43_NPHY_BPHY_CTL3_FSC			0xFF00 /* Frame start count value */
+#define  B43_NPHY_BPHY_CTL3_FSC_SHIFT		8
+#define B43_NPHY_BPHY_CTL4			B43_PHY_N(0x0DD) /* B PHY control 4 */
+#define B43_NPHY_C1_TXBBMULT			B43_PHY_N(0x0DE) /* Core 1 TX BB multiplier */
+#define B43_NPHY_C2_TXBBMULT			B43_PHY_N(0x0DF) /* Core 2 TX BB multiplier */
+#define B43_NPHY_TXF_40CO_AS0			B43_PHY_N(0x0E1) /* TX filter 40 coeff A stage 0 */
+#define B43_NPHY_TXF_40CO_AS1			B43_PHY_N(0x0E2) /* TX filter 40 coeff A stage 1 */
+#define B43_NPHY_TXF_40CO_AS2			B43_PHY_N(0x0E3) /* TX filter 40 coeff A stage 2 */
+#define B43_NPHY_TXF_40CO_B32S0			B43_PHY_N(0x0E4) /* TX filter 40 coeff B32 stage 0 */
+#define B43_NPHY_TXF_40CO_B1S0			B43_PHY_N(0x0E5) /* TX filter 40 coeff B1 stage 0 */
+#define B43_NPHY_TXF_40CO_B32S1			B43_PHY_N(0x0E6) /* TX filter 40 coeff B32 stage 1 */
+#define B43_NPHY_TXF_40CO_B1S1			B43_PHY_N(0x0E7) /* TX filter 40 coeff B1 stage 1 */
+#define B43_NPHY_TXF_40CO_B32S2			B43_PHY_N(0x0E8) /* TX filter 40 coeff B32 stage 2 */
+#define B43_NPHY_TXF_40CO_B1S2			B43_PHY_N(0x0E9) /* TX filter 40 coeff B1 stage 2 */
+#define B43_NPHY_BIST_STAT2			B43_PHY_N(0x0EA) /* BIST status 2 */
+#define B43_NPHY_BIST_STAT3			B43_PHY_N(0x0EB) /* BIST status 3 */
+#define B43_NPHY_RFCTL_OVER			B43_PHY_N(0x0EC) /* RF control override */
+#define B43_NPHY_MIMOCFG			B43_PHY_N(0x0ED) /* MIMO config */
+#define  B43_NPHY_MIMOCFG_GFMIX			0x0004 /* Greenfield or mixed mode */
+#define  B43_NPHY_MIMOCFG_AUTO			0x0100 /* Greenfield/mixed mode auto */
+#define B43_NPHY_RADAR_BLNKCTL			B43_PHY_N(0x0EE) /* Radar blank control */
+#define B43_NPHY_A0RADAR_FIFOCTL		B43_PHY_N(0x0EF) /* Antenna 0 radar FIFO control */
+#define B43_NPHY_A1RADAR_FIFOCTL		B43_PHY_N(0x0F0) /* Antenna 1 radar FIFO control */
+#define B43_NPHY_A0RADAR_FIFODAT		B43_PHY_N(0x0F1) /* Antenna 0 radar FIFO data */
+#define B43_NPHY_A1RADAR_FIFODAT		B43_PHY_N(0x0F2) /* Antenna 1 radar FIFO data */
+#define B43_NPHY_RADAR_THRES0			B43_PHY_N(0x0F3) /* Radar threshold 0 */
+#define B43_NPHY_RADAR_THRES1			B43_PHY_N(0x0F4) /* Radar threshold 1 */
+#define B43_NPHY_RADAR_THRES0R			B43_PHY_N(0x0F5) /* Radar threshold 0R */
+#define B43_NPHY_RADAR_THRES1R			B43_PHY_N(0x0F6) /* Radar threshold 1R */
+#define B43_NPHY_CSEN_20IN40_DLEN		B43_PHY_N(0x0F7) /* Carrier sense 20 in 40 dwell length */
+#define B43_NPHY_RFCTL_LUT_TRSW_LO1		B43_PHY_N(0x0F8) /* RF control LUT TRSW lower 1 */
+#define B43_NPHY_RFCTL_LUT_TRSW_UP1		B43_PHY_N(0x0F9) /* RF control LUT TRSW upper 1 */
+#define B43_NPHY_RFCTL_LUT_TRSW_LO2		B43_PHY_N(0x0FA) /* RF control LUT TRSW lower 2 */
+#define B43_NPHY_RFCTL_LUT_TRSW_UP2		B43_PHY_N(0x0FB) /* RF control LUT TRSW upper 2 */
+#define B43_NPHY_RFCTL_LUT_TRSW_LO3		B43_PHY_N(0x0FC) /* RF control LUT TRSW lower 3 */
+#define B43_NPHY_RFCTL_LUT_TRSW_UP3		B43_PHY_N(0x0FD) /* RF control LUT TRSW upper 3 */
+#define B43_NPHY_RFCTL_LUT_TRSW_LO4		B43_PHY_N(0x0FE) /* RF control LUT TRSW lower 4 */
+#define B43_NPHY_RFCTL_LUT_TRSW_UP4		B43_PHY_N(0x0FF) /* RF control LUT TRSW upper 4 */
+#define B43_NPHY_RFCTL_LUT_LNAPA1		B43_PHY_N(0x100) /* RF control LUT LNA PA 1 */
+#define B43_NPHY_RFCTL_LUT_LNAPA2		B43_PHY_N(0x101) /* RF control LUT LNA PA 2 */
+#define B43_NPHY_RFCTL_LUT_LNAPA3		B43_PHY_N(0x102) /* RF control LUT LNA PA 3 */
+#define B43_NPHY_RFCTL_LUT_LNAPA4		B43_PHY_N(0x103) /* RF control LUT LNA PA 4 */
+#define B43_NPHY_TGNSYNC_CRCM0			B43_PHY_N(0x104) /* TGNsync CRC mask 0 */
+#define B43_NPHY_TGNSYNC_CRCM1			B43_PHY_N(0x105) /* TGNsync CRC mask 1 */
+#define B43_NPHY_TGNSYNC_CRCM2			B43_PHY_N(0x106) /* TGNsync CRC mask 2 */
+#define B43_NPHY_TGNSYNC_CRCM3			B43_PHY_N(0x107) /* TGNsync CRC mask 3 */
+#define B43_NPHY_TGNSYNC_CRCM4			B43_PHY_N(0x108) /* TGNsync CRC mask 4 */
+#define B43_NPHY_CRCPOLY			B43_PHY_N(0x109) /* CRC polynomial */
+#define B43_NPHY_SIGCNT				B43_PHY_N(0x10A) /* # sig count */
+#define B43_NPHY_SIGSTARTBIT_CTL		B43_PHY_N(0x10B) /* Sig start bit control */
+#define B43_NPHY_CRCPOLY_ORDER			B43_PHY_N(0x10C) /* CRC polynomial order */
+#define B43_NPHY_RFCTL_CST0			B43_PHY_N(0x10D) /* RF control core swap table 0 */
+#define B43_NPHY_RFCTL_CST1			B43_PHY_N(0x10E) /* RF control core swap table 1 */
+#define B43_NPHY_RFCTL_CST2O			B43_PHY_N(0x10F) /* RF control core swap table 2 + others */
+#define B43_NPHY_BPHY_CTL5			B43_PHY_N(0x111) /* B PHY control 5 */
+#define B43_NPHY_RFSEQ_LPFBW			B43_PHY_N(0x112) /* RF seq LPF bandwidth */
+#define B43_NPHY_TSSIBIAS1			B43_PHY_N(0x114) /* TSSI bias val 1 */
+#define B43_NPHY_TSSIBIAS2			B43_PHY_N(0x115) /* TSSI bias val 2 */
+#define  B43_NPHY_TSSIBIAS_BIAS			0x00FF /* Bias */
+#define  B43_NPHY_TSSIBIAS_BIAS_SHIFT		0
+#define  B43_NPHY_TSSIBIAS_VAL			0xFF00 /* Value */
+#define  B43_NPHY_TSSIBIAS_VAL_SHIFT		8
+#define B43_NPHY_ESTPWR1			B43_PHY_N(0x118) /* Estimated power 1 */
+#define B43_NPHY_ESTPWR2			B43_PHY_N(0x119) /* Estimated power 2 */
+#define  B43_NPHY_ESTPWR_PWR			0x00FF /* Estimated power */
+#define  B43_NPHY_ESTPWR_PWR_SHIFT		0
+#define  B43_NPHY_ESTPWR_VALID			0x0100 /* Estimated power valid */
+#define B43_NPHY_TSSI_MAXTXFDT			B43_PHY_N(0x11C) /* TSSI max TX frame delay time */
+#define  B43_NPHY_TSSI_MAXTXFDT_VAL		0x00FF /* max TX frame delay time */
+#define  B43_NPHY_TSSI_MAXTXFDT_VAL_SHIFT	0
+#define B43_NPHY_TSSI_MAXTDT			B43_PHY_N(0x11D) /* TSSI max TSSI delay time */
+#define  B43_NPHY_TSSI_MAXTDT_VAL		0x00FF /* max TSSI delay time */
+#define  B43_NPHY_TSSI_MAXTDT_VAL_SHIFT		0
+#define B43_NPHY_ITSSI1				B43_PHY_N(0x11E) /* TSSI idle 1 */
+#define B43_NPHY_ITSSI2				B43_PHY_N(0x11F) /* TSSI idle 2 */
+#define  B43_NPHY_ITSSI_VAL			0x00FF /* Idle TSSI */
+#define  B43_NPHY_ITSSI_VAL_SHIFT		0
+#define B43_NPHY_TSSIMODE			B43_PHY_N(0x122) /* TSSI mode */
+#define  B43_NPHY_TSSIMODE_EN			0x0001 /* TSSI enable */
+#define  B43_NPHY_TSSIMODE_PDEN			0x0002 /* Power det enable */
+#define B43_NPHY_RXMACIFM			B43_PHY_N(0x123) /* RX Macif mode */
+#define B43_NPHY_CRSIT_COCNT_LO			B43_PHY_N(0x124) /* CRS idle time CRS-on count (low) */
+#define B43_NPHY_CRSIT_COCNT_HI			B43_PHY_N(0x125) /* CRS idle time CRS-on count (high) */
+#define B43_NPHY_CRSIT_MTCNT_LO			B43_PHY_N(0x126) /* CRS idle time measure time count (low) */
+#define B43_NPHY_CRSIT_MTCNT_HI			B43_PHY_N(0x127) /* CRS idle time measure time count (high) */
+#define B43_NPHY_SAMTWC				B43_PHY_N(0x128) /* Sample tail wait count */
+#define B43_NPHY_IQEST_CMD			B43_PHY_N(0x129) /* I/Q estimate command */
+#define  B43_NPHY_IQEST_CMD_START		0x0001 /* Start */
+#define  B43_NPHY_IQEST_CMD_MODE		0x0002 /* Mode */
+#define B43_NPHY_IQEST_WT			B43_PHY_N(0x12A) /* I/Q estimate wait time */
+#define  B43_NPHY_IQEST_WT_VAL			0x00FF /* Wait time */
+#define  B43_NPHY_IQEST_WT_VAL_SHIFT		0
+#define B43_NPHY_IQEST_SAMCNT			B43_PHY_N(0x12B) /* I/Q estimate sample count */
+#define B43_NPHY_IQEST_IQACC_LO0		B43_PHY_N(0x12C) /* I/Q estimate I/Q acc lo 0 */
+#define B43_NPHY_IQEST_IQACC_HI0		B43_PHY_N(0x12D) /* I/Q estimate I/Q acc hi 0 */
+#define B43_NPHY_IQEST_IPACC_LO0		B43_PHY_N(0x12E) /* I/Q estimate I power acc lo 0 */
+#define B43_NPHY_IQEST_IPACC_HI0		B43_PHY_N(0x12F) /* I/Q estimate I power acc hi 0 */
+#define B43_NPHY_IQEST_QPACC_LO0		B43_PHY_N(0x130) /* I/Q estimate Q power acc lo 0 */
+#define B43_NPHY_IQEST_QPACC_HI0		B43_PHY_N(0x131) /* I/Q estimate Q power acc hi 0 */
+#define B43_NPHY_IQEST_IQACC_LO1		B43_PHY_N(0x134) /* I/Q estimate I/Q acc lo 1 */
+#define B43_NPHY_IQEST_IQACC_HI1		B43_PHY_N(0x135) /* I/Q estimate I/Q acc hi 1 */
+#define B43_NPHY_IQEST_IPACC_LO1		B43_PHY_N(0x136) /* I/Q estimate I power acc lo 1 */
+#define B43_NPHY_IQEST_IPACC_HI1		B43_PHY_N(0x137) /* I/Q estimate I power acc hi 1 */
+#define B43_NPHY_IQEST_QPACC_LO1		B43_PHY_N(0x138) /* I/Q estimate Q power acc lo 1 */
+#define B43_NPHY_IQEST_QPACC_HI1		B43_PHY_N(0x139) /* I/Q estimate Q power acc hi 1 */
+#define B43_NPHY_MIMO_CRSTXEXT			B43_PHY_N(0x13A) /* MIMO PHY CRS TX extension */
+#define B43_NPHY_PWRDET1			B43_PHY_N(0x13B) /* Power det 1 */
+#define B43_NPHY_PWRDET2			B43_PHY_N(0x13C) /* Power det 2 */
+#define B43_NPHY_MAXRSSI_DTIME			B43_PHY_N(0x13F) /* RSSI max RSSI delay time */
+#define B43_NPHY_PIL_DW0			B43_PHY_N(0x141) /* Pilot data weight 0 */
+#define B43_NPHY_PIL_DW1			B43_PHY_N(0x142) /* Pilot data weight 1 */
+#define B43_NPHY_PIL_DW2			B43_PHY_N(0x143) /* Pilot data weight 2 */
+#define  B43_NPHY_PIL_DW_BPSK			0x000F /* BPSK */
+#define  B43_NPHY_PIL_DW_BPSK_SHIFT		0
+#define  B43_NPHY_PIL_DW_QPSK			0x00F0 /* QPSK */
+#define  B43_NPHY_PIL_DW_QPSK_SHIFT		4
+#define  B43_NPHY_PIL_DW_16QAM			0x0F00 /* 16-QAM */
+#define  B43_NPHY_PIL_DW_16QAM_SHIFT		8
+#define  B43_NPHY_PIL_DW_64QAM			0xF000 /* 64-QAM */
+#define  B43_NPHY_PIL_DW_64QAM_SHIFT		12
+#define B43_NPHY_FMDEM_CFG			B43_PHY_N(0x144) /* FM demodulation config */
+#define B43_NPHY_PHASETR_A0			B43_PHY_N(0x145) /* Phase track alpha 0 */
+#define B43_NPHY_PHASETR_A1			B43_PHY_N(0x146) /* Phase track alpha 1 */
+#define B43_NPHY_PHASETR_A2			B43_PHY_N(0x147) /* Phase track alpha 2 */
+#define B43_NPHY_PHASETR_B0			B43_PHY_N(0x148) /* Phase track beta 0 */
+#define B43_NPHY_PHASETR_B1			B43_PHY_N(0x149) /* Phase track beta 1 */
+#define B43_NPHY_PHASETR_B2			B43_PHY_N(0x14A) /* Phase track beta 2 */
+#define B43_NPHY_PHASETR_CHG0			B43_PHY_N(0x14B) /* Phase track change 0 */
+#define B43_NPHY_PHASETR_CHG1			B43_PHY_N(0x14C) /* Phase track change 1 */
+#define B43_NPHY_PHASETW_OFF			B43_PHY_N(0x14D) /* Phase track offset */
+#define B43_NPHY_RFCTL_DBG			B43_PHY_N(0x14E) /* RF control debug */
+#define B43_NPHY_CCK_SHIFTB_REF			B43_PHY_N(0x150) /* CCK shiftbits reference var */
+#define B43_NPHY_OVER_DGAIN0			B43_PHY_N(0x152) /* Override digital gain 0 */
+#define B43_NPHY_OVER_DGAIN1			B43_PHY_N(0x153) /* Override digital gain 1 */
+#define  B43_NPHY_OVER_DGAIN_FDGV		0x0007 /* Force digital gain value */
+#define  B43_NPHY_OVER_DGAIN_FDGV_SHIFT		0
+#define  B43_NPHY_OVER_DGAIN_FDGEN		0x0008 /* Force digital gain enable */
+#define  B43_NPHY_OVER_DGAIN_CCKDGECV		0xFF00 /* CCK digital gain enable count value */
+#define  B43_NPHY_OVER_DGAIN_CCKDGECV_SHIFT	8
+#define B43_NPHY_BIST_STAT4			B43_PHY_N(0x156) /* BIST status 4 */
+#define B43_NPHY_RADAR_MAL			B43_PHY_N(0x157) /* Radar MA length */
+#define B43_NPHY_RADAR_SRCCTL			B43_PHY_N(0x158) /* Radar search control */
+#define B43_NPHY_VLD_DTSIG			B43_PHY_N(0x159) /* VLD data tones sig */
+#define B43_NPHY_VLD_DTDAT			B43_PHY_N(0x15A) /* VLD data tones data */
+#define B43_NPHY_C1_BPHY_RXIQCA0		B43_PHY_N(0x15B) /* Core 1 B PHY RX I/Q comp A0 */
+#define B43_NPHY_C1_BPHY_RXIQCB0		B43_PHY_N(0x15C) /* Core 1 B PHY RX I/Q comp B0 */
+#define B43_NPHY_C2_BPHY_RXIQCA1		B43_PHY_N(0x15D) /* Core 2 B PHY RX I/Q comp A1 */
+#define B43_NPHY_C2_BPHY_RXIQCB1		B43_PHY_N(0x15E) /* Core 2 B PHY RX I/Q comp B1 */
+#define B43_NPHY_FREQGAIN0			B43_PHY_N(0x160) /* Frequency gain 0 */
+#define B43_NPHY_FREQGAIN1			B43_PHY_N(0x161) /* Frequency gain 1 */
+#define B43_NPHY_FREQGAIN2			B43_PHY_N(0x162) /* Frequency gain 2 */
+#define B43_NPHY_FREQGAIN3			B43_PHY_N(0x163) /* Frequency gain 3 */
+#define B43_NPHY_FREQGAIN4			B43_PHY_N(0x164) /* Frequency gain 4 */
+#define B43_NPHY_FREQGAIN5			B43_PHY_N(0x165) /* Frequency gain 5 */
+#define B43_NPHY_FREQGAIN6			B43_PHY_N(0x166) /* Frequency gain 6 */
+#define B43_NPHY_FREQGAIN7			B43_PHY_N(0x167) /* Frequency gain 7 */
+#define B43_NPHY_FREQGAIN_BYPASS		B43_PHY_N(0x168) /* Frequency gain bypass */
+#define B43_NPHY_TRLOSS				B43_PHY_N(0x169) /* TR loss value */
+#define B43_NPHY_C1_ADCCLIP			B43_PHY_N(0x16A) /* Core 1 ADC clip */
+#define B43_NPHY_C2_ADCCLIP			B43_PHY_N(0x16B) /* Core 2 ADC clip */
+#define B43_NPHY_LTRN_OFFGAIN			B43_PHY_N(0x16F) /* LTRN offset gain */
+#define B43_NPHY_LTRN_OFF			B43_PHY_N(0x170) /* LTRN offset */
+#define B43_NPHY_NRDATAT_WWISE20SIG		B43_PHY_N(0x171) /* # data tones WWiSE 20 sig */
+#define B43_NPHY_NRDATAT_WWISE40SIG		B43_PHY_N(0x172) /* # data tones WWiSE 40 sig */
+#define B43_NPHY_NRDATAT_TGNSYNC20SIG		B43_PHY_N(0x173) /* # data tones TGNsync 20 sig */
+#define B43_NPHY_NRDATAT_TGNSYNC40SIG		B43_PHY_N(0x174) /* # data tones TGNsync 40 sig */
+#define B43_NPHY_WWISE_CRCM0			B43_PHY_N(0x175) /* WWiSE CRC mask 0 */
+#define B43_NPHY_WWISE_CRCM1			B43_PHY_N(0x176) /* WWiSE CRC mask 1 */
+#define B43_NPHY_WWISE_CRCM2			B43_PHY_N(0x177) /* WWiSE CRC mask 2 */
+#define B43_NPHY_WWISE_CRCM3			B43_PHY_N(0x178) /* WWiSE CRC mask 3 */
+#define B43_NPHY_WWISE_CRCM4			B43_PHY_N(0x179) /* WWiSE CRC mask 4 */
+#define B43_NPHY_CHANEST_CDDSH			B43_PHY_N(0x17A) /* Channel estimate CDD shift */
+#define B43_NPHY_HTAGC_WCNT			B43_PHY_N(0x17B) /* HT ADC wait counters */
+#define B43_NPHY_SQPARM				B43_PHY_N(0x17C) /* SQ params */
+#define B43_NPHY_MCSDUP6M			B43_PHY_N(0x17D) /* MCS dup 6M */
+#define B43_NPHY_NDATAT_DUP40			B43_PHY_N(0x17E) /* # data tones dup 40 */
+#define B43_NPHY_DUP40_TGNSYNC_CYCD		B43_PHY_N(0x17F) /* Dup40 TGNsync cycle data */
+#define B43_NPHY_DUP40_GFBL			B43_PHY_N(0x180) /* Dup40 GF format BL address */
+#define B43_NPHY_DUP40_BL			B43_PHY_N(0x181) /* Dup40 format BL address */
+#define B43_NPHY_LEGDUP_FTA			B43_PHY_N(0x182) /* Legacy dup frm table address */
+#define B43_NPHY_PACPROC_DBG			B43_PHY_N(0x183) /* Packet processing debug */
+#define B43_NPHY_PIL_CYC1			B43_PHY_N(0x184) /* Pilot cycle counter 1 */
+#define B43_NPHY_PIL_CYC2			B43_PHY_N(0x185) /* Pilot cycle counter 2 */
+#define B43_NPHY_TXF_20CO_S0A1			B43_PHY_N(0x186) /* TX filter 20 coeff stage 0 A1 */
+#define B43_NPHY_TXF_20CO_S0A2			B43_PHY_N(0x187) /* TX filter 20 coeff stage 0 A2 */
+#define B43_NPHY_TXF_20CO_S1A1			B43_PHY_N(0x188) /* TX filter 20 coeff stage 1 A1 */
+#define B43_NPHY_TXF_20CO_S1A2			B43_PHY_N(0x189) /* TX filter 20 coeff stage 1 A2 */
+#define B43_NPHY_TXF_20CO_S2A1			B43_PHY_N(0x18A) /* TX filter 20 coeff stage 2 A1 */
+#define B43_NPHY_TXF_20CO_S2A2			B43_PHY_N(0x18B) /* TX filter 20 coeff stage 2 A2 */
+#define B43_NPHY_TXF_20CO_S0B1			B43_PHY_N(0x18C) /* TX filter 20 coeff stage 0 B1 */
+#define B43_NPHY_TXF_20CO_S0B2			B43_PHY_N(0x18D) /* TX filter 20 coeff stage 0 B2 */
+#define B43_NPHY_TXF_20CO_S0B3			B43_PHY_N(0x18E) /* TX filter 20 coeff stage 0 B3 */
+#define B43_NPHY_TXF_20CO_S1B1			B43_PHY_N(0x18F) /* TX filter 20 coeff stage 1 B1 */
+#define B43_NPHY_TXF_20CO_S1B2			B43_PHY_N(0x190) /* TX filter 20 coeff stage 1 B2 */
+#define B43_NPHY_TXF_20CO_S1B3			B43_PHY_N(0x191) /* TX filter 20 coeff stage 1 B3 */
+#define B43_NPHY_TXF_20CO_S2B1			B43_PHY_N(0x192) /* TX filter 20 coeff stage 2 B1 */
+#define B43_NPHY_TXF_20CO_S2B2			B43_PHY_N(0x193) /* TX filter 20 coeff stage 2 B2 */
+#define B43_NPHY_TXF_20CO_S2B3			B43_PHY_N(0x194) /* TX filter 20 coeff stage 2 B3 */
+#define B43_NPHY_TXF_40CO_S0A1			B43_PHY_N(0x195) /* TX filter 40 coeff stage 0 A1 */
+#define B43_NPHY_TXF_40CO_S0A2			B43_PHY_N(0x196) /* TX filter 40 coeff stage 0 A2 */
+#define B43_NPHY_TXF_40CO_S1A1			B43_PHY_N(0x197) /* TX filter 40 coeff stage 1 A1 */
+#define B43_NPHY_TXF_40CO_S1A2			B43_PHY_N(0x198) /* TX filter 40 coeff stage 1 A2 */
+#define B43_NPHY_TXF_40CO_S2A1			B43_PHY_N(0x199) /* TX filter 40 coeff stage 2 A1 */
+#define B43_NPHY_TXF_40CO_S2A2			B43_PHY_N(0x19A) /* TX filter 40 coeff stage 2 A2 */
+#define B43_NPHY_TXF_40CO_S0B1			B43_PHY_N(0x19B) /* TX filter 40 coeff stage 0 B1 */
+#define B43_NPHY_TXF_40CO_S0B2			B43_PHY_N(0x19C) /* TX filter 40 coeff stage 0 B2 */
+#define B43_NPHY_TXF_40CO_S0B3			B43_PHY_N(0x19D) /* TX filter 40 coeff stage 0 B3 */
+#define B43_NPHY_TXF_40CO_S1B1			B43_PHY_N(0x19E) /* TX filter 40 coeff stage 1 B1 */
+#define B43_NPHY_TXF_40CO_S1B2			B43_PHY_N(0x19F) /* TX filter 40 coeff stage 1 B2 */
+#define B43_NPHY_TXF_40CO_S1B3			B43_PHY_N(0x1A0) /* TX filter 40 coeff stage 1 B3 */
+#define B43_NPHY_TXF_40CO_S2B1			B43_PHY_N(0x1A1) /* TX filter 40 coeff stage 2 B1 */
+#define B43_NPHY_TXF_40CO_S2B2			B43_PHY_N(0x1A2) /* TX filter 40 coeff stage 2 B2 */
+#define B43_NPHY_TXF_40CO_S2B3			B43_PHY_N(0x1A3) /* TX filter 40 coeff stage 2 B3 */
+#define B43_NPHY_RSSIMC_0I_RSSI_X		B43_PHY_N(0x1A4) /* RSSI multiplication coefficient 0 I RSSI X */
+#define B43_NPHY_RSSIMC_0I_RSSI_Y		B43_PHY_N(0x1A5) /* RSSI multiplication coefficient 0 I RSSI Y */
+#define B43_NPHY_RSSIMC_0I_RSSI_Z		B43_PHY_N(0x1A6) /* RSSI multiplication coefficient 0 I RSSI Z */
+#define B43_NPHY_RSSIMC_0I_TBD			B43_PHY_N(0x1A7) /* RSSI multiplication coefficient 0 I TBD */
+#define B43_NPHY_RSSIMC_0I_PWRDET		B43_PHY_N(0x1A8) /* RSSI multiplication coefficient 0 I power det */
+#define B43_NPHY_RSSIMC_0I_TSSI			B43_PHY_N(0x1A9) /* RSSI multiplication coefficient 0 I TSSI */
+#define B43_NPHY_RSSIMC_0Q_RSSI_X		B43_PHY_N(0x1AA) /* RSSI multiplication coefficient 0 Q RSSI X */
+#define B43_NPHY_RSSIMC_0Q_RSSI_Y		B43_PHY_N(0x1AB) /* RSSI multiplication coefficient 0 Q RSSI Y */
+#define B43_NPHY_RSSIMC_0Q_RSSI_Z		B43_PHY_N(0x1AC) /* RSSI multiplication coefficient 0 Q RSSI Z */
+#define B43_NPHY_RSSIMC_0Q_TBD			B43_PHY_N(0x1AD) /* RSSI multiplication coefficient 0 Q TBD */
+#define B43_NPHY_RSSIMC_0Q_PWRDET		B43_PHY_N(0x1AE) /* RSSI multiplication coefficient 0 Q power det */
+#define B43_NPHY_RSSIMC_0Q_TSSI			B43_PHY_N(0x1AF) /* RSSI multiplication coefficient 0 Q TSSI */
+#define B43_NPHY_RSSIMC_1I_RSSI_X		B43_PHY_N(0x1B0) /* RSSI multiplication coefficient 1 I RSSI X */
+#define B43_NPHY_RSSIMC_1I_RSSI_Y		B43_PHY_N(0x1B1) /* RSSI multiplication coefficient 1 I RSSI Y */
+#define B43_NPHY_RSSIMC_1I_RSSI_Z		B43_PHY_N(0x1B2) /* RSSI multiplication coefficient 1 I RSSI Z */
+#define B43_NPHY_RSSIMC_1I_TBD			B43_PHY_N(0x1B3) /* RSSI multiplication coefficient 1 I TBD */
+#define B43_NPHY_RSSIMC_1I_PWRDET		B43_PHY_N(0x1B4) /* RSSI multiplication coefficient 1 I power det */
+#define B43_NPHY_RSSIMC_1I_TSSI			B43_PHY_N(0x1B5) /* RSSI multiplication coefficient 1 I TSSI */
+#define B43_NPHY_RSSIMC_1Q_RSSI_X		B43_PHY_N(0x1B6) /* RSSI multiplication coefficient 1 Q RSSI X */
+#define B43_NPHY_RSSIMC_1Q_RSSI_Y		B43_PHY_N(0x1B7) /* RSSI multiplication coefficient 1 Q RSSI Y */
+#define B43_NPHY_RSSIMC_1Q_RSSI_Z		B43_PHY_N(0x1B8) /* RSSI multiplication coefficient 1 Q RSSI Z */
+#define B43_NPHY_RSSIMC_1Q_TBD			B43_PHY_N(0x1B9) /* RSSI multiplication coefficient 1 Q TBD */
+#define B43_NPHY_RSSIMC_1Q_PWRDET		B43_PHY_N(0x1BA) /* RSSI multiplication coefficient 1 Q power det */
+#define B43_NPHY_RSSIMC_1Q_TSSI			B43_PHY_N(0x1BB) /* RSSI multiplication coefficient 1 Q TSSI */
+#define B43_NPHY_SAMC_WCNT			B43_PHY_N(0x1BC) /* Sample collect wait counter */
+#define B43_NPHY_PTHROUGH_CNT			B43_PHY_N(0x1BD) /* Pass-through counter */
+#define B43_NPHY_LTRN_OFF_G20L			B43_PHY_N(0x1C4) /* LTRN offset gain 20L */
+#define B43_NPHY_LTRN_OFF_20L			B43_PHY_N(0x1C5) /* LTRN offset 20L */
+#define B43_NPHY_LTRN_OFF_G20U			B43_PHY_N(0x1C6) /* LTRN offset gain 20U */
+#define B43_NPHY_LTRN_OFF_20U			B43_PHY_N(0x1C7) /* LTRN offset 20U */
+#define B43_NPHY_DSSSCCK_GAINSL			B43_PHY_N(0x1C8) /* DSSS/CCK gain settle length */
+#define B43_NPHY_GPIO_LOOUT			B43_PHY_N(0x1C9) /* GPIO low out */
+#define B43_NPHY_GPIO_HIOUT			B43_PHY_N(0x1CA) /* GPIO high out */
+#define B43_NPHY_CRS_CHECK			B43_PHY_N(0x1CB) /* CRS check */
+#define B43_NPHY_ML_LOGSS_RAT			B43_PHY_N(0x1CC) /* ML/logss ratio */
+#define B43_NPHY_DUPSCALE			B43_PHY_N(0x1CD) /* Dup scale */
+#define B43_NPHY_BW1A				B43_PHY_N(0x1CE) /* BW 1A */
+#define B43_NPHY_BW2				B43_PHY_N(0x1CF) /* BW 2 */
+#define B43_NPHY_BW3				B43_PHY_N(0x1D0) /* BW 3 */
+#define B43_NPHY_BW4				B43_PHY_N(0x1D1) /* BW 4 */
+#define B43_NPHY_BW5				B43_PHY_N(0x1D2) /* BW 5 */
+#define B43_NPHY_BW6				B43_PHY_N(0x1D3) /* BW 6 */
+#define B43_NPHY_COALEN0			B43_PHY_N(0x1D4) /* Coarse length 0 */
+#define B43_NPHY_COALEN1			B43_PHY_N(0x1D5) /* Coarse length 1 */
+#define B43_NPHY_CRSTHRES_1U			B43_PHY_N(0x1D6) /* CRS threshold 1 U */
+#define B43_NPHY_CRSTHRES_2U			B43_PHY_N(0x1D7) /* CRS threshold 2 U */
+#define B43_NPHY_CRSTHRES_3U			B43_PHY_N(0x1D8) /* CRS threshold 3 U */
+#define B43_NPHY_CRSCTL_U			B43_PHY_N(0x1D9) /* CRS control U */
+#define B43_NPHY_CRSTHRES_1L			B43_PHY_N(0x1DA) /* CRS threshold 1 L */
+#define B43_NPHY_CRSTHRES_2L			B43_PHY_N(0x1DB) /* CRS threshold 2 L */
+#define B43_NPHY_CRSTHRES_3L			B43_PHY_N(0x1DC) /* CRS threshold 3 L */
+#define B43_NPHY_CRSCTL_L			B43_PHY_N(0x1DD) /* CRS control L */
+#define B43_NPHY_STRA_1U			B43_PHY_N(0x1DE) /* STR address 1 U */
+#define B43_NPHY_STRA_2U			B43_PHY_N(0x1DF) /* STR address 2 U */
+#define B43_NPHY_STRA_1L			B43_PHY_N(0x1E0) /* STR address 1 L */
+#define B43_NPHY_STRA_2L			B43_PHY_N(0x1E1) /* STR address 2 L */
+#define B43_NPHY_CRSCHECK1			B43_PHY_N(0x1E2) /* CRS check 1 */
+#define B43_NPHY_CRSCHECK2			B43_PHY_N(0x1E3) /* CRS check 2 */
+#define B43_NPHY_CRSCHECK3			B43_PHY_N(0x1E4) /* CRS check 3 */
+#define B43_NPHY_JMPSTP0			B43_PHY_N(0x1E5) /* Jump step 0 */
+#define B43_NPHY_JMPSTP1			B43_PHY_N(0x1E6) /* Jump step 1 */
+#define B43_NPHY_TXPCTL_CMD			B43_PHY_N(0x1E7) /* TX power control command */
+#define  B43_NPHY_TXPCTL_CMD_INIT		0x007F /* Init */
+#define  B43_NPHY_TXPCTL_CMD_INIT_SHIFT		0
+#define  B43_NPHY_TXPCTL_CMD_COEFF		0x2000 /* Power control coefficients */
+#define  B43_NPHY_TXPCTL_CMD_HWPCTLEN		0x4000 /* Hardware TX power control enable */
+#define  B43_NPHY_TXPCTL_CMD_PCTLEN		0x8000 /* TX power control enable */
+#define B43_NPHY_TXPCTL_N			B43_PHY_N(0x1E8) /* TX power control N num */
+#define  B43_NPHY_TXPCTL_N_TSSID		0x00FF /* N TSSI delay */
+#define  B43_NPHY_TXPCTL_N_TSSID_SHIFT		0
+#define  B43_NPHY_TXPCTL_N_NPTIL2		0x0700 /* N PT integer log2 */
+#define  B43_NPHY_TXPCTL_N_NPTIL2_SHIFT		8
+#define B43_NPHY_TXPCTL_ITSSI			B43_PHY_N(0x1E9) /* TX power control idle TSSI */
+#define  B43_NPHY_TXPCTL_ITSSI_0		0x003F /* Idle TSSI 0 */
+#define  B43_NPHY_TXPCTL_ITSSI_0_SHIFT		0
+#define  B43_NPHY_TXPCTL_ITSSI_1		0x3F00 /* Idle TSSI 1 */
+#define  B43_NPHY_TXPCTL_ITSSI_1_SHIFT		8
+#define  B43_NPHY_TXPCTL_ITSSI_BINF		0x8000 /* Raw TSSI offset bin format */
+#define B43_NPHY_TXPCTL_TPWR			B43_PHY_N(0x1EA) /* TX power control target power */
+#define  B43_NPHY_TXPCTL_TPWR_0			0x00FF /* Power 0 */
+#define  B43_NPHY_TXPCTL_TPWR_0_SHIFT		0
+#define  B43_NPHY_TXPCTL_TPWR_1			0xFF00 /* Power 1 */
+#define  B43_NPHY_TXPCTL_TPWR_1_SHIFT		8
+#define B43_NPHY_TXPCTL_BIDX			B43_PHY_N(0x1EB) /* TX power control base index */
+#define  B43_NPHY_TXPCTL_BIDX_0			0x007F /* uC base index 0 */
+#define  B43_NPHY_TXPCTL_BIDX_0_SHIFT		0
+#define  B43_NPHY_TXPCTL_BIDX_1			0x7F00 /* uC base index 1 */
+#define  B43_NPHY_TXPCTL_BIDX_1_SHIFT		8
+#define  B43_NPHY_TXPCTL_BIDX_LOAD		0x8000 /* Load base index */
+#define B43_NPHY_TXPCTL_PIDX			B43_PHY_N(0x1EC) /* TX power control power index */
+#define  B43_NPHY_TXPCTL_PIDX_0			0x007F /* uC power index 0 */
+#define  B43_NPHY_TXPCTL_PIDX_0_SHIFT		0
+#define  B43_NPHY_TXPCTL_PIDX_1			0x7F00 /* uC power index 1 */
+#define  B43_NPHY_TXPCTL_PIDX_1_SHIFT		8
+#define B43_NPHY_C1_TXPCTL_STAT			B43_PHY_N(0x1ED) /* Core 1 TX power control status */
+#define B43_NPHY_C2_TXPCTL_STAT			B43_PHY_N(0x1EE) /* Core 2 TX power control status */
+#define  B43_NPHY_TXPCTL_STAT_EST		0x00FF /* Estimated power */
+#define  B43_NPHY_TXPCTL_STAT_EST_SHIFT		0
+#define  B43_NPHY_TXPCTL_STAT_BIDX		0x7F00 /* Base index */
+#define  B43_NPHY_TXPCTL_STAT_BIDX_SHIFT	8
+#define  B43_NPHY_TXPCTL_STAT_ESTVALID		0x8000 /* Estimated power valid */
+#define B43_NPHY_SMALLSGS_LEN			B43_PHY_N(0x1EF) /* Small sig gain settle length */
+#define B43_NPHY_PHYSTAT_GAIN0			B43_PHY_N(0x1F0) /* PHY stats gain info 0 */
+#define B43_NPHY_PHYSTAT_GAIN1			B43_PHY_N(0x1F1) /* PHY stats gain info 1 */
+#define B43_NPHY_PHYSTAT_FREQEST		B43_PHY_N(0x1F2) /* PHY stats frequency estimate */
+#define B43_NPHY_PHYSTAT_ADVRET			B43_PHY_N(0x1F3) /* PHY stats ADV retard */
+#define B43_NPHY_PHYLB_MODE			B43_PHY_N(0x1F4) /* PHY loopback mode */
+#define B43_NPHY_TONE_MIDX20_1			B43_PHY_N(0x1F5) /* Tone map index 20/1 */
+#define B43_NPHY_TONE_MIDX20_2			B43_PHY_N(0x1F6) /* Tone map index 20/2 */
+#define B43_NPHY_TONE_MIDX20_3			B43_PHY_N(0x1F7) /* Tone map index 20/3 */
+#define B43_NPHY_TONE_MIDX40_1			B43_PHY_N(0x1F8) /* Tone map index 40/1 */
+#define B43_NPHY_TONE_MIDX40_2			B43_PHY_N(0x1F9) /* Tone map index 40/2 */
+#define B43_NPHY_TONE_MIDX40_3			B43_PHY_N(0x1FA) /* Tone map index 40/3 */
+#define B43_NPHY_TONE_MIDX40_4			B43_PHY_N(0x1FB) /* Tone map index 40/4 */
+#define B43_NPHY_PILTONE_MIDX1			B43_PHY_N(0x1FC) /* Pilot tone map index 1 */
+#define B43_NPHY_PILTONE_MIDX2			B43_PHY_N(0x1FD) /* Pilot tone map index 2 */
+#define B43_NPHY_PILTONE_MIDX3			B43_PHY_N(0x1FE) /* Pilot tone map index 3 */
+#define B43_NPHY_TXRIFS_FRDEL			B43_PHY_N(0x1FF) /* TX RIFS frame delay */
+#define B43_NPHY_AFESEQ_RX2TX_PUD_40M		B43_PHY_N(0x200) /* AFE seq rx2tx power up/down delay 40M */
+#define B43_NPHY_AFESEQ_TX2RX_PUD_40M		B43_PHY_N(0x201) /* AFE seq tx2rx power up/down delay 40M */
+#define B43_NPHY_AFESEQ_RX2TX_PUD_20M		B43_PHY_N(0x202) /* AFE seq rx2tx power up/down delay 20M */
+#define B43_NPHY_AFESEQ_TX2RX_PUD_20M		B43_PHY_N(0x203) /* AFE seq tx2rx power up/down delay 20M */
+#define B43_NPHY_RX_SIGCTL			B43_PHY_N(0x204) /* RX signal control */
+#define B43_NPHY_RXPIL_CYCNT0			B43_PHY_N(0x205) /* RX pilot cycle counter 0 */
+#define B43_NPHY_RXPIL_CYCNT1			B43_PHY_N(0x206) /* RX pilot cycle counter 1 */
+#define B43_NPHY_RXPIL_CYCNT2			B43_PHY_N(0x207) /* RX pilot cycle counter 2 */
+#define B43_NPHY_AFESEQ_RX2TX_PUD_10M		B43_PHY_N(0x208) /* AFE seq rx2tx power up/down delay 10M */
+#define B43_NPHY_AFESEQ_TX2RX_PUD_10M		B43_PHY_N(0x209) /* AFE seq tx2rx power up/down delay 10M */
+#define B43_NPHY_DSSSCCK_CRSEXTL		B43_PHY_N(0x20A) /* DSSS/CCK CRS extension length */
+#define B43_NPHY_ML_LOGSS_RATSLOPE		B43_PHY_N(0x20B) /* ML/logss ratio slope */
+#define B43_NPHY_RIFS_SRCTL			B43_PHY_N(0x20C) /* RIFS search timeout length */
+#define B43_NPHY_TXREALFD			B43_PHY_N(0x20D) /* TX real frame delay */
+#define B43_NPHY_HPANT_SWTHRES			B43_PHY_N(0x20E) /* High power antenna switch threshold */
+#define B43_NPHY_EDCRS_ASSTHRES0		B43_PHY_N(0x210) /* ED CRS assert threshold 0 */
+#define B43_NPHY_EDCRS_ASSTHRES1		B43_PHY_N(0x211) /* ED CRS assert threshold 1 */
+#define B43_NPHY_EDCRS_DEASSTHRES0		B43_PHY_N(0x212) /* ED CRS deassert threshold 0 */
+#define B43_NPHY_EDCRS_DEASSTHRES1		B43_PHY_N(0x213) /* ED CRS deassert threshold 1 */
+#define B43_NPHY_STR_WTIME20U			B43_PHY_N(0x214) /* STR wait time 20U */
+#define B43_NPHY_STR_WTIME20L			B43_PHY_N(0x215) /* STR wait time 20L */
+#define B43_NPHY_TONE_MIDX657M			B43_PHY_N(0x216) /* Tone map index 657M */
+#define B43_NPHY_HTSIGTONES			B43_PHY_N(0x217) /* HT signal tones */
+#define B43_NPHY_RSSI1				B43_PHY_N(0x219) /* RSSI value 1 */
+#define B43_NPHY_RSSI2				B43_PHY_N(0x21A) /* RSSI value 2 */
+#define B43_NPHY_CHAN_ESTHANG			B43_PHY_N(0x21D) /* Channel estimate hang */
+#define B43_NPHY_FINERX2_CGC			B43_PHY_N(0x221) /* Fine RX 2 clock gate control */
+#define  B43_NPHY_FINERX2_CGC_DECGC		0x0008 /* Decode gated clocks */
+#define B43_NPHY_TXPCTL_INIT			B43_PHY_N(0x222) /* TX power controll init */
+#define  B43_NPHY_TXPCTL_INIT_PIDXI1		0x00FF /* Power index init 1 */
+#define  B43_NPHY_TXPCTL_INIT_PIDXI1_SHIFT	0
+
+
+
+/* Broadcom 2055 radio registers */
+
+#define B2055_GEN_SPARE			0x00 /* GEN spare */
+#define B2055_SP_PINPD			0x02 /* SP PIN PD */
+#define B2055_C1_SP_RSSI		0x03 /* SP RSSI Core 1 */
+#define B2055_C1_SP_PDMISC		0x04 /* SP PD MISC Core 1 */
+#define B2055_C2_SP_RSSI		0x05 /* SP RSSI Core 2 */
+#define B2055_C2_SP_PDMISC		0x06 /* SP PD MISC Core 2 */
+#define B2055_C1_SP_RXGC1		0x07 /* SP RX GC1 Core 1 */
+#define B2055_C1_SP_RXGC2		0x08 /* SP RX GC2 Core 1 */
+#define B2055_C2_SP_RXGC1		0x09 /* SP RX GC1 Core 2 */
+#define B2055_C2_SP_RXGC2		0x0A /* SP RX GC2 Core 2 */
+#define B2055_C1_SP_LPFBWSEL		0x0B /* SP LPF BW select Core 1 */
+#define B2055_C2_SP_LPFBWSEL		0x0C /* SP LPF BW select Core 2 */
+#define B2055_C1_SP_TXGC1		0x0D /* SP TX GC1 Core 1 */
+#define B2055_C1_SP_TXGC2		0x0E /* SP TX GC2 Core 1 */
+#define B2055_C2_SP_TXGC1		0x0F /* SP TX GC1 Core 2 */
+#define B2055_C2_SP_TXGC2		0x10 /* SP TX GC2 Core 2 */
+#define B2055_MASTER1			0x11 /* Master control 1 */
+#define B2055_MASTER2			0x12 /* Master control 2 */
+#define B2055_PD_LGEN			0x13 /* PD LGEN */
+#define B2055_PD_PLLTS			0x14 /* PD PLL TS */
+#define B2055_C1_PD_LGBUF		0x15 /* PD Core 1 LGBUF */
+#define B2055_C1_PD_TX			0x16 /* PD Core 1 TX */
+#define B2055_C1_PD_RXTX		0x17 /* PD Core 1 RXTX */
+#define B2055_C1_PD_RSSIMISC		0x18 /* PD Core 1 RSSI MISC */
+#define B2055_C2_PD_LGBUF		0x19 /* PD Core 2 LGBUF */
+#define B2055_C2_PD_TX			0x1A /* PD Core 2 TX */
+#define B2055_C2_PD_RXTX		0x1B /* PD Core 2 RXTX */
+#define B2055_C2_PD_RSSIMISC		0x1C /* PD Core 2 RSSI MISC */
+#define B2055_PWRDET_LGEN		0x1D /* PWRDET LGEN */
+#define B2055_C1_PWRDET_LGBUF		0x1E /* PWRDET LGBUF Core 1 */
+#define B2055_C1_PWRDET_RXTX		0x1F /* PWRDET RXTX Core 1 */
+#define B2055_C2_PWRDET_LGBUF		0x20 /* PWRDET LGBUF Core 2 */
+#define B2055_C2_PWRDET_RXTX		0x21 /* PWRDET RXTX Core 2 */
+#define B2055_RRCCAL_CS			0x22 /* RRCCAL Control spare */
+#define B2055_RRCCAL_NOPTSEL		0x23 /* RRCCAL N OPT SEL */
+#define B2055_CAL_MISC			0x24 /* CAL MISC */
+#define B2055_CAL_COUT			0x25 /* CAL Counter out */
+#define B2055_CAL_COUT2			0x26 /* CAL Counter out 2 */
+#define B2055_CAL_CVARCTL		0x27 /* CAL CVAR Control */
+#define B2055_CAL_RVARCTL		0x28 /* CAL RVAR Control */
+#define B2055_CAL_LPOCTL		0x29 /* CAL LPO Control */
+#define B2055_CAL_TS			0x2A /* CAL TS */
+#define B2055_CAL_RCCALRTS		0x2B /* CAL RCCAL READ TS */
+#define B2055_CAL_RCALRTS		0x2C /* CAL RCAL READ TS */
+#define B2055_PADDRV			0x2D /* PAD driver */
+#define B2055_XOCTL1			0x2E /* XO Control 1 */
+#define B2055_XOCTL2			0x2F /* XO Control 2 */
+#define B2055_XOREGUL			0x30 /* XO Regulator */
+#define B2055_XOMISC			0x31 /* XO misc */
+#define B2055_PLL_LFC1			0x32 /* PLL LF C1 */
+#define B2055_PLL_CALVTH		0x33 /* PLL CAL VTH */
+#define B2055_PLL_LFC2			0x34 /* PLL LF C2 */
+#define B2055_PLL_REF			0x35 /* PLL reference */
+#define B2055_PLL_LFR1			0x36 /* PLL LF R1 */
+#define B2055_PLL_PFDCP			0x37 /* PLL PFD CP */
+#define B2055_PLL_IDAC_CPOPAMP		0x38 /* PLL IDAC CPOPAMP */
+#define B2055_PLL_CPREG			0x39 /* PLL CP Regulator */
+#define B2055_PLL_RCAL			0x3A /* PLL RCAL */
+#define B2055_RF_PLLMOD0		0x3B /* RF PLL MOD0 */
+#define B2055_RF_PLLMOD1		0x3C /* RF PLL MOD1 */
+#define B2055_RF_MMDIDAC1		0x3D /* RF MMD IDAC 1 */
+#define B2055_RF_MMDIDAC0		0x3E /* RF MMD IDAC 0 */
+#define B2055_RF_MMDSP			0x3F /* RF MMD spare */
+#define B2055_VCO_CAL1			0x40 /* VCO cal 1 */
+#define B2055_VCO_CAL2			0x41 /* VCO cal 2 */
+#define B2055_VCO_CAL3			0x42 /* VCO cal 3 */
+#define B2055_VCO_CAL4			0x43 /* VCO cal 4 */
+#define B2055_VCO_CAL5			0x44 /* VCO cal 5 */
+#define B2055_VCO_CAL6			0x45 /* VCO cal 6 */
+#define B2055_VCO_CAL7			0x46 /* VCO cal 7 */
+#define B2055_VCO_CAL8			0x47 /* VCO cal 8 */
+#define B2055_VCO_CAL9			0x48 /* VCO cal 9 */
+#define B2055_VCO_CAL10			0x49 /* VCO cal 10 */
+#define B2055_VCO_CAL11			0x4A /* VCO cal 11 */
+#define B2055_VCO_CAL12			0x4B /* VCO cal 12 */
+#define B2055_VCO_CAL13			0x4C /* VCO cal 13 */
+#define B2055_VCO_CAL14			0x4D /* VCO cal 14 */
+#define B2055_VCO_CAL15			0x4E /* VCO cal 15 */
+#define B2055_VCO_CAL16			0x4F /* VCO cal 16 */
+#define B2055_VCO_KVCO			0x50 /* VCO KVCO */
+#define B2055_VCO_CAPTAIL		0x51 /* VCO CAP TAIL */
+#define B2055_VCO_IDACVCO		0x52 /* VCO IDAC VCO */
+#define B2055_VCO_REG			0x53 /* VCO Regulator */
+#define B2055_PLL_RFVTH			0x54 /* PLL RF VTH */
+#define B2055_LGBUF_CENBUF		0x55 /* LGBUF CEN BUF */
+#define B2055_LGEN_TUNE1		0x56 /* LGEN tune 1 */
+#define B2055_LGEN_TUNE2		0x57 /* LGEN tune 2 */
+#define B2055_LGEN_IDAC1		0x58 /* LGEN IDAC 1 */
+#define B2055_LGEN_IDAC2		0x59 /* LGEN IDAC 2 */
+#define B2055_LGEN_BIASC		0x5A /* LGEN BIAS counter */
+#define B2055_LGEN_BIASIDAC		0x5B /* LGEN BIAS IDAC */
+#define B2055_LGEN_RCAL			0x5C /* LGEN RCAL */
+#define B2055_LGEN_DIV			0x5D /* LGEN div */
+#define B2055_LGEN_SPARE2		0x5E /* LGEN spare 2 */
+#define B2055_C1_LGBUF_ATUNE		0x5F /* Core 1 LGBUF A tune */
+#define B2055_C1_LGBUF_GTUNE		0x60 /* Core 1 LGBUF G tune */
+#define B2055_C1_LGBUF_DIV		0x61 /* Core 1 LGBUF div */
+#define B2055_C1_LGBUF_AIDAC		0x62 /* Core 1 LGBUF A IDAC */
+#define B2055_C1_LGBUF_GIDAC		0x63 /* Core 1 LGBUF G IDAC */
+#define B2055_C1_LGBUF_IDACFO		0x64 /* Core 1 LGBUF IDAC filter override */
+#define B2055_C1_LGBUF_SPARE		0x65 /* Core 1 LGBUF spare */
+#define B2055_C1_RX_RFSPC1		0x66 /* Core 1 RX RF SPC1 */
+#define B2055_C1_RX_RFR1		0x67 /* Core 1 RX RF reg 1 */
+#define B2055_C1_RX_RFR2		0x68 /* Core 1 RX RF reg 2 */
+#define B2055_C1_RX_RFRCAL		0x69 /* Core 1 RX RF RCAL */
+#define B2055_C1_RX_BB_BLCMP		0x6A /* Core 1 RX Baseband BUFI LPF CMP */
+#define B2055_C1_RX_BB_LPF		0x6B /* Core 1 RX Baseband LPF */
+#define B2055_C1_RX_BB_MIDACHP		0x6C /* Core 1 RX Baseband MIDAC High-pass */
+#define B2055_C1_RX_BB_VGA1IDAC		0x6D /* Core 1 RX Baseband VGA1 IDAC */
+#define B2055_C1_RX_BB_VGA2IDAC		0x6E /* Core 1 RX Baseband VGA2 IDAC */
+#define B2055_C1_RX_BB_VGA3IDAC		0x6F /* Core 1 RX Baseband VGA3 IDAC */
+#define B2055_C1_RX_BB_BUFOCTL		0x70 /* Core 1 RX Baseband BUFO Control */
+#define B2055_C1_RX_BB_RCCALCTL		0x71 /* Core 1 RX Baseband RCCAL Control */
+#define B2055_C1_RX_BB_RSSICTL1		0x72 /* Core 1 RX Baseband RSSI Control 1 */
+#define B2055_C1_RX_BB_RSSICTL2		0x73 /* Core 1 RX Baseband RSSI Control 2 */
+#define B2055_C1_RX_BB_RSSICTL3		0x74 /* Core 1 RX Baseband RSSI Control 3 */
+#define B2055_C1_RX_BB_RSSICTL4		0x75 /* Core 1 RX Baseband RSSI Control 4 */
+#define B2055_C1_RX_BB_RSSICTL5		0x76 /* Core 1 RX Baseband RSSI Control 5 */
+#define B2055_C1_RX_BB_REG		0x77 /* Core 1 RX Baseband Regulator */
+#define B2055_C1_RX_BB_SPARE1		0x78 /* Core 1 RX Baseband spare 1 */
+#define B2055_C1_RX_TXBBRCAL		0x79 /* Core 1 RX TX BB RCAL */
+#define B2055_C1_TX_RF_SPGA		0x7A /* Core 1 TX RF SGM PGA */
+#define B2055_C1_TX_RF_SPAD		0x7B /* Core 1 TX RF SGM PAD */
+#define B2055_C1_TX_RF_CNTPGA1		0x7C /* Core 1 TX RF counter PGA 1 */
+#define B2055_C1_TX_RF_CNTPAD1		0x7D /* Core 1 TX RF counter PAD 1 */
+#define B2055_C1_TX_RF_PGAIDAC		0x7E /* Core 1 TX RF PGA IDAC */
+#define B2055_C1_TX_PGAPADTN		0x7F /* Core 1 TX PGA PAD TN */
+#define B2055_C1_TX_PADIDAC1		0x80 /* Core 1 TX PAD IDAC 1 */
+#define B2055_C1_TX_PADIDAC2		0x81 /* Core 1 TX PAD IDAC 2 */
+#define B2055_C1_TX_MXBGTRIM		0x82 /* Core 1 TX MX B/G TRIM */
+#define B2055_C1_TX_RF_RCAL		0x83 /* Core 1 TX RF RCAL */
+#define B2055_C1_TX_RF_PADTSSI1		0x84 /* Core 1 TX RF PAD TSSI1 */
+#define B2055_C1_TX_RF_PADTSSI2		0x85 /* Core 1 TX RF PAD TSSI2 */
+#define B2055_C1_TX_RF_SPARE		0x86 /* Core 1 TX RF spare */
+#define B2055_C1_TX_RF_IQCAL1		0x87 /* Core 1 TX RF I/Q CAL 1 */
+#define B2055_C1_TX_RF_IQCAL2		0x88 /* Core 1 TX RF I/Q CAL 2 */
+#define B2055_C1_TXBB_RCCAL		0x89 /* Core 1 TXBB RC CAL Control */
+#define B2055_C1_TXBB_LPF1		0x8A /* Core 1 TXBB LPF 1 */
+#define B2055_C1_TX_VOSCNCL		0x8B /* Core 1 TX VOS CNCL */
+#define B2055_C1_TX_LPF_MXGMIDAC	0x8C /* Core 1 TX LPF MXGM IDAC */
+#define B2055_C1_TX_BB_MXGM		0x8D /* Core 1 TX BB MXGM */
+#define B2055_C2_LGBUF_ATUNE		0x8E /* Core 2 LGBUF A tune */
+#define B2055_C2_LGBUF_GTUNE		0x8F /* Core 2 LGBUF G tune */
+#define B2055_C2_LGBUF_DIV		0x90 /* Core 2 LGBUF div */
+#define B2055_C2_LGBUF_AIDAC		0x91 /* Core 2 LGBUF A IDAC */
+#define B2055_C2_LGBUF_GIDAC		0x92 /* Core 2 LGBUF G IDAC */
+#define B2055_C2_LGBUF_IDACFO		0x93 /* Core 2 LGBUF IDAC filter override */
+#define B2055_C2_LGBUF_SPARE		0x94 /* Core 2 LGBUF spare */
+#define B2055_C2_RX_RFSPC1		0x95 /* Core 2 RX RF SPC1 */
+#define B2055_C2_RX_RFR1		0x96 /* Core 2 RX RF reg 1 */
+#define B2055_C2_RX_RFR2		0x97 /* Core 2 RX RF reg 2 */
+#define B2055_C2_RX_RFRCAL		0x98 /* Core 2 RX RF RCAL */
+#define B2055_C2_RX_BB_BLCMP		0x99 /* Core 2 RX Baseband BUFI LPF CMP */
+#define B2055_C2_RX_BB_LPF		0x9A /* Core 2 RX Baseband LPF */
+#define B2055_C2_RX_BB_MIDACHP		0x9B /* Core 2 RX Baseband MIDAC High-pass */
+#define B2055_C2_RX_BB_VGA1IDAC		0x9C /* Core 2 RX Baseband VGA1 IDAC */
+#define B2055_C2_RX_BB_VGA2IDAC		0x9D /* Core 2 RX Baseband VGA2 IDAC */
+#define B2055_C2_RX_BB_VGA3IDAC		0x9E /* Core 2 RX Baseband VGA3 IDAC */
+#define B2055_C2_RX_BB_BUFOCTL		0x9F /* Core 2 RX Baseband BUFO Control */
+#define B2055_C2_RX_BB_RCCALCTL		0xA0 /* Core 2 RX Baseband RCCAL Control */
+#define B2055_C2_RX_BB_RSSICTL1		0xA1 /* Core 2 RX Baseband RSSI Control 1 */
+#define B2055_C2_RX_BB_RSSICTL2		0xA2 /* Core 2 RX Baseband RSSI Control 2 */
+#define B2055_C2_RX_BB_RSSICTL3		0xA3 /* Core 2 RX Baseband RSSI Control 3 */
+#define B2055_C2_RX_BB_RSSICTL4		0xA4 /* Core 2 RX Baseband RSSI Control 4 */
+#define B2055_C2_RX_BB_RSSICTL5		0xA5 /* Core 2 RX Baseband RSSI Control 5 */
+#define B2055_C2_RX_BB_REG		0xA6 /* Core 2 RX Baseband Regulator */
+#define B2055_C2_RX_BB_SPARE1		0xA7 /* Core 2 RX Baseband spare 1 */
+#define B2055_C2_RX_TXBBRCAL		0xA8 /* Core 2 RX TX BB RCAL */
+#define B2055_C2_TX_RF_SPGA		0xA9 /* Core 2 TX RF SGM PGA */
+#define B2055_C2_TX_RF_SPAD		0xAA /* Core 2 TX RF SGM PAD */
+#define B2055_C2_TX_RF_CNTPGA1		0xAB /* Core 2 TX RF counter PGA 1 */
+#define B2055_C2_TX_RF_CNTPAD1		0xAC /* Core 2 TX RF counter PAD 1 */
+#define B2055_C2_TX_RF_PGAIDAC		0xAD /* Core 2 TX RF PGA IDAC */
+#define B2055_C2_TX_PGAPADTN		0xAE /* Core 2 TX PGA PAD TN */
+#define B2055_C2_TX_PADIDAC1		0xAF /* Core 2 TX PAD IDAC 1 */
+#define B2055_C2_TX_PADIDAC2		0xB0 /* Core 2 TX PAD IDAC 2 */
+#define B2055_C2_TX_MXBGTRIM		0xB1 /* Core 2 TX MX B/G TRIM */
+#define B2055_C2_TX_RF_RCAL		0xB2 /* Core 2 TX RF RCAL */
+#define B2055_C2_TX_RF_PADTSSI1		0xB3 /* Core 2 TX RF PAD TSSI1 */
+#define B2055_C2_TX_RF_PADTSSI2		0xB4 /* Core 2 TX RF PAD TSSI2 */
+#define B2055_C2_TX_RF_SPARE		0xB5 /* Core 2 TX RF spare */
+#define B2055_C2_TX_RF_IQCAL1		0xB6 /* Core 2 TX RF I/Q CAL 1 */
+#define B2055_C2_TX_RF_IQCAL2		0xB7 /* Core 2 TX RF I/Q CAL 2 */
+#define B2055_C2_TXBB_RCCAL		0xB8 /* Core 2 TXBB RC CAL Control */
+#define B2055_C2_TXBB_LPF1		0xB9 /* Core 2 TXBB LPF 1 */
+#define B2055_C2_TX_VOSCNCL		0xBA /* Core 2 TX VOS CNCL */
+#define B2055_C2_TX_LPF_MXGMIDAC	0xBB /* Core 2 TX LPF MXGM IDAC */
+#define B2055_C2_TX_BB_MXGM		0xBC /* Core 2 TX BB MXGM */
+#define B2055_PRG_GCHP21		0xBD /* PRG GC HPVGA23 21 */
+#define B2055_PRG_GCHP22		0xBE /* PRG GC HPVGA23 22 */
+#define B2055_PRG_GCHP23		0xBF /* PRG GC HPVGA23 23 */
+#define B2055_PRG_GCHP24		0xC0 /* PRG GC HPVGA23 24 */
+#define B2055_PRG_GCHP25		0xC1 /* PRG GC HPVGA23 25 */
+#define B2055_PRG_GCHP26		0xC2 /* PRG GC HPVGA23 26 */
+#define B2055_PRG_GCHP27		0xC3 /* PRG GC HPVGA23 27 */
+#define B2055_PRG_GCHP28		0xC4 /* PRG GC HPVGA23 28 */
+#define B2055_PRG_GCHP29		0xC5 /* PRG GC HPVGA23 29 */
+#define B2055_PRG_GCHP30		0xC6 /* PRG GC HPVGA23 30 */
+#define B2055_C1_LNA_GAINBST		0xCD /* Core 1 LNA GAINBST */
+#define B2055_C1_B0NB_RSSIVCM		0xD2 /* Core 1 B0 narrow-band RSSI VCM */
+#define B2055_C1_GENSPARE2		0xD6 /* Core 1 GEN spare 2 */
+#define B2055_C2_LNA_GAINBST		0xD9 /* Core 2 LNA GAINBST */
+#define B2055_C2_B0NB_RSSIVCM		0xDE /* Core 2 B0 narrow-band RSSI VCM */
+#define B2055_C2_GENSPARE2		0xE2 /* Core 2 GEN spare 2 */
+
+
+
+struct b43_wldev;
+
+struct b43_phy_n {
+	bool initialised;
+
+	//TODO lots of missing stuff
+};
+
+
+struct b43_phy_operations;
+extern const struct b43_phy_operations b43_phyops_n;
+
+#endif /* B43_NPHY_H_ */
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-08-30 02:13:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-08-30 02:20:15.000000000 +0200
@@ -43,13 +43,13 @@
 
 #include "b43.h"
 #include "main.h"
 #include "debugfs.h"
 #include "phy_common.h"
 #include "phy_g.h"
-#include "nphy.h"
+#include "phy_n.h"
 #include "dma.h"
 #include "pio.h"
 #include "sysfs.h"
 #include "xmit.h"
 #include "lo.h"
 #include "pcmcia.h"
Index: wireless-testing/drivers/net/wireless/b43/phy_common.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.c	2008-08-30 02:13:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.c	2008-08-30 02:18:21.000000000 +0200
@@ -26,13 +26,13 @@
 
 */
 
 #include "phy_common.h"
 #include "phy_g.h"
 #include "phy_a.h"
-#include "nphy.h"
+#include "phy_n.h"
 #include "b43.h"
 #include "main.h"
 
 
 int b43_phy_operations_setup(struct b43_wldev *dev)
 {
Index: wireless-testing/drivers/net/wireless/b43/tables_nphy.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/tables_nphy.c	2008-08-30 02:13:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/tables_nphy.c	2008-08-30 02:19:02.000000000 +0200
@@ -22,13 +22,13 @@
 
 */
 
 #include "b43.h"
 #include "tables_nphy.h"
 #include "phy_common.h"
-#include "nphy.h"
+#include "phy_n.h"
 
 
 struct b2055_inittab_entry {
 	/* Value to write if we use the 5GHz band. */
 	u16 ghz5;
 	/* Value to write if we use the 2.4GHz band. */


From mb at bu3sch.de  Sat Aug 30 10:55:48 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 10:55:48 +0200
Subject: [PATCH] b43: Add LP-PHY template
Message-ID: <200808301055.49668.mb@bu3sch.de>

This adds template code for the LP-PHY.
No actual functionality is implemented.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/Kconfig
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Kconfig	2008-08-30 10:43:51.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Kconfig	2008-08-30 10:50:37.000000000 +0200
@@ -77,12 +77,24 @@ config B43_NPHY
 	  Support for the IEEE 802.11n draft.
 
 	  THIS IS BROKEN AND DOES NOT WORK YET.
 
 	  SAY N.
 
+config B43_PHY_LP
+	bool "IEEE 802.11g LP-PHY support (BROKEN)"
+	depends on B43 && EXPERIMENTAL && BROKEN
+	---help---
+	  Support for the LP-PHY.
+	  The LP-PHY is an IEEE 802.11g based PHY built into some notebooks
+	  and embedded devices.
+
+	  THIS IS BROKEN AND DOES NOT WORK YET.
+
+	  SAY N.
+
 # This config option automatically enables b43 LEDS support,
 # if it's possible.
 config B43_LEDS
 	bool
 	depends on B43 && MAC80211_LEDS && (LEDS_CLASS = y || LEDS_CLASS = B43)
 	default y
Index: wireless-testing/drivers/net/wireless/b43/phy_common.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.c	2008-08-30 10:44:11.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.c	2008-08-30 10:47:11.000000000 +0200
@@ -27,12 +27,13 @@
 */
 
 #include "phy_common.h"
 #include "phy_g.h"
 #include "phy_a.h"
 #include "phy_n.h"
+#include "phy_lp.h"
 #include "b43.h"
 #include "main.h"
 
 
 int b43_phy_operations_setup(struct b43_wldev *dev)
 {
@@ -51,13 +52,15 @@ int b43_phy_operations_setup(struct b43_
 	case B43_PHYTYPE_N:
 #ifdef CONFIG_B43_NPHY
 		phy->ops = &b43_phyops_n;
 #endif
 		break;
 	case B43_PHYTYPE_LP:
-		/* FIXME: Not yet */
+#ifdef CONFIG_B43_PHY_LP
+		phy->ops = &b43_phyops_lp;
+#endif
 		break;
 	}
 	if (B43_WARN_ON(!phy->ops))
 		return -ENODEV;
 
 	err = phy->ops->allocate(dev);
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c	2008-08-30 10:50:49.000000000 +0200
@@ -0,0 +1,142 @@
+/*
+
+  Broadcom B43 wireless driver
+  IEEE 802.11g LP-PHY driver
+
+  Copyright (c) 2008 Michael Buesch <mb at bu3sch.de>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+#include "b43.h"
+#include "phy_lp.h"
+#include "phy_common.h"
+
+
+static int b43_lpphy_op_allocate(struct b43_wldev *dev)
+{
+	struct b43_phy_lp *lpphy;
+
+	lpphy = kzalloc(sizeof(*lpphy), GFP_KERNEL);
+	if (!lpphy)
+		return -ENOMEM;
+	dev->phy.lp = lpphy;
+
+	//TODO
+
+	return 0;
+}
+
+static int b43_lpphy_op_init(struct b43_wldev *dev)
+{
+	struct b43_phy_lp *lpphy = dev->phy.lp;
+
+	//TODO
+	lpphy->initialised = 1;
+
+	return 0;
+}
+
+static void b43_lpphy_op_exit(struct b43_wldev *dev)
+{
+	struct b43_phy_lp *lpphy = dev->phy.lp;
+
+	if (lpphy->initialised) {
+		//TODO
+		lpphy->initialised = 0;
+	}
+
+	kfree(lpphy);
+	dev->phy.lp = NULL;
+}
+
+static u16 b43_lpphy_op_read(struct b43_wldev *dev, u16 reg)
+{
+	//TODO
+	return 0;
+}
+
+static void b43_lpphy_op_write(struct b43_wldev *dev, u16 reg, u16 value)
+{
+	//TODO
+}
+
+static u16 b43_lpphy_op_radio_read(struct b43_wldev *dev, u16 reg)
+{
+	//TODO
+	return 0;
+}
+
+static void b43_lpphy_op_radio_write(struct b43_wldev *dev, u16 reg, u16 value)
+{
+	/* Register 1 is a 32-bit register. */
+	B43_WARN_ON(reg == 1);
+
+	//TODO
+}
+
+static void b43_lpphy_op_software_rfkill(struct b43_wldev *dev,
+					 enum rfkill_state state)
+{
+	//TODO
+}
+
+static int b43_lpphy_op_switch_channel(struct b43_wldev *dev,
+				       unsigned int new_channel)
+{
+	//TODO
+	return 0;
+}
+
+static unsigned int b43_lpphy_op_get_default_chan(struct b43_wldev *dev)
+{
+	return 1; /* Default to channel 1 */
+}
+
+static void b43_lpphy_op_set_rx_antenna(struct b43_wldev *dev, int antenna)
+{
+	//TODO
+}
+
+static void b43_lpphy_op_adjust_txpower(struct b43_wldev *dev)
+{
+	//TODO
+}
+
+static enum b43_txpwr_result b43_lpphy_op_recalc_txpower(struct b43_wldev *dev,
+							 bool ignore_tssi)
+{
+	//TODO
+	return B43_TXPWR_RES_DONE;
+}
+
+
+const struct b43_phy_operations b43_phyops_lp = {
+	.allocate		= b43_lpphy_op_allocate,
+	.init			= b43_lpphy_op_init,
+	.exit			= b43_lpphy_op_exit,
+	.phy_read		= b43_lpphy_op_read,
+	.phy_write		= b43_lpphy_op_write,
+	.radio_read		= b43_lpphy_op_radio_read,
+	.radio_write		= b43_lpphy_op_radio_write,
+	.software_rfkill	= b43_lpphy_op_software_rfkill,
+	.switch_channel		= b43_lpphy_op_switch_channel,
+	.get_default_chan	= b43_lpphy_op_get_default_chan,
+	.set_rx_antenna		= b43_lpphy_op_set_rx_antenna,
+	.recalc_txpower		= b43_lpphy_op_recalc_txpower,
+	.adjust_txpower		= b43_lpphy_op_adjust_txpower,
+};
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.h	2008-08-30 10:44:12.000000000 +0200
@@ -0,0 +1,14 @@
+#ifndef LINUX_B43_PHY_LP_H_
+#define LINUX_B43_PHY_LP_H_
+
+/* Definitions for the LP-PHY */
+
+struct b43_phy_lp {
+	bool initialised;
+};
+
+
+struct b43_phy_operations;
+extern const struct b43_phy_operations b43_phyops_lp;
+
+#endif /* LINUX_B43_PHY_LP_H_ */
Index: wireless-testing/drivers/net/wireless/b43/Makefile
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Makefile	2008-08-30 10:44:11.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Makefile	2008-08-30 10:44:12.000000000 +0200
@@ -2,12 +2,13 @@ b43-y				+= main.o
 b43-y				+= tables.o
 b43-$(CONFIG_B43_NPHY)		+= tables_nphy.o
 b43-y				+= phy_common.o
 b43-y				+= phy_g.o
 b43-y				+= phy_a.o
 b43-$(CONFIG_B43_NPHY)		+= phy_n.o
+b43-$(CONFIG_B43_PHY_LP)	+= phy_lp.o
 b43-y				+= sysfs.o
 b43-y				+= xmit.o
 b43-y				+= lo.o
 b43-y				+= wa.o
 b43-y				+= dma.o
 b43-$(CONFIG_B43_PIO)		+= pio.o
Index: wireless-testing/drivers/net/wireless/b43/phy_common.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.h	2008-08-30 02:13:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.h	2008-08-30 10:49:02.000000000 +0200
@@ -162,12 +162,13 @@ struct b43_phy_operations {
 	void (*pwork_60sec)(struct b43_wldev *dev);
 };
 
 struct b43_phy_a;
 struct b43_phy_g;
 struct b43_phy_n;
+struct b43_phy_lp;
 
 struct b43_phy {
 	/* Hardware operation callbacks. */
 	const struct b43_phy_operations *ops;
 
 	/* Most hardware context information is stored in the standard-
@@ -182,12 +183,14 @@ struct b43_phy {
 		/* A-PHY specific information */
 		struct b43_phy_a *a;
 		/* G-PHY specific information */
 		struct b43_phy_g *g;
 		/* N-PHY specific information */
 		struct b43_phy_n *n;
+		/* LP-PHY specific information */
+		struct b43_phy_lp *lp;
 	};
 
 	/* Band support flags. */
 	bool supports_2ghz;
 	bool supports_5ghz;
 


From gavron at wetwork.net  Sat Aug 30 11:28:05 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Sat, 30 Aug 2008 02:28:05 -0700
Subject: [PATCH] b43: Add LP-PHY template
In-Reply-To: <200808301055.49668.mb@bu3sch.de>
References: <200808301055.49668.mb@bu3sch.de>
Message-ID: <48B912A5.3080803@wetwork.net>


Michael Buesch wrote:
> ...
> +
> +	  THIS IS BROKEN AND DOES NOT WORK YET.
> +
> +	  SAY N.
> +
>  # This config option automatically enables b43 LEDS support,
>  # if it's possible.
>  config B43_LEDS
>  	bool
>  	depends on B43 && MAC80211_LEDS && (LEDS_CLASS = y || LEDS_CLASS = B43)
>  	default y

Michael, shouldn't

     default y
be
     default n

?

Ehud
Melbourne
Australia[r]
P.S. I took John and linux-wireless off my reply because it's tangential 
and if you don't agree then the less that get hassled the better.  I'm 
also in a bandwidth-limited hotel and didn't want to reproduce the whole 
post to comment on [something as tangential] Kconfig


From mb at bu3sch.de  Sat Aug 30 11:32:42 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 11:32:42 +0200
Subject: [PATCH] b43: Add LP-PHY template
In-Reply-To: <48B912A5.3080803@wetwork.net>
References: <200808301055.49668.mb@bu3sch.de> <48B912A5.3080803@wetwork.net>
Message-ID: <200808301132.42268.mb@bu3sch.de>

On Saturday 30 August 2008 11:28:05 gavron at wetwork.net wrote:
> 
> Michael Buesch wrote:
> > ...
> > +
> > +	  THIS IS BROKEN AND DOES NOT WORK YET.
> > +
> > +	  SAY N.
> > +
> >  # This config option automatically enables b43 LEDS support,
> >  # if it's possible.
> >  config B43_LEDS
> >  	bool
> >  	depends on B43 && MAC80211_LEDS && (LEDS_CLASS = y || LEDS_CLASS = B43)
> >  	default y
> 
> Michael, shouldn't
> 
>      default y
> be
>      default n

no. This option will be auto-yes, if the dependencies are fulfilled.
auto-no otherwise.


-- 
Greetings Michael.


From gavron at wetwork.net  Sat Aug 30 11:35:04 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Sat, 30 Aug 2008 02:35:04 -0700
Subject: [PATCH] b43: Add LP-PHY template
In-Reply-To: <200808301132.42268.mb@bu3sch.de>
References: <200808301055.49668.mb@bu3sch.de> <48B912A5.3080803@wetwork.net>
	<200808301132.42268.mb@bu3sch.de>
Message-ID: <48B91448.9080808@wetwork.net>


Michael Buesch wrote:
> On Saturday 30 August 2008 11:28:05 gavron at wetwork.net wrote:
>   
>> Michael Buesch wrote:
>>     
>>> ...
>>> +
>>> +	  THIS IS BROKEN AND DOES NOT WORK YET.
>>> +
>>> +	  SAY N.
>>> +
>>>  # This config option automatically enables b43 LEDS support,
>>>  # if it's possible.
>>>  config B43_LEDS
>>>  	bool
>>>  	depends on B43 && MAC80211_LEDS && (LEDS_CLASS = y || LEDS_CLASS = B43)
>>>  	default y
>>>       
>> Michael, shouldn't
>>
>>      default y
>> be
>>      default n
>>     
>
> no. This option will be auto-yes, if the dependencies are fulfilled.
> auto-no otherwise.
>
>
>   
Thank you for the quick response.  I will seek to discover how to never 
set "broken" ;)

Regards

Ehud


From mb at bu3sch.de  Sat Aug 30 11:49:45 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 11:49:45 +0200
Subject: [PATCH] b43: Add LP-PHY read/write phyops
Message-ID: <200808301149.45597.mb@bu3sch.de>

This adds read/write phyops for the LP-PHY and LP-PHY radios.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.c	2008-08-30 10:50:49.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c	2008-08-30 11:33:50.000000000 +0200
@@ -63,33 +63,44 @@ static void b43_lpphy_op_exit(struct b43
 	kfree(lpphy);
 	dev->phy.lp = NULL;
 }
 
 static u16 b43_lpphy_op_read(struct b43_wldev *dev, u16 reg)
 {
-	//TODO
-	return 0;
+	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
+	return b43_read16(dev, B43_MMIO_PHY_DATA);
 }
 
 static void b43_lpphy_op_write(struct b43_wldev *dev, u16 reg, u16 value)
 {
-	//TODO
+	b43_write16(dev, B43_MMIO_PHY_CONTROL, reg);
+	b43_write16(dev, B43_MMIO_PHY_DATA, value);
 }
 
 static u16 b43_lpphy_op_radio_read(struct b43_wldev *dev, u16 reg)
 {
-	//TODO
-	return 0;
+	/* Register 1 is a 32-bit register. */
+	B43_WARN_ON(reg == 1);
+	/* LP-PHY needs a special bit set for read access */
+	if (dev->phy.rev < 2) {
+		if (reg != 0x4001)
+			reg |= 0x100;
+	} else
+		reg |= 0x200;
+
+	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
+	return b43_read16(dev, B43_MMIO_RADIO_DATA_LOW);
 }
 
 static void b43_lpphy_op_radio_write(struct b43_wldev *dev, u16 reg, u16 value)
 {
 	/* Register 1 is a 32-bit register. */
 	B43_WARN_ON(reg == 1);
 
-	//TODO
+	b43_write16(dev, B43_MMIO_RADIO_CONTROL, reg);
+	b43_write16(dev, B43_MMIO_RADIO_DATA_LOW, value);
 }
 
 static void b43_lpphy_op_software_rfkill(struct b43_wldev *dev,
 					 enum rfkill_state state)
 {
 	//TODO


From jvfengda at yahoo.com  Sat Aug 30 11:50:19 2008
From: jvfengda at yahoo.com (Da Feng)
Date: Sat, 30 Aug 2008 02:50:19 -0700 (PDT)
Subject: ap refuse to associate
Message-ID: <237977.65533.qm@web35902.mail.mud.yahoo.com>

hi:
I get this from dmesg, and don't know why  my router refused the request.
thanks in advance.

wlan0: RX authentication from 08:10:74:1e:b8:c8 (alg=0 transaction=2 status=    0)
wlan0: authenticated
wlan0: associate with AP 08:10:74:1e:b8:c8
wlan0: RX AssocResp from 08:10:74:1e:b8:c8 (capab=0x411 status=13 aid=0)
wlan0: AP denied association (code=13)
wlan0: associate with AP 08:10:74:1e:b8:c8
wlan0: associate with AP 08:10:74:1e:b8:c8
wlan0: association with AP 08:10:74:1e:b8:c8 timed out
wlan0: RX deauthentication from 08:10:74:1e:b8:c8 (reason=3)
wlan0: deauthenticated
mac80211-phy0: failed to set key (0, ff:ff:ff:ff:ff:ff) to hardware (-22)


 DaFENG
Coder
Telecommunication && Network Industry
Pudong
Shanghai
China


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080830/ddb19151/attachment.html>

From for.lexa at gmail.com  Sat Aug 30 12:32:54 2008
From: for.lexa at gmail.com (for.lexa at gmail.com)
Date: Sat, 30 Aug 2008 13:32:54 +0300
Subject: ap refuse to associate
In-Reply-To: <237977.65533.qm@web35902.mail.mud.yahoo.com>
References: <237977.65533.qm@web35902.mail.mud.yahoo.com>
Message-ID: <200808301332.55467.for.lexa@gmail.com>

On Saturday 30 August 2008 12:50:19 Da Feng wrote:
> hi:
> I get this from dmesg, and don't know why  my router refused the 
request.
> thanks in advance.
>
> wlan0: RX authentication from 08:10:74:1e:b8:c8 (alg=0 
transaction=2
> status=    0) wlan0: authenticated
> wlan0: associate with AP 08:10:74:1e:b8:c8
> wlan0: RX AssocResp from 08:10:74:1e:b8:c8 (capab=0x411 
status=13 aid=0)
> wlan0: AP denied association (code=13)
> wlan0: associate with AP 08:10:74:1e:b8:c8
> wlan0: associate with AP 08:10:74:1e:b8:c8
> wlan0: association with AP 08:10:74:1e:b8:c8 timed out
> wlan0: RX deauthentication from 08:10:74:1e:b8:c8 (reason=3)
> wlan0: deauthenticated
> mac80211-phy0: failed to set key (0, ff:ff:ff:ff:ff:ff) to hardware (-22)
>
>
>  DaFENG
> Coder
> Telecommunication && Network Industry
> Pudong
> Shanghai
> China
Hi, i have the same problem, but i'm using iwl4965, may be this is 
problem in mac80211? Kernel is 2.6.26-gentoo-r1, it includes 2.6.26.2 
patch.
I will install Broadcom 4306 card into my pc and will test it with b43 
driver. 


From mb at bu3sch.de  Sat Aug 30 13:07:31 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 30 Aug 2008 13:07:31 +0200
Subject: [PATCH] b43: Add LP-PHY radio register definitions
Message-ID: <200808301307.31745.mb@bu3sch.de>

This adds definitions for the LP-PHY radios.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Please queue for the next merge window.


Index: wireless-testing/drivers/net/wireless/b43/phy_lp.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.h	2008-08-30 10:44:12.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.h	2008-08-30 13:04:48.000000000 +0200
@@ -1,11 +1,537 @@
 #ifndef LINUX_B43_PHY_LP_H_
 #define LINUX_B43_PHY_LP_H_
 
 /* Definitions for the LP-PHY */
 
+
+
+
+#define B43_LP_RADIO(radio_reg)			(radio_reg)
+#define B43_LP_NORTH(radio_reg)			B43_LP_RADIO(radio_reg)
+#define B43_LP_SOUTH(radio_reg)			B43_LP_RADIO((radio_reg) | 0x4000)
+
+
+/*** Broadcom 2062 NORTH radio registers ***/
+#define B2062_N_COMM1				B43_LP_NORTH(0x000) /* Common 01 (north) */
+#define B2062_N_COMM2				B43_LP_NORTH(0x002) /* Common 02 (north) */
+#define B2062_N_COMM3				B43_LP_NORTH(0x003) /* Common 03 (north) */
+#define B2062_N_COMM4				B43_LP_NORTH(0x004) /* Common 04 (north) */
+#define B2062_N_COMM5				B43_LP_NORTH(0x005) /* Common 05 (north) */
+#define B2062_N_COMM6				B43_LP_NORTH(0x006) /* Common 06 (north) */
+#define B2062_N_COMM7				B43_LP_NORTH(0x007) /* Common 07 (north) */
+#define B2062_N_COMM8				B43_LP_NORTH(0x008) /* Common 08 (north) */
+#define B2062_N_COMM9				B43_LP_NORTH(0x009) /* Common 09 (north) */
+#define B2062_N_COMM10				B43_LP_NORTH(0x00A) /* Common 10 (north) */
+#define B2062_N_COMM11				B43_LP_NORTH(0x00B) /* Common 11 (north) */
+#define B2062_N_COMM12				B43_LP_NORTH(0x00C) /* Common 12 (north) */
+#define B2062_N_COMM13				B43_LP_NORTH(0x00D) /* Common 13 (north) */
+#define B2062_N_COMM14				B43_LP_NORTH(0x00E) /* Common 14 (north) */
+#define B2062_N_COMM15				B43_LP_NORTH(0x00F) /* Common 15 (north) */
+#define B2062_N_PDN_CTL0			B43_LP_NORTH(0x010) /* PDN Control 0 (north) */
+#define B2062_N_PDN_CTL1			B43_LP_NORTH(0x011) /* PDN Control 1 (north) */
+#define B2062_N_PDN_CTL2			B43_LP_NORTH(0x012) /* PDN Control 2 (north) */
+#define B2062_N_PDN_CTL3			B43_LP_NORTH(0x013) /* PDN Control 3 (north) */
+#define B2062_N_PDN_CTL4			B43_LP_NORTH(0x014) /* PDN Control 4 (north) */
+#define B2062_N_GEN_CTL0			B43_LP_NORTH(0x015) /* GEN Control 0 (north) */
+#define B2062_N_IQ_CALIB			B43_LP_NORTH(0x016) /* IQ Calibration (north) */
+#define B2062_N_LGENC				B43_LP_NORTH(0x017) /* LGENC (north) */
+#define B2062_N_LGENA_LPF			B43_LP_NORTH(0x018) /* LGENA LPF (north) */
+#define B2062_N_LGENA_BIAS0			B43_LP_NORTH(0x019) /* LGENA Bias 0 (north) */
+#define B2062_N_LGNEA_BIAS1			B43_LP_NORTH(0x01A) /* LGNEA Bias 1 (north) */
+#define B2062_N_LGENA_CTL0			B43_LP_NORTH(0x01B) /* LGENA Control 0 (north) */
+#define B2062_N_LGENA_CTL1			B43_LP_NORTH(0x01C) /* LGENA Control 1 (north) */
+#define B2062_N_LGENA_CTL2			B43_LP_NORTH(0x01D) /* LGENA Control 2 (north) */
+#define B2062_N_LGENA_TUNE0			B43_LP_NORTH(0x01E) /* LGENA Tune 0 (north) */
+#define B2062_N_LGENA_TUNE1			B43_LP_NORTH(0x01F) /* LGENA Tune 1 (north) */
+#define B2062_N_LGENA_TUNE2			B43_LP_NORTH(0x020) /* LGENA Tune 2 (north) */
+#define B2062_N_LGENA_TUNE3			B43_LP_NORTH(0x021) /* LGENA Tune 3 (north) */
+#define B2062_N_LGENA_CTL3			B43_LP_NORTH(0x022) /* LGENA Control 3 (north) */
+#define B2062_N_LGENA_CTL4			B43_LP_NORTH(0x023) /* LGENA Control 4 (north) */
+#define B2062_N_LGENA_CTL5			B43_LP_NORTH(0x024) /* LGENA Control 5 (north) */
+#define B2062_N_LGENA_CTL6			B43_LP_NORTH(0x025) /* LGENA Control 6 (north) */
+#define B2062_N_LGENA_CTL7			B43_LP_NORTH(0x026) /* LGENA Control 7 (north) */
+#define B2062_N_RXA_CTL0			B43_LP_NORTH(0x027) /* RXA Control 0 (north) */
+#define B2062_N_RXA_CTL1			B43_LP_NORTH(0x028) /* RXA Control 1 (north) */
+#define B2062_N_RXA_CTL2			B43_LP_NORTH(0x029) /* RXA Control 2 (north) */
+#define B2062_N_RXA_CTL3			B43_LP_NORTH(0x02A) /* RXA Control 3 (north) */
+#define B2062_N_RXA_CTL4			B43_LP_NORTH(0x02B) /* RXA Control 4 (north) */
+#define B2062_N_RXA_CTL5			B43_LP_NORTH(0x02C) /* RXA Control 5 (north) */
+#define B2062_N_RXA_CTL6			B43_LP_NORTH(0x02D) /* RXA Control 6 (north) */
+#define B2062_N_RXA_CTL7			B43_LP_NORTH(0x02E) /* RXA Control 7 (north) */
+#define B2062_N_RXBB_CTL0			B43_LP_NORTH(0x02F) /* RXBB Control 0 (north) */
+#define B2062_N_RXBB_CTL1			B43_LP_NORTH(0x030) /* RXBB Control 1 (north) */
+#define B2062_N_RXBB_CTL2			B43_LP_NORTH(0x031) /* RXBB Control 2 (north) */
+#define B2062_N_RXBB_GAIN0			B43_LP_NORTH(0x032) /* RXBB Gain 0 (north) */
+#define B2062_N_RXBB_GAIN1			B43_LP_NORTH(0x033) /* RXBB Gain 1 (north) */
+#define B2062_N_RXBB_GAIN2			B43_LP_NORTH(0x034) /* RXBB Gain 2 (north) */
+#define B2062_N_RXBB_GAIN3			B43_LP_NORTH(0x035) /* RXBB Gain 3 (north) */
+#define B2062_N_RXBB_RSSI0			B43_LP_NORTH(0x036) /* RXBB RSSI 0 (north) */
+#define B2062_N_RXBB_RSSI1			B43_LP_NORTH(0x037) /* RXBB RSSI 1 (north) */
+#define B2062_N_RXBB_CALIB0			B43_LP_NORTH(0x038) /* RXBB Calibration0 (north) */
+#define B2062_N_RXBB_CALIB1			B43_LP_NORTH(0x039) /* RXBB Calibration1 (north) */
+#define B2062_N_RXBB_CALIB2			B43_LP_NORTH(0x03A) /* RXBB Calibration2 (north) */
+#define B2062_N_RXBB_BIAS0			B43_LP_NORTH(0x03B) /* RXBB Bias 0 (north) */
+#define B2062_N_RXBB_BIAS1			B43_LP_NORTH(0x03C) /* RXBB Bias 1 (north) */
+#define B2062_N_RXBB_BIAS2			B43_LP_NORTH(0x03D) /* RXBB Bias 2 (north) */
+#define B2062_N_RXBB_BIAS3			B43_LP_NORTH(0x03E) /* RXBB Bias 3 (north) */
+#define B2062_N_RXBB_BIAS4			B43_LP_NORTH(0x03F) /* RXBB Bias 4 (north) */
+#define B2062_N_RXBB_BIAS5			B43_LP_NORTH(0x040) /* RXBB Bias 5 (north) */
+#define B2062_N_RXBB_RSSI2			B43_LP_NORTH(0x041) /* RXBB RSSI 2 (north) */
+#define B2062_N_RXBB_RSSI3			B43_LP_NORTH(0x042) /* RXBB RSSI 3 (north) */
+#define B2062_N_RXBB_RSSI4			B43_LP_NORTH(0x043) /* RXBB RSSI 4 (north) */
+#define B2062_N_RXBB_RSSI5			B43_LP_NORTH(0x044) /* RXBB RSSI 5 (north) */
+#define B2062_N_TX_CTL0				B43_LP_NORTH(0x045) /* TX Control 0 (north) */
+#define B2062_N_TX_CTL1				B43_LP_NORTH(0x046) /* TX Control 1 (north) */
+#define B2062_N_TX_CTL2				B43_LP_NORTH(0x047) /* TX Control 2 (north) */
+#define B2062_N_TX_CTL3				B43_LP_NORTH(0x048) /* TX Control 3 (north) */
+#define B2062_N_TX_CTL4				B43_LP_NORTH(0x049) /* TX Control 4 (north) */
+#define B2062_N_TX_CTL5				B43_LP_NORTH(0x04A) /* TX Control 5 (north) */
+#define B2062_N_TX_CTL6				B43_LP_NORTH(0x04B) /* TX Control 6 (north) */
+#define B2062_N_TX_CTL7				B43_LP_NORTH(0x04C) /* TX Control 7 (north) */
+#define B2062_N_TX_CTL8				B43_LP_NORTH(0x04D) /* TX Control 8 (north) */
+#define B2062_N_TX_CTL9				B43_LP_NORTH(0x04E) /* TX Control 9 (north) */
+#define B2062_N_TX_CTL_A			B43_LP_NORTH(0x04F) /* TX Control A (north) */
+#define B2062_N_TX_GC2G				B43_LP_NORTH(0x050) /* TX GC2G (north) */
+#define B2062_N_TX_GC5G				B43_LP_NORTH(0x051) /* TX GC5G (north) */
+#define B2062_N_TX_TUNE				B43_LP_NORTH(0x052) /* TX Tune (north) */
+#define B2062_N_TX_PAD				B43_LP_NORTH(0x053) /* TX PAD (north) */
+#define B2062_N_TX_PGA				B43_LP_NORTH(0x054) /* TX PGA (north) */
+#define B2062_N_TX_PADAUX			B43_LP_NORTH(0x055) /* TX PADAUX (north) */
+#define B2062_N_TX_PGAAUX			B43_LP_NORTH(0x056) /* TX PGAAUX (north) */
+#define B2062_N_TSSI_CTL0			B43_LP_NORTH(0x057) /* TSSI Control 0 (north) */
+#define B2062_N_TSSI_CTL1			B43_LP_NORTH(0x058) /* TSSI Control 1 (north) */
+#define B2062_N_TSSI_CTL2			B43_LP_NORTH(0x059) /* TSSI Control 2 (north) */
+#define B2062_N_IQ_CALIB_CTL0			B43_LP_NORTH(0x05A) /* IQ Calibration Control 0 (north) */
+#define B2062_N_IQ_CALIB_CTL1			B43_LP_NORTH(0x05B) /* IQ Calibration Control 1 (north) */
+#define B2062_N_IQ_CALIB_CTL2			B43_LP_NORTH(0x05C) /* IQ Calibration Control 2 (north) */
+#define B2062_N_CALIB_TS			B43_LP_NORTH(0x05D) /* Calibration TS (north) */
+#define B2062_N_CALIB_CTL0			B43_LP_NORTH(0x05E) /* Calibration Control 0 (north) */
+#define B2062_N_CALIB_CTL1			B43_LP_NORTH(0x05F) /* Calibration Control 1 (north) */
+#define B2062_N_CALIB_CTL2			B43_LP_NORTH(0x060) /* Calibration Control 2 (north) */
+#define B2062_N_CALIB_CTL3			B43_LP_NORTH(0x061) /* Calibration Control 3 (north) */
+#define B2062_N_CALIB_CTL4			B43_LP_NORTH(0x062) /* Calibration Control 4 (north) */
+#define B2062_N_CALIB_DBG0			B43_LP_NORTH(0x063) /* Calibration Debug 0 (north) */
+#define B2062_N_CALIB_DBG1			B43_LP_NORTH(0x064) /* Calibration Debug 1 (north) */
+#define B2062_N_CALIB_DBG2			B43_LP_NORTH(0x065) /* Calibration Debug 2 (north) */
+#define B2062_N_CALIB_DBG3			B43_LP_NORTH(0x066) /* Calibration Debug 3 (north) */
+#define B2062_N_PSENSE_CTL0			B43_LP_NORTH(0x069) /* PSENSE Control 0 (north) */
+#define B2062_N_PSENSE_CTL1			B43_LP_NORTH(0x06A) /* PSENSE Control 1 (north) */
+#define B2062_N_PSENSE_CTL2			B43_LP_NORTH(0x06B) /* PSENSE Control 2 (north) */
+#define B2062_N_TEST_BUF0			B43_LP_NORTH(0x06C) /* TEST BUF0 (north) */
+
+/*** Broadcom 2062 SOUTH radio registers ***/
+#define B2062_S_COMM1				B43_LP_SOUTH(0x000) /* Common 01 (south) */
+#define B2062_S_RADIO_ID_CODE			B43_LP_SOUTH(0x001) /* Radio ID code (south) */
+#define B2062_S_COMM2				B43_LP_SOUTH(0x002) /* Common 02 (south) */
+#define B2062_S_COMM3				B43_LP_SOUTH(0x003) /* Common 03 (south) */
+#define B2062_S_COMM4				B43_LP_SOUTH(0x004) /* Common 04 (south) */
+#define B2062_S_COMM5				B43_LP_SOUTH(0x005) /* Common 05 (south) */
+#define B2062_S_COMM6				B43_LP_SOUTH(0x006) /* Common 06 (south) */
+#define B2062_S_COMM7				B43_LP_SOUTH(0x007) /* Common 07 (south) */
+#define B2062_S_COMM8				B43_LP_SOUTH(0x008) /* Common 08 (south) */
+#define B2062_S_COMM9				B43_LP_SOUTH(0x009) /* Common 09 (south) */
+#define B2062_S_COMM10				B43_LP_SOUTH(0x00A) /* Common 10 (south) */
+#define B2062_S_COMM11				B43_LP_SOUTH(0x00B) /* Common 11 (south) */
+#define B2062_S_COMM12				B43_LP_SOUTH(0x00C) /* Common 12 (south) */
+#define B2062_S_COMM13				B43_LP_SOUTH(0x00D) /* Common 13 (south) */
+#define B2062_S_COMM14				B43_LP_SOUTH(0x00E) /* Common 14 (south) */
+#define B2062_S_COMM15				B43_LP_SOUTH(0x00F) /* Common 15 (south) */
+#define B2062_S_PDS_CTL0			B43_LP_SOUTH(0x010) /* PDS Control 0 (south) */
+#define B2062_S_PDS_CTL1			B43_LP_SOUTH(0x011) /* PDS Control 1 (south) */
+#define B2062_S_PDS_CTL2			B43_LP_SOUTH(0x012) /* PDS Control 2 (south) */
+#define B2062_S_PDS_CTL3			B43_LP_SOUTH(0x013) /* PDS Control 3 (south) */
+#define B2062_S_BG_CTL0				B43_LP_SOUTH(0x014) /* BG Control 0 (south) */
+#define B2062_S_BG_CTL1				B43_LP_SOUTH(0x015) /* BG Control 1 (south) */
+#define B2062_S_BG_CTL2				B43_LP_SOUTH(0x016) /* BG Control 2 (south) */
+#define B2062_S_LGENG_CTL0			B43_LP_SOUTH(0x017) /* LGENG Control 00 (south) */
+#define B2062_S_LGENG_CTL1			B43_LP_SOUTH(0x018) /* LGENG Control 01 (south) */
+#define B2062_S_LGENG_CTL2			B43_LP_SOUTH(0x019) /* LGENG Control 02 (south) */
+#define B2062_S_LGENG_CTL3			B43_LP_SOUTH(0x01A) /* LGENG Control 03 (south) */
+#define B2062_S_LGENG_CTL4			B43_LP_SOUTH(0x01B) /* LGENG Control 04 (south) */
+#define B2062_S_LGENG_CTL5			B43_LP_SOUTH(0x01C) /* LGENG Control 05 (south) */
+#define B2062_S_LGENG_CTL6			B43_LP_SOUTH(0x01D) /* LGENG Control 06 (south) */
+#define B2062_S_LGENG_CTL7			B43_LP_SOUTH(0x01E) /* LGENG Control 07 (south) */
+#define B2062_S_LGENG_CTL8			B43_LP_SOUTH(0x01F) /* LGENG Control 08 (south) */
+#define B2062_S_LGENG_CTL9			B43_LP_SOUTH(0x020) /* LGENG Control 09 (south) */
+#define B2062_S_LGENG_CTL10			B43_LP_SOUTH(0x021) /* LGENG Control 10 (south) */
+#define B2062_S_LGENG_CTL11			B43_LP_SOUTH(0x022) /* LGENG Control 11 (south) */
+#define B2062_S_REFPLL_CTL0			B43_LP_SOUTH(0x023) /* REFPLL Control 00 (south) */
+#define B2062_S_REFPLL_CTL1			B43_LP_SOUTH(0x024) /* REFPLL Control 01 (south) */
+#define B2062_S_REFPLL_CTL2			B43_LP_SOUTH(0x025) /* REFPLL Control 02 (south) */
+#define B2062_S_REFPLL_CTL3			B43_LP_SOUTH(0x026) /* REFPLL Control 03 (south) */
+#define B2062_S_REFPLL_CTL4			B43_LP_SOUTH(0x027) /* REFPLL Control 04 (south) */
+#define B2062_S_REFPLL_CTL5			B43_LP_SOUTH(0x028) /* REFPLL Control 05 (south) */
+#define B2062_S_REFPLL_CTL6			B43_LP_SOUTH(0x029) /* REFPLL Control 06 (south) */
+#define B2062_S_REFPLL_CTL7			B43_LP_SOUTH(0x02A) /* REFPLL Control 07 (south) */
+#define B2062_S_REFPLL_CTL8			B43_LP_SOUTH(0x02B) /* REFPLL Control 08 (south) */
+#define B2062_S_REFPLL_CTL9			B43_LP_SOUTH(0x02C) /* REFPLL Control 09 (south) */
+#define B2062_S_REFPLL_CTL10			B43_LP_SOUTH(0x02D) /* REFPLL Control 10 (south) */
+#define B2062_S_REFPLL_CTL11			B43_LP_SOUTH(0x02E) /* REFPLL Control 11 (south) */
+#define B2062_S_REFPLL_CTL12			B43_LP_SOUTH(0x02F) /* REFPLL Control 12 (south) */
+#define B2062_S_REFPLL_CTL13			B43_LP_SOUTH(0x030) /* REFPLL Control 13 (south) */
+#define B2062_S_REFPLL_CTL14			B43_LP_SOUTH(0x031) /* REFPLL Control 14 (south) */
+#define B2062_S_REFPLL_CTL15			B43_LP_SOUTH(0x032) /* REFPLL Control 15 (south) */
+#define B2062_S_REFPLL_CTL16			B43_LP_SOUTH(0x033) /* REFPLL Control 16 (south) */
+#define B2062_S_RFPLL_CTL0			B43_LP_SOUTH(0x034) /* RFPLL Control 00 (south) */
+#define B2062_S_RFPLL_CTL1			B43_LP_SOUTH(0x035) /* RFPLL Control 01 (south) */
+#define B2062_S_RFPLL_CTL2			B43_LP_SOUTH(0x036) /* RFPLL Control 02 (south) */
+#define B2062_S_RFPLL_CTL3			B43_LP_SOUTH(0x037) /* RFPLL Control 03 (south) */
+#define B2062_S_RFPLL_CTL4			B43_LP_SOUTH(0x038) /* RFPLL Control 04 (south) */
+#define B2062_S_RFPLL_CTL5			B43_LP_SOUTH(0x039) /* RFPLL Control 05 (south) */
+#define B2062_S_RFPLL_CTL6			B43_LP_SOUTH(0x03A) /* RFPLL Control 06 (south) */
+#define B2062_S_RFPLL_CTL7			B43_LP_SOUTH(0x03B) /* RFPLL Control 07 (south) */
+#define B2062_S_RFPLL_CTL8			B43_LP_SOUTH(0x03C) /* RFPLL Control 08 (south) */
+#define B2062_S_RFPLL_CTL9			B43_LP_SOUTH(0x03D) /* RFPLL Control 09 (south) */
+#define B2062_S_RFPLL_CTL10			B43_LP_SOUTH(0x03E) /* RFPLL Control 10 (south) */
+#define B2062_S_RFPLL_CTL11			B43_LP_SOUTH(0x03F) /* RFPLL Control 11 (south) */
+#define B2062_S_RFPLL_CTL12			B43_LP_SOUTH(0x040) /* RFPLL Control 12 (south) */
+#define B2062_S_RFPLL_CTL13			B43_LP_SOUTH(0x041) /* RFPLL Control 13 (south) */
+#define B2062_S_RFPLL_CTL14			B43_LP_SOUTH(0x042) /* RFPLL Control 14 (south) */
+#define B2062_S_RFPLL_CTL15			B43_LP_SOUTH(0x043) /* RFPLL Control 15 (south) */
+#define B2062_S_RFPLL_CTL16			B43_LP_SOUTH(0x044) /* RFPLL Control 16 (south) */
+#define B2062_S_RFPLL_CTL17			B43_LP_SOUTH(0x045) /* RFPLL Control 17 (south) */
+#define B2062_S_RFPLL_CTL18			B43_LP_SOUTH(0x046) /* RFPLL Control 18 (south) */
+#define B2062_S_RFPLL_CTL19			B43_LP_SOUTH(0x047) /* RFPLL Control 19 (south) */
+#define B2062_S_RFPLL_CTL20			B43_LP_SOUTH(0x048) /* RFPLL Control 20 (south) */
+#define B2062_S_RFPLL_CTL21			B43_LP_SOUTH(0x049) /* RFPLL Control 21 (south) */
+#define B2062_S_RFPLL_CTL22			B43_LP_SOUTH(0x04A) /* RFPLL Control 22 (south) */
+#define B2062_S_RFPLL_CTL23			B43_LP_SOUTH(0x04B) /* RFPLL Control 23 (south) */
+#define B2062_S_RFPLL_CTL24			B43_LP_SOUTH(0x04C) /* RFPLL Control 24 (south) */
+#define B2062_S_RFPLL_CTL25			B43_LP_SOUTH(0x04D) /* RFPLL Control 25 (south) */
+#define B2062_S_RFPLL_CTL26			B43_LP_SOUTH(0x04E) /* RFPLL Control 26 (south) */
+#define B2062_S_RFPLL_CTL27			B43_LP_SOUTH(0x04F) /* RFPLL Control 27 (south) */
+#define B2062_S_RFPLL_CTL28			B43_LP_SOUTH(0x050) /* RFPLL Control 28 (south) */
+#define B2062_S_RFPLL_CTL29			B43_LP_SOUTH(0x051) /* RFPLL Control 29 (south) */
+#define B2062_S_RFPLL_CTL30			B43_LP_SOUTH(0x052) /* RFPLL Control 30 (south) */
+#define B2062_S_RFPLL_CTL31			B43_LP_SOUTH(0x053) /* RFPLL Control 31 (south) */
+#define B2062_S_RFPLL_CTL32			B43_LP_SOUTH(0x054) /* RFPLL Control 32 (south) */
+#define B2062_S_RFPLL_CTL33			B43_LP_SOUTH(0x055) /* RFPLL Control 33 (south) */
+#define B2062_S_RFPLL_CTL34			B43_LP_SOUTH(0x056) /* RFPLL Control 34 (south) */
+#define B2062_S_RXG_CNT0			B43_LP_SOUTH(0x057) /* RXG Counter 00 (south) */
+#define B2062_S_RXG_CNT1			B43_LP_SOUTH(0x058) /* RXG Counter 01 (south) */
+#define B2062_S_RXG_CNT2			B43_LP_SOUTH(0x059) /* RXG Counter 02 (south) */
+#define B2062_S_RXG_CNT3			B43_LP_SOUTH(0x05A) /* RXG Counter 03 (south) */
+#define B2062_S_RXG_CNT4			B43_LP_SOUTH(0x05B) /* RXG Counter 04 (south) */
+#define B2062_S_RXG_CNT5			B43_LP_SOUTH(0x05C) /* RXG Counter 05 (south) */
+#define B2062_S_RXG_CNT6			B43_LP_SOUTH(0x05D) /* RXG Counter 06 (south) */
+#define B2062_S_RXG_CNT7			B43_LP_SOUTH(0x05E) /* RXG Counter 07 (south) */
+#define B2062_S_RXG_CNT8			B43_LP_SOUTH(0x05F) /* RXG Counter 08 (south) */
+#define B2062_S_RXG_CNT9			B43_LP_SOUTH(0x060) /* RXG Counter 09 (south) */
+#define B2062_S_RXG_CNT10			B43_LP_SOUTH(0x061) /* RXG Counter 10 (south) */
+#define B2062_S_RXG_CNT11			B43_LP_SOUTH(0x062) /* RXG Counter 11 (south) */
+#define B2062_S_RXG_CNT12			B43_LP_SOUTH(0x063) /* RXG Counter 12 (south) */
+#define B2062_S_RXG_CNT13			B43_LP_SOUTH(0x064) /* RXG Counter 13 (south) */
+#define B2062_S_RXG_CNT14			B43_LP_SOUTH(0x065) /* RXG Counter 14 (south) */
+#define B2062_S_RXG_CNT15			B43_LP_SOUTH(0x066) /* RXG Counter 15 (south) */
+#define B2062_S_RXG_CNT16			B43_LP_SOUTH(0x067) /* RXG Counter 16 (south) */
+#define B2062_S_RXG_CNT17			B43_LP_SOUTH(0x068) /* RXG Counter 17 (south) */
+
+
+
+/*** Broadcom 2063 radio registers ***/
+#define B2063_RADIO_ID_CODE			B43_LP_RADIO(0x001) /* Radio ID code */
+#define B2063_COMM1				B43_LP_RADIO(0x000) /* Common 01 */
+#define B2063_COMM2				B43_LP_RADIO(0x002) /* Common 02 */
+#define B2063_COMM3				B43_LP_RADIO(0x003) /* Common 03 */
+#define B2063_COMM4				B43_LP_RADIO(0x004) /* Common 04 */
+#define B2063_COMM5				B43_LP_RADIO(0x005) /* Common 05 */
+#define B2063_COMM6				B43_LP_RADIO(0x006) /* Common 06 */
+#define B2063_COMM7				B43_LP_RADIO(0x007) /* Common 07 */
+#define B2063_COMM8				B43_LP_RADIO(0x008) /* Common 08 */
+#define B2063_COMM9				B43_LP_RADIO(0x009) /* Common 09 */
+#define B2063_COMM10				B43_LP_RADIO(0x00A) /* Common 10 */
+#define B2063_COMM11				B43_LP_RADIO(0x00B) /* Common 11 */
+#define B2063_COMM12				B43_LP_RADIO(0x00C) /* Common 12 */
+#define B2063_COMM13				B43_LP_RADIO(0x00D) /* Common 13 */
+#define B2063_COMM14				B43_LP_RADIO(0x00E) /* Common 14 */
+#define B2063_COMM15				B43_LP_RADIO(0x00F) /* Common 15 */
+#define B2063_COMM16				B43_LP_RADIO(0x010) /* Common 16 */
+#define B2063_COMM17				B43_LP_RADIO(0x011) /* Common 17 */
+#define B2063_COMM18				B43_LP_RADIO(0x012) /* Common 18 */
+#define B2063_COMM19				B43_LP_RADIO(0x013) /* Common 19 */
+#define B2063_COMM20				B43_LP_RADIO(0x014) /* Common 20 */
+#define B2063_COMM21				B43_LP_RADIO(0x015) /* Common 21 */
+#define B2063_COMM22				B43_LP_RADIO(0x016) /* Common 22 */
+#define B2063_COMM23				B43_LP_RADIO(0x017) /* Common 23 */
+#define B2063_COMM24				B43_LP_RADIO(0x018) /* Common 24 */
+#define B2063_PWR_SWITCH_CTL			B43_LP_RADIO(0x019) /* POWER SWITCH Control */
+#define B2063_PLL_SP1				B43_LP_RADIO(0x01A) /* PLL SP 1 */
+#define B2063_PLL_SP2				B43_LP_RADIO(0x01B) /* PLL SP 2 */
+#define B2063_LOGEN_SP1				B43_LP_RADIO(0x01C) /* LOGEN SP 1 */
+#define B2063_LOGEN_SP2				B43_LP_RADIO(0x01D) /* LOGEN SP 2 */
+#define B2063_LOGEN_SP3				B43_LP_RADIO(0x01E) /* LOGEN SP 3 */
+#define B2063_LOGEN_SP4				B43_LP_RADIO(0x01F) /* LOGEN SP 4 */
+#define B2063_LOGEN_SP5				B43_LP_RADIO(0x020) /* LOGEN SP 5 */
+#define B2063_G_RX_SP1				B43_LP_RADIO(0x021) /* G RX SP 1 */
+#define B2063_G_RX_SP2				B43_LP_RADIO(0x022) /* G RX SP 2 */
+#define B2063_G_RX_SP3				B43_LP_RADIO(0x023) /* G RX SP 3 */
+#define B2063_G_RX_SP4				B43_LP_RADIO(0x024) /* G RX SP 4 */
+#define B2063_G_RX_SP5				B43_LP_RADIO(0x025) /* G RX SP 5 */
+#define B2063_G_RX_SP6				B43_LP_RADIO(0x026) /* G RX SP 6 */
+#define B2063_G_RX_SP7				B43_LP_RADIO(0x027) /* G RX SP 7 */
+#define B2063_G_RX_SP8				B43_LP_RADIO(0x028) /* G RX SP 8 */
+#define B2063_G_RX_SP9				B43_LP_RADIO(0x029) /* G RX SP 9 */
+#define B2063_G_RX_SP10				B43_LP_RADIO(0x02A) /* G RX SP 10 */
+#define B2063_G_RX_SP11				B43_LP_RADIO(0x02B) /* G RX SP 11 */
+#define B2063_A_RX_SP1				B43_LP_RADIO(0x02C) /* A RX SP 1 */
+#define B2063_A_RX_SP2				B43_LP_RADIO(0x02D) /* A RX SP 2 */
+#define B2063_A_RX_SP3				B43_LP_RADIO(0x02E) /* A RX SP 3 */
+#define B2063_A_RX_SP4				B43_LP_RADIO(0x02F) /* A RX SP 4 */
+#define B2063_A_RX_SP5				B43_LP_RADIO(0x030) /* A RX SP 5 */
+#define B2063_A_RX_SP6				B43_LP_RADIO(0x031) /* A RX SP 6 */
+#define B2063_A_RX_SP7				B43_LP_RADIO(0x032) /* A RX SP 7 */
+#define B2063_RX_BB_SP1				B43_LP_RADIO(0x033) /* RX BB SP 1 */
+#define B2063_RX_BB_SP2				B43_LP_RADIO(0x034) /* RX BB SP 2 */
+#define B2063_RX_BB_SP3				B43_LP_RADIO(0x035) /* RX BB SP 3 */
+#define B2063_RX_BB_SP4				B43_LP_RADIO(0x036) /* RX BB SP 4 */
+#define B2063_RX_BB_SP5				B43_LP_RADIO(0x037) /* RX BB SP 5 */
+#define B2063_RX_BB_SP6				B43_LP_RADIO(0x038) /* RX BB SP 6 */
+#define B2063_RX_BB_SP7				B43_LP_RADIO(0x039) /* RX BB SP 7 */
+#define B2063_RX_BB_SP8				B43_LP_RADIO(0x03A) /* RX BB SP 8 */
+#define B2063_TX_RF_SP1				B43_LP_RADIO(0x03B) /* TX RF SP 1 */
+#define B2063_TX_RF_SP2				B43_LP_RADIO(0x03C) /* TX RF SP 2 */
+#define B2063_TX_RF_SP3				B43_LP_RADIO(0x03D) /* TX RF SP 3 */
+#define B2063_TX_RF_SP4				B43_LP_RADIO(0x03E) /* TX RF SP 4 */
+#define B2063_TX_RF_SP5				B43_LP_RADIO(0x03F) /* TX RF SP 5 */
+#define B2063_TX_RF_SP6				B43_LP_RADIO(0x040) /* TX RF SP 6 */
+#define B2063_TX_RF_SP7				B43_LP_RADIO(0x041) /* TX RF SP 7 */
+#define B2063_TX_RF_SP8				B43_LP_RADIO(0x042) /* TX RF SP 8 */
+#define B2063_TX_RF_SP9				B43_LP_RADIO(0x043) /* TX RF SP 9 */
+#define B2063_TX_RF_SP10			B43_LP_RADIO(0x044) /* TX RF SP 10 */
+#define B2063_TX_RF_SP11			B43_LP_RADIO(0x045) /* TX RF SP 11 */
+#define B2063_TX_RF_SP12			B43_LP_RADIO(0x046) /* TX RF SP 12 */
+#define B2063_TX_RF_SP13			B43_LP_RADIO(0x047) /* TX RF SP 13 */
+#define B2063_TX_RF_SP14			B43_LP_RADIO(0x048) /* TX RF SP 14 */
+#define B2063_TX_RF_SP15			B43_LP_RADIO(0x049) /* TX RF SP 15 */
+#define B2063_TX_RF_SP16			B43_LP_RADIO(0x04A) /* TX RF SP 16 */
+#define B2063_TX_RF_SP17			B43_LP_RADIO(0x04B) /* TX RF SP 17 */
+#define B2063_PA_SP1				B43_LP_RADIO(0x04C) /* PA SP 1 */
+#define B2063_PA_SP2				B43_LP_RADIO(0x04D) /* PA SP 2 */
+#define B2063_PA_SP3				B43_LP_RADIO(0x04E) /* PA SP 3 */
+#define B2063_PA_SP4				B43_LP_RADIO(0x04F) /* PA SP 4 */
+#define B2063_PA_SP5				B43_LP_RADIO(0x050) /* PA SP 5 */
+#define B2063_PA_SP6				B43_LP_RADIO(0x051) /* PA SP 6 */
+#define B2063_PA_SP7				B43_LP_RADIO(0x052) /* PA SP 7 */
+#define B2063_TX_BB_SP1				B43_LP_RADIO(0x053) /* TX BB SP 1 */
+#define B2063_TX_BB_SP2				B43_LP_RADIO(0x054) /* TX BB SP 2 */
+#define B2063_TX_BB_SP3				B43_LP_RADIO(0x055) /* TX BB SP 3 */
+#define B2063_REG_SP1				B43_LP_RADIO(0x056) /* REG SP 1 */
+#define B2063_BANDGAP_CTL1			B43_LP_RADIO(0x057) /* BANDGAP Control 1 */
+#define B2063_BANDGAP_CTL2			B43_LP_RADIO(0x058) /* BANDGAP Control 2 */
+#define B2063_LPO_CTL1				B43_LP_RADIO(0x059) /* LPO Control 1 */
+#define B2063_RC_CALIB_CTL1			B43_LP_RADIO(0x05A) /* RC Calibration Control 1 */
+#define B2063_RC_CALIB_CTL2			B43_LP_RADIO(0x05B) /* RC Calibration Control 2 */
+#define B2063_RC_CALIB_CTL3			B43_LP_RADIO(0x05C) /* RC Calibration Control 3 */
+#define B2063_RC_CALIB_CTL4			B43_LP_RADIO(0x05D) /* RC Calibration Control 4 */
+#define B2063_RC_CALIB_CTL5			B43_LP_RADIO(0x05E) /* RC Calibration Control 5 */
+#define B2063_RC_CALIB_CTL6			B43_LP_RADIO(0x05F) /* RC Calibration Control 6 */
+#define B2063_RC_CALIB_CTL7			B43_LP_RADIO(0x060) /* RC Calibration Control 7 */
+#define B2063_RC_CALIB_CTL8			B43_LP_RADIO(0x061) /* RC Calibration Control 8 */
+#define B2063_RC_CALIB_CTL9			B43_LP_RADIO(0x062) /* RC Calibration Control 9 */
+#define B2063_RC_CALIB_CTL10			B43_LP_RADIO(0x063) /* RC Calibration Control 10 */
+#define B2063_PLL_JTAG_CALNRST			B43_LP_RADIO(0x064) /* PLL JTAG CALNRST */
+#define B2063_PLL_JTAG_IN_PLL1			B43_LP_RADIO(0x065) /* PLL JTAG IN PLL 1 */
+#define B2063_PLL_JTAG_IN_PLL2			B43_LP_RADIO(0x066) /* PLL JTAG IN PLL 2 */
+#define B2063_PLL_JTAG_PLL_CP1			B43_LP_RADIO(0x067) /* PLL JTAG PLL CP 1 */
+#define B2063_PLL_JTAG_PLL_CP2			B43_LP_RADIO(0x068) /* PLL JTAG PLL CP 2 */
+#define B2063_PLL_JTAG_PLL_CP3			B43_LP_RADIO(0x069) /* PLL JTAG PLL CP 3 */
+#define B2063_PLL_JTAG_PLL_CP4			B43_LP_RADIO(0x06A) /* PLL JTAG PLL CP 4 */
+#define B2063_PLL_JTAG_PLL_CTL1			B43_LP_RADIO(0x06B) /* PLL JTAG PLL Control 1 */
+#define B2063_PLL_JTAG_PLL_LF1			B43_LP_RADIO(0x06C) /* PLL JTAG PLL LF 1 */
+#define B2063_PLL_JTAG_PLL_LF2			B43_LP_RADIO(0x06D) /* PLL JTAG PLL LF 2 */
+#define B2063_PLL_JTAG_PLL_LF3			B43_LP_RADIO(0x06E) /* PLL JTAG PLL LF 3 */
+#define B2063_PLL_JTAG_PLL_LF4			B43_LP_RADIO(0x06F) /* PLL JTAG PLL LF 4 */
+#define B2063_PLL_JTAG_PLL_SG1			B43_LP_RADIO(0x070) /* PLL JTAG PLL SG 1 */
+#define B2063_PLL_JTAG_PLL_SG2			B43_LP_RADIO(0x071) /* PLL JTAG PLL SG 2 */
+#define B2063_PLL_JTAG_PLL_SG3			B43_LP_RADIO(0x072) /* PLL JTAG PLL SG 3 */
+#define B2063_PLL_JTAG_PLL_SG4			B43_LP_RADIO(0x073) /* PLL JTAG PLL SG 4 */
+#define B2063_PLL_JTAG_PLL_SG5			B43_LP_RADIO(0x074) /* PLL JTAG PLL SG 5 */
+#define B2063_PLL_JTAG_PLL_VCO1			B43_LP_RADIO(0x075) /* PLL JTAG PLL VCO 1 */
+#define B2063_PLL_JTAG_PLL_VCO2			B43_LP_RADIO(0x076) /* PLL JTAG PLL VCO 2 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB1		B43_LP_RADIO(0x077) /* PLL JTAG PLL VCO Calibration 1 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB2		B43_LP_RADIO(0x078) /* PLL JTAG PLL VCO Calibration 2 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB3		B43_LP_RADIO(0x079) /* PLL JTAG PLL VCO Calibration 3 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB4		B43_LP_RADIO(0x07A) /* PLL JTAG PLL VCO Calibration 4 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB5		B43_LP_RADIO(0x07B) /* PLL JTAG PLL VCO Calibration 5 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB6		B43_LP_RADIO(0x07C) /* PLL JTAG PLL VCO Calibration 6 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB7		B43_LP_RADIO(0x07D) /* PLL JTAG PLL VCO Calibration 7 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB8		B43_LP_RADIO(0x07E) /* PLL JTAG PLL VCO Calibration 8 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB9		B43_LP_RADIO(0x07F) /* PLL JTAG PLL VCO Calibration 9 */
+#define B2063_PLL_JTAG_PLL_VCO_CALIB10		B43_LP_RADIO(0x080) /* PLL JTAG PLL VCO Calibration 10 */
+#define B2063_PLL_JTAG_PLL_XTAL_12		B43_LP_RADIO(0x081) /* PLL JTAG PLL XTAL 1 2 */
+#define B2063_PLL_JTAG_PLL_XTAL3		B43_LP_RADIO(0x082) /* PLL JTAG PLL XTAL 3 */
+#define B2063_LOGEN_ACL1			B43_LP_RADIO(0x083) /* LOGEN ACL 1 */
+#define B2063_LOGEN_ACL2			B43_LP_RADIO(0x084) /* LOGEN ACL 2 */
+#define B2063_LOGEN_ACL3			B43_LP_RADIO(0x085) /* LOGEN ACL 3 */
+#define B2063_LOGEN_ACL4			B43_LP_RADIO(0x086) /* LOGEN ACL 4 */
+#define B2063_LOGEN_ACL5			B43_LP_RADIO(0x087) /* LOGEN ACL 5 */
+#define B2063_LO_CALIB_INPUTS			B43_LP_RADIO(0x088) /* LO Calibration INPUTS */
+#define B2063_LO_CALIB_CTL1			B43_LP_RADIO(0x089) /* LO Calibration Control 1 */
+#define B2063_LO_CALIB_CTL2			B43_LP_RADIO(0x08A) /* LO Calibration Control 2 */
+#define B2063_LO_CALIB_CTL3			B43_LP_RADIO(0x08B) /* LO Calibration Control 3 */
+#define B2063_LO_CALIB_WAITCNT			B43_LP_RADIO(0x08C) /* LO Calibration WAITCNT */
+#define B2063_LO_CALIB_OVR1			B43_LP_RADIO(0x08D) /* LO Calibration OVR 1 */
+#define B2063_LO_CALIB_OVR2			B43_LP_RADIO(0x08E) /* LO Calibration OVR 2 */
+#define B2063_LO_CALIB_OVAL1			B43_LP_RADIO(0x08F) /* LO Calibration OVAL 1 */
+#define B2063_LO_CALIB_OVAL2			B43_LP_RADIO(0x090) /* LO Calibration OVAL 2 */
+#define B2063_LO_CALIB_OVAL3			B43_LP_RADIO(0x091) /* LO Calibration OVAL 3 */
+#define B2063_LO_CALIB_OVAL4			B43_LP_RADIO(0x092) /* LO Calibration OVAL 4 */
+#define B2063_LO_CALIB_OVAL5			B43_LP_RADIO(0x093) /* LO Calibration OVAL 5 */
+#define B2063_LO_CALIB_OVAL6			B43_LP_RADIO(0x094) /* LO Calibration OVAL 6 */
+#define B2063_LO_CALIB_OVAL7			B43_LP_RADIO(0x095) /* LO Calibration OVAL 7 */
+#define B2063_LO_CALIB_CALVLD1			B43_LP_RADIO(0x096) /* LO Calibration CALVLD 1 */
+#define B2063_LO_CALIB_CALVLD2			B43_LP_RADIO(0x097) /* LO Calibration CALVLD 2 */
+#define B2063_LO_CALIB_CVAL1			B43_LP_RADIO(0x098) /* LO Calibration CVAL 1 */
+#define B2063_LO_CALIB_CVAL2			B43_LP_RADIO(0x099) /* LO Calibration CVAL 2 */
+#define B2063_LO_CALIB_CVAL3			B43_LP_RADIO(0x09A) /* LO Calibration CVAL 3 */
+#define B2063_LO_CALIB_CVAL4			B43_LP_RADIO(0x09B) /* LO Calibration CVAL 4 */
+#define B2063_LO_CALIB_CVAL5			B43_LP_RADIO(0x09C) /* LO Calibration CVAL 5 */
+#define B2063_LO_CALIB_CVAL6			B43_LP_RADIO(0x09D) /* LO Calibration CVAL 6 */
+#define B2063_LO_CALIB_CVAL7			B43_LP_RADIO(0x09E) /* LO Calibration CVAL 7 */
+#define B2063_LOGEN_CALIB_EN			B43_LP_RADIO(0x09F) /* LOGEN Calibration EN */
+#define B2063_LOGEN_PEAKDET1			B43_LP_RADIO(0x0A0) /* LOGEN PEAKDET 1 */
+#define B2063_LOGEN_RCCR1			B43_LP_RADIO(0x0A1) /* LOGEN RCCR 1 */
+#define B2063_LOGEN_VCOBUF1			B43_LP_RADIO(0x0A2) /* LOGEN VCOBUF 1 */
+#define B2063_LOGEN_MIXER1			B43_LP_RADIO(0x0A3) /* LOGEN MIXER 1 */
+#define B2063_LOGEN_MIXER2			B43_LP_RADIO(0x0A4) /* LOGEN MIXER 2 */
+#define B2063_LOGEN_BUF1			B43_LP_RADIO(0x0A5) /* LOGEN BUF 1 */
+#define B2063_LOGEN_BUF2			B43_LP_RADIO(0x0A6) /* LOGEN BUF 2 */
+#define B2063_LOGEN_DIV1			B43_LP_RADIO(0x0A7) /* LOGEN DIV 1 */
+#define B2063_LOGEN_DIV2			B43_LP_RADIO(0x0A8) /* LOGEN DIV 2 */
+#define B2063_LOGEN_DIV3			B43_LP_RADIO(0x0A9) /* LOGEN DIV 3 */
+#define B2063_LOGEN_CBUFRX1			B43_LP_RADIO(0x0AA) /* LOGEN CBUFRX 1 */
+#define B2063_LOGEN_CBUFRX2			B43_LP_RADIO(0x0AB) /* LOGEN CBUFRX 2 */
+#define B2063_LOGEN_CBUFTX1			B43_LP_RADIO(0x0AC) /* LOGEN CBUFTX 1 */
+#define B2063_LOGEN_CBUFTX2			B43_LP_RADIO(0x0AD) /* LOGEN CBUFTX 2 */
+#define B2063_LOGEN_IDAC1			B43_LP_RADIO(0x0AE) /* LOGEN IDAC 1 */
+#define B2063_LOGEN_SPARE1			B43_LP_RADIO(0x0AF) /* LOGEN SPARE 1 */
+#define B2063_LOGEN_SPARE2			B43_LP_RADIO(0x0B0) /* LOGEN SPARE 2 */
+#define B2063_LOGEN_SPARE3			B43_LP_RADIO(0x0B1) /* LOGEN SPARE 3 */
+#define B2063_G_RX_1ST1				B43_LP_RADIO(0x0B2) /* G RX 1ST 1 */
+#define B2063_G_RX_1ST2				B43_LP_RADIO(0x0B3) /* G RX 1ST 2 */
+#define B2063_G_RX_1ST3				B43_LP_RADIO(0x0B4) /* G RX 1ST 3 */
+#define B2063_G_RX_2ND1				B43_LP_RADIO(0x0B5) /* G RX 2ND 1 */
+#define B2063_G_RX_2ND2				B43_LP_RADIO(0x0B6) /* G RX 2ND 2 */
+#define B2063_G_RX_2ND3				B43_LP_RADIO(0x0B7) /* G RX 2ND 3 */
+#define B2063_G_RX_2ND4				B43_LP_RADIO(0x0B8) /* G RX 2ND 4 */
+#define B2063_G_RX_2ND5				B43_LP_RADIO(0x0B9) /* G RX 2ND 5 */
+#define B2063_G_RX_2ND6				B43_LP_RADIO(0x0BA) /* G RX 2ND 6 */
+#define B2063_G_RX_2ND7				B43_LP_RADIO(0x0BB) /* G RX 2ND 7 */
+#define B2063_G_RX_2ND8				B43_LP_RADIO(0x0BC) /* G RX 2ND 8 */
+#define B2063_G_RX_PS1				B43_LP_RADIO(0x0BD) /* G RX PS 1 */
+#define B2063_G_RX_PS2				B43_LP_RADIO(0x0BE) /* G RX PS 2 */
+#define B2063_G_RX_PS3				B43_LP_RADIO(0x0BF) /* G RX PS 3 */
+#define B2063_G_RX_PS4				B43_LP_RADIO(0x0C0) /* G RX PS 4 */
+#define B2063_G_RX_PS5				B43_LP_RADIO(0x0C1) /* G RX PS 5 */
+#define B2063_G_RX_MIX1				B43_LP_RADIO(0x0C2) /* G RX MIX 1 */
+#define B2063_G_RX_MIX2				B43_LP_RADIO(0x0C3) /* G RX MIX 2 */
+#define B2063_G_RX_MIX3				B43_LP_RADIO(0x0C4) /* G RX MIX 3 */
+#define B2063_G_RX_MIX4				B43_LP_RADIO(0x0C5) /* G RX MIX 4 */
+#define B2063_G_RX_MIX5				B43_LP_RADIO(0x0C6) /* G RX MIX 5 */
+#define B2063_G_RX_MIX6				B43_LP_RADIO(0x0C7) /* G RX MIX 6 */
+#define B2063_G_RX_MIX7				B43_LP_RADIO(0x0C8) /* G RX MIX 7 */
+#define B2063_G_RX_MIX8				B43_LP_RADIO(0x0C9) /* G RX MIX 8 */
+#define B2063_G_RX_PDET1			B43_LP_RADIO(0x0CA) /* G RX PDET 1 */
+#define B2063_G_RX_SPARES1			B43_LP_RADIO(0x0CB) /* G RX SPARES 1 */
+#define B2063_G_RX_SPARES2			B43_LP_RADIO(0x0CC) /* G RX SPARES 2 */
+#define B2063_G_RX_SPARES3			B43_LP_RADIO(0x0CD) /* G RX SPARES 3 */
+#define B2063_A_RX_1ST1				B43_LP_RADIO(0x0CE) /* A RX 1ST 1 */
+#define B2063_A_RX_1ST2				B43_LP_RADIO(0x0CF) /* A RX 1ST 2 */
+#define B2063_A_RX_1ST3				B43_LP_RADIO(0x0D0) /* A RX 1ST 3 */
+#define B2063_A_RX_1ST4				B43_LP_RADIO(0x0D1) /* A RX 1ST 4 */
+#define B2063_A_RX_1ST5				B43_LP_RADIO(0x0D2) /* A RX 1ST 5 */
+#define B2063_A_RX_2ND1				B43_LP_RADIO(0x0D3) /* A RX 2ND 1 */
+#define B2063_A_RX_2ND2				B43_LP_RADIO(0x0D4) /* A RX 2ND 2 */
+#define B2063_A_RX_2ND3				B43_LP_RADIO(0x0D5) /* A RX 2ND 3 */
+#define B2063_A_RX_2ND4				B43_LP_RADIO(0x0D6) /* A RX 2ND 4 */
+#define B2063_A_RX_2ND5				B43_LP_RADIO(0x0D7) /* A RX 2ND 5 */
+#define B2063_A_RX_2ND6				B43_LP_RADIO(0x0D8) /* A RX 2ND 6 */
+#define B2063_A_RX_2ND7				B43_LP_RADIO(0x0D9) /* A RX 2ND 7 */
+#define B2063_A_RX_PS1				B43_LP_RADIO(0x0DA) /* A RX PS 1 */
+#define B2063_A_RX_PS2				B43_LP_RADIO(0x0DB) /* A RX PS 2 */
+#define B2063_A_RX_PS3				B43_LP_RADIO(0x0DC) /* A RX PS 3 */
+#define B2063_A_RX_PS4				B43_LP_RADIO(0x0DD) /* A RX PS 4 */
+#define B2063_A_RX_PS5				B43_LP_RADIO(0x0DE) /* A RX PS 5 */
+#define B2063_A_RX_PS6				B43_LP_RADIO(0x0DF) /* A RX PS 6 */
+#define B2063_A_RX_MIX1				B43_LP_RADIO(0x0E0) /* A RX MIX 1 */
+#define B2063_A_RX_MIX2				B43_LP_RADIO(0x0E1) /* A RX MIX 2 */
+#define B2063_A_RX_MIX3				B43_LP_RADIO(0x0E2) /* A RX MIX 3 */
+#define B2063_A_RX_MIX4				B43_LP_RADIO(0x0E3) /* A RX MIX 4 */
+#define B2063_A_RX_MIX5				B43_LP_RADIO(0x0E4) /* A RX MIX 5 */
+#define B2063_A_RX_MIX6				B43_LP_RADIO(0x0E5) /* A RX MIX 6 */
+#define B2063_A_RX_MIX7				B43_LP_RADIO(0x0E6) /* A RX MIX 7 */
+#define B2063_A_RX_MIX8				B43_LP_RADIO(0x0E7) /* A RX MIX 8 */
+#define B2063_A_RX_PWRDET1			B43_LP_RADIO(0x0E8) /* A RX PWRDET 1 */
+#define B2063_A_RX_SPARE1			B43_LP_RADIO(0x0E9) /* A RX SPARE 1 */
+#define B2063_A_RX_SPARE2			B43_LP_RADIO(0x0EA) /* A RX SPARE 2 */
+#define B2063_A_RX_SPARE3			B43_LP_RADIO(0x0EB) /* A RX SPARE 3 */
+#define B2063_RX_TIA_CTL1			B43_LP_RADIO(0x0EC) /* RX TIA Control 1 */
+#define B2063_RX_TIA_CTL2			B43_LP_RADIO(0x0ED) /* RX TIA Control 2 */
+#define B2063_RX_TIA_CTL3			B43_LP_RADIO(0x0EE) /* RX TIA Control 3 */
+#define B2063_RX_TIA_CTL4			B43_LP_RADIO(0x0EF) /* RX TIA Control 4 */
+#define B2063_RX_TIA_CTL5			B43_LP_RADIO(0x0F0) /* RX TIA Control 5 */
+#define B2063_RX_TIA_CTL6			B43_LP_RADIO(0x0F1) /* RX TIA Control 6 */
+#define B2063_RX_BB_CTL1			B43_LP_RADIO(0x0F2) /* RX BB Control 1 */
+#define B2063_RX_BB_CTL2			B43_LP_RADIO(0x0F3) /* RX BB Control 2 */
+#define B2063_RX_BB_CTL3			B43_LP_RADIO(0x0F4) /* RX BB Control 3 */
+#define B2063_RX_BB_CTL4			B43_LP_RADIO(0x0F5) /* RX BB Control 4 */
+#define B2063_RX_BB_CTL5			B43_LP_RADIO(0x0F6) /* RX BB Control 5 */
+#define B2063_RX_BB_CTL6			B43_LP_RADIO(0x0F7) /* RX BB Control 6 */
+#define B2063_RX_BB_CTL7			B43_LP_RADIO(0x0F8) /* RX BB Control 7 */
+#define B2063_RX_BB_CTL8			B43_LP_RADIO(0x0F9) /* RX BB Control 8 */
+#define B2063_RX_BB_CTL9			B43_LP_RADIO(0x0FA) /* RX BB Control 9 */
+#define B2063_TX_RF_CTL1			B43_LP_RADIO(0x0FB) /* TX RF Control 1 */
+#define B2063_TX_RF_IDAC_LO_RF_I		B43_LP_RADIO(0x0FC) /* TX RF IDAC LO RF I */
+#define B2063_TX_RF_IDAC_LO_RF_Q		B43_LP_RADIO(0x0FD) /* TX RF IDAC LO RF Q */
+#define B2063_TX_RF_IDAC_LO_BB_I		B43_LP_RADIO(0x0FE) /* TX RF IDAC LO BB I */
+#define B2063_TX_RF_IDAC_LO_BB_Q		B43_LP_RADIO(0x0FF) /* TX RF IDAC LO BB Q */
+#define B2063_TX_RF_CTL2			B43_LP_RADIO(0x100) /* TX RF Control 2 */
+#define B2063_TX_RF_CTL3			B43_LP_RADIO(0x101) /* TX RF Control 3 */
+#define B2063_TX_RF_CTL4			B43_LP_RADIO(0x102) /* TX RF Control 4 */
+#define B2063_TX_RF_CTL5			B43_LP_RADIO(0x103) /* TX RF Control 5 */
+#define B2063_TX_RF_CTL6			B43_LP_RADIO(0x104) /* TX RF Control 6 */
+#define B2063_TX_RF_CTL7			B43_LP_RADIO(0x105) /* TX RF Control 7 */
+#define B2063_TX_RF_CTL8			B43_LP_RADIO(0x106) /* TX RF Control 8 */
+#define B2063_TX_RF_CTL9			B43_LP_RADIO(0x107) /* TX RF Control 9 */
+#define B2063_TX_RF_CTL10			B43_LP_RADIO(0x108) /* TX RF Control 10 */
+#define B2063_TX_RF_CTL14			B43_LP_RADIO(0x109) /* TX RF Control 14 */
+#define B2063_TX_RF_CTL15			B43_LP_RADIO(0x10A) /* TX RF Control 15 */
+#define B2063_PA_CTL1				B43_LP_RADIO(0x10B) /* PA Control 1 */
+#define B2063_PA_CTL2				B43_LP_RADIO(0x10C) /* PA Control 2 */
+#define B2063_PA_CTL3				B43_LP_RADIO(0x10D) /* PA Control 3 */
+#define B2063_PA_CTL4				B43_LP_RADIO(0x10E) /* PA Control 4 */
+#define B2063_PA_CTL5				B43_LP_RADIO(0x10F) /* PA Control 5 */
+#define B2063_PA_CTL6				B43_LP_RADIO(0x110) /* PA Control 6 */
+#define B2063_PA_CTL7				B43_LP_RADIO(0x111) /* PA Control 7 */
+#define B2063_PA_CTL8				B43_LP_RADIO(0x112) /* PA Control 8 */
+#define B2063_PA_CTL9				B43_LP_RADIO(0x113) /* PA Control 9 */
+#define B2063_PA_CTL10				B43_LP_RADIO(0x114) /* PA Control 10 */
+#define B2063_PA_CTL11				B43_LP_RADIO(0x115) /* PA Control 11 */
+#define B2063_PA_CTL12				B43_LP_RADIO(0x116) /* PA Control 12 */
+#define B2063_PA_CTL13				B43_LP_RADIO(0x117) /* PA Control 13 */
+#define B2063_TX_BB_CTL1			B43_LP_RADIO(0x118) /* TX BB Control 1 */
+#define B2063_TX_BB_CTL2			B43_LP_RADIO(0x119) /* TX BB Control 2 */
+#define B2063_TX_BB_CTL3			B43_LP_RADIO(0x11A) /* TX BB Control 3 */
+#define B2063_TX_BB_CTL4			B43_LP_RADIO(0x11B) /* TX BB Control 4 */
+#define B2063_GPIO_CTL1				B43_LP_RADIO(0x11C) /* GPIO Control 1 */
+#define B2063_VREG_CTL1				B43_LP_RADIO(0x11D) /* VREG Control 1 */
+#define B2063_AMUX_CTL1				B43_LP_RADIO(0x11E) /* AMUX Control 1 */
+#define B2063_IQ_CALIB_GVAR			B43_LP_RADIO(0x11F) /* IQ Calibration GVAR */
+#define B2063_IQ_CALIB_CTL1			B43_LP_RADIO(0x120) /* IQ Calibration Control 1 */
+#define B2063_IQ_CALIB_CTL2			B43_LP_RADIO(0x121) /* IQ Calibration Control 2 */
+#define B2063_TEMPSENSE_CTL1			B43_LP_RADIO(0x122) /* TEMPSENSE Control 1 */
+#define B2063_TEMPSENSE_CTL2			B43_LP_RADIO(0x123) /* TEMPSENSE Control 2 */
+#define B2063_TX_RX_LOOPBACK1			B43_LP_RADIO(0x124) /* TX/RX LOOPBACK 1 */
+#define B2063_TX_RX_LOOPBACK2			B43_LP_RADIO(0x125) /* TX/RX LOOPBACK 2 */
+#define B2063_EXT_TSSI_CTL1			B43_LP_RADIO(0x126) /* EXT TSSI Control 1 */
+#define B2063_EXT_TSSI_CTL2			B43_LP_RADIO(0x127) /* EXT TSSI Control 2 */
+#define B2063_AFE_CTL				B43_LP_RADIO(0x128) /* AFE Control */
+
+
+
 struct b43_phy_lp {
 	bool initialised;
 };
 
 
 struct b43_phy_operations;


From jvfengda at yahoo.com  Sat Aug 30 13:53:53 2008
From: jvfengda at yahoo.com (Da Feng)
Date: Sat, 30 Aug 2008 04:53:53 -0700 (PDT)
Subject: turn mode to ad-hoc solved the problem
Message-ID: <509147.40440.qm@web35903.mail.mud.yahoo.com>

Hi:
    I tackled the problem.

 DaFENG
Coder
Telecommunication && Network Industry
Pudong
Shanghai
China


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080830/3cb079fc/attachment.html>

From for.lexa at gmail.com  Sat Aug 30 14:26:55 2008
From: for.lexa at gmail.com (for.lexa at gmail.com)
Date: Sat, 30 Aug 2008 15:26:55 +0300
Subject: ap refuse to associate
In-Reply-To: <200808301332.55467.for.lexa@gmail.com>
References: <237977.65533.qm@web35902.mail.mud.yahoo.com>
	<200808301332.55467.for.lexa@gmail.com>
Message-ID: <200808301526.55926.for.lexa@gmail.com>

On Saturday 30 August 2008 13:32:54 you wrote:
> On Saturday 30 August 2008 12:50:19 Da Feng wrote:
> > hi:
> > I get this from dmesg, and don't know why  my router refused the
>
> request.
>
> > thanks in advance.
> >
> > wlan0: RX authentication from 08:10:74:1e:b8:c8 (alg=0
>
> transaction=2
>
> > status=    0) wlan0: authenticated
> > wlan0: associate with AP 08:10:74:1e:b8:c8
> > wlan0: RX AssocResp from 08:10:74:1e:b8:c8 (capab=0x411
>
> status=13 aid=0)
>
> > wlan0: AP denied association (code=13)
> > wlan0: associate with AP 08:10:74:1e:b8:c8
> > wlan0: associate with AP 08:10:74:1e:b8:c8
> > wlan0: association with AP 08:10:74:1e:b8:c8 timed out
> > wlan0: RX deauthentication from 08:10:74:1e:b8:c8 (reason=3)
> > wlan0: deauthenticated
> > mac80211-phy0: failed to set key (0, ff:ff:ff:ff:ff:ff) to hardware (-22)
> >
> >
> >  DaFENG
> > Coder
> > Telecommunication && Network Industry
> > Pudong
> > Shanghai
> > China
>
> Hi, i have the same problem, but i'm using iwl4965, may be this is
> problem in mac80211? Kernel is 2.6.26-gentoo-r1, it includes 2.6.26.2
> patch.
> I will install Broadcom 4306 card into my pc and will test it with b43
> driver.

I tried with b43 and BCM4306:

wlan0: Initial auth_alg=0
wlan0: authenticate with AP 00:0f:b5:a3:3a:08
wlan0: RX authentication from 00:0f:b5:a3:3a:08 (alg=0 transaction=2 		
status=0)
wlan0: authenticated
wlan0: associate with AP 00:0f:b5:a3:3a:08
wlan0: authentication frame received from 00:0f:b5:a3:3a:08, but not in 	
authenticate state - ignored
wlan0: RX deauthentication from 00:0f:b5:a3:3a:08 (reason=6)
wlan0: deauthenticated
wlan0: authenticate with AP 00:0f:b5:a3:3a:08
wlan0: RX authentication from 00:0f:b5:a3:3a:08 (alg=0 transaction=2 status=0)
wlan0: authenticated
wlan0: associate with AP 00:0f:b5:a3:3a:08
wlan0: authentication frame received from 00:0f:b5:a3:3a:08, but not in 
authenticate state - ignored
wlan0: authentication frame received from 00:0f:b5:a3:3a:08, but not in 
authenticate state - ignored
wlan0: authentication frame received from 00:0f:b5:a3:3a:08, but not in 
authenticate state - ignored
wlan0: authentication frame received from 00:0f:b5:a3:3a:08, but not in 
authenticate state - ignored
wlan0: RX deauthentication from 00:0f:b5:a3:3a:08 (reason=6)
wlan0: deauthenticated
wlan0: authenticate with AP 00:0f:b5:a3:3a:08
wlan0: RX authentication from 00:0f:b5:a3:3a:08 (alg=0 transaction=2 status=0)
wlan0: authenticated
wlan0: associate with AP 00:0f:b5:a3:3a:08
wlan0: RX AssocResp from 00:0f:b5:a3:3a:08 (capab=0x401 status=0 aid=1)
wlan0: associated
phy0: Allocated STA 00:0f:b5:a3:3a:08
phy0: Inserted STA 00:0f:b5:a3:3a:08
wlan0: switched to short barker preamble (BSSID=00:0f:b5:a3:3a:08)
wlan0: association frame received from 00:0f:b5:a3:3a:08, but not in associate 
state - ignored
wlan0: association frame received from 00:0f:b5:a3:3a:08, but not in associate 
state - ignored

As you can see few times station tried to connect, but without success:

wlan0: RX deauthentication from 00:0f:b5:a3:3a:08 (reason=6)
wlan0: deauthenticated

But after few attempts station sucessfully connects to ap and network works.
Encription is turned off on AP.


From proski at gnu.org  Sun Aug 31 05:58:00 2008
From: proski at gnu.org (Pavel Roskin)
Date: Sat, 30 Aug 2008 23:58:00 -0400
Subject: Broadcom's own driver: firmware?
In-Reply-To: <1219687719.13668.60.camel@lenovo.local.net>
References: <1219687719.13668.60.camel@lenovo.local.net>
Message-ID: <1220155080.23714.4.camel@dv>

On Mon, 2008-08-25 at 11:08 -0700, Adam Williamson wrote:

> The license this driver is under is not F/OSS, but it's not as
> restrictive as the license on the Windows driver.

The instructions at http://wireless.kernel.org/en/users/Drivers/b43
don't refer to any Windows drivers.  They already refer to distributable
files.

> It explicitly allows
> redistribution, in unmodified form. So it wouldn't be okay to extract
> the firmware from this driver and just package that, but distros *could*
> package the entire driver (without ever actually using it) and then
> automatically extract the firmware from it when setting up b43. This
> would finally solve the Firmware Minefield issue caused by distros not
> being able to ship firmware for b43 in any way.

That's a question to distros.  I think they have good reasons not to
ship non-free software with restrictive licenses.

-- 
Regards,
Pavel Roskin


From netrolller.3d at gmail.com  Sun Aug 31 14:47:33 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 31 Aug 2008 14:47:33 +0200
Subject: Broadcom's own driver: firmware?
In-Reply-To: <1220155080.23714.4.camel@dv>
References: <1219687719.13668.60.camel@lenovo.local.net>
	<1220155080.23714.4.camel@dv>
Message-ID: <69e28c910808310547i5b6b73cch694d07829b8fa27b@mail.gmail.com>

On Sun, Aug 31, 2008 at 5:58 AM, Pavel Roskin <proski at gnu.org> wrote:
> On Mon, 2008-08-25 at 11:08 -0700, Adam Williamson wrote:
>
>> The license this driver is under is not F/OSS, but it's not as
>> restrictive as the license on the Windows driver.
>
> The instructions at http://wireless.kernel.org/en/users/Drivers/b43
> don't refer to any Windows drivers.  They already refer to distributable
> files.
>
>> It explicitly allows
>> redistribution, in unmodified form. So it wouldn't be okay to extract
>> the firmware from this driver and just package that, but distros *could*
>> package the entire driver (without ever actually using it) and then
>> automatically extract the firmware from it when setting up b43. This
>> would finally solve the Firmware Minefield issue caused by distros not
>> being able to ship firmware for b43 in any way.
>
> That's a question to distros.  I think they have good reasons not to
> ship non-free software with restrictive licenses.
>
> --
> Regards,
> Pavel Roskin
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

On a related note, I think we should make b43 load
wl_apsta.o/wl_apsta_mimo.o directly, and cut out the firmware in the
memory, as the cut-out firmware files are illegal to distribute,
meaning that a distro can't include a ready-to-use b43 driver, even if
they consider shipping non-free (but distributable) components OK.
This prevents distros from enabling online installation through a
Broadcom wireless card, as the boot CD can't include the necessary
firmware.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Aug 31 14:55:10 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 31 Aug 2008 14:55:10 +0200
Subject: Broadcom's own driver: firmware?
In-Reply-To: <69e28c910808310547i5b6b73cch694d07829b8fa27b@mail.gmail.com>
References: <1219687719.13668.60.camel@lenovo.local.net>
	<1220155080.23714.4.camel@dv>
	<69e28c910808310547i5b6b73cch694d07829b8fa27b@mail.gmail.com>
Message-ID: <200808311455.10370.mb@bu3sch.de>

On Sunday 31 August 2008 14:47:33 Stefanik G?bor wrote:
> On a related note, I think we should make b43 load
> wl_apsta.o/wl_apsta_mimo.o directly, and cut out the firmware in the
> memory, as the cut-out firmware files are illegal to distribute,
> meaning that a distro can't include a ready-to-use b43 driver, even if
> they consider shipping non-free (but distributable) components OK.
> This prevents distros from enabling online installation through a
> Broadcom wireless card, as the boot CD can't include the necessary
> firmware.

This is not going to happen, as it will _not_ improve the legal situation.
We are _not_ going to put fwcutter into the kernel. That is completely
insane and makes no sense at all. Cut the firmware in userspace!

-- 
Greetings Michael.


From netrolller.3d at gmail.com  Sun Aug 31 15:08:49 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 31 Aug 2008 15:08:49 +0200
Subject: Broadcom's own driver: firmware?
In-Reply-To: <200808311455.10370.mb@bu3sch.de>
References: <1219687719.13668.60.camel@lenovo.local.net>
	<1220155080.23714.4.camel@dv>
	<69e28c910808310547i5b6b73cch694d07829b8fa27b@mail.gmail.com>
	<200808311455.10370.mb@bu3sch.de>
Message-ID: <69e28c910808310608o69de22fgcf417113849fb40@mail.gmail.com>

On Sun, Aug 31, 2008 at 2:55 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Sunday 31 August 2008 14:47:33 Stefanik G?bor wrote:
>> On a related note, I think we should make b43 load
>> wl_apsta.o/wl_apsta_mimo.o directly, and cut out the firmware in the
>> memory, as the cut-out firmware files are illegal to distribute,
>> meaning that a distro can't include a ready-to-use b43 driver, even if
>> they consider shipping non-free (but distributable) components OK.
>> This prevents distros from enabling online installation through a
>> Broadcom wireless card, as the boot CD can't include the necessary
>> firmware.
>
> This is not going to happen, as it will _not_ improve the legal situation.
> We are _not_ going to put fwcutter into the kernel. That is completely
> insane and makes no sense at all. Cut the firmware in userspace!
>
> --
> Greetings Michael.
>

Wouldn't this enable distros to ship the necessary firmware in their
network installation boot CDs? Currently a working boot CD requires
the cut firmware files to be included - but such a CD is inherently
illegal to distribute, as it includes modified versions of files
marked as illegal to modify. (Scripting fwcutter to automatically cut
the firmware on boot could possibly solve this issue, but that
requires a writable root filesystem.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Aug 31 15:12:39 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 31 Aug 2008 15:12:39 +0200
Subject: Broadcom's own driver: firmware?
In-Reply-To: <69e28c910808310608o69de22fgcf417113849fb40@mail.gmail.com>
References: <1219687719.13668.60.camel@lenovo.local.net>
	<200808311455.10370.mb@bu3sch.de>
	<69e28c910808310608o69de22fgcf417113849fb40@mail.gmail.com>
Message-ID: <200808311512.39991.mb@bu3sch.de>

On Sunday 31 August 2008 15:08:49 Stefanik G?bor wrote:
> On Sun, Aug 31, 2008 at 2:55 PM, Michael Buesch <mb at bu3sch.de> wrote:
> > On Sunday 31 August 2008 14:47:33 Stefanik G?bor wrote:
> >> On a related note, I think we should make b43 load
> >> wl_apsta.o/wl_apsta_mimo.o directly, and cut out the firmware in the
> >> memory, as the cut-out firmware files are illegal to distribute,
> >> meaning that a distro can't include a ready-to-use b43 driver, even if
> >> they consider shipping non-free (but distributable) components OK.
> >> This prevents distros from enabling online installation through a
> >> Broadcom wireless card, as the boot CD can't include the necessary
> >> firmware.
> >
> > This is not going to happen, as it will _not_ improve the legal situation.
> > We are _not_ going to put fwcutter into the kernel. That is completely
> > insane and makes no sense at all. Cut the firmware in userspace!
> >
> > --
> > Greetings Michael.
> >
> 
> Wouldn't this enable distros to ship the necessary firmware in their
> network installation boot CDs?

Whether they are able to ship something has _nothing_ do to whether
we cut it in the kernel or in userspace.

> Currently a working boot CD requires 
> the cut firmware files to be included 

No it doesn't.

> (Scripting fwcutter to automatically cut
> the firmware on boot could possibly solve this issue, but that
> requires a writable root filesystem.)

If you happen to have a license to distribute the .o file, cut it
on installation time.

-- 
Greetings Michael.


From illth at gmx.de  Sun Aug 31 19:44:46 2008
From: illth at gmx.de (Thomas Ilnseher)
Date: Sun, 31 Aug 2008 19:44:46 +0200
Subject: Broadcom's own driver: firmware?
In-Reply-To: <69e28c910808310608o69de22fgcf417113849fb40@mail.gmail.com>
References: <1219687719.13668.60.camel@lenovo.local.net>
	<1220155080.23714.4.camel@dv>
	<69e28c910808310547i5b6b73cch694d07829b8fa27b@mail.gmail.com>
	<200808311455.10370.mb@bu3sch.de>
	<69e28c910808310608o69de22fgcf417113849fb40@mail.gmail.com>
Message-ID: <1220204687.12065.11.camel@note.localnet>


Am Sonntag, den 31.08.2008, 15:08 +0200 schrieb Stefanik G?bor:

> Wouldn't this enable distros to ship the necessary firmware in their
> network installation boot CDs? Currently a working boot CD requires
> the cut firmware files to be included - but such a CD is inherently
> illegal to distribute, as it includes modified versions of files
> marked as illegal to modify. (Scripting fwcutter to automatically cut
> the firmware on boot could possibly solve this issue, but that
> requires a writable root filesystem.)
it requires any writable file system. IE, /tmp could be mounted as
tmpfs, which is writable. then they could: 
a) change the firmware path from /lib/firmware to /tmp/firmware
b) have a symlink in /lib/firmware/b43 to /tmp/firmware/b43
c) etc...

you see this is a solvable problem.

the next thing is that most boot cd's already HAVE a writeable / thx to 
unionfs / tmpfs or simmilar things.
> 
-- 
Thomas Ilnseher <illth at gmx.de>



From bolera.net at gmail.com  Sun Aug 31 23:50:02 2008
From: bolera.net at gmail.com (Javier Santos Romero)
Date: Sun, 31 Aug 2008 23:50:02 +0200
Subject: bcm-43xx for bcm-4328
Message-ID: <649170550808311450u75194affjbb1e4fc59492ac51@mail.gmail.com>

Hi! It's my first post to bcm-43xx list.
I searching about bcm4328 device without ndiswrapper, but i didn't found
anything. Can you tell me about this?
thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080831/c5b42cff/attachment.html>

