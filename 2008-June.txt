From mb at bu3sch.de  Sun Jun  1 00:30:03 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 1 Jun 2008 00:30:03 +0200
Subject: Evil: Run b43 firmware inside of the kernel
Message-ID: <200806010030.03473.mb@bu3sch.de>

Hi,

I hacked up some patches that add a virtual machine to the
b43 driver to run the firmware inside of the kernel.
http://bu3sch.de/patches/misc/b43-vm/

This doesn't sound very useful, but it might help when debugging
firmware code, as firmware code is extremely hard to debug when
run on the device.
Actually, I found out with this VM that the RXE (at least) seems to be
highly timing sensitive. That means it completely breaks when some
magic timings dont fit. So I have the same issue with the VM (using
the proprietary FW) as I do have with my opensource FW (on the device).
I can receive one packet and then it locks up in the RXE busy loop.
I'm not sure why that happens, yet.

However, I thought I should send these patches to the public.
I thought maybe somebody was interested in flaming me for putting a code
interpreter and a disassembler into the kernel. So here you go.

http://bu3sch.de/patches/misc/b43-vm/
Get the two patches and apply them in the correct order to the driver.
Then run the python script to generate the dummy firmware that's run on
the device while the real fw runs in the VM.
Assemble that dummy firmware using b43-asm and put it into
/lib/firmware/b43-vm/ucode5.fw
Compile with debugging enabled (important!).
Then fire up b43 with the module parameter vm_enable=1
If the VM successfully loaded it should print the following line in dmesg:
"b43-phyX: Running firmware inside of a virtual machine!"
And of course it would break after the first received packet and loop
forever in a tight loop. :) You can see that by getting a VM coredump
by reading /debug/b43/phyX/vm_dump

Have fun and don't try this at home, kids.

-- 
Greetings Michael.


From ftoledo at docksud.com.ar  Sun Jun  1 02:05:16 2008
From: ftoledo at docksud.com.ar (Fernando Toledo)
Date: Sat, 31 May 2008 21:05:16 -0300
Subject: suspend vs. b43
In-Reply-To: <1212158238.4117.4.camel@johannes.berg>
References: <1212150713.4117.2.camel@johannes.berg>
	<200805301606.25556.mb@bu3sch.de>
	<1212158238.4117.4.camel@johannes.berg>
Message-ID: <200805312105.18338.ftoledo@docksud.com.ar>

El Vie 30 May 2008, Johannes Berg escribi?:
> On Fri, 2008-05-30 at 16:06 +0200, Michael Buesch wrote:
> > On Friday 30 May 2008 14:31:53 Johannes Berg wrote:
> > > Since a while ago I've had trouble resuming when b43 was connected to
> > > an AP while suspended.
> > >
> > > I did a test today where this was the only difference, but I failed to
> > > see whether ssb or b43 were causing the problem.
> > >
> > > Does anyone have a machine with b43 in it that can suspend and supports
> > > the RTC-trace feature so we can narrow it down? Even reproducing might
> > > help to make sure it's not just something weird with my powerbook.
> >
> > Resume is pretty broken since some time for me.
> > It sometimes works fine and sometimes just hangs with a black screen.
> > I have no idea what's going on.
>
> Odd. Resume itself works just fine here, except when b43 is up. But then
> again, you might not notice that this is the problem because by default,
> nothing gets printed on the resume console and then it will indeed hang
> with a black screen.
>
> johannes

my dmesg
when suspende/resume the b43 crash
79 6d 6a 02 86 25 fb b0 57 b0 4c 8d 7d a5 83 7c f0 5a 67 28 e5 7b 42 fa 95 4e 
9e e9 db c9 5a 71 74 7f 40 32 5b f3 80 91 24 86 54 9e 03 4a 8e f4 bb bd 03 67 
25 40 e0 c4 d3 c3 33 ff 5e 7d 74 28 97 ce 4a 03 44 b4 2b 58 b7 8c 25 cf e8 45 
b3 8f fc a0 0e 7f 76 58 92 f9 16 27 ad c8 d3 3b 3f 4e b6 27 b2 1c 0c 03 30 a8 
d3 11 cc cc 81 76 26 6a 22 b1 99 02 9d 71 55 d7 9a f4 f5 48 82 9b 24 91 fb 45 
09 28 b5 f8 8e 6c 2a 5c 5c b1 b4 21 0e 70 e9 ee 0c 80 03 e1 fb f6 45 3c 1a 48 
79 b8 48 9a 1e f8 b0 0d 25 45 30 73 06 58 5a 9d 18 80 e7 1d cd 91 e0 c7 90 07 
77 93 6c 65 bf 01 71 45 80 3c 8f 5c ee 3a 8e 3f d5
TKIP decrypt: iv16=0069 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 69 b5 4e ea 2e 2f bf 8b 26 b8 14 df 0e 27 
phy0: TX to low-level driver (len=236) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=212) 00 20 6a a0 00 00 00 00 67 4d ca 0a 64 d8 15 44 0b 
0b 7d a2 b5 2b ee 38 de 2e d8 03 32 25 b1 db 23 e8 e6 b3 8a 6f f2 93 49 37 f2 
96 80 59 6c af b4 d4 92 15 b9 61 8c dd 5a 07 dd c1 2d 0c 7a c8 a7 89 76 c4 61 
4f 05 5a 7c 23 02 29 d4 d7 ba 7d 65 c9 95 4a 3a 2f e7 28 a3 2c 59 2f e1 8b 56 
4f bd eb c1 70 0c e3 76 5d 06 5f a5 97 3a 26 e8 cb bc 8a 84 f6 31 f7 3e b1 89 
f4 ec 07 8b 3c 98 56 05 be 96 26 b4 13 51 3a 51 3b 27 ff 42 c7 aa 59 b5 c5 ce 
ea df c7 1e 5d 17 9c 39 3c ea 98 aa 60 fb 60 b4 c8 30 5f 29 8d 54 5f d9 e4 b0 
28 e0 9f af 3d 48 84 6e e0 0e 1a 9e fd 35 5a 11 58 00 23 50 af ed c2 c1 40 1f 
38 0d 87 16 f0 01 98 63 fe 0a b0 55 ec
TKIP decrypt: iv16=006a iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6a 4d e5 70 f2 dd 3a 66 57 72 bb 8e ff 6c 
phy0: TX to low-level driver (len=214) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=190) 00 20 6b a0 00 00 00 00 7c 0e c5 e0 a6 4e 47 90 07 
e1 07 ca f3 39 4e d7 e4 73 6a 11 78 bd 1e 3b cf d0 49 95 2c 2e 9e b0 65 92 bc 
0e 60 8c ff f5 b4 ac 1a 9f 91 d3 e6 6a 28 17 f0 d3 d4 ff 0a 19 e6 4e a3 5e 06 
e7 fa 0c 30 54 bd 90 87 79 f4 d2 f6 6c 05 f9 7a f9 07 c9 58 7f f2 f7 91 01 cf 
0f ec 74 26 e1 ee a2 09 6c 6c 03 94 40 21 1c 32 da 34 9b da c9 57 07 60 56 6a 
97 e7 39 49 b9 cc 80 73 f4 28 93 54 71 97 24 6d 07 db 31 92 a5 16 21 97 c3 ca 
46 78 cb ce 27 a6 a4 6e 2c 72 80 6c ca 9b 24 fd 08 d8 a5 67 e0 9a d8 03 97 4a 
f4 0b 36 6c 44 87 9e a5 2d ec dc 8a bb 38 1d f9 64
TKIP decrypt: iv16=006b iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6b 92 51 af ad 4f f6 4c 2c 24 16 ba 40 4b 
phy0: TX to low-level driver (len=252) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=228) 00 20 6c a0 00 00 00 00 76 cc 9f 20 cb 10 0c 10 3c 
6e d6 9c 1b 6f ad c3 6a 16 4b 19 f3 8b fe 82 7d b8 23 2b 4e a0 83 a8 d5 91 0f 
2b fd c6 fa b6 73 5e 7e 92 79 f2 92 3b 41 88 c9 52 94 b7 fd d0 8d ca 0c 80 7a 
ec c8 33 ff 8e 0e 96 9a 6d 94 6b 7d fe a6 a2 b6 9d f8 14 7d 4b 84 b7 f7 6f 22 
e5 f8 89 bc 16 3d 69 1c 9e f6 0d 8b 85 17 2f b8 6d 31 72 c7 78 48 3a 22 57 18 
61 e5 fb e6 41 6e 6c 39 6d 9c c9 19 fa d9 07 90 79 59 f9 64 9a cd 18 98 9f 93 
a5 23 09 19 e7 ec eb 9c da e1 c8 dc a1 52 64 f9 48 09 26 2c 20 62 75 56 59 41 
7f d3 73 25 fe a3 d8 cf 66 2c bd 63 1f ad d3 16 65 06 c7 7e 65 20 e3 c6 fe b4 
97 4c 2c 75 a6 b7 c8 f9 ed d4 69 b0 bc 39 48 fc e1 6b bc 93 50 56 e8 cf 82 a9 
2c 01 06
TKIP decrypt: iv16=006c iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6c 35 94 b6 c6 3b 5c 84 e8 57 c8 31 0e f6 
phy0: TX to low-level driver (len=236) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=212) 00 20 6d a0 00 00 00 00 60 91 08 c5 a0 09 7a b9 76 
9d fc 7b fb a3 9f a2 d5 f1 36 aa 28 7a e0 45 73 16 45 90 7f 36 7b a9 00 e8 1a 
fc af a6 c5 36 fd 96 4e 31 44 e0 53 78 b5 f7 c1 5e be 06 b4 8a 17 f4 80 a4 d1 
22 8d b7 4e 43 70 ff 2e 60 49 e5 09 96 c7 20 3d f4 1e 18 ad f4 bd 9e b8 9c 1f 
a9 61 33 9a 49 4b bc a8 b5 e2 71 24 39 08 d5 15 4f 2d 0c 8f 15 d6 d0 37 b7 ef 
c9 a7 ee 3c 2e 7a cd 29 74 6b 9c 8a e1 53 ff a2 41 86 8e 81 8c e6 4b ee c2 49 
1a 4a 14 d7 0d 80 45 14 36 24 2a aa bf ac c9 57 02 77 e5 c0 0b 6d 69 35 aa 42 
43 1a fa 42 68 24 1b 4a 20 03 bb 24 3f 03 74 93 9e 83 9e fe 33 e4 8d 72 32 11 
28 08 99 bf d4 47 5d 41 4b ff c9 3b 0d
TKIP decrypt: iv16=006d iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6d dc 8a e3 1a b8 7e ee 7b 3e 2c 00 dd 15 
phy0: TX to low-level driver (len=214) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=190) 00 20 6e a0 00 00 00 00 e5 6f 62 5e 7c b0 f2 d9 99 
24 22 03 c8 f0 00 1d 2e 11 97 22 88 65 90 73 a8 8d 18 cd 04 93 cd 56 04 3d d8 
bc 9b 74 f1 9d be fa b4 40 d1 fa d0 87 3b f9 f6 19 b7 c5 f8 6b 6f b1 aa 11 33 
39 03 f8 bd df f9 09 df 4e ef 45 46 2c 29 b6 4e db 2a fb 25 73 2f 7c 51 be b3 
18 f7 d6 3b 96 83 fa 9a 76 5c cf ab fe c3 53 59 28 ca 0c 5d 3a 19 91 5b 87 e6 
0f 98 87 f6 fe 94 1f e0 b1 91 19 92 12 bc db b1 e2 d6 37 9f fd e3 bc 4b f1 ff 
3e 39 5e 7a b2 f9 a3 1c cf f6 df 40 09 cd dd 6e fe 82 0d a0 4e 7d 84 ad 33 a4 
e2 5f 1b 8c 43 67 6e ba fd a9 b1 01 d6 77 01 5e 74
TKIP decrypt: iv16=006e iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6e 81 32 e3 e1 61 fc e3 72 9e 6d aa 66 6d 
phy0: TX to low-level driver (len=57) FC=0x0040 DUR=0x00da 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=00:1b:11:3b:b5:95
phy0: TX to low-level driver (len=252) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=228) 00 20 6f a0 00 00 00 00 36 f9 9c 05 c3 0f 84 d5 60 
ab 5a f2 9c 79 23 c8 b8 e5 8e 25 be 96 17 f3 14 a0 cc 94 e7 c6 56 82 02 55 ec 
75 1b ef 58 2e a1 c0 ed 65 57 d0 bd 43 1e 71 9f 9f 15 9c b5 62 a7 ed 30 82 bc 
48 fb ec 28 01 63 17 ac 83 d8 4e f2 f9 49 77 68 40 1f 6f ce 2a ca d0 91 56 14 
0c 03 5c df 57 41 bc de 11 da 83 33 e4 aa e0 30 7d bd 12 b4 f9 00 f2 40 74 77 
eb 07 25 b2 cc 63 55 30 b6 69 35 4b be df 71 98 1e 6b 38 b8 86 6d 3b 59 96 10 
b2 2a 3b 9e b8 7c c3 ed 18 51 3c 52 88 a4 5d d6 1f 53 4d f9 7a c2 e0 e1 12 ad 
5d 49 28 77 14 14 02 12 4d 9e d3 fe b1 bb 8d 79 fb b8 30 f8 f0 73 c1 c3 7a f1 
03 3c 56 6b a3 19 92 0a 89 8d 7e 20 b3 bb 80 49 61 5e 8e c8 ef 4b 12 cc 5b a2 
22 3a ba
TKIP decrypt: iv16=006f iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 6f be bf 84 81 12 27 27 e9 0f f5 17 18 79 
phy0: TX to low-level driver (len=236) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=212) 00 20 70 a0 00 00 00 00 ee f8 3a 6a 31 81 98 5f 06 
2d bc 41 2d 7a 82 81 da f2 53 84 81 c0 c3 b6 b9 7a 17 a7 20 a1 ac 05 15 8b f7 
cd fd 7b 14 2e c6 3b ec 04 e6 dd a5 6c 66 c5 b6 93 e9 87 e7 3a 61 9f 62 6d df 
3e 9e ec fc 09 af 17 20 c2 0c 28 02 e9 50 ff 85 d6 4a 3d 8e 6a e2 63 96 9a bf 
c9 09 cf be 3d 34 ae 6c 4b 4c c7 77 ec 30 67 84 32 cd 85 9a 2e 54 71 4e 85 c0 
37 1a 69 48 5d 6b 00 b3 0f ec 0c f5 14 7b 6e bd ee 58 79 27 37 5e e2 55 66 45 
bb 70 8c 75 48 92 85 f8 d2 53 00 44 03 35 54 ed 53 2b 69 b5 2e 29 b1 b7 7c cd 
70 c2 ed 05 d8 d5 68 10 c7 43 55 26 e7 7d 56 a8 b8 8f e6 df 44 2b 22 ba ad c5 
62 30 65 e7 e7 b8 77 27 dd f0 f6 b2 85
TKIP decrypt: iv16=0070 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 70 55 63 29 cc 01 38 ef b4 75 d8 a0 ce 8e 
phy0: TX to low-level driver (len=214) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=190) 00 20 71 a0 00 00 00 00 95 1d bf f2 8d c3 6a a1 26 
50 cb 6a e4 9f 11 1c a0 05 49 50 e0 a5 d6 5e 7f 1e 84 03 43 6f af 61 2e 1f f4 
fb 08 25 2d 94 30 44 39 60 cc 24 64 92 ea 5a 2d 39 77 23 16 e3 dc c4 15 a5 66 
05 7d ed 14 5f 89 d8 d5 86 3c 65 e9 6a 76 0b 6b a6 82 55 cc 97 1c af a7 95 6d 
e2 9d 36 03 6c 77 76 60 10 95 66 08 c9 3b bc 3d 3d e5 a5 54 4f 90 a8 7b 87 2e 
a7 3c 8a 4e 65 1a bf 7b dc c8 77 38 97 94 ff bc 08 08 83 32 84 03 71 73 e9 59 
40 6c 13 da 95 b7 15 78 dc 78 91 2c 12 9b d5 1e ea 42 97 f2 ec 3f 09 78 ca c1 
7e e8 04 fe 02 0b 24 c3 a8 da c5 56 85 d3 cb c2 d9
TKIP decrypt: iv16=0071 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 71 78 5a e0 56 cc 1c 9b 56 7b 5c c5 94 f2 
phy0: TX to low-level driver (len=252) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=228) 00 20 72 a0 00 00 00 00 0b a4 a3 78 77 a8 e7 8e 7e 
a1 cb 10 91 16 5b 24 26 b5 21 9e 8a 3a 60 ab a4 f8 60 5e 1e 3c 14 a6 36 88 95 
b9 d9 e3 3f 9b 54 8c 6f 5a 46 9f c1 9c b1 84 a6 c9 70 b4 fe 73 70 47 7f 14 56 
e3 05 a6 b3 f6 fe b6 ec f6 c2 bf 11 a7 8d 02 c3 ee 85 a1 fb ef 70 9b 03 06 00 
d5 d4 f4 04 41 d9 2b 9d 8a b1 67 74 9c f6 f1 85 24 af 1d d9 19 f8 08 6d 80 2b 
e6 b0 87 55 75 b6 1e de ef bb df 1b 93 69 21 4a fe 33 7f 0d e7 32 98 12 57 68 
ff 87 71 f9 54 e7 cc a0 20 50 98 ae af f6 b6 a6 6f b6 c6 d5 25 e8 7b 82 d8 85 
b6 cf 87 0b 65 63 05 df af 29 53 54 50 8a 34 08 c6 ee ac d9 c0 4c 76 6a 25 9e 
4b e9 e1 77 f0 71 69 38 88 d7 59 d4 17 c3 d2 2b 74 f1 09 9c 3a fb 09 34 5f aa 
38 ed c8
TKIP decrypt: iv16=0072 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 72 2f 57 ab 89 a7 bc 08 ad 6c 18 29 3a b6 
phy0: TX to low-level driver (len=236) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=212) 00 20 73 a0 00 00 00 00 65 f9 71 b8 86 bb 6c 0b ed 
03 2b 12 3e 89 0e a6 06 11 53 0e f9 00 3e 53 43 22 6a dc 36 8a e6 b1 7d 4a f9 
c2 1a 01 59 46 50 87 17 e5 6f 22 72 a5 43 c2 45 d1 19 3e 39 d0 6b e6 d6 14 f5 
97 e5 d1 c1 11 fd 0c 77 61 f5 45 55 c1 10 06 96 f7 8c f7 81 0d 7d 41 ff 28 47 
ca aa 19 7e f1 95 0d 60 84 b7 f2 82 73 46 18 c2 76 e4 3b d9 43 3f 2b e7 b3 f7 
4a 24 d2 40 0c 46 94 0f d0 a5 80 ef a9 2d 5e 0e f1 83 e5 91 fb 1a 6c 1b 76 11 
37 0f e7 e5 17 82 db 3b 81 07 5a 7a 2a dc 8b d0 b8 dc d9 bd ef ff d2 9c 81 8e 
d1 c7 41 61 d7 57 39 f2 11 ca e3 4e 0d 48 3d b3 c4 88 15 b4 bb a0 97 b4 62 87 
90 60 24 51 07 09 ab 56 6e 12 bf 71 c4
TKIP decrypt: iv16=0073 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 73 21 48 c8 8a 87 25 ba 44 ab 47 68 27 00 
phy0: TX to low-level driver (len=214) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=190) 00 20 74 a0 00 00 00 00 0e 3a 6d 31 d0 de 55 bc 28 
48 a0 77 3a 53 2d b4 3b 06 49 5f e3 a6 03 cc ca 1e 25 b2 4d c7 c2 7a 7e 34 b5 
52 b9 60 78 91 c7 c5 6f 5e a7 8d 42 3a b0 99 89 b6 71 09 67 e7 5d ea 24 d2 ca 
c9 17 b2 c0 f9 42 eb 92 76 c2 e6 8d f7 c3 9d 35 16 16 80 88 31 58 0f cd a4 aa 
8c 5d 62 42 73 15 63 43 a1 b2 ad 99 de 9b ee 3d 38 64 8f e4 dd d2 19 67 9b ca 
87 45 69 ac 9d 38 f0 1f de d2 eb d6 57 29 16 2b bd c7 f4 f4 6c c3 0d ac cb 0d 
03 ee e6 12 f8 6e d1 df 82 95 fc 40 ad f1 c0 32 69 d8 73 e9 62 77 a1 90 33 2b 
e1 be ef 88 a3 96 7a 63 eb 40 14 3e c5 a1 4a a4 64
TKIP decrypt: iv16=0074 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 74 92 dc 3c 63 8a 8b 72 17 5a c6 7b 41 fd 
phy0: TX to low-level driver (len=57) FC=0x0040 DUR=0x00da 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=00:1b:11:3b:b5:95
wmaster0: STA 00:1b:11:3b:b5:95 Average rate: 540 (540/1)
HW CONFIG: channel=1 freq=2412 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=2 freq=2417 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=3 freq=2422 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=4 freq=2427 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=5 freq=2432 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=6 freq=2437 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=7 freq=2442 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=8 freq=2447 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=9 freq=2452 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=10 freq=2457 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=11 freq=2462 phymode=2
phy0: TX to low-level driver (len=42) FC=0x0040 DUR=0x0000 
A1=ff:ff:ff:ff:ff:ff A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
HW CONFIG: channel=6 freq=2437 phymode=2
phy0: TX to low-level driver (len=24) FC=0x0148 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=00:1b:11:3b:b5:95
phy0: TX to low-level driver (len=252) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=228) 00 20 75 a0 00 00 00 00 06 58 8a e6 c9 71 1f 23 72 
1f 44 4e 80 cd b5 7b 7d a6 59 18 b2 8f f9 85 fa ee 05 1f 97 d3 27 89 67 73 0c 
a4 ba 69 fe 4a 46 b4 e2 2f cd bb 94 d1 01 1c 77 72 0c c5 52 73 ce 83 34 b9 75 
b8 91 a5 5f 55 4f b9 e1 46 90 a3 90 6a b9 0b df 08 50 05 a7 42 a3 0a a2 f2 41 
89 a8 70 d1 07 9d c0 c0 f0 57 3a 60 5d 76 e0 71 18 41 90 3a 47 2a f4 6e da b5 
f7 76 45 9d 8f 22 c0 1b fa 8a 10 55 19 14 5c 82 86 71 b6 dc 10 0d d0 54 28 96 
b5 54 7c e6 bb 1b db 2b 5e 7a 21 84 a2 fb f1 08 20 f4 b6 61 2e 42 c5 10 cd 0e 
5c 19 c6 df 4b 30 35 9d 76 00 90 92 5a e5 18 a5 bb a3 97 03 cd a2 59 a8 33 9f 
f1 77 9d 23 cd 0b b1 1d a6 6f 28 2c e1 3e 68 76 1a 59 31 5e 88 19 ea 7c a4 1e 
7e 19 69
TKIP decrypt: iv16=0075 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 75 69 fb 98 87 9c 82 af 12 37 c8 07 b7 f0 
phy0: TX to low-level driver (len=236) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=212) 00 20 76 a0 00 00 00 00 d2 16 c7 2e 92 04 bc f4 74 
5f b9 bf 8a bb 39 58 fd fd ae a2 74 b8 aa af 69 40 77 69 f6 b6 58 d8 44 00 77 
fd 22 66 02 ce 03 14 ad ee 92 f3 0a 43 8d d5 99 b8 8b 96 1c a1 7b 4c e1 1d 39 
bf db de 14 4e ad ca e7 f2 0e af 37 c3 ae f3 86 ad d5 0f a7 2a b5 5c 22 bb f1 
b7 35 40 a8 6b 54 56 bb 2b 86 5c c2 36 38 84 bb b0 d0 46 18 9c e3 cc da 82 94 
22 4c 29 fe 94 e9 74 84 2c d9 06 fc 63 7c d5 a6 98 f2 b0 81 1a 4f 74 b5 fe 3c 
46 43 9b 7d 11 01 74 a2 d6 42 34 a2 25 cb 3d a8 f9 9e aa 2b 87 73 79 9d 7c 35 
58 80 23 8e 26 e0 89 28 6d 50 38 54 0e 29 68 bd 60 60 96 da 4e dd 6b ac fe 20 
bc cc bb 44 fd 8a f9 d1 06 7b 88 c8 8e
TKIP decrypt: iv16=0076 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 76 53 61 6a 5a e2 bc 85 88 2e 0a c7 c3 9c 
phy0: TX to low-level driver (len=214) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=ff:ff:ff:ff:ff:ff
TKIP decrypt: data(len=190) 00 20 77 a0 00 00 00 00 24 fd b3 fc 74 6d e9 7f 69 
82 f5 b8 63 da d3 b5 06 84 4f a8 33 79 43 e5 73 13 77 40 e1 86 cc 13 03 7b 7d 
d5 b2 d2 40 da f4 48 00 8c a5 60 f2 79 f5 a2 3f 46 55 3d 21 f9 7d bc 54 59 5f 
63 08 4f 02 ac 33 39 c7 87 b1 cb c8 f4 a1 f7 93 e7 f7 e7 30 8c 7b 61 31 cf 7f 
53 ff 50 0b e5 24 e0 59 a8 c2 f3 8d 0d dc d4 f8 88 5b 55 de 76 25 1c 68 b1 96 
09 c8 10 de 77 8a c0 7b 5f 26 e6 4b 3f 80 c8 4b c9 3e 6e a0 a7 4c ed 19 4f 97 
52 e5 f3 0d b9 64 c6 c7 d8 2a cf fb 62 8d 49 ed 10 6e da 82 2f f6 1e 02 50 f4 
44 70 89 6b f1 4a 31 75 c9 ac 9d 3f 07 57 a5 a3 76
TKIP decrypt: iv16=0077 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 77 b4 b9 ec 6a 83 a4 24 3a 4c 2b 60 0d b9 
TKIP decrypt: data(len=159) 00 20 03 20 00 00 00 00 37 e3 c9 1e 2f 35 5c 97 93 
55 08 22 45 1f b9 32 f5 20 bd 3e 3e 14 f3 01 d2 2d 15 37 fe 82 ca ad a9 df 1f 
d3 53 27 5d 07 ca c0 72 53 4b d0 59 52 3e 3c fb 31 df ce c3 0e 88 68 4f 1b cc 
e6 e3 12 4d 6a 1b 59 c2 28 89 c4 76 66 75 09 6c e2 80 93 ee 5f cb 2f ab f0 98 
64 a1 70 54 97 ae 93 77 02 27 90 9e 65 92 de 3d 3a 5e 47 db 14 ef 92 12 6d 34 
6d 71 dc f1 e9 98 1f 35 b5 8e 1d 75 69 74 12 c8 05 52 69 7b a2 37 e1 05 e0 cc 
34 8b 40 f4 7a c7 fa 02 c3 c8 a9 49
TKIP decrypt: iv16=0003 iv32=00000000
TKIP decrypt: Phase2 rc4key=00 20 03 82 97 1b 38 3a 16 06 72 78 1e cc 79 cb 
phy0: TX to low-level driver (len=151) FC=0x4108 DUR=0x002c 
A1=00:1b:11:3b:b5:95 A2=00:14:a5:f5:85:ed A3=00:1b:11:3b:b5:95
b43-phy0 debug: Removing Interface type 2
b43-phy0 debug: Wireless interface stopped
b43-phy0 debug: DMA-32 0x0200 (RX) max used slots: 2/64
b43-phy0 debug: DMA-32 0x02A0 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0280 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0260 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0240 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0220 (TX) max used slots: 60/128
b43-phy0 debug: DMA-32 0x0200 (TX) max used slots: 0/128
wlan0: deauthenticate(reason=3)
input: b43-phy0 as /devices/virtual/input/input6
b43-phy0 debug: Loading firmware version 351.126 (2006-07-29 05:54:02)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0:tx
Registered led device: b43-phy0:rx
Registered led device: b43-phy0:radio
b43-phy0 debug: Wireless interface started
HW CONFIG: channel=6 freq=2437 phymode=2
b43-phy0 debug: Adding Interface type 2
ADDRCONF(NETDEV_UP): wlan0: link is not ready
b43-phy0 debug: Removing Interface type 2
b43-phy0 debug: Wireless interface stopped
b43-phy0 debug: DMA-32 0x0200 (RX) max used slots: 0/64
b43-phy0 debug: DMA-32 0x02A0 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0280 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0260 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0240 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0220 (TX) max used slots: 0/128
b43-phy0 debug: DMA-32 0x0200 (TX) max used slots: 0/128
Syncing filesystems ... done.
Freezing user space processes ... (elapsed 0.00 seconds) done.
Freezing remaining freezable tasks ... (elapsed 0.00 seconds) done.
Suspending console(s)
b43-phy0 debug: Suspending...
b43-phy0 debug: Device suspended.
sd 0:0:0:0: [sda] Synchronizing SCSI cache
sd 0:0:0:0: [sda] Stopping disk
ACPI handle has no context!
parport_pc 00:02: disabled
ieee1394: hpsb_bus_reset called while bus reset already in progress
ACPI handle has no context!
ACPI: PCI interrupt for device 0000:10:00.0 disabled
ACPI: PCI interrupt for device 0000:00:1d.7 disabled
ACPI: PCI interrupt for device 0000:00:1d.3 disabled
ACPI: PCI interrupt for device 0000:00:1d.2 disabled
ACPI: PCI interrupt for device 0000:00:1d.1 disabled
ACPI: PCI interrupt for device 0000:00:1d.0 disabled
ACPI: PCI interrupt for device 0000:00:1b.0 disabled
Disabling non-boot CPUs ...
CPU 1 is now offline
SMP alternatives: switching to UP code
CPU1 is down
Intel machine check architecture supported.
Intel machine check reporting enabled on CPU#0.
Back to C!
Enabling non-boot CPUs ...
SMP alternatives: switching to SMP code
Booting processor 1/1 eip 3000
Initializing CPU#1
Calibrating delay using timer specific routine.. 3192.54 BogoMIPS 
(lpj=1596270)
CPU: After generic identify, caps: bfe9fbff 00100000 00000000 00000000 
0000c189 00000000 00000000 00000000
monitor/mwait feature present.
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 2048K
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 1
CPU: After all inits, caps: bfe9fbff 00100000 00000000 00002940 0000c189 
00000000 00000000 00000000
Intel machine check architecture supported.
Intel machine check reporting enabled on CPU#1.
CPU1: Intel Genuine Intel(R) CPU           T2050  @ 1.60GHz stepping 08
CPU1 is up
Switched to high resolution mode on CPU 1
APIC error on CPU1: 00(40)
PM: Writing back config space on device 0000:00:02.0 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:00:02.0 at offset 7 (was 0, 
writing f4480000)
PM: Writing back config space on device 0000:00:02.0 at offset 6 (was 8, 
writing e0000008)
PM: Writing back config space on device 0000:00:02.0 at offset 5 (was 1, 
writing 4001)
PM: Writing back config space on device 0000:00:02.0 at offset 1 (was 900000, 
writing 900003)
ACPI: PCI Interrupt 0000:00:02.0[A] -> GSI 16 (level, low) -> IRQ 16
PCI: Setting latency timer of device 0000:00:02.0 to 64
PM: Writing back config space on device 0000:00:02.1 at offset 4 (was 0, 
writing f4500000)
PM: Writing back config space on device 0000:00:02.1 at offset 1 (was 900000, 
writing 900007)
PM: Writing back config space on device 0000:00:1b.0 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:00:1b.0 at offset 3 (was 0, 
writing 10)
PM: Writing back config space on device 0000:00:1b.0 at offset 1 (was 100000, 
writing 100002)
ACPI: PCI Interrupt 0000:00:1b.0[A] -> GSI 16 (level, low) -> IRQ 16
PCI: Setting latency timer of device 0000:00:1b.0 to 64
PM: Writing back config space on device 0000:00:1c.0 at offset f (was 100, 
writing 4010a)
PM: Writing back config space on device 0000:00:1c.0 at offset 9 (was 10001, 
writing 1fff1)
PM: Writing back config space on device 0000:00:1c.0 at offset 8 (was 0, 
writing fff0)
PM: Writing back config space on device 0000:00:1c.0 at offset 7 (was 
20000000, writing 200000f0)
PM: Writing back config space on device 0000:00:1c.0 at offset 3 (was 810000, 
writing 810010)
PM: Writing back config space on device 0000:00:1c.0 at offset 1 (was 100000, 
writing 100407)
PCI: Setting latency timer of device 0000:00:1c.0 to 64
PM: Writing back config space on device 0000:00:1c.1 at offset f (was 200, 
writing 4020b)
PM: Writing back config space on device 0000:00:1c.1 at offset 9 (was 10001, 
writing 1fff1)
PM: Writing back config space on device 0000:00:1c.1 at offset 8 (was 0, 
writing f400f400)
PM: Writing back config space on device 0000:00:1c.1 at offset 7 (was 0, 
writing 200000f0)
PM: Writing back config space on device 0000:00:1c.1 at offset 3 (was 810000, 
writing 810010)
PM: Writing back config space on device 0000:00:1c.1 at offset 1 (was 100000, 
writing 100407)
PCI: Setting latency timer of device 0000:00:1c.1 to 64
PM: Writing back config space on device 0000:00:1c.3 at offset f (was 400, 
writing 4040a)
PM: Writing back config space on device 0000:00:1c.3 at offset 9 (was 10001, 
writing 1fff1)
PM: Writing back config space on device 0000:00:1c.3 at offset 7 (was 
20000000, writing 3020)
PM: Writing back config space on device 0000:00:1c.3 at offset 3 (was 810000, 
writing 810010)
PM: Writing back config space on device 0000:00:1c.3 at offset 1 (was 100000, 
writing 100407)
PCI: Setting latency timer of device 0000:00:1c.3 to 64
PCI: Enabling device 0000:00:1d.0 (0000 -> 0001)
ACPI: PCI Interrupt 0000:00:1d.0[A] -> GSI 20 (level, low) -> IRQ 20
PCI: Setting latency timer of device 0000:00:1d.0 to 64
PM: Writing back config space on device 0000:00:1d.0 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:00:1d.0 at offset 8 (was 1, 
writing 4021)
usb usb1: root hub lost power or was reset
PCI: Enabling device 0000:00:1d.1 (0000 -> 0001)
ACPI: PCI Interrupt 0000:00:1d.1[B] -> GSI 17 (level, low) -> IRQ 17
PCI: Setting latency timer of device 0000:00:1d.1 to 64
PM: Writing back config space on device 0000:00:1d.1 at offset f (was 200, 
writing 20b)
PM: Writing back config space on device 0000:00:1d.1 at offset 8 (was 1, 
writing 4041)
usb usb2: root hub lost power or was reset
PCI: Enabling device 0000:00:1d.2 (0000 -> 0001)
ACPI: PCI Interrupt 0000:00:1d.2[C] -> GSI 18 (level, low) -> IRQ 19
PCI: Setting latency timer of device 0000:00:1d.2 to 64
PM: Writing back config space on device 0000:00:1d.2 at offset f (was 300, 
writing 30b)
PM: Writing back config space on device 0000:00:1d.2 at offset 8 (was 1, 
writing 4061)
usb usb3: root hub lost power or was reset
PCI: Enabling device 0000:00:1d.3 (0000 -> 0001)
ACPI: PCI Interrupt 0000:00:1d.3[D] -> GSI 19 (level, low) -> IRQ 18
PCI: Setting latency timer of device 0000:00:1d.3 to 64
PM: Writing back config space on device 0000:00:1d.3 at offset f (was 400, 
writing 40a)
PM: Writing back config space on device 0000:00:1d.3 at offset 8 (was 1, 
writing 4081)
usb usb4: root hub lost power or was reset
PCI: Enabling device 0000:00:1d.7 (0000 -> 0002)
ACPI: PCI Interrupt 0000:00:1d.7[A] -> GSI 20 (level, low) -> IRQ 20
PCI: Setting latency timer of device 0000:00:1d.7 to 64
PM: Writing back config space on device 0000:00:1d.7 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:00:1d.7 at offset 4 (was 0, 
writing f4584000)
PM: Writing back config space on device 0000:00:1e.0 at offset 9 (was 10001, 
writing 1fff1)
PM: Writing back config space on device 0000:00:1e.0 at offset 8 (was 0, 
writing f430f410)
PM: Writing back config space on device 0000:00:1e.0 at offset 1 (was 100007, 
writing 100107)
PCI: Setting latency timer of device 0000:00:1e.0 to 64
PM: Writing back config space on device 0000:00:1f.1 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:00:1f.1 at offset 8 (was c01, 
writing 40a1)
PM: Writing back config space on device 0000:00:1f.1 at offset 1 (was 2880005, 
writing 2800005)
ACPI: PCI Interrupt 0000:00:1f.1[A] -> GSI 16 (level, low) -> IRQ 16
PM: Writing back config space on device 0000:00:1f.2 at offset 9 (was 
fec01000, writing f4585000)
PM: Writing back config space on device 0000:00:1f.2 at offset 8 (was 1301, 
writing 40d1)
PM: Writing back config space on device 0000:00:1f.2 at offset 1 (was 2b00007, 
writing 2b00407)
PCI: Setting latency timer of device 0000:00:1f.2 to 64
PCI: Enabling device 0000:10:00.0 (0000 -> 0002)
ACPI: PCI Interrupt 0000:10:00.0[A] -> GSI 17 (level, low) -> IRQ 17
PM: Writing back config space on device 0000:10:00.0 at offset f (was 100, 
writing 10b)
PM: Writing back config space on device 0000:10:00.0 at offset 4 (was 0, 
writing f4000000)
PM: Writing back config space on device 0000:10:00.0 at offset 3 (was 0, 
writing 10)
PM: Writing back config space on device 0000:10:00.0 at offset 1 (was 100002, 
writing 100007)
PM: Writing back config space on device 0000:02:06.0 at offset f (was 34001ff, 
writing 5c0010b)
PM: Writing back config space on device 0000:02:06.0 at offset e (was 0, 
writing 18fc)
PM: Writing back config space on device 0000:02:06.0 at offset d (was 0, 
writing 1800)
PM: Writing back config space on device 0000:02:06.0 at offset c (was 0, 
writing 14fc)
PM: Writing back config space on device 0000:02:06.0 at offset b (was 0, 
writing 1400)
PM: Writing back config space on device 0000:02:06.0 at offset a (was 0, 
writing 57fff000)
PM: Writing back config space on device 0000:02:06.0 at offset 9 (was 0, 
writing 54000000)
PM: Writing back config space on device 0000:02:06.0 at offset 8 (was 0, 
writing 53fff000)
PM: Writing back config space on device 0000:02:06.0 at offset 7 (was 0, 
writing 50000000)
PM: Writing back config space on device 0000:02:06.0 at offset 6 (was 0, 
writing b0060302)
PM: Writing back config space on device 0000:02:06.0 at offset 4 (was 0, 
writing f4100000)
PM: Writing back config space on device 0000:02:06.0 at offset 3 (was 820000, 
writing 82a810)
PM: Writing back config space on device 0000:02:06.0 at offset 1 (was 2100000, 
writing 2100007)
PM: Writing back config space on device 0000:02:06.1 at offset f (was 4020200, 
writing 402020a)
PM: Writing back config space on device 0000:02:06.1 at offset 5 (was 0, 
writing f4104000)
PM: Writing back config space on device 0000:02:06.1 at offset 4 (was 0, 
writing f4101000)
PM: Writing back config space on device 0000:02:06.1 at offset 3 (was 800000, 
writing 804010)
PM: Writing back config space on device 0000:02:06.1 at offset 1 (was 2100000, 
writing 2100006)
ohci1394: fw-host0: OHCI-1394 1.1 (PCI): IRQ=[18]  MMIO=[f4101000-f41017ff]  
Max Packet=[2048]  IR/IT contexts=[4/8]
PM: Writing back config space on device 0000:02:0e.0 at offset f (was 100, 
writing 10a)
PM: Writing back config space on device 0000:02:0e.0 at offset 4 (was 0, 
writing f4108000)
PM: Writing back config space on device 0000:02:0e.0 at offset 3 (was 0, 
writing 4000)
PM: Writing back config space on device 0000:02:0e.0 at offset 1 (was 100000, 
writing 100006)
parport_pc 00:02: activated
hda: host max PIO4 wanted PIO255(auto-tune) selected PIO4
hda: MWDMA2 mode selected
sd 0:0:0:0: [sda] Starting disk
ata3: SATA link down (SStatus 0 SControl 0)
ata2: SATA link down (SStatus 0 SControl 0)
ata4: SATA link down (SStatus 0 SControl 0)
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ACPI cmd ef/10:03:00:00:00:a0 succeeded
ata1.00: ACPI cmd ef/10:03:00:00:00:a0 succeeded
ata1.00: configured for UDMA/100
sd 0:0:0:0: [sda] 117231408 512-byte hardware sectors (60022 MB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support 
DPO or FUA
b43-phy0 debug: Resuming...
b43-phy0 debug: Device resumed.
Restarting tasks ... done.
ieee1394: Host added: ID:BUS[0-00:1023]  GUID[00023f9929d1320c]
input: b43-phy0 as /devices/virtual/input/input7
b43-phy0 ERROR: Microcode not responding
b43-phy0 ERROR: You must go to 
http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the 
correct firmware (version 4).
input: b43-phy0 as /devices/virtual/input/input8
b43-phy0 ERROR: Microcode not responding
b43-phy0 ERROR: You must go to 
http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the 
correct firmware (version 4).
input: b43-phy0 as /devices/virtual/input/input9
b43-phy0 ERROR: Microcode not responding
b43-phy0 ERROR: You must go to 
http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the 
correct firmware (version 4).
phy0: Removed STA 00:1b:11:3b:b5:95
BUG: unable to handle kernel paging request at virtual address f8b1f1aa
printing eip: f8b1f1aa *pde = 37c0f067 *pte = 00000000 
Oops: 0000 [#1] PREEMPT SMP 
Modules linked in: i915 drm binfmt_misc rfkill_input vboxdrv lp ipv6 
acpi_cpufreq cpufreq_userspace cpufreq_stats cpufreq_powersave 
cpufreq_ondemand freq_table cpufreq_conservative fuse intelfb i2c_algo_bit 
i2c_core coretemp hwmon snd_seq_dummy snd_seq_oss snd_seq_midi snd_rawmidi 
snd_seq_midi_event snd_seq snd_seq_device arc4 ecb blkcipher cryptomgr 
crypto_algapi firmware_class rfkill mac80211 cfg80211 firewire_ohci 
firewire_core snd_hda_intel crc32 crc_itu_t snd_pcm_oss snd_mixer_oss 
led_class fan rng_core input_polldev ide_cd joydev snd_pcm ehci_hcd cdrom 
parport_pc parport ohci1394 uhci_hcd snd_timer thermal rtc ssb iTCO_wdt evdev 
ieee1394 mii psmouse yenta_socket rsrc_nonstatic pcmcia_core snd usbcore 
container button processor battery ac soundcore snd_page_alloc unix

Pid: 6057, comm: ipolldevd Not tainted (2.6.24.4fer #11)
EIP: 0060:[<f8b1f1aa>] EFLAGS: 00010247 CPU: 1
EIP is at 0xf8b1f1aa
EAX: e7a42e40 EBX: e7a42e40 ECX: f7c5eaf0 EDX: e7b1bf48
ESI: e7a42e54 EDI: e7a42e54 EBP: f8a0809d ESP: f631df80
 DS: 007b ES: 007b FS: 00d8 GS: 0000 SS: 0068
Process ipolldevd (pid: 6057, ti=f631c000 task=f7cbb6f0 task.ti=f631c000)
Stack: f8a080a9 e7a42e58 e7b1bf40 c0133fc3 001e3247 00000003 00000000 00000000 
       e7b1bf48 e7b1bf40 c0134852 e7b1bf50 00000000 c013490e 00000000 f7cbb6f0 
       c013729c f631dfc4 f631dfc4 e7b1bf40 c0134852 00000000 c01371cd c0137195 
Call Trace:
 [<f8a080a9>] input_polled_device_work+0xc/0x24 [input_polldev]
 [<c0133fc3>] run_workqueue+0x77/0x104
 [<c0134852>] worker_thread+0x0/0xca
 [<c013490e>] worker_thread+0xbc/0xca
 [<c013729c>] autoremove_wake_function+0x0/0x33
 [<c0134852>] worker_thread+0x0/0xca
 [<c01371cd>] kthread+0x38/0x5f
 [<c0137195>] kthread+0x0/0x5f
 [<c0107c67>] kernel_thread_helper+0x7/0x10
 =======================
Code:  Bad EIP value.
EIP: [<f8b1f1aa>] 0xf8b1f1aa SS:ESP 0068:f631df80
---[ end trace 46891e208bca1bfe ]---
b43-phy1: Broadcom 4311 WLAN found
b43-phy1 debug: Found PHY: Analog 0, Type 0, Revision 0
b43-phy1 ERROR: FOUND UNSUPPORTED RADIO (Manuf 0x0, Version 0x0, Revision 0)
b43: probe of ssb0:0 failed with error -95


-- 
Dock Sud BBS
http://www.docksud.com.ar
telnet://bbs.docksud.com.ar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080531/e08f92d7/attachment.pgp>

From netrolller.3d at gmail.com  Sun Jun  1 02:40:33 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 1 Jun 2008 02:40:33 +0200
Subject: suspend vs. b43
In-Reply-To: <200805312105.18338.ftoledo@docksud.com.ar>
References: <1212150713.4117.2.camel@johannes.berg>
	<200805301606.25556.mb@bu3sch.de>
	<1212158238.4117.4.camel@johannes.berg>
	<200805312105.18338.ftoledo@docksud.com.ar>
Message-ID: <69e28c910805311740k339a02d5qaaa15d433f9a320@mail.gmail.com>

On Sun, Jun 1, 2008 at 2:05 AM, Fernando Toledo <ftoledo at docksud.com.ar> wrote:
> El Vie 30 May 2008, Johannes Berg escribi?:
>> On Fri, 2008-05-30 at 16:06 +0200, Michael Buesch wrote:
>> > On Friday 30 May 2008 14:31:53 Johannes Berg wrote:
>> > > Since a while ago I've had trouble resuming when b43 was connected to
>> > > an AP while suspended.
>> > >
>> > > I did a test today where this was the only difference, but I failed to
>> > > see whether ssb or b43 were causing the problem.
>> > >
>> > > Does anyone have a machine with b43 in it that can suspend and supports
>> > > the RTC-trace feature so we can narrow it down? Even reproducing might
>> > > help to make sure it's not just something weird with my powerbook.
>> >
>> > Resume is pretty broken since some time for me.
>> > It sometimes works fine and sometimes just hangs with a black screen.
>> > I have no idea what's going on.
>>
>> Odd. Resume itself works just fine here, except when b43 is up. But then
>> again, you might not notice that this is the problem because by default,
>> nothing gets printed on the resume console and then it will indeed hang
>> with a black screen.
>>
>> johannes
>
> my dmesg
> when suspende/resume the b43 crash
> <snip>
> ata4: SATA link down (SStatus 0 SControl 0)
> ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
> ata1.00: ACPI cmd ef/10:03:00:00:00:a0 succeeded
> ata1.00: ACPI cmd ef/10:03:00:00:00:a0 succeeded
> ata1.00: configured for UDMA/100
> sd 0:0:0:0: [sda] 117231408 512-byte hardware sectors (60022 MB)
> sd 0:0:0:0: [sda] Write Protect is off
> sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
> sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support
> DPO or FUA
> b43-phy0 debug: Resuming...
> b43-phy0 debug: Device resumed.
> Restarting tasks ... done.
> ieee1394: Host added: ID:BUS[0-00:1023]  GUID[00023f9929d1320c]
> input: b43-phy0 as /devices/virtual/input/input7
> b43-phy0 ERROR: Microcode not responding
> b43-phy0 ERROR: You must go to
> http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the
> correct firmware (version 4).
> input: b43-phy0 as /devices/virtual/input/input8
> b43-phy0 ERROR: Microcode not responding
> b43-phy0 ERROR: You must go to
> http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the
> correct firmware (version 4).
> input: b43-phy0 as /devices/virtual/input/input9
> b43-phy0 ERROR: Microcode not responding
> b43-phy0 ERROR: You must go to
> http://linuxwireless.org/en/users/Drivers/b43#devicefirmware and download the
> correct firmware (version 4).
> phy0: Removed STA 00:1b:11:3b:b5:95
> BUG: unable to handle kernel paging request at virtual address f8b1f1aa
> printing eip: f8b1f1aa *pde = 37c0f067 *pte = 00000000
> Oops: 0000 [#1] PREEMPT SMP
> Modules linked in: i915 drm binfmt_misc rfkill_input vboxdrv lp ipv6
> acpi_cpufreq cpufreq_userspace cpufreq_stats cpufreq_powersave
> cpufreq_ondemand freq_table cpufreq_conservative fuse intelfb i2c_algo_bit
> i2c_core coretemp hwmon snd_seq_dummy snd_seq_oss snd_seq_midi snd_rawmidi
> snd_seq_midi_event snd_seq snd_seq_device arc4 ecb blkcipher cryptomgr
> crypto_algapi firmware_class rfkill mac80211 cfg80211 firewire_ohci
> firewire_core snd_hda_intel crc32 crc_itu_t snd_pcm_oss snd_mixer_oss
> led_class fan rng_core input_polldev ide_cd joydev snd_pcm ehci_hcd cdrom
> parport_pc parport ohci1394 uhci_hcd snd_timer thermal rtc ssb iTCO_wdt evdev
> ieee1394 mii psmouse yenta_socket rsrc_nonstatic pcmcia_core snd usbcore
> container button processor battery ac soundcore snd_page_alloc unix
>
> Pid: 6057, comm: ipolldevd Not tainted (2.6.24.4fer #11)
> EIP: 0060:[<f8b1f1aa>] EFLAGS: 00010247 CPU: 1
> EIP is at 0xf8b1f1aa
> EAX: e7a42e40 EBX: e7a42e40 ECX: f7c5eaf0 EDX: e7b1bf48
> ESI: e7a42e54 EDI: e7a42e54 EBP: f8a0809d ESP: f631df80
>  DS: 007b ES: 007b FS: 00d8 GS: 0000 SS: 0068
> Process ipolldevd (pid: 6057, ti=f631c000 task=f7cbb6f0 task.ti=f631c000)
> Stack: f8a080a9 e7a42e58 e7b1bf40 c0133fc3 001e3247 00000003 00000000 00000000
>       e7b1bf48 e7b1bf40 c0134852 e7b1bf50 00000000 c013490e 00000000 f7cbb6f0
>       c013729c f631dfc4 f631dfc4 e7b1bf40 c0134852 00000000 c01371cd c0137195
> Call Trace:
>  [<f8a080a9>] input_polled_device_work+0xc/0x24 [input_polldev]
>  [<c0133fc3>] run_workqueue+0x77/0x104
>  [<c0134852>] worker_thread+0x0/0xca
>  [<c013490e>] worker_thread+0xbc/0xca
>  [<c013729c>] autoremove_wake_function+0x0/0x33
>  [<c0134852>] worker_thread+0x0/0xca
>  [<c01371cd>] kthread+0x38/0x5f
>  [<c0137195>] kthread+0x0/0x5f
>  [<c0107c67>] kernel_thread_helper+0x7/0x10
>  =======================
> Code:  Bad EIP value.
> EIP: [<f8b1f1aa>] 0xf8b1f1aa SS:ESP 0068:f631df80
> ---[ end trace 46891e208bca1bfe ]---
> b43-phy1: Broadcom 4311 WLAN found
> b43-phy1 debug: Found PHY: Analog 0, Type 0, Revision 0
> b43-phy1 ERROR: FOUND UNSUPPORTED RADIO (Manuf 0x0, Version 0x0, Revision 0)
> b43: probe of ssb0:0 failed with error -95

Looks like we are losing track of the microcode. The driver thinks
it's loaded, but in fact it isn't. Maybe we should reupload the
microcode on resume.


From proski at gnu.org  Sun Jun  1 07:18:25 2008
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 01 Jun 2008 01:18:25 -0400
Subject: cancel_work_sync() question
In-Reply-To: <4841AF77.7050100@verizon.net>
References: <4841AF77.7050100@verizon.net>
Message-ID: <1212297505.5662.12.camel@rd>

On Sat, 2008-05-31 at 16:05 -0400, Clyde McPherson wrote:
> I am trying to port the Broadcom drivers to an ARM archicture  (Linux 
> version 2.6.21) and it appears that cancel_work_sync() is missing from 
> its kernel. Is there any other function that I can replace it with?

It's present in newer kernels, and you can look at the implementation
and reimplement it.  Better yet, switch to a newer kernel.  In any case,
I don't think you should be asking b43 developers about backporting a
standard kernel function to an older kernel.  There should be places
more suitable for such questions.

Also, compat-wireless aims to bring newer wireless drivers to older
kernels.  It may work for you.  If it doesn't, and if compat-wireless
still aims to support Linux 2.6.21, you can report the failure as a bug
in compat-wireless.

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Sun Jun  1 11:52:35 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 1 Jun 2008 11:52:35 +0200
Subject: suspend vs. b43
In-Reply-To: <69e28c910805311740k339a02d5qaaa15d433f9a320@mail.gmail.com>
References: <1212150713.4117.2.camel@johannes.berg>
	<200805312105.18338.ftoledo@docksud.com.ar>
	<69e28c910805311740k339a02d5qaaa15d433f9a320@mail.gmail.com>
Message-ID: <200806011152.35659.mb@bu3sch.de>

On Sunday 01 June 2008 02:40:33 Stefanik G?bor wrote:
> Looks like we are losing track of the microcode. The driver thinks
> it's loaded, but in fact it isn't. Maybe we should reupload the
> microcode on resume.

We already do this, of course.

-- 
Greetings Michael.


From rjw at sisk.pl  Sun Jun  1 13:47:22 2008
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sun, 1 Jun 2008 13:47:22 +0200
Subject: suspend vs. b43
In-Reply-To: <200806011152.35659.mb@bu3sch.de>
References: <1212150713.4117.2.camel@johannes.berg>
	<69e28c910805311740k339a02d5qaaa15d433f9a320@mail.gmail.com>
	<200806011152.35659.mb@bu3sch.de>
Message-ID: <200806011347.23119.rjw@sisk.pl>

On Sunday, 1 of June 2008, Michael Buesch wrote:
> On Sunday 01 June 2008 02:40:33 Stefanik G?bor wrote:
> > Looks like we are losing track of the microcode. The driver thinks
> > it's loaded, but in fact it isn't. Maybe we should reupload the
> > microcode on resume.
> 
> We already do this, of course.

Do we do it in .resume(), perchance?


From mb at bu3sch.de  Sun Jun  1 14:11:25 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 1 Jun 2008 14:11:25 +0200
Subject: suspend vs. b43
In-Reply-To: <200806011347.23119.rjw@sisk.pl>
References: <1212150713.4117.2.camel@johannes.berg>
	<200806011152.35659.mb@bu3sch.de> <200806011347.23119.rjw@sisk.pl>
Message-ID: <200806011411.25922.mb@bu3sch.de>

On Sunday 01 June 2008 13:47:22 Rafael J. Wysocki wrote:
> On Sunday, 1 of June 2008, Michael Buesch wrote:
> > On Sunday 01 June 2008 02:40:33 Stefanik G?bor wrote:
> > > Looks like we are losing track of the microcode. The driver thinks
> > > it's loaded, but in fact it isn't. Maybe we should reupload the
> > > microcode on resume.
> > 
> > We already do this, of course.
> 
> Do we do it in .resume(), perchance?

hm?
We always do it when turning the device on.


-- 
Greetings Michael.


From rjw at sisk.pl  Sun Jun  1 15:18:39 2008
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Sun, 1 Jun 2008 15:18:39 +0200
Subject: suspend vs. b43
In-Reply-To: <200806011411.25922.mb@bu3sch.de>
References: <1212150713.4117.2.camel@johannes.berg>
	<200806011347.23119.rjw@sisk.pl> <200806011411.25922.mb@bu3sch.de>
Message-ID: <200806011518.40282.rjw@sisk.pl>

On Sunday, 1 of June 2008, Michael Buesch wrote:
> On Sunday 01 June 2008 13:47:22 Rafael J. Wysocki wrote:
> > On Sunday, 1 of June 2008, Michael Buesch wrote:
> > > On Sunday 01 June 2008 02:40:33 Stefanik G?bor wrote:
> > > > Looks like we are losing track of the microcode. The driver thinks
> > > > it's loaded, but in fact it isn't. Maybe we should reupload the
> > > > microcode on resume.
> > > 
> > > We already do this, of course.
> > 
> > Do we do it in .resume(), perchance?
> 
> hm?
> We always do it when turning the device on.

I'm asking because if we do it in .resume() and the microcode is not present
in memory at that point, we're not going to get it from the disk.


From mb at bu3sch.de  Sun Jun  1 16:05:47 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 1 Jun 2008 16:05:47 +0200
Subject: suspend vs. b43
In-Reply-To: <200806011518.40282.rjw@sisk.pl>
References: <1212150713.4117.2.camel@johannes.berg>
	<200806011411.25922.mb@bu3sch.de> <200806011518.40282.rjw@sisk.pl>
Message-ID: <200806011605.47532.mb@bu3sch.de>

On Sunday 01 June 2008 15:18:39 Rafael J. Wysocki wrote:
> On Sunday, 1 of June 2008, Michael Buesch wrote:
> > On Sunday 01 June 2008 13:47:22 Rafael J. Wysocki wrote:
> > > On Sunday, 1 of June 2008, Michael Buesch wrote:
> > > > On Sunday 01 June 2008 02:40:33 Stefanik G?bor wrote:
> > > > > Looks like we are losing track of the microcode. The driver thinks
> > > > > it's loaded, but in fact it isn't. Maybe we should reupload the
> > > > > microcode on resume.
> > > > 
> > > > We already do this, of course.
> > > 
> > > Do we do it in .resume(), perchance?
> > 
> > hm?
> > We always do it when turning the device on.
> 
> I'm asking because if we do it in .resume() and the microcode is not present
> in memory at that point, we're not going to get it from the disk.

The microcode is cached in memory.

-- 
Greetings Michael.


From proski at gnu.org  Mon Jun  2 06:08:41 2008
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 02 Jun 2008 00:08:41 -0400
Subject: Wireless-testing's b43 panics in b43_generate_txhdr on packet
	transmit
In-Reply-To: <1212265322.7672.2.camel@johannes.berg>
References: <69e28c910805310723j2b721030x2609cc9e866abafa@mail.gmail.com>
	<200805311841.46740.mb@bu3sch.de> <1212252636.2766.10.camel@rd>
	<200805311954.46639.mb@bu3sch.de>
	<1212265322.7672.2.camel@johannes.berg>
Message-ID: <20080602000841.qjrd66s3esgscko0-cebfxv@fcnzpbc.arg@webmail.spamcop.net>

Quoting Johannes Berg <johannes at sipsolutions.net>:

>> > info->control.hw_key is NULL.
>>
>> Is a NULL pointer supposed to tell "do not encrypt", or is this a   
>> mac80211 bug?
>
> It's probably a bug.

I've bisected it to commit 57ccbb1cbe3f8e10a500ff8b9fb26dc1a542fe99:
mac80211: move TX info into skb->cb

It turns out that commit introduces two sparse warnings in net/mac80211/wpa.c:

net/mac80211/wpa.c:202:10: warning: incorrect type in return  
expression (different base types)
net/mac80211/wpa.c:202:10:    expected int
net/mac80211/wpa.c:202:10:    got restricted ieee80211_tx_result  
[usertype] <noident>
net/mac80211/wpa.c:448:10: warning: incorrect type in return  
expression (different base types)
net/mac80211/wpa.c:448:10:    expected int
net/mac80211/wpa.c:448:10:    got restricted ieee80211_tx_result  
[usertype] <noident>

That's returning TX_CONTINUE from tkip_encrypt_skb() and  
ccmp_encrypt_skb(), where an integer should be returned.  Both times  
it happens after info->control.hw_key is set.  The callers of those  
functions check for negative numbers only, but TX_CONTINUE is 0, and  
TX_DROP is 1.  Something must be wrong there.

wep_encrypt_skb() in wep.c would not return TX_CONTINUE.  But most  
importantly, there is a suspicious change in wep_encrypt_skb() - the  
key is set in the other branch of the condition.

I'll try to restore the original logic in wep.c.  I'll post a patch if  
it works.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Mon Jun  2 06:33:04 2008
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 02 Jun 2008 00:33:04 -0400
Subject: Wireless-testing's b43 panics in b43_generate_txhdr on packet
	transmit
In-Reply-To: <20080602000841.qjrd66s3esgscko0-cebfxv@fcnzpbc.arg@webmail.spamcop.net>
References: <69e28c910805310723j2b721030x2609cc9e866abafa@mail.gmail.com>
	<200805311841.46740.mb@bu3sch.de> <1212252636.2766.10.camel@rd>
	<200805311954.46639.mb@bu3sch.de>
	<1212265322.7672.2.camel@johannes.berg>
	<20080602000841.qjrd66s3esgscko0-cebfxv@fcnzpbc.arg@webmail.spamcop.net>
Message-ID: <1212381184.2894.3.camel@rd>

On Mon, 2008-06-02 at 00:08 -0400, Pavel Roskin wrote:

> wep_encrypt_skb() in wep.c would not return TX_CONTINUE.  But most  
> importantly, there is a suspicious change in wep_encrypt_skb() - the  
> key is set in the other branch of the condition.
> 
> I'll try to restore the original logic in wep.c.  I'll post a patch if  
> it works.

That was it!  Here's the patch (I'll submit it to John tomorrow if nobody objects).


mac80211: fix hardware WEP support

Setting hardware WEP key was accidentally moved to a wrong place in
57ccbb1cbe3f8e10a500ff8b9fb26dc1a542fe99.  Move it back.  This fixes
kernel panic in b43 if WEP is used.

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 net/mac80211/wep.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/mac80211/wep.c b/net/mac80211/wep.c
index c9fd129..e7b6344 100644
--- a/net/mac80211/wep.c
+++ b/net/mac80211/wep.c
@@ -335,10 +335,10 @@ static int wep_encrypt_skb(struct ieee80211_tx_data *tx, struct sk_buff *skb)
 	info->control.icv_len = WEP_ICV_LEN;
 
 	if (!(tx->key->flags & KEY_FLAG_UPLOADED_TO_HARDWARE)) {
-		info->control.hw_key = &tx->key->conf;
 		if (ieee80211_wep_encrypt(tx->local, skb, tx->key))
 			return -1;
 	} else {
+		info->control.hw_key = &tx->key->conf;
 		if (tx->key->conf.flags & IEEE80211_KEY_FLAG_GENERATE_IV) {
 			if (!ieee80211_wep_add_iv(tx->local, skb, tx->key))
 				return -1;


-- 
Regards,
Pavel Roskin


From proski at gnu.org  Mon Jun  2 13:54:50 2008
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 02 Jun 2008 07:54:50 -0400
Subject: [PATCH] mac80211: fix panic when using hardware WEP
Message-ID: <20080602115437.12734.42209.stgit@dv.roinet.com>

57ccbb1cbe3f8e10a500ff8b9fb26dc1a542fe99 misplaced code for setting
hardware WEP keys.  Move it back.  This fixes kernel panic in b43 if WEP
is used and hardware encryption is enabled.

Signed-off-by: Pavel Roskin <proski at gnu.org>
---

 net/mac80211/wep.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/mac80211/wep.c b/net/mac80211/wep.c
index c9fd129..e7b6344 100644
--- a/net/mac80211/wep.c
+++ b/net/mac80211/wep.c
@@ -335,10 +335,10 @@ static int wep_encrypt_skb(struct ieee80211_tx_data *tx, struct sk_buff *skb)
 	info->control.icv_len = WEP_ICV_LEN;
 
 	if (!(tx->key->flags & KEY_FLAG_UPLOADED_TO_HARDWARE)) {
-		info->control.hw_key = &tx->key->conf;
 		if (ieee80211_wep_encrypt(tx->local, skb, tx->key))
 			return -1;
 	} else {
+		info->control.hw_key = &tx->key->conf;
 		if (tx->key->conf.flags & IEEE80211_KEY_FLAG_GENERATE_IV) {
 			if (!ieee80211_wep_add_iv(tx->local, skb, tx->key))
 				return -1;


From johannes at sipsolutions.net  Mon Jun  2 09:47:07 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 02 Jun 2008 09:47:07 +0200
Subject: Wireless-testing's b43 panics in b43_generate_txhdr on packet
	transmit
In-Reply-To: <200805311954.46639.mb@bu3sch.de>
References: <69e28c910805310723j2b721030x2609cc9e866abafa@mail.gmail.com>
	<200805311841.46740.mb@bu3sch.de> <1212252636.2766.10.camel@rd>
	<200805311954.46639.mb@bu3sch.de>
Message-ID: <1212392827.4148.11.camel@johannes.berg>

On Sat, 2008-05-31 at 19:54 +0200, Michael Buesch wrote:
> On Saturday 31 May 2008 18:50:36 Pavel Roskin wrote:
> > On Sat, 2008-05-31 at 18:41 +0200, Michael Buesch wrote:
> > > On Saturday 31 May 2008 18:34:29 Stefanik G?bor wrote:
> > > > "BUG: unable to handle kernel NULL pointer dereference at 00000004
> > > > IP: [<f8dd3a99>] :b43:b43_generate_txhdr+0x6a9/0x790
> > > 
> > > So can you put a few printks into the function to see where it dereferences
> > > a NULL pointer? (or use gdb to lookup the offset).
> > 
> > u8 key_idx = info->control.hw_key->hw_key_idx;
> > 
> > info->control.hw_key is NULL.
> 
> Is a NULL pointer supposed to tell "do not encrypt", or is this a mac80211 bug?

It looks like a mac80211 bug, but I can't see how we get there.

If you look at mac80211's tx.c, you'll see, in
ieee80211_tx_h_select_key:

        if (!tx->key || !(tx->key->flags & KEY_FLAG_UPLOADED_TO_HARDWARE))
                info->flags |= IEEE80211_TX_CTL_DO_NOT_ENCRYPT;

Hence, I haven't got a clue how you can possibly get into the situation
we have here, even with packet injection. Unless it's a different
version of mac80211 or something.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080602/e8d4506c/attachment.pgp>

From johannes at sipsolutions.net  Mon Jun  2 14:19:43 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Mon, 02 Jun 2008 14:19:43 +0200
Subject: [PATCH] mac80211: fix panic when using hardware WEP
In-Reply-To: <20080602115437.12734.42209.stgit@dv.roinet.com>
References: <20080602115437.12734.42209.stgit@dv.roinet.com>
Message-ID: <1212409183.4148.14.camel@johannes.berg>

On Mon, 2008-06-02 at 07:54 -0400, Pavel Roskin wrote:
> 57ccbb1cbe3f8e10a500ff8b9fb26dc1a542fe99 misplaced code for setting
> hardware WEP keys.  Move it back.  This fixes kernel panic in b43 if WEP
> is used and hardware encryption is enabled.

Oh wow, yes, sorry about that, and thanks for tracking it down!

> Signed-off-by: Pavel Roskin <proski at gnu.org>

Acked-by: Johannes Berg <johannes at sipsolutions.net>

> ---
> 
>  net/mac80211/wep.c |    2 +-
>  1 files changed, 1 insertions(+), 1 deletions(-)
> 
> diff --git a/net/mac80211/wep.c b/net/mac80211/wep.c
> index c9fd129..e7b6344 100644
> --- a/net/mac80211/wep.c
> +++ b/net/mac80211/wep.c
> @@ -335,10 +335,10 @@ static int wep_encrypt_skb(struct ieee80211_tx_data *tx, struct sk_buff *skb)
>  	info->control.icv_len = WEP_ICV_LEN;
>  
>  	if (!(tx->key->flags & KEY_FLAG_UPLOADED_TO_HARDWARE)) {
> -		info->control.hw_key = &tx->key->conf;
>  		if (ieee80211_wep_encrypt(tx->local, skb, tx->key))
>  			return -1;
>  	} else {
> +		info->control.hw_key = &tx->key->conf;
>  		if (tx->key->conf.flags & IEEE80211_KEY_FLAG_GENERATE_IV) {
>  			if (!ieee80211_wep_add_iv(tx->local, skb, tx->key))
>  				return -1;
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 828 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080602/3b7a7c3d/attachment.pgp>

From mb at bu3sch.de  Wed Jun  4 17:16:53 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 4 Jun 2008 17:16:53 +0200
Subject: b43 opensource firmware for monitor mode
Message-ID: <200806041716.53771.mb@bu3sch.de>

Release early, release often.
Here's the first testing release of the b43 opensource firmware.
http://bu3sch.de/misc/b43-openfw-20080604.tar.bz2

Currently only the receive path is partially implemented. So that
means we can only run it in monitor mode for now. This firmware is
able to receive packets and push them without special handling (like
decrypting) to the driver.
There are lots of bugs, of course. Sometimes the PLCP header is corrupted.
That will result in a kernel driver warning in xmit.c.

This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.
You can see the core revision by turning on SSB debugging.
It will print something like:
ssb: Core X found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
As you can see there's the revision number in hex.

If you want to test this, please get the tarball and extract it.
The tarball contains the full sourcecode and a set of prebuilt binaries.
(If you want to rebuild the stuff, you need to get the assembler toolchain
from http://git.bu3sch.de/git/b43-tools.git).

Simply get the *.fw files from bin/rev5/ in the tarball and copy them
into /lib/firmware/b43-open.
Then load b43 from latest wireless-testing.git with the module
parameter fwpostfix=-open

Setup monitor mode and see packets coming in. Or not...

-- 
Greetings Michael.


From identd_ at hotmail.com  Wed Jun  4 21:02:02 2008
From: identd_ at hotmail.com (David Ellingsworth)
Date: Wed, 4 Jun 2008 15:02:02 -0400
Subject: b43legacy: Problems with dhclient
Message-ID: <BAY101-W107F934FCAABD2AC5A942786B50@phx.gbl>


For a while now, I've been experiencing connection stability issues which from
what I can tell seem to stem from the use of dhclient.

After upgrading to the latest wireless-testing kernel, I noticed the output from
wpa_supplicant and iwconfig regarding association status differed as well as an
inability to use dhclient to receive an ip address. In an attempt to resolve
the issue, I first eliminated the use of dhclient by issuing a static ip address
for the interface after it was associated with the AP. Doing so resulted in a very
stable and reliable connection. This led me to believe the issues were a result
of using dhclient. To verify, I tried dhcpcd in place of dhclient, which once again
resulted in a stable and reliable connection. Thus confirming my suspicion.

While examining the behavior of dhclient and dhcpcd, I maintained a copy of the
resulting dmesg output that was produced for comparison. The results of which, as
shown below, seem to indicate dhclient is causing the interface to be removed and
then re-added. While I can only speculate at why this happens, I think it may be
related to the fact that dhclient tries to broadcast on all interfaces related
to the one that was specified. Thus the command: "dhclient wlan0", causes dhclient
to broadcast on wmaster0, moni0(when configured), and wlan0.

Despite the information in demsg, when dhclient is used wpa_supplicant seems to
maintain information that it is associated with the AP while iwconfig indicates
otherwise. In any case, the interface enters a state that seems to confuse
wpa_supplicant. Thus wpa_supplicant needs to be restarted or the AP needs to be
explicitly specified using iwconfig wlan0 ap .

While dhclient may clearly be at fault here, I have observed similar behavior on 
2.6.25-wl as well as prior kernels. With 2.6.25-wl the output from both "wpa_cli status"
and "iwconfig wlan0" indicate there is an association with the AP, when it is apparent
there is not as a result of the removal and addition of the interface by dhclient. In
which case, issuing a static ip address to the interface after attempting to use dhclient
results in transmission timeouts while trying to ping another node on the network.
Thus indicating that the interface is indeed not associated as otherwise indicated.

Regards,

David Ellingsworth

Output from "uname -r": 2.6.26-rc4-wl

Output from "lspci -vvn":
==================================================================================
00:09.0 0280: 14e4:4320 (rev 02)
    Subsystem: 0e11:00e7
    Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping-
             SERR- FastB2B- DisINTx-
    Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast>TAbort- SERR- 
_________________________________________________________________
Now you can invite friends from Facebook and other groups to join you on Windows Live? Messenger. Add now.
https://www.invite2messenger.net/im/?source=TXT_EML_WLH_AddNow_Now
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080604/15b69b6e/attachment.html>

From identd_ at hotmail.com  Wed Jun  4 21:49:00 2008
From: identd_ at hotmail.com (David Ellingsworth)
Date: Wed, 4 Jun 2008 15:49:00 -0400
Subject: b43legacy: Problems with dhclient
Message-ID: <BAY101-W699332C953A7036EDE4B386B50@phx.gbl>


Resend. Message attached.

Regards,

David Ellingsworth

_________________________________________________________________
Enjoy 5 GB of free, password-protected online storage.
http://www.windowslive.com/skydrive/overview.html?ocid=TXT_TAGLM_WL_Refresh_skydrive_062008
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43legacy-dhclient.txt
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080604/c16799f2/attachment.txt>

From proski at gnu.org  Wed Jun  4 23:25:49 2008
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 04 Jun 2008 17:25:49 -0400
Subject: b43legacy: Problems with dhclient
In-Reply-To: <BAY101-W699332C953A7036EDE4B386B50@phx.gbl>
References: <BAY101-W699332C953A7036EDE4B386B50@phx.gbl>
Message-ID: <1212614749.20351.11.camel@dv>

On Wed, 2008-06-04 at 15:49 -0400, David Ellingsworth wrote:

> For a while now, I've been experiencing connection stability issues which from
> what I can tell seem to stem from the use of dhclient.
> 
> After upgrading to the latest wireless-testing kernel, I noticed the output from
> wpa_supplicant and iwconfig regarding association status differed as well as an
> inability to use dhclient to receive an ip address. In an attempt to resolve the
> issue, I first eliminated the use of dhclient by issuing a static ip address for
> the interface after it was associated with the AP. Doing so resulted in a very
> stable and reliable connection. This led me to believe the issues were a result
> of using dhclient. To verify, I tried dhcpcd in place of dhclient, which once
> again resulted in a stable and reliable connection. Thus confirming my suspicion.

The problem with dhclient is that it brings the interface down
temporarily, thus breaking the WPA connection.  You can see hostap
archives for a recent discussion about it:
http://lists.shmoo.com/pipermail/hostap/

It's a complicated problem, involving a lot of software, including
distribution specific scripts.  It's entirely possible that simply
different timing can break the behavior.  Jouni Malinen mentioned that
the driver is supposed to tell wpa_supplicant to renegotiate the
connection after the interface goes down and up.  It's possible that the
kernel is not doing it right, but the code is not in b43legacy, it's in
mac80211.

My solution is either to use static addresses with WPA or use a dhclient
script that brings the interface up and tell wpa_supplicant to
renegotiate the connection.

In any case, I'm quite sure that discussing the problem here is not
going to be useful because it's not specific to the particular driver.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Thu Jun  5 04:46:28 2008
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 04 Jun 2008 22:46:28 -0400
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <200806041716.53771.mb@bu3sch.de>
References: <200806041716.53771.mb@bu3sch.de>
Message-ID: <1212633988.26365.42.camel@dv>

On Wed, 2008-06-04 at 17:16 +0200, Michael Buesch wrote:
> Release early, release often.
> Here's the first testing release of the b43 opensource firmware.
> http://bu3sch.de/misc/b43-openfw-20080604.tar.bz2
> 
> Currently only the receive path is partially implemented. So that
> means we can only run it in monitor mode for now. This firmware is
> able to receive packets and push them without special handling (like
> decrypting) to the driver.
> There are lots of bugs, of course. Sometimes the PLCP header is corrupted.
> That will result in a kernel driver warning in xmit.c.
> 
> This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.

That's great news!  Having distributable firmware would simplify
installation, placing b43 to the same league as Intel devices.  But
having free firmware would be unique to Broadcom card and extremely
attractive for research in wireless communications and development of
novel devices using non-standard protocol extensions.

As a short term goal, maybe bcm4328 could be dumbed down to work with
b43?

I've tried it with bcm4318 first, and it hung hard on module load.  Even
Alt-SysRq would not work.  It turns out it was revision 9 missing in
your list.

Then I tries a bcm4306 device with rev 5 core.  The module loaded.  I
brought it up in managed mode first.  Scanning didn't work.  I brought
the device down and set monitor mode.  But the system hung when I tried
to bring the interface back up.

Anyway, I'm glad to see progress in that direction.

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Thu Jun  5 15:35:13 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Jun 2008 15:35:13 +0200
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <1212633988.26365.42.camel@dv>
References: <200806041716.53771.mb@bu3sch.de> <1212633988.26365.42.camel@dv>
Message-ID: <200806051535.14340.mb@bu3sch.de>

On Thursday 05 June 2008 04:46:28 Pavel Roskin wrote:
> On Wed, 2008-06-04 at 17:16 +0200, Michael Buesch wrote:
> > Release early, release often.
> > Here's the first testing release of the b43 opensource firmware.
> > http://bu3sch.de/misc/b43-openfw-20080604.tar.bz2
> > 
> > Currently only the receive path is partially implemented. So that
> > means we can only run it in monitor mode for now. This firmware is
> > able to receive packets and push them without special handling (like
> > decrypting) to the driver.
> > There are lots of bugs, of course. Sometimes the PLCP header is corrupted.
> > That will result in a kernel driver warning in xmit.c.
> > 
> > This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.
> 
> That's great news!  Having distributable firmware would simplify
> installation, placing b43 to the same league as Intel devices.  But
> having free firmware would be unique to Broadcom card and extremely
> attractive for research in wireless communications and development of
> novel devices using non-standard protocol extensions.
> 
> As a short term goal, maybe bcm4328 could be dumbed down to work with
> b43?
> 
> I've tried it with bcm4318 first, and it hung hard on module load.  Even
> Alt-SysRq would not work.  It turns out it was revision 9 missing in
> your list.
> 
> Then I tries a bcm4306 device with rev 5 core.  The module loaded.  I
> brought it up in managed mode first.  Scanning didn't work.  I brought
> the device down and set monitor mode.  But the system hung when I tried
> to bring the interface back up.

There shouldn't be a reason for a freeze. It might crash, yes, but it always
prints out useful messages first for me.

-- 
Greetings Michael.


From felipe.maya at vexcorp.com  Thu Jun  5 16:37:18 2008
From: felipe.maya at vexcorp.com (Felipe Maya)
Date: Thu, 5 Jun 2008 11:37:18 -0300 (BRST)
Subject: b43 opensource firmware for monitor mode
Message-ID: <22744.201.36.143.231.1212676638.:mail@corporativo.mandic.com.br>


root at OpenWrt:/# insmod b43.ko fwpostfix=-open
Segmentation fault
root at OpenWrt:/# dmesg
Unhandled kernel unaligned access[#1]:
Cpu 0
$ 0   : 00000000 1000b800 08124243 80203008
$ 4   : 80262570 80202f88 00000021 801ffe3c
$ 8   : 80280000 80280000 80279fa0 df809371
$12   : f3a5dbbc 00000000 00200200 32ee058e
$16   : c018b008 80262570 c018b024 802bc6a4
$20   : c0161ef0 c0141000 c018c66c 80202f88
$24   : 00000018 000186a0
$28   : 81e5a000 81e5bd40 00000173 80152044
Hi    : ffffffc5
Lo    : 12af9c00
epc   : c0174d64     Not tainted
ra    : 80152044 Status: 1000b803    KERNEL EXL IE
Cause : 00000010
BadVA : 08124257
PrId  : 00029029
Modules linked in: b43 option usbserial evdev ehci_hcd uhci_hcd ohci_hcd
input_core nf_nat_tftp nf_conntrack_tftp nf_nat_irc nf_conntrack_irc
nf_nat_ftp nf_conntrack_ftp ipt_REDIRECT ipt_NETMAP ppp_async ppp_generic
slhc crc_ccitt rt73usb rt2x00usb rt2x00lib usbcore mac80211 cfg80211
michael_mic arc4 aes deflate ecb cbc blkcipher crypto_hash cryptomgr
crypto_algapi switch_robo switch_core diag
Process insmod (pid: 702, threadinfo=81e5a000, task=8121c9d8)
Stack : 00000001 00000000 00000001 00000001 386d43e2 375027ff 81e3fafc 81e3fb64
        81e5bd80 802bb448 800c4090 800c4080 802bc668 80203008 00000000 8039e500
        c018b008 80262570 c018b024 802bc6a4 c0161ef0 c0141000 c018c66c c00f7a60
        00000173 80152044 80262570 81d4a05e 81df4a10 81d4a000 802bc6c0 802bc600
        8013300c 80132fb0 802bc648 801f408c 81061600 000006fa 802bc6c0 802bc600
        ...
Call
Trace:[<800c4090>][<800c4080>][<c00f7a60>][<80152044>][<8013300c>][<80132fb0>][<801f408c>][<801334a4>][<80131c6c>][<8010016c>][<8013332c>][<80131dd8>][<c00f7a60>][<801321f8>][<80054fa8>][<8006b2c8>][<c0130028>][<8004b1b0>][<8000c7b0>]

Code: afa30034  8fa40068  8c82000c <8c420014> 104001b2  2403ffed  94430026 
24024321  10620005

root at OpenWrt:/# ls -l /lib/firmware/b43-open/
-rw-r--r--    1 root     root           28 Jun  4  2008 b0g0bsinitvals5.fw
-rw-r--r--    1 root     root          224 Jun  4  2008 b0g0initvals5.fw
-rw-r--r--    1 root     root         2856 Jun  4  2008 ucode5.fw

root at OpenWrt:/tmp# cat /proc/modules
b43 125024 1 - Loading 0xc016e000
option 5440 0 - Live 0xc012d000
usbserial 24160 1 option, Live 0xc013a000
evdev 6880 0 - Live 0xc00b2000
ehci_hcd 30384 0 - Live 0xc00c7000
uhci_hcd 19920 0 - Live 0xc0127000
ohci_hcd 16720 0 - Live 0xc00d7000
input_core 20208 1 evdev, Live 0xc00d1000
nf_nat_tftp 480 0 - Live 0xc00c5000
nf_conntrack_tftp 2480 1 nf_nat_tftp, Live 0xc00c3000
nf_nat_irc 960 0 - Live 0xc00c1000
nf_conntrack_irc 2832 1 nf_nat_irc, Live 0xc00b5000
nf_nat_ftp 1472 0 - Live 0xc0086000
nf_conntrack_ftp 5152 1 nf_nat_ftp, Live 0xc00be000
ipt_REDIRECT 736 0 - Live 0xc00b0000
ipt_NETMAP 736 0 - Live 0xc00ae000
ppp_async 9856 0 - Live 0xc00a7000
ppp_generic 20192 1 ppp_async, Live 0xc00b8000
slhc 5376 1 ppp_generic, Live 0xc00ab000
crc_ccitt 1024 1 ppp_async, Live 0xc00a5000
rt73usb 20832 0 - Live 0xc0090000
rt2x00usb 6048 1 rt73usb, Live 0xc0079000
rt2x00lib 15328 2 rt73usb,rt2x00usb, Live 0xc0098000
usbcore 106576 8
option,usbserial,ehci_hcd,uhci_hcd,ohci_hcd,rt73usb,rt2x00usb, Live
0xc010b000
mac80211 160800 3 b43,rt2x00usb,rt2x00lib, Live 0xc00e2000
cfg80211 27504 2 rt2x00lib,mac80211, Live 0xc009d000
michael_mic 1600 0 - Live 0xc0084000
arc4 864 2 - Live 0xc0082000
aes 28240 0 - Live 0xc0088000
deflate 1600 0 - Live 0xc0080000
ecb 1440 2 - Live 0xc007e000
cbc 2496 0 - Live 0xc007c000
blkcipher 3824 2 ecb,cbc, Live 0xc0075000
crypto_hash 1024 0 - Live 0xc0077000
cryptomgr 1472 0 - Live 0xc006a000
crypto_algapi 7040 7 michael_mic,arc4,aes,deflate,ecb,cbc,cryptomgr, Live
0xc0060000
switch_robo 4224 0 - Live 0xc0067000
switch_core 5088 1 switch_robo, Live 0xc0064000
diag 7184 0 - Live 0xc006c000


Note that the RT73 is installed using compat-wireless-2.6, seems work well.


---- Mensagem Original ----
From: "Michael Buesch" <mb at bu3sch.de>
To: "Pavel Roskin" <proski at gnu.org>
Sent: Qui, Junho 5, 2008 10:35 am
Subject: Re: b43 opensource firmware for monitor mode

On Thursday 05 June 2008 04:46:28 Pavel Roskin wrote:
> On Wed, 2008-06-04 at 17:16 +0200, Michael Buesch wrote:
> > Release early, release often.
> > Here's the first testing release of the b43 opensource firmware.
> > http://bu3sch.de/misc/b43-openfw-20080604.tar.bz2
> >
> > Currently only the receive path is partially implemented. So that
> > means we can only run it in monitor mode for now. This firmware is
> > able to receive packets and push them without special handling (like
> > decrypting) to the driver.
> > There are lots of bugs, of course. Sometimes the PLCP header is
corrupted.
> > That will result in a kernel driver warning in xmit.c.
> >
> > This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or
10.
>
> That's great news!  Having distributable firmware would simplify
> installation, placing b43 to the same league as Intel devices.  But
> having free firmware would be unique to Broadcom card and extremely
> attractive for research in wireless communications and development of
> novel devices using non-standard protocol extensions.
>
> As a short term goal, maybe bcm4328 could be dumbed down to work with
> b43?
>
> I've tried it with bcm4318 first, and it hung hard on module load.  Even
> Alt-SysRq would not work.  It turns out it was revision 9 missing in
> your list.
>
> Then I tries a bcm4306 device with rev 5 core.  The module loaded.  I
> brought it up in managed mode first.  Scanning didn't work.  I brought
> the device down and set monitor mode.  But the system hung when I tried
> to bring the interface back up.

There shouldn't be a reason for a freeze. It might crash, yes, but it always
prints out useful messages first for me.

--
Greetings Michael.
_______________________________________________
Bcm43xx-dev mailing list
Bcm43xx-dev at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/bcm43xx-dev






From mb at bu3sch.de  Thu Jun  5 16:43:58 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 5 Jun 2008 16:43:58 +0200
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <22744.201.36.143.231.1212676638.:mail@corporativo.mandic.com.br>
References: <22744.201.36.143.231.1212676638.:mail@corporativo.mandic.com.br>
Message-ID: <200806051643.58818.mb@bu3sch.de>

On Thursday 05 June 2008 16:37:18 Felipe Maya wrote:
> 
> root at OpenWrt:/# insmod b43.ko fwpostfix=-open
> Segmentation fault
> root at OpenWrt:/# dmesg
> Unhandled kernel unaligned access[#1]:

Ah well. The alignment is not completely implemented, yet ;)
Working on that...

-- 
Greetings Michael.


From dale at daleenterprise.com  Fri Jun  6 05:28:50 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Thu, 5 Jun 2008 23:28:50 -0400
Subject: vendor/product ID's
Message-ID: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>

I'm new to the list and new to firmware modification so hi everyone.

I have a broadcom PCI card and I need to modify the vendor and  
product ID's, in case it matters it's a LinkSYS WMP300N.

I've looked around for tools and came across something that looked  
promising but it gave a URL of "git clone http://git.bu3sch.de/git/ 
b43-tools.git" and I have no clue what git is or how to use it and  
cursory searches imply some kind of linux tool.

I have a semi linux environment available that allows me to  
"configure/make" software so gnu related software can be built but  
rpm and git and the likes don't apply to the OS so suggesting them  
wouldn't be helpful since I can't use them.

Since my everday OS isn't widely supported, I was hoping there was a  
windows app that would read the sprom allow me to change the ID's and  
write it back out to the card but I couldn't find anything (my search  
skills suck).

I have no problems using a CLI utility and navigation is not an issue.

Hopefully someone can provide a link for a windows utility that fits  
my needs or a GNU source package that can be built on the majority of  
*nix based OSes that doesn't have many obscure external dependancies  
(I have been know to compile things that don't normally compile on my  
OS).

So, to get the laughing over with I'll mention my OS, Darwin, yes you  
heard it correctly, 5 different versions of it, Darwin7, Darwin8,  
Darwin9, Mac OS X 10.4.x and Mac OS X 10.5.x, Mac OS X is Darwin  
based so this explains why rpm's and git won't work for me.

-- Dale


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080605/228e4b84/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080605/228e4b84/attachment.pgp>

From gavron at wetwork.net  Fri Jun  6 06:12:22 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Thu, 05 Jun 2008 21:12:22 -0700
Subject: vendor/product ID's
In-Reply-To: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
Message-ID: <4848B926.2090607@wetwork.net>

Dale Walsh wrote:
> I'm new to the list and new to firmware modification so hi everyone.
>
> I have a broadcom PCI card and *I need* to modify the vendor and 
> product ID's, in case it matters it's a LinkSYS WMP300N.
How on Earth did you come up with this idea?
>
> I've looked around for tools and came across something that looked 
> promising but it gave a URL of "git clone 
> http://git.bu3sch.de/git/b43-tools.git" and I have no clue what git is 
> or how to use it and cursory searches imply some kind of linux tool.
Try this URL: http://tinyurl.com/161
>
> I have a *semi *linux environment available that allows me to 
> "configure/make" software so gnu related software can be built but rpm 
> and git and the likes don't apply to the OS so suggesting them 
> wouldn't be helpful since I can't use them.
How on Earth did you come up with this idea?
>
> Since my everday OS isn't widely supported, I was hoping there was a 
> windows app that would read the sprom allow me to change the ID's and 
> write it back out to the card but I couldn't find anything (my search 
> skills suck).
>
> I have no problems using a CLI utility and navigation is not an issue.
>
> Hopefully someone can provide a link for a windows utility that fits 
> my needs or a GNU source package that can be built on the majority of 
> *nix based OSes that doesn't have many obscure external dependancies 
> (I have been know to compile things that don't normally compile on my OS).
>
> So, to get the laughing over with I'll mention my OS, Darwin, yes you 
> heard it correctly, 5 different versions of it, Darwin7, Darwin8, 
> Darwin9, Mac OS X 10.4.x and Mac OS X 10.5.x, Mac OS X is Darwin based 
> so this explains why rpm's and git won't work for me.
>
> -- Dale
>
I'm not laughing.  I'm sad.  I hope the b43 driver developers sleep a 
little while longer... for your sake.

Ehud
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080605/6717ba28/attachment.html>

From Larry.Finger at lwfinger.net  Fri Jun  6 06:26:51 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 05 Jun 2008 23:26:51 -0500
Subject: vendor/product ID's
In-Reply-To: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
Message-ID: <4848BC8B.8020301@lwfinger.net>

Dale Walsh wrote:
> I'm new to the list and new to firmware modification so hi everyone.
> 
> I have a broadcom PCI card and I need to modify the vendor and product 
> ID's, in case it matters it's a LinkSYS WMP300N.

Does Apple white- (or black-) list PCI devices the same as HP does?

> I've looked around for tools and came across something that looked 
> promising but it gave a URL of "git clone 
> http://git.bu3sch.de/git/b43-tools.git" and I have no clue what git is 
> or how to use it and cursory searches imply some kind of linux tool.

git is the version-control system developed by Linus Torvalds and used to 
handle the Linux source and other projects within Linux. It could probably be 
built for Unix (i.e. the base OS for Mac, but it likely wouldn't be worth the 
effort.).

> I have a semi linux environment available that allows me to 
> "configure/make" software so gnu related software can be built but rpm 
> and git and the likes don't apply to the OS so suggesting them wouldn't 
> be helpful since I can't use them.
> 
> Since my everday OS isn't widely supported, I was hoping there was a 
> windows app that would read the sprom allow me to change the ID's and 
> write it back out to the card but I couldn't find anything (my search 
> skills suck).

The sprom updating facility described above utilizes the /sys pseudo-file 
system of Linux and will never work on any other OS. Your only hope would be 
to find a user with Linux on his Apple hardware and build the ssb-sprom 
utility. If you were to place the resulting executable on a flash drive, you 
could boot the appropriate version of a live CD, then execute ssb-sprom from 
the flash device. The codes could also be changed by a Linux user with x86 
(PC) hardware as long as the card will fit in their computer.

> I have no problems using a CLI utility and navigation is not an issue.
> 
> Hopefully someone can provide a link for a windows utility that fits my 
> needs or a GNU source package that can be built on the majority of *nix 
> based OSes that doesn't have many obscure external dependancies (I have 
> been know to compile things that don't normally compile on my OS).

As explained above, this cannot happen.

> So, to get the laughing over with I'll mention my OS, Darwin, yes you 
> heard it correctly, 5 different versions of it, Darwin7, Darwin8, 
> Darwin9, Mac OS X 10.4.x and Mac OS X 10.5.x, Mac OS X is Darwin based 
> so this explains why rpm's and git won't work for me.

Larry


From dale at daleenterprise.com  Fri Jun  6 08:51:53 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 6 Jun 2008 02:51:53 -0400
Subject: vendor/product ID's
In-Reply-To: <4848B926.2090607@wetwork.net>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848B926.2090607@wetwork.net>
Message-ID: <09DC3FD7-BA79-47EB-9A90-9DCB0C2D9BCD@daleenterprise.com>


On Jun 06, 2008, at 00:12 AM, gavron at wetwork.net wrote:

> Dale Walsh wrote:
>>
>> I'm new to the list and new to firmware modification so hi everyone.
>>
>> I have a broadcom PCI card and I need to modify the vendor and  
>> product ID's, in case it matters it's a LinkSYS WMP300N.
> How on Earth did you come up with this idea?

I know that I need to change the ID's on the card for the driver to  
work properly, it's source is not available so I NEED to make these  
changes.

>
>>
>> I've looked around for tools and came across something that looked  
>> promising but it gave a URL of "git clone http://git.bu3sch.de/git/ 
>> b43-tools.git" and I have no clue what git is or how to use it and  
>> cursory searches imply some kind of linux tool.
> Try this URL: http://tinyurl.com/161

Pointing me to google didn't help, I've been that route with little  
success, like I said, my search skills suck and after 2 days of  
searching this is the closets I've come to anything remotely related  
to what I need.

>
>>
>> I have a semi linux environment available that allows me to  
>> "configure/make" software so gnu related software can be built but  
>> rpm and git and the likes don't apply to the OS so suggesting them  
>> wouldn't be helpful since I can't use them.
> How on Earth did you come up with this idea?

Knowledge of the environment is how I concluded this.

>
>>
>> Since my everday OS isn't widely supported, I was hoping there was  
>> a windows app that would read the sprom allow me to change the  
>> ID's and write it back out to the card but I couldn't find  
>> anything (my search skills suck).
>>
>> I have no problems using a CLI utility and navigation is not an  
>> issue.
>>
>> Hopefully someone can provide a link for a windows utility that  
>> fits my needs or a GNU source package that can be built on the  
>> majority of *nix based OSes that doesn't have many obscure  
>> external dependancies (I have been know to compile things that  
>> don't normally compile on my OS).
>>
>> So, to get the laughing over with I'll mention my OS, Darwin, yes  
>> you heard it correctly, 5 different versions of it, Darwin7,  
>> Darwin8, Darwin9, Mac OS X 10.4.x and Mac OS X 10.5.x, Mac OS X is  
>> Darwin based so this explains why rpm's and git won't work for me.
>>
>> -- Dale
>>
> I'm not laughing.  I'm sad.  I hope the b43 driver developers sleep  
> a little while longer... for your sake.
>
> Ehud

If they're intelligent they wont penalize me for my preference of OS,  
they may poke a little fun but I highly doubt it will turn into  
anything vicious.

Well, based on a windows utility I borrowed some routines and wrote a  
Mac utility to extract the info from the PCI card to better examine  
and clarify what I need to change.

This is the returned data:

vendorid: 0x14e4
deviceid: 0x4329
radiorev: 0x42055000
chipnum: 0x4321
chiprev: 0x1
corerev: 0xb
boardid: 0x60
boardvendor: 0x1737
boardrev: 0x48
driverrev: 0x4aa2e05


The three values I wish to change are deviceid, boardid and  
boardvendor although I believe that I could get away with just  
boardid and boardvendor (guessing).



While I'm waiting for some assistance I managed to find and build  
some of the bcm43xx utilities (hoping they are the required versions)  
I hope will help me work this out, I built them in such a manner that  
the utilities can be used on any Mac regardless of architecture (PPC/ 
X86) so now I believe I'm a little closer to my goal.

localhost:~ admin$ bcm43xx-sprom -v
BCM43xx SPROM data modification tool version 001
localhost:~ admin$ bcm43xx-ival -v
BCM43xx InitVal file tool version 001
localhost:~  admin$ bcm43xx-fwcutter -v
bcm43xx-fwcutter version 004
localhost:~  admin$

My limited understanding of the bcm43xx-XXXXX utilities is that they  
require the firmware to be in a binary file and that it does not  
directly operate on the card so I think now I just need to find a way  
to get the sprom to disk.

If the version I built are too old (what I could find) or newer  
versions are recommended if you could supply a tarball of the sources  
I'd appreciate it.

If I understand the sprom utility help, --subp, --subv and --ppid  
will change the three values I'm looking to change and will also  
adjust the checksum based on the changes so it looks like I just need  
to get the firmware out of the card and into a file the utilities can  
modify it.

Since I suspect I'm going to need some kind of linux I have since  
dedicated an Intel D975XBX2KR with a Q6600 and a 500gb HDA so if I  
need to go the route of installing something like Mandriva (I have a  
CD with it) but have never installed or used it so fluency is non- 
existent.

I have no clue what (if any) developer tools will come with the  
Mandriva installation but I'm hoping that I wont have to go that route.

For the fwcutter utility I did adjust the FIRMWARE_INSTALL_DIR to "/ 
wireless/firmware" as a repository.

As a motivational factor, I have two new mini-PCIe Apple (Broadcom)  
802.11n wireless card that have the correct values, they're based on  
the same chipset as the PCI card, tried one in a Sony VAIO laptop  
running (dual booting) windows XP and Mac OS X 10.5.x in a vanilla  
installation (unmodified apple software, just a couple of additional  
extensions/drivers to make it all work) and was able to obtain the  
ID's I need, I would be more than happy to donate the unopened card  
in exchange for helping solve my ID problem.

>
>>
>>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080606/9e041e2d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080606/9e041e2d/attachment.pgp>

From dale at daleenterprise.com  Fri Jun  6 09:06:03 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 6 Jun 2008 03:06:03 -0400
Subject: vendor/product ID's
In-Reply-To: <4848BC8B.8020301@lwfinger.net>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848BC8B.8020301@lwfinger.net>
Message-ID: <03364BF9-818F-43D1-BD1D-1F685CCC15AE@daleenterprise.com>

(SEE PREVIOUS POST)

On Jun 06, 2008, at 00:26 AM, Larry Finger wrote:

> Dale Walsh wrote:
>> I'm new to the list and new to firmware modification so hi everyone.
>> I have a broadcom PCI card and I need to modify the vendor and  
>> product ID's, in case it matters it's a LinkSYS WMP300N.
>
> Does Apple white- (or black-) list PCI devices the same as HP does?

Sorta, if the device does not contain their ID's then enhanced  
features and functionality are disabled or not enabled.

The card is recognized as a third-party Airport Extreme card  
supporting a/b/g/n but the driver due to the lack of apple ID's does  
not enable 11n functionality so the best connection speed is 54g.

Unfortunately the driver source for Mac OS X is not available  
otherwise I'd just change it to recognize my ID's.

>
>> I've looked around for tools and came across something that looked  
>> promising but it gave a URL of "git clone http://git.bu3sch.de/git/ 
>> b43-tools.git" and I have no clue what git is or how to use it and  
>> cursory searches imply some kind of linux tool.
>
> git is the version-control system developed by Linus Torvalds and  
> used to handle the Linux source and other projects within Linux. It  
> could probably be built for Unix (i.e. the base OS for Mac, but it  
> likely wouldn't be worth the effort.).
>
>> I have a semi linux environment available that allows me to  
>> "configure/make" software so gnu related software can be built but  
>> rpm and git and the likes don't apply to the OS so suggesting them  
>> wouldn't be helpful since I can't use them.
>> Since my everday OS isn't widely supported, I was hoping there was  
>> a windows app that would read the sprom allow me to change the  
>> ID's and write it back out to the card but I couldn't find  
>> anything (my search skills suck).
>
> The sprom updating facility described above utilizes the /sys  
> pseudo-file system of Linux and will never work on any other OS.  
> Your only hope would be to find a user with Linux on his Apple  
> hardware and build the ssb-sprom utility. If you were to place the  
> resulting executable on a flash drive, you could boot the  
> appropriate version of a live CD, then execute ssb-sprom from the  
> flash device. The codes could also be changed by a Linux user with  
> x86 (PC) hardware as long as the card will fit in their computer.

If I could find the ssb-sprom source I might be able to generate a  
version that works on a Mac, I do have a little skill.

I also have x86 computer hardware that can run linux I believe,  
unless linux doesn't support 500gb HDA's, ATI X1300 video cards, ICH7  
or Core 2 Quad CPU's?

>
>> I have no problems using a CLI utility and navigation is not an  
>> issue.
>> Hopefully someone can provide a link for a windows utility that  
>> fits my needs or a GNU source package that can be built on the  
>> majority of *nix based OSes that doesn't have many obscure  
>> external dependancies (I have been know to compile things that  
>> don't normally compile on my OS).
>
> As explained above, this cannot happen.

I'll refrain from responding to this comment because I am not  
entirely convinced this is factual at this time.

>
>> So, to get the laughing over with I'll mention my OS, Darwin, yes  
>> you heard it correctly, 5 different versions of it, Darwin7,  
>> Darwin8, Darwin9, Mac OS X 10.4.x and Mac OS X 10.5.x, Mac OS X is  
>> Darwin based so this explains why rpm's and git won't work for me.
>
> Larry
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080606/ffbc93bc/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080606/ffbc93bc/attachment.pgp>

From hs4233 at mail.mn-solutions.de  Fri Jun  6 09:08:37 2008
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Fri, 6 Jun 2008 09:08:37 +0200
Subject: vendor/product ID's
In-Reply-To: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
Message-ID: <200806060908.37446.hs4233@mail.mn-solutions.de>

> Hopefully someone can provide a link for a windows utility
> that fits my needs or a GNU source package that can be built
> on the majority of *nix based OSes that doesn't have many
> obscure external dependancies.

GIT exists for Mac OSX, as a google search for "git macosx" 
quickly reveals.

In the linux world, git isn't seen as an "obscure external 
dependency" :-)


From mb at bu3sch.de  Fri Jun  6 15:23:43 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Jun 2008 15:23:43 +0200
Subject: vendor/product ID's
In-Reply-To: <09DC3FD7-BA79-47EB-9A90-9DCB0C2D9BCD@daleenterprise.com>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848B926.2090607@wetwork.net>
	<09DC3FD7-BA79-47EB-9A90-9DCB0C2D9BCD@daleenterprise.com>
Message-ID: <200806061523.43422.mb@bu3sch.de>

On Friday 06 June 2008 08:51:53 Dale Walsh wrote:
> On Jun 06, 2008, at 00:12 AM, gavron at wetwork.net wrote:
> 
> > Dale Walsh wrote:
> >>
> >> I'm new to the list and new to firmware modification so hi everyone.
> >>
> >> I have a broadcom PCI card and I need to modify the vendor and  
> >> product ID's, in case it matters it's a LinkSYS WMP300N.
> > How on Earth did you come up with this idea?
> 
> I know that I need to change the ID's on the card for the driver to  
> work properly, it's source is not available so I NEED to make these  
> changes.

Excuse me, you need what?
Can you explain?

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Jun  6 15:58:42 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Jun 2008 15:58:42 +0200
Subject: [PATCH stable] b43: Fix controller restart crash
Message-ID: <200806061558.42998.mb@bu3sch.de>

This fixes a kernel crash on rmmod, in the case where the controller
was restarted before doing the rmmod.

Upstream commit is 4735f5022c97f6624ced2ec5056c61c4b437d53b

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: linux-2.6.25.4/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.25.4.orig/drivers/net/wireless/b43/main.c	2008-06-06 15:36:38.000000000 +0200
+++ linux-2.6.25.4/drivers/net/wireless/b43/main.c	2008-06-06 15:36:40.000000000 +0200
@@ -3815,13 +3815,15 @@ static void b43_chip_reset(struct work_s
 		err = b43_wireless_core_start(dev);
 		if (err) {
 			b43_wireless_core_exit(dev);
 			goto out;
 		}
 	}
-      out:
+out:
+	if (err)
+		wl->current_dev = NULL; /* Failed to init the dev. */
 	mutex_unlock(&wl->mutex);
 	if (err)
 		b43err(wl, "Controller restart FAILED\n");
 	else
 		b43info(wl, "Controller restarted\n");
 }
@@ -3964,15 +3966,17 @@ err_powerdown:
 
 static void b43_one_core_detach(struct ssb_device *dev)
 {
 	struct b43_wldev *wldev;
 	struct b43_wl *wl;
 
+	/* Do not cancel ieee80211-workqueue based work here.
+	 * See comment in b43_remove(). */
+
 	wldev = ssb_get_drvdata(dev);
 	wl = wldev->wl;
-	cancel_work_sync(&wldev->restart_work);
 	b43_debugfs_remove_device(wldev);
 	b43_wireless_core_detach(wldev);
 	list_del(&wldev->list);
 	wl->nr_devs--;
 	ssb_set_drvdata(dev, NULL);
 	kfree(wldev);
@@ -4149,12 +4153,16 @@ static int b43_probe(struct ssb_device *
 
 static void b43_remove(struct ssb_device *dev)
 {
 	struct b43_wl *wl = ssb_get_devtypedata(dev);
 	struct b43_wldev *wldev = ssb_get_drvdata(dev);
 
+	/* We must cancel any work here before unregistering from ieee80211,
+	 * as the ieee80211 unreg will destroy the workqueue. */
+	cancel_work_sync(&wldev->restart_work);
+
 	B43_WARN_ON(!wl);
 	if (wl->current_dev == wldev)
 		ieee80211_unregister_hw(wl->hw);
 
 	b43_one_core_detach(dev);
 


From asheesh at asheesh.org  Fri Jun  6 15:34:23 2008
From: asheesh at asheesh.org (Asheesh Laroia)
Date: Fri, 6 Jun 2008 06:34:23 -0700 (PDT)
Subject: vendor/product ID's
In-Reply-To: <4848BC8B.8020301@lwfinger.net>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848BC8B.8020301@lwfinger.net>
Message-ID: <alpine.DEB.1.10.0806060630350.25214@swallowtail>

On Thu, 5 Jun 2008, Larry Finger wrote:

> Dale Walsh wrote:
>> I'm new to the list and new to firmware modification so hi everyone.
>>
>> I have a broadcom PCI card and I need to modify the vendor and product
>> ID's, in case it matters it's a LinkSYS WMP300N.
>
> Does Apple white- (or black-) list PCI devices the same as HP does?
>
>> I've looked around for tools and came across something that looked
>> promising but it gave a URL of "git clone
>> http://git.bu3sch.de/git/b43-tools.git" and I have no clue what git is
>> or how to use it and cursory searches imply some kind of linux tool.
>
> git is the version-control system developed by Linus Torvalds and used to
> handle the Linux source and other projects within Linux. It could probably be
> built for Unix (i.e. the base OS for Mac, but it likely wouldn't be worth the
> effort.).
>
>> I have a semi linux environment available that allows me to
>> "configure/make" software so gnu related software can be built but rpm
>> and git and the likes don't apply to the OS so suggesting them wouldn't
>> be helpful since I can't use them.
>>
>> Since my everday OS isn't widely supported, I was hoping there was a
>> windows app that would read the sprom allow me to change the ID's and
>> write it back out to the card but I couldn't find anything (my search
>> skills suck).
>
> The sprom updating facility described above utilizes the /sys pseudo-file
> system of Linux and will never work on any other OS. Your only hope would be
> to find a user with Linux on his Apple hardware and build the ssb-sprom
> utility. If you were to place the resulting executable on a flash drive, you
> could boot the appropriate version of a live CD, then execute ssb-sprom from
> the flash device. The codes could also be changed by a Linux user with x86
> (PC) hardware as long as the card will fit in their computer.

I presume we're talking about using Darwin on Intel chips, not Darwin on 
those old-school PowerPC chips of yore. (-;

Note that it would be very easy for *you* to become that "user with Linux 
on his Apple hardware" - just download (for example) the Ubuntu 8.04 CD 
image, burn it to a disc, and boot from it (hold down "c", if memory 
serves...).

Then you can run whatever Linux tools you need.  If you need further help, 
try to find me (I use the nickname paulproteus, and I hang out on 
#freeculture and #jhuacm on the "Ubuntu Servers" (FreeNode) IRC network) 
on IRC and I can probably help some more.  But Larry's advice may be 
enough for you.

If the Ubuntu disc can get you online (note that you should probably try 
to connect to your network via a wired network while you fiddle with your 
wireless, then you can launch the bundled IRC client, join the "Ubuntu 
Servers" network, and then type "/join #jhuacm" to find me.

-- Asheesh.

-- 
There are no accidents whatsoever in the universe.
 		-- Baba Ram Dass


From nhorman at tuxdriver.com  Fri Jun  6 18:25:15 2008
From: nhorman at tuxdriver.com (Neil Horman)
Date: Fri, 6 Jun 2008 12:25:15 -0400
Subject: vendor/product ID's
In-Reply-To: <200806061523.43422.mb@bu3sch.de>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848B926.2090607@wetwork.net>
	<09DC3FD7-BA79-47EB-9A90-9DCB0C2D9BCD@daleenterprise.com>
	<200806061523.43422.mb@bu3sch.de>
Message-ID: <20080606162515.GF2349@hmsreliant.think-freely.org>

On Fri, Jun 06, 2008 at 03:23:43PM +0200, Michael Buesch wrote:
> On Friday 06 June 2008 08:51:53 Dale Walsh wrote:
> > On Jun 06, 2008, at 00:12 AM, gavron at wetwork.net wrote:
> > 
> > > Dale Walsh wrote:
> > >>
> > >> I'm new to the list and new to firmware modification so hi everyone.
> > >>
> > >> I have a broadcom PCI card and I need to modify the vendor and  
> > >> product ID's, in case it matters it's a LinkSYS WMP300N.
> > > How on Earth did you come up with this idea?
> > 
> > I know that I need to change the ID's on the card for the driver to  
> > work properly, it's source is not available so I NEED to make these  
> > changes.
> 
> Excuse me, you need what?
> Can you explain?
> 

+1 to Michaels comments.  From your initial post it sounds like you want your
wireless NIC card to be picked up by a driver other than the one currently
driving the hardware (perhaps to enable extra features like .11n as you
subsequently mentioned), and to accomplish that you're trying to modify the pci
device and vendor id on the card to match what the alternate driver detects.

If thats correct, can't you just go int
/System/Library/Extensions/<DriverName>/Contents/Info.plist for the two drivers
in question and add/remove the relevant pci id? That would see far more sane
than trying to actually modify the dev ids on the card itself.

Neil

> -- 
> Greetings Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev

-- 
/****************************************************
 * Neil Horman <nhorman at tuxdriver.com>
 * Software Engineer, Red Hat
 ****************************************************/


From mb at bu3sch.de  Fri Jun  6 19:55:27 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 6 Jun 2008 19:55:27 +0200
Subject: [stable] [PATCH stable] b43: Fix controller restart crash
In-Reply-To: <20080606173223.GR30402@sequoia.sous-sol.org>
References: <200806061558.42998.mb@bu3sch.de>
	<20080606173223.GR30402@sequoia.sous-sol.org>
Message-ID: <200806061955.27951.mb@bu3sch.de>

On Friday 06 June 2008 19:32:23 Chris Wright wrote:
> * Michael Buesch (mb at bu3sch.de) wrote:
> > This fixes a kernel crash on rmmod, in the case where the controller
> > was restarted before doing the rmmod.
> > 
> > Upstream commit is 4735f5022c97f6624ced2ec5056c61c4b437d53b
> 
> This is not in Linus' tree.  Where is this upstream commit?

John Linville's wireless tree. That's upstream from my point of view. :P


-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Fri Jun  6 19:58:29 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 06 Jun 2008 12:58:29 -0500
Subject: vendor/product ID's
In-Reply-To: <03364BF9-818F-43D1-BD1D-1F685CCC15AE@daleenterprise.com>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848BC8B.8020301@lwfinger.net>
	<03364BF9-818F-43D1-BD1D-1F685CCC15AE@daleenterprise.com>
Message-ID: <48497AC5.6040206@lwfinger.net>

Dale Walsh wrote:
> (SEE PREVIOUS POST)
> 
> On Jun 06, 2008, at 00:26 AM, Larry Finger wrote:

>> The sprom updating facility described above utilizes the /sys 
>> pseudo-file system of Linux and will never work on any other OS. Your 
>> only hope would be to find a user with Linux on his Apple hardware and 
>> build the ssb-sprom utility. If you were to place the resulting 
>> executable on a flash drive, you could boot the appropriate version of 
>> a live CD, then execute ssb-sprom from the flash device. The codes 
>> could also be changed by a Linux user with x86 (PC) hardware as long 
>> as the card will fit in their computer.
> 
> If I could find the ssb-sprom source I might be able to generate a 
> version that works on a Mac, I do have a little skill.
> 
> I also have x86 computer hardware that can run linux I believe, unless 
> linux doesn't support 500gb HDA's, ATI X1300 video cards, ICH7 or Core 2 
> Quad CPU's?

You are showing your ignorance!

>>
>>> I have no problems using a CLI utility and navigation is not an issue.
>>> Hopefully someone can provide a link for a windows utility that fits 
>>> my needs or a GNU source package that can be built on the majority of 
>>> *nix based OSes that doesn't have many obscure external dependancies 
>>> (I have been know to compile things that don't normally compile on my 
>>> OS).
>>
>> As explained above, this cannot happen.
> 
> I'll refrain from responding to this comment because I am not entirely 
> convinced this is factual at this time.

The package ssb-sprom can be built on a Mac, both MacIntel and PPC, and it 
would allow you to manipulate an on-disk version of the SPROM contents. To 
look at what is required to get a read or write of the SPROM contents, grab a 
copy of Linux 2.6.24 or later and examine the PCI routines in the directory 
drivers/ssb/. Much of the code is used to handle the SPROM. Please note that 
it IS IN THE KERNEL. No user-land entity that reports the ID's, etc has the 
capability to write the SPROM.

 From a more recent note in this thread, it seems that you can change a 
simple file to include your device. If that is really true, please do it that 
way. Anytime one rewrites the SPROM, there is a finite chance of bricking 
your device. Do it only if necessary!!!

Larry


From dale at daleenterprise.com  Sat Jun  7 07:13:06 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sat, 7 Jun 2008 01:13:06 -0400
Subject: vendor/product ID's
In-Reply-To: <48497AC5.6040206@lwfinger.net>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848BC8B.8020301@lwfinger.net>
	<03364BF9-818F-43D1-BD1D-1F685CCC15AE@daleenterprise.com>
	<48497AC5.6040206@lwfinger.net>
Message-ID: <E8BA6DAC-1873-47E9-BDB5-1B67D305A8B4@daleenterprise.com>


On Jun 06, 2008, at 13:58 PM, Larry Finger wrote:

> Dale Walsh wrote:
>> (SEE PREVIOUS POST)
>> On Jun 06, 2008, at 00:26 AM, Larry Finger wrote:
>
>>> The sprom updating facility described above utilizes the /sys  
>>> pseudo-file system of Linux and will never work on any other OS.  
>>> Your only hope would be to find a user with Linux on his Apple  
>>> hardware and build the ssb-sprom utility. If you were to place  
>>> the resulting executable on a flash drive, you could boot the  
>>> appropriate version of a live CD, then execute ssb-sprom from the  
>>> flash device. The codes could also be changed by a Linux user  
>>> with x86 (PC) hardware as long as the card will fit in their  
>>> computer.
>> If I could find the ssb-sprom source I might be able to generate a  
>> version that works on a Mac, I do have a little skill.
>> I also have x86 computer hardware that can run linux I believe,  
>> unless linux doesn't support 500gb HDA's, ATI X1300 video cards,  
>> ICH7 or Core 2 Quad CPU's?
>
> You are showing your ignorance!
>
>>>
>>>> I have no problems using a CLI utility and navigation is not an  
>>>> issue.
>>>> Hopefully someone can provide a link for a windows utility that  
>>>> fits my needs or a GNU source package that can be built on the  
>>>> majority of *nix based OSes that doesn't have many obscure  
>>>> external dependancies (I have been know to compile things that  
>>>> don't normally compile on my OS).
>>>
>>> As explained above, this cannot happen.
>> I'll refrain from responding to this comment because I am not  
>> entirely convinced this is factual at this time.
>
> The package ssb-sprom can be built on a Mac, both MacIntel and PPC,  
> and it would allow you to manipulate an on-disk version of the  
> SPROM contents. To look at what is required to get a read or write  
> of the SPROM contents, grab a copy of Linux 2.6.24 or later and  
> examine the PCI routines in the directory drivers/ssb/. Much of the  
> code is used to handle the SPROM. Please note that it IS IN THE  
> KERNEL. No user-land entity that reports the ID's, etc has the  
> capability to write the SPROM.

Have all of these tools already, just need to read in sprom to disk  
so I can make the changes.

>
> From a more recent note in this thread, it seems that you can  
> change a simple file to include your device. If that is really  
> true, please do it that way. Anytime one rewrites the SPROM, there  
> is a finite chance of bricking your device. Do it only if necessary!!!

subsys is hardcoded in driver so you cannot make a simple edit.

>
> Larry
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080607/b46f0b3b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080607/b46f0b3b/attachment.pgp>

From netrolller.3d at gmail.com  Sat Jun  7 23:58:22 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sat, 7 Jun 2008 23:58:22 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910805220349u31c32dablef6c55b284643739@mail.gmail.com>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<-3309777657511333665@unknownmsgid>
	<69e28c910805220349u31c32dablef6c55b284643739@mail.gmail.com>
Message-ID: <69e28c910806071458j4a802ad1t6a08948ce08cf605@mail.gmail.com>

On Thu, May 22, 2008 at 12:49 PM, Stefanik G?bor
<netrolller.3d at gmail.com> wrote:
> Hello,
>
> 1. I don't know if MACTIME gets set or not. How do I check that?
> 2. ACKs and beacons are received perfectly, yes. Not sure about
> RTS/CTS, although I do remember seeing RTS packets in a pcap file I
> made with the card.
> 3. The locally-sent packets arrive back correctly, both those that
> have been generated by the system on wlan0, and those that are
> injected through Radiotap.
>
> Also, disabling HW crypto fixes the problem.
>
> My proposal: We should automatically disable HW crypto when the card
> is operating in multiple-interfaces mode, or if there is a monitor
> interface present.
>
> Sincerely,
> G?bor Stefanik
>
> P.S. Please CC the b43 development mailing list next time.
>
>
> On Thu, May 22, 2008 at 8:28 AM, Christian Hoene
> <christian.hoene at gmx.net> wrote:
>> Hello Stefanik G?bor,
>>
>> I have some question regarding the monitor-while-operating mode.
>> 1 Do you know whether the MACTIME stamp is set for normal packets?
>> 2 Do you received the ACK and RTS/CTS packets, too?
>> 3 Do you receive in the monitor interface also locally sent packets?
>>
>> Thank you very much for your help.
>>
>>  With best regards,
>>
>>  Christian Hoene
>>
>>> -----Original Message-----
>>> From: bcm43xx-dev-bounces at lists.berlios.de [mailto:bcm43xx-dev-
>>> bounces at lists.berlios.de] On Behalf Of Stefanik G?bor
>>> Sent: Tuesday, May 20, 2008 6:25 PM
>>> To: bcm43xx-dev at lists.berlios.de
>>> Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
>>> received in decrypted form on the monitor interface
>>>
>>> Hi all,
>>>
>>> One day I was testing monitor-while-operating, with "wlan0" as the
>>> managed interface and "rtap0" as the monitor one, and found an
>>> interesting bug: when I am associated with an AP on wlan0, and try to
>>> receive the same AP's packets through the monitor interface, the
>>> packets arrive in decrypted form, but with the WEP bit still set. This
>>> appears to be a HW-crypto-related bug, though I haven't tested with HW
>>> crypto off. What can cause such a bug?
>>>
>>> Thanks,
>>> G?bor
>>>
>>> --
>>> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>>> _______________________________________________
>>> Bcm43xx-dev mailing list
>>> Bcm43xx-dev at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>
>>
>
>
>
> --
> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>

Any news on this one? Please answer!

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From nhorman at tuxdriver.com  Sun Jun  8 04:32:46 2008
From: nhorman at tuxdriver.com (Neil Horman)
Date: Sat, 7 Jun 2008 22:32:46 -0400
Subject: vendor/product ID's
In-Reply-To: <243D34DF-BD51-43AD-AF8B-11DCE11817B5@macftphttp.serverbox.org>
References: <B47CC453-718D-42DA-A03E-D33E106353D2@daleenterprise.com>
	<4848B926.2090607@wetwork.net>
	<09DC3FD7-BA79-47EB-9A90-9DCB0C2D9BCD@daleenterprise.com>
	<200806061523.43422.mb@bu3sch.de>
	<20080606162515.GF2349@hmsreliant.think-freely.org>
	<243D34DF-BD51-43AD-AF8B-11DCE11817B5@macftphttp.serverbox.org>
Message-ID: <20080608023246.GA3539@localhost.localdomain>

On Sat, Jun 07, 2008 at 12:56:45AM -0400, Dale wrote:
> 
> On Jun 06, 2008, at 12:25 PM, Neil Horman wrote:
> 
> >On Fri, Jun 06, 2008 at 03:23:43PM +0200, Michael Buesch wrote:
> >>On Friday 06 June 2008 08:51:53 Dale Walsh wrote:
> >>>On Jun 06, 2008, at 00:12 AM, gavron at wetwork.net wrote:
> >>>
> >>>>Dale Walsh wrote:
> >>>>>
> >>>>>I'm new to the list and new to firmware modification so hi  
> >>>>>everyone.
> >>>>>
> >>>>>I have a broadcom PCI card and I need to modify the vendor and
> >>>>>product ID's, in case it matters it's a LinkSYS WMP300N.
> >>>>How on Earth did you come up with this idea?
> >>>
> >>>I know that I need to change the ID's on the card for the driver to
> >>>work properly, it's source is not available so I NEED to make these
> >>>changes.
> >>
> >>Excuse me, you need what?
> >>Can you explain?
> >>
> >
> >+1 to Michaels comments.  From your initial post it sounds like you  
> >want your
> >wireless NIC card to be picked up by a driver other than the one  
> >currently
> >driving the hardware (perhaps to enable extra features like .11n as  
> >you
> >subsequently mentioned), and to accomplish that you're trying to  
> >modify the pci
> >device and vendor id on the card to match what the alternate driver  
> >detects.
> >
> >If thats correct, can't you just go int
> >/System/Library/Extensions/<DriverName>/Contents/Info.plist for the  
> >two drivers
> >in question and add/remove the relevant pci id? That would see far  
> >more sane
> >than trying to actually modify the dev ids on the card itself.
> 
> You do that to get the card recognized however, you need to change  
> the subsys ID's because they are hard-coded into the binary and not  
> editable via the plist so the only solution is to change the subsys  
> ID's.
> 
You can't specify a wildcard on the subsysid in the plist?

> The cards is using the exact same chipets as the apple card so it's  
> not a matter of fooling it into thinking it has features/ 
> functionality it doesn't have.
> 
> ububtu does not natively recognize the WMP300N which uses the BCM4321  
> chipset so now I gotta install ubuntu then edit bcm43xx_main.c source  
> file and add some ID's, build bcm43xx.ko (without building the entire  
> source if someone can tell me how) so it recognizes the card so I can  
> run iwpriv on it to extract the sprom to make the required changes  
> and write the modified sprom back.
> 
You don't need to modify it, check /sys/modules/bcm43xx/new_id

> I tried to build the whole linux-image-$(uname -r) but ran out of  
> disk space (17gb of free space was insufficient).
> 
Then you did something very, very wrong...

Neil



From a.pignotti at sssup.it  Sun Jun  8 19:57:20 2008
From: a.pignotti at sssup.it (Alessandro)
Date: Sun, 8 Jun 2008 19:57:20 +0200
Subject: Support for Dell 1395 Mini-board/Broadcom 4310
Message-ID: <200806081957.25067.a.pignotti@sssup.it>

Hi everyone,
I've found a broadcom 0x4310 on my new shiny laptop. It works perfectly with 
ndiswrapper, but it is not recognized by b43 or b43legacy. So I've tried to 
hack around the code a bit to find why.

My progress so far are:
-) I've added the pci id of my board the the ssb driver, so it now find it. 
The SPROM seems to be as large as the one from rev4 (or at least the checksum 
is correct with such size), but the last byte says it is a rev8. I've found no 
documentation about it and the registers seems to be mapped differently from 
previous revisions. I've found where the mac address is from a raw dump, but i 
don't know how to recognize the other registers.
-) In b43 i've added the revision 15 the then ssb revision list, my board 
should be a b/g one, but the phytype is 5, from the headers it should be a LP, 
but i cannot find any documentation about it, it may be that even mmio 
registers mapping is changed, for example i've seen that if i add 0xC to the 
PHYVER MMIO address i get something reasonable, like PHYTYPE_G, revision 6
-) The radio version is 0x2062, which seems to be not supported, if i force 
the driver to use it, i can do almost nothing with the card, from iwlist i can 
see no property at all.

Can you please give me some advice or link to documentation so that i can 
finish the quest to support my board and get rid of closed source binary 
driver in my kernel-space? :-)

Please tell me if the description is not clear, i'm i bit in a hurry know, so 
maybe it is a bit confused.

Best regards,
Alessandro Pignotti
-- 
Vi Veri Veniversum Vivus Vici
        -Dr. Faustus - Marlowe
Public GPG Key ID 0x650B3ED9 on subkeys.gpg.net
Key Fingerprint 6243 AAD3 E3EC 52D8 DFAA 2A2F 9FCD 0457 650B 3ED9
Encrypted mails are welcome

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: This is a digitally signed message part.
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/61b32515/attachment.pgp>

From dale at daleenterprise.com  Sun Jun  8 20:33:18 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sun, 8 Jun 2008 14:33:18 -0400
Subject: b43 and card recognition.
Message-ID: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>

It appears that the b43 driver supports 11n functionality however it  
does not recognize my WLI-PCI-G300N or WMP300n, what changes are  
required to have these card recognized?

ID from cards are 4328 and 4329, both are using the bcm4321 chip.



-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/cc07711e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/cc07711e/attachment.pgp>

From mb at bu3sch.de  Sun Jun  8 20:39:19 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Jun 2008 20:39:19 +0200
Subject: b43 and card recognition.
In-Reply-To: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
Message-ID: <200806082039.19481.mb@bu3sch.de>

On Sunday 08 June 2008 20:33:18 Dale Walsh wrote:
> It appears that the b43 driver supports 11n functionality

What makes you think this?

-- 
Greetings Michael.


From dale at daleenterprise.com  Sun Jun  8 20:46:18 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sun, 8 Jun 2008 14:46:18 -0400
Subject: b43 and card recognition.
In-Reply-To: <200806082039.19481.mb@bu3sch.de>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082039.19481.mb@bu3sch.de>
Message-ID: <A01B8709-97F6-4DB6-A5BF-DC8C239813AC@daleenterprise.com>


On Jun 08, 2008, at 14:39 PM, Michael Buesch wrote:

> On Sunday 08 June 2008 20:33:18 Dale Walsh wrote:
>> It appears that the b43 driver supports 11n functionality
>
> What makes you think this?

Reading the english language I believe.

SEE: b43.h line #272
/* PHYVersioning */
#define B43_PHYTYPE_A			0x00
#define B43_PHYTYPE_B			0x01
#define B43_PHYTYPE_G			0x02
#define B43_PHYTYPE_N			0x04 <---
#define B43_PHYTYPE_LP			0x05


>
> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/f1159bb6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/f1159bb6/attachment.pgp>

From mb at bu3sch.de  Sun Jun  8 20:48:10 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Jun 2008 20:48:10 +0200
Subject: b43 and card recognition.
In-Reply-To: <A01B8709-97F6-4DB6-A5BF-DC8C239813AC@daleenterprise.com>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082039.19481.mb@bu3sch.de>
	<A01B8709-97F6-4DB6-A5BF-DC8C239813AC@daleenterprise.com>
Message-ID: <200806082048.11068.mb@bu3sch.de>

On Sunday 08 June 2008 20:46:18 Dale Walsh wrote:
> 
> On Jun 08, 2008, at 14:39 PM, Michael Buesch wrote:
> 
> > On Sunday 08 June 2008 20:33:18 Dale Walsh wrote:
> >> It appears that the b43 driver supports 11n functionality
> >
> > What makes you think this?
> 
> Reading the english language I believe.
> 
> SEE: b43.h line #272
> /* PHYVersioning */
> #define B43_PHYTYPE_A			0x00
> #define B43_PHYTYPE_B			0x01
> #define B43_PHYTYPE_G			0x02
> #define B43_PHYTYPE_N			0x04 <---
> #define B43_PHYTYPE_LP			0x05


You should probably read further:
Kconfig:
config B43_NPHY
       bool "Pre IEEE 802.11n support (BROKEN)"
       depends on B43 && EXPERIMENTAL && BROKEN

And no, it is not easy to "fix" this for you.
Just wait until it's done, please.

-- 
Greetings Michael.


From dale at daleenterprise.com  Sun Jun  8 20:53:05 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sun, 8 Jun 2008 14:53:05 -0400
Subject: b43 and card recognition.
In-Reply-To: <200806082048.11068.mb@bu3sch.de>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082039.19481.mb@bu3sch.de>
	<A01B8709-97F6-4DB6-A5BF-DC8C239813AC@daleenterprise.com>
	<200806082048.11068.mb@bu3sch.de>
Message-ID: <F1654C0C-7A2D-43CD-B3F6-B5A83735F4AE@daleenterprise.com>


On Jun 08, 2008, at 14:48 PM, Michael Buesch wrote:

> On Sunday 08 June 2008 20:46:18 Dale Walsh wrote:
>>
>> On Jun 08, 2008, at 14:39 PM, Michael Buesch wrote:
>>
>>> On Sunday 08 June 2008 20:33:18 Dale Walsh wrote:
>>>> It appears that the b43 driver supports 11n functionality
>>>
>>> What makes you think this?
>>
>> Reading the english language I believe.
>>
>> SEE: b43.h line #272
>> /* PHYVersioning */
>> #define B43_PHYTYPE_A			0x00
>> #define B43_PHYTYPE_B			0x01
>> #define B43_PHYTYPE_G			0x02
>> #define B43_PHYTYPE_N			0x04 <---
>> #define B43_PHYTYPE_LP			0x05
>
>
> You should probably read further:
> Kconfig:
> config B43_NPHY
>        bool "Pre IEEE 802.11n support (BROKEN)"
>        depends on B43 && EXPERIMENTAL && BROKEN
>
> And no, it is not easy to "fix" this for you.
> Just wait until it's done, please.

OK, wondering if you have a guesstimate on a time frame before  
something useable is available?

Would donating a card speed up the process???

>
> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/15bd6207/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/15bd6207/attachment.pgp>

From mb at bu3sch.de  Sun Jun  8 20:56:42 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Jun 2008 20:56:42 +0200
Subject: b43 and card recognition.
In-Reply-To: <F1654C0C-7A2D-43CD-B3F6-B5A83735F4AE@daleenterprise.com>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082048.11068.mb@bu3sch.de>
	<F1654C0C-7A2D-43CD-B3F6-B5A83735F4AE@daleenterprise.com>
Message-ID: <200806082056.42621.mb@bu3sch.de>

On Sunday 08 June 2008 20:53:05 Dale Walsh wrote:
> OK, wondering if you have a guesstimate on a time frame before  
> something useable is available?

No.

> Would donating a card speed up the process???

No. Donating a Reverse Engineer would help.

-- 
Greetings Michael.


From netrolller.3d at gmail.com  Sun Jun  8 21:05:07 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 8 Jun 2008 21:05:07 +0200
Subject: Support for Dell 1395 Mini-board/Broadcom 4310
In-Reply-To: <200806081957.25067.a.pignotti@sssup.it>
References: <200806081957.25067.a.pignotti@sssup.it>
Message-ID: <69e28c910806081205i9d46f0j20086283f184258b@mail.gmail.com>

On Sun, Jun 8, 2008 at 7:57 PM, Alessandro <a.pignotti at sssup.it> wrote:

> Hi everyone,
> I've found a broadcom 0x4310 on my new shiny laptop. It works perfectly
> with
> ndiswrapper, but it is not recognized by b43 or b43legacy. So I've tried to
> hack around the code a bit to find why.
>
> My progress so far are:
> -) I've added the pci id of my board the the ssb driver, so it now find it.
> The SPROM seems to be as large as the one from rev4 (or at least the
> checksum
> is correct with such size), but the last byte says it is a rev8. I've found
> no
> documentation about it and the registers seems to be mapped differently
> from
> previous revisions. I've found where the mac address is from a raw dump,
> but i
> don't know how to recognize the other registers.
> -) In b43 i've added the revision 15 the then ssb revision list, my board
> should be a b/g one, but the phytype is 5, from the headers it should be a
> LP,
> but i cannot find any documentation about it, it may be that even mmio
> registers mapping is changed, for example i've seen that if i add 0xC to
> the
> PHYVER MMIO address i get something reasonable, like PHYTYPE_G, revision 6
> -) The radio version is 0x2062, which seems to be not supported, if i force
> the driver to use it, i can do almost nothing with the card, from iwlist i
> can
> see no property at all.
>
> Can you please give me some advice or link to documentation so that i can
> finish the quest to support my board and get rid of closed source binary
> driver in my kernel-space? :-)
>
> Please tell me if the description is not clear, i'm i bit in a hurry know,
> so
> maybe it is a bit confused.
>
> Best regards,
> Alessandro Pignotti
> --
> Vi Veri Veniversum Vivus Vici
>        -Dr. Faustus - Marlowe
> Public GPG Key ID 0x650B3ED9 on subkeys.gpg.net
> Key Fingerprint 6243 AAD3 E3EC 52D8 DFAA 2A2F 9FCD 0457 650B 3ED9
> Encrypted mails are welcome
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
BCM4310 is a known card, it's an LP-PHY. AFAIK it's still being
reverse-engineered. CCing Larry, he is working on it AFAIK.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/a9d50fc4/attachment.html>

From proski at gnu.org  Sun Jun  8 21:36:24 2008
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 08 Jun 2008 15:36:24 -0400
Subject: b43 and card recognition.
In-Reply-To: <200806082056.42621.mb@bu3sch.de>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082048.11068.mb@bu3sch.de>
	<F1654C0C-7A2D-43CD-B3F6-B5A83735F4AE@daleenterprise.com>
	<200806082056.42621.mb@bu3sch.de>
Message-ID: <1212953784.26468.5.camel@dv>

On Sun, 2008-06-08 at 20:56 +0200, Michael Buesch wrote:

> > Would donating a card speed up the process???
> 
> No. Donating a Reverse Engineer would help.

:-)

I suggest that you write to devel at linuxdriverproject.org

Reverse engineering could be a fun project for somebody, especially
since bcm4328 is modern hardware with many potential users.

-- 
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Sun Jun  8 22:11:38 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 08 Jun 2008 15:11:38 -0500
Subject: Support for Dell 1395 Mini-board/Broadcom 4310
In-Reply-To: <200806081957.25067.a.pignotti@sssup.it>
References: <200806081957.25067.a.pignotti@sssup.it>
Message-ID: <484C3CFA.7060708@lwfinger.net>

Alessandro wrote:
> Hi everyone,
> I've found a broadcom 0x4310 on my new shiny laptop. It works perfectly with 
> ndiswrapper, but it is not recognized by b43 or b43legacy. So I've tried to 
> hack around the code a bit to find why.
> 
> My progress so far are:
> -) I've added the pci id of my board the the ssb driver, so it now find it. 
> The SPROM seems to be as large as the one from rev4 (or at least the checksum 
> is correct with such size), but the last byte says it is a rev8. I've found no 
> documentation about it and the registers seems to be mapped differently from 
> previous revisions. I've found where the mac address is from a raw dump, but i 
> don't know how to recognize the other registers.
> -) In b43 i've added the revision 15 the then ssb revision list, my board 
> should be a b/g one, but the phytype is 5, from the headers it should be a LP, 
> but i cannot find any documentation about it, it may be that even mmio 
> registers mapping is changed, for example i've seen that if i add 0xC to the 
> PHYVER MMIO address i get something reasonable, like PHYTYPE_G, revision 6
> -) The radio version is 0x2062, which seems to be not supported, if i force 
> the driver to use it, i can do almost nothing with the card, from iwlist i can 
> see no property at all.
> 
> Can you please give me some advice or link to documentation so that i can 
> finish the quest to support my board and get rid of closed source binary 
> driver in my kernel-space? :-)
> 
> Please tell me if the description is not clear, i'm i bit in a hurry know, so 
> maybe it is a bit confused.
> 
> Best regards,
> Alessandro Pignotti

At the moment, b43 does not support the LP-PHY, which we think is a low-power 
b/g device. The RE team is working hard on the routines found in driver 
4.150.10.5, which supports LP and N-PHYs. Until we finish the decompiling, 
write the specs, the coders create the necessary modifications to b43, AND 
the specs and code are debugged, your device will not work. You can either 
use ndiswrapper, or pick up one of the low-cost Dell versions of the DW1390 
from E-bay, which is a BCM4311, or a DW1490, which is a BCM4312. With your HP 
laptop, you will need to change the vendor and product ID's to match your 
current card using ssb-sprom. HP white-lists PCIe cards and will not boot is 
an incorrect one is installed.

Booting the machine so that the SPROM can be changed is a little tricky. You 
need to remove the WLAN card, boot into GRUB, and press a key to stop the 
automatic GRUB booting. Next you install the WLAN card with the power on, and 
then finish booting. I don't mess around with the antenna leads at this 
point. You then need to extract the current SPROM contents, rewrite then 
Subsytem product ID to 0x137C, rewrite the Subsystem vendor ID to 0x103C, and 
rewrite the SPROM contents. These steps are described in the README in the 
ssb-sprom directory. At this point, reboot the machine and if it comes up 
correctly, you can finish buttoning up the installation.


My laptop also came with the BCM4310 - that card is on the shelf while I use 
a DW1490, which I bought for $17 (including shipping) on E-bay. On ebay.it, 
there are two for sale for 5-6 EUR, plus shipping. I also have a BCM4311/2.

Larry


From mb at bu3sch.de  Sun Jun  8 22:20:25 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Jun 2008 22:20:25 +0200
Subject: Support for Dell 1395 Mini-board/Broadcom 4310
In-Reply-To: <484C3CFA.7060708@lwfinger.net>
References: <200806081957.25067.a.pignotti@sssup.it>
	<484C3CFA.7060708@lwfinger.net>
Message-ID: <200806082220.25563.mb@bu3sch.de>

On Sunday 08 June 2008 22:11:38 Larry Finger wrote:
> Booting the machine so that the SPROM can be changed is a little tricky. You 
> need to remove the WLAN card, boot into GRUB, and press a key to stop the 
> automatic GRUB booting. Next you install the WLAN card with the power on, and 
> then finish booting. I don't mess around with the antenna leads at this 
> point. You then need to extract the current SPROM contents, rewrite then 
> Subsytem product ID to 0x137C, rewrite the Subsystem vendor ID to 0x103C, and 
> rewrite the SPROM contents. These steps are described in the README in the 
> ssb-sprom directory. At this point, reboot the machine and if it comes up 
> correctly, you can finish buttoning up the installation.

Of course you can also put it into a sane machine for rewriting
the SPROM to avoid hotswapping it. Hotswapping can damage the hardware
(both card and mainboard).

-- 
Greetings Michael.


From mb at bu3sch.de  Sun Jun  8 22:20:25 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 8 Jun 2008 22:20:25 +0200
Subject: Support for Dell 1395 Mini-board/Broadcom 4310
In-Reply-To: <484C3CFA.7060708@lwfinger.net>
References: <200806081957.25067.a.pignotti@sssup.it>
	<484C3CFA.7060708@lwfinger.net>
Message-ID: <200806082220.25563.mb@bu3sch.de>

On Sunday 08 June 2008 22:11:38 Larry Finger wrote:
> Booting the machine so that the SPROM can be changed is a little tricky. You 
> need to remove the WLAN card, boot into GRUB, and press a key to stop the 
> automatic GRUB booting. Next you install the WLAN card with the power on, and 
> then finish booting. I don't mess around with the antenna leads at this 
> point. You then need to extract the current SPROM contents, rewrite then 
> Subsytem product ID to 0x137C, rewrite the Subsystem vendor ID to 0x103C, and 
> rewrite the SPROM contents. These steps are described in the README in the 
> ssb-sprom directory. At this point, reboot the machine and if it comes up 
> correctly, you can finish buttoning up the installation.

Of course you can also put it into a sane machine for rewriting
the SPROM to avoid hotswapping it. Hotswapping can damage the hardware
(both card and mainboard).

-- 
Greetings Michael.


From dale at daleenterprise.com  Sun Jun  8 22:44:28 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sun, 8 Jun 2008 16:44:28 -0400
Subject: b43 and card recognition.
In-Reply-To: <1212953784.26468.5.camel@dv>
References: <18C608A5-48D4-4237-BF04-0E3BCB273371@daleenterprise.com>
	<200806082048.11068.mb@bu3sch.de>
	<F1654C0C-7A2D-43CD-B3F6-B5A83735F4AE@daleenterprise.com>
	<200806082056.42621.mb@bu3sch.de> <1212953784.26468.5.camel@dv>
Message-ID: <75E49996-C14D-445C-AB18-4272998CAD71@daleenterprise.com>


On Jun 08, 2008, at 15:36 PM, Pavel Roskin wrote:

> On Sun, 2008-06-08 at 20:56 +0200, Michael Buesch wrote:
>
>>> Would donating a card speed up the process???
>>
>> No. Donating a Reverse Engineer would help.
>
> :-)
>
> I suggest that you write to devel at linuxdriverproject.org
>
> Reverse engineering could be a fun project for somebody, especially
> since bcm4328 is modern hardware with many potential users.

Chip is BCM4321, PCI ID's are (Vendor / Product) 0x14e4 / 0x4328.

>
> -- 
> Regards,
> Pavel Roskin
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/a382fce4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080608/a382fce4/attachment.pgp>

From proski at gnu.org  Mon Jun  9 05:03:46 2008
From: proski at gnu.org (Pavel Roskin)
Date: Sun, 08 Jun 2008 23:03:46 -0400
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <200806051535.14340.mb@bu3sch.de>
References: <200806041716.53771.mb@bu3sch.de> <1212633988.26365.42.camel@dv>
	<200806051535.14340.mb@bu3sch.de>
Message-ID: <1212980626.26402.8.camel@dv>

On Thu, 2008-06-05 at 15:35 +0200, Michael Buesch wrote:

> There shouldn't be a reason for a freeze. It might crash, yes, but it always
> prints out useful messages first for me.

I tried different miniPCI-toPCI bridges, hoping that it's a hardware
error, but the system freezes with all of them except RouterBoard RB-14.
But if I use RB-14, I cannot get any scan results even with the normal
firmware.  I guess the "rfkill" pin is enabled in RB-14.  I remember I
used tape to cover one of the pins long ago to use some bridges.  I
guess freezing is triggered by receiving a packet.

Before the system freezes, it prints messages like:
b43-phy2 ERROR: DMA RX buffer too small (len: 47946, buffer: 2404, nr-dropped: 20)

That's for rev9.  Numbers are different for rev5.  The screen capture is
here: http://red-bean.com/proski/b43/rev9.jpg

-- 
Regards,
Pavel Roskin


From dale at daleenterprise.com  Mon Jun  9 10:35:32 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 9 Jun 2008 04:35:32 -0400
Subject: b43 and sprom modification success on a test card.
Message-ID: <BA899097-1C7C-4D6D-8818-2A22570D63F6@daleenterprise.com>

Well, I have a different card to modify as I prepare to familiarize  
myself with the process so that when the bcm4321 chipset (0x4328 /  
0x4329) is supported I will have great success.

I found a miniPCI card from a china made bcm4306 based card with the  
0x4320 ID that was not recognized as an Apple Airport card.

It look like it would be recognized by the b43 module based on source  
examination so I figured I'd use a PCI to miniPCI adapter and see if  
I can make the changes without bricking the card.

iwpriv doesn't seem to like the b43 module recognized card and  
wouldn't allow me to perform any read/write functions and it was  
hinted that this method is for the older bcm43xx module.

I located the ssb_sprom file for the card in question by  
identification of "lspci" and copied out the ssb_sprom file to the  
Desktop as "original_sprom" for easy identification (and so I know  
which was the unmodified).

Time for step one:
I modified the firmware with the ID's I want using the "ssb-sprom"  
application.

On to step two:
As suggested by Asheesh, I copied the modified firmware file onto the  
ssb_sprom file in the original location and at first I couldn't tell  
and wasn't sure if anything happened so I "rmmod b43; modprobe b43"  
and copied the ssb_sprom file back to the desktop as  
"new_original_sprom" and then did "ssb-sprom -i Desktop/ 
new_original_sprom -P" and my new ID's were displayed so it was time  
to test this so I started trying the card in various computers and  
was elated with the success of things.

Results now in Mac OS X on a B&W G3, a PowerPC Dual G5 Xserve and an  
generic Intel x86 PC sporting a Core 2 Quad is that the card is  
natively recognized and supported.
http://acm.pastebin.com/f517a0a8
http://daleenterprise.com/download/airportclone.png

Now I have question regarding the process I performed.

Was the disabling and enabling of "b43 required"???

Is this the correct procedure for modification of the subsys ID's???

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/7fba7da6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/7fba7da6/attachment.pgp>

From dale at daleenterprise.com  Mon Jun  9 10:46:49 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 9 Jun 2008 04:46:49 -0400
Subject: b43 and sprom modification success on a test card. [correction]
Message-ID: <01A51104-C893-40A8-BC04-A8D02F29F9BB@daleenterprise.com>

Well, I have a different card to modify as I prepare to familiarize  
myself with the process so that when the bcm4321 chipset (0x4328 /  
0x4329) is supported I will have great success.

I found a miniPCI card from a china made bcm4306 based card with the  
0x4320 ID that was not recognized as an Apple Airport card.

It look like it would be recognized by the b43 module based on source  
examination so I figured I'd use a PCI to miniPCI adapter and see if  
I can make the changes without bricking the card.

iwpriv doesn't seem to like the b43 module recognized card and  
wouldn't allow me to perform any read/write functions and it was  
hinted that this method is for the older bcm43xx module.

I located the ssb_sprom file for the card in question by  
identification of "lspci" and copied out the ssb_sprom file to the  
Desktop as "original_sprom" for easy identification (and so I know  
which was the unmodified).

Time for step one:
I modified the firmware with the ID's I want using the "ssb-sprom"  
application.

On to step two:
As suggested by Asheesh, I copied the modified firmware file onto the  
ssb_sprom file in the original location and at first I couldn't tell  
and wasn't sure if anything happened so I "rmmod b43; modprobe b43"  
and copied the ssb_sprom file back to the desktop as  
"new_original_sprom" and then did "ssb-sprom -i Desktop/ 
new_original_sprom -P" and my new ID's were displayed so it was time  
to test this so I started trying the card in various computers and  
was elated with the success of things.

Results now in Mac OS X on a B&W G3, a PowerPC Dual G5 Xserve and an  
generic Intel x86 PC sporting a Core 2 Quad is that the card is  
natively recognized and supported.
http://acm.pastebin.com/f5175a0a8
http://daleenterprise.com/download/airportclone.png

Now I have question regarding the process I performed.

Was the disabling and enabling of "b43 required"???

Is this the correct procedure for modification of the subsys ID's???

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/2c86f4f7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/2c86f4f7/attachment.pgp>

From mb at bu3sch.de  Mon Jun  9 11:36:13 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 9 Jun 2008 11:36:13 +0200
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <1212980626.26402.8.camel@dv>
References: <200806041716.53771.mb@bu3sch.de>
	<200806051535.14340.mb@bu3sch.de> <1212980626.26402.8.camel@dv>
Message-ID: <200806091136.13358.mb@bu3sch.de>

On Monday 09 June 2008 05:03:46 Pavel Roskin wrote:
> On Thu, 2008-06-05 at 15:35 +0200, Michael Buesch wrote:
> 
> > There shouldn't be a reason for a freeze. It might crash, yes, but it always
> > prints out useful messages first for me.
> 
> I tried different miniPCI-toPCI bridges, hoping that it's a hardware
> error, but the system freezes with all of them except RouterBoard RB-14.
> But if I use RB-14, I cannot get any scan results even with the normal
> firmware.  I guess the "rfkill" pin is enabled in RB-14.  I remember I
> used tape to cover one of the pins long ago to use some bridges.  I
> guess freezing is triggered by receiving a packet.
> 
> Before the system freezes, it prints messages like:
> b43-phy2 ERROR: DMA RX buffer too small (len: 47946, buffer: 2404, nr-dropped: 20)


Expected. But that shouldn't happen for the original firmware.

> That's for rev9.  Numbers are different for rev5.  The screen capture is
> here: http://red-bean.com/proski/b43/rev9.jpg

All expected.

-- 
Greetings Michael.


From dale at daleenterprise.com  Mon Jun  9 12:03:35 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 9 Jun 2008 06:03:35 -0400
Subject: b43 and sprom modification success on a test card. [correction]
	[THANK YOU]
In-Reply-To: <01A51104-C893-40A8-BC04-A8D02F29F9BB@daleenterprise.com>
References: <01A51104-C893-40A8-BC04-A8D02F29F9BB@daleenterprise.com>
Message-ID: <A5048975-AFA3-40B7-9C13-E2104C045224@daleenterprise.com>

I started looking at the Apple ID list again and it appears that  
0x0453 was incorrect for this card type since it was the ID for the  
miniPCIe card and not the miniPCI card I was using so I thought I'd  
give it another shot and change the ID again.

I modified my ID's in a new file and copied it over to ssb_sprom.

I took a look at dmesg and I saw that ssb writing to the card so  
without further action I rebooted into OSX and the ID's were now  
correct for the specific card type.

I tested the card in Mac OS X 10.4.0, 10.4.8, 10.4.11, 10.5.0, 10.5.2  
and 10.5.3 and the card was properly identified.

While the process has now become much simpler, I think it's extremely  
dangerous if it doesn't perform some kind of verification on the data  
that is being copied before it actually performs the firmware update.

I wish to thank Asheesh for his time in helping me get acclimated to  
ubuntu-hardy and also the authors of b43 and ssb for simplifying the  
sprom writing process and look forward to when the new cards like the  
LinkSYS WMP300n and Buffalo Technology WLI-PCI-G300N are supported so  
that the ID's can be corrected thus allowing the use of inexpensive  
third-party cards without sacrificing functionality in other OS's.

Since this has turned out to be such a simple process, waiting for  
the support of newer cards is a worthwhile wait provide that effort  
is being applied.

I really wanna help, the cause is worthwhile.

What task can I perform? (no task to menial)

On Jun 09, 2008, at 04:46 AM, Dale Walsh wrote:

> Well, I have a different card to modify as I prepare to familiarize  
> myself with the process so that when the bcm4321 chipset (0x4328 /  
> 0x4329) is supported I will have great success.
>
> I found a miniPCI card from a china made bcm4306 based card with  
> the 0x4320 ID that was not recognized as an Apple Airport card.
>
> It look like it would be recognized by the b43 module based on  
> source examination so I figured I'd use a PCI to miniPCI adapter  
> and see if I can make the changes without bricking the card.
>
> iwpriv doesn't seem to like the b43 module recognized card and  
> wouldn't allow me to perform any read/write functions and it was  
> hinted that this method is for the older bcm43xx module.
>
> I located the ssb_sprom file for the card in question by  
> identification of "lspci" and copied out the ssb_sprom file to the  
> Desktop as "original_sprom" for easy identification (and so I know  
> which was the unmodified).
>
> Time for step one:
> I modified the firmware with the ID's I want using the "ssb-sprom"  
> application.
>
> On to step two:
> As suggested by Asheesh, I copied the modified firmware file onto  
> the ssb_sprom file in the original location and at first I couldn't  
> tell and wasn't sure if anything happened so I "rmmod b43; modprobe  
> b43" and copied the ssb_sprom file back to the desktop as  
> "new_original_sprom" and then did "ssb-sprom -i Desktop/ 
> new_original_sprom -P" and my new ID's were displayed so it was  
> time to test this so I started trying the card in various computers  
> and was elated with the success of things.
>
> Results now in Mac OS X on a B&W G3, a PowerPC Dual G5 Xserve and  
> an generic Intel x86 PC sporting a Core 2 Quad is that the card is  
> natively recognized and supported.
> http://acm.pastebin.com/f5175a0a8
> http://daleenterprise.com/download/airportclone.png
>
> Now I have question regarding the process I performed.
>
> Was the disabling and enabling of "b43 required"???
>
> Is this the correct procedure for modification of the subsys ID's???
>
> -- Dale
>
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev

-- Dale





-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/114cfe27/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080609/114cfe27/attachment.pgp>

From mb at bu3sch.de  Mon Jun  9 12:10:13 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 9 Jun 2008 12:10:13 +0200
Subject: b43 and sprom modification success on a test card. [correction]
	[THANK YOU]
In-Reply-To: <A5048975-AFA3-40B7-9C13-E2104C045224@daleenterprise.com>
References: <01A51104-C893-40A8-BC04-A8D02F29F9BB@daleenterprise.com>
	<A5048975-AFA3-40B7-9C13-E2104C045224@daleenterprise.com>
Message-ID: <200806091210.13752.mb@bu3sch.de>

On Monday 09 June 2008 12:03:35 Dale Walsh wrote:
> While the process has now become much simpler, I think it's extremely  
> dangerous if it doesn't perform some kind of verification on the data  
> that is being copied before it actually performs the firmware update.

It performs an 8bit CRC check. So you can't write any random data to it.

-- 
Greetings Michael.


From mb at bu3sch.de  Mon Jun  9 14:08:07 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 9 Jun 2008 14:08:07 +0200
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <200806091136.13358.mb@bu3sch.de>
References: <200806041716.53771.mb@bu3sch.de> <1212980626.26402.8.camel@dv>
	<200806091136.13358.mb@bu3sch.de>
Message-ID: <200806091408.07618.mb@bu3sch.de>

On Monday 09 June 2008 11:36:13 Michael Buesch wrote:
> On Monday 09 June 2008 05:03:46 Pavel Roskin wrote:
> > On Thu, 2008-06-05 at 15:35 +0200, Michael Buesch wrote:
> > 
> > > There shouldn't be a reason for a freeze. It might crash, yes, but it always
> > > prints out useful messages first for me.
> > 
> > I tried different miniPCI-toPCI bridges, hoping that it's a hardware
> > error, but the system freezes with all of them except RouterBoard RB-14.
> > But if I use RB-14, I cannot get any scan results even with the normal
> > firmware.  I guess the "rfkill" pin is enabled in RB-14.  I remember I
> > used tape to cover one of the pins long ago to use some bridges.  I
> > guess freezing is triggered by receiving a packet.
> > 
> > Before the system freezes, it prints messages like:
> > b43-phy2 ERROR: DMA RX buffer too small (len: 47946, buffer: 2404, nr-dropped: 20)
> 
> 
> Expected. But that shouldn't happen for the original firmware.
> 
> > That's for rev9.  Numbers are different for rev5.  The screen capture is
> > here: http://red-bean.com/proski/b43/rev9.jpg
> 
> All expected.
> 

You can try the latest firmware from git, btw. It should be (partially) fixed there.

-- 
Greetings Michael.


From linville at tuxdriver.com  Mon Jun  9 17:23:23 2008
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 9 Jun 2008 11:23:23 -0400
Subject: [stable] [PATCH stable] b43: Fix controller restart crash
In-Reply-To: <200806061955.27951.mb@bu3sch.de>
References: <200806061558.42998.mb@bu3sch.de>
	<20080606173223.GR30402@sequoia.sous-sol.org>
	<200806061955.27951.mb@bu3sch.de>
Message-ID: <20080609152323.GA12654@tuxdriver.com>

On Fri, Jun 06, 2008 at 07:55:27PM +0200, Michael Buesch wrote:
> On Friday 06 June 2008 19:32:23 Chris Wright wrote:
> > * Michael Buesch (mb at bu3sch.de) wrote:
> > > This fixes a kernel crash on rmmod, in the case where the controller
> > > was restarted before doing the rmmod.
> > > 
> > > Upstream commit is 4735f5022c97f6624ced2ec5056c61c4b437d53b
> > 
> > This is not in Linus' tree.  Where is this upstream commit?
> 
> John Linville's wireless tree. That's upstream from my point of view. :P

:-)

The commit ID may have gotten shuffled when Dave M. rebased net-2.6.
It is in 2.6.26-rc5 as commit 3bf0a32e22fedc0b46443699db2d61ac2a883ac4.

Hth!

John
-- 
John W. Linville
linville at tuxdriver.com


From andiroots at bsd.com.br  Mon Jun  9 20:02:25 2008
From: andiroots at bsd.com.br (Anderson Lima)
Date: Mon, 9 Jun 2008 15:02:25 -0300
Subject: bcm4310
Message-ID: <ff3969390806091102oec43c3o735f904357af1fb6@mail.gmail.com>

Somebody, knows how to install and configure the driver bcm4310.
this driver is a USB controler.

it's came together with hp pavilion dv2715nr.

if somebody here knows please help me.


From Larry.Finger at lwfinger.net  Mon Jun  9 20:27:46 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 09 Jun 2008 13:27:46 -0500
Subject: bcm4310
In-Reply-To: <ff3969390806091102oec43c3o735f904357af1fb6@mail.gmail.com>
References: <ff3969390806091102oec43c3o735f904357af1fb6@mail.gmail.com>
Message-ID: <484D7622.5070606@lwfinger.net>

Anderson Lima wrote:
> Somebody, knows how to install and configure the driver bcm4310.
> this driver is a USB controler.
> 
> it's came together with hp pavilion dv2715nr.
> 
> if somebody here knows please help me.

Have you considered searching the archives? This subject has been discussed 
at least twice before in this list!!

Although the lspci output mentions USB, the device has a PCIe interface. At 
the moment, it has an SPROM revision (#8) whose layout has not been decoded. 
In addition, it has a new LP-PHY and a new radio model. The specifications 
have not yet been written for these components, thus there is no code in b43 
to operate it.

The reverse engineers are working on the specs for this device. How long it 
will take is unknown. One option is to use ndiswrapper with the Windows 
driver; however, that solution didn't work for me on my 64-bit system. Others 
have reported it working, but I don't know if 32- or 64-bit systems. Your 
second option is to replace the card - my dv2815nr now has a BCM4311. This 
option requires the Product ID to be rewritten, which may be too much trouble 
for you.

Larry


From dale at daleenterprise.com  Wed Jun 11 12:58:41 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 11 Jun 2008 06:58:41 -0400
Subject: bcm94321
Message-ID: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>

I've been in touch with Broadcom a since I am considering having a  
card OEM'ed and it was discussed acquiring the API and a framework  
for driver programming in a custom OS so now I'm just waiting on  
approval.

Is there any other action I can take that would help???

Here is some information on the 11n based cards I have, I'm working  
on getting the b43 driver to recognize the card in the hopes that I  
can obtain a dump of the sprom data in case it's usefull.

Card one: Apple Airport Extreme 11n miniPCIe (Broadcom)
vendorid: 0x14e4
deviceid: 0x4328
radiorev: 0x42055000
chipnum: 0x4321
chiprev: 0x1
corerev: 0xb
boardid: 0x87
boardvendor: 0x106b
boardrev: 0x5b
driverrev: 0x4aa2e03
ucoderev: 0x0
bus: 0x1

Card two: LinkSYS WMP300N PCI
vendorid: 0x14e4
deviceid: 0x4329
radiorev: 0x42055000
chipnum: 0x4321
chiprev: 0x1
corerev: 0xb
boardid: 0x60
boardvendor: 0x1737
boardrev: 0x48
driverrev: 0x4aa2e05
ucoderev: 0x0
bus: 0x1
Card three: Buffallo Technology WLI-PCI-G300N PCI
vendorid: 0x14e4
deviceid: 0x4329
radiorev: 0x42055000
chipnum: 0x4321
chiprev: 0x1
corerev: 0xb
boardid: 0x0353
boardvendor: 0x1154
boardrev: 0x48
driverrev: 0x4aa2e05
ucoderev: 0x0
bus: 0x1

-- Dale

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080611/9b77a86e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080611/9b77a86e/attachment.pgp>

From netrolller.3d at gmail.com  Wed Jun 11 14:40:11 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Wed, 11 Jun 2008 14:40:11 +0200
Subject: bcm94321
In-Reply-To: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
Message-ID: <69e28c910806110540o136186f3yeb5fab5a6bf041ad@mail.gmail.com>

On Wed, Jun 11, 2008 at 12:58 PM, Dale Walsh <dale at daleenterprise.com>
wrote:

> I've been in touch with Broadcom a since I am considering having a card
> OEM'ed and it was discussed acquiring the API and a framework for driver
> programming in a custom OS so now I'm just waiting on approval.
>
> Is there any other action I can take that would help???
>
> Here is some information on the 11n based cards I have, I'm working on
> getting the b43 driver to recognize the card in the hopes that I can obtain
> a dump of the sprom data in case it's usefull.
> Card one: Apple Airport Extreme 11n miniPCIe (Broadcom)
>
>    1. vendorid: 0x14e4
>    2. deviceid: 0x4328
>    3. radiorev: 0x42055000
>    4. chipnum: 0x4321
>    5. chiprev: 0x1
>    6. corerev: 0xb
>    7. boardid: 0x87
>    8. boardvendor: 0x106b
>    9. boardrev: 0x5b
>    10. driverrev: 0x4aa2e03
>    11. ucoderev: 0x0
>    12. bus: 0x1
>
>
> Card two: LinkSYS WMP300N PCI
>
>    1. vendorid: 0x14e4
>    2. deviceid: 0x4329
>    3. radiorev: 0x42055000
>    4. chipnum: 0x4321
>    5. chiprev: 0x1
>    6. corerev: 0xb
>    7. boardid: 0x60
>    8. boardvendor: 0x1737
>    9. boardrev: 0x48
>    10. driverrev: 0x4aa2e05
>    11. ucoderev: 0x0
>    12. bus: 0x1
>
> Card three: Buffallo Technology WLI-PCI-G300N PCI
>
>    1. vendorid: 0x14e4
>    2. deviceid: 0x4329
>    3. radiorev: 0x42055000
>    4. chipnum: 0x4321
>    5. chiprev: 0x1
>    6. corerev: 0xb
>    7. boardid: 0x0353
>    8. boardvendor: 0x1154
>    9. boardrev: 0x48
>    10. driverrev: 0x4aa2e05
>    11. ucoderev: 0x0
>    12. bus: 0x1
>
>
> -- Dale
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
These are wireless-N cards. The Broadcom Intensi-Fi wireless PHY (the
"N-PHY") hasn't been reverse-engineered yet, so it's impossible to implement
it until the reverse-engineering details arrive.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080611/9de3dc5a/attachment.html>

From netrolller.3d at gmail.com  Wed Jun 11 21:50:19 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Wed, 11 Jun 2008 21:50:19 +0200
Subject: Open source driver with binary HAL for BCM4313 from Broadcom
In-Reply-To: <200806112047.00854.mb@bu3sch.de>
References: <48500F14.8070300@canonical.com> <200806112047.00854.mb@bu3sch.de>
Message-ID: <69e28c910806111250k4bfe0190h9cfd5937d47b1bbc@mail.gmail.com>

On Wed, Jun 11, 2008 at 8:47 PM, Michael Buesch <mb at bu3sch.de> wrote:
>
> On Wednesday 11 June 2008 19:44:52 Tim Gardner wrote:
> > John,
> >
> > Here is the URL to Broadcom's web site advertising their open source
> > driver with support for the BCM4313.
> >
> > http://www.broadcom.com/support/802.11/linux_sta.php
> >
> > rtg
>
> <quote>
> Make sure that you download the appropriate tar because the hybrid binary
> file must be of the appropriate architecture type. The hybrid binary file
> is agnostic to the specific version of the Linux kernel because it is
> designed to perform all interactions with the operating system through
> operating-system-specific files...
> </quote>
>
> --
> Greetings Michael.
> --
> To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
> the body of a message to majordomo at vger.kernel.org
> More majordomo info at  http://vger.kernel.org/majordomo-info.html

Also, the download links are broken. And AFAIK we do support BCM4312,
although not PCI ID 0x4315 (that would be BCM4310).
(CCing the bcm43xx mailing list.)

--
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Wed Jun 11 22:02:11 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Jun 2008 15:02:11 -0500
Subject: Open source driver with binary HAL for BCM4313 from Broadcom
In-Reply-To: <69e28c910806111250k4bfe0190h9cfd5937d47b1bbc@mail.gmail.com>
References: <48500F14.8070300@canonical.com> <200806112047.00854.mb@bu3sch.de>
	<69e28c910806111250k4bfe0190h9cfd5937d47b1bbc@mail.gmail.com>
Message-ID: <48502F43.6040000@lwfinger.net>

Stefanik G?bor wrote:
> On Wed, Jun 11, 2008 at 8:47 PM, Michael Buesch <mb at bu3sch.de> wrote:
>> On Wednesday 11 June 2008 19:44:52 Tim Gardner wrote:
>>> John,
>>>
>>> Here is the URL to Broadcom's web site advertising their open source
>>> driver with support for the BCM4313.
>>>
>>> http://www.broadcom.com/support/802.11/linux_sta.php
>>>
>>> rtg
>> <quote>
>> Make sure that you download the appropriate tar because the hybrid binary
>> file must be of the appropriate architecture type. The hybrid binary file
>> is agnostic to the specific version of the Linux kernel because it is
>> designed to perform all interactions with the operating system through
>> operating-system-specific files...
>> </quote>
>>
>> --
>> Greetings Michael.
>> --
>> To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
>> the body of a message to majordomo at vger.kernel.org
>> More majordomo info at  http://vger.kernel.org/majordomo-info.html
> 
> Also, the download links are broken. And AFAIK we do support BCM4312,
> although not PCI ID 0x4315 (that would be BCM4310).
> (CCing the bcm43xx mailing list.)

Watch out for their tarballs as they will dump all over the directory 
that you are in when you invoke tar.

Larry


From dale at daleenterprise.com  Wed Jun 11 22:29:05 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 11 Jun 2008 16:29:05 -0400
Subject: bcm94321
In-Reply-To: <69e28c910806110540o136186f3yeb5fab5a6bf041ad@mail.gmail.com>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
	<69e28c910806110540o136186f3yeb5fab5a6bf041ad@mail.gmail.com>
Message-ID: <1B3BA9AB-57D4-43D2-A5AD-95E84295671C@daleenterprise.com>


On Jun 11, 2008, at 08:40 AM, Stefanik G?bor wrote:

> On Wed, Jun 11, 2008 at 12:58 PM, Dale Walsh  
> <dale at daleenterprise.com> wrote:
> I've been in touch with Broadcom a since I am considering having a  
> card OEM'ed and it was discussed acquiring the API and a framework  
> for driver programming in a custom OS so now I'm just waiting on  
> approval.
>
> Is there any other action I can take that would help???
>
> Here is some information on the 11n based cards I have, I'm working  
> on getting the b43 driver to recognize the card in the hopes that I  
> can obtain a dump of the sprom data in case it's usefull.
>
> Card one: Apple Airport Extreme 11n miniPCIe (Broadcom)
> vendorid: 0x14e4
> deviceid: 0x4328
> radiorev: 0x42055000
> chipnum: 0x4321
> chiprev: 0x1
> corerev: 0xb
> boardid: 0x87
> boardvendor: 0x106b
> boardrev: 0x5b
> driverrev: 0x4aa2e03
> ucoderev: 0x0
> bus: 0x1
>
> Card two: LinkSYS WMP300N PCI
> vendorid: 0x14e4
> deviceid: 0x4329
> radiorev: 0x42055000
> chipnum: 0x4321
> chiprev: 0x1
> corerev: 0xb
> boardid: 0x60
> boardvendor: 0x1737
> boardrev: 0x48
> driverrev: 0x4aa2e05
> ucoderev: 0x0
> bus: 0x1
> Card three: Buffallo Technology WLI-PCI-G300N PCI
> vendorid: 0x14e4
> deviceid: 0x4329
> radiorev: 0x42055000
> chipnum: 0x4321
> chiprev: 0x1
> corerev: 0xb
> boardid: 0x0353
> boardvendor: 0x1154
> boardrev: 0x48
> driverrev: 0x4aa2e05
> ucoderev: 0x0
> bus: 0x1
>
> -- Dale
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
> These are wireless-N cards. The Broadcom Intensi-Fi wireless PHY  
> (the "N-PHY") hasn't been reverse-engineered yet, so it's  
> impossible to implement it until the reverse-engineering details  
> arrive.

As far as I know, obtaining the N-PHY would allow the card to be  
function, at this time I'm only interested in obtaining the ability  
to read/write the sprom data.

>
>
> -- 
> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080611/f7509d35/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080611/f7509d35/attachment.pgp>

From Larry.Finger at lwfinger.net  Thu Jun 12 04:20:04 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 11 Jun 2008 21:20:04 -0500
Subject: bcm94321
In-Reply-To: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
Message-ID: <485087D4.9040004@lwfinger.net>

Dale Walsh wrote:
> I've been in touch with Broadcom a since I am considering having a card 
> OEM'ed and it was discussed acquiring the API and a framework for driver 
> programming in a custom OS so now I'm just waiting on approval.
> 
> Is there any other action I can take that would help???
> 
> Here is some information on the 11n based cards I have, I'm working on 
> getting the b43 driver to recognize the card in the hopes that I can 
> obtain a dump of the sprom data in case it's usefull.

I'm not sure the SPROM data will have any value at this time; however, 
you need to have ssb recognize the device in order to get to the SPROM 
values. That requires the PCI ID in ssb's tables. You will also need a 
fairly recent kernel (2.6.26-rcX) if the devices have a 400 byte SPROM 
  that is not rev 4. It may be necessary for b43 to be loaded, but the 
SPROM can be read even if b43 doesn't recognize the device.

Larry


From mb at bu3sch.de  Thu Jun 12 11:16:08 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Jun 2008 11:16:08 +0200
Subject: bcm94321
In-Reply-To: <485087D4.9040004@lwfinger.net>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
	<485087D4.9040004@lwfinger.net>
Message-ID: <200806121116.08316.mb@bu3sch.de>

On Thursday 12 June 2008 04:20:04 Larry Finger wrote:
> Dale Walsh wrote:
> > I've been in touch with Broadcom a since I am considering having a card 
> > OEM'ed and it was discussed acquiring the API and a framework for driver 
> > programming in a custom OS so now I'm just waiting on approval.
> > 
> > Is there any other action I can take that would help???
> > 
> > Here is some information on the 11n based cards I have, I'm working on 
> > getting the b43 driver to recognize the card in the hopes that I can 
> > obtain a dump of the sprom data in case it's usefull.
> 
> I'm not sure the SPROM data will have any value at this time; however, 
> you need to have ssb recognize the device in order to get to the SPROM 
> values. That requires the PCI ID in ssb's tables. You will also need a 
> fairly recent kernel (2.6.26-rcX) if the devices have a 400 byte SPROM 
>   that is not rev 4. It may be necessary for b43 to be loaded, but the 
> SPROM can be read even if b43 doesn't recognize the device.

You don't need to load b43. Just modify ssb, load it and read the sprom
via /sys/foobar/ssb_sprom

-- 
Greetings Michael.


From mb at bu3sch.de  Thu Jun 12 11:58:56 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Jun 2008 11:58:56 +0200
Subject: [PATCH] b43: Fix possible NULL pointer dereference in DMA code
Message-ID: <200806121158.57287.mb@bu3sch.de>

This fixes a possible NULL pointer dereference in an error path of the
DMA allocation error checking code. This is also necessary for a future
DMA API change that is on its way into the mainline kernel that adds
an additional dev parameter to dma_mapping_error().

This patch moves the whole struct b43_dmaring struct initialization
right before any DMA allocation operation.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is a bugfix for 2.6.26


Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2008-06-12 11:49:24.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2008-06-12 11:50:10.000000000 +0200
@@ -792,30 +792,55 @@ struct b43_dmaring *b43_setup_dmaring(st
 				      int controller_index,
 				      int for_tx,
 				      enum b43_dmatype type)
 {
 	struct b43_dmaring *ring;
 	int err;
-	int nr_slots;
 	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
 		goto out;
-	ring->type = type;
 
-	nr_slots = B43_RXRING_SLOTS;
+	ring->nr_slots = B43_RXRING_SLOTS;
 	if (for_tx)
-		nr_slots = B43_TXRING_SLOTS;
+		ring->nr_slots = B43_TXRING_SLOTS;
 
-	ring->meta = kcalloc(nr_slots, sizeof(struct b43_dmadesc_meta),
+	ring->meta = kcalloc(ring->nr_slots, sizeof(struct b43_dmadesc_meta),
 			     GFP_KERNEL);
 	if (!ring->meta)
 		goto err_kfree_ring;
+
+	ring->type = type;
+	ring->dev = dev;
+	ring->mmio_base = b43_dmacontroller_base(type, controller_index);
+	ring->index = controller_index;
+	if (type == B43_DMA_64BIT)
+		ring->ops = &dma64_ops;
+	else
+		ring->ops = &dma32_ops;
 	if (for_tx) {
-		ring->txhdr_cache = kcalloc(nr_slots,
+		ring->tx = 1;
+		ring->current_slot = -1;
+	} else {
+		if (ring->index == 0) {
+			ring->rx_buffersize = B43_DMA0_RX_BUFFERSIZE;
+			ring->frameoffset = B43_DMA0_RX_FRAMEOFFSET;
+		} else if (ring->index == 3) {
+			ring->rx_buffersize = B43_DMA3_RX_BUFFERSIZE;
+			ring->frameoffset = B43_DMA3_RX_FRAMEOFFSET;
+		} else
+			B43_WARN_ON(1);
+	}
+	spin_lock_init(&ring->lock);
+#ifdef CONFIG_B43_DEBUG
+	ring->last_injected_overflow = jiffies;
+#endif
+
+	if (for_tx) {
+		ring->txhdr_cache = kcalloc(ring->nr_slots,
 					    b43_txhdr_size(dev),
 					    GFP_KERNEL);
 		if (!ring->txhdr_cache)
 			goto err_kfree_meta;
 
 		/* test for ability to dma to txhdr_cache */
@@ -825,13 +850,13 @@ struct b43_dmaring *b43_setup_dmaring(st
 					  DMA_TO_DEVICE);
 
 		if (b43_dma_mapping_error(ring, dma_test,
 					  b43_txhdr_size(dev), 1)) {
 			/* ugh realloc */
 			kfree(ring->txhdr_cache);
-			ring->txhdr_cache = kcalloc(nr_slots,
+			ring->txhdr_cache = kcalloc(ring->nr_slots,
 						    b43_txhdr_size(dev),
 						    GFP_KERNEL | GFP_DMA);
 			if (!ring->txhdr_cache)
 				goto err_kfree_meta;
 
 			dma_test = dma_map_single(dev->dev->dma_dev,
@@ -850,38 +875,12 @@ struct b43_dmaring *b43_setup_dmaring(st
 
 		dma_unmap_single(dev->dev->dma_dev,
 				 dma_test, b43_txhdr_size(dev),
 				 DMA_TO_DEVICE);
 	}
 
-	ring->dev = dev;
-	ring->nr_slots = nr_slots;
-	ring->mmio_base = b43_dmacontroller_base(type, controller_index);
-	ring->index = controller_index;
-	if (type == B43_DMA_64BIT)
-		ring->ops = &dma64_ops;
-	else
-		ring->ops = &dma32_ops;
-	if (for_tx) {
-		ring->tx = 1;
-		ring->current_slot = -1;
-	} else {
-		if (ring->index == 0) {
-			ring->rx_buffersize = B43_DMA0_RX_BUFFERSIZE;
-			ring->frameoffset = B43_DMA0_RX_FRAMEOFFSET;
-		} else if (ring->index == 3) {
-			ring->rx_buffersize = B43_DMA3_RX_BUFFERSIZE;
-			ring->frameoffset = B43_DMA3_RX_FRAMEOFFSET;
-		} else
-			B43_WARN_ON(1);
-	}
-	spin_lock_init(&ring->lock);
-#ifdef CONFIG_B43_DEBUG
-	ring->last_injected_overflow = jiffies;
-#endif
-
 	err = alloc_ringmemory(ring);
 	if (err)
 		goto err_kfree_txhdr_cache;
 	err = dmacontroller_setup(ring);
 	if (err)
 		goto err_free_ringmemory;


From mb at bu3sch.de  Thu Jun 12 12:36:29 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 12 Jun 2008 12:36:29 +0200
Subject: [PATCH] b43: Fix noise calculation WARN_ON
Message-ID: <200806121236.30255.mb@bu3sch.de>

This removes a WARN_ON that is responsible for the following koops:
http://www.kerneloops.org/searchweek.php?search=b43_generate_noise_sample

The comment in the patch describes why it's safe to simply remove
the check.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is a bugfix for 2.6.26


Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2008-06-12 11:42:49.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2008-06-12 12:03:29.000000000 +0200
@@ -646,13 +646,12 @@ struct b43_pio {
 
 	struct b43_pio_rxqueue *rx_queue;
 };
 
 /* Context information for a noise calculation (Link Quality). */
 struct b43_noise_calculation {
-	u8 channel_at_start;
 	bool calculation_running;
 	u8 nr_samples;
 	s8 samples[8][4];
 };
 
 struct b43_stats {
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-06-12 11:42:49.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-06-12 12:10:11.000000000 +0200
@@ -1142,22 +1142,20 @@ static void b43_jssi_write(struct b43_wl
 
 static void b43_generate_noise_sample(struct b43_wldev *dev)
 {
 	b43_jssi_write(dev, 0x7F7F7F7F);
 	b43_write32(dev, B43_MMIO_MACCMD,
 		    b43_read32(dev, B43_MMIO_MACCMD) | B43_MACCMD_BGNOISE);
-	B43_WARN_ON(dev->noisecalc.channel_at_start != dev->phy.channel);
 }
 
 static void b43_calculate_link_quality(struct b43_wldev *dev)
 {
 	/* Top half of Link Quality calculation. */
 
 	if (dev->noisecalc.calculation_running)
 		return;
-	dev->noisecalc.channel_at_start = dev->phy.channel;
 	dev->noisecalc.calculation_running = 1;
 	dev->noisecalc.nr_samples = 0;
 
 	b43_generate_noise_sample(dev);
 }
 
@@ -1168,15 +1166,22 @@ static void handle_irq_noise(struct b43_
 	u8 noise[4];
 	u8 i, j;
 	s32 average;
 
 	/* Bottom half of Link Quality calculation. */
 
+	/* Possible race condition: It might be possible that the user
+	 * changed to a different channel in the meantime since we
+	 * started the calculation. We ignore that fact, since it's
+	 * not really that much of a problem. The background noise is
+	 * an estimation only anyway. Slightly wrong results will get damped
+	 * by the averaging of the 8 sample rounds. Additionally the
+	 * value is shortlived. So it will be replaced by the next noise
+	 * calculation round soon. */
+
 	B43_WARN_ON(!dev->noisecalc.calculation_running);
-	if (dev->noisecalc.channel_at_start != phy->channel)
-		goto drop_calculation;
 	*((__le32 *)noise) = cpu_to_le32(b43_jssi_read(dev));
 	if (noise[0] == 0x7F || noise[1] == 0x7F ||
 	    noise[2] == 0x7F || noise[3] == 0x7F)
 		goto generate_new;
 
 	/* Get the noise samples. */
@@ -1211,17 +1216,16 @@ static void handle_irq_noise(struct b43_
 		if (tmp == 8)
 			average -= 72;
 		else
 			average -= 48;
 
 		dev->stats.link_noise = average;
-	      drop_calculation:
 		dev->noisecalc.calculation_running = 0;
 		return;
 	}
-      generate_new:
+generate_new:
 	b43_generate_noise_sample(dev);
 }
 
 static void handle_irq_tbtt_indication(struct b43_wldev *dev)
 {
 	if (b43_is_mode(dev->wl, IEEE80211_IF_TYPE_AP)) {


From felipe.maya at vexcorp.com  Thu Jun 12 22:39:55 2008
From: felipe.maya at vexcorp.com (Felipe Maya)
Date: Thu, 12 Jun 2008 16:39:55 -0400
Subject: hybrid-wl compilation
In-Reply-To: <48502F43.6040000@lwfinger.net>
References: <48500F14.8070300@canonical.com> <200806112047.00854.mb@bu3sch.de>
	<69e28c910806111250k4bfe0190h9cfd5937d47b1bbc@mail.gmail.com>
	<48502F43.6040000@lwfinger.net>
Message-ID: <1213303195.14554.34.camel@you>

Hi, it was my results of the compilation of
http://www.broadcom.com/support/802.11/linux_sta.php on openwrt
.....
make[5]: Leaving directory
`/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/linux-2.6.25.5'
make[4]: Leaving directory
`/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10'
make -C "/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/linux-2.6.25.5"
CROSS_COMPILE="mipsel-linux-uclibc-" ARCH="mips"
PATH="/opt/openwrt-2.6.25/staging_dir/toolchain-mipsel_gcc4.1.2/bin:/opt/openwrt-2.6.25/staging_dir/host/bin:/opt/openwrt-2.6.25/staging_dir/mipsel/host/bin:/opt/openwrt-2.6.23/staging_dir/toolchain-mipsel_gcc4.1.2/bin:/opt/openwrt-2.6.23/staging_dir/host/bin:/opt/openwrt-2.6.23/staging_dir/mipsel/host/bin:/opt/openwrt-2.6.23/staging_dir/toolchain-mipsel_gcc4.1.2/bin:/opt/openwrt-2.6.23/staging_dir/host/bin:/opt/openwrt-2.6.23/staging_dir/mipsel/host/bin::/usr/lib64/ccache:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/home/devel/bin" SUBDIRS="/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl" modules
make[4]: Entering directory
`/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/linux-2.6.25.5'
  LD
[M]  /opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/wl.o
mipsel-linux-uclibc-ld: /opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/lib/wlc_hybrid.o_shipped: Relocations in generic ELF (EM: 3)
mipsel-linux-uclibc-ld: /opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/lib/wlc_hybrid.o_shipped: Relocations in generic ELF (EM: 3)
mipsel-linux-uclibc-ld: /opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/lib/wlc_hybrid.o_shipped: Relocations in generic ELF (EM: 3)
/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/lib/wlc_hybrid.o_shipped: could not read symbols: File in wrong format
make[5]: ***
[/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/wl.o] Error 1
make[4]: ***
[_module_/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl] Error 2
make[4]: Leaving directory
`/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/linux-2.6.25.5'
make[3]: ***
[/opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/.built] Error 2
make[3]: Leaving directory `/opt/openwrt-2.6.25/package/mac80211'
make[2]: *** [package/mac80211/compile] Error 2
make[2]: Leaving directory `/opt/openwrt-2.6.25'
make[1]: ***
[/opt/openwrt-2.6.25/staging_dir/mipsel/stamp/.package_compile] Error 2
make[1]: Leaving directory `/opt/openwrt-2.6.25'
make: *** [world] Error 2




From proski at gnu.org  Thu Jun 12 21:48:22 2008
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 12 Jun 2008 15:48:22 -0400
Subject: hybrid-wl compilation
In-Reply-To: <1213303195.14554.34.camel@you>
References: <48500F14.8070300@canonical.com> <200806112047.00854.mb@bu3sch.de>
	<69e28c910806111250k4bfe0190h9cfd5937d47b1bbc@mail.gmail.com>
	<48502F43.6040000@lwfinger.net>  <1213303195.14554.34.camel@you>
Message-ID: <1213300102.6690.2.camel@dv>

On Thu, 2008-06-12 at 16:39 -0400, Felipe Maya wrote:
> Hi, it was my results of the compilation of
> http://www.broadcom.com/support/802.11/linux_sta.php on openwrt
...
> /opt/openwrt-2.6.25/build_dir/linux-brcm47xx/compat-wireless-2008-06-10/hybrid-wl/lib/wlc_hybrid.o_shipped: could not read symbols: File in wrong format

I guess you are trying to link an i386 object file into a mips kernel.

Binaries are for one architecture only.  Welcome to the closed source
world.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Fri Jun 13 00:22:39 2008
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 12 Jun 2008 18:22:39 -0400
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <200806091408.07618.mb@bu3sch.de>
References: <200806041716.53771.mb@bu3sch.de> <1212980626.26402.8.camel@dv>
	<200806091136.13358.mb@bu3sch.de>  <200806091408.07618.mb@bu3sch.de>
Message-ID: <1213309359.10534.3.camel@dv>

On Mon, 2008-06-09 at 14:08 +0200, Michael Buesch wrote:

> You can try the latest firmware from git, btw. It should be (partially) fixed there.

I've tried the today's version.  It's working in monitor mode.
Moreover, it scans in managed mode!  The only problem is that it fails
to associate, even to an AP with no security.  But there are no hangs
whatsoever.  That's core rev5 (bcm4306).

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Fri Jun 13 01:20:44 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 01:20:44 +0200
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <1213309359.10534.3.camel@dv>
References: <200806041716.53771.mb@bu3sch.de>
	<200806091408.07618.mb@bu3sch.de> <1213309359.10534.3.camel@dv>
Message-ID: <200806130120.44631.mb@bu3sch.de>

On Friday 13 June 2008 00:22:39 Pavel Roskin wrote:
> On Mon, 2008-06-09 at 14:08 +0200, Michael Buesch wrote:
> 
> > You can try the latest firmware from git, btw. It should be (partially) fixed there.
> 
> I've tried the today's version.  It's working in monitor mode.
> Moreover, it scans in managed mode!  The only problem is that it fails
> to associate, even to an AP with no security.  But there are no hangs
> whatsoever.  That's core rev5 (bcm4306).

Thanks for testing. TX is not implemented. No wonder it fails to assoc ;)


-- 
Greetings Michael.


From proski at gnu.org  Fri Jun 13 02:49:48 2008
From: proski at gnu.org (Pavel Roskin)
Date: Thu, 12 Jun 2008 20:49:48 -0400
Subject: b43 opensource firmware for monitor mode
In-Reply-To: <200806130120.44631.mb@bu3sch.de>
References: <200806041716.53771.mb@bu3sch.de>
	<200806091408.07618.mb@bu3sch.de> <1213309359.10534.3.camel@dv>
	<200806130120.44631.mb@bu3sch.de>
Message-ID: <1213318188.20744.3.camel@dv>

On Fri, 2008-06-13 at 01:20 +0200, Michael Buesch wrote: 
> On Friday 13 June 2008 00:22:39 Pavel Roskin wrote:
> > On Mon, 2008-06-09 at 14:08 +0200, Michael Buesch wrote:
> > 
> > > You can try the latest firmware from git, btw. It should be (partially) fixed there.
> > 
> > I've tried the today's version.  It's working in monitor mode.
> > Moreover, it scans in managed mode!  The only problem is that it fails
> > to associate, even to an AP with no security.  But there are no hangs
> > whatsoever.  That's core rev5 (bcm4306).
> 
> Thanks for testing. TX is not implemented. No wonder it fails to assoc ;)

No wonder even the big 7 dBi antenna didn't help :)

Anyway, it's great news.  It turns out bcm4318 with rev9 code is working
in monitor mode too!

-- 
Regards,
Pavel Roskin


From sbrown at cortland.com  Fri Jun 13 03:14:08 2008
From: sbrown at cortland.com (Steve Brown)
Date: Thu, 12 Jun 2008 18:14:08 -0700
Subject: bcm5354 hangs at b43/main.c:b43_switch_analog
Message-ID: <4851C9E0.9080905@cortland.com>

It hangs on "b43_write16(dev, B43_MMIO_PHY0, on ? 0 : 0xF4);" If I 
ignore the case where phy.type is 0, I get a little further, but it 
still fails. That output is included too.

The test rig is a bcm5354 in an Asus wl520gu and the b43, cfg, mac 
drivers are from a several day old wireless-testing tree. I'm running 
openwrt.

The same image on a bcm5352 in a Buffalo whr-hp-g54 insmods, loads 
firmware and associates using wpa_supplicant.

I've attached console output w/ printk's for both the 5352 and 5354.

If there's any further information I can provide or testing I can do, 
let me know.

Steve

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 5354-hang.txt
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080612/ad6ecf35/attachment.txt>

From dale at daleenterprise.com  Fri Jun 13 04:38:38 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Thu, 12 Jun 2008 22:38:38 -0400
Subject: bcm94321
In-Reply-To: <200806121116.08316.mb@bu3sch.de>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
	<485087D4.9040004@lwfinger.net> <200806121116.08316.mb@bu3sch.de>
Message-ID: <D63EFFC5-D294-45B9-83A6-B817A1CA67E8@daleenterprise.com>


On Jun 12, 2008, at 05:16 AM, Michael Buesch wrote:

> On Thursday 12 June 2008 04:20:04 Larry Finger wrote:
>> Dale Walsh wrote:
>>> I've been in touch with Broadcom a since I am considering having  
>>> a card
>>> OEM'ed and it was discussed acquiring the API and a framework for  
>>> driver
>>> programming in a custom OS so now I'm just waiting on approval.
>>>
>>> Is there any other action I can take that would help???
>>>
>>> Here is some information on the 11n based cards I have, I'm  
>>> working on
>>> getting the b43 driver to recognize the card in the hopes that I can
>>> obtain a dump of the sprom data in case it's usefull.
>>
>> I'm not sure the SPROM data will have any value at this time;  
>> however,
>> you need to have ssb recognize the device in order to get to the  
>> SPROM
>> values. That requires the PCI ID in ssb's tables. You will also  
>> need a
>> fairly recent kernel (2.6.26-rcX) if the devices have a 400 byte  
>> SPROM
>>   that is not rev 4. It may be necessary for b43 to be loaded, but  
>> the
>> SPROM can be read even if b43 doesn't recognize the device.
>
> You don't need to load b43. Just modify ssb, load it and read the  
> sprom
> via /sys/foobar/ssb_sprom
>
> -- 
> Greetings Michael.
>


ok, got the new kernel (2.6.26-rc5) installed as recommended.

Booted machine with WMP300N installed and did the following:
_______________________________

sudo -s

uname -r
	2.6.26.rc5-wifi-testing

modprobe b43

cd $(dirname $(find /sys/devices|grep sprom))

cp ssb_sprom ${HOME}/orig_sprom; # try using cp

ssb-sprom -i ${HOME}/orig_sprom -P
	Corrupt input data (crc: 0xA9, expected: 0xFF)

rm ${HOME}/orig_sprom; # delete the file just in case

cat ssb_sprom > ${HOME}/orig_sprom; # try using cat

ssb-sprom -i ${HOME}/orig_sprom -P
	Corrupt input data (crc: 0xA9, expected: 0xFF)

dmesg
	[19374.906129] ssb: Sonics Silicon Backplane found on PCI device  
0000:04:00.0
	[19374.936377] b43-phy2: Broadcom 4321 WLAN found
	[19374.977459] b43-phy2 ERROR: FOUND UNSUPPORTED PHY (Analog 5, Type  
4, Revision 1)
	[19374.977482] b43: probe of ssb0:0 failed with error -95
	[19374.977506] Broadcom 43xx driver loaded [ Features: PLR, Firmware- 
ID: FW13 ]
_______________________________

The results are the same for the WLI-PCI-G300N and as far as I can  
tell they physically appear to be the same card.

I have verified by viewing the subsystem_device and subsystem_vendor  
files do contain the correct information for the installed card so I  
can confirm it is working to some degree, at least it's recognizing  
the cards.

As I said, I don't need the wireless lan to be functional, just the  
ability to read/write the sprom data at this time.


-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080612/a2163b27/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080612/a2163b27/attachment.pgp>

From Larry.Finger at lwfinger.net  Fri Jun 13 05:07:14 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 12 Jun 2008 22:07:14 -0500
Subject: bcm94321
In-Reply-To: <D63EFFC5-D294-45B9-83A6-B817A1CA67E8@daleenterprise.com>
References: <C1399CC5-3039-40D3-9AB4-E94772764637@daleenterprise.com>
	<485087D4.9040004@lwfinger.net> <200806121116.08316.mb@bu3sch.de>
	<D63EFFC5-D294-45B9-83A6-B817A1CA67E8@daleenterprise.com>
Message-ID: <4851E462.1040609@lwfinger.net>

Dale Walsh wrote:
> 
> On Jun 12, 2008, at 05:16 AM, Michael Buesch wrote:
> 
>> On Thursday 12 June 2008 04:20:04 Larry Finger wrote:
>>> Dale Walsh wrote:
>>>> I've been in touch with Broadcom a since I am considering having a card 
>>>> OEM'ed and it was discussed acquiring the API and a framework for 
>>>> driver 
>>>> programming in a custom OS so now I'm just waiting on approval.
>>>>
>>>> Is there any other action I can take that would help???
>>>>
>>>> Here is some information on the 11n based cards I have, I'm working on 
>>>> getting the b43 driver to recognize the card in the hopes that I can 
>>>> obtain a dump of the sprom data in case it's usefull.
>>>
>>> I'm not sure the SPROM data will have any value at this time; however, 
>>> you need to have ssb recognize the device in order to get to the SPROM 
>>> values. That requires the PCI ID in ssb's tables. You will also need a 
>>> fairly recent kernel (2.6.26-rcX) if the devices have a 400 byte SPROM 
>>>   that is not rev 4. It may be necessary for b43 to be loaded, but the 
>>> SPROM can be read even if b43 doesn't recognize the device.
>>
>> You don't need to load b43. Just modify ssb, load it and read the sprom
>> via /sys/foobar/ssb_sprom
>>
>> -- 
>> Greetings Michael.
>>
> 
> ok, got the new kernel (2.6.26-rc5) installed as recommended.
> 
> Booted machine with WMP300N installed and did the following:
> _______________________________
> 
> sudo -s
> 
> uname -r
> 2.6.26.rc5-wifi-testing
> 
> modprobe b43
> 
> cd $(dirname $(find /sys/devices|grep sprom))
> 
> cp ssb_sprom ${HOME}/orig_sprom; # try using cp
> 
> ssb-sprom -i ${HOME}/orig_sprom -P
> Corrupt input data (crc: 0xA9, expected: 0xFF)
> 
> rm ${HOME}/orig_sprom; # delete the file just in case
> 
> cat ssb_sprom > ${HOME}/orig_sprom; # try using cat
> 
> ssb-sprom -i ${HOME}/orig_sprom -P
> Corrupt input data (crc: 0xA9, expected: 0xFF)
> 
> dmesg
> [19374.906129] ssb: Sonics Silicon Backplane found on PCI device 
> 0000:04:00.0
> [19374.936377] b43-phy2: Broadcom 4321 WLAN found
> [19374.977459] b43-phy2 ERROR: FOUND UNSUPPORTED PHY (Analog 5, Type 4, 
> Revision 1)
> [19374.977482] b43: probe of ssb0:0 failed with error -95
> [19374.977506] Broadcom 43xx driver loaded [ Features: PLR, Firmware-ID: 
> FW13 ]
> _______________________________
> 
> The results are the same for the WLI-PCI-G300N and as far as I can tell 
> they physically appear to be the same card.
> 
> I have verified by viewing the subsystem_device and subsystem_vendor 
> files do contain the correct information for the installed card so I can 
> confirm it is working to some degree, at least it's recognizing the cards.
> 
> As I said, I don't need the wireless lan to be functional, just the 
> ability to read/write the sprom data at this time.

For any SPROM not supported, ssb-sprom cannot handle it. If you 'cat
orig_sprom', you will get what you have. I expect it is a 440-byte
SPROM since ssb did not get a CRC error.

Be aware that you will have to figure out where the pertinent
information is located, and revise ssb-sprom to handle that revision
and layout before you will have any chance of modifying the data _AND_
update the CRC. If that is done wrong, and you write the SPROM with
faulty data, you will brick the device!

Larry



From Larry.Finger at lwfinger.net  Fri Jun 13 07:57:45 2008
From: Larry.Finger at lwfinger.net (Larry.Finger at lwfinger.net)
Date: Fri, 13 Jun 2008 00:57:45 -0500
Subject: ssb-sprom: Fix for incorrect Subsystem and PCI Product IDs on rev 4
	SPROMs
Message-ID: <48520c59.gA/QUyLFPL8FLEpZ%Larry.Finger@lwfinger.net>

In current ssb-sprom code, the Subsystem and Product ID's are wrong for rev 4
SPROM's.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: ssb_sprom/ssb_sprom.h
===================================================================
--- ssb_sprom.orig/ssb_sprom.h
+++ ssb_sprom/ssb_sprom.h
@@ -33,10 +33,10 @@
 
 /* byte offsets */
 #define SPROM_SUBP		(0x02 * 2)
-#define SPROM4_SUBP		(0x00 * 2)
+#define SPROM4_SUBP		(0x02 * 2)
 #define SPROM_SUBV		(0x03 * 2)
 #define SPROM_PPID		(0x04 * 2)
-#define SPROM4_PPID		(0x02 * 2)
+#define SPROM4_PPID		(0x04 * 2)
 #define SPROM_BFLHI		(0x1C * 2)
 #define SPROM_IL0MACADDR	(0x24 * 2)
 #define SPROM_ET0MACADDR	(0x27 * 2)


From mb at bu3sch.de  Fri Jun 13 10:44:55 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 10:44:55 +0200
Subject: bcm5354 hangs at b43/main.c:b43_switch_analog
In-Reply-To: <4851C9E0.9080905@cortland.com>
References: <4851C9E0.9080905@cortland.com>
Message-ID: <200806131044.56278.mb@bu3sch.de>

On Friday 13 June 2008 03:14:08 Steve Brown wrote:
> b43-phy0 ERROR: FOUND UNSUPPORTED PHY (Analog 6, Type 5, Revision 0)

LP PHYs are not supported, yet.
I'm not sure if I can send a patch in that converts this error message to
triple-uppercase. Why do people always ignore it?

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Jun 13 10:47:33 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 10:47:33 +0200
Subject: [PATCH] ssb: Fix for incorrect Subsystem and PCI Product IDs on rev 4
	SPROMs
Message-ID: <200806131047.33710.mb@bu3sch.de>

From: Larry.Finger at lwfinger.net

In current ssb-sprom code, the Subsystem and Product ID's are wrong for rev 4
SPROM's.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
Signed-off-by: Michael Buesch <mb at bu3sch.de>
---

John, this is a bugfix for 2.6.26.


Index: ssb_sprom/ssb_sprom.h
===================================================================
--- ssb_sprom.orig/ssb_sprom.h
+++ ssb_sprom/ssb_sprom.h
@@ -33,10 +33,10 @@
 
 /* byte offsets */
 #define SPROM_SUBP		(0x02 * 2)
-#define SPROM4_SUBP		(0x00 * 2)
+#define SPROM4_SUBP		(0x02 * 2)
 #define SPROM_SUBV		(0x03 * 2)
 #define SPROM_PPID		(0x04 * 2)
-#define SPROM4_PPID		(0x02 * 2)
+#define SPROM4_PPID		(0x04 * 2)
 #define SPROM_BFLHI		(0x1C * 2)
 #define SPROM_IL0MACADDR	(0x24 * 2)
 #define SPROM_ET0MACADDR	(0x27 * 2)

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Fri Jun 13 16:50:05 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 13 Jun 2008 09:50:05 -0500
Subject: [PATCH] ssb: Fix for incorrect Subsystem and PCI Product IDs
	on rev 4 SPROMs
In-Reply-To: <200806131047.33710.mb@bu3sch.de>
References: <200806131047.33710.mb@bu3sch.de>
Message-ID: <4852891D.10600@lwfinger.net>

Michael Buesch wrote:
> From: Larry.Finger at lwfinger.net
> 
> In current ssb-sprom code, the Subsystem and Product ID's are wrong for rev 4
> SPROM's.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> ---
> 
> John, this is a bugfix for 2.6.26.
> 
> 
> Index: ssb_sprom/ssb_sprom.h
> ===================================================================
> --- ssb_sprom.orig/ssb_sprom.h
> +++ ssb_sprom/ssb_sprom.h
> @@ -33,10 +33,10 @@
>  
>  /* byte offsets */
>  #define SPROM_SUBP		(0x02 * 2)
> -#define SPROM4_SUBP		(0x00 * 2)
> +#define SPROM4_SUBP		(0x02 * 2)
>  #define SPROM_SUBV		(0x03 * 2)
>  #define SPROM_PPID		(0x04 * 2)
> -#define SPROM4_PPID		(0x02 * 2)
> +#define SPROM4_PPID		(0x04 * 2)
>  #define SPROM_BFLHI		(0x1C * 2)
>  #define SPROM_IL0MACADDR	(0x24 * 2)
>  #define SPROM_ET0MACADDR	(0x27 * 2)
> 

The patch is for ssb-sprom, not ssb. If I still have any of my feeble 
mind left, ssb-sprom has not become part of the kernel. John, you can 
ignore this patch.

Larry





From mb at bu3sch.de  Fri Jun 13 16:56:31 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 16:56:31 +0200
Subject: [PATCH] ssb: Fix for incorrect Subsystem and PCI Product IDs on
	rev 4 SPROMs
In-Reply-To: <200806131047.33710.mb@bu3sch.de>
References: <200806131047.33710.mb@bu3sch.de>
Message-ID: <200806131656.32463.mb@bu3sch.de>

On Friday 13 June 2008 10:47:33 Michael Buesch wrote:
> From: Larry.Finger at lwfinger.net
> 
> In current ssb-sprom code, the Subsystem and Product ID's are wrong for rev 4
> SPROM's.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> ---
> 
> John, this is a bugfix for 2.6.26.
> 
> 
> Index: ssb_sprom/ssb_sprom.h
> ===================================================================
> --- ssb_sprom.orig/ssb_sprom.h
> +++ ssb_sprom/ssb_sprom.h

Oh, this changes the ssb userland tool. So I better apply it instead
of sending it to random unrelated people :P

> @@ -33,10 +33,10 @@
>  
>  /* byte offsets */
>  #define SPROM_SUBP		(0x02 * 2)
> -#define SPROM4_SUBP		(0x00 * 2)
> +#define SPROM4_SUBP		(0x02 * 2)
>  #define SPROM_SUBV		(0x03 * 2)
>  #define SPROM_PPID		(0x04 * 2)
> -#define SPROM4_PPID		(0x02 * 2)
> +#define SPROM4_PPID		(0x04 * 2)
>  #define SPROM_BFLHI		(0x1C * 2)
>  #define SPROM_IL0MACADDR	(0x24 * 2)
>  #define SPROM_ET0MACADDR	(0x27 * 2)
> 



-- 
Greetings Michael.


From proski at gnu.org  Fri Jun 13 17:31:53 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 13 Jun 2008 11:31:53 -0400
Subject: [PATCH] b43-tools typos
Message-ID: <1213371113.29669.1.camel@dv>

diff --git a/ssb_sprom/ssb_sprom.c b/ssb_sprom/ssb_sprom.c
index 2b05e9f..facacab 100644
--- a/ssb_sprom/ssb_sprom.c
+++ b/ssb_sprom/ssb_sprom.c
@@ -16,7 +16,7 @@
 
   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.
 
 */
@@ -398,7 +398,7 @@ static void display_value(const uint8_t *sprom,
 		value = sprom[offset];
 		break;
 	case VALUE_SUBP:
-		desc = "Subsytem product ID";
+		desc = "Subsystem product ID";
 		if (sprom_rev == 4)
 			offset = SPROM4_SUBP;
 		else
@@ -937,7 +937,7 @@ static void print_usage(int argc, char *argv[])
 	prdata("  -g|--rawget OFF       Get a value at a byte-OFFset\n");
 	prdata("\n");
 	prdata("Predefined values (for displaying (GET) or modification):\n");
-	prdata("  --subp [0xFFFF]       Subsytem product ID for PCI\n");
+	prdata("  --subp [0xFFFF]       Subsystem product ID for PCI\n");
 	prdata("  --subv [0xFFFF]       Subsystem vendor ID for PCI\n");
 	prdata("  --ppid [0xFFFF]       Product ID for PCI\n");
 	prdata("  --bflhi [0xFFFF]      High 16 bits of boardflags (only if spromversion > 1)\n");
diff --git a/ssb_sprom/ssb_sprom.h b/ssb_sprom/ssb_sprom.h
index 4b44e95..68d690f 100644
--- a/ssb_sprom/ssb_sprom.h
+++ b/ssb_sprom/ssb_sprom.h
@@ -16,7 +16,7 @@
 
   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.
 
 */
diff --git a/ssb_sprom/utils.c b/ssb_sprom/utils.c
index 5d3189e..b57b415 100644
--- a/ssb_sprom/utils.c
+++ b/ssb_sprom/utils.c
@@ -16,7 +16,7 @@
 
   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.  If not, write to
-  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.
 
 */

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Fri Jun 13 17:33:05 2008
From: proski at gnu.org (Pavel Roskin)
Date: Fri, 13 Jun 2008 11:33:05 -0400
Subject: [PATCH] b43-ucode typos
Message-ID: <1213371185.29669.3.camel@dv>

diff --git a/common/ieee80211.inc b/common/ieee80211.inc
index 4942b47..a550a2e 100644
--- a/common/ieee80211.inc
+++ b/common/ieee80211.inc
@@ -2,7 +2,7 @@
 #define IEEE80211_DEFINITIONS_H_
 
 /* Some IEEE 802.11 definitions in this file are derived from the linux kernel
- * inlude/linux/ieee80211.h file and are covered by the following copyrights.
+ * include/linux/ieee80211.h file and are covered by the following copyrights.
  *
  * Copyright (c) 2001-2002, SSH Communications Security Corp and Jouni Malinen
  * Copyright (c) 2002-2003, Jouni Malinen
@@ -52,7 +52,7 @@
 #define FTYPE_CTL			(0x0004 >> FCTL_FTYPE_S)
 #define FTYPE_DATA			(0x0008 >> FCTL_FTYPE_S)
 
-/* Management frame substypes (rightshifted!) */
+/* Management frame subtypes (rightshifted!) */
 #define STYPE_ASSOC_REQ			(0x0000 >> FCTL_STYPE_S)
 #define STYPE_ASSOC_RESP		(0x0010 >> FCTL_STYPE_S)
 #define STYPE_REASSOC_REQ		(0x0020 >> FCTL_STYPE_S)
diff --git a/common/shm.inc b/common/shm.inc
index 799ec40..091bcf7 100644
--- a/common/shm.inc
+++ b/common/shm.inc
@@ -29,7 +29,7 @@
 #define  SHM_HF_LO_SYMW		1 /* bit1: G-PHY SYM workaround */
 #define  SHM_HF_LO_RXPULLW	2 /* bit2: RX pullup workaround */
 #define  SHM_HF_LO_CCKBOOST	3 /* bit3: 4dB CCK power boost (exclusive with OFDM boost) */
-#define  SHM_HF_LO_BTCOEX	4 /* bit4: Bluetooth coexistance */
+#define  SHM_HF_LO_BTCOEX	4 /* bit4: Bluetooth coexistence */
 #define  SHM_HF_LO_GDCW		5 /* bit5: G-PHY DC canceller filter bw workaround */
 #define  SHM_HF_LO_OFDMPABOOST	6 /* bit6: Enable PA gain boost for OFDM */
 #define  SHM_HF_LO_ACPR		7 /* bit7: Disable for Japan, channel 14 */
@@ -43,14 +43,14 @@
 #define  SHM_HF_LO_USEDEFKEYS	14 /* bit14: Enable use of default keys */
 #define  SHM_HF_LO_AFTERBURNER	15 /* bit15: Afterburner enabled */
 #define SHM_HF_MI		SHM(0x060) /* Hostflags for ucode options (middle) */
-#define  SHM_HF_MI_BT4PRIOCOEX	0 /* bit0: Bluetooth 4-priority coexistance */
+#define  SHM_HF_MI_BT4PRIOCOEX	0 /* bit0: Bluetooth 4-priority coexistence */
 #define  SHM_HF_MI_FWKUP	1 /* bit1: Fast wake-up ucode */
 #define  SHM_HF_MI_VCORECALC	2 /* bit2: Force VCO recalculation when powering up synthpu */
 #define  SHM_HF_MI_PCISCW	3 /* bit3: PCI slow clock workaround */
 #define  SHM_HF_MI_4318TSSI	5 /* bit5: 4318 TSSI */
 #define  SHM_HF_MI_FBCMCFIFO	6 /* bit6: Flush bcast/mcast FIFO immediately */
-#define  SHM_HF_MI_HWPCTL	7 /* bit7: Enable hardwarre power control */
-#define  SHM_HF_MI_BTCOEXALT	8 /* bit8: Bluetooth coexistance in alternate pins */
+#define  SHM_HF_MI_HWPCTL	7 /* bit7: Enable hardware power control */
+#define  SHM_HF_MI_BTCOEXALT	8 /* bit8: Bluetooth coexistence in alternate pins */
 #define  SHM_HF_MI_TXBTCHECK	9 /* bit9: Bluetooth check during transmission */
 #define  SHM_HF_MI_SKCFPUP	10 /* bit10: Skip CFP update */
 #define  SHM_HF_MI_N40W		11 /* bit11: N PHY 40 MHz workaround (rev >= 13 only) */
diff --git a/common/spr.inc b/common/spr.inc
index 8a657e9..27e8924 100644
--- a/common/spr.inc
+++ b/common/spr.inc
@@ -305,7 +305,7 @@
 #define SPR_TSF_0x44				spr122
 #define SPR_TSF_GPT0_STAT			spr123
 #define  GPT_STAT_EN				15 /* bit15: Enable the timer */
-#define  GPT_STAT_8MHZ				14 /* bit14: Use 8MHz base (otherwise 88Mhz) */
+#define  GPT_STAT_8MHZ				14 /* bit14: Use 8MHz base (otherwise 88MHz) */
 #define SPR_TSF_GPT1_STAT			spr124
 #define SPR_TSF_GPT0_CNTLO			spr125
 #define SPR_TSF_GPT1_CNTLO			spr126
diff --git a/rev5/ucode5.asm b/rev5/ucode5.asm
index 6cb8a2c..da5670a 100644
--- a/rev5/ucode5.asm
+++ b/rev5/ucode5.asm
@@ -169,7 +169,7 @@ check_events:
 	jnext COND_4_C7, h_channel_setup
 	extcond_eoi_only(COND_PHY6)
 
-	/* Ok, all done. Go idle for a while... */
+	/* OK, all done. Go idle for a while... */
 
 eventloop_idle:
 	mov 0, R_WATCHDOG
@@ -470,7 +470,7 @@ h_rx_complete_handler:
  * Link Register: lr0
  * The result is returned in Ra:
  *   Ra == 0 -> OK
- *   Ra == 1 -> Fifo overflow
+ *   Ra == 1 -> FIFO overflow
  */
 put_rx_frame_into_fifo:
 	mov SHM_RXHDR, SPR_RXE_RXHDR_OFFSET
@@ -630,7 +630,7 @@ create_bg_noise_sample:
 	jext COND_TX_NOW, out_restore+
 	jne SPR_TSF_WORD0, Ra, wait_calmdown- //FIXME we should check for NOW = Ra or later here. Not trivial with wrapping.
 
-	/* Ok, channel is empty. Read the JSSI. It will represent the channel
+	/* OK, channel is empty. Read the JSSI. It will represent the channel
 	 * noise now. */
 	mov BPHY_JSSI, Ra
 	call lr0, phy_read
@@ -647,7 +647,7 @@ create_bg_noise_sample:
 	add Rj, 1, Rj /* Increment the counter */
 	jne Rj, 4, bgn_measure_loop- /* Do it 4 times */
 
-	/* Ok, done. Got the 4 samples. If we took less than 131 mS of time
+	/* OK, done. Got the 4 samples. If we took less than 131 mS of time
 	 * for the whole thing, we wait an additional grace period to make
 	 * sure the channel really was quiet while measuring. */
 	je Ri, 1, bgn_measure_done+

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Fri Jun 13 17:45:07 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 17:45:07 +0200
Subject: [PATCH] b43-tools typos
In-Reply-To: <1213371113.29669.1.camel@dv>
References: <1213371113.29669.1.camel@dv>
Message-ID: <200806131745.08749.mb@bu3sch.de>

On Friday 13 June 2008 17:31:53 Pavel Roskin wrote:
> diff --git a/ssb_sprom/ssb_sprom.c b/ssb_sprom/ssb_sprom.c
> index 2b05e9f..facacab 100644
> --- a/ssb_sprom/ssb_sprom.c
> +++ b/ssb_sprom/ssb_sprom.c
> @@ -16,7 +16,7 @@
>  
>    You should have received a copy of the GNU General Public License
>    along with this program; see the file COPYING.  If not, write to
> -  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
> +  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,

Ok, well. I know about this. This is a typo by the FSF.
Anyway, let's apply it.

>    Boston, MA 02110-1301, USA.
>  
>  */
> @@ -398,7 +398,7 @@ static void display_value(const uint8_t *sprom,
>  		value = sprom[offset];
>  		break;
>  	case VALUE_SUBP:
> -		desc = "Subsytem product ID";
> +		desc = "Subsystem product ID";
>  		if (sprom_rev == 4)
>  			offset = SPROM4_SUBP;
>  		else
> @@ -937,7 +937,7 @@ static void print_usage(int argc, char *argv[])
>  	prdata("  -g|--rawget OFF       Get a value at a byte-OFFset\n");
>  	prdata("\n");
>  	prdata("Predefined values (for displaying (GET) or modification):\n");
> -	prdata("  --subp [0xFFFF]       Subsytem product ID for PCI\n");
> +	prdata("  --subp [0xFFFF]       Subsystem product ID for PCI\n");
>  	prdata("  --subv [0xFFFF]       Subsystem vendor ID for PCI\n");
>  	prdata("  --ppid [0xFFFF]       Product ID for PCI\n");
>  	prdata("  --bflhi [0xFFFF]      High 16 bits of boardflags (only if spromversion > 1)\n");
> diff --git a/ssb_sprom/ssb_sprom.h b/ssb_sprom/ssb_sprom.h
> index 4b44e95..68d690f 100644
> --- a/ssb_sprom/ssb_sprom.h
> +++ b/ssb_sprom/ssb_sprom.h
> @@ -16,7 +16,7 @@
>  
>    You should have received a copy of the GNU General Public License
>    along with this program; see the file COPYING.  If not, write to
> -  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
> +  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
>    Boston, MA 02110-1301, USA.
>  
>  */
> diff --git a/ssb_sprom/utils.c b/ssb_sprom/utils.c
> index 5d3189e..b57b415 100644
> --- a/ssb_sprom/utils.c
> +++ b/ssb_sprom/utils.c
> @@ -16,7 +16,7 @@
>  
>    You should have received a copy of the GNU General Public License
>    along with this program; see the file COPYING.  If not, write to
> -  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
> +  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
>    Boston, MA 02110-1301, USA.
>  
>  */
> 



-- 
Greetings Michael.


From mb at bu3sch.de  Fri Jun 13 17:51:41 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 13 Jun 2008 17:51:41 +0200
Subject: [PATCH] b43-ucode typos
In-Reply-To: <1213371185.29669.3.camel@dv>
References: <1213371185.29669.3.camel@dv>
Message-ID: <200806131751.41991.mb@bu3sch.de>

On Friday 13 June 2008 17:33:05 Pavel Roskin wrote:
> ...

applied, thanks.


-- 
Greetings Michael.


From mb at bu3sch.de  Sat Jun 14 15:53:42 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Jun 2008 15:53:42 +0200
Subject: b43 open-firmware new snapshot
Message-ID: <200806141553.42420.mb@bu3sch.de>

Hi,

Here comes another snapshot of the Opensource firmware for
the b43 wireless core.
http://bu3sch.de/b43/openfw/b43-openfw-20080614.tar.bz2

The firmware does _ONLY_ work in monitor mode. The TX path is not implemented,
so it can not associate or whatever. It can only receive packets.

This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.
You can see the core revision by turning on SSB debugging.
It will print something like:
ssb: Core X found: IEEE 802.11 (cc 0x812, rev 0x05, vendor 0x4243)
As you can see there's the revision number in hex.

If you want to test this, first get latest wireless-testing.git kernel driver.
Then get the firmware tarball and extract it.
The tarball contains the full sourcecode and a set of prebuilt binaries.
(If you want to rebuild the stuff, you need to get the assembler toolchain
from http://git.bu3sch.de/git/b43-tools.git).
There are binaries with debugging code (in bin-debug subdir) and without
debugging code (in bin subdir). You want to start with the non-debugging
version for testing. You might want to check the debugging version, if
you see any problems. It might print some useful hints in the kernel
driver for what is going wrong.

Simply get the *.fw files from bin/rev5/ in the tarball and copy them
into /lib/firmware/b43-open.
Then load b43 from latest wireless-testing.git with the module
parameter fwpostfix=-open

-- 
Greetings Michael.


From mb at bu3sch.de  Sat Jun 14 23:00:14 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Jun 2008 23:00:14 +0200
Subject: [PATCH stable] b43: Fix noise calculation WARN_ON
Message-ID: <200806142300.15391.mb@bu3sch.de>

This removes a WARN_ON that is responsible for the following koops:
http://www.kerneloops.org/searchweek.php?search=b43_generate_noise_sample

The comment in the patch describes why it's safe to simply remove
the check.

This patch is upstream in John Linville's wireless-testing.git tree
as commit 86ef1ae07289c9f0aa1aa310d43653e513e6f124

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: linux-2.6.25.6/drivers/net/wireless/b43/b43.h
===================================================================
--- linux-2.6.25.6.orig/drivers/net/wireless/b43/b43.h	2008-06-14 22:43:28.000000000 +0200
+++ linux-2.6.25.6/drivers/net/wireless/b43/b43.h	2008-06-14 22:47:02.000000000 +0200
@@ -593,13 +593,12 @@ struct b43_dma {
 	struct b43_dmaring *rx_ring0;
 	struct b43_dmaring *rx_ring3;	/* only available on core.rev < 5 */
 };
 
 /* Context information for a noise calculation (Link Quality). */
 struct b43_noise_calculation {
-	u8 channel_at_start;
 	bool calculation_running;
 	u8 nr_samples;
 	s8 samples[8][4];
 };
 
 struct b43_stats {
Index: linux-2.6.25.6/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.25.6.orig/drivers/net/wireless/b43/main.c	2008-06-14 22:44:16.000000000 +0200
+++ linux-2.6.25.6/drivers/net/wireless/b43/main.c	2008-06-14 22:47:02.000000000 +0200
@@ -1024,22 +1024,20 @@ static void b43_jssi_write(struct b43_wl
 
 static void b43_generate_noise_sample(struct b43_wldev *dev)
 {
 	b43_jssi_write(dev, 0x7F7F7F7F);
 	b43_write32(dev, B43_MMIO_MACCMD,
 		    b43_read32(dev, B43_MMIO_MACCMD) | B43_MACCMD_BGNOISE);
-	B43_WARN_ON(dev->noisecalc.channel_at_start != dev->phy.channel);
 }
 
 static void b43_calculate_link_quality(struct b43_wldev *dev)
 {
 	/* Top half of Link Quality calculation. */
 
 	if (dev->noisecalc.calculation_running)
 		return;
-	dev->noisecalc.channel_at_start = dev->phy.channel;
 	dev->noisecalc.calculation_running = 1;
 	dev->noisecalc.nr_samples = 0;
 
 	b43_generate_noise_sample(dev);
 }
 
@@ -1050,15 +1048,22 @@ static void handle_irq_noise(struct b43_
 	u8 noise[4];
 	u8 i, j;
 	s32 average;
 
 	/* Bottom half of Link Quality calculation. */
 
+	/* Possible race condition: It might be possible that the user
+	 * changed to a different channel in the meantime since we
+	 * started the calculation. We ignore that fact, since it's
+	 * not really that much of a problem. The background noise is
+	 * an estimation only anyway. Slightly wrong results will get damped
+	 * by the averaging of the 8 sample rounds. Additionally the
+	 * value is shortlived. So it will be replaced by the next noise
+	 * calculation round soon. */
+
 	B43_WARN_ON(!dev->noisecalc.calculation_running);
-	if (dev->noisecalc.channel_at_start != phy->channel)
-		goto drop_calculation;
 	*((__le32 *)noise) = cpu_to_le32(b43_jssi_read(dev));
 	if (noise[0] == 0x7F || noise[1] == 0x7F ||
 	    noise[2] == 0x7F || noise[3] == 0x7F)
 		goto generate_new;
 
 	/* Get the noise samples. */
@@ -1093,17 +1098,16 @@ static void handle_irq_noise(struct b43_
 		if (tmp == 8)
 			average -= 72;
 		else
 			average -= 48;
 
 		dev->stats.link_noise = average;
-	      drop_calculation:
 		dev->noisecalc.calculation_running = 0;
 		return;
 	}
-      generate_new:
+generate_new:
 	b43_generate_noise_sample(dev);
 }
 
 static void handle_irq_tbtt_indication(struct b43_wldev *dev)
 {
 	if (b43_is_mode(dev->wl, IEEE80211_IF_TYPE_AP)) {


From mb at bu3sch.de  Sat Jun 14 22:57:55 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 14 Jun 2008 22:57:55 +0200
Subject: [PATCH stable] b43: Fix possible NULL pointer dereference in DMA code
Message-ID: <200806142257.55946.mb@bu3sch.de>

This fixes a possible NULL pointer dereference in an error path of the
DMA allocation error checking code. In case the DMA allocation address is invalid,
the dev pointer is dereferenced for unmapping of the buffer.

This is a cut-down version of 3ab4b64c46784ed83f213bf4e1b51d9c55858600
which is upstream in John Linville's wireless-testing.git tree.

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: linux-2.6.25.6/drivers/net/wireless/b43/dma.c
===================================================================
--- linux-2.6.25.6.orig/drivers/net/wireless/b43/dma.c	2008-06-14 22:43:28.000000000 +0200
+++ linux-2.6.25.6/drivers/net/wireless/b43/dma.c	2008-06-14 22:45:30.000000000 +0200
@@ -847,12 +847,13 @@ struct b43_dmaring *b43_setup_dmaring(st
 	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
 		goto out;
 	ring->type = type;
+	ring->dev = dev;
 
 	nr_slots = B43_RXRING_SLOTS;
 	if (for_tx)
 		nr_slots = B43_TXRING_SLOTS;
 
 	ring->meta = kcalloc(nr_slots, sizeof(struct b43_dmadesc_meta),
@@ -898,13 +899,12 @@ struct b43_dmaring *b43_setup_dmaring(st
 
 		dma_unmap_single(dev->dev->dma_dev,
 				 dma_test, b43_txhdr_size(dev),
 				 DMA_TO_DEVICE);
 	}
 
-	ring->dev = dev;
 	ring->nr_slots = nr_slots;
 	ring->mmio_base = b43_dmacontroller_base(type, controller_index);
 	ring->index = controller_index;
 	if (type == B43_DMA_64BIT)
 		ring->ops = &dma64_ops;
 	else


From linville at tuxdriver.com  Sun Jun 15 02:40:56 2008
From: linville at tuxdriver.com (John W. Linville)
Date: Sat, 14 Jun 2008 20:40:56 -0400
Subject: [PATCH stable] b43: Fix noise calculation WARN_ON
In-Reply-To: <200806142300.15391.mb@bu3sch.de>
References: <200806142300.15391.mb@bu3sch.de>
Message-ID: <20080615004056.GB1396@tuxdriver.com>

On Sat, Jun 14, 2008 at 11:00:14PM +0200, Michael Buesch wrote:
> This removes a WARN_ON that is responsible for the following koops:
> http://www.kerneloops.org/searchweek.php?search=b43_generate_noise_sample
> 
> The comment in the patch describes why it's safe to simply remove
> the check.
> 
> This patch is upstream in John Linville's wireless-testing.git tree
> as commit 86ef1ae07289c9f0aa1aa310d43653e513e6f124

...and will probably be 98a3b2fe435ae76170936c14f5c9e6a87548e3ef
in linux-2.6.git.

John
-- 
John W. Linville
linville at tuxdriver.com


From linville at tuxdriver.com  Sun Jun 15 02:40:19 2008
From: linville at tuxdriver.com (John W. Linville)
Date: Sat, 14 Jun 2008 20:40:19 -0400
Subject: [PATCH stable] b43: Fix possible NULL pointer dereference in
	DMA code
In-Reply-To: <200806142257.55946.mb@bu3sch.de>
References: <200806142257.55946.mb@bu3sch.de>
Message-ID: <20080615004018.GA1396@tuxdriver.com>

On Sat, Jun 14, 2008 at 10:57:55PM +0200, Michael Buesch wrote:
> This fixes a possible NULL pointer dereference in an error path of the
> DMA allocation error checking code. In case the DMA allocation address is invalid,
> the dev pointer is dereferenced for unmapping of the buffer.
> 
> This is a cut-down version of 3ab4b64c46784ed83f213bf4e1b51d9c55858600
> which is upstream in John Linville's wireless-testing.git tree.

...which will probably be 028118a5f09a9c807e6b43e2231efdff9f224c74
in linux-2.6.git

John
-- 
John W. Linville
linville at tuxdriver.com


From mb at bu3sch.de  Sun Jun 15 15:17:29 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Jun 2008 15:17:29 +0200
Subject: [PATCH] b43: Do not return TX_BUSY from op_tx
Message-ID: <200806151517.30230.mb@bu3sch.de>

Never return TX_BUSY from op_tx. It doesn't make sense to return
TX_BUSY, if we can not transmit the packet.
Drop the packet and return TX_OK.
This will fix the resume hang.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is a bugfix for 2.6.26.


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-06-15 14:33:49.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-06-15 14:36:31.000000000 +0200
@@ -2973,18 +2973,17 @@ static int b43_op_tx(struct ieee80211_hw
 	struct b43_wldev *dev = wl->current_dev;
 	unsigned long flags;
 	int err;
 
 	if (unlikely(skb->len < 2 + 2 + 6)) {
 		/* Too short, this can't be a valid frame. */
-		dev_kfree_skb_any(skb);
-		return NETDEV_TX_OK;
+		goto drop_packet;
 	}
 	B43_WARN_ON(skb_shinfo(skb)->nr_frags);
 	if (unlikely(!dev))
-		return NETDEV_TX_BUSY;
+		goto drop_packet;
 
 	/* Transmissions on seperate queues can run concurrently. */
 	read_lock_irqsave(&wl->tx_lock, flags);
 
 	err = -ENODEV;
 	if (likely(b43_status(dev) >= B43_STAT_STARTED)) {
@@ -2994,13 +2993,18 @@ static int b43_op_tx(struct ieee80211_hw
 			err = b43_dma_tx(dev, skb);
 	}
 
 	read_unlock_irqrestore(&wl->tx_lock, flags);
 
 	if (unlikely(err))
-		return NETDEV_TX_BUSY;
+		goto drop_packet;
+	return NETDEV_TX_OK;
+
+drop_packet:
+	/* We can not transmit this packet. Drop it. */
+	dev_kfree_skb_any(skb);
 	return NETDEV_TX_OK;
 }
 
 /* Locking: wl->irq_lock */
 static void b43_qos_params_upload(struct b43_wldev *dev,
 				  const struct ieee80211_tx_queue_params *p,


From mb at bu3sch.de  Sun Jun 15 15:27:49 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Jun 2008 15:27:49 +0200
Subject: [PATCH] b43legacy: Do not return TX_BUSY from op_tx
Message-ID: <200806151527.49961.mb@bu3sch.de>

Never return TX_BUSY from op_tx. It doesn't make sense to return
TX_BUSY, if we can not transmit the packet.
Drop the packet and return TX_OK.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, this is a bugfix for 2.6.26.


Index: wireless-testing/drivers/net/wireless/b43legacy/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/main.c	2008-06-06 15:54:17.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43legacy/main.c	2008-06-15 15:22:37.000000000 +0200
@@ -2374,14 +2374,16 @@ static int b43legacy_op_tx(struct ieee80
 		spin_lock_irqsave(&wl->irq_lock, flags);
 		err = b43legacy_pio_tx(dev, skb);
 		spin_unlock_irqrestore(&wl->irq_lock, flags);
 	} else
 		err = b43legacy_dma_tx(dev, skb);
 out:
-	if (unlikely(err))
-		return NETDEV_TX_BUSY;
+	if (unlikely(err)) {
+		/* Drop the packet. */
+		dev_kfree_skb_any(skb);
+	}
 	return NETDEV_TX_OK;
 }
 
 static int b43legacy_op_conf_tx(struct ieee80211_hw *hw, u16 queue,
 				const struct ieee80211_tx_queue_params *params)
 {


From mb at bu3sch.de  Sun Jun 15 16:01:24 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Jun 2008 16:01:24 +0200
Subject: [PATCH] b43: Fix possible MMIO access while device is down
Message-ID: <200806151601.24322.mb@bu3sch.de>

This fixes a possible MMIO access while the device is still down
from a suspend cycle. MMIO accesses with the device powered down
may cause crashes on certain devices.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for 2.6.26


Index: wireless-testing/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.c	2008-05-15 23:31:37.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.c	2008-06-15 15:55:42.000000000 +0200
@@ -69,12 +69,15 @@ static void b43_led_brightness_set(struc
 				   enum led_brightness brightness)
 {
 	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
 	struct b43_wldev *dev = led->dev;
 	bool radio_enabled;
 
+	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED))
+		return;
+
 	/* Checking the radio-enabled status here is slightly racy,
 	 * but we want to avoid the locking overhead and we don't care
 	 * whether the LED has the wrong state for a second. */
 	radio_enabled = (dev->phy.radio_on && dev->radio_hw_enable);
 
 	if (brightness == LED_OFF || !radio_enabled)


From netrolller.3d at gmail.com  Sun Jun 15 19:57:29 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 15 Jun 2008 19:57:29 +0200
Subject: [PATCH] b43-ucode typos
In-Reply-To: <200806131751.41991.mb@bu3sch.de>
References: <1213371185.29669.3.camel@dv> <200806131751.41991.mb@bu3sch.de>
Message-ID: <69e28c910806151057q1103d17chccc10c13cec2d001@mail.gmail.com>

On Fri, Jun 13, 2008 at 5:51 PM, Michael Buesch <mb at bu3sch.de> wrote:
>
> On Friday 13 June 2008 17:33:05 Pavel Roskin wrote:
> > ...
>
> applied, thanks.
>
>

BTW "/* OK, done. Got the 4 samples. If we took less than 131 mS of
time" should be "/* OK, done. Got the 4 samples. If we took less than
131ms of time".


From netrolller.3d at gmail.com  Sun Jun 15 20:20:27 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Sun, 15 Jun 2008 20:20:27 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <200806141553.42420.mb@bu3sch.de>
References: <200806141553.42420.mb@bu3sch.de>
Message-ID: <69e28c910806151120p116cb57dgf29b68c205e44668@mail.gmail.com>

On Sat, Jun 14, 2008 at 3:53 PM, Michael Buesch <mb at bu3sch.de> wrote:
> This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.

There are reports of it working on rev.9 cores. Is that possible?
(Resend of previous mail to the list.)

--
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Jun 15 22:03:57 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 15 Jun 2008 22:03:57 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <69e28c910806151120p116cb57dgf29b68c205e44668@mail.gmail.com>
References: <200806141553.42420.mb@bu3sch.de>
	<69e28c910806151120p116cb57dgf29b68c205e44668@mail.gmail.com>
Message-ID: <200806152203.57903.mb@bu3sch.de>

On Sunday 15 June 2008 20:20:27 Stefanik G?bor wrote:
> On Sat, Jun 14, 2008 at 3:53 PM, Michael Buesch <mb at bu3sch.de> wrote:
> > This firmware does _only_ work on wireless core revisions 5, 6, 7, 8 or 10.
> 
> There are reports of it working on rev.9 cores. Is that possible?
> (Resend of previous mail to the list.)

Yes it is possible. But there _are_ differences in rev9.
So I won't guarantee it will work.


-- 
Greetings Michael.


From sbrown at cortland.com  Mon Jun 16 00:38:19 2008
From: sbrown at cortland.com (Steve Brown)
Date: Sun, 15 Jun 2008 15:38:19 -0700
Subject: oops loading b43 driver w/ 4318 minipci card (but works on bcm5352)
Message-ID: <485599DB.3070002@cortland.com>

This same card works on an x86 and on this wl500gp (bcm4704) w/ asus 
code. If I flash the same image on a bcm5352 (whr-hp-g54), the driver 
loads, the firmware loads and I get scan results.

Both the x86 and the wl500gp used the same ssb code and b43 code and 
firmware.  I'm using yesterday's wireless-testing.

The first oops was in b43/main.c:b43_phy_versioning at the read from 
B43_MMIO_RADIO_DATA_HIGH. I used logic similar to that used for the 4317 
to set the radio info to what I got from the x86 and got a little further.

The second oops was at ssb/main.c:1034 at the read from SSB_IDLOW. The 
output is attached.

Any idea why some of these reads give bus errors?

Steve
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43-oops-1.txt
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080615/ce7a43be/attachment.txt>

From david at identd.dyndns.org  Tue Jun 17 22:59:52 2008
From: david at identd.dyndns.org (David Ellingsworth)
Date: Tue, 17 Jun 2008 16:59:52 -0400
Subject: b43legacy kernel warning
Message-ID: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>

I ran into this error today from a kernel I built last night based on
the latest wireless-testing branch. Correct me if I'm wrong, but it
looks to be b43legacy related. I'm a bit new to kernel debugging but
can try to provide additional information if instructions on how to do
so are provided.

--------------------------------------------------------------------------------------
dmesg output:
--------------------------------------------------------------------------------------
WARNING: at kernel/softirq.c:141 local_bh_enable+0x1f/0x59()
Modules linked in: ipt_MASQUERADE iptable_nat nf_nat nf_conntrack_ipv4
nf_conntrack ip_tables x_tables radeon drm binfmt_misc ppdev lp
dm_snapshot dm_mirror dm_log dm_mod b43legacy mac80211 cfg80211
led_class snd_ali5451 snd_ac97_codec ac97_bus snd_pcm_oss
snd_mixer_oss ati_agp ibmcam usbvideo ssb pcmcia snd_pcm snd_timer
evdev videodev v4l1_compat container battery ac button firmware_class
agpgart i2c_ali1535 snd video output parport_pc parport yenta_socket
rsrc_nonstatic pcmcia_core psmouse serio_raw i2c_ali15x3 i2c_core
soundcore snd_page_alloc pcspkr reiserfs ide_cd_mod cdrom ide_disk
alim15x3 natsemi ide_pci_generic ide_core ohci_hcd usbcore thermal
processor fan
Pid: 1371, comm: b43legacy Not tainted 2.6.26-rc6-wl #1
 [<c0113be7>] warn_on_slowpath+0x40/0x66
 [<c0111c60>] check_preempt_wakeup+0xa2/0xc0
 [<c0120d0d>] autoremove_wake_function+0xc/0x2b
 [<c010fc44>] __wake_up_common+0x2d/0x52
 [<c011126e>] __wake_up+0xf/0x15
 [<c0113f89>] wake_up_klogd+0x2b/0x2d
 [<c01981ed>] scnprintf+0x1f/0x2b
 [<c0117477>] local_bh_enable+0x1f/0x59
 [<dcf44045>] __sta_info_unlink+0xa9/0x134 [mac80211]
 [<dcf4453f>] sta_info_unlink+0x9/0xd [mac80211]
 [<dcf48968>] ieee80211_associated+0x9f/0x148 [mac80211]
 [<dcf4b463>] ieee80211_sta_work+0x4cb/0x64f [mac80211]
 [<c0110392>] update_curr+0x3d/0x52
 [<c01104ee>] dequeue_entity+0xf/0x8d
 [<c0111979>] dequeue_task_fair+0x13/0x27
 [<c010fab2>] dequeue_task+0xa/0x14
 [<c0249b01>] schedule+0x22e/0x24a
 [<dcf4af98>] ieee80211_sta_work+0x0/0x64f [mac80211]
 [<c011e7a7>] run_workqueue+0x63/0xca
 [<c011ec96>] worker_thread+0x0/0xb7
 [<c011ed42>] worker_thread+0xac/0xb7
 [<c0120d01>] autoremove_wake_function+0x0/0x2b
 [<c011ec96>] worker_thread+0x0/0xb7
 [<c0120ba6>] kthread+0x36/0x5c
 [<c0120b70>] kthread+0x0/0x5c
 [<c010390b>] kernel_thread_helper+0x7/0x10
----------------------------------------------------------------------------------------
relevant lspci information:
----------------------------------------------------------------------------------------
00:09.0 0280: 14e4:4320 (rev 02)
        Subsystem: 0e11:00e7
        Flags: bus master, fast devsel, latency 64, IRQ 10
        Memory at d0000000 (32-bit, non-prefetchable) [size=8K]
        Capabilities: <access denied>
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb

---------------------------------------------------------------------------------------
b43legacy info:
---------------------------------------------------------------------------------------
b43legacy-phy0: Broadcom 4306 WLAN found
b43legacy-phy0 debug: Found PHY: Analog 1, Type 2, Revision 1
b43legacy-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43legacy-phy0 debug: Radio initialized
b43legacy-phy0: Loading firmware version 0x127, patch level 14
(2005-04-18 02:36:27)
b43legacy-phy0 debug: Chip initialized
b43legacy-phy0 debug: 30-bit DMA initialized
b43legacy-phy0 debug: Wireless interface started
b43legacy-phy0 debug: Adding Interface type 2
b43legacy-phy0 warning: Unexpected value for chanstat (0x7C00)

Regards,

David Ellingsworth


From proski at gnu.org  Tue Jun 17 23:19:49 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 17 Jun 2008 17:19:49 -0400
Subject: b43legacy kernel warning
In-Reply-To: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
Message-ID: <1213737589.13058.7.camel@dv>

On Tue, 2008-06-17 at 16:59 -0400, David Ellingsworth wrote:
> I ran into this error today from a kernel I built last night based on
> the latest wireless-testing branch. Correct me if I'm wrong, but it
> looks to be b43legacy related. I'm a bit new to kernel debugging but
> can try to provide additional information if instructions on how to do
> so are provided.
...
> WARNING: at kernel/softirq.c:141 local_bh_enable+0x1f/0x59()
...
>  [<c0117477>] local_bh_enable+0x1f/0x59
>  [<dcf44045>] __sta_info_unlink+0xa9/0x134 [mac80211]
>  [<dcf4453f>] sta_info_unlink+0x9/0xd [mac80211]

It looks like __sta_info_unlink() from net/mac80211/sta_info.c tries to
enable softirqs while hardirqs are disabled.  That doesn't appear to be
specific to the driver.  Perhaps it should be reported to
linux-wireless.

> b43legacy-phy0 warning: Unexpected value for chanstat (0x7C00)

That is b43legacy related.  The driver only expects B43legacy_PHYTYPE_B
(1) or B43legacy_PHYTYPE_G (2) in the lower two bytes of chanstat, but
it's 0.

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Tue Jun 17 23:20:18 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 17 Jun 2008 23:20:18 +0200
Subject: mac80211 local_bh_enable called with IRQs disabled (was: b43legacy
	kernel warning)
In-Reply-To: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
Message-ID: <200806172320.18778.mb@bu3sch.de>

On Tuesday 17 June 2008 22:59:52 David Ellingsworth wrote:
> I ran into this error today from a kernel I built last night based on
> the latest wireless-testing branch. Correct me if I'm wrong, but it
> looks to be b43legacy related. I'm a bit new to kernel debugging but
> can try to provide additional information if instructions on how to do
> so are provided.

No, this is a mac80211 bug

> --------------------------------------------------------------------------------------
> dmesg output:
> --------------------------------------------------------------------------------------
> WARNING: at kernel/softirq.c:141 local_bh_enable+0x1f/0x59()
> Modules linked in: ipt_MASQUERADE iptable_nat nf_nat nf_conntrack_ipv4
> nf_conntrack ip_tables x_tables radeon drm binfmt_misc ppdev lp
> dm_snapshot dm_mirror dm_log dm_mod b43legacy mac80211 cfg80211
> led_class snd_ali5451 snd_ac97_codec ac97_bus snd_pcm_oss
> snd_mixer_oss ati_agp ibmcam usbvideo ssb pcmcia snd_pcm snd_timer
> evdev videodev v4l1_compat container battery ac button firmware_class
> agpgart i2c_ali1535 snd video output parport_pc parport yenta_socket
> rsrc_nonstatic pcmcia_core psmouse serio_raw i2c_ali15x3 i2c_core
> soundcore snd_page_alloc pcspkr reiserfs ide_cd_mod cdrom ide_disk
> alim15x3 natsemi ide_pci_generic ide_core ohci_hcd usbcore thermal
> processor fan
> Pid: 1371, comm: b43legacy Not tainted 2.6.26-rc6-wl #1
>  [<c0113be7>] warn_on_slowpath+0x40/0x66
>  [<c0111c60>] check_preempt_wakeup+0xa2/0xc0
>  [<c0120d0d>] autoremove_wake_function+0xc/0x2b
>  [<c010fc44>] __wake_up_common+0x2d/0x52
>  [<c011126e>] __wake_up+0xf/0x15
>  [<c0113f89>] wake_up_klogd+0x2b/0x2d
>  [<c01981ed>] scnprintf+0x1f/0x2b
>  [<c0117477>] local_bh_enable+0x1f/0x59
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
This function does not like being run with IRQs disabled.
WARN_ON_ONCE(irqs_disabled());

>  [<dcf44045>] __sta_info_unlink+0xa9/0x134 [mac80211]
>  [<dcf4453f>] sta_info_unlink+0x9/0xd [mac80211]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
This function disables interrupts

>  [<dcf48968>] ieee80211_associated+0x9f/0x148 [mac80211]
>  [<dcf4b463>] ieee80211_sta_work+0x4cb/0x64f [mac80211]
>  [<c0110392>] update_curr+0x3d/0x52
>  [<c01104ee>] dequeue_entity+0xf/0x8d
>  [<c0111979>] dequeue_task_fair+0x13/0x27
>  [<c010fab2>] dequeue_task+0xa/0x14
>  [<c0249b01>] schedule+0x22e/0x24a
>  [<dcf4af98>] ieee80211_sta_work+0x0/0x64f [mac80211]
>  [<c011e7a7>] run_workqueue+0x63/0xca
>  [<c011ec96>] worker_thread+0x0/0xb7
>  [<c011ed42>] worker_thread+0xac/0xb7
>  [<c0120d01>] autoremove_wake_function+0x0/0x2b
>  [<c011ec96>] worker_thread+0x0/0xb7
>  [<c0120ba6>] kthread+0x36/0x5c
>  [<c0120b70>] kthread+0x0/0x5c
>  [<c010390b>] kernel_thread_helper+0x7/0x10


I'm not sure _why_ local_bh_enable() doesn't like getting called
with interrupts disabled.
The code is a bit weird:

134 void local_bh_enable(void)
135 {
136 #ifdef CONFIG_TRACE_IRQFLAGS
137         unsigned long flags;
138 
139         WARN_ON_ONCE(in_irq());
140 #endif
141         WARN_ON_ONCE(irqs_disabled());
142 
143 #ifdef CONFIG_TRACE_IRQFLAGS
144         local_irq_save(flags);
145 #endif
146         /*
147          * Are softirqs going to be turned on now:
148          */
149         if (softirq_count() == SOFTIRQ_OFFSET)
150                 trace_softirqs_on((unsigned long)__builtin_return_address(0));
151         /*
152          * Keep preemption disabled until we are done with
153          * softirq processing:
154          */
155         sub_preempt_count(SOFTIRQ_OFFSET - 1);
156 
157         if (unlikely(!in_interrupt() && local_softirq_pending()))
158                 do_softirq();
159 
160         dec_preempt_count();
161 #ifdef CONFIG_TRACE_IRQFLAGS
162         local_irq_restore(flags);
163 #endif
164         preempt_check_resched();
165 }
166 EXPORT_SYMBOL(local_bh_enable);



-- 
Greetings Michael.


From david at identd.dyndns.org  Tue Jun 17 23:41:42 2008
From: david at identd.dyndns.org (David Ellingsworth)
Date: Tue, 17 Jun 2008 17:41:42 -0400
Subject: mac80211 local_bh_enable called with IRQs disabled (was:
	b43legacy kernel warning)
In-Reply-To: <200806172320.18778.mb@bu3sch.de>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
	<200806172320.18778.mb@bu3sch.de>
Message-ID: <30353c3d0806171441s5043e14bof78d44a3abd419b2@mail.gmail.com>

On Tue, Jun 17, 2008 at 5:20 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Tuesday 17 June 2008 22:59:52 David Ellingsworth wrote:
>> I ran into this error today from a kernel I built last night based on
>> the latest wireless-testing branch. Correct me if I'm wrong, but it
>> looks to be b43legacy related. I'm a bit new to kernel debugging but
>> can try to provide additional information if instructions on how to do
>> so are provided.
>
> No, this is a mac80211 bug
>
>> --------------------------------------------------------------------------------------
>> dmesg output:
>> --------------------------------------------------------------------------------------
>> WARNING: at kernel/softirq.c:141 local_bh_enable+0x1f/0x59()
>> Modules linked in: ipt_MASQUERADE iptable_nat nf_nat nf_conntrack_ipv4
>> nf_conntrack ip_tables x_tables radeon drm binfmt_misc ppdev lp
>> dm_snapshot dm_mirror dm_log dm_mod b43legacy mac80211 cfg80211
>> led_class snd_ali5451 snd_ac97_codec ac97_bus snd_pcm_oss
>> snd_mixer_oss ati_agp ibmcam usbvideo ssb pcmcia snd_pcm snd_timer
>> evdev videodev v4l1_compat container battery ac button firmware_class
>> agpgart i2c_ali1535 snd video output parport_pc parport yenta_socket
>> rsrc_nonstatic pcmcia_core psmouse serio_raw i2c_ali15x3 i2c_core
>> soundcore snd_page_alloc pcspkr reiserfs ide_cd_mod cdrom ide_disk
>> alim15x3 natsemi ide_pci_generic ide_core ohci_hcd usbcore thermal
>> processor fan
>> Pid: 1371, comm: b43legacy Not tainted 2.6.26-rc6-wl #1
>>  [<c0113be7>] warn_on_slowpath+0x40/0x66
>>  [<c0111c60>] check_preempt_wakeup+0xa2/0xc0
>>  [<c0120d0d>] autoremove_wake_function+0xc/0x2b
>>  [<c010fc44>] __wake_up_common+0x2d/0x52
>>  [<c011126e>] __wake_up+0xf/0x15
>>  [<c0113f89>] wake_up_klogd+0x2b/0x2d
>>  [<c01981ed>] scnprintf+0x1f/0x2b
>>  [<c0117477>] local_bh_enable+0x1f/0x59
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> This function does not like being run with IRQs disabled.
> WARN_ON_ONCE(irqs_disabled());
>
>>  [<dcf44045>] __sta_info_unlink+0xa9/0x134 [mac80211]
>>  [<dcf4453f>] sta_info_unlink+0x9/0xd [mac80211]
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> This function disables interrupts
>
>>  [<dcf48968>] ieee80211_associated+0x9f/0x148 [mac80211]
>>  [<dcf4b463>] ieee80211_sta_work+0x4cb/0x64f [mac80211]
>>  [<c0110392>] update_curr+0x3d/0x52
>>  [<c01104ee>] dequeue_entity+0xf/0x8d
>>  [<c0111979>] dequeue_task_fair+0x13/0x27
>>  [<c010fab2>] dequeue_task+0xa/0x14
>>  [<c0249b01>] schedule+0x22e/0x24a
>>  [<dcf4af98>] ieee80211_sta_work+0x0/0x64f [mac80211]
>>  [<c011e7a7>] run_workqueue+0x63/0xca
>>  [<c011ec96>] worker_thread+0x0/0xb7
>>  [<c011ed42>] worker_thread+0xac/0xb7
>>  [<c0120d01>] autoremove_wake_function+0x0/0x2b
>>  [<c011ec96>] worker_thread+0x0/0xb7
>>  [<c0120ba6>] kthread+0x36/0x5c
>>  [<c0120b70>] kthread+0x0/0x5c
>>  [<c010390b>] kernel_thread_helper+0x7/0x10
>
>
> I'm not sure _why_ local_bh_enable() doesn't like getting called
> with interrupts disabled.
> The code is a bit weird:
>
> 134 void local_bh_enable(void)
> 135 {
> 136 #ifdef CONFIG_TRACE_IRQFLAGS
> 137         unsigned long flags;
> 138
> 139         WARN_ON_ONCE(in_irq());
> 140 #endif
> 141         WARN_ON_ONCE(irqs_disabled());
> 142
> 143 #ifdef CONFIG_TRACE_IRQFLAGS
> 144         local_irq_save(flags);
> 145 #endif
> 146         /*
> 147          * Are softirqs going to be turned on now:
> 148          */
> 149         if (softirq_count() == SOFTIRQ_OFFSET)
> 150                 trace_softirqs_on((unsigned long)__builtin_return_address(0));
> 151         /*
> 152          * Keep preemption disabled until we are done with
> 153          * softirq processing:
> 154          */
> 155         sub_preempt_count(SOFTIRQ_OFFSET - 1);
> 156
> 157         if (unlikely(!in_interrupt() && local_softirq_pending()))
> 158                 do_softirq();
> 159
> 160         dec_preempt_count();
> 161 #ifdef CONFIG_TRACE_IRQFLAGS
> 162         local_irq_restore(flags);
> 163 #endif
> 164         preempt_check_resched();
> 165 }
> 166 EXPORT_SYMBOL(local_bh_enable);
>
>
>
> --
> Greetings Michael.
>

Thanks for clarifying. Is this something that might be caused by a
missing configuration option in my kernel?


From david at identd.dyndns.org  Tue Jun 17 23:44:16 2008
From: david at identd.dyndns.org (David Ellingsworth)
Date: Tue, 17 Jun 2008 17:44:16 -0400
Subject: b43legacy kernel warning
In-Reply-To: <30353c3d0806171438m6526cae5y4b5d18991c8b0379@mail.gmail.com>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
	<1213737589.13058.7.camel@dv>
	<30353c3d0806171438m6526cae5y4b5d18991c8b0379@mail.gmail.com>
Message-ID: <30353c3d0806171444p12ec04edpe1401a9e2f2755ed@mail.gmail.com>

CCing list
On Tue, Jun 17, 2008 at 5:38 PM, David Ellingsworth
<david at identd.dyndns.org> wrote:
> On Tue, Jun 17, 2008 at 5:19 PM, Pavel Roskin <proski at gnu.org> wrote:
>> On Tue, 2008-06-17 at 16:59 -0400, David Ellingsworth wrote:
>>> I ran into this error today from a kernel I built last night based on
>>> the latest wireless-testing branch. Correct me if I'm wrong, but it
>>> looks to be b43legacy related. I'm a bit new to kernel debugging but
>>> can try to provide additional information if instructions on how to do
>>> so are provided.
>> ...
>>> WARNING: at kernel/softirq.c:141 local_bh_enable+0x1f/0x59()
>> ...
>>>  [<c0117477>] local_bh_enable+0x1f/0x59
>>>  [<dcf44045>] __sta_info_unlink+0xa9/0x134 [mac80211]
>>>  [<dcf4453f>] sta_info_unlink+0x9/0xd [mac80211]
>>
>> It looks like __sta_info_unlink() from net/mac80211/sta_info.c tries to
>> enable softirqs while hardirqs are disabled.  That doesn't appear to be
>> specific to the driver.  Perhaps it should be reported to
>> linux-wireless.
>>
>>> b43legacy-phy0 warning: Unexpected value for chanstat (0x7C00)
>>
>> That is b43legacy related.  The driver only expects B43legacy_PHYTYPE_B
>> (1) or B43legacy_PHYTYPE_G (2) in the lower two bytes of chanstat, but
>> it's 0.
>>
> ^^^^^^^^^^^^^^^^^
> I've been seeing this warning for a while, and have reviewed the code
> where this occurs but have yet to pinpoint the cause. From what I can
> tell, it hasn't caused problems in the past and is the reason it is
> marked as a warning.
>> --
>> Regards,
>> Pavel Roskin
>>
>
> On another note, I'd like to add, that I see a 25% packet loss while
> pinging my wireless router under Linux but I'm not sure of the cause.
> Under Windows XP, at the same distance I don't experience any packet
> loss so I can only conclude that it is something driver related as of
> yet.
>
> Regards,
>
> David Ellingsworth
>


From dale at daleenterprise.com  Wed Jun 18 08:02:29 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 18 Jun 2008 02:02:29 -0400
Subject: ssb-sprom data discrepancy
In-Reply-To: <200806151318.23158.mb@bu3sch.de>
References: <48520c59.gA/QUyLFPL8FLEpZ%Larry.Finger@lwfinger.net>
	<BB7A6F89-B101-4D4E-AE56-27728A081E81@daleenterprise.com>
	<200806151318.23158.mb@bu3sch.de>
Message-ID: <EDD91CA7-8FA6-4A6F-8D3B-45415E88DDB9@daleenterprise.com>

I was interested in modifying some parameters for a miniPCI card and  
a PCI card in an attempt to increase transmit power and gain, turn on  
the second antenna on the minipci card and anthing else that would  
improve performance but before flashing I thought I'd verify the  
changes and make sure I had my setting right but instead I'm shocked.

So, either the app is displaying the wrong data or the wrong data is  
being modified so rather than being destructive and bricking a card I  
thought I'd ask the masters.

Something that interest me is that the N-PHY cards have 3 antennas  
and according to Buffalo Technology Technical support the  
characteristics for all 3 antennas are configurable in the sprom  
which is supposed to include an option for the middle antenna to be  
in regular or diversity mode.

Is there a table somewhere that decodes the sprom and denotes what  
each bit represents in a combined byte?


The source used in the ssb-sprom app was taken at 1:15am EST June  
17th so it was the latest available from git 24 hours ago.



Here's my session and it's clear that something is wrong: (two  
examples given, due to size I didn't provide all the tests, had  
issues adjusting gain)

75XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antga 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A88FF000010FFFFFFFFFF02C4
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x88
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antgbg 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A0288000010FFFFFFFFFF029A
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080618/aef96aec/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080618/aef96aec/attachment.pgp>

From johannes at sipsolutions.net  Wed Jun 18 12:02:47 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 18 Jun 2008 12:02:47 +0200
Subject: mac80211 local_bh_enable called with IRQs disabled (was:
	b43legacy kernel warning)
In-Reply-To: <200806172320.18778.mb@bu3sch.de>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
	<200806172320.18778.mb@bu3sch.de>
Message-ID: <1213783367.1312.2.camel@johannes.berg>

On Tue, 2008-06-17 at 23:20 +0200, Michael Buesch wrote:
> On Tuesday 17 June 2008 22:59:52 David Ellingsworth wrote:
> > I ran into this error today from a kernel I built last night based on
> > the latest wireless-testing branch. Correct me if I'm wrong, but it
> > looks to be b43legacy related. I'm a bit new to kernel debugging but
> > can try to provide additional information if instructions on how to do
> > so are provided.
> 
> No, this is a mac80211 bug

Can you try the patch below?

johannes

--- everything.orig/net/mac80211/sta_info.h	2008-06-18 10:07:24.000000000 +0200
+++ everything/net/mac80211/sta_info.h	2008-06-18 11:58:32.000000000 +0200
@@ -164,6 +164,7 @@ struct sta_ampdu_mlme {
  * @aid: STA's unique AID (1..2007, 0 = not assigned yet),
  *	only used in AP (and IBSS?) mode
  * @flags: STA flags, see &enum ieee80211_sta_info_flags
+ * @flaglock: spinlock for flags accesses
  * @ps_tx_buf: buffer of frames to transmit to this station
  *	when it leaves power saving state
  * @tx_filtered: buffer of frames we already tried to transmit
@@ -186,6 +187,7 @@ struct sta_info {
 	struct rate_control_ref *rate_ctrl;
 	void *rate_ctrl_priv;
 	spinlock_t lock;
+	spinlock_t flaglock;
 	struct ieee80211_ht_info ht_info;
 	u64 supp_rates[IEEE80211_NUM_BANDS];
 	u8 addr[ETH_ALEN];
@@ -198,7 +200,10 @@ struct sta_info {
 	 */
 	u8 pin_status;
 
-	/* frequently updated information, locked with lock spinlock */
+	/*
+	 * frequently updated, locked with own spinlock (flaglock),
+	 * use the accessors defined below
+	 */
 	u32 flags;
 
 	/*
@@ -293,34 +298,41 @@ static inline enum plink_state sta_plink
 
 static inline void set_sta_flags(struct sta_info *sta, const u32 flags)
 {
-	spin_lock_bh(&sta->lock);
+	unsigned long irqfl;
+
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	sta->flags |= flags;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 }
 
 static inline void clear_sta_flags(struct sta_info *sta, const u32 flags)
 {
-	spin_lock_bh(&sta->lock);
+	unsigned long irqfl;
+
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	sta->flags &= ~flags;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 }
 
 static inline void set_and_clear_sta_flags(struct sta_info *sta,
 					   const u32 set, const u32 clear)
 {
-	spin_lock_bh(&sta->lock);
+	unsigned long irqfl;
+
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	sta->flags |= set;
 	sta->flags &= ~clear;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 }
 
 static inline u32 test_sta_flags(struct sta_info *sta, const u32 flags)
 {
 	u32 ret;
+	unsigned long irqfl;
 
-	spin_lock_bh(&sta->lock);
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	ret = sta->flags & flags;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 
 	return ret;
 }
@@ -329,11 +341,12 @@ static inline u32 test_and_clear_sta_fla
 					   const u32 flags)
 {
 	u32 ret;
+	unsigned long irqfl;
 
-	spin_lock_bh(&sta->lock);
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	ret = sta->flags & flags;
 	sta->flags &= ~flags;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 
 	return ret;
 }
@@ -341,10 +354,11 @@ static inline u32 test_and_clear_sta_fla
 static inline u32 get_sta_flags(struct sta_info *sta)
 {
 	u32 ret;
+	unsigned long irqfl;
 
-	spin_lock_bh(&sta->lock);
+	spin_lock_irqsave(&sta->flaglock, irqfl);
 	ret = sta->flags;
-	spin_unlock_bh(&sta->lock);
+	spin_unlock_irqrestore(&sta->flaglock, irqfl);
 
 	return ret;
 }
--- everything.orig/net/mac80211/sta_info.c	2008-06-18 11:56:44.000000000 +0200
+++ everything/net/mac80211/sta_info.c	2008-06-18 11:56:58.000000000 +0200
@@ -235,6 +235,7 @@ struct sta_info *sta_info_alloc(struct i
 		return NULL;
 
 	spin_lock_init(&sta->lock);
+	spin_lock_init(&sta->flaglock);
 
 	memcpy(sta->addr, addr, ETH_ALEN);
 	sta->local = local;




From david at identd.dyndns.org  Wed Jun 18 14:30:53 2008
From: david at identd.dyndns.org (David Ellingsworth)
Date: Wed, 18 Jun 2008 08:30:53 -0400
Subject: mac80211 local_bh_enable called with IRQs disabled (was:
	b43legacy kernel warning)
In-Reply-To: <1213783367.1312.2.camel@johannes.berg>
References: <30353c3d0806171359k6d7be389g23dfc809f288d2f1@mail.gmail.com>
	<200806172320.18778.mb@bu3sch.de>
	<1213783367.1312.2.camel@johannes.berg>
Message-ID: <30353c3d0806180530j745e9a19p60e2a929e52eddec@mail.gmail.com>

On Wed, Jun 18, 2008 at 6:02 AM, Johannes Berg
<johannes at sipsolutions.net> wrote:
> On Tue, 2008-06-17 at 23:20 +0200, Michael Buesch wrote:
>> On Tuesday 17 June 2008 22:59:52 David Ellingsworth wrote:
>> > I ran into this error today from a kernel I built last night based on
>> > the latest wireless-testing branch. Correct me if I'm wrong, but it
>> > looks to be b43legacy related. I'm a bit new to kernel debugging but
>> > can try to provide additional information if instructions on how to do
>> > so are provided.
>>
>> No, this is a mac80211 bug
>
> Can you try the patch below?
>
> johannes
>
> --- everything.orig/net/mac80211/sta_info.h     2008-06-18 10:07:24.000000000 +0200
> +++ everything/net/mac80211/sta_info.h  2008-06-18 11:58:32.000000000 +0200
> @@ -164,6 +164,7 @@ struct sta_ampdu_mlme {
>  * @aid: STA's unique AID (1..2007, 0 = not assigned yet),
>  *     only used in AP (and IBSS?) mode
>  * @flags: STA flags, see &enum ieee80211_sta_info_flags
> + * @flaglock: spinlock for flags accesses
>  * @ps_tx_buf: buffer of frames to transmit to this station
>  *     when it leaves power saving state
>  * @tx_filtered: buffer of frames we already tried to transmit
> @@ -186,6 +187,7 @@ struct sta_info {
>        struct rate_control_ref *rate_ctrl;
>        void *rate_ctrl_priv;
>        spinlock_t lock;
> +       spinlock_t flaglock;
>        struct ieee80211_ht_info ht_info;
>        u64 supp_rates[IEEE80211_NUM_BANDS];
>        u8 addr[ETH_ALEN];
> @@ -198,7 +200,10 @@ struct sta_info {
>         */
>        u8 pin_status;
>
> -       /* frequently updated information, locked with lock spinlock */
> +       /*
> +        * frequently updated, locked with own spinlock (flaglock),
> +        * use the accessors defined below
> +        */
>        u32 flags;
>
>        /*
> @@ -293,34 +298,41 @@ static inline enum plink_state sta_plink
>
>  static inline void set_sta_flags(struct sta_info *sta, const u32 flags)
>  {
> -       spin_lock_bh(&sta->lock);
> +       unsigned long irqfl;
> +
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        sta->flags |= flags;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>  }
>
>  static inline void clear_sta_flags(struct sta_info *sta, const u32 flags)
>  {
> -       spin_lock_bh(&sta->lock);
> +       unsigned long irqfl;
> +
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        sta->flags &= ~flags;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>  }
>
>  static inline void set_and_clear_sta_flags(struct sta_info *sta,
>                                           const u32 set, const u32 clear)
>  {
> -       spin_lock_bh(&sta->lock);
> +       unsigned long irqfl;
> +
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        sta->flags |= set;
>        sta->flags &= ~clear;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>  }
>
>  static inline u32 test_sta_flags(struct sta_info *sta, const u32 flags)
>  {
>        u32 ret;
> +       unsigned long irqfl;
>
> -       spin_lock_bh(&sta->lock);
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        ret = sta->flags & flags;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>
>        return ret;
>  }
> @@ -329,11 +341,12 @@ static inline u32 test_and_clear_sta_fla
>                                           const u32 flags)
>  {
>        u32 ret;
> +       unsigned long irqfl;
>
> -       spin_lock_bh(&sta->lock);
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        ret = sta->flags & flags;
>        sta->flags &= ~flags;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>
>        return ret;
>  }
> @@ -341,10 +354,11 @@ static inline u32 test_and_clear_sta_fla
>  static inline u32 get_sta_flags(struct sta_info *sta)
>  {
>        u32 ret;
> +       unsigned long irqfl;
>
> -       spin_lock_bh(&sta->lock);
> +       spin_lock_irqsave(&sta->flaglock, irqfl);
>        ret = sta->flags;
> -       spin_unlock_bh(&sta->lock);
> +       spin_unlock_irqrestore(&sta->flaglock, irqfl);
>
>        return ret;
>  }
> --- everything.orig/net/mac80211/sta_info.c     2008-06-18 11:56:44.000000000 +0200
> +++ everything/net/mac80211/sta_info.c  2008-06-18 11:56:58.000000000 +0200
> @@ -235,6 +235,7 @@ struct sta_info *sta_info_alloc(struct i
>                return NULL;
>
>        spin_lock_init(&sta->lock);
> +       spin_lock_init(&sta->flaglock);
>
>        memcpy(sta->addr, addr, ETH_ALEN);
>        sta->local = local;
>
>
>

Yes, this patch seems to correct the issue. I no longer receive the
kernel warning.

Regards,

David Ellingsworth


From francesco.gringoli at ing.unibs.it  Wed Jun 18 18:02:33 2008
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Wed, 18 Jun 2008 18:02:33 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <69e28c910806151120p116cb57dgf29b68c205e44668@mail.gmail.com>
References: <200806141553.42420.mb@bu3sch.de>
	<69e28c910806151120p116cb57dgf29b68c205e44668@mail.gmail.com>
Message-ID: <A30D3F04-424C-48C2-8EB6-3838CE50CCD6@ing.unibs.it>

>> This firmware does _only_ work on wireless core revisions 5, 6, 7,  
>> 8 or 10.
>
> There are reports of it working on rev.9 cores. Is that possible?
> (Resend of previous mail to the list.)
Hi there,

I get this
Jun 18 16:43:51 b43 kernel: [   21.152097] ssb: Core 0 found:  
ChipCommon (cc 0x800, rev 0x0D, vendor 0x4243)
Jun 18 16:43:51 b43 kernel: [   21.152113] ssb: Core 1 found: IEEE  
802.11 (cc 0x812, rev 0x09, vendor 0x4243)
Jun 18 16:43:51 b43 kernel: [   21.152122] ssb: Core 2 found: PCI (cc  
0x804, rev 0x0C, vendor 0x4243)
Jun 18 16:43:51 b43 kernel: [   21.152132] ssb: Core 3 found: PCMCIA  
(cc 0x80D, rev 0x07, vendor 0x4243)

it should be a rev.9 core. Well, I got it running in monitor mode, I  
clear saw tcpdump doing its work. But I think Michael is right, just  
after a while it crashed: before doing that syslog filled up with

[ 1213.209871] ------------[ cut here ]------------
[ 1213.209878] WARNING: at drivers/net/wireless/b43/xmit.c:49 b43_rx 
+0x1a5/0x630 [b43]()
[ 1213.209880] Modules linked in: b43 rfkill_input arc4 ecb  
crypto_blkcipher rfkill mac80211 cfg80211 input_polldev af_packet  
radeon drm speedstep_lib cpufreq_stats cpufreq_ondemand freq_table  
cpufreq_powersave cpufreq_userspace cpufreq_conservative container sbs  
sbshc loop serio_raw psmouse pcspkr usbhid hid ssb battery asus_laptop  
led_class ac button sis_agp agpgart evdev xfs ide_disk ide_cd_mod  
cdrom ata_generic pata_sis libata dock floppy skge ehci_hcd ohci_hcd  
usbcore sis5513 ide_core thermal processor fan fuse [last unloaded: b43]
[ 1213.209926] Pid: 0, comm: swapper Tainted: G        W 2.6.26-rc6-wl  
#1
[ 1213.209931]  [<c011a46f>] warn_on_slowpath+0x5f/0x90
[ 1213.209947]  [<c01138c2>] enqueue_task+0x12/0x30
[ 1213.209955]  [<c0113934>] activate_task+0x24/0x40
[ 1213.209963]  [<c0113b4e>] __wake_up_common+0x3e/0x70
[ 1213.209973]  [<c025c5c1>] sock_def_readable+0x41/0x50
[ 1213.209980]  [<c025b831>] sock_queue_rcv_skb+0xa1/0xe0
[ 1213.209986]  [<c029f090>] udp_queue_rcv_skb+0xb0/0x280
[ 1213.209997]  [<e09b892c>] ssb_pci_read32+0x1c/0x60 [ssb]
[ 1213.210010]  [<c0163972>] __slab_alloc+0xa2/0x410
[ 1213.210016]  [<e0b02990>] __ieee80211_rx_handle_packet+0x5e0/0x7b0  
[mac80211]
[ 1213.210038]  [<e0b2b7e5>] b43_rx+0x1a5/0x630 [b43]
[ 1213.210050]  [<e0b20000>] b43_chip_init+0xa10/0xa20 [b43]
[ 1213.210059]  [<e0b30165>] op32_fill_descriptor+0x45/0xe0 [b43]
[ 1213.210077]  [<e0b2fd6e>] b43_dma_rx+0x16e/0x400 [b43]
[ 1213.210097]  [<e0b21f58>] b43_interrupt_tasklet+0x378/0x910 [b43]
[ 1213.210106]  [<c01138c2>] enqueue_task+0x12/0x30
[ 1213.210111]  [<c0113934>] activate_task+0x24/0x40
[ 1213.210126]  [<c011edc4>] tasklet_action+0x34/0x70
[ 1213.210131]  [<c011ec72>] __do_softirq+0x42/0x90
[ 1213.210136]  [<c011ece7>] do_softirq+0x27/0x30
[ 1213.210139]  [<c011efe5>] irq_exit+0x45/0x60
[ 1213.210142]  [<c0105a59>] do_IRQ+0x39/0x70
[ 1213.210151]  [<c0103e23>] common_interrupt+0x23/0x30
[ 1213.210162]  [<e0813d0f>] acpi_idle_enter_simple+0x16e/0x1db  
[processor]
[ 1213.210177]  [<e08139b6>] acpi_idle_enter_bm+0xb7/0x2a2 [processor]
[ 1213.210187]  [<c0254258>] cpuidle_idle_call+0x68/0xa0
[ 1213.210193]  [<c02541f0>] cpuidle_idle_call+0x0/0xa0
[ 1213.210197]  [<c01026a4>] cpu_idle+0x24/0x70
[ 1213.210206]  =======================
[ 1213.210209] ---[ end trace 4d6796847711ea43 ]---

repeated hundreds of time. I'm using wireless-testing (git-pulled this  
morning) e latest firmware image. I succeeded to find three cards and  
they all are rev.9!

Regards,
FG



From zajec5polish at gmail.com  Wed Jun 18 20:06:02 2008
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Wed, 18 Jun 2008 20:06:02 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <200806141553.42420.mb@bu3sch.de>
References: <200806141553.42420.mb@bu3sch.de>
Message-ID: <14b026160806181106p48268584x4b124f59b5819f7@mail.gmail.com>

2008/6/14, Michael Buesch <mb at bu3sch.de>:
>  Here comes another snapshot of the Opensource firmware for
>  the b43 wireless core.
>  http://bu3sch.de/b43/openfw/b43-openfw-20080614.tar.bz2
>
>  The firmware does _ONLY_ work in monitor mode. The TX path is not implemented,
>  so it can not associate or whatever. It can only receive packets.

News about Broadcom' new distater-driver and your opensource firmware
was posted on our Polish news portal
(http://osnews.pl/b43-z-wlasnym-mikrokodem/). Let me make little
off-topic here and post a few translated comments, please:

jellonek:
> for such a people "hacker" term was introduced.
> they would help more documenting chip...

mario:
> RESPECT for this man!

Azrael Nightwalker:
> Fucgreat!

Great work Michael, thanks for your work! I'm extremly happy having
notebook with so well supported wifi :)

-- 
Rafa? Mi?ecki

From mb at bu3sch.de  Wed Jun 18 20:26:10 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Jun 2008 20:26:10 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <14b026160806181106p48268584x4b124f59b5819f7@mail.gmail.com>
References: <200806141553.42420.mb@bu3sch.de>
	<14b026160806181106p48268584x4b124f59b5819f7@mail.gmail.com>
Message-ID: <200806182026.11056.mb@bu3sch.de>

On Wednesday 18 June 2008 20:06:02 Rafa? Mi?ecki wrote:
> 2008/6/14, Michael Buesch <mb at bu3sch.de>:
> >  Here comes another snapshot of the Opensource firmware for
> >  the b43 wireless core.
> >  http://bu3sch.de/b43/openfw/b43-openfw-20080614.tar.bz2
> >
> >  The firmware does _ONLY_ work in monitor mode. The TX path is not implemented,
> >  so it can not associate or whatever. It can only receive packets.
> 
> News about Broadcom' new distater-driver and your opensource firmware
> was posted on our Polish news portal
> (http://osnews.pl/b43-z-wlasnym-mikrokodem/). Let me make little
> off-topic here and post a few translated comments, please:
> 
> jellonek:
> > for such a people "hacker" term was introduced.
> > they would help more documenting chip...
> 
> mario:
> > RESPECT for this man!
> 
> Azrael Nightwalker:
> > Fucgreat!
> 
> Great work Michael, thanks for your work! I'm extremly happy having
> notebook with so well supported wifi :)

Thanks. ;)

But IMO "well supported wifi" is something else. Broadcom would appear
in this story, if this was well supported. :)

-- 
Greetings Michael.


From mb at bu3sch.de  Wed Jun 18 20:30:04 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 18 Jun 2008 20:30:04 +0200
Subject: b43 open-firmware new snapshot
In-Reply-To: <200806182026.11056.mb@bu3sch.de>
References: <200806141553.42420.mb@bu3sch.de>
	<14b026160806181106p48268584x4b124f59b5819f7@mail.gmail.com>
	<200806182026.11056.mb@bu3sch.de>
Message-ID: <200806182030.04173.mb@bu3sch.de>

On Wednesday 18 June 2008 20:26:10 Michael Buesch wrote:
> On Wednesday 18 June 2008 20:06:02 Rafa? Mi?ecki wrote:
> > 2008/6/14, Michael Buesch <mb at bu3sch.de>:
> > >  Here comes another snapshot of the Opensource firmware for
> > >  the b43 wireless core.
> > >  http://bu3sch.de/b43/openfw/b43-openfw-20080614.tar.bz2
> > >
> > >  The firmware does _ONLY_ work in monitor mode. The TX path is not implemented,
> > >  so it can not associate or whatever. It can only receive packets.
> > 
> > News about Broadcom' new distater-driver and your opensource firmware
> > was posted on our Polish news portal
> > (http://osnews.pl/b43-z-wlasnym-mikrokodem/). Let me make little
> > off-topic here and post a few translated comments, please:
> > 
> > jellonek:
> > > for such a people "hacker" term was introduced.
> > > they would help more documenting chip...
> > 
> > mario:
> > > RESPECT for this man!
> > 
> > Azrael Nightwalker:
> > > Fucgreat!
> > 
> > Great work Michael, thanks for your work! I'm extremly happy having
> > notebook with so well supported wifi :)
> 
> Thanks. ;)
> 
> But IMO "well supported wifi" is something else. Broadcom would appear
> in this story, if this was well supported. :)
> 

Oh and let's not forget Johannes and his brother. They play a _major_
role in firmware reverse engineering. Most credit should go to them.
They did / are doing the hardest work.


-- 
Greetings Michael.


From mb at bu3sch.de  Thu Jun 19 00:35:49 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Jun 2008 00:35:49 +0200
Subject: [PATCH] b43: Add debugfs files for MMIO register access
Message-ID: <200806190035.49644.mb@bu3sch.de>

This adds debugfs files for reading and writing arbitrary
wireless core registers. This is useful for debugging.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please have a nice vacation and queue this for 2.6.27, if you are bored. :P


Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2008-06-15 15:48:05.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2008-06-18 23:57:39.000000000 +0200
@@ -71,12 +71,121 @@ struct b43_dfs_file * fops_to_dfs_file(s
 					  fmt , ##x);		\
 		else						\
 			printk(KERN_ERR "b43: fappend overflow\n"); \
 	} while (0)
 
 
+/* The biggest MMIO address that we allow access to from the debugfs files. */
+#define B43_MAX_MMIO_ACCESS	(0xF00 - 1)
+
+static ssize_t mmio16read__read_file(struct b43_wldev *dev,
+				     char *buf, size_t bufsize)
+{
+	ssize_t count = 0;
+	unsigned int addr;
+	u16 val;
+
+	addr = dev->dfsentry->mmio16read_next;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EDESTADDRREQ;
+
+	val = b43_read16(dev, addr);
+	fappend("0x%04X\n", val);
+
+	return count;
+}
+
+static int mmio16read__write_file(struct b43_wldev *dev,
+				  const char *buf, size_t count)
+{
+	unsigned int addr;
+	int res;
+
+	res = sscanf(buf, "0x%X", &addr);
+	if (res != 1)
+		return -EINVAL;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EADDRNOTAVAIL;
+
+	dev->dfsentry->mmio16read_next = addr;
+
+	return 0;
+}
+
+static int mmio16write__write_file(struct b43_wldev *dev,
+				   const char *buf, size_t count)
+{
+	unsigned int addr, val;
+	int res;
+
+	res = sscanf(buf, "0x%X = 0x%X", &addr, &val);
+	if (res != 2)
+		return -EINVAL;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EADDRNOTAVAIL;
+	if (val > 0xFFFF)
+		return -E2BIG;
+
+	b43_write16(dev, addr, val);
+
+	return 0;
+}
+
+static ssize_t mmio32read__read_file(struct b43_wldev *dev,
+				     char *buf, size_t bufsize)
+{
+	ssize_t count = 0;
+	unsigned int addr;
+	u32 val;
+
+	addr = dev->dfsentry->mmio32read_next;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EDESTADDRREQ;
+
+	val = b43_read32(dev, addr);
+	fappend("0x%08X\n", val);
+
+	return count;
+}
+
+static int mmio32read__write_file(struct b43_wldev *dev,
+				  const char *buf, size_t count)
+{
+	unsigned int addr;
+	int res;
+
+	res = sscanf(buf, "0x%X", &addr);
+	if (res != 1)
+		return -EINVAL;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EADDRNOTAVAIL;
+
+	dev->dfsentry->mmio32read_next = addr;
+
+	return 0;
+}
+
+static int mmio32write__write_file(struct b43_wldev *dev,
+				   const char *buf, size_t count)
+{
+	unsigned int addr, val;
+	int res;
+
+	res = sscanf(buf, "0x%X = 0x%X", &addr, &val);
+	if (res != 2)
+		return -EINVAL;
+	if (addr > B43_MAX_MMIO_ACCESS)
+		return -EADDRNOTAVAIL;
+	if (val > 0xFFFFFFFF)
+		return -E2BIG;
+
+	b43_write32(dev, addr, val);
+
+	return 0;
+}
+
 /* wl->irq_lock is locked */
 static ssize_t tsf_read_file(struct b43_wldev *dev,
 			     char *buf, size_t bufsize)
 {
 	ssize_t count = 0;
 	u64 tsf;
@@ -493,12 +602,16 @@ out_unlock:
 		},						\
 		.file_struct_offset = offsetof(struct b43_dfsentry, \
 					       file_##name),	\
 		.take_irqlock	= _take_irqlock,		\
 	}
 
+B43_DEBUGFS_FOPS(mmio16read, mmio16read__read_file, mmio16read__write_file, 1);
+B43_DEBUGFS_FOPS(mmio16write, NULL, mmio16write__write_file, 1);
+B43_DEBUGFS_FOPS(mmio32read, mmio32read__read_file, mmio32read__write_file, 1);
+B43_DEBUGFS_FOPS(mmio32write, NULL, mmio32write__write_file, 1);
 B43_DEBUGFS_FOPS(tsf, tsf_read_file, tsf_write_file, 1);
 B43_DEBUGFS_FOPS(ucode_regs, ucode_regs_read_file, NULL, 1);
 B43_DEBUGFS_FOPS(shm, shm_read_file, NULL, 1);
 B43_DEBUGFS_FOPS(txstat, txstat_read_file, NULL, 0);
 B43_DEBUGFS_FOPS(txpower_g, txpower_g_read_file, txpower_g_write_file, 0);
 B43_DEBUGFS_FOPS(restart, NULL, restart_write_file, 1);
@@ -581,24 +694,31 @@ void b43_debugfs_add_device(struct b43_w
 		dev->dfsentry = NULL;
 		kfree(log->log);
 		kfree(e);
 		return;
 	}
 
+	e->mmio16read_next = 0xFFFF; /* invalid address */
+	e->mmio32read_next = 0xFFFF; /* invalid address */
+
 #define ADD_FILE(name, mode)	\
 	do {							\
 		struct dentry *d;				\
 		d = debugfs_create_file(__stringify(name),	\
 					mode, e->subdir, dev,	\
 					&fops_##name.fops);	\
 		e->file_##name.dentry = NULL;			\
 		if (!IS_ERR(d))					\
 			e->file_##name.dentry = d;		\
 	} while (0)
 
 
+	ADD_FILE(mmio16read, 0600);
+	ADD_FILE(mmio16write, 0200);
+	ADD_FILE(mmio32read, 0600);
+	ADD_FILE(mmio32write, 0200);
 	ADD_FILE(tsf, 0600);
 	ADD_FILE(ucode_regs, 0400);
 	ADD_FILE(shm, 0400);
 	ADD_FILE(txstat, 0400);
 	ADD_FILE(txpower_g, 0600);
 	ADD_FILE(restart, 0200);
@@ -617,12 +737,16 @@ void b43_debugfs_remove_device(struct b4
 		return;
 	e = dev->dfsentry;
 	if (!e)
 		return;
 	b43_remove_dynamic_debug(dev);
 
+	debugfs_remove(e->file_mmio16read.dentry);
+	debugfs_remove(e->file_mmio16write.dentry);
+	debugfs_remove(e->file_mmio32read.dentry);
+	debugfs_remove(e->file_mmio32write.dentry);
 	debugfs_remove(e->file_tsf.dentry);
 	debugfs_remove(e->file_ucode_regs.dentry);
 	debugfs_remove(e->file_shm.dentry);
 	debugfs_remove(e->file_txstat.dentry);
 	debugfs_remove(e->file_txpower_g.dentry);
 	debugfs_remove(e->file_restart.dentry);
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2008-06-15 15:48:05.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2008-06-18 23:20:41.000000000 +0200
@@ -33,22 +33,31 @@ struct b43_dfs_file {
 };
 
 struct b43_dfsentry {
 	struct b43_wldev *dev;
 	struct dentry *subdir;
 
+	struct b43_dfs_file file_mmio16read;
+	struct b43_dfs_file file_mmio16write;
+	struct b43_dfs_file file_mmio32read;
+	struct b43_dfs_file file_mmio32write;
 	struct b43_dfs_file file_tsf;
 	struct b43_dfs_file file_ucode_regs;
 	struct b43_dfs_file file_shm;
 	struct b43_dfs_file file_txstat;
 	struct b43_dfs_file file_txpower_g;
 	struct b43_dfs_file file_restart;
 	struct b43_dfs_file file_loctls;
 
 	struct b43_txstatus_log txstatlog;
 
+	/* The cached address for the next mmio16read file read */
+	u16 mmio16read_next;
+	/* The cached address for the next mmio32read file read */
+	u16 mmio32read_next;
+
 	/* Enabled/Disabled list for the dynamic debugging features. */
 	u32 dyn_debug[__B43_NR_DYNDBG];
 	/* Dentries for the dynamic debugging entries. */
 	struct dentry *dyn_debug_dentries[__B43_NR_DYNDBG];
 };
 


From mb at bu3sch.de  Thu Jun 19 19:33:51 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Jun 2008 19:33:51 +0200
Subject: [PATCH] b43: Add debugfs files for random SHM access
Message-ID: <200806191933.52218.mb@bu3sch.de>

This adds debugfs files for random SHM access.
This is needed in order to implement firmware and driver debugging
scripts in userspace.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---


John, please apply this to 2.6.27


Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2008-06-18 23:57:39.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2008-06-19 12:49:10.000000000 +0200
@@ -71,12 +71,174 @@ struct b43_dfs_file * fops_to_dfs_file(s
 					  fmt , ##x);		\
 		else						\
 			printk(KERN_ERR "b43: fappend overflow\n"); \
 	} while (0)
 
 
+/* The biggest address values for SHM access from the debugfs files. */
+#define B43_MAX_SHM_ROUTING	4
+#define B43_MAX_SHM_ADDR	0xFFFF
+
+static ssize_t shm16read__read_file(struct b43_wldev *dev,
+				    char *buf, size_t bufsize)
+{
+	ssize_t count = 0;
+	unsigned int routing, addr;
+	u16 val;
+
+	routing = dev->dfsentry->shm16read_routing_next;
+	addr = dev->dfsentry->shm16read_addr_next;
+	if ((routing > B43_MAX_SHM_ROUTING) ||
+	    (addr > B43_MAX_SHM_ADDR))
+		return -EDESTADDRREQ;
+
+	val = b43_shm_read16(dev, routing, addr);
+	fappend("0x%04X\n", val);
+
+	return count;
+}
+
+static int shm16read__write_file(struct b43_wldev *dev,
+				 const char *buf, size_t count)
+{
+	unsigned int routing, addr;
+	int res;
+
+	res = sscanf(buf, "0x%X 0x%X", &routing, &addr);
+	if (res != 2)
+		return -EINVAL;
+	if (routing > B43_MAX_SHM_ROUTING)
+		return -EADDRNOTAVAIL;
+	if (addr > B43_MAX_SHM_ADDR)
+		return -EADDRNOTAVAIL;
+	if (routing == B43_SHM_SHARED) {
+		if ((addr % 2) != 0)
+			return -EADDRNOTAVAIL;
+	}
+
+	dev->dfsentry->shm16read_routing_next = routing;
+	dev->dfsentry->shm16read_addr_next = addr;
+
+	return 0;
+}
+
+static int shm16write__write_file(struct b43_wldev *dev,
+				  const char *buf, size_t count)
+{
+	unsigned int routing, addr, mask, set;
+	u16 val;
+	int res;
+	unsigned long flags;
+
+	res = sscanf(buf, "0x%X 0x%X 0x%X 0x%X",
+		     &routing, &addr, &mask, &set);
+	if (res != 4)
+		return -EINVAL;
+	if (routing > B43_MAX_SHM_ROUTING)
+		return -EADDRNOTAVAIL;
+	if (addr > B43_MAX_SHM_ADDR)
+		return -EADDRNOTAVAIL;
+	if (routing == B43_SHM_SHARED) {
+		if ((addr % 2) != 0)
+			return -EADDRNOTAVAIL;
+	}
+	if ((mask > 0xFFFF) || (set > 0xFFFF))
+		return -E2BIG;
+
+	spin_lock_irqsave(&dev->wl->shm_lock, flags);
+	if (mask == 0)
+		val = 0;
+	else
+		val = __b43_shm_read16(dev, routing, addr);
+	val &= mask;
+	val |= set;
+	__b43_shm_write16(dev, routing, addr, val);
+	spin_unlock_irqrestore(&dev->wl->shm_lock, flags);
+
+	return 0;
+}
+
+static ssize_t shm32read__read_file(struct b43_wldev *dev,
+				    char *buf, size_t bufsize)
+{
+	ssize_t count = 0;
+	unsigned int routing, addr;
+	u32 val;
+
+	routing = dev->dfsentry->shm32read_routing_next;
+	addr = dev->dfsentry->shm32read_addr_next;
+	if ((routing > B43_MAX_SHM_ROUTING) ||
+	    (addr > B43_MAX_SHM_ADDR))
+		return -EDESTADDRREQ;
+
+	val = b43_shm_read32(dev, routing, addr);
+	fappend("0x%08X\n", val);
+
+	return count;
+}
+
+static int shm32read__write_file(struct b43_wldev *dev,
+				 const char *buf, size_t count)
+{
+	unsigned int routing, addr;
+	int res;
+
+	res = sscanf(buf, "0x%X 0x%X", &routing, &addr);
+	if (res != 2)
+		return -EINVAL;
+	if (routing > B43_MAX_SHM_ROUTING)
+		return -EADDRNOTAVAIL;
+	if (addr > B43_MAX_SHM_ADDR)
+		return -EADDRNOTAVAIL;
+	if (routing == B43_SHM_SHARED) {
+		if ((addr % 2) != 0)
+			return -EADDRNOTAVAIL;
+	}
+
+	dev->dfsentry->shm32read_routing_next = routing;
+	dev->dfsentry->shm32read_addr_next = addr;
+
+	return 0;
+}
+
+static int shm32write__write_file(struct b43_wldev *dev,
+				  const char *buf, size_t count)
+{
+	unsigned int routing, addr, mask, set;
+	u32 val;
+	int res;
+	unsigned long flags;
+
+	res = sscanf(buf, "0x%X 0x%X 0x%X 0x%X",
+		     &routing, &addr, &mask, &set);
+	if (res != 4)
+		return -EINVAL;
+	if (routing > B43_MAX_SHM_ROUTING)
+		return -EADDRNOTAVAIL;
+	if (addr > B43_MAX_SHM_ADDR)
+		return -EADDRNOTAVAIL;
+	if (routing == B43_SHM_SHARED) {
+		if ((addr % 2) != 0)
+			return -EADDRNOTAVAIL;
+	}
+	if ((mask > 0xFFFFFFFF) || (set > 0xFFFFFFFF))
+		return -E2BIG;
+
+	spin_lock_irqsave(&dev->wl->shm_lock, flags);
+	if (mask == 0)
+		val = 0;
+	else
+		val = __b43_shm_read32(dev, routing, addr);
+	val &= mask;
+	val |= set;
+	__b43_shm_write32(dev, routing, addr, val);
+	spin_unlock_irqrestore(&dev->wl->shm_lock, flags);
+
+	return 0;
+}
+
 /* The biggest MMIO address that we allow access to from the debugfs files. */
 #define B43_MAX_MMIO_ACCESS	(0xF00 - 1)
 
 static ssize_t mmio16read__read_file(struct b43_wldev *dev,
 				     char *buf, size_t bufsize)
 {
@@ -602,12 +764,16 @@ out_unlock:
 		},						\
 		.file_struct_offset = offsetof(struct b43_dfsentry, \
 					       file_##name),	\
 		.take_irqlock	= _take_irqlock,		\
 	}
 
+B43_DEBUGFS_FOPS(shm16read, shm16read__read_file, shm16read__write_file, 1);
+B43_DEBUGFS_FOPS(shm16write, NULL, shm16write__write_file, 1);
+B43_DEBUGFS_FOPS(shm32read, shm32read__read_file, shm32read__write_file, 1);
+B43_DEBUGFS_FOPS(shm32write, NULL, shm32write__write_file, 1);
 B43_DEBUGFS_FOPS(mmio16read, mmio16read__read_file, mmio16read__write_file, 1);
 B43_DEBUGFS_FOPS(mmio16write, NULL, mmio16write__write_file, 1);
 B43_DEBUGFS_FOPS(mmio32read, mmio32read__read_file, mmio32read__write_file, 1);
 B43_DEBUGFS_FOPS(mmio32write, NULL, mmio32write__write_file, 1);
 B43_DEBUGFS_FOPS(tsf, tsf_read_file, tsf_write_file, 1);
 B43_DEBUGFS_FOPS(ucode_regs, ucode_regs_read_file, NULL, 1);
@@ -696,12 +862,16 @@ void b43_debugfs_add_device(struct b43_w
 		kfree(e);
 		return;
 	}
 
 	e->mmio16read_next = 0xFFFF; /* invalid address */
 	e->mmio32read_next = 0xFFFF; /* invalid address */
+	e->shm16read_routing_next = 0xFFFFFFFF; /* invalid routing */
+	e->shm16read_addr_next = 0xFFFFFFFF; /* invalid address */
+	e->shm32read_routing_next = 0xFFFFFFFF; /* invalid routing */
+	e->shm32read_addr_next = 0xFFFFFFFF; /* invalid address */
 
 #define ADD_FILE(name, mode)	\
 	do {							\
 		struct dentry *d;				\
 		d = debugfs_create_file(__stringify(name),	\
 					mode, e->subdir, dev,	\
@@ -709,12 +879,16 @@ void b43_debugfs_add_device(struct b43_w
 		e->file_##name.dentry = NULL;			\
 		if (!IS_ERR(d))					\
 			e->file_##name.dentry = d;		\
 	} while (0)
 
 
+	ADD_FILE(shm16read, 0600);
+	ADD_FILE(shm16write, 0200);
+	ADD_FILE(shm32read, 0600);
+	ADD_FILE(shm32write, 0200);
 	ADD_FILE(mmio16read, 0600);
 	ADD_FILE(mmio16write, 0200);
 	ADD_FILE(mmio32read, 0600);
 	ADD_FILE(mmio32write, 0200);
 	ADD_FILE(tsf, 0600);
 	ADD_FILE(ucode_regs, 0400);
@@ -737,12 +911,16 @@ void b43_debugfs_remove_device(struct b4
 		return;
 	e = dev->dfsentry;
 	if (!e)
 		return;
 	b43_remove_dynamic_debug(dev);
 
+	debugfs_remove(e->file_shm16read.dentry);
+	debugfs_remove(e->file_shm16write.dentry);
+	debugfs_remove(e->file_shm32read.dentry);
+	debugfs_remove(e->file_shm32write.dentry);
 	debugfs_remove(e->file_mmio16read.dentry);
 	debugfs_remove(e->file_mmio16write.dentry);
 	debugfs_remove(e->file_mmio32read.dentry);
 	debugfs_remove(e->file_mmio32write.dentry);
 	debugfs_remove(e->file_tsf.dentry);
 	debugfs_remove(e->file_ucode_regs.dentry);
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2008-06-18 23:20:41.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2008-06-19 12:43:17.000000000 +0200
@@ -33,12 +33,16 @@ struct b43_dfs_file {
 };
 
 struct b43_dfsentry {
 	struct b43_wldev *dev;
 	struct dentry *subdir;
 
+	struct b43_dfs_file file_shm16read;
+	struct b43_dfs_file file_shm16write;
+	struct b43_dfs_file file_shm32read;
+	struct b43_dfs_file file_shm32write;
 	struct b43_dfs_file file_mmio16read;
 	struct b43_dfs_file file_mmio16write;
 	struct b43_dfs_file file_mmio32read;
 	struct b43_dfs_file file_mmio32write;
 	struct b43_dfs_file file_tsf;
 	struct b43_dfs_file file_ucode_regs;
@@ -52,12 +56,19 @@ struct b43_dfsentry {
 
 	/* The cached address for the next mmio16read file read */
 	u16 mmio16read_next;
 	/* The cached address for the next mmio32read file read */
 	u16 mmio32read_next;
 
+	/* The cached address for the next shm16read file read */
+	u32 shm16read_routing_next;
+	u32 shm16read_addr_next;
+	/* The cached address for the next shm32read file read */
+	u32 shm32read_routing_next;
+	u32 shm32read_addr_next;
+
 	/* Enabled/Disabled list for the dynamic debugging features. */
 	u32 dyn_debug[__B43_NR_DYNDBG];
 	/* Dentries for the dynamic debugging entries. */
 	struct dentry *dyn_debug_dentries[__B43_NR_DYNDBG];
 };
 
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-06-18 20:15:01.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-06-19 12:52:47.000000000 +0200
@@ -370,19 +370,16 @@ static inline void b43_shm_control_word(
 	control = routing;
 	control <<= 16;
 	control |= offset;
 	b43_write32(dev, B43_MMIO_SHM_CONTROL, control);
 }
 
-u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
+u32 __b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
 {
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
 	u32 ret;
 
-	spin_lock_irqsave(&wl->shm_lock, flags);
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			ret = b43_read16(dev, B43_MMIO_SHM_DATA_UNALIGNED);
@@ -394,24 +391,32 @@ u32 b43_shm_read32(struct b43_wldev *dev
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	ret = b43_read32(dev, B43_MMIO_SHM_DATA);
 out:
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-
 	return ret;
 }
 
-u16 b43_shm_read16(struct b43_wldev * dev, u16 routing, u16 offset)
+u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
 {
 	struct b43_wl *wl = dev->wl;
 	unsigned long flags;
-	u16 ret;
+	u32 ret;
 
 	spin_lock_irqsave(&wl->shm_lock, flags);
+	ret = __b43_shm_read32(dev, routing, offset);
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
+
+	return ret;
+}
+
+u16 __b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset)
+{
+	u16 ret;
+
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			ret = b43_read16(dev, B43_MMIO_SHM_DATA_UNALIGNED);
@@ -420,61 +425,80 @@ u16 b43_shm_read16(struct b43_wldev * de
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	ret = b43_read16(dev, B43_MMIO_SHM_DATA);
 out:
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-
 	return ret;
 }
 
-void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
+u16 b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset)
 {
 	struct b43_wl *wl = dev->wl;
 	unsigned long flags;
+	u16 ret;
 
 	spin_lock_irqsave(&wl->shm_lock, flags);
+	ret = __b43_shm_read16(dev, routing, offset);
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
+
+	return ret;
+}
+
+void __b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
+{
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			b43_write16(dev, B43_MMIO_SHM_DATA_UNALIGNED,
 				    (value >> 16) & 0xffff);
 			b43_shm_control_word(dev, routing, (offset >> 2) + 1);
 			b43_write16(dev, B43_MMIO_SHM_DATA, value & 0xffff);
-			goto out;
+			return;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	b43_write32(dev, B43_MMIO_SHM_DATA, value);
-out:
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
 }
 
-void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
+void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
 {
 	struct b43_wl *wl = dev->wl;
 	unsigned long flags;
 
 	spin_lock_irqsave(&wl->shm_lock, flags);
+	__b43_shm_write32(dev, routing, offset, value);
+	spin_unlock_irqrestore(&wl->shm_lock, flags);
+}
+
+void __b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
+{
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			b43_write16(dev, B43_MMIO_SHM_DATA_UNALIGNED, value);
-			goto out;
+			return;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	b43_write16(dev, B43_MMIO_SHM_DATA, value);
-out:
+}
+
+void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
+{
+	struct b43_wl *wl = dev->wl;
+	unsigned long flags;
+
+	spin_lock_irqsave(&wl->shm_lock, flags);
+	__b43_shm_write16(dev, routing, offset, value);
 	spin_unlock_irqrestore(&wl->shm_lock, flags);
 }
 
 /* Read HostFlags */
 u64 b43_hf_read(struct b43_wldev * dev)
 {
Index: wireless-testing/drivers/net/wireless/b43/main.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.h	2008-06-15 15:48:06.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.h	2008-06-19 12:49:30.000000000 +0200
@@ -92,15 +92,19 @@ u8 b43_ieee80211_antenna_sanitize(struct
 				  u8 antenna_nr);
 
 void b43_tsf_read(struct b43_wldev *dev, u64 * tsf);
 void b43_tsf_write(struct b43_wldev *dev, u64 tsf);
 
 u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset);
+u32 __b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset);
 u16 b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset);
+u16 __b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset);
 void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value);
+void __b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value);
 void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value);
+void __b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value);
 
 u64 b43_hf_read(struct b43_wldev *dev);
 void b43_hf_write(struct b43_wldev *dev, u64 value);
 
 void b43_dummy_transmission(struct b43_wldev *dev);
 


From mb at bu3sch.de  Thu Jun 19 19:38:32 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 19 Jun 2008 19:38:32 +0200
Subject: [PATCH] b43: Add mask/set capability to debugfs MMIO interface
Message-ID: <200806191938.33048.mb@bu3sch.de>

This adds an atomic mask/set capability to the debugfs MMIO interface.
This is needed to support mask and/or set operations from the userspace
debugging tools.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue this for 2.6.27


Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2008-06-19 12:49:10.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2008-06-19 16:02:54.000000000 +0200
@@ -264,32 +264,43 @@ static int mmio16read__write_file(struct
 
 	res = sscanf(buf, "0x%X", &addr);
 	if (res != 1)
 		return -EINVAL;
 	if (addr > B43_MAX_MMIO_ACCESS)
 		return -EADDRNOTAVAIL;
+	if ((addr % 2) != 0)
+		return -EINVAL;
 
 	dev->dfsentry->mmio16read_next = addr;
 
 	return 0;
 }
 
 static int mmio16write__write_file(struct b43_wldev *dev,
 				   const char *buf, size_t count)
 {
-	unsigned int addr, val;
+	unsigned int addr, mask, set;
 	int res;
+	u16 val;
 
-	res = sscanf(buf, "0x%X = 0x%X", &addr, &val);
-	if (res != 2)
+	res = sscanf(buf, "0x%X 0x%X 0x%X", &addr, &mask, &set);
+	if (res != 3)
 		return -EINVAL;
 	if (addr > B43_MAX_MMIO_ACCESS)
 		return -EADDRNOTAVAIL;
-	if (val > 0xFFFF)
+	if ((mask > 0xFFFF) || (set > 0xFFFF))
 		return -E2BIG;
+	if ((addr % 2) != 0)
+		return -EINVAL;
 
+	if (mask == 0)
+		val = 0;
+	else
+		val = b43_read16(dev, addr);
+	val &= mask;
+	val |= set;
 	b43_write16(dev, addr, val);
 
 	return 0;
 }
 
 static ssize_t mmio32read__read_file(struct b43_wldev *dev,
@@ -317,32 +328,43 @@ static int mmio32read__write_file(struct
 
 	res = sscanf(buf, "0x%X", &addr);
 	if (res != 1)
 		return -EINVAL;
 	if (addr > B43_MAX_MMIO_ACCESS)
 		return -EADDRNOTAVAIL;
+	if ((addr % 4) != 0)
+		return -EINVAL;
 
 	dev->dfsentry->mmio32read_next = addr;
 
 	return 0;
 }
 
 static int mmio32write__write_file(struct b43_wldev *dev,
 				   const char *buf, size_t count)
 {
-	unsigned int addr, val;
+	unsigned int addr, mask, set;
 	int res;
+	u32 val;
 
-	res = sscanf(buf, "0x%X = 0x%X", &addr, &val);
-	if (res != 2)
+	res = sscanf(buf, "0x%X 0x%X 0x%X", &addr, &mask, &set);
+	if (res != 3)
 		return -EINVAL;
 	if (addr > B43_MAX_MMIO_ACCESS)
 		return -EADDRNOTAVAIL;
-	if (val > 0xFFFFFFFF)
+	if ((mask > 0xFFFFFFFF) || (set > 0xFFFFFFFF))
 		return -E2BIG;
+	if ((addr % 4) != 0)
+		return -EINVAL;
 
+	if (mask == 0)
+		val = 0;
+	else
+		val = b43_read32(dev, addr);
+	val &= mask;
+	val |= set;
 	b43_write32(dev, addr, val);
 
 	return 0;
 }
 
 /* wl->irq_lock is locked */


From mb at bu3sch.de  Fri Jun 20 01:01:50 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 01:01:50 +0200
Subject: [PATCH] b43: Remove "shm" and "ucode_regs" debugfs files
Message-ID: <200806200101.50420.mb@bu3sch.de>

We don't need these two dump-files anymore, as we can easily do this
in userspace now.
Use b43-fwdump from the b43-tools repository to dump microcode registers.
Use "b43-fwdump -s" to dump SHM (or use -S to do a binary dump)

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please apply this to 2.6.27


Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2008-06-20 00:50:09.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2008-06-20 00:53:33.000000000 +0200
@@ -392,48 +392,12 @@ static int tsf_write_file(struct b43_wld
 		return -EINVAL;
 	b43_tsf_write(dev, tsf);
 
 	return 0;
 }
 
-/* wl->irq_lock is locked */
-static ssize_t ucode_regs_read_file(struct b43_wldev *dev,
-				    char *buf, size_t bufsize)
-{
-	ssize_t count = 0;
-	int i;
-
-	for (i = 0; i < 64; i++) {
-		fappend("r%d = 0x%04x\n", i,
-			b43_shm_read16(dev, B43_SHM_SCRATCH, i));
-	}
-
-	return count;
-}
-
-/* wl->irq_lock is locked */
-static ssize_t shm_read_file(struct b43_wldev *dev,
-			     char *buf, size_t bufsize)
-{
-	ssize_t count = 0;
-	int i;
-	u16 tmp;
-	__le16 *le16buf = (__le16 *)buf;
-
-	for (i = 0; i < 0x1000; i++) {
-		if (bufsize < sizeof(tmp))
-			break;
-		tmp = b43_shm_read16(dev, B43_SHM_SHARED, 2 * i);
-		le16buf[i] = cpu_to_le16(tmp);
-		count += sizeof(tmp);
-		bufsize -= sizeof(tmp);
-	}
-
-	return count;
-}
-
 static ssize_t txstat_read_file(struct b43_wldev *dev,
 				char *buf, size_t bufsize)
 {
 	struct b43_txstatus_log *log = &dev->dfsentry->txstatlog;
 	ssize_t count = 0;
 	unsigned long flags;
@@ -795,14 +759,12 @@ B43_DEBUGFS_FOPS(shm32read, shm32read__r
 B43_DEBUGFS_FOPS(shm32write, NULL, shm32write__write_file, 1);
 B43_DEBUGFS_FOPS(mmio16read, mmio16read__read_file, mmio16read__write_file, 1);
 B43_DEBUGFS_FOPS(mmio16write, NULL, mmio16write__write_file, 1);
 B43_DEBUGFS_FOPS(mmio32read, mmio32read__read_file, mmio32read__write_file, 1);
 B43_DEBUGFS_FOPS(mmio32write, NULL, mmio32write__write_file, 1);
 B43_DEBUGFS_FOPS(tsf, tsf_read_file, tsf_write_file, 1);
-B43_DEBUGFS_FOPS(ucode_regs, ucode_regs_read_file, NULL, 1);
-B43_DEBUGFS_FOPS(shm, shm_read_file, NULL, 1);
 B43_DEBUGFS_FOPS(txstat, txstat_read_file, NULL, 0);
 B43_DEBUGFS_FOPS(txpower_g, txpower_g_read_file, txpower_g_write_file, 0);
 B43_DEBUGFS_FOPS(restart, NULL, restart_write_file, 1);
 B43_DEBUGFS_FOPS(loctls, loctls_read_file, NULL, 0);
 
 
@@ -910,14 +872,12 @@ void b43_debugfs_add_device(struct b43_w
 	ADD_FILE(shm32write, 0200);
 	ADD_FILE(mmio16read, 0600);
 	ADD_FILE(mmio16write, 0200);
 	ADD_FILE(mmio32read, 0600);
 	ADD_FILE(mmio32write, 0200);
 	ADD_FILE(tsf, 0600);
-	ADD_FILE(ucode_regs, 0400);
-	ADD_FILE(shm, 0400);
 	ADD_FILE(txstat, 0400);
 	ADD_FILE(txpower_g, 0600);
 	ADD_FILE(restart, 0200);
 	ADD_FILE(loctls, 0400);
 
 #undef ADD_FILE
@@ -942,14 +902,12 @@ void b43_debugfs_remove_device(struct b4
 	debugfs_remove(e->file_shm32write.dentry);
 	debugfs_remove(e->file_mmio16read.dentry);
 	debugfs_remove(e->file_mmio16write.dentry);
 	debugfs_remove(e->file_mmio32read.dentry);
 	debugfs_remove(e->file_mmio32write.dentry);
 	debugfs_remove(e->file_tsf.dentry);
-	debugfs_remove(e->file_ucode_regs.dentry);
-	debugfs_remove(e->file_shm.dentry);
 	debugfs_remove(e->file_txstat.dentry);
 	debugfs_remove(e->file_txpower_g.dentry);
 	debugfs_remove(e->file_restart.dentry);
 	debugfs_remove(e->file_loctls.dentry);
 
 	debugfs_remove(e->subdir);
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2008-06-20 00:50:08.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2008-06-20 00:51:53.000000000 +0200
@@ -42,14 +42,12 @@ struct b43_dfsentry {
 	struct b43_dfs_file file_shm32write;
 	struct b43_dfs_file file_mmio16read;
 	struct b43_dfs_file file_mmio16write;
 	struct b43_dfs_file file_mmio32read;
 	struct b43_dfs_file file_mmio32write;
 	struct b43_dfs_file file_tsf;
-	struct b43_dfs_file file_ucode_regs;
-	struct b43_dfs_file file_shm;
 	struct b43_dfs_file file_txstat;
 	struct b43_dfs_file file_txpower_g;
 	struct b43_dfs_file file_restart;
 	struct b43_dfs_file file_loctls;
 
 	struct b43_txstatus_log txstatlog;


From dale at daleenterprise.com  Fri Jun 20 04:18:41 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Thu, 19 Jun 2008 22:18:41 -0400
Subject: ssb-sprom data discrepancy
In-Reply-To: <EDD91CA7-8FA6-4A6F-8D3B-45415E88DDB9@daleenterprise.com>
References: <48520c59.gA/QUyLFPL8FLEpZ%Larry.Finger@lwfinger.net>
	<BB7A6F89-B101-4D4E-AE56-27728A081E81@daleenterprise.com>
	<200806151318.23158.mb@bu3sch.de>
	<EDD91CA7-8FA6-4A6F-8D3B-45415E88DDB9@daleenterprise.com>
Message-ID: <B1A3FEE1-1EA4-4394-9824-015CB32F3B0A@daleenterprise.com>

Any response or thoughts on this???

On Jun 18, 2008, at 02:02 AM, Dale Walsh wrote:

> I was interested in modifying some parameters for a miniPCI card  
> and a PCI card in an attempt to increase transmit power and gain,  
> turn on the second antenna on the minipci card and anthing else  
> that would improve performance but before flashing I thought I'd  
> verify the changes and make sure I had my setting right but instead  
> I'm shocked.
>
> So, either the app is displaying the wrong data or the wrong data  
> is being modified so rather than being destructive and bricking a  
> card I thought I'd ask the masters.
>
> Something that interest me is that the N-PHY cards have 3 antennas  
> and according to Buffalo Technology Technical support the  
> characteristics for all 3 antennas are configurable in the sprom  
> which is supposed to include an option for the middle antenna to be  
> in regular or diversity mode.
>
> Is there a table somewhere that decodes the sprom and denotes what  
> each bit represents in a combined byte?
>
>
> The source used in the ssb-sprom app was taken at 1:15am EST June  
> 17th so it was the latest available from git 24 hours ago.
>
>
>
> Here's my session and it's clear that something is wrong: (two  
> examples given, due to size I didn't provide all the tests, had  
> issues adjusting gain)
>
> 75XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
> minipci_new_sprom --antga 0x88 -V
> Broadcom-SSB SPROM data modification tool version 001
>
> Reading input from "minipci_sprom"...
> Raw input:   
> 014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFF 
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFF 
> FFFF1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C 
> 00FFFFFFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
> Raw output:   
> 014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFF 
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFF 
> FFFF1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C 
> 00FFFFFFFFFFFF3E00490A88FF000010FFFFFFFFFF02C4
> SPROM modified.
> D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom  
> -i minipci_new_sprom -P
> SPROM(0x04, Subsytem product ID) = 0x0453
> SPROM(0x06, Subsystem vendor ID) = 0x14E4
> SPROM(0x08, PCI Product ID) = 0x4320
> SPROM(0x38, High 16 bits of Boardflags) = 0x0000
> SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
> SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
> SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
> SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
> SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
> SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
> SPROM(0x5B, et0mdcport) = ON
> SPROM(0x5B, et1mdcport) = ON
> SPROM(0x5C, Board revision) = 0x34
> SPROM(0x5C, Locale / Country Code) = 0x0
> SPROM(0x5C, B/G PHY antenna 0 available) = OFF
> SPROM(0x5C, B/G PHY antenna 1 available) = ON
> SPROM(0x5C, A PHY antenna 0 available) = OFF
> SPROM(0x5C, A PHY antenna 1 available) = OFF
> SPROM(0x74, B/G PHY antenna gain) = 0x02
> SPROM(0x75, A PHY antenna gain) = 0x00
> SPROM(0x5E, pa0b0) = 0x1528
> SPROM(0x60, pa0b1) = 0xFA97
> SPROM(0x62, pa0b2) = 0xFEAC
> SPROM(0x6A, pa1b0) = 0xFFFF
> SPROM(0x6C, pa1b1) = 0xFFFF
> SPROM(0x6E, pa1b2) = 0xFFFF
> SPROM(0x64, LED 0 behaviour) = 0xFF
> SPROM(0x65, LED 1 behaviour) = 0xFF
> SPROM(0x66, LED 2 behaviour) = 0xFF
> SPROM(0x67, LED 3 behaviour) = 0xFF
> SPROM(0x68, B/G PHY max powerout) = 0x4C
> SPROM(0x69, A PHY max powerout) = 0x00
> SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
> SPROM(0x71, A PHY idle TSSI target) = 0x00
> SPROM(0x7E, SPROM version) = 0x02
> SPROM(0x04, Subsytem product ID) = 0x0453
> SPROM(0x06, Subsystem vendor ID) = 0x14E4
> SPROM(0x08, PCI Product ID) = 0x4320
> SPROM(0x38, High 16 bits of Boardflags) = 0x0000
> SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
> SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
> SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
> SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
> SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
> SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
> SPROM(0x5B, et0mdcport) = ON
> SPROM(0x5B, et1mdcport) = ON
> SPROM(0x5C, Board revision) = 0x34
> SPROM(0x5C, Locale / Country Code) = 0x0
> SPROM(0x5C, B/G PHY antenna 0 available) = OFF
> SPROM(0x5C, B/G PHY antenna 1 available) = ON
> SPROM(0x5C, A PHY antenna 0 available) = OFF
> SPROM(0x5C, A PHY antenna 1 available) = OFF
> SPROM(0x74, B/G PHY antenna gain) = 0x88
> SPROM(0x75, A PHY antenna gain) = 0x00
> SPROM(0x5E, pa0b0) = 0x1528
> SPROM(0x60, pa0b1) = 0xFA97
> SPROM(0x62, pa0b2) = 0xFEAC
> SPROM(0x6A, pa1b0) = 0xFFFF
> SPROM(0x6C, pa1b1) = 0xFFFF
> SPROM(0x6E, pa1b2) = 0xFFFF
> SPROM(0x64, LED 0 behaviour) = 0xFF
> SPROM(0x65, LED 1 behaviour) = 0xFF
> SPROM(0x66, LED 2 behaviour) = 0xFF
> SPROM(0x67, LED 3 behaviour) = 0xFF
> SPROM(0x68, B/G PHY max powerout) = 0x4C
> SPROM(0x69, A PHY max powerout) = 0x00
> SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
> SPROM(0x71, A PHY idle TSSI target) = 0x00
> SPROM(0x7E, SPROM version) = 0x02
> D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
> minipci_new_sprom --antgbg 0x88 -V
> Broadcom-SSB SPROM data modification tool version 001
>
> Reading input from "minipci_sprom"...
> Raw input:   
> 014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFF 
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFF 
> FFFF1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C 
> 00FFFFFFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
> Raw output:   
> 014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFF 
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFF 
> FFFF1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C 
> 00FFFFFFFFFFFF3E00490A0288000010FFFFFFFFFF029A
> SPROM modified.
> D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom  
> -i minipci_new_sprom -P
> SPROM(0x04, Subsytem product ID) = 0x0453
> SPROM(0x06, Subsystem vendor ID) = 0x14E4
> SPROM(0x08, PCI Product ID) = 0x4320
> SPROM(0x38, High 16 bits of Boardflags) = 0x0000
> SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
> SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
> SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
> SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
> SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
> SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
> SPROM(0x5B, et0mdcport) = ON
> SPROM(0x5B, et1mdcport) = ON
> SPROM(0x5C, Board revision) = 0x34
> SPROM(0x5C, Locale / Country Code) = 0x0
> SPROM(0x5C, B/G PHY antenna 0 available) = OFF
> SPROM(0x5C, B/G PHY antenna 1 available) = ON
> SPROM(0x5C, A PHY antenna 0 available) = OFF
> SPROM(0x5C, A PHY antenna 1 available) = OFF
> SPROM(0x74, B/G PHY antenna gain) = 0x02
> SPROM(0x75, A PHY antenna gain) = 0x00
> SPROM(0x5E, pa0b0) = 0x1528
> SPROM(0x60, pa0b1) = 0xFA97
> SPROM(0x62, pa0b2) = 0xFEAC
> SPROM(0x6A, pa1b0) = 0xFFFF
> SPROM(0x6C, pa1b1) = 0xFFFF
> SPROM(0x6E, pa1b2) = 0xFFFF
> SPROM(0x64, LED 0 behaviour) = 0xFF
> SPROM(0x65, LED 1 behaviour) = 0xFF
> SPROM(0x66, LED 2 behaviour) = 0xFF
> SPROM(0x67, LED 3 behaviour) = 0xFF
> SPROM(0x68, B/G PHY max powerout) = 0x4C
> SPROM(0x69, A PHY max powerout) = 0x00
> SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
> SPROM(0x71, A PHY idle TSSI target) = 0x00
> SPROM(0x7E, SPROM version) = 0x02
> SPROM(0x04, Subsytem product ID) = 0x0453
> SPROM(0x06, Subsystem vendor ID) = 0x14E4
> SPROM(0x08, PCI Product ID) = 0x4320
> SPROM(0x38, High 16 bits of Boardflags) = 0x0000
> SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
> SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
> SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
> SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
> SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
> SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
> SPROM(0x5B, et0mdcport) = ON
> SPROM(0x5B, et1mdcport) = ON
> SPROM(0x5C, Board revision) = 0x34
> SPROM(0x5C, Locale / Country Code) = 0x0
> SPROM(0x5C, B/G PHY antenna 0 available) = OFF
> SPROM(0x5C, B/G PHY antenna 1 available) = ON
> SPROM(0x5C, A PHY antenna 0 available) = OFF
> SPROM(0x5C, A PHY antenna 1 available) = OFF
> SPROM(0x74, B/G PHY antenna gain) = 0x02
> SPROM(0x75, A PHY antenna gain) = 0x00
> SPROM(0x5E, pa0b0) = 0x1528
> SPROM(0x60, pa0b1) = 0xFA97
> SPROM(0x62, pa0b2) = 0xFEAC
> SPROM(0x6A, pa1b0) = 0xFFFF
> SPROM(0x6C, pa1b1) = 0xFFFF
> SPROM(0x6E, pa1b2) = 0xFFFF
> SPROM(0x64, LED 0 behaviour) = 0xFF
> SPROM(0x65, LED 1 behaviour) = 0xFF
> SPROM(0x66, LED 2 behaviour) = 0xFF
> SPROM(0x67, LED 3 behaviour) = 0xFF
> SPROM(0x68, B/G PHY max powerout) = 0x4C
> SPROM(0x69, A PHY max powerout) = 0x00
> SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
> SPROM(0x71, A PHY idle TSSI target) = 0x00
> SPROM(0x7E, SPROM version) = 0x02
> D975XBX2KR:ssb-sprom admin$
>
> -- Dale
>
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080619/c68b6263/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080619/c68b6263/attachment.pgp>

From mb at bu3sch.de  Fri Jun 20 11:40:46 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 11:40:46 +0200
Subject: [PATCH] b43legacy: Fix possible NULL pointer dereference in DMA code
Message-ID: <200806201140.46568.mb@bu3sch.de>

This fixes a possible NULL pointer dereference in an error path of the
DMA allocation error checking code. This is also necessary for a future
DMA API change that is on its way into the mainline kernel that adds
an additional dev parameter to dma_mapping_error().

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please apply to 2.6.26



Index: wireless-testing/drivers/net/wireless/b43legacy/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/dma.c	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43legacy/dma.c	2008-06-20 02:06:45.000000000 +0200
@@ -873,12 +873,13 @@ struct b43legacy_dmaring *b43legacy_setu
 	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
 		goto out;
 	ring->type = type;
+	ring->dev = dev;
 
 	nr_slots = B43legacy_RXRING_SLOTS;
 	if (for_tx)
 		nr_slots = B43legacy_TXRING_SLOTS;
 
 	ring->meta = kcalloc(nr_slots, sizeof(struct b43legacy_dmadesc_meta),
@@ -919,13 +920,12 @@ struct b43legacy_dmaring *b43legacy_setu
 
 		dma_unmap_single(dev->dev->dma_dev,
 				 dma_test, sizeof(struct b43legacy_txhdr_fw3),
 				 DMA_TO_DEVICE);
 	}
 
-	ring->dev = dev;
 	ring->nr_slots = nr_slots;
 	ring->mmio_base = b43legacy_dmacontroller_base(type, controller_index);
 	ring->index = controller_index;
 	if (type == B43legacy_DMA_64BIT)
 		ring->ops = &dma64_ops;
 	else


From mb at bu3sch.de  Fri Jun 20 11:46:12 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 11:46:12 +0200
Subject: [PATCH stable] b43legacy: Fix possible NULL pointer dereference in
	DMA code
Message-ID: <200806201146.12984.mb@bu3sch.de>

This fixes a possible NULL pointer dereference in an error path of the
DMA allocation error checking code.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

This patch is not merged to an upstream tree, yet, but is sent to John.


Index: linux-2.6.25.6/drivers/net/wireless/b43legacy/dma.c
===================================================================
--- linux-2.6.25.6.orig/drivers/net/wireless/b43legacy/dma.c	2008-06-14 22:41:44.000000000 +0200
+++ linux-2.6.25.6/drivers/net/wireless/b43legacy/dma.c	2008-06-20 11:42:20.000000000 +0200
@@ -873,12 +873,13 @@ struct b43legacy_dmaring *b43legacy_setu
 	dma_addr_t dma_test;
 
 	ring = kzalloc(sizeof(*ring), GFP_KERNEL);
 	if (!ring)
 		goto out;
 	ring->type = type;
+	ring->dev = dev;
 
 	nr_slots = B43legacy_RXRING_SLOTS;
 	if (for_tx)
 		nr_slots = B43legacy_TXRING_SLOTS;
 
 	ring->meta = kcalloc(nr_slots, sizeof(struct b43legacy_dmadesc_meta),
@@ -919,13 +920,12 @@ struct b43legacy_dmaring *b43legacy_setu
 
 		dma_unmap_single(dev->dev->dma_dev,
 				 dma_test, sizeof(struct b43legacy_txhdr_fw3),
 				 DMA_TO_DEVICE);
 	}
 
-	ring->dev = dev;
 	ring->nr_slots = nr_slots;
 	ring->mmio_base = b43legacy_dmacontroller_base(type, controller_index);
 	ring->index = controller_index;
 	if (type == B43legacy_DMA_64BIT)
 		ring->ops = &dma64_ops;
 	else


From mb at bu3sch.de  Fri Jun 20 11:50:29 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 11:50:29 +0200
Subject: [PATCH] ssb, b43, b43legacy, b44: Rewrite SSB DMA API
Message-ID: <200806201150.29497.mb@bu3sch.de>

This is a rewrite of the DMA API for SSB devices.
This is needed, because the old (non-existing) "API" made too many bad
assumptions on the API of the host-bus (PCI).
This introduces an almost complete SSB-DMA-API that maps to the lowlevel
bus-API based on the bustype.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please merge for 2.6.27
This is one huge patch, because it's not really possible to split this
without breaking bisect.


Index: wireless-testing/drivers/net/b44.c
===================================================================
--- wireless-testing.orig/drivers/net/b44.c	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/drivers/net/b44.c	2008-06-20 02:07:31.000000000 +0200
@@ -145,25 +145,25 @@ B44_STAT_REG_DECLARE
 
 static inline void b44_sync_dma_desc_for_device(struct ssb_device *sdev,
 						dma_addr_t dma_base,
 						unsigned long offset,
 						enum dma_data_direction dir)
 {
-	dma_sync_single_range_for_device(sdev->dma_dev, dma_base,
-					 offset & dma_desc_align_mask,
-					 dma_desc_sync_size, dir);
+	ssb_dma_sync_single_range_for_device(sdev, dma_base,
+					     offset & dma_desc_align_mask,
+					     dma_desc_sync_size, dir);
 }
 
 static inline void b44_sync_dma_desc_for_cpu(struct ssb_device *sdev,
 					     dma_addr_t dma_base,
 					     unsigned long offset,
 					     enum dma_data_direction dir)
 {
-	dma_sync_single_range_for_cpu(sdev->dma_dev, dma_base,
-				      offset & dma_desc_align_mask,
-				      dma_desc_sync_size, dir);
+	ssb_dma_sync_single_range_for_cpu(sdev, dma_base,
+					  offset & dma_desc_align_mask,
+					  dma_desc_sync_size, dir);
 }
 
 static inline unsigned long br32(const struct b44 *bp, unsigned long reg)
 {
 	return ssb_read32(bp->sdev, reg);
 }
@@ -610,16 +610,16 @@ static void b44_tx(struct b44 *bp)
 	for (cons = bp->tx_cons; cons != cur; cons = NEXT_TX(cons)) {
 		struct ring_info *rp = &bp->tx_buffers[cons];
 		struct sk_buff *skb = rp->skb;
 
 		BUG_ON(skb == NULL);
 
-		dma_unmap_single(bp->sdev->dma_dev,
-				 rp->mapping,
-				 skb->len,
-				 DMA_TO_DEVICE);
+		ssb_dma_unmap_single(bp->sdev,
+				     rp->mapping,
+				     skb->len,
+				     DMA_TO_DEVICE);
 		rp->skb = NULL;
 		dev_kfree_skb_irq(skb);
 	}
 
 	bp->tx_cons = cons;
 	if (netif_queue_stopped(bp->dev) &&
@@ -650,35 +650,35 @@ static int b44_alloc_rx_skb(struct b44 *
 	dest_idx = dest_idx_unmasked & (B44_RX_RING_SIZE - 1);
 	map = &bp->rx_buffers[dest_idx];
 	skb = netdev_alloc_skb(bp->dev, RX_PKT_BUF_SZ);
 	if (skb == NULL)
 		return -ENOMEM;
 
-	mapping = dma_map_single(bp->sdev->dma_dev, skb->data,
-				 RX_PKT_BUF_SZ,
-				 DMA_FROM_DEVICE);
+	mapping = ssb_dma_map_single(bp->sdev, skb->data,
+				     RX_PKT_BUF_SZ,
+				     DMA_FROM_DEVICE);
 
 	/* Hardware bug work-around, the chip is unable to do PCI DMA
 	   to/from anything above 1GB :-( */
-	if (dma_mapping_error(mapping) ||
+	if (ssb_dma_mapping_error(bp->sdev, mapping) ||
 		mapping + RX_PKT_BUF_SZ > DMA_30BIT_MASK) {
 		/* Sigh... */
-		if (!dma_mapping_error(mapping))
-			dma_unmap_single(bp->sdev->dma_dev, mapping,
-					RX_PKT_BUF_SZ, DMA_FROM_DEVICE);
+		if (!ssb_dma_mapping_error(bp->sdev, mapping))
+			ssb_dma_unmap_single(bp->sdev, mapping,
+					     RX_PKT_BUF_SZ, DMA_FROM_DEVICE);
 		dev_kfree_skb_any(skb);
 		skb = __netdev_alloc_skb(bp->dev, RX_PKT_BUF_SZ, GFP_ATOMIC|GFP_DMA);
 		if (skb == NULL)
 			return -ENOMEM;
-		mapping = dma_map_single(bp->sdev->dma_dev, skb->data,
-					 RX_PKT_BUF_SZ,
-					 DMA_FROM_DEVICE);
-		if (dma_mapping_error(mapping) ||
+		mapping = ssb_dma_map_single(bp->sdev, skb->data,
+					     RX_PKT_BUF_SZ,
+					     DMA_FROM_DEVICE);
+		if (ssb_dma_mapping_error(bp->sdev, mapping) ||
 			mapping + RX_PKT_BUF_SZ > DMA_30BIT_MASK) {
-			if (!dma_mapping_error(mapping))
-				dma_unmap_single(bp->sdev->dma_dev, mapping, RX_PKT_BUF_SZ,DMA_FROM_DEVICE);
+			if (!ssb_dma_mapping_error(bp->sdev, mapping))
+				ssb_dma_unmap_single(bp->sdev, mapping, RX_PKT_BUF_SZ,DMA_FROM_DEVICE);
 			dev_kfree_skb_any(skb);
 			return -ENOMEM;
 		}
 	}
 
 	rh = (struct rx_header *) skb->data;
@@ -747,15 +747,15 @@ static void b44_recycle_rx(struct b44 *b
 
 	if (bp->flags & B44_FLAG_RX_RING_HACK)
 		b44_sync_dma_desc_for_device(bp->sdev, bp->rx_ring_dma,
 					     dest_idx * sizeof(dest_desc),
 					     DMA_BIDIRECTIONAL);
 
-	dma_sync_single_for_device(bp->sdev->dma_dev, le32_to_cpu(src_desc->addr),
-				   RX_PKT_BUF_SZ,
-				   DMA_FROM_DEVICE);
+	ssb_dma_sync_single_for_device(bp->sdev, le32_to_cpu(src_desc->addr),
+				       RX_PKT_BUF_SZ,
+				       DMA_FROM_DEVICE);
 }
 
 static int b44_rx(struct b44 *bp, int budget)
 {
 	int received;
 	u32 cons, prod;
@@ -769,13 +769,13 @@ static int b44_rx(struct b44 *bp, int bu
 		struct ring_info *rp = &bp->rx_buffers[cons];
 		struct sk_buff *skb = rp->skb;
 		dma_addr_t map = rp->mapping;
 		struct rx_header *rh;
 		u16 len;
 
-		dma_sync_single_for_cpu(bp->sdev->dma_dev, map,
+		ssb_dma_sync_single_for_cpu(bp->sdev, map,
 					    RX_PKT_BUF_SZ,
 					    DMA_FROM_DEVICE);
 		rh = (struct rx_header *) skb->data;
 		len = le16_to_cpu(rh->len);
 		if ((len > (RX_PKT_BUF_SZ - RX_PKT_OFFSET)) ||
 		    (rh->flags & cpu_to_le16(RX_FLAG_ERRORS))) {
@@ -803,14 +803,14 @@ static int b44_rx(struct b44 *bp, int bu
 
 		if (len > RX_COPY_THRESHOLD) {
 			int skb_size;
 			skb_size = b44_alloc_rx_skb(bp, cons, bp->rx_prod);
 			if (skb_size < 0)
 				goto drop_it;
-			dma_unmap_single(bp->sdev->dma_dev, map,
-					 skb_size, DMA_FROM_DEVICE);
+			ssb_dma_unmap_single(bp->sdev, map,
+					     skb_size, DMA_FROM_DEVICE);
 			/* Leave out rx_header */
                 	skb_put(skb, len + RX_PKT_OFFSET);
             	        skb_pull(skb, RX_PKT_OFFSET);
 		} else {
 			struct sk_buff *copy_skb;
 
@@ -963,31 +963,31 @@ static int b44_start_xmit(struct sk_buff
 		netif_stop_queue(dev);
 		printk(KERN_ERR PFX "%s: BUG! Tx Ring full when queue awake!\n",
 		       dev->name);
 		goto err_out;
 	}
 
-	mapping = dma_map_single(bp->sdev->dma_dev, skb->data, len, DMA_TO_DEVICE);
-	if (dma_mapping_error(mapping) || mapping + len > DMA_30BIT_MASK) {
+	mapping = ssb_dma_map_single(bp->sdev, skb->data, len, DMA_TO_DEVICE);
+	if (ssb_dma_mapping_error(bp->sdev, mapping) || mapping + len > DMA_30BIT_MASK) {
 		struct sk_buff *bounce_skb;
 
 		/* Chip can't handle DMA to/from >1GB, use bounce buffer */
-		if (!dma_mapping_error(mapping))
-			dma_unmap_single(bp->sdev->dma_dev, mapping, len,
-					DMA_TO_DEVICE);
+		if (!ssb_dma_mapping_error(bp->sdev, mapping))
+			ssb_dma_unmap_single(bp->sdev, mapping, len,
+					     DMA_TO_DEVICE);
 
 		bounce_skb = __dev_alloc_skb(len, GFP_ATOMIC | GFP_DMA);
 		if (!bounce_skb)
 			goto err_out;
 
-		mapping = dma_map_single(bp->sdev->dma_dev, bounce_skb->data,
-					 len, DMA_TO_DEVICE);
-		if (dma_mapping_error(mapping) || mapping + len > DMA_30BIT_MASK) {
-			if (!dma_mapping_error(mapping))
-				dma_unmap_single(bp->sdev->dma_dev, mapping,
-					 len, DMA_TO_DEVICE);
+		mapping = ssb_dma_map_single(bp->sdev, bounce_skb->data,
+					     len, DMA_TO_DEVICE);
+		if (ssb_dma_mapping_error(bp->sdev, mapping) || mapping + len > DMA_30BIT_MASK) {
+			if (!ssb_dma_mapping_error(bp->sdev, mapping))
+				ssb_dma_unmap_single(bp->sdev, mapping,
+						     len, DMA_TO_DEVICE);
 			dev_kfree_skb_any(bounce_skb);
 			goto err_out;
 		}
 
 		skb_copy_from_linear_data(skb, skb_put(bounce_skb, len), len);
 		dev_kfree_skb_any(skb);
@@ -1079,26 +1079,26 @@ static void b44_free_rings(struct b44 *b
 
 	for (i = 0; i < B44_RX_RING_SIZE; i++) {
 		rp = &bp->rx_buffers[i];
 
 		if (rp->skb == NULL)
 			continue;
-		dma_unmap_single(bp->sdev->dma_dev, rp->mapping, RX_PKT_BUF_SZ,
-					DMA_FROM_DEVICE);
+		ssb_dma_unmap_single(bp->sdev, rp->mapping, RX_PKT_BUF_SZ,
+				     DMA_FROM_DEVICE);
 		dev_kfree_skb_any(rp->skb);
 		rp->skb = NULL;
 	}
 
 	/* XXX needs changes once NETIF_F_SG is set... */
 	for (i = 0; i < B44_TX_RING_SIZE; i++) {
 		rp = &bp->tx_buffers[i];
 
 		if (rp->skb == NULL)
 			continue;
-		dma_unmap_single(bp->sdev->dma_dev, rp->mapping, rp->skb->len,
-					DMA_TO_DEVICE);
+		ssb_dma_unmap_single(bp->sdev, rp->mapping, rp->skb->len,
+				     DMA_TO_DEVICE);
 		dev_kfree_skb_any(rp->skb);
 		rp->skb = NULL;
 	}
 }
 
 /* Initialize tx/rx rings for packet processing.
@@ -1114,20 +1114,20 @@ static void b44_init_rings(struct b44 *b
 	b44_free_rings(bp);
 
 	memset(bp->rx_ring, 0, B44_RX_RING_BYTES);
 	memset(bp->tx_ring, 0, B44_TX_RING_BYTES);
 
 	if (bp->flags & B44_FLAG_RX_RING_HACK)
-		dma_sync_single_for_device(bp->sdev->dma_dev, bp->rx_ring_dma,
-			                  DMA_TABLE_BYTES,
-			                  DMA_BIDIRECTIONAL);
+		ssb_dma_sync_single_for_device(bp->sdev, bp->rx_ring_dma,
+					       DMA_TABLE_BYTES,
+					       DMA_BIDIRECTIONAL);
 
 	if (bp->flags & B44_FLAG_TX_RING_HACK)
-		dma_sync_single_for_device(bp->sdev->dma_dev, bp->tx_ring_dma,
-			                  DMA_TABLE_BYTES,
-			                  DMA_TO_DEVICE);
+		ssb_dma_sync_single_for_device(bp->sdev, bp->tx_ring_dma,
+					       DMA_TABLE_BYTES,
+					       DMA_TO_DEVICE);
 
 	for (i = 0; i < bp->rx_pending; i++) {
 		if (b44_alloc_rx_skb(bp, -1, i) < 0)
 			break;
 	}
 }
@@ -1141,31 +1141,33 @@ static void b44_free_consistent(struct b
 	kfree(bp->rx_buffers);
 	bp->rx_buffers = NULL;
 	kfree(bp->tx_buffers);
 	bp->tx_buffers = NULL;
 	if (bp->rx_ring) {
 		if (bp->flags & B44_FLAG_RX_RING_HACK) {
-			dma_unmap_single(bp->sdev->dma_dev, bp->rx_ring_dma,
-					DMA_TABLE_BYTES,
-					DMA_BIDIRECTIONAL);
+			ssb_dma_unmap_single(bp->sdev, bp->rx_ring_dma,
+					     DMA_TABLE_BYTES,
+					     DMA_BIDIRECTIONAL);
 			kfree(bp->rx_ring);
 		} else
-			dma_free_coherent(bp->sdev->dma_dev, DMA_TABLE_BYTES,
-					    bp->rx_ring, bp->rx_ring_dma);
+			ssb_dma_free_consistent(bp->sdev, DMA_TABLE_BYTES,
+						bp->rx_ring, bp->rx_ring_dma,
+						GFP_KERNEL);
 		bp->rx_ring = NULL;
 		bp->flags &= ~B44_FLAG_RX_RING_HACK;
 	}
 	if (bp->tx_ring) {
 		if (bp->flags & B44_FLAG_TX_RING_HACK) {
-			dma_unmap_single(bp->sdev->dma_dev, bp->tx_ring_dma,
-					DMA_TABLE_BYTES,
-					DMA_TO_DEVICE);
+			ssb_dma_unmap_single(bp->sdev, bp->tx_ring_dma,
+					     DMA_TABLE_BYTES,
+					     DMA_TO_DEVICE);
 			kfree(bp->tx_ring);
 		} else
-			dma_free_coherent(bp->sdev->dma_dev, DMA_TABLE_BYTES,
-					    bp->tx_ring, bp->tx_ring_dma);
+			ssb_dma_free_consistent(bp->sdev, DMA_TABLE_BYTES,
+						bp->tx_ring, bp->tx_ring_dma,
+						GFP_KERNEL);
 		bp->tx_ring = NULL;
 		bp->flags &= ~B44_FLAG_TX_RING_HACK;
 	}
 }
 
 /*
@@ -1184,56 +1186,56 @@ static int b44_alloc_consistent(struct b
 	size = B44_TX_RING_SIZE * sizeof(struct ring_info);
 	bp->tx_buffers = kzalloc(size, gfp);
 	if (!bp->tx_buffers)
 		goto out_err;
 
 	size = DMA_TABLE_BYTES;
-	bp->rx_ring = dma_alloc_coherent(bp->sdev->dma_dev, size, &bp->rx_ring_dma, gfp);
+	bp->rx_ring = ssb_dma_alloc_consistent(bp->sdev, size, &bp->rx_ring_dma, gfp);
 	if (!bp->rx_ring) {
 		/* Allocation may have failed due to pci_alloc_consistent
 		   insisting on use of GFP_DMA, which is more restrictive
 		   than necessary...  */
 		struct dma_desc *rx_ring;
 		dma_addr_t rx_ring_dma;
 
 		rx_ring = kzalloc(size, gfp);
 		if (!rx_ring)
 			goto out_err;
 
-		rx_ring_dma = dma_map_single(bp->sdev->dma_dev, rx_ring,
-			                    DMA_TABLE_BYTES,
-			                    DMA_BIDIRECTIONAL);
+		rx_ring_dma = ssb_dma_map_single(bp->sdev, rx_ring,
+						 DMA_TABLE_BYTES,
+						 DMA_BIDIRECTIONAL);
 
-		if (dma_mapping_error(rx_ring_dma) ||
+		if (ssb_dma_mapping_error(bp->sdev, rx_ring_dma) ||
 			rx_ring_dma + size > DMA_30BIT_MASK) {
 			kfree(rx_ring);
 			goto out_err;
 		}
 
 		bp->rx_ring = rx_ring;
 		bp->rx_ring_dma = rx_ring_dma;
 		bp->flags |= B44_FLAG_RX_RING_HACK;
 	}
 
-	bp->tx_ring = dma_alloc_coherent(bp->sdev->dma_dev, size, &bp->tx_ring_dma, gfp);
+	bp->tx_ring = ssb_dma_alloc_consistent(bp->sdev, size, &bp->tx_ring_dma, gfp);
 	if (!bp->tx_ring) {
-		/* Allocation may have failed due to dma_alloc_coherent
+		/* Allocation may have failed due to ssb_dma_alloc_consistent
 		   insisting on use of GFP_DMA, which is more restrictive
 		   than necessary...  */
 		struct dma_desc *tx_ring;
 		dma_addr_t tx_ring_dma;
 
 		tx_ring = kzalloc(size, gfp);
 		if (!tx_ring)
 			goto out_err;
 
-		tx_ring_dma = dma_map_single(bp->sdev->dma_dev, tx_ring,
+		tx_ring_dma = ssb_dma_map_single(bp->sdev, tx_ring,
 			                    DMA_TABLE_BYTES,
 			                    DMA_TO_DEVICE);
 
-		if (dma_mapping_error(tx_ring_dma) ||
+		if (ssb_dma_mapping_error(bp->sdev, tx_ring_dma) ||
 			tx_ring_dma + size > DMA_30BIT_MASK) {
 			kfree(tx_ring);
 			goto out_err;
 		}
 
 		bp->tx_ring = tx_ring;
Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2008-06-20 02:07:31.000000000 +0200
@@ -325,51 +325,51 @@ static inline
     dma_addr_t map_descbuffer(struct b43_dmaring *ring,
 			      unsigned char *buf, size_t len, int tx)
 {
 	dma_addr_t dmaaddr;
 
 	if (tx) {
-		dmaaddr = dma_map_single(ring->dev->dev->dma_dev,
-					 buf, len, DMA_TO_DEVICE);
+		dmaaddr = ssb_dma_map_single(ring->dev->dev,
+					     buf, len, DMA_TO_DEVICE);
 	} else {
-		dmaaddr = dma_map_single(ring->dev->dev->dma_dev,
-					 buf, len, DMA_FROM_DEVICE);
+		dmaaddr = ssb_dma_map_single(ring->dev->dev,
+					     buf, len, DMA_FROM_DEVICE);
 	}
 
 	return dmaaddr;
 }
 
 static inline
     void unmap_descbuffer(struct b43_dmaring *ring,
 			  dma_addr_t addr, size_t len, int tx)
 {
 	if (tx) {
-		dma_unmap_single(ring->dev->dev->dma_dev,
-				 addr, len, DMA_TO_DEVICE);
+		ssb_dma_unmap_single(ring->dev->dev,
+				     addr, len, DMA_TO_DEVICE);
 	} else {
-		dma_unmap_single(ring->dev->dev->dma_dev,
-				 addr, len, DMA_FROM_DEVICE);
+		ssb_dma_unmap_single(ring->dev->dev,
+				     addr, len, DMA_FROM_DEVICE);
 	}
 }
 
 static inline
     void sync_descbuffer_for_cpu(struct b43_dmaring *ring,
 				 dma_addr_t addr, size_t len)
 {
 	B43_WARN_ON(ring->tx);
-	dma_sync_single_for_cpu(ring->dev->dev->dma_dev,
-				addr, len, DMA_FROM_DEVICE);
+	ssb_dma_sync_single_for_cpu(ring->dev->dev,
+				    addr, len, DMA_FROM_DEVICE);
 }
 
 static inline
     void sync_descbuffer_for_device(struct b43_dmaring *ring,
 				    dma_addr_t addr, size_t len)
 {
 	B43_WARN_ON(ring->tx);
-	dma_sync_single_for_device(ring->dev->dev->dma_dev,
-				   addr, len, DMA_FROM_DEVICE);
+	ssb_dma_sync_single_for_device(ring->dev->dev,
+				       addr, len, DMA_FROM_DEVICE);
 }
 
 static inline
     void free_descriptor_buffer(struct b43_dmaring *ring,
 				struct b43_dmadesc_meta *meta)
 {
@@ -378,43 +378,48 @@ static inline
 		meta->skb = NULL;
 	}
 }
 
 static int alloc_ringmemory(struct b43_dmaring *ring)
 {
-	struct device *dma_dev = ring->dev->dev->dma_dev;
 	gfp_t flags = GFP_KERNEL;
 
 	/* The specs call for 4K buffers for 30- and 32-bit DMA with 4K
 	 * alignment and 8K buffers for 64-bit DMA with 8K alignment. Testing
 	 * has shown that 4K is sufficient for the latter as long as the buffer
 	 * does not cross an 8K boundary.
 	 *
 	 * For unknown reasons - possibly a hardware error - the BCM4311 rev
 	 * 02, which uses 64-bit DMA, needs the ring buffer in very low memory,
 	 * which accounts for the GFP_DMA flag below.
+	 *
+	 * The flags here must match the flags in free_ringmemory below!
 	 */
 	if (ring->type == B43_DMA_64BIT)
 		flags |= GFP_DMA;
-	ring->descbase = dma_alloc_coherent(dma_dev, B43_DMA_RINGMEMSIZE,
-					    &(ring->dmabase), flags);
+	ring->descbase = ssb_dma_alloc_consistent(ring->dev->dev,
+						  B43_DMA_RINGMEMSIZE,
+						  &(ring->dmabase), flags);
 	if (!ring->descbase) {
 		b43err(ring->dev->wl, "DMA ringmemory allocation failed\n");
 		return -ENOMEM;
 	}
 	memset(ring->descbase, 0, B43_DMA_RINGMEMSIZE);
 
 	return 0;
 }
 
 static void free_ringmemory(struct b43_dmaring *ring)
 {
-	struct device *dma_dev = ring->dev->dev->dma_dev;
+	gfp_t flags = GFP_KERNEL;
+
+	if (ring->type == B43_DMA_64BIT)
+		flags |= GFP_DMA;
 
-	dma_free_coherent(dma_dev, B43_DMA_RINGMEMSIZE,
-			  ring->descbase, ring->dmabase);
+	ssb_dma_free_consistent(ring->dev->dev, B43_DMA_RINGMEMSIZE,
+				ring->descbase, ring->dmabase, flags);
 }
 
 /* Reset the RX DMA channel */
 static int b43_dmacontroller_rx_reset(struct b43_wldev *dev, u16 mmio_base,
 				      enum b43_dmatype type)
 {
@@ -515,13 +520,13 @@ static int b43_dmacontroller_tx_reset(st
 
 /* Check if a DMA mapping address is invalid. */
 static bool b43_dma_mapping_error(struct b43_dmaring *ring,
 				  dma_addr_t addr,
 				  size_t buffersize, bool dma_to_device)
 {
-	if (unlikely(dma_mapping_error(addr)))
+	if (unlikely(ssb_dma_mapping_error(ring->dev->dev, addr)))
 		return 1;
 
 	switch (ring->type) {
 	case B43_DMA_30BIT:
 		if ((u64)addr + buffersize > (1ULL << 30))
 			goto address_error;
@@ -841,44 +846,44 @@ struct b43_dmaring *b43_setup_dmaring(st
 					    b43_txhdr_size(dev),
 					    GFP_KERNEL);
 		if (!ring->txhdr_cache)
 			goto err_kfree_meta;
 
 		/* test for ability to dma to txhdr_cache */
-		dma_test = dma_map_single(dev->dev->dma_dev,
-					  ring->txhdr_cache,
-					  b43_txhdr_size(dev),
-					  DMA_TO_DEVICE);
+		dma_test = ssb_dma_map_single(dev->dev,
+					      ring->txhdr_cache,
+					      b43_txhdr_size(dev),
+					      DMA_TO_DEVICE);
 
 		if (b43_dma_mapping_error(ring, dma_test,
 					  b43_txhdr_size(dev), 1)) {
 			/* ugh realloc */
 			kfree(ring->txhdr_cache);
 			ring->txhdr_cache = kcalloc(ring->nr_slots,
 						    b43_txhdr_size(dev),
 						    GFP_KERNEL | GFP_DMA);
 			if (!ring->txhdr_cache)
 				goto err_kfree_meta;
 
-			dma_test = dma_map_single(dev->dev->dma_dev,
-						  ring->txhdr_cache,
-						  b43_txhdr_size(dev),
-						  DMA_TO_DEVICE);
+			dma_test = ssb_dma_map_single(dev->dev,
+						      ring->txhdr_cache,
+						      b43_txhdr_size(dev),
+						      DMA_TO_DEVICE);
 
 			if (b43_dma_mapping_error(ring, dma_test,
 						  b43_txhdr_size(dev), 1)) {
 
 				b43err(dev->wl,
 				       "TXHDR DMA allocation failed\n");
 				goto err_kfree_txhdr_cache;
 			}
 		}
 
-		dma_unmap_single(dev->dev->dma_dev,
-				 dma_test, b43_txhdr_size(dev),
-				 DMA_TO_DEVICE);
+		ssb_dma_unmap_single(dev->dev,
+				     dma_test, b43_txhdr_size(dev),
+				     DMA_TO_DEVICE);
 	}
 
 	err = alloc_ringmemory(ring);
 	if (err)
 		goto err_kfree_txhdr_cache;
 	err = dmacontroller_setup(ring);
Index: wireless-testing/drivers/net/wireless/b43legacy/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/dma.c	2008-06-20 02:06:45.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43legacy/dma.c	2008-06-20 02:08:02.000000000 +0200
@@ -390,59 +390,59 @@ dma_addr_t map_descbuffer(struct b43lega
 			  size_t len,
 			  int tx)
 {
 	dma_addr_t dmaaddr;
 
 	if (tx)
-		dmaaddr = dma_map_single(ring->dev->dev->dma_dev,
-					 buf, len,
-					 DMA_TO_DEVICE);
+		dmaaddr = ssb_dma_map_single(ring->dev->dev,
+					     buf, len,
+					     DMA_TO_DEVICE);
 	else
-		dmaaddr = dma_map_single(ring->dev->dev->dma_dev,
-					 buf, len,
-					 DMA_FROM_DEVICE);
+		dmaaddr = ssb_dma_map_single(ring->dev->dev,
+					     buf, len,
+					     DMA_FROM_DEVICE);
 
 	return dmaaddr;
 }
 
 static inline
 void unmap_descbuffer(struct b43legacy_dmaring *ring,
 		      dma_addr_t addr,
 		      size_t len,
 		      int tx)
 {
 	if (tx)
-		dma_unmap_single(ring->dev->dev->dma_dev,
-				 addr, len,
-				 DMA_TO_DEVICE);
+		ssb_dma_unmap_single(ring->dev->dev,
+				     addr, len,
+				     DMA_TO_DEVICE);
 	else
-		dma_unmap_single(ring->dev->dev->dma_dev,
-				 addr, len,
-				 DMA_FROM_DEVICE);
+		ssb_dma_unmap_single(ring->dev->dev,
+				     addr, len,
+				     DMA_FROM_DEVICE);
 }
 
 static inline
 void sync_descbuffer_for_cpu(struct b43legacy_dmaring *ring,
 			     dma_addr_t addr,
 			     size_t len)
 {
 	B43legacy_WARN_ON(ring->tx);
 
-	dma_sync_single_for_cpu(ring->dev->dev->dma_dev,
-				addr, len, DMA_FROM_DEVICE);
+	ssb_dma_sync_single_for_cpu(ring->dev->dev,
+				    addr, len, DMA_FROM_DEVICE);
 }
 
 static inline
 void sync_descbuffer_for_device(struct b43legacy_dmaring *ring,
 				dma_addr_t addr,
 				size_t len)
 {
 	B43legacy_WARN_ON(ring->tx);
 
-	dma_sync_single_for_device(ring->dev->dev->dma_dev,
-				   addr, len, DMA_FROM_DEVICE);
+	ssb_dma_sync_single_for_device(ring->dev->dev,
+				       addr, len, DMA_FROM_DEVICE);
 }
 
 static inline
 void free_descriptor_buffer(struct b43legacy_dmaring *ring,
 			    struct b43legacy_dmadesc_meta *meta,
 			    int irq_context)
@@ -455,32 +455,31 @@ void free_descriptor_buffer(struct b43le
 		meta->skb = NULL;
 	}
 }
 
 static int alloc_ringmemory(struct b43legacy_dmaring *ring)
 {
-	struct device *dma_dev = ring->dev->dev->dma_dev;
-
-	ring->descbase = dma_alloc_coherent(dma_dev, B43legacy_DMA_RINGMEMSIZE,
-					    &(ring->dmabase), GFP_KERNEL);
+	/* GFP flags must match the flags in free_ringmemory()! */
+	ring->descbase = ssb_dma_alloc_consistent(ring->dev->dev,
+						  B43legacy_DMA_RINGMEMSIZE,
+						  &(ring->dmabase),
+						  GFP_KERNEL);
 	if (!ring->descbase) {
 		b43legacyerr(ring->dev->wl, "DMA ringmemory allocation"
 			     " failed\n");
 		return -ENOMEM;
 	}
 	memset(ring->descbase, 0, B43legacy_DMA_RINGMEMSIZE);
 
 	return 0;
 }
 
 static void free_ringmemory(struct b43legacy_dmaring *ring)
 {
-	struct device *dma_dev = ring->dev->dev->dma_dev;
-
-	dma_free_coherent(dma_dev, B43legacy_DMA_RINGMEMSIZE,
-			  ring->descbase, ring->dmabase);
+	ssb_dma_free_consistent(ring->dev->dev, B43legacy_DMA_RINGMEMSIZE,
+				ring->descbase, ring->dmabase, GFP_KERNEL);
 }
 
 /* Reset the RX DMA channel */
 static int b43legacy_dmacontroller_rx_reset(struct b43legacy_wldev *dev,
 					    u16 mmio_base,
 					    enum b43legacy_dmatype type)
@@ -586,13 +585,13 @@ static int b43legacy_dmacontroller_tx_re
 /* Check if a DMA mapping address is invalid. */
 static bool b43legacy_dma_mapping_error(struct b43legacy_dmaring *ring,
 					 dma_addr_t addr,
 					 size_t buffersize,
 					 bool dma_to_device)
 {
-	if (unlikely(dma_mapping_error(addr)))
+	if (unlikely(ssb_dma_mapping_error(ring->dev->dev, addr)))
 		return 1;
 
 	switch (ring->type) {
 	case B43legacy_DMA_30BIT:
 		if ((u64)addr + buffersize > (1ULL << 30))
 			goto address_error;
@@ -891,39 +890,39 @@ struct b43legacy_dmaring *b43legacy_setu
 					sizeof(struct b43legacy_txhdr_fw3),
 					GFP_KERNEL);
 		if (!ring->txhdr_cache)
 			goto err_kfree_meta;
 
 		/* test for ability to dma to txhdr_cache */
-		dma_test = dma_map_single(dev->dev->dma_dev, ring->txhdr_cache,
-					  sizeof(struct b43legacy_txhdr_fw3),
-					  DMA_TO_DEVICE);
+		dma_test = ssb_dma_map_single(dev->dev, ring->txhdr_cache,
+					      sizeof(struct b43legacy_txhdr_fw3),
+					      DMA_TO_DEVICE);
 
 		if (b43legacy_dma_mapping_error(ring, dma_test,
 					sizeof(struct b43legacy_txhdr_fw3), 1)) {
 			/* ugh realloc */
 			kfree(ring->txhdr_cache);
 			ring->txhdr_cache = kcalloc(nr_slots,
 					sizeof(struct b43legacy_txhdr_fw3),
 					GFP_KERNEL | GFP_DMA);
 			if (!ring->txhdr_cache)
 				goto err_kfree_meta;
 
-			dma_test = dma_map_single(dev->dev->dma_dev,
+			dma_test = ssb_dma_map_single(dev->dev,
 					ring->txhdr_cache,
 					sizeof(struct b43legacy_txhdr_fw3),
 					DMA_TO_DEVICE);
 
 			if (b43legacy_dma_mapping_error(ring, dma_test,
 					sizeof(struct b43legacy_txhdr_fw3), 1))
 				goto err_kfree_txhdr_cache;
 		}
 
-		dma_unmap_single(dev->dev->dma_dev,
-				 dma_test, sizeof(struct b43legacy_txhdr_fw3),
-				 DMA_TO_DEVICE);
+		ssb_dma_unmap_single(dev->dev, dma_test,
+				     sizeof(struct b43legacy_txhdr_fw3),
+				     DMA_TO_DEVICE);
 	}
 
 	ring->nr_slots = nr_slots;
 	ring->mmio_base = b43legacy_dmacontroller_base(type, controller_index);
 	ring->index = controller_index;
 	if (type == B43legacy_DMA_64BIT)
Index: wireless-testing/drivers/ssb/Kconfig
===================================================================
--- wireless-testing.orig/drivers/ssb/Kconfig	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/drivers/ssb/Kconfig	2008-06-20 02:07:31.000000000 +0200
@@ -1,11 +1,11 @@
 menu "Sonics Silicon Backplane"
 
 config SSB_POSSIBLE
 	bool
-	depends on HAS_IOMEM
+	depends on HAS_IOMEM && HAS_DMA
 	default y
 
 config SSB
 	tristate "Sonics Silicon Backplane support"
 	depends on SSB_POSSIBLE
 	help
Index: wireless-testing/drivers/ssb/main.c
===================================================================
--- wireless-testing.orig/drivers/ssb/main.c	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/drivers/ssb/main.c	2008-06-20 02:07:31.000000000 +0200
@@ -459,24 +459,21 @@ static int ssb_devices_register(struct s
 
 		switch (bus->bustype) {
 		case SSB_BUSTYPE_PCI:
 #ifdef CONFIG_SSB_PCIHOST
 			sdev->irq = bus->host_pci->irq;
 			dev->parent = &bus->host_pci->dev;
-			sdev->dma_dev = &bus->host_pci->dev;
 #endif
 			break;
 		case SSB_BUSTYPE_PCMCIA:
 #ifdef CONFIG_SSB_PCMCIAHOST
 			sdev->irq = bus->host_pcmcia->irq.AssignedIRQ;
 			dev->parent = &bus->host_pcmcia->dev;
-			sdev->dma_dev = &bus->host_pcmcia->dev;
 #endif
 			break;
 		case SSB_BUSTYPE_SSB:
-			sdev->dma_dev = dev;
 			break;
 		}
 
 		sdev->dev = dev;
 		err = device_register(dev);
 		if (err) {
@@ -1153,42 +1150,88 @@ void ssb_device_disable(struct ssb_devic
 EXPORT_SYMBOL(ssb_device_disable);
 
 u32 ssb_dma_translation(struct ssb_device *dev)
 {
 	switch (dev->bus->bustype) {
 	case SSB_BUSTYPE_SSB:
-	case SSB_BUSTYPE_PCMCIA:
 		return 0;
 	case SSB_BUSTYPE_PCI:
 		return SSB_PCI_DMA;
+	default:
+		__ssb_dma_not_implemented(dev);
 	}
 	return 0;
 }
 EXPORT_SYMBOL(ssb_dma_translation);
 
-int ssb_dma_set_mask(struct ssb_device *ssb_dev, u64 mask)
+int ssb_dma_set_mask(struct ssb_device *dev, u64 mask)
 {
-	struct device *dma_dev = ssb_dev->dma_dev;
-	int err = 0;
+	int err;
 
-#ifdef CONFIG_SSB_PCIHOST
-	if (ssb_dev->bus->bustype == SSB_BUSTYPE_PCI) {
-		err = pci_set_dma_mask(ssb_dev->bus->host_pci, mask);
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		err = pci_set_dma_mask(dev->bus->host_pci, mask);
 		if (err)
 			return err;
-		err = pci_set_consistent_dma_mask(ssb_dev->bus->host_pci, mask);
+		err = pci_set_consistent_dma_mask(dev->bus->host_pci, mask);
 		return err;
+	case SSB_BUSTYPE_SSB:
+		return dma_set_mask(dev->dev, mask);
+	default:
+		__ssb_dma_not_implemented(dev);
 	}
-#endif
-	dma_dev->coherent_dma_mask = mask;
-	dma_dev->dma_mask = &dma_dev->coherent_dma_mask;
-
-	return err;
+	return -ENOSYS;
 }
 EXPORT_SYMBOL(ssb_dma_set_mask);
 
+void * ssb_dma_alloc_consistent(struct ssb_device *dev, size_t size,
+				dma_addr_t *dma_handle, gfp_t gfp_flags)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		if (gfp_flags & GFP_DMA) {
+			/* Workaround: The PCI API does not support passing
+			 * a GFP flag. */
+			return dma_alloc_coherent(&dev->bus->host_pci->dev,
+						  size, dma_handle, gfp_flags);
+		}
+		return pci_alloc_consistent(dev->bus->host_pci, size, dma_handle);
+	case SSB_BUSTYPE_SSB:
+		return dma_alloc_coherent(dev->dev, size, dma_handle, gfp_flags);
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+	return NULL;
+}
+EXPORT_SYMBOL(ssb_dma_alloc_consistent);
+
+void ssb_dma_free_consistent(struct ssb_device *dev, size_t size,
+			     void *vaddr, dma_addr_t dma_handle,
+			     gfp_t gfp_flags)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		if (gfp_flags & GFP_DMA) {
+			/* Workaround: The PCI API does not support passing
+			 * a GFP flag. */
+			dma_free_coherent(&dev->bus->host_pci->dev,
+					  size, vaddr, dma_handle);
+			return;
+		}
+		pci_free_consistent(dev->bus->host_pci, size,
+				    vaddr, dma_handle);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_free_coherent(dev->dev, size, vaddr, dma_handle);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
+EXPORT_SYMBOL(ssb_dma_free_consistent);
+
 int ssb_bus_may_powerdown(struct ssb_bus *bus)
 {
 	struct ssb_chipcommon *cc;
 	int err = 0;
 
 	/* On buses where more than one core may be working
Index: wireless-testing/include/linux/ssb/ssb.h
===================================================================
--- wireless-testing.orig/include/linux/ssb/ssb.h	2008-06-20 02:04:56.000000000 +0200
+++ wireless-testing/include/linux/ssb/ssb.h	2008-06-20 02:07:31.000000000 +0200
@@ -134,15 +134,12 @@ struct __ssb_dev_wrapper {
 struct ssb_device {
 	/* Having a copy of the ops pointer in each dev struct
 	 * is an optimization. */
 	const struct ssb_bus_ops *ops;
 
 	struct device *dev;
-	/* Pointer to the device that has to be used for
-	 * any DMA related operation. */
-	struct device *dma_dev;
 
 	struct ssb_bus *bus;
 	struct ssb_device_id id;
 
 	u8 core_index;
 	unsigned int irq;
@@ -396,19 +393,157 @@ static inline void ssb_block_write(struc
 {
 	dev->ops->block_write(dev, buffer, count, offset, reg_width);
 }
 #endif /* CONFIG_SSB_BLOCKIO */
 
 
+/* The SSB DMA API. Use this API for any DMA operation on the device.
+ * This API basically is a wrapper that calls the correct DMA API for
+ * the host device type the SSB device is attached to. */
+
 /* Translation (routing) bits that need to be ORed to DMA
  * addresses before they are given to a device. */
 extern u32 ssb_dma_translation(struct ssb_device *dev);
 #define SSB_DMA_TRANSLATION_MASK	0xC0000000
 #define SSB_DMA_TRANSLATION_SHIFT	30
 
-extern int ssb_dma_set_mask(struct ssb_device *ssb_dev, u64 mask);
+extern int ssb_dma_set_mask(struct ssb_device *dev, u64 mask);
+
+extern void * ssb_dma_alloc_consistent(struct ssb_device *dev, size_t size,
+				       dma_addr_t *dma_handle, gfp_t gfp_flags);
+extern void ssb_dma_free_consistent(struct ssb_device *dev, size_t size,
+				    void *vaddr, dma_addr_t dma_handle,
+				    gfp_t gfp_flags);
+
+static inline void __cold __ssb_dma_not_implemented(struct ssb_device *dev)
+{
+#ifdef CONFIG_SSB_DEBUG
+	printk(KERN_ERR "SSB: BUG! Calling DMA API for "
+	       "unsupported bustype %d\n", dev->bus->bustype);
+#endif /* DEBUG */
+}
+
+static inline int ssb_dma_mapping_error(struct ssb_device *dev, dma_addr_t addr)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		return pci_dma_mapping_error(addr);
+	case SSB_BUSTYPE_SSB:
+		return dma_mapping_error(addr);
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+	return -ENOSYS;
+}
+
+static inline dma_addr_t ssb_dma_map_single(struct ssb_device *dev, void *p,
+					    size_t size, enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		return pci_map_single(dev->bus->host_pci, p, size, dir);
+	case SSB_BUSTYPE_SSB:
+		return dma_map_single(dev->dev, p, size, dir);
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+	return 0;
+}
+
+static inline void ssb_dma_unmap_single(struct ssb_device *dev, dma_addr_t dma_addr,
+					size_t size, enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		pci_unmap_single(dev->bus->host_pci, dma_addr, size, dir);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_unmap_single(dev->dev, dma_addr, size, dir);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
+
+static inline void ssb_dma_sync_single_for_cpu(struct ssb_device *dev,
+					       dma_addr_t dma_addr,
+					       size_t size,
+					       enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		pci_dma_sync_single_for_cpu(dev->bus->host_pci, dma_addr,
+					    size, dir);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_sync_single_for_cpu(dev->dev, dma_addr, size, dir);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
+
+static inline void ssb_dma_sync_single_for_device(struct ssb_device *dev,
+						  dma_addr_t dma_addr,
+						  size_t size,
+						  enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		pci_dma_sync_single_for_device(dev->bus->host_pci, dma_addr,
+					       size, dir);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_sync_single_for_device(dev->dev, dma_addr, size, dir);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
+
+static inline void ssb_dma_sync_single_range_for_cpu(struct ssb_device *dev,
+						     dma_addr_t dma_addr,
+						     unsigned long offset,
+						     size_t size,
+						     enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		/* Just sync everything. That's all the PCI API can do. */
+		pci_dma_sync_single_for_cpu(dev->bus->host_pci, dma_addr,
+					    offset + size, dir);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_sync_single_range_for_cpu(dev->dev, dma_addr, offset,
+					      size, dir);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
+
+static inline void ssb_dma_sync_single_range_for_device(struct ssb_device *dev,
+							dma_addr_t dma_addr,
+							unsigned long offset,
+							size_t size,
+							enum dma_data_direction dir)
+{
+	switch (dev->bus->bustype) {
+	case SSB_BUSTYPE_PCI:
+		/* Just sync everything. That's all the PCI API can do. */
+		pci_dma_sync_single_for_device(dev->bus->host_pci, dma_addr,
+					       offset + size, dir);
+		return;
+	case SSB_BUSTYPE_SSB:
+		dma_sync_single_range_for_device(dev->dev, dma_addr, offset,
+						 size, dir);
+		return;
+	default:
+		__ssb_dma_not_implemented(dev);
+	}
+}
 
 
 #ifdef CONFIG_SSB_PCIHOST
 /* PCI-host wrapper driver */
 extern int ssb_pcihost_register(struct pci_driver *driver);
 static inline void ssb_pcihost_unregister(struct pci_driver *driver)


From mb at bu3sch.de  Fri Jun 20 12:41:12 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 12:41:12 +0200
Subject: [PATCH] ssb, b43, b43legacy, b44: Rewrite SSB DMA API
In-Reply-To: <200806201150.29497.mb@bu3sch.de>
References: <200806201150.29497.mb@bu3sch.de>
Message-ID: <200806201241.12344.mb@bu3sch.de>

On Friday 20 June 2008 11:50:29 Michael Buesch wrote:
> This is a rewrite of the DMA API for SSB devices.
> This is needed, because the old (non-existing) "API" made too many bad
> assumptions on the API of the host-bus (PCI).
> This introduces an almost complete SSB-DMA-API that maps to the lowlevel
> bus-API based on the bustype.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> ---
> 
> John, please merge for 2.6.27
> This is one huge patch, because it's not really possible to split this
> without breaking bisect.

Note that this patch will slightly clash with another DMA update
that's going into linux-next.
This is trivial to resolve, however. wiggle will probably be able to
resolve most, if not all, of them.

>  static bool b43_dma_mapping_error(struct b43_dmaring *ring,
>  				  dma_addr_t addr,
>  				  size_t buffersize, bool dma_to_device)
>  {
> -	if (unlikely(dma_mapping_error(addr)))
> +	if (unlikely(ssb_dma_mapping_error(ring->dev->dev, addr)))
>  		return 1;


These calls will clash. The patch in linux-next introduced an additional
dev parameter to dma_mapping_error.
The fix is obvious. Remove the clashing line and add the ssb_dma_mapping_error
call exactly as shown above.

> +static inline int ssb_dma_mapping_error(struct ssb_device *dev, dma_addr_t addr)
> +{
> +	switch (dev->bus->bustype) {
> +	case SSB_BUSTYPE_PCI:
> +		return pci_dma_mapping_error(addr);
> +	case SSB_BUSTYPE_SSB:
> +		return dma_mapping_error(addr);
> +	default:
> +		__ssb_dma_not_implemented(dev);
> +	}
> +	return -ENOSYS;
> +}


The patch in linux-next will require a dev parameter to the lowlevel
functions. Simply do it this way:

pci_dma_mapping_error(dev->bus->host_pci, addr);

and

dma_mapping_error(dev->dev, addr);

-- 
Greetings Michael.


From mb at bu3sch.de  Fri Jun 20 17:44:02 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 17:44:02 +0200
Subject: [PATCH] b43: Add simple firmware watchdog
Message-ID: <200806201744.03128.mb@bu3sch.de>

This adds a simple firmware watchdog for the opensource firmware.
This will check every 15 seconds, if the firmware zeroed out the watchdog
register. The firmware will do this in its eventloop.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for 2.6.27


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-06-20 17:39:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-06-20 17:40:06.000000000 +0200
@@ -2805,12 +2805,27 @@ static void b43_periodic_every30sec(stru
 	b43_calculate_link_quality(dev);
 }
 
 static void b43_periodic_every15sec(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
+	u16 wdr;
+
+	if (dev->fw.opensource) {
+		/* Check if the firmware is still alive.
+		 * It will reset the watchdog counter to 0 in its idle loop. */
+		wdr = b43_shm_read16(dev, B43_SHM_SCRATCH, B43_WATCHDOG_REG);
+		if (unlikely(wdr)) {
+			b43err(dev->wl, "Firmware watchdog: The firmware died!\n");
+			b43_controller_restart(dev, "Firmware watchdog");
+			return;
+		} else {
+			b43_shm_write16(dev, B43_SHM_SCRATCH,
+					B43_WATCHDOG_REG, 1);
+		}
+	}
 
 	if (phy->type == B43_PHYTYPE_G) {
 		//TODO: update_aci_moving_average
 		if (phy->aci_enable && phy->aci_wlan_automatic) {
 			b43_mac_suspend(dev);
 			if (!phy->aci_enable && 1 /*TODO: not scanning? */ ) {
Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2008-06-20 17:39:21.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2008-06-20 17:40:06.000000000 +0200
@@ -438,12 +438,14 @@ enum {
 /* The firmware register to fetch the panic reason from. */
 #define B43_FWPANIC_REASON_REG		3
 /* Firmware panic reason codes */
 #define B43_FWPANIC_DIE			0 /* Firmware died. Don't auto-restart it. */
 #define B43_FWPANIC_RESTART		1 /* Firmware died. Schedule a controller reset. */
 
+/* The firmware register that contains the watchdog counter. */
+#define B43_WATCHDOG_REG		1
 
 /* Device specific rate values.
  * The actual values defined here are (rate_in_mbps * 2).
  * Some code depends on this. Don't change it. */
 #define B43_CCK_RATE_1MB		0x02
 #define B43_CCK_RATE_2MB		0x04


From mb at bu3sch.de  Fri Jun 20 18:02:08 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 20 Jun 2008 18:02:08 +0200
Subject: [PATCH] b43: Add debugfs firmware debugging knob
Message-ID: <200806201802.08440.mb@bu3sch.de>

This adds a firmware debugging knob to debugfs.
With this knob it's possible to enable advanced runtime firmware
checks.
For now it only implements one sanity check for the mac-suspend.
In future there'll probably be more.
If CONFIG_B43_DEBUG is disabled, these checks will collapse to nothing.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for 2.6.27



Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2008-06-20 17:38:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2008-06-20 17:40:09.000000000 +0200
@@ -798,12 +798,13 @@ static void b43_add_dynamic_debug(struct
 	add_dyn_dbg("debug_xmitpower", B43_DBG_XMITPOWER, 0);
 	add_dyn_dbg("debug_dmaoverflow", B43_DBG_DMAOVERFLOW, 0);
 	add_dyn_dbg("debug_dmaverbose", B43_DBG_DMAVERBOSE, 0);
 	add_dyn_dbg("debug_pwork_fast", B43_DBG_PWORK_FAST, 0);
 	add_dyn_dbg("debug_pwork_stop", B43_DBG_PWORK_STOP, 0);
 	add_dyn_dbg("debug_lo", B43_DBG_LO, 0);
+	add_dyn_dbg("debug_firmware", B43_DBG_FIRMWARE, 0);
 
 #undef add_dyn_dbg
 }
 
 void b43_debugfs_add_device(struct b43_wldev *dev)
 {
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2008-06-20 17:38:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2008-06-20 17:40:09.000000000 +0200
@@ -8,12 +8,13 @@ enum b43_dyndbg {		/* Dynamic debugging 
 	B43_DBG_XMITPOWER,
 	B43_DBG_DMAOVERFLOW,
 	B43_DBG_DMAVERBOSE,
 	B43_DBG_PWORK_FAST,
 	B43_DBG_PWORK_STOP,
 	B43_DBG_LO,
+	B43_DBG_FIRMWARE,
 	__B43_NR_DYNDBG,
 };
 
 #ifdef CONFIG_B43_DEBUG
 
 struct dentry;
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2008-06-20 17:40:06.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2008-06-20 17:57:06.000000000 +0200
@@ -2485,12 +2485,25 @@ static void b43_gpio_cleanup(struct b43_
 	ssb_write32(gpiodev, B43_GPIO_CONTROL, 0);
 }
 
 /* http://bcm-specs.sipsolutions.net/EnableMac */
 void b43_mac_enable(struct b43_wldev *dev)
 {
+	if (b43_debug(dev, B43_DBG_FIRMWARE)) {
+		u16 fwstate;
+
+		fwstate = b43_shm_read16(dev, B43_SHM_SHARED,
+					 B43_SHM_SH_UCODESTAT);
+		if ((fwstate != B43_SHM_SH_UCODESTAT_SUSP) &&
+		    (fwstate != B43_SHM_SH_UCODESTAT_SLEEP)) {
+			b43err(dev->wl, "b43_mac_enable(): The firmware "
+			       "should be suspended, but current state is %u\n",
+			       fwstate);
+		}
+	}
+
 	dev->mac_suspended--;
 	B43_WARN_ON(dev->mac_suspended < 0);
 	if (dev->mac_suspended == 0) {
 		b43_write32(dev, B43_MMIO_MACCTL,
 			    b43_read32(dev, B43_MMIO_MACCTL)
 			    | B43_MACCTL_ENABLED);


From Larry.Finger at lwfinger.net  Sat Jun 21 02:05:38 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 20 Jun 2008 19:05:38 -0500
Subject: [PATCH] ssb, b43, b43legacy, b44: Rewrite SSB DMA API
In-Reply-To: <200806201150.29497.mb@bu3sch.de>
References: <200806201150.29497.mb@bu3sch.de>
Message-ID: <485C45D2.1050106@lwfinger.net>

Michael Buesch wrote:
> This is a rewrite of the DMA API for SSB devices.
> This is needed, because the old (non-existing) "API" made too many bad
> assumptions on the API of the host-bus (PCI).
> This introduces an almost complete SSB-DMA-API that maps to the lowlevel
> bus-API based on the bustype.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 

Is there a pre-requisite for this patch? I tried to apply it to 
wireless-testing with version v2.6.26-rc6-10526-ga0d3022. Hunk 4 of 
the patch for drivers/net/wireless/b43legacy/dma.c failed due to a 
line missing from the original source:

> @@ -891,39 +890,39 @@ struct b43legacy_dmaring *b43legacy_setu

--snip--

> +		ssb_dma_unmap_single(dev->dev, dma_test,
> +				     sizeof(struct b43legacy_txhdr_fw3),
> +				     DMA_TO_DEVICE);
>  	}
>  
	ring->dev = dev;     <-------------- This line missing.
>  	ring->nr_slots = nr_slots;
>  	ring->mmio_base = b43legacy_dmacontroller_base(type, controller_index);
>  	ring->index = controller_index;
>  	if (type == B43legacy_DMA_64BIT)

Larry


From mb at bu3sch.de  Sat Jun 21 11:30:11 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 21 Jun 2008 11:30:11 +0200
Subject: [PATCH] ssb, b43, b43legacy, b44: Rewrite SSB DMA API
In-Reply-To: <485C45D2.1050106@lwfinger.net>
References: <200806201150.29497.mb@bu3sch.de> <485C45D2.1050106@lwfinger.net>
Message-ID: <200806211130.11609.mb@bu3sch.de>

On Saturday 21 June 2008 02:05:38 Larry Finger wrote:
> Is there a pre-requisite for this patch?

[PATCH] b43legacy: Fix possible NULL pointer dereference in DMA code

-- 
Greetings Michael.


From dale at daleenterprise.com  Sat Jun 21 16:42:27 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Sat, 21 Jun 2008 10:42:27 -0400
Subject: ssb-sprom discrepancy in results
Message-ID: <0E570B20-657E-4B5D-A811-86F88686A798@daleenterprise.com>

I was interested in modifying some parameters for a miniPCI card and  
a PCI card in an attempt to increase transmit power and gain, turn on  
the second antenna on the minipci card and anthing else that would  
improve performance but before flashing I thought I'd verify the  
changes and make sure I had my setting right but instead I'm shocked.

So, either the app is displaying the wrong data or the wrong data is  
being modified so rather than being destructive and bricking a card I  
thought I'd ask the masters.

Something that interest me is that the N-PHY cards have 3 antennas  
and according to Buffalo Technology Technical support the  
characteristics for all 3 antennas are configurable in the sprom  
which is supposed to include an option for the middle antenna to be  
in regular or diversity mode.

Is there a table somewhere that decodes the sprom and denotes what  
each bit represents in a combined byte?


The source used in the ssb-sprom app was taken at 1:15am EST June  
17th so it was the latest available from git 24 hours ago.



Here's my session and it's clear that something is wrong: (two  
examples given, due to size I didn't provide all the tests, had  
issues adjusting gain)

D75XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antga 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A88FF000010FFFFFFFFFF02C4
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x88
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antgbg 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A0288000010FFFFFFFFFF029A
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$


-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080621/ee8ea204/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080621/ee8ea204/attachment.pgp>

From d.g.jansen at googlemail.com  Sun Jun 22 02:58:13 2008
From: d.g.jansen at googlemail.com (D. Jansen)
Date: Sun, 22 Jun 2008 10:58:13 +1000
Subject: PHY transmission error, 2.6.25.7 x86-64, Ubuntu 8.04.1
Message-ID: <e678b6ed0806211758p36109b86i3a4b74074478210@mail.gmail.com>

Hi,

it it much better now than in 2.6.25.6, great work! But I still get
seemingly the same problem after a while:
The driver became unresponsive after 8.64 hours and ~2GB transfer.

It says it's associated when really it's not. At least it suddenly doesn't
transfer data anymore.

It does not reassociate until I rmmod and reinsert it.

WPA1-PSK, Access Point, Netgear DG834G

uname -a

Linux * 2.6.25.7-idlepatch #14 PREEMPT Fri Jun 20 00:23:47 EST 2008 x86_64
GNU/Linux

sudo lspci -vvn | grep 43 -A7
156:00:1c.2 0604: 8086:2843 (rev 03) (prog-if 00 [Normal decode])
157- Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B-
158- Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
<MAbort- >SERR- <PERR-
159- Latency: 0, Cache Line Size: 64 bytes
160- Bus: primary=00, secondary=06, subordinate=07, sec-latency=0
161- I/O behind bridge: 00004000-00004fff
162- Memory behind bridge: fa000000-fbffffff
163- Prefetchable memory behind bridge: 00000000f4000000-00000000f5ffffff
--
314:04:00.0 0280: 14e4:4311 (rev 01)
315- Subsystem: 1468:0422
316- Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B-
317- Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
<MAbort- >SERR- <PERR-
318- Latency: 0, Cache Line Size: 64 bytes
319- Interrupt: pin A routed to IRQ 17
320- Region 0: Memory at f8000000 (32-bit, non-prefetchable) [size=16K]
321- Capabilities: [40] Power Management version 2


dmesg
[38295.997442] ACPI: PCI Interrupt 0000:04:00.0[A] -> GSI 17 (level, low) ->
IRQ 17
[38295.998213] PCI: Setting latency timer of device 0000:04:00.0 to 64
[38296.023563] ssb: Sonics Silicon Backplane found on PCI device
0000:04:00.0
[38296.026548] b43-phy3: Broadcom 4311 WLAN found
[38296.041439] b43-phy3 debug: Found PHY: Analog 4, Type 2, Revision 8
[38296.041455] b43-phy3 debug: Found Radio: Manuf 0x17F, Version 0x2050,
Revision 2
[38296.056480] phy3: Selected rate control algorithm 'pid'
[38296.057638] Broadcom 43xx driver loaded [ Features: PLR, Firmware-ID:
FW13 ]
[38297.212585] input: b43-phy3 as /class/input/input11
[38297.441562] b43-phy3: Loading firmware version 410.2160 (2007-05-26
15:32:10)
[38298.782433] b43-phy3 debug: Chip initialized
[38298.783164] b43-phy3 debug: 32-bit DMA initialized
[38298.792730] Registered led device: b43-phy3::tx
[38298.793273] Registered led device: b43-phy3::rx
[38298.793725] Registered led device: b43-phy3::radio
[38298.794232] b43-phy3 debug: Wireless interface started
[38298.817010] b43-phy3 debug: Adding Interface type 2
[38298.826841] ADDRCONF(NETDEV_UP): wlan0: link is not ready
[38311.765393] wlan0: Initial auth_alg=0
[38311.766097] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[38311.767880] wlan0: RX authentication from 00:18:4d:b3:fc:52 (alg=0
transaction=2 status=0)
[38311.767885] wlan0: authenticated
[38311.767887] wlan0: associate with AP 00:18:4d:b3:fc:52
[38311.773291] wlan0: RX AssocResp from 00:18:4d:b3:fc:52 (capab=0x471
status=0 aid=2)
[38311.773296] wlan0: associated
[38311.773300] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[38311.773303] wlan0: switched to short barker preamble
(BSSID=00:18:4d:b3:fc:52)
[38311.773825] ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
[38327.968017] wlan0: no IPv6 routers present
[39027.197661] b43-phy3 ERROR: PHY transmission error
[39180.475250] b43-phy3 ERROR: PHY transmission error
[39218.048138] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[39360.349171] b43-phy3 ERROR: PHY transmission error
[39495.218513] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[39495.315795] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[39550.732771] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[39665.248964] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[39665.450098] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[39671.957128] b43-phy3 ERROR: PHY transmission error
[39677.552964] b43-phy3 ERROR: PHY transmission error
[39857.687291] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[40207.077184] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[40215.851515] b43-phy3 ERROR: PHY transmission error
[40495.337494] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[40798.444168] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[41022.685702] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[41071.941158] b43-phy3 ERROR: PHY transmission error
[41197.303071] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[41198.783905] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[41208.915236] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[41210.546396] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[41212.279025] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[41213.764061] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[41220.903324] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[41222.799587] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[41238.684551] wlan0: CTS protection disabled (BSSID=00:18:4d:b3:fc:52)
[41238.889522] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[41355.436219] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[41500.708353] b43-phy3 ERROR: PHY transmission error
[41591.942277] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[41810.360968] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[42046.262793] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[42264.673911] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[42391.422452] b43-phy3 ERROR: PHY transmission error
[42455.444307] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[42508.023737] b43-phy3 ERROR: PHY transmission error
[42513.562102] b43-phy3 ERROR: PHY transmission error
[42762.258916] b43-phy3 ERROR: PHY transmission error
[43174.985238] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[43868.450985] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[44413.464260] b43-phy3 ERROR: PHY transmission error
[44521.557183] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[44665.566364] b43-phy3 ERROR: PHY transmission error
[45162.203828] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[45302.390183] b43-phy3 ERROR: PHY transmission error
[45423.063943] b43-phy3 ERROR: PHY transmission error
[45535.889530] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[45546.644739] b43-phy3 ERROR: PHY transmission error
[45922.300760] b43-phy3 ERROR: PHY transmission error
[45956.557156] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[46385.164164] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[46429.800133] b43-phy3 ERROR: PHY transmission error
[46548.407948] b43-phy3 ERROR: PHY transmission error
[46765.238648] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[46926.232049] b43-phy3 ERROR: PHY transmission error
[47179.678552] b43-phy3 ERROR: PHY transmission error
[47305.929972] b43-phy3 ERROR: PHY transmission error
[47311.557542] b43-phy3 ERROR: PHY transmission error
[47403.779923] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[48194.484845] b43-phy3 ERROR: PHY transmission error
[48196.592177] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[48449.577817] b43-phy3 ERROR: PHY transmission error
[48538.134968] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[48581.055156] b43-phy3 ERROR: PHY transmission error
[48824.672652] b43-phy3 ERROR: PHY transmission error
[48824.672689] b43-phy3 ERROR: PHY transmission error
[48824.741179] b43-phy3 ERROR: PHY transmission error
[48824.741214] b43-phy3 ERROR: PHY transmission error
[48824.809716] b43-phy3 ERROR: PHY transmission error
[48824.809751] b43-phy3 ERROR: PHY transmission error
[48824.878191] b43-phy3 ERROR: PHY transmission error
[48824.878227] b43-phy3 ERROR: PHY transmission error
[48824.946615] b43-phy3 ERROR: PHY transmission error
[48824.946651] b43-phy3 ERROR: PHY transmission error
[48831.047856] printk: 13 messages suppressed.
[48831.047856] b43-phy3 ERROR: PHY transmission error
[48882.249481] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[49433.780660] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[49582.506193] b43-phy3 ERROR: PHY transmission error
[49710.150584] b43-phy3 ERROR: PHY transmission error
[49837.896734] b43-phy3 ERROR: PHY transmission error
[49843.557801] b43-phy3 ERROR: PHY transmission error
[50098.838479] b43-phy3 ERROR: PHY transmission error
[50324.777010] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[50481.294987] b43-phy3 ERROR: PHY transmission error
[51248.794608] b43-phy3 ERROR: PHY transmission error
[51377.069087] b43-phy3 ERROR: PHY transmission error
[51505.440925] b43-phy3 ERROR: PHY transmission error
[51633.408208] b43-phy3 ERROR: PHY transmission error
[51662.538073] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[51761.530091] b43-phy3 ERROR: PHY transmission error
[51765.542135] wlan0: No ProbeResp from current AP 00:18:4d:b3:fc:52 -
assume out of range
[51766.450325] wlan0: Initial auth_alg=0
[51766.450518] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[51766.450746] wlan0: Initial auth_alg=0
[51766.451308] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[51766.650139] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[51766.848951] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[51767.047769] wlan0: authentication with AP 00:18:4d:b3:fc:52 timed out
[52100.318768] b43-phy3 ERROR: PHY transmission error
[52100.318800] b43-phy3 ERROR: PHY transmission error
[52100.318830] b43-phy3 ERROR: PHY transmission error
[52100.319031] b43-phy3 ERROR: PHY transmission error
[52100.319100] b43-phy3 ERROR: PHY transmission error
[52100.319217] b43-phy3 ERROR: PHY transmission error
[52100.319270] b43-phy3 ERROR: PHY transmission error
[52100.319307] b43-phy3 ERROR: PHY transmission error
[52100.319335] b43-phy3 ERROR: PHY transmission error
[52100.319362] b43-phy3 ERROR: PHY transmission error
[52100.365579] b43-phy3 debug: Wireless interface stopped
[52100.366754] b43-phy3 debug: DMA-32 0x0200 (RX) max used slots: 14/64
[52100.366798] b43-phy3 debug: DMA-32 0x02A0 (TX) max used slots: 0/128
[52100.368581] b43-phy3 debug: DMA-32 0x0280 (TX) max used slots: 0/128
[52100.371038] b43-phy3 debug: DMA-32 0x0260 (TX) max used slots: 0/128
[52100.372603] b43-phy3 debug: DMA-32 0x0240 (TX) max used slots: 0/128
[52100.374581] b43-phy3 debug: DMA-32 0x0220 (TX) max used slots: 128/128
[52100.376611] b43-phy3 debug: DMA-32 0x0200 (TX) max used slots: 0/128
[52100.512568] b43-phy3: Loading firmware version 410.2160 (2007-05-26
15:32:10)
[52102.026475] b43-phy3 debug: Chip initialized
[52102.027256] b43-phy3 debug: 32-bit DMA initialized
[52102.036992] Registered led device: b43-phy3::tx
[52102.037539] Registered led device: b43-phy3::rx
[52102.038015] Registered led device: b43-phy3::radio
[52102.038509] b43-phy3 debug: Wireless interface started
[52107.817175] wlan0: Initial auth_alg=0
[52107.817362] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[52107.818763] wlan0: RX authentication from 00:18:4d:b3:fc:52 (alg=0
transaction=2 status=0)
[52107.818975] wlan0: authenticated
[52107.819067] wlan0: associate with AP 00:18:4d:b3:fc:52
[52107.833852] wlan0: RX ReassocResp from 00:18:4d:b3:fc:52 (capab=0x471
status=0 aid=2)
[52107.833852] wlan0: associated
[52107.833852] printk: 993 messages suppressed.
[52107.833852] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[52361.349552] printk: 1 messages suppressed.
[52361.349558] b43-phy3 ERROR: PHY transmission error
[52489.861857] b43-phy3 ERROR: PHY transmission error
[52618.178896] b43-phy3 ERROR: PHY transmission error
[53002.882554] b43-phy3 ERROR: PHY transmission error
[53771.139961] b43-phy3 ERROR: PHY transmission error
[53871.720286] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[54669.515956] b43-phy3 ERROR: PHY transmission error
[55311.529389] b43-phy3 ERROR: PHY transmission error
[55742.116453] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[56337.936313] b43-phy3 ERROR: PHY transmission error
[57107.731249] b43-phy3 ERROR: PHY transmission error
[57457.057411] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[57748.363929] b43-phy3 ERROR: PHY transmission error
[58132.706086] b43-phy3 ERROR: PHY transmission error
[58645.404255] b43-phy3 ERROR: PHY transmission error
[59002.121654] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[59035.585755] b43-phy3 ERROR: PHY transmission error
[59427.564813] b43-phy3 ERROR: PHY transmission error
[60318.356678] b43-phy3 ERROR: PHY transmission error
[60560.329118] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[60702.827735] b43-phy3 ERROR: PHY transmission error
[60831.078748] b43-phy3 ERROR: PHY transmission error
[61087.540059] b43-phy3 ERROR: PHY transmission error
[61600.838580] b43-phy3 ERROR: PHY transmission error
[61857.509731] b43-phy3 ERROR: PHY transmission error
[62243.020082] b43-phy3 ERROR: PHY transmission error
[62371.612813] b43-phy3 ERROR: PHY transmission error
[62510.498717] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[62885.725019] b43-phy3 ERROR: PHY transmission error
[63527.739994] b43-phy3 ERROR: PHY transmission error
[64042.144280] b43-phy3 ERROR: PHY transmission error
[64170.759385] b43-phy3 ERROR: PHY transmission error
[64685.167501] b43-phy3 ERROR: PHY transmission error
[64685.167536] b43-phy3 ERROR: PHY transmission error
[64685.235979] b43-phy3 ERROR: PHY transmission error
[64685.236014] b43-phy3 ERROR: PHY transmission error
[64685.303891] b43-phy3 ERROR: PHY transmission error
[64685.303923] b43-phy3 ERROR: PHY transmission error
[64685.303951] b43-phy3 ERROR: PHY transmission error
[64685.372307] b43-phy3 ERROR: PHY transmission error
[64685.372344] b43-phy3 ERROR: PHY transmission error
[64685.440788] b43-phy3 ERROR: PHY transmission error
[64814.540035] printk: 14 messages suppressed.
[64814.540035] b43-phy3 ERROR: PHY transmission error
[65089.613553] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[65200.767186] b43-phy3 ERROR: PHY transmission error
[65587.038475] b43-phy3 ERROR: PHY transmission error
[65844.437842] b43-phy3 ERROR: PHY transmission error
[65850.148009] b43-phy3 ERROR: PHY transmission error
[66360.351752] b43-phy3 ERROR: PHY transmission error
[67130.831163] b43-phy3 ERROR: PHY transmission error
[67517.147123] b43-phy3 ERROR: PHY transmission error
[68290.333979] b43-phy3 ERROR: PHY transmission error
[68363.679078] wlan0: TKIP decrypt failed for RX frame from
00:18:4d:b3:fc:52 (res=-1)
[68419.348272] b43-phy3 ERROR: PHY transmission error
[68805.285139] b43-phy3 ERROR: PHY transmission error
[68933.712080] b43-phy3 ERROR: PHY transmission error
[68992.423900] b43-phy3 ERROR: PHY transmission error
[69024.141239] atkbd.c: Unknown key pressed (translated set 2, code 0xf8 on
isa0060/serio0).
[69024.141246] atkbd.c: Use 'setkeycodes e078 <keycode>' to make it known.
[69024.147797] atkbd.c: Unknown key released (translated set 2, code 0xf8 on
isa0060/serio0).
[69024.147797] atkbd.c: Use 'setkeycodes e078 <keycode>' to make it known.
[69051.785926] b43-phy3 ERROR: PHY transmission error
[69425.966572] b43-phy3 ERROR: PHY transmission error
[69429.960947] wlan0: No ProbeResp from current AP 00:18:4d:b3:fc:52 -
assume out of range
[69430.861352] wlan0: Initial auth_alg=0
[69430.862000] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[69430.862179] wlan0: Initial auth_alg=0
[69430.862334] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[69431.056580] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[69431.253512] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[69431.450626] wlan0: authentication with AP 00:18:4d:b3:fc:52 timed out
[69615.633936] b43-phy3 debug: Removing Interface type 2
[69615.682059] b43-phy3 debug: Wireless interface stopped
[69615.682156] b43-phy3 debug: DMA-32 0x0200 (RX) max used slots: 11/64
[69615.682200] b43-phy3 debug: DMA-32 0x02A0 (TX) max used slots: 0/128
[69615.683936] b43-phy3 debug: DMA-32 0x0280 (TX) max used slots: 0/128
[69615.686023] b43-phy3 debug: DMA-32 0x0260 (TX) max used slots: 0/128
[69615.687951] b43-phy3 debug: DMA-32 0x0240 (TX) max used slots: 0/128
[69615.689932] b43-phy3 debug: DMA-32 0x0220 (TX) max used slots: 128/128
[69615.691923] b43-phy3 debug: DMA-32 0x0200 (TX) max used slots: 0/128
[69615.742422] ACPI: PCI interrupt for device 0000:04:00.0 disabled
[69615.860686] ACPI: PCI Interrupt 0000:04:00.0[A] -> GSI 17 (level, low) ->
IRQ 17
[69615.861455] PCI: Setting latency timer of device 0000:04:00.0 to 64
[69615.886590] ssb: Sonics Silicon Backplane found on PCI device
0000:04:00.0
[69616.118640] b43-phy4: Broadcom 4311 WLAN found
[69616.133908] b43-phy4 debug: Found PHY: Analog 4, Type 2, Revision 8
[69616.133920] b43-phy4 debug: Found Radio: Manuf 0x17F, Version 0x2050,
Revision 2
[69616.141478] phy4: Selected rate control algorithm 'pid'
[69616.142055] Broadcom 43xx driver loaded [ Features: PLR, Firmware-ID:
FW13 ]
[69618.051381] input: b43-phy4 as /class/input/input12
[69618.381661] b43-phy4: Loading firmware version 410.2160 (2007-05-26
15:32:10)
[69619.708568] b43-phy4 debug: Chip initialized
[69619.709310] b43-phy4 debug: 32-bit DMA initialized
[69619.718820] Registered led device: b43-phy4::tx
[69619.719368] Registered led device: b43-phy4::rx
[69619.719816] Registered led device: b43-phy4::radio
[69619.720336] b43-phy4 debug: Wireless interface started
[69619.743209] b43-phy4 debug: Adding Interface type 2
[69619.754005] ADDRCONF(NETDEV_UP): wlan0: link is not ready
[69632.637133] wlan0: Initial auth_alg=0
[69632.637543] wlan0: authenticate with AP 00:18:4d:b3:fc:52
[69632.638955] wlan0: RX authentication from 00:18:4d:b3:fc:52 (alg=0
transaction=2 status=0)
[69632.638960] wlan0: authenticated
[69632.638962] wlan0: associate with AP 00:18:4d:b3:fc:52
[69632.644514] wlan0: RX AssocResp from 00:18:4d:b3:fc:52 (capab=0x471
status=0 aid=2)
[69632.644519] wlan0: associated
[69632.644523] wlan0: CTS protection enabled (BSSID=00:18:4d:b3:fc:52)
[69632.644526] wlan0: switched to short barker preamble
(BSSID=00:18:4d:b3:fc:52)
[69632.644791] ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
[69646.490415] wlan0: no IPv6 routers present
[69658.055755] b43-phy4 ERROR: PHY transmission error
[69746.474526] b43-phy4 ERROR: PHY transmission error
[69961.070433] b43-phy4 ERROR: PHY transmission error
[70078.884838] b43-phy4 ERROR: PHY transmission error


at the end it produces errors but works again, at least for while...

Thanks for any help!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080622/a0b9722a/attachment.html>

From agejanstap at gmail.com  Sun Jun 22 17:00:07 2008
From: agejanstap at gmail.com (Age Jan (John) Stap)
Date: Sun, 22 Jun 2008 11:00:07 -0400
Subject: after 3 weeks of problems, should I go back to windows?
Message-ID: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>

Hi,
I'm trying to understand Linux and since I was working with DOS and
Pascal since 1982, I thought that I had an advantage....
Here is what I did:
upgraded with max memory my X22 ThinkPad and installed and uninstalled
all kinds of (k)unbutu, Mint, DSl etc. 
My pcmcia linksys card with a broadcom 4306 (rev3) chip worked, did not
work, etc, 
I tried fw-cutter with b43 and b43xx, I tried ndiswrapper, and always
the same outcome: sometimes it works sometimes it does not work.
I'm now back to the blue cable on eth0 but in my debian-lenny-beta2
networkmanager I see my wireless card on wlan0 at only 45% but nothing
happens when I try to activate it.
Reading the forums, it is clear that I'm not the only one but since I'm
very hardheaded (originaly from the netherlands), I want this thing to
operate under the b43 and fw-cutter conditions. If I don't manage, is
there a single pcmcia card that is really Linux-friendly?

thanks for any help 
-  
John


Age Jan Stap
1565 Calixa-Lavallee
Trois-Rivieres, Qc.
G8Y3G1 - CANADA

go visit Helene's site at http://www.helene-vermote.ca

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080622/151cd62f/attachment.html>

From gavron at wetwork.net  Sun Jun 22 17:19:42 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Sun, 22 Jun 2008 08:19:42 -0700
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
Message-ID: <485E6D8E.90602@wetwork.net>



Age Jan (John) Stap wrote:
> Hi,
> I'm trying to understand Linux and since I was working with DOS and 
> Pascal since 1982, I thought that I had an advantage....
> Here is what I did:
> upgraded with max memory my X22 ThinkPad and installed and uninstalled 
> all kinds of (k)unbutu, Mint, DSl etc.
> My pcmcia linksys card with a broadcom 4306 (rev3) chip worked, did 
> not work, etc,
> I tried fw-cutter with b43 and b43xx, I tried ndiswrapper, and always 
> the same outcome: sometimes it works sometimes it does not work.
> I'm now back to the blue cable on eth0 but in my debian-lenny-beta2 
> networkmanager I see my wireless card on wlan0 at only 45% but nothing 
> happens when I try to activate it.
> Reading the forums, it is clear that I'm not the only one but since 
> I'm very hardheaded (originaly from the netherlands), I want this 
> thing to operate under the b43 and fw-cutter conditions. If I don't 
> manage, is there a single pcmcia card that is really Linux-friendly?
>
> thanks for any help
> -  
> John
>
>
> Age Jan Stap
> 1565 Calixa-Lavallee
> Trois-Rivieres, Qc.
> G8Y3G1 - CANADA
>
> go visit Helene's site at http://www.helene-vermote.ca
>         
>
>
>
Funny you should mention that.  I spent two hours last night trying to 
get a BCM4306 working under Deb 2.6.24.4 with no success.   I've had no 
problems getting the same card to work under Fedora from 2.6.23 all the 
way through 2.6.26-rc6.

You didn't mention which kernel you have (uname -a), but as the previous 
sentence will help confound the issue, there's something about the 
Debian distro that makes it not work [more on what "not work" below] and 
I haven't isolated what it is as of yet.

1. The firmware loads.     sudo dmesg | grep b43    shows that the chip 
is detected, the LEDs are connected, etc. 
2. The interface shows up.   sudo iwconfig     shows  wlan0
3. The interface turns on.    sudo ifconfig wlan0 up     no errors
NOT WORK:
4. Unable to scan for networks.  sudo   iwlist wlan0 scan      
5. Unable to associate with AP.    sudo iwconfig wlan0 essid ehudssid 
key wepkeygoeshere open   shows link quality 0 and no AP

I'm currently hunting for more clues.

Ehud



From Larry.Finger at lwfinger.net  Sun Jun 22 18:05:26 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Jun 2008 11:05:26 -0500
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
Message-ID: <485E7846.50208@lwfinger.net>

Age Jan (John) Stap wrote:
> Hi,
> I'm trying to understand Linux and since I was working with DOS and 
> Pascal since 1982, I thought that I had an advantage....
> Here is what I did:
> upgraded with max memory my X22 ThinkPad and installed and uninstalled 
> all kinds of (k)unbutu, Mint, DSl etc.
> My pcmcia linksys card with a broadcom 4306 (rev3) chip worked, did not 
> work, etc,
> I tried fw-cutter with b43 and b43xx, I tried ndiswrapper, and always 
> the same outcome: sometimes it works sometimes it does not work.
> I'm now back to the blue cable on eth0 but in my debian-lenny-beta2 
> networkmanager I see my wireless card on wlan0 at only 45% but nothing 
> happens when I try to activate it.
> Reading the forums, it is clear that I'm not the only one but since I'm 
> very hardheaded (originaly from the netherlands), I want this thing to 
> operate under the b43 and fw-cutter conditions. If I don't manage, is 
> there a single pcmcia card that is really Linux-friendly?
> 
> thanks for any help

That card will work with openSUSE 11.0. Grab the Live CD from their 
web site, boot it and select the Install option after it is booted. 
You will need your wired ethernet until it finishes installing and 
updating. The last step after the installation is complete is to open 
a console and enter the command

sudo /usr/sbin/install_bcm43xx_firmware

Despite the name of the script, it will download and install firmware 
for b43 and b43legacy.

I have been using BCM4306 and BCM4318 PCMCIA cards for years. My 
BCM4306 is a rev 2, which uses b43legacy, but Michael Buesch has a rev 
3 that he uses for development.

As Ehud stated, there is something strange about Debian systems. I'm 
currently trying to help Ubuntu 8.04 users get their devices working.

Larry


From mb at bu3sch.de  Sun Jun 22 19:23:24 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 22 Jun 2008 19:23:24 +0200
Subject: [stable] [PATCH stable] b43legacy: Fix possible NULL pointer
	dereference in DMA code
In-Reply-To: <20080622165959.GA18163@kroah.com>
References: <200806201146.12984.mb@bu3sch.de>
	<20080622165959.GA18163@kroah.com>
Message-ID: <200806221923.24856.mb@bu3sch.de>

On Sunday 22 June 2008 18:59:59 Greg KH wrote:
> On Fri, Jun 20, 2008 at 11:46:12AM +0200, Michael Buesch wrote:
> > This fixes a possible NULL pointer dereference in an error path of the
> > DMA allocation error checking code.
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> > 
> > ---
> > 
> > This patch is not merged to an upstream tree, yet, but is sent to John.
> 
> In the future, if you want patches to get automatically added to stable
> when they go into Linus's tree, just add:
> 	Cc: stable <stable at kernel.org>
> 
> to the "Signed-off-by:" area and we will get notified of it at merge
> time, so you don't have to resend it after it gets applied.

Ok, however often enough it is not trivial to port patches from head to stable.
A bug introduced by a stable port isn't something we really want to risk, I
think. So I'd like to test all stable patches in their final state before they
get submitted to stable.
So for this trivial patch I could probably have used the CC magic, however.

-- 
Greetings Michael.


From Larry.Finger at lwfinger.net  Sun Jun 22 20:08:49 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 22 Jun 2008 13:08:49 -0500
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>	
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
Message-ID: <485E9531.9030205@lwfinger.net>

Age Jan (John) Stap wrote:
> Hi Larry,
> 
> Thanks for your input.
> 
> Suggesting I go with Suze 11, is not the way I want. I have worked with
> all of them over the last three years (must have thrown away 100 plus
> live and install cd's). I want Debian and may have to die before I find
> my solution but so be it.
> 
> Even though I removed NDISWRAPPER from the box (or so I thought!) I do
> notice that on the wireless properties in the network manager I still
> find ndiswrapper as the driver although the fw-cutter/broadcom 43 have
> been installed the latest.....
> 
> Any suggestions on how to go about removing ndiswrapper completely?

Please do not drop the CC to the list. This discussion may be useful 
to someone else.

To get rid of ndiswrapper, you could either unload the Windows driver 
from ndiswrapper, or do the following:

sudo echo "blacklist ndiswrapper" >> /etc/modprobe.d/blacklist

I don't understand your need to stay with Debian, but that is your 
choice. On average, I probably generate at least one new kernel per 
day, and update kernel modules even more frequently. Having to go 
through the steps required to generate a .deb and installing it for 
every change would take 3-4 hours away from my productivity.

Larry


From akihana at gmail.com  Sun Jun 22 22:36:37 2008
From: akihana at gmail.com (Mike Mohr)
Date: Sun, 22 Jun 2008 13:36:37 -0700
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485E9531.9030205@lwfinger.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
Message-ID: <4746469c0806221336o580cee10lb5cd9a6c61490ca2@mail.gmail.com>

Please don't misunderstand the following comments.  I am not
disparaging the great work done by the bcm43xx team, but the fact is
that a reverse engineered driver will never be as good as a driver for
which the original source code or specs are released by the
manufacturer.  I mostly lurk on this list because my linksys routers
all use broadcom chips and there is no easy way to replace them.  When
given a choice of 802.11g cards to purchase for general-purpose use I
always go with cards that have Ralink chipsets.  Ralink is a taiwanese
manufacturer who releases their driver source code under the GPL, and
is the only company that I am aware of that does so.  As a result,
support for their chips in Linux is just superb; I use the in-kernel
driver and it consistently works perfectly.  I have a g MIMO card that
"just works" right OOB (when firmware is installed) and I just can't
sing Ralink's praises enough.  If you want a card that will work
perfectly in all situations, go with a card that has a Ralink chipset.

On Sun, Jun 22, 2008 at 11:08 AM, Larry Finger
<Larry.Finger at lwfinger.net> wrote:
> Age Jan (John) Stap wrote:
>> Hi Larry,
>>
>> Thanks for your input.
>>
>> Suggesting I go with Suze 11, is not the way I want. I have worked with
>> all of them over the last three years (must have thrown away 100 plus
>> live and install cd's). I want Debian and may have to die before I find
>> my solution but so be it.
>>
>> Even though I removed NDISWRAPPER from the box (or so I thought!) I do
>> notice that on the wireless properties in the network manager I still
>> find ndiswrapper as the driver although the fw-cutter/broadcom 43 have
>> been installed the latest.....
>>
>> Any suggestions on how to go about removing ndiswrapper completely?
>
> Please do not drop the CC to the list. This discussion may be useful
> to someone else.
>
> To get rid of ndiswrapper, you could either unload the Windows driver
> from ndiswrapper, or do the following:
>
> sudo echo "blacklist ndiswrapper" >> /etc/modprobe.d/blacklist
>
> I don't understand your need to stay with Debian, but that is your
> choice. On average, I probably generate at least one new kernel per
> day, and update kernel modules even more frequently. Having to go
> through the steps required to generate a .deb and installing it for
> every change would take 3-4 hours away from my productivity.
>
> Larry
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>


From gavron at wetwork.net  Sun Jun 22 22:42:32 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Sun, 22 Jun 2008 13:42:32 -0700
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <4746469c0806221336o580cee10lb5cd9a6c61490ca2@mail.gmail.com>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<4746469c0806221336o580cee10lb5cd9a6c61490ca2@mail.gmail.com>
Message-ID: <485EB938.9020506@wetwork.net>



Mike Mohr wrote:
> Please don't misunderstand the following comments.  
English _is_ my second language but I will do my best to not 
misunderstand the following comments.  I hope you do the same.
> I am not
> disparaging the great work done by the bcm43xx team, but the fact is
> that a reverse engineered driver will never be as good as a driver for
> which the original source code or specs are released by the
> manufacturer.  
That is not a fact.  That's an unproven assertion.
> As a result,
> support for their chips in Linux is just superb;
Whatever subjective phrase "support...is...just superb" there's no such 
causality.  That means, to use smaller words, that there's no indication 
that the "superb support" is BECAUSE they released open-source drivers.  
I'm sure that is a factor, but it's not a CAUSE.
> If you want a card that will work
> perfectly in all situations, go with a card that has a Ralink chipset.
>   
If I wanted a commercial or spam I'd join another list.

Ehud



From mb at bu3sch.de  Sun Jun 22 22:46:47 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 22 Jun 2008 22:46:47 +0200
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485EB938.9020506@wetwork.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<4746469c0806221336o580cee10lb5cd9a6c61490ca2@mail.gmail.com>
	<485EB938.9020506@wetwork.net>
Message-ID: <200806222246.47738.mb@bu3sch.de>

On Sunday 22 June 2008 22:42:32 gavron at wetwork.net wrote:
> 
> Mike Mohr wrote:
> > Please don't misunderstand the following comments.  
> English _is_ my second language but I will do my best to not 
> misunderstand the following comments.  I hope you do the same.
...
> If I wanted a commercial or spam I'd join another list.

I think, however, you misunderstood his comments. ;)

I agree with Mike, that by definition a vendor-unsupported driver
can never be as good as a vendor-supported driver at a certain time in general.

However, there are cases where the vendor-unsupported driver might
be _better_ than the vendor-supported driver. Let it be bugs or whatever.

-- 
Greetings Michael.


From akihana at gmail.com  Sun Jun 22 23:19:04 2008
From: akihana at gmail.com (Mike Mohr)
Date: Sun, 22 Jun 2008 14:19:04 -0700
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485EB938.9020506@wetwork.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<4746469c0806221336o580cee10lb5cd9a6c61490ca2@mail.gmail.com>
	<485EB938.9020506@wetwork.net>
Message-ID: <4746469c0806221419m20b11dbbw6c8e17264fdaa5f9@mail.gmail.com>

Let me respond below..

On Sun, Jun 22, 2008 at 1:42 PM,  <gavron at wetwork.net> wrote:
>
>
> Mike Mohr wrote:
>>
>> Please don't misunderstand the following comments.
>
> English _is_ my second language but I will do my best to not misunderstand
> the following comments.  I hope you do the same.

aye, will do.

>>
>> I am not
>> disparaging the great work done by the bcm43xx team, but the fact is
>> that a reverse engineered driver will never be as good as a driver for
>> which the original source code or specs are released by the
>> manufacturer.
>
> That is not a fact.  That's an unproven assertion.

this is a fact as opposed to an assertion, at least in general.  When
the OEM releases information about how a specific piece of hardware
works, that information will be more accurate than clean-room
reverse-engineered specifications in almost every situation.  It may
just be a subtle difference, but that may make or break the
performance.  YMMV.

>>
>> As a result,
>> support for their chips in Linux is just superb;
>
> Whatever subjective phrase "support...is...just superb" there's no such
> causality.  That means, to use smaller words, that there's no indication
> that the "superb support" is BECAUSE they released open-source drivers.  I'm
> sure that is a factor, but it's not a CAUSE.

Again I'd disagree.  The good folks over at rt2x00.serialmonkey.com
have spent a vast amount of time cleaning up the Ralink drivers for
inclusion in the vanilla kernel.  Without the vendor support it is
almost certain that there would be no F/OSS driver available for this
hardware.  Thus the excellent open-source hardware support for their
cards is a direct result (aka a "cause") of their source code
releases.

>>
>> If you want a card that will work
>> perfectly in all situations, go with a card that has a Ralink chipset.
>>
>
> If I wanted a commercial or spam I'd join another list.

I don't view my comments as commercials or spam.  Notice that I
carefully avoided mentioning any specific manufacturer or device by
name.  Ralink only produces the chipsets; the consumer cards that
contains these chips are manufactured by e.g. Hawking Technologies.
Nowhere in my original mail did I mention a device vendor by name.

>
> Ehud
>
>

Mike

P.S. MB -- thanks for your support :)


From hs4233 at mail.mn-solutions.de  Mon Jun 23 08:59:58 2008
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Mon, 23 Jun 2008 08:59:58 +0200
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485E9531.9030205@lwfinger.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
Message-ID: <200806230859.58835.hs4233@mail.mn-solutions.de>

> I have
> worked with all of them over the last three years (must have
> thrown away 100 plus live and install cd's). I want Debian
> and may have to die before I find my solution but so be it.

I'm on Debian (and love it!) and use various kinds of WLAN cards 
(mostly for tests only) without any problem.

However, I don't use the Debian kernels, I use kernels that I get 
directly from http://www.kernel.org or http://git.kernel.org. 
However, if you're new to linux and/or have a unsupported 3D 
card (e.g. nVidia one), than this might be too much hassle to 
you.


From Larry.Finger at lwfinger.net  Mon Jun 23 23:37:47 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Jun 2008 16:37:47 -0500
Subject: Distro support for firmware installation
Message-ID: <486017AB.5070103@lwfinger.net>

OpenSUSE 11.0 was recently released with a 2.6.25 kernel. The default 
drivers for Broadcom wireless devices switched from bcm43xx to b43 and 
b43legacy, which meant that nearly every user had to reinstall their 
firmware, even if they upgraded from 10.3. The distribution includes a 
compiled copy of b43-fwcutter, and a script to download the Broadcom 
driver files, extract the firmware, and install it; however, the 
presence of this script is not well publicized. Many of those with 
problems had found the b43 page at linux-wireless, but still had 
problems for the usual reasons.

To help with the problems, I am considering adding a new section to 
the b43 web page describing such distro aids for firmware 
installation, which brings 2 questions to mind:

(1) Is this a good idea?
(2) If so, what other distros offer similar aids/tools?

Thanks,

Larry


From mb at bu3sch.de  Mon Jun 23 23:38:40 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 23 Jun 2008 23:38:40 +0200
Subject: Distro support for firmware installation
In-Reply-To: <486017AB.5070103@lwfinger.net>
References: <486017AB.5070103@lwfinger.net>
Message-ID: <200806232338.40142.mb@bu3sch.de>

On Monday 23 June 2008 23:37:47 Larry Finger wrote:
> (1) Is this a good idea?

yes


-- 
Greetings Michael.


From agejanstap at gmail.com  Mon Jun 23 23:47:39 2008
From: agejanstap at gmail.com (John Stap)
Date: Mon, 23 Jun 2008 17:47:39 -0400
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <200806230859.58835.hs4233@mail.mn-solutions.de>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<200806230859.58835.hs4233@mail.mn-solutions.de>
Message-ID: <486019FB.8030206@gmail.com>

Thanks to all you good people that tried to help....

Larry suggested SUSE 11 and only one little sudo line, if only Debian 
could be that easy!

Yes Larry it works as you suggested. Don't like Suse but it works!!!!

Thanks


Holger Schurig wrote:
>> I have
>> worked with all of them over the last three years (must have
>> thrown away 100 plus live and install cd's). I want Debian
>> and may have to die before I find my solution but so be it.
>>     
>
> I'm on Debian (and love it!) and use various kinds of WLAN cards 
> (mostly for tests only) without any problem.
>
> However, I don't use the Debian kernels, I use kernels that I get 
> directly from http://www.kernel.org or http://git.kernel.org. 
> However, if you're new to linux and/or have a unsupported 3D 
> card (e.g. nVidia one), than this might be too much hassle to 
> you.
>
>   

-- 
Age-Jan (John) Stap
1565 Calixa-Lavall?e
Trois-Rivi?res, QC.
G8Y3G1 CANADA

www.helene-vermote.ca




From tessun+Majordomo.Linux-Kernel.bcm43xx at mtessun.dyndns.org  Mon Jun 23 23:47:30 2008
From: tessun+Majordomo.Linux-Kernel.bcm43xx at mtessun.dyndns.org (Martin Tessun)
Date: Mon, 23 Jun 2008 23:47:30 +0200
Subject: Distro support for firmware installation
In-Reply-To: <486017AB.5070103@lwfinger.net>
References: <486017AB.5070103@lwfinger.net>
Message-ID: <486019F2.5030400@mtessun.dyndns.org>

Hi Larry,

just as I am using openSuSE 11.0 with two b43-cards, I drop some 
comments to your questions below.

Larry Finger schrieb:
> OpenSUSE 11.0 was recently released with a 2.6.25 kernel. The default 
> drivers for Broadcom wireless devices switched from bcm43xx to b43 and 
> b43legacy, which meant that nearly every user had to reinstall their 
> firmware, even if they upgraded from 10.3. The distribution includes a 
> compiled copy of b43-fwcutter, and a script to download the Broadcom 
> driver files, extract the firmware, and install it; however, the 
> presence of this script is not well publicized. Many of those with 
> problems had found the b43 page at linux-wireless, but still had 
> problems for the usual reasons.
> 
> To help with the problems, I am considering adding a new section to 
> the b43 web page describing such distro aids for firmware 
> installation, which brings 2 questions to mind:
> 
> (1) Is this a good idea?

Well, yes. I think so. As I am an experienced user I just had a look at 
the b43-page just before installing openSuSE 11.0 and burned the 
firmware to CD, so I could do my network installation :)

So, what should be mentioned is something like: Download Firmware x for 
Distro y and run fwcutter. As the rest is already on the page :)

> (2) If so, what other distros offer similar aids/tools?

Unfortunately I don't know by self-experience, but as far as I know 
Ubuntu is at least discussing something like that: 
http://brainstorm.ubuntu.com/idea/5412/

Regards,
Martin


From kropx77 at gmail.com  Tue Jun 24 00:03:22 2008
From: kropx77 at gmail.com (Christophe Giboudeaux)
Date: Tue, 24 Jun 2008 00:03:22 +0200
Subject: Distro support for firmware installation
In-Reply-To: <486017AB.5070103@lwfinger.net>
References: <486017AB.5070103@lwfinger.net>
Message-ID: <200806240003.23214.kropx77@gmail.com>

Le Monday 23 June 2008 23:37:47 Larry Finger, vous avez ?crit :
>
> (1) Is this a good idea?

Yes, but someone upgrading from <distro shipping bcm43xx> to <distro only 
shipping b43> won't be able to read this section :-)

> (2) If so, what other distros offer similar aids/tools?
>
Ubuntu and Debian have such a script in /usr/share/b43-
fwcutter/install_bcm43xx_firmware.sh (provided by the b43-fwcutter package)


From Larry.Finger at lwfinger.net  Tue Jun 24 00:28:05 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Jun 2008 17:28:05 -0500
Subject: Distro support for firmware installation
In-Reply-To: <200806240003.23214.kropx77@gmail.com>
References: <486017AB.5070103@lwfinger.net>
	<200806240003.23214.kropx77@gmail.com>
Message-ID: <48602375.8000107@lwfinger.net>

Christophe Giboudeaux wrote:
> Le Monday 23 June 2008 23:37:47 Larry Finger, vous avez ?crit :
>> (1) Is this a good idea?
> 
> Yes, but someone upgrading from <distro shipping bcm43xx> to <distro only 
> shipping b43> won't be able to read this section :-)

Unless they have a working Internet connection, they won't be able to 
get the Broadcom driver anyway.

>> (2) If so, what other distros offer similar aids/tools?
>>
> Ubuntu and Debian have such a script in /usr/share/b43-
> fwcutter/install_bcm43xx_firmware.sh (provided by the b43-fwcutter package)

Thanks for the info. The instructions for openSUSE, Ubuntu and Debian 
are now included. Please suggest any wording changes.

Larry



From ikorot at earthlink.net  Tue Jun 24 01:01:15 2008
From: ikorot at earthlink.net (Igor Korot)
Date: Mon, 23 Jun 2008 19:01:15 -0400 (EDT)
Subject: Distro support for firmware installation
Message-ID: <324821.1214262076194.JavaMail.root@mswamui-swiss.atl.sa.earthlink.net>

Larry,

-----Original Message-----
>From: Larry Finger <Larry.Finger at lwfinger.net>
>Sent: Jun 23, 2008 6:28 PM
>To: kropx77 at gmail.com
>Cc: bcm43xx-dev at lists.berlios.de
>Subject: Re: Distro support for firmware installation
>
>Christophe Giboudeaux wrote:
>> Le Monday 23 June 2008 23:37:47 Larry Finger, vous avez ?crit :
>>> (1) Is this a good idea?
>> 
>> Yes, but someone upgrading from <distro shipping bcm43xx> to <distro only 
>> shipping b43> won't be able to read this section :-)
>
>Unless they have a working Internet connection, they won't be able to 
>get the Broadcom driver anyway.
>
>>> (2) If so, what other distros offer similar aids/tools?
>>>
>> Ubuntu and Debian have such a script in /usr/share/b43-
>> fwcutter/install_bcm43xx_firmware.sh (provided by the b43-fwcutter package)
>
>Thanks for the info. The instructions for openSUSE, Ubuntu and Debian 
>are now included. Please suggest any wording changes.

Here is the link to the Gentoo way:

http://forums.gentoo.org/viewtopic-t-547687-start-0.html

First post in the thread contain instructions...

Thank you.
>
>Larry
>
>_______________________________________________
>Bcm43xx-dev mailing list
>Bcm43xx-dev at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From ramkumar.research at gmail.com  Tue Jun 24 01:22:28 2008
From: ramkumar.research at gmail.com (Ram kumar)
Date: Mon, 23 Jun 2008 16:22:28 -0700
Subject: BCM 4325 support
Message-ID: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>

hi,
        I would like to know whether Broadcomm new wlan+Bluetooth BCM4325
module has linux driver support.

I couldn't see any information on the website as well as in this website(
http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please
let us know about the driver support for this chip.

Regards,
Ram
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080623/49f89138/attachment.html>

From celejar at gmail.com  Tue Jun 24 02:13:29 2008
From: celejar at gmail.com (Celejar)
Date: Mon, 23 Jun 2008 20:13:29 -0400
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485E9531.9030205@lwfinger.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
Message-ID: <20080623201329.a1b60d09.celejar@gmail.com>

On Sun, 22 Jun 2008 13:08:49 -0500
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> I don't understand your need to stay with Debian, but that is your 
> choice. On average, I probably generate at least one new kernel per 
> day, and update kernel modules even more frequently. Having to go 
> through the steps required to generate a .deb and installing it for 
> every change would take 3-4 hours away from my productivity.

I'm no expert, and maybe I'm missing something, but rebuilding a kernel
the Debian way is just:

1:	make [menu|x|g|whatever]config]
2:	make-kpkg --revision=whatever kernel_image
3:	dpkg -i whatever.deb

How does this add significant overhead to the standard methods for
building kernels?  [I am perfectly willing to be educated; as I
mentioned, I'm no expert.]

> Larry

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From celejar at gmail.com  Tue Jun 24 02:16:11 2008
From: celejar at gmail.com (Celejar)
Date: Mon, 23 Jun 2008 20:16:11 -0400
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <200806230859.58835.hs4233@mail.mn-solutions.de>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<200806230859.58835.hs4233@mail.mn-solutions.de>
Message-ID: <20080623201611.111fdef5.celejar@gmail.com>

On Mon, 23 Jun 2008 08:59:58 +0200
Holger Schurig <hs4233 at mail.mn-solutions.de> wrote:

> > I have
> > worked with all of them over the last three years (must have
> > thrown away 100 plus live and install cd's). I want Debian
> > and may have to die before I find my solution but so be it.
> 
> I'm on Debian (and love it!) and use various kinds of WLAN cards 
> (mostly for tests only) without any problem.
> 
> However, I don't use the Debian kernels, I use kernels that I get 
> directly from http://www.kernel.org or http://git.kernel.org. 
> However, if you're new to linux and/or have a unsupported 3D 
> card (e.g. nVidia one), than this might be too much hassle to 
> you.

I also use Debian (Sid), and I've never had any problems that appeared
to be related specifically to Debian.  I do use Debian kernels, both
stock and self built with kernel-package from Debian packaged sources,
as well as the occasional vanilla tarball.

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From dale at daleenterprise.com  Tue Jun 24 02:39:28 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 23 Jun 2008 20:39:28 -0400
Subject: ssb-sprom application issues.
Message-ID: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>

I've written about this several times and it seemed to have gone  
unanswered.

I have been trying to modify antenna and antenna gain values and it  
appears that the wrong data is being modified.

Will this be addressed or is the applications functionality of no  
concern?

The source used in the ssb-sprom app was taken at 1:15am EST June  
17th so it was the latest available from git 24 at that time.



Here's my session and it's clear that something is wrong: (two  
examples given, due to size I didn't provide all the tests, had  
issues adjusting antennas)

D75XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antga 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A88FF000010FFFFFFFFFF02C4
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x88
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -o  
minipci_new_sprom --antgbg 0x88 -V
Broadcom-SSB SPROM data modification tool version 001

Reading input from "minipci_sprom"...
Raw input:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A02FF000010FFFFFFFFFF02FF
Raw output:   
014000005304E41420430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFF 
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF 
1600C6383B71FFFFFFFFFFFFFFFFFFFFFFFFFFFF3430281597FAACFEFFFFFFFF4C00FFFF 
FFFFFFFF3E00490A0288000010FFFFFFFFFF029A
SPROM modified.
D975XBX2KR:ssb-sprom admin$ ssb-sprom -i minipci_sprom -P;ssb-sprom - 
i minipci_new_sprom -P
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
SPROM(0x04, Subsytem product ID) = 0x0453
SPROM(0x06, Subsystem vendor ID) = 0x14E4
SPROM(0x08, PCI Product ID) = 0x4320
SPROM(0x38, High 16 bits of Boardflags) = 0x0000
SPROM(0x72, Low 16 bits of Boardflags) = 0x0A49
SPROM(0x48, MAC address for 802.11b/g) = 00:16:38:c6:71:3b
SPROM(0x4E, MAC address for ethernet) = ff:ff:ff:ff:ff:ff
SPROM(0x54, MAC address for 802.11a) = ff:ff:ff:ff:ff:ff
SPROM(0x5A, Ethernet phy settings (0)) = 0x1F
SPROM(0x5A, Ethernet phy settings (1)) = 0x1F
SPROM(0x5B, et0mdcport) = ON
SPROM(0x5B, et1mdcport) = ON
SPROM(0x5C, Board revision) = 0x34
SPROM(0x5C, Locale / Country Code) = 0x0
SPROM(0x5C, B/G PHY antenna 0 available) = OFF
SPROM(0x5C, B/G PHY antenna 1 available) = ON
SPROM(0x5C, A PHY antenna 0 available) = OFF
SPROM(0x5C, A PHY antenna 1 available) = OFF
SPROM(0x74, B/G PHY antenna gain) = 0x02
SPROM(0x75, A PHY antenna gain) = 0x00
SPROM(0x5E, pa0b0) = 0x1528
SPROM(0x60, pa0b1) = 0xFA97
SPROM(0x62, pa0b2) = 0xFEAC
SPROM(0x6A, pa1b0) = 0xFFFF
SPROM(0x6C, pa1b1) = 0xFFFF
SPROM(0x6E, pa1b2) = 0xFFFF
SPROM(0x64, LED 0 behaviour) = 0xFF
SPROM(0x65, LED 1 behaviour) = 0xFF
SPROM(0x66, LED 2 behaviour) = 0xFF
SPROM(0x67, LED 3 behaviour) = 0xFF
SPROM(0x68, B/G PHY max powerout) = 0x4C
SPROM(0x69, A PHY max powerout) = 0x00
SPROM(0x70, B/G PHY idle TSSI target) = 0x3E
SPROM(0x71, A PHY idle TSSI target) = 0x00
SPROM(0x7E, SPROM version) = 0x02
D975XBX2KR:ssb-sprom admin$


-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080623/691b82f1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080623/691b82f1/attachment.pgp>

From gavron at wetwork.net  Tue Jun 24 03:11:08 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Mon, 23 Jun 2008 18:11:08 -0700
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <20080623201329.a1b60d09.celejar@gmail.com>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<20080623201329.a1b60d09.celejar@gmail.com>
Message-ID: <486049AC.9050705@wetwork.net>



Celejar wrote:
> On Sun, 22 Jun 2008 13:08:49 -0500
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
>
> ...
>>  Having to go 
>> through the steps required to generate a .deb and installing it for 
>> every change would take 3-4 hours away from my productivity.
>>     
>
> I'm no expert, and maybe I'm missing something, but rebuilding a kernel
> the Debian way is just:
>
> 1:	make [menu|x|g|whatever]config]
> 2:	make-kpkg --revision=whatever kernel_image
> 3:	dpkg -i whatever.deb
>
> How does this add significant overhead to the standard methods for
> building kernels?  [I am perfectly willing to be educated; as I
> mentioned, I'm no expert.]
>
>   
>> Larry
>>     
>
>   
Normal kernel, step 1 is the same.
Normal kernel, step 2 is make && make modules_install 
Normal kernel, step 3 is make install

For step 2 on a non Debian machine I can add -j3 and run three 
simultaneous processes.  I can build an entire kernel tree from scratch 
in under 20 minutes.  The make-kpkg takes 47 minutes.

For step 3 on a non Debian system I can do it in 13 seconds.  The "dpkg 
-i whatever" takes over 13 minutes.

Here's how you can test this...

1. On a Debian system   time nice make-kpkg...   && time nice dpkg -i ....
2. On the same system   time nice (make -j2 && make -j2 modules_install 
&& make -j2 install)
(If you only have a single threaded uniprocessor leave off the -j2)

Ehud


From proski at gnu.org  Tue Jun 24 03:47:56 2008
From: proski at gnu.org (Pavel Roskin)
Date: Mon, 23 Jun 2008 21:47:56 -0400
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <486049AC.9050705@wetwork.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<20080623201329.a1b60d09.celejar@gmail.com>
	<486049AC.9050705@wetwork.net>
Message-ID: <20080623214756.juql44ql2s8ckcow-cebfxv@webmail.spamcop.net>

Quoting gavron at wetwork.net:

> Normal kernel, step 1 is the same.
> Normal kernel, step 2 is make && make modules_install
> Normal kernel, step 3 is make install
>
> For step 2 on a non Debian machine I can add -j3 and run three
> simultaneous processes.  I can build an entire kernel tree from scratch
> in under 20 minutes.  The make-kpkg takes 47 minutes.

Let's not waste time on this.  Debian won't improve the driver for us.  
  Adding user friendly instructions (let alone distributing custom  
kernels) will likely increase the number of questions, no matter how  
good and friendly the instructions may be.  The end result will be b43  
developers supporting people who cannot contribute anything useful to  
the driver, who cannot describe their configuration, who don't read  
instructions and who disappear as soon as their problem is solved.   
Distros should be doing this, not us.  They are better equipped to  
deal with it.

This is evidenced by my experience with MadWifi, where providing a  
user friendly snapshot with support for the latest hardware resulted  
in turning one on the Trac tickets into a trollfest with occasional  
name calling and suggestions to run "rm -rf /" to install the driver.   
That mess required administrative permissions to clean up and took  
some time that could have been spent on fixing real bugs.

Let's publish the instructions that are already written, and that's it.

-- 
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Tue Jun 24 05:26:21 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 23 Jun 2008 22:26:21 -0500
Subject: BCM 4325 support
In-Reply-To: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
Message-ID: <4860695D.4080705@lwfinger.net>

Ram kumar wrote:
> hi,
>         I would like to know whether Broadcomm new wlan+Bluetooth 
> BCM4325 module has linux driver support.
> 
> I couldn't see any information on the website as well as in this 
> website(http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please  
> let us know about the driver support for this chip.

There is unlikely to be any support for the Bluetooth. As for the wifi 
part, it depends on what PHY is included. If it is a pre-N device or 
has a so-called LP-PHY for B/G operations, then it is not yet supported.

What does 'lspci -v' and 'lspci -n' show for this device?

Do you generate your own kernel? If so, what version are you using?

Larry


From post at hendrik-sattler.de  Tue Jun 24 10:16:41 2008
From: post at hendrik-sattler.de (Hendrik Sattler)
Date: Tue, 24 Jun 2008 10:16:41 +0200
Subject: Distro support for firmware installation
In-Reply-To: <486017AB.5070103@lwfinger.net>
References: <486017AB.5070103@lwfinger.net>
Message-ID: <20080624101641.bmdsta4sn400408s@v1539.ncsrv.de>

Zitat von Larry Finger <Larry.Finger at lwfinger.net>:

> OpenSUSE 11.0 was recently released with a 2.6.25 kernel. The default
> drivers for Broadcom wireless devices switched from bcm43xx to b43 and
> b43legacy, which meant that nearly every user had to reinstall their
> firmware, even if they upgraded from 10.3. The distribution includes a
> compiled copy of b43-fwcutter, and a script to download the Broadcom
> driver files, extract the firmware, and install it; however, the
> presence of this script is not well publicized. Many of those with
> problems had found the b43 page at linux-wireless, but still had
> problems for the usual reasons.
>
> To help with the problems, I am considering adding a new section to
> the b43 web page describing such distro aids for firmware
> installation, which brings 2 questions to mind:
>
> (1) Is this a good idea?

Definitely.

> (2) If so, what other distros offer similar aids/tools?

Debian, although not pre-installed because it cannot be in main:
http://packages.debian.org/b43-fwcutter and
http://packages.debian.org/bcm43xx-fwcutter

Same as for many other firmware packages (e.g. for iwl4965), thus not  
really new for Debian users.

HS




From mb at bu3sch.de  Tue Jun 24 11:35:50 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 24 Jun 2008 11:35:50 +0200
Subject: BCM 4325 support
In-Reply-To: <4860695D.4080705@lwfinger.net>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net>
Message-ID: <200806241135.51172.mb@bu3sch.de>

On Tuesday 24 June 2008 05:26:21 Larry Finger wrote:
> Ram kumar wrote:
> > hi,
> >         I would like to know whether Broadcomm new wlan+Bluetooth 
> > BCM4325 module has linux driver support.
> > 
> > I couldn't see any information on the website as well as in this 
> > website(http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please  
> > let us know about the driver support for this chip.
> 
> There is unlikely to be any support for the Bluetooth.

The BT device most likely is a seperate standard device that already works.
I have a 4318 with combined BT that just works fine. 


-- 
Greetings Michael.


From kropx77 at gmail.com  Tue Jun 24 11:55:26 2008
From: kropx77 at gmail.com (Christophe Giboudeaux)
Date: Tue, 24 Jun 2008 11:55:26 +0200
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <485E7846.50208@lwfinger.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
Message-ID: <200806241155.27433.kropx77@gmail.com>

Le Sunday 22 June 2008 18:05:26 Larry Finger, vous avez ?crit :
>
> As Ehud stated, there is something strange about Debian systems. I'm
> currently trying to help Ubuntu 8.04 users get their devices working.
>
> Larry

Just a quick note about this : when using the firmware suggested on the b43 
homepage, I get tons of PHY transmission error (basically when watching tv 
streams).

I tried the debian script I mentioned in another thread which didn't download 
the 4.150.10.5 firmware but the one suggested for 2.6.24 kernels (4.80.53.0).

With this firmware, I don't get PHY reports anymore and I get less freezes (so, 
maybe the problem is still present but doesn't appear in the dmesg log)

kernel version : 2.6.25-5
b43-fwcutter version 011

I hope this may be useful for your investigations :)




From mb at bu3sch.de  Tue Jun 24 12:22:05 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 24 Jun 2008 12:22:05 +0200
Subject: [PATCH] b43: Fix PIO skb clobber
Message-ID: <200806241222.05767.mb@bu3sch.de>

This fixes a clobber of the skb that was introduced by the
tx_control->cb conversion patches.
This bug causes a crash when the skb destructor is invoked. That happens
on skb_orphan or skb_kfree.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please apply this bugfix to 2.6.27, as the bug is not present in 2.6.26.


Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2008-05-23 23:41:06.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2008-06-24 12:10:12.000000000 +0200
@@ -583,13 +583,13 @@ void b43_pio_handle_txstatus(struct b43_
 	if (unlikely(!q))
 		return;
 	B43_WARN_ON(!pack);
 
 	spin_lock(&q->lock); /* IRQs are already disabled. */
 
-	info = (void *)pack->skb;
+	info = IEEE80211_SKB_CB(pack->skb);
 	memset(&info->status, 0, sizeof(info->status));
 
 	b43_fill_txstatus_report(info, status);
 
 	total_len = pack->skb->len + b43_txhdr_size(dev);
 	total_len = roundup(total_len, 4);


From netrolller.3d at gmail.com  Tue Jun 24 16:43:03 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Tue, 24 Jun 2008 16:43:03 +0200
Subject: BCM 4325 support
In-Reply-To: <200806241135.51172.mb@bu3sch.de>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net> <200806241135.51172.mb@bu3sch.de>
Message-ID: <69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>

On Tue, Jun 24, 2008 at 11:35 AM, Michael Buesch <mb at bu3sch.de> wrote:
> On Tuesday 24 June 2008 05:26:21 Larry Finger wrote:
>> Ram kumar wrote:
>> > hi,
>> >         I would like to know whether Broadcomm new wlan+Bluetooth
>> > BCM4325 module has linux driver support.
>> >
>> > I couldn't see any information on the website as well as in this
>> > website(http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please
>> > let us know about the driver support for this chip.
>>
>> There is unlikely to be any support for the Bluetooth.
>
> The BT device most likely is a seperate standard device that already works.
> I have a 4318 with combined BT that just works fine.
>
>
> --
> Greetings Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

Isn't 14E4:4325 = BCM43XG?

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From ramkumar.research at gmail.com  Tue Jun 24 18:00:27 2008
From: ramkumar.research at gmail.com (Ram kumar)
Date: Tue, 24 Jun 2008 09:00:27 -0700
Subject: BCM 4325 support
In-Reply-To: <4860695D.4080705@lwfinger.net>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net>
Message-ID: <6306c640806240900m5b6fd990y6888f54487a1ab09@mail.gmail.com>

hi,

On Mon, Jun 23, 2008 at 8:26 PM, Larry Finger <Larry.Finger at lwfinger.net>
wrote:

> Ram kumar wrote:
>
>> hi,
>>        I would like to know whether Broadcomm new wlan+Bluetooth BCM4325
>> module has linux driver support.
>>
>> I couldn't see any information on the website as well as in this website(
>> http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please<http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory%29.Please> let us know about the driver support for this chip.
>>
>
> There is unlikely to be any support for the Bluetooth. As for the wifi
> part, it depends on what PHY is included. If it is a pre-N device or has a
> so-called LP-PHY for B/G operations, then it is not yet supported.
>
> What does 'lspci -v' and 'lspci -n' show for this device?
>
> Do you generate your own kernel? If so, what version are you using?
>
> Larry
>

We are using linux 2.6.24 with our atmel platform AT91SAM9260 and we want to
use BCM4325 with our ATMEL as the Host processor.Has anybody supported
BCM4325 in embedded platform ?

Regards,
Ram
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080624/24bfc1cf/attachment.html>

From ramkumar.research at gmail.com  Tue Jun 24 21:36:55 2008
From: ramkumar.research at gmail.com (Ram kumar)
Date: Tue, 24 Jun 2008 12:36:55 -0700
Subject: BCM 4325 support
In-Reply-To: <69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net> <200806241135.51172.mb@bu3sch.de>
	<69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>
Message-ID: <6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>

hi,

On Tue, Jun 24, 2008 at 7:43 AM, Stefanik G?bor <netrolller.3d at gmail.com>
wrote:

> On Tue, Jun 24, 2008 at 11:35 AM, Michael Buesch <mb at bu3sch.de> wrote:
> > On Tuesday 24 June 2008 05:26:21 Larry Finger wrote:
> >> Ram kumar wrote:
> >> > hi,
> >> >         I would like to know whether Broadcomm new wlan+Bluetooth
> >> > BCM4325 module has linux driver support.
> >> >
> >> > I couldn't see any information on the website as well as in this
> >> > website(
> http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please<http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory%29.Please>
> >> > let us know about the driver support for this chip.
> >>
> >> There is unlikely to be any support for the Bluetooth.
> >
> > The BT device most likely is a seperate standard device that already
> works.
> > I have a 4318 with combined BT that just works fine.
> >
> >
> > --
> > Greetings Michael.
> > _______________________________________________
> > Bcm43xx-dev mailing list
> > Bcm43xx-dev at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >
>
Basically we need some information about the access point mode of the
broadcomm modules.We are planning to configure the BCM4325 as an access
point,meaning that the BCM4325 with the ATMEL AT91SAM9260 host processor
will act as a access point,so that the any wireless device can connect to
them as a client.

Please guide us whether this can achieved by using BCM4325 module ? I have
gone through the http://linuxwireless.org/en/users/Drivers/b43 website which
says that broadcomm modules can be configured to access point mode....We
want to know whether this module BCM4325 can be configured to work as an
access point ?

At present we are not too much concerned about bluetooth.....we want the
wlan module to work for time being....

Regards,
Ram
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080624/63b37f0c/attachment.html>

From netrolller.3d at gmail.com  Tue Jun 24 21:43:31 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Tue, 24 Jun 2008 21:43:31 +0200
Subject: BCM 4325 support
In-Reply-To: <6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net> <200806241135.51172.mb@bu3sch.de>
	<69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>
	<6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>
Message-ID: <69e28c910806241243y4bb30679r8af6fbb78f5697c3@mail.gmail.com>

On Tue, Jun 24, 2008 at 9:36 PM, Ram kumar <ramkumar.research at gmail.com>
wrote:

> hi,
>
> On Tue, Jun 24, 2008 at 7:43 AM, Stefanik G?bor <netrolller.3d at gmail.com>
> wrote:
>
>> On Tue, Jun 24, 2008 at 11:35 AM, Michael Buesch <mb at bu3sch.de> wrote:
>> > On Tuesday 24 June 2008 05:26:21 Larry Finger wrote:
>> >> Ram kumar wrote:
>> >> > hi,
>> >> >         I would like to know whether Broadcomm new wlan+Bluetooth
>> >> > BCM4325 module has linux driver support.
>> >> >
>> >> > I couldn't see any information on the website as well as in this
>> >> > website(
>> http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory).Please<http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2Cb43legacy.2Cb43.2Csoftmac.2C...thefullstory%29.Please>
>> >> > let us know about the driver support for this chip.
>> >>
>> >> There is unlikely to be any support for the Bluetooth.
>> >
>> > The BT device most likely is a seperate standard device that already
>> works.
>> > I have a 4318 with combined BT that just works fine.
>> >
>> >
>> > --
>> > Greetings Michael.
>> > _______________________________________________
>> > Bcm43xx-dev mailing list
>> > Bcm43xx-dev at lists.berlios.de
>> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>> >
>>
> Basically we need some information about the access point mode of the
> broadcomm modules.We are planning to configure the BCM4325 as an access
> point,meaning that the BCM4325 with the ATMEL AT91SAM9260 host processor
> will act as a access point,so that the any wireless device can connect to
> them as a client.
>
> Please guide us whether this can achieved by using BCM4325 module ? I have
> gone through the http://linuxwireless.org/en/users/Drivers/b43 website
> which says that broadcomm modules can be configured to access point
> mode....We want to know whether this module BCM4325 can be configured to
> work as an access point ?
>
> At present we are not too much concerned about bluetooth.....we want the
> wlan module to work for time being....
>
> Regards,
> Ram
>

Is this a Wireless-N-enabled chip? Wireless-N chips are not supported.
Also, what is your source with the BCM4325 name? Is it written or the chip,
or did you deduce it from the PCI ID? 0x14E4:4325 is actually the device ID
of BCM43XG, which is supported.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080624/c0076c4c/attachment.html>

From proski at gnu.org  Tue Jun 24 21:44:31 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Jun 2008 15:44:31 -0400
Subject: BCM 4325 support
In-Reply-To: <6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>
	<4860695D.4080705@lwfinger.net> <200806241135.51172.mb@bu3sch.de>
	<69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>
	<6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>
Message-ID: <1214336671.20554.2.camel@dv>

On Tue, 2008-06-24 at 12:36 -0700, Ram kumar wrote:

> Please guide us whether this can achieved by using BCM4325 module ? I
> have gone through the http://linuxwireless.org/en/users/Drivers/b43
> website which says that broadcomm modules can be configured to access
> point mode....We want to know whether this module BCM4325 can be
> configured to work as an access point ?

Please try and tell others whether it's working for you.  Nobody is
going to research it for you, especially if it requires buying extra
hardware.

You may get better replies if you post in plain text without HTML, don't
quote whole messages and answer the questions you are asked.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Tue Jun 24 21:58:26 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Jun 2008 15:58:26 -0400
Subject: ssb-sprom application issues.
In-Reply-To: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>
References: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>
Message-ID: <1214337506.20554.17.camel@dv>

On Mon, 2008-06-23 at 20:39 -0400, Dale Walsh wrote:

> I have been trying to modify antenna and antenna gain values and it
> appears that the wrong data is being modified.

I confirm it's still a problem with the current version in git.

> SPROM(0x04, Subsytem product ID) = 0x0453

But you are not using the latest version, because I fixed that typo.

Anyway, as I understand it, the original ssb-sprom as committed to the
git repository assumed that the A gain comes first at and the BG gain is
second.

The later changes for SPROM revision 4 assumed that the BG gain is
first, and the A gain is second.  But those changes broke support for
older SPROM revisions.  Also, the use of "sprom[offset + 1]" meant that
the incorrect offset would be printed.  And the worst thing is that
modify_value() would modify wrong values for SPROM revision 4.

I actually don't know if the antenna gain order was changed in SPROM 4.
I just assume it from the history of the changes.

This patch should restore the original behavior for the old SPROM, and
it shouldn't break SPROM4 more than it's already broken.

diff --git a/ssb_sprom/ssb_sprom.c b/ssb_sprom/ssb_sprom.c
index ee56d38..9f182ef 100644
--- a/ssb_sprom/ssb_sprom.c
+++ b/ssb_sprom/ssb_sprom.c
@@ -293,10 +293,16 @@ static int modify_value(uint8_t *sprom,
 			sprom[SPROM_BOARDREV + 1] |= (1 << 5);
 		break;
 	case VALUE_ANTGA:
-		sprom[SPROM_ANTENNA_GAIN + 0] = (v & 0xFF);
+		if (sprom_rev == 4)
+			sprom[SPROM4_ANTENNA_GAIN + 1] = (v & 0xFF);
+		else
+			sprom[SPROM_ANTENNA_GAIN] = (v & 0xFF);
 		break;
 	case VALUE_ANTGBG:
-		sprom[SPROM_ANTENNA_GAIN + 1] = (v & 0xFF);
+		if (sprom_rev == 4)
+			sprom[SPROM4_ANTENNA_GAIN] = (v & 0xFF);
+		else
+			sprom[SPROM_ANTENNA_GAIN + 1] = (v & 0xFF);
 		break;
 	case VALUE_PA0B0:
 		sprom[SPROM_PA0B0 + 0] = (v & 0x00FF);
@@ -577,14 +583,14 @@ static void display_value(const uint8_t *sprom,
 			offset = SPROM_ANTENNA_GAIN;
 		} else {
 			desc = "Antenna 1 Gain";
-			offset = SPROM4_ANTENNA_GAIN;
+			offset = SPROM4_ANTENNA_GAIN + 1;
 		}
-		value = sprom[offset + 1];
+		value = sprom[offset];
 		break;
 	case VALUE_ANTGBG:
 		if (sprom_rev != 4) {
 			desc = "B/G PHY antenna gain";
-			offset = SPROM_ANTENNA_GAIN;
+			offset = SPROM_ANTENNA_GAIN + 1;
 		} else {
 			desc = "Antenna 0 Gain";
 			offset = SPROM4_ANTENNA_GAIN;


-- 
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Tue Jun 24 22:03:21 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Jun 2008 15:03:21 -0500
Subject: BCM 4325 support
In-Reply-To: <1214336671.20554.2.camel@dv>
References: <6306c640806231622x6efc2be8l4dcb135861cf7b86@mail.gmail.com>	<4860695D.4080705@lwfinger.net>
	<200806241135.51172.mb@bu3sch.de>	<69e28c910806240743h52fae63hfecfd7ca5732b81f@mail.gmail.com>	<6306c640806241236j75e273e5u68e1217721aa2061@mail.gmail.com>
	<1214336671.20554.2.camel@dv>
Message-ID: <48615309.7020601@lwfinger.net>

Pavel Roskin wrote:
> On Tue, 2008-06-24 at 12:36 -0700, Ram kumar wrote:
> 
>> Please guide us whether this can achieved by using BCM4325 module ? I
>> have gone through the http://linuxwireless.org/en/users/Drivers/b43
>> website which says that broadcomm modules can be configured to access
>> point mode....We want to know whether this module BCM4325 can be
>> configured to work as an access point ?
> 
> Please try and tell others whether it's working for you.  Nobody is
> going to research it for you, especially if it requires buying extra
> hardware.
> 
> You may get better replies if you post in plain text without HTML, don't
> quote whole messages and answer the questions you are asked.

According to Broadcom's website, the BCM4325 is a single-chip device 
with Low-Power 802.11a/b/g with Bluetooth? 2.1 + EDR and FM.

First of all, 802.11a is not supported by the current driver, and 
neither is the Low-Power PHY that probably is included there. My guess 
is that it will be at least 6 months before the LP-PHY is working. 
Those of us on the RE team are working hard at translating the 
routines and writing the specifications. I have no interest in 802.11a 
and have no idea if/when that part will work.

If the driver could support the chip, I think it would work in AP mode.

Larry


From proski at gnu.org  Wed Jun 25 01:03:47 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Jun 2008 19:03:47 -0400
Subject: ssb-sprom application issues.
In-Reply-To: <A1A241D1-58E6-475C-B694-690212415377@daleenterprise.com>
References: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>
	<1214337506.20554.17.camel@dv>
	<A1A241D1-58E6-475C-B694-690212415377@daleenterprise.com>
Message-ID: <1214348627.23565.28.camel@dv>

Hello, Dale!

It would be great if you write in plain text without HTML.  It would
make it easier to quote your message.

On Tue, 2008-06-24 at 17:14 -0400, Dale Walsh wrote:

> Since I can't be sure which version I actually have I started with
> what I had with the fix for the subsystem product code and moved
> forward from there.

Please don't do it this way.  In general case, it would be dangerous to
integrate your changes in nobody, even you, knows what was changed by
you and what was present in the base code.  That's why patches are used
to send code  changes.

> Other than adding some checking that seemed to be going on with the
> "sprom_rev 4", (I added similar checking in a couple of places) the
> "sprom_rev 4" is still broken but "sprom_rev 2" appears to now works
> properly.

I understand you are talking about your code, not about my patch?

> case VALUE_ANTGA:
> if (sprom_rev == 4)
> sprom[SPROM4_ANTENNA_GAIN + 2] = (v & 0xFF);
> else
> sprom[SPROM_ANTENNA_GAIN + 2] = (v & 0xFF);
> break;

Do you have any reason to believe that antenna gain for 802.11a is
located there?  That's a separate 16-bit register.

> case VALUE_ANTGBG:
> if (sprom_rev == 4)
> sprom[SPROM4_ANTENNA_GAIN + 0] = (v & 0xFF);
> else
> sprom[SPROM_ANTENNA_GAIN + 0] = (v & 0xFF);
> break;

The same question about 802.11bg.  Do you actually see any changes if
you modify SPROM?

> case VALUE_ANTGA:
> if (sprom_rev != 4) {
> desc = "A PHY antenna gain";
> offset = SPROM_ANTENNA_GAIN + 1;
> } else {
> desc = "Antenna 1 Gain";
> offset = SPROM4_ANTENNA_GAIN;
> }
> value = sprom[offset + 1];

That's misleading.  You are telling users that the data is at offset
0x75, but you are reading it at 0x76.

Your code is consistent, but I don't see any evidence that it's correct.

-- 
Regards,
Pavel Roskin


From celejar at gmail.com  Wed Jun 25 01:43:28 2008
From: celejar at gmail.com (Celejar)
Date: Tue, 24 Jun 2008 19:43:28 -0400
Subject: after 3 weeks of problems, should I go back to windows?
In-Reply-To: <486049AC.9050705@wetwork.net>
References: <1214146807.3718.20.camel@ThinkPad.tr.cgocable.ca>
	<485E7846.50208@lwfinger.net>
	<1214155684.4703.11.camel@ThinkPad.tr.cgocable.ca>
	<485E9531.9030205@lwfinger.net>
	<20080623201329.a1b60d09.celejar@gmail.com>
	<486049AC.9050705@wetwork.net>
Message-ID: <20080624194328.931ec049.celejar@gmail.com>

On Mon, 23 Jun 2008 18:11:08 -0700
gavron at wetwork.net wrote:

> Celejar wrote:
> > On Sun, 22 Jun 2008 13:08:49 -0500
> > Larry Finger <Larry.Finger at lwfinger.net> wrote:
> >
> > ...
> >>  Having to go 
> >> through the steps required to generate a .deb and installing it for 
> >> every change would take 3-4 hours away from my productivity.
> >>     
> >
> > I'm no expert, and maybe I'm missing something, but rebuilding a kernel
> > the Debian way is just:
> >
> > 1:	make [menu|x|g|whatever]config]
> > 2:	make-kpkg --revision=whatever kernel_image
> > 3:	dpkg -i whatever.deb
> >
> > How does this add significant overhead to the standard methods for
> > building kernels?  [I am perfectly willing to be educated; as I
> > mentioned, I'm no expert.]
> >
> >   
> >> Larry
> >>     
> >
> >   
> Normal kernel, step 1 is the same.
> Normal kernel, step 2 is make && make modules_install 
> Normal kernel, step 3 is make install
> 
> For step 2 on a non Debian machine I can add -j3 and run three 
> simultaneous processes.  I can build an entire kernel tree from scratch 
> in under 20 minutes.  The make-kpkg takes 47 minutes.
> 
> For step 3 on a non Debian system I can do it in 13 seconds.  The "dpkg 
> -i whatever" takes over 13 minutes.

Thanks for the explanation, but I'm having trouble reproducing your
results, as below.  All results are from my one and a half year old
laptop, with a Celeron M 420 at 1.6 GHz.

> Here's how you can test this...
> 
> 1. On a Debian system   time nice make-kpkg...   && time nice dpkg -i ....

$ time nice make-kpkg --revision=custom.5.0 kernel_image

real    14m30.911s
user    11m42.938s
sys     0m49.612s

$ time nice sudo dpkg
-i ../linux-image-2.6.25-lizzie_custom.5.0_i386.deb

real    0m9.780s
user    0m2.721s
sys     0m0.887s

I'm rather surprised by your 13 minutes for dpkg installation.

> 2. On the same system   time nice (make -j2 && make -j2 modules_install 
> && make -j2 install)
> (If you only have a single threaded uniprocessor leave off the -j2)

I'm pretty weak on shell syntax, but 'time nice (make && make && make)'
didn't work; bash says:

bash: syntax error near unexpected token `make'

so I ran them separately, since this is a uniprocessor anyway.  If I've
done something wrong, please clarify, and I'll redo my tests.

$ time nice make

real    12m55.064s
user    11m16.950s
sys     0m42.457s

$ time nice sudo make modules_install

real    0m3.200s
user    0m1.014s
sys     0m0.802s

$ time nice sudo make install

real    0m0.494s
user    0m0.250s
sys     0m0.120s

So on my uniprocessor system, I see only a fairly small difference in
the Debian vs. standard build times, and a difference of only several
seconds between the install times.  With what hardware were your
numbers obtained?

> Ehud

Thanks,
Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From proski at gnu.org  Wed Jun 25 04:08:11 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Jun 2008 22:08:11 -0400
Subject: More discrepancies in ssb-sprom
Message-ID: <1214359691.29345.19.camel@dv>

Hello!

VALUE_ANTA0, VALUE_ANTA1, VALUE_ANTBG0 and VALUE_ANTBG1 are all read at
SPROM_BOARDREV + 2 for non-rev4 SPROM.  SPROM_BOARDREV + 2 is equal
SPROM_PA0B0, which means that the same data is displayed twice.

The same values are written to SPROM_BOARDREV + 1.  For VALUE_ANTA1,
VALUE_ANTBG0 and VALUE_ANTBG1 there is no special handling for rev4
SPROM, which must be wrong.

Likewise, there is no special treatment for rev4 for VALUE_MAXPA and
VALUE_MAXPBG in modify_value(), but display_value() treats them
separately.

It seems to me that ssb-sprom should be rewritten.  I think the SPROM
structure should be described as a table for every SPROM revision in a
format like this:

ID, name, byte offset, bit offset, bit size

That should solve the problem of synchronization between read and write
functions. 

-- 
Regards,
Pavel Roskin


From Larry.Finger at lwfinger.net  Wed Jun 25 05:07:06 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 24 Jun 2008 22:07:06 -0500
Subject: More discrepancies in ssb-sprom
In-Reply-To: <1214359691.29345.19.camel@dv>
References: <1214359691.29345.19.camel@dv>
Message-ID: <4861B65A.3000104@lwfinger.net>

Pavel Roskin wrote:
> Hello!
> 
> VALUE_ANTA0, VALUE_ANTA1, VALUE_ANTBG0 and VALUE_ANTBG1 are all read at
> SPROM_BOARDREV + 2 for non-rev4 SPROM.  SPROM_BOARDREV + 2 is equal
> SPROM_PA0B0, which means that the same data is displayed twice.
> 
> The same values are written to SPROM_BOARDREV + 1.  For VALUE_ANTA1,
> VALUE_ANTBG0 and VALUE_ANTBG1 there is no special handling for rev4
> SPROM, which must be wrong.
> 
> Likewise, there is no special treatment for rev4 for VALUE_MAXPA and
> VALUE_MAXPBG in modify_value(), but display_value() treats them
> separately.
> 
> It seems to me that ssb-sprom should be rewritten.  I think the SPROM
> structure should be described as a table for every SPROM revision in a
> format like this:
> 
> ID, name, byte offset, bit offset, bit size
> 
> That should solve the problem of synchronization between read and write
> functions. 

I plead guilty to messing up the rev 4 stuff.

I agree that ssb-sprom should be rewritten; however, before that is 
done, we need to think carefully as to what variables should be 
exposed for a user. For instance, should antenna gains be brought out? 
What about antenna enable variables? Is there any reason for a user to 
change these?

In addition, it might be useful to know about new revisions. We now 
have an instance of revision 8, where the only locations that have 
been identified are the usual ID stuff at the start and the MAC 
address. Everything else is unknown. What about revs 5, 6 and 7?

Larry



From proski at gnu.org  Wed Jun 25 05:55:25 2008
From: proski at gnu.org (Pavel Roskin)
Date: Tue, 24 Jun 2008 23:55:25 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <4861B65A.3000104@lwfinger.net>
References: <1214359691.29345.19.camel@dv>  <4861B65A.3000104@lwfinger.net>
Message-ID: <1214366125.31272.13.camel@dv>

On Tue, 2008-06-24 at 22:07 -0500, Larry Finger wrote:

> I agree that ssb-sprom should be rewritten; however, before that is 
> done, we need to think carefully as to what variables should be 
> exposed for a user. For instance, should antenna gains be brought
> out? 
> What about antenna enable variables? Is there any reason for a user
> to 
> change these?

The reason would be to fix wrong values.  I believe everything should be
available.  If there are any specific concerns about specific fields,
there should be warnings.  If there are chances to brick the device,
there should be big warnings, or perhaps the entries should have a
read-only flag.  Anyway, ssb-sprom is not for casual users.

> In addition, it might be useful to know about new revisions. We now 
> have an instance of revision 8, where the only locations that have 
> been identified are the usual ID stuff at the start and the MAC 
> address. Everything else is unknown. What about revs 5, 6 and 7?

That's where having a table with entry descriptions would be helpful.
Tables for unknown revisions could start with just a few entries and get
populated with entries from other revisions.  If there is anything
unusual about the unknown fields (e.g. they are big endian or
read-only), it could be represented as additional flags.

If the firmware was described as a C structure covering the whole
firmware, copying entries could shift everything.  And the current
approach would lead to unmaintainable growth of the code.
> 
-- 
Regards,
Pavel Roskin


From dale at daleenterprise.com  Wed Jun 25 07:18:38 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 25 Jun 2008 01:18:38 -0400
Subject: ssb-sprom application issues.
In-Reply-To: <1214348627.23565.28.camel@dv>
References: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>
	<1214337506.20554.17.camel@dv>
	<A1A241D1-58E6-475C-B694-690212415377@daleenterprise.com>
	<1214348627.23565.28.camel@dv>
Message-ID: <0D5958F4-C95C-436D-BA64-1A3C7C463D7C@daleenterprise.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Jun 24, 2008, at 19:03 PM, Pavel Roskin wrote:

> Hello, Dale!
>
> It would be great if you write in plain text without HTML.  It would
> make it easier to quote your message.
>
> On Tue, 2008-06-24 at 17:14 -0400, Dale Walsh wrote:
>
>> Since I can't be sure which version I actually have I started with
>> what I had with the fix for the subsystem product code and moved
>> forward from there.
>
> Please don't do it this way.  In general case, it would be  
> dangerous to
> integrate your changes in nobody, even you, knows what was changed by
> you and what was present in the base code.  That's why patches are  
> used
> to send code  changes.
>
>> Other than adding some checking that seemed to be going on with the
>> "sprom_rev 4", (I added similar checking in a couple of places) the
>> "sprom_rev 4" is still broken but "sprom_rev 2" appears to now works
>> properly.
>
> I understand you are talking about your code, not about my patch?
>
>> case VALUE_ANTGA:
>> if (sprom_rev == 4)
>> sprom[SPROM4_ANTENNA_GAIN + 2] = (v & 0xFF);
>> else
>> sprom[SPROM_ANTENNA_GAIN + 2] = (v & 0xFF);
>> break;
>
> Do you have any reason to believe that antenna gain for 802.11a is
> located there?  That's a separate 16-bit register.
>
>> case VALUE_ANTGBG:
>> if (sprom_rev == 4)
>> sprom[SPROM4_ANTENNA_GAIN + 0] = (v & 0xFF);
>> else
>> sprom[SPROM_ANTENNA_GAIN + 0] = (v & 0xFF);
>> break;
>
> The same question about 802.11bg.  Do you actually see any changes if
> you modify SPROM?
>
>> case VALUE_ANTGA:
>> if (sprom_rev != 4) {
>> desc = "A PHY antenna gain";
>> offset = SPROM_ANTENNA_GAIN + 1;
>> } else {
>> desc = "Antenna 1 Gain";
>> offset = SPROM4_ANTENNA_GAIN;
>> }
>> value = sprom[offset + 1];
>
> That's misleading.  You are telling users that the data is at offset
> 0x75, but you are reading it at 0x76.
>
> Your code is consistent, but I don't see any evidence that it's  
> correct.
>
> -- 
> Regards,
> Pavel Roskin

I apologize, I was working in a Developer Environment as it makes the  
source much easier to read and follow and it allows me to change the  
code during run-time, reposting in plain-text.

Your patch did not restore all functionality to rev 2.

As I stated, since I do not have anything concrete to work from I am  
guessing at the expected locations and registers (bits) but after  
close examination, I concluded the bytes are at "SPROM_BOARDREV + 2"  
as seen in the html post and now this more legible post.

I added similar board rev logic in additional locations (ex. added to  
anta1 cause it existed in anta0 and worked properly).

The logic behind some of the math was a little confusing so I added a  
simple bit decoder to display the bits for the registers so I could  
see what was changing as I went along and removed it after I was  
satisfied with the results.

Now, since I don't have an actual decode of the bytes I can only  
assume that the bits (registers) currently used for anta0, anta1,  
antbg0, antbg1, antga and antbgb are correct and have made my  
modifications based on this assumption.

With regards to the rev 4, assuming that antgbg corresponds to "(B/G  
PHY antenna gain - Antenna 0 Gain)" and antga corresponds to "(A PHY  
antenna gain - Antenna 1 Gain)", I made changes to the appropriate  
sections and these appear to be functioning properly.

I would like to note that there should be 3 antenna entries in rev 4  
as reported to me by Broadcom however they did not provide a decode  
of the bytes or the sprom data.

My currently ploy with Broadcom since they are manufacturing (or  
working with a manufacturer) an N-PHY card to my specifications is  
that the custom OS requires a driver and I'll need the N-PHY  
information to generate the driver but this seemed to have done  
little to help me obtain it since they are claiming I should be able  
to use existing drivers with an ndis type wrapper.

The current attached source appears to display and modify the correct  
bits and as far as I can tell, modification of the rev 2 data is  
proper although I have not tested everything.

This source is based on code Larry provided

___________________________________________________

/*

   Broadcom Sonics Silicon Backplane bus SPROM data modification tool

   Copyright (c) 2006-2007 Michael Buesch <mb at bu3sch.de>

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.  If not, write to
   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.

*/

#include "ssb_sprom.h"
#include "utils.h"

#include <unistd.h>
#include <fcntl.h>
#include <string.h>
#include <errno.h>
#include <sys/stat.h>

struct cmdline_args cmdargs;
uint8_t sprom_rev;
uint16_t sprom_size;

static int value_length_map[] = { /* value to number of bits */
	[VALUE_RAW] = 8,
	[VALUE_SUBP] = 16,
	[VALUE_SUBV] = 16,
	[VALUE_PPID] = 16,
	[VALUE_BFLHI] = 16,
	[VALUE_BFL] = 16,
	[VALUE_BGMAC] = -1,
	[VALUE_ETMAC] = -1,
	[VALUE_AMAC] = -1,
	[VALUE_ET0PHY] = 8,
	[VALUE_ET1PHY] = 8,
	[VALUE_ET0MDC] = 1,
	[VALUE_ET1MDC] = 1,
	[VALUE_BREV] = 8,
	[VALUE_LOC] = 4,
	[VALUE_ANTA0] = 1,
	[VALUE_ANTA1] = 1,
	[VALUE_ANTBG0] = 1,
	[VALUE_ANTBG1] = 1,
	[VALUE_ANTGA] = 8,
	[VALUE_ANTGBG] = 8,
	[VALUE_PA0B0] = 16,
	[VALUE_PA0B1] = 16,
	[VALUE_PA0B2] = 16,
	[VALUE_PA1B0] = 16,
	[VALUE_PA1B1] = 16,
	[VALUE_PA1B2] = 16,
	[VALUE_WL0GPIO0] = 8,
	[VALUE_WL0GPIO1] = 8,
	[VALUE_WL0GPIO2] = 8,
	[VALUE_WL0GPIO3] = 8,
	[VALUE_MAXPA] = 8,
	[VALUE_MAXPBG] = 8,
	[VALUE_ITSSIA] = 8,
	[VALUE_ITSSIBG] = 8,
	[VALUE_SVER] = 8,
};


static int hexdump_sprom(const uint8_t *sprom, char *buffer, size_t  
bsize)
{
	int i, pos = 0;

	for (i = 0; i < sprom_size; i++) {
		pos += snprintf(buffer + pos, bsize - pos - 1,
				"%02X", sprom[i] & 0xFF);
	}

	return pos + 1;
}

static uint8_t sprom_crc(const uint8_t *sprom)
{
	int i;
	uint8_t crc = 0xFF;

	for (i = 0; i < sprom_size - 1; i++)
		crc = crc8(crc, sprom[i]);
	crc ^= 0xFF;

	return crc;
}

static int write_output_binary(int fd, const uint8_t *sprom)
{
	ssize_t w;

	w = write(fd, sprom, sprom_size);
	if (w < 0)
		return -1;

	return 0;
}

static int write_output_hex(int fd, const uint8_t *sprom)
{
	ssize_t w;
	char tmp[SPROM4_SIZE * 2 + 10] = { 0 };

	hexdump_sprom(sprom, tmp, sizeof(tmp));
	prinfo("Raw output:  %s\n", tmp);
	w = write(fd, tmp, sprom_size * 2);
	if (w < 0)
		return -1;

	return 0;
}

static int write_output(int fd, const uint8_t *sprom)
{
	int err;

	if (cmdargs.outfile) {
		err = ftruncate(fd, 0);
		if (err) {
			prerror("Could not truncate --outfile %s\n",
				cmdargs.outfile);
			return -1;
		}
	}

	if (cmdargs.bin_mode)
		err = write_output_binary(fd, sprom);
	else
		err = write_output_hex(fd, sprom);
	if (err)
		prerror("Could not write output data.\n");

	return err;
}

static int modify_value(uint8_t *sprom,
			struct cmdline_vparm *vparm)
{
	const uint16_t v = vparm->u.value;
	uint16_t tmp = 0;
	uint16_t offset;

	switch (vparm->type) {
	case VALUE_RAW:
		sprom[vparm->u.raw.offset] = vparm->u.raw.value;
		break;
	case VALUE_SUBP:
		if (sprom_rev == 4)
			offset = SPROM4_SUBP;
		else
			offset = SPROM_SUBP;
		sprom[offset + 0] = (v & 0x00FF);
		sprom[offset + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_SUBV:
		sprom[SPROM_SUBV + 0] = (v & 0x00FF);
		sprom[SPROM_SUBV + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PPID:
		if (sprom_rev == 4)
			offset = SPROM4_PPID;
		else
			offset = SPROM_PPID;
		sprom[offset + 0] = (v & 0x00FF);
		sprom[offset + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_BFLHI:
		sprom[SPROM_BFLHI + 0] = (v & 0x00FF);
		sprom[SPROM_BFLHI + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_BFL:
		sprom[SPROM_BOARDFLAGS + 0] = (v & 0x00FF);
		sprom[SPROM_BOARDFLAGS + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_BGMAC:
		if (sprom_rev == 3)
			offset = SPROM3_IL0MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_IL0MACADDR;
		else
			offset = SPROM_IL0MACADDR;
		sprom[offset + 1] = vparm->u.mac[0];
		sprom[offset + 0] = vparm->u.mac[1];
		sprom[offset + 3] = vparm->u.mac[2];
		sprom[offset + 2] = vparm->u.mac[3];
		sprom[offset + 5] = vparm->u.mac[4];
		sprom[offset + 4] = vparm->u.mac[5];
		break;
	case VALUE_ETMAC:
		if (sprom_rev == 3)
			offset = SPROM3_ET0MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_ET0MACADDR;
		else
			offset = SPROM_ET0MACADDR;
		sprom[offset + 1] = vparm->u.mac[0];
		sprom[offset + 0] = vparm->u.mac[1];
		sprom[offset + 3] = vparm->u.mac[2];
		sprom[offset + 2] = vparm->u.mac[3];
		sprom[offset + 5] = vparm->u.mac[4];
		sprom[offset + 4] = vparm->u.mac[5];
		break;
	case VALUE_AMAC:
		if (sprom_rev == 3)
			offset = SPROM3_ET1MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_ET1MACADDR;
		else
			offset = SPROM_ET1MACADDR;
		sprom[offset + 1] = vparm->u.mac[0];
		sprom[offset + 0] = vparm->u.mac[1];
		sprom[offset + 3] = vparm->u.mac[2];
		sprom[offset + 2] = vparm->u.mac[3];
		sprom[offset + 5] = vparm->u.mac[4];
		sprom[offset + 4] = vparm->u.mac[5];
		break;
	case VALUE_ET0PHY:
		tmp |= sprom[SPROM_ETHPHY + 0];
		tmp |= sprom[SPROM_ETHPHY + 1] << 8;
		tmp = ((tmp & 0x001F) | (v & 0x1F));
		sprom[SPROM_ETHPHY + 0] = (tmp & 0x00FF);
		sprom[SPROM_ETHPHY + 1] = (tmp & 0xFF00) >> 8;
		break;
	case VALUE_ET1PHY:
		tmp |= sprom[SPROM_ETHPHY + 0];
		tmp |= sprom[SPROM_ETHPHY + 1] << 8;
		tmp = ((tmp & 0x03E0) | ((v & 0x1F) << 5));
		sprom[SPROM_ETHPHY + 0] = (tmp & 0x00FF);
		sprom[SPROM_ETHPHY + 1] = (tmp & 0xFF00) >> 8;
		break;
	case VALUE_ET0MDC:
		sprom[SPROM_ETHPHY + 1] &= ~(1 << 6);
		if (v)
			sprom[SPROM_ETHPHY + 1] |= (1 << 6);
		break;
	case VALUE_ET1MDC:
		sprom[SPROM_ETHPHY + 1] &= ~(1 << 7);
		if (v)
			sprom[SPROM_ETHPHY + 1] |= (1 << 7);
		break;
	case VALUE_BREV:
		if (sprom_rev == 4)
			sprom[SPROM4_BOARDREV + 0] = v;
		else
			sprom[SPROM_BOARDREV + 0] = v;
		break;
	case VALUE_LOC:
		tmp = (sprom[SPROM_BOARDREV + 1] & 0xF0);
		tmp |= (v & 0x0F);
		sprom[SPROM_BOARDREV + 1] = (tmp & 0xFF);
		break;
	case VALUE_ANTA0:
		if (sprom_rev == 4)
			sprom[SPROM4_BOARDREV + 1] &= ~(1 << 6);
		else
			sprom[SPROM_BOARDREV + 2] &= ~(1 << 6);
		if (v) {
			if (sprom_rev == 4) {
					sprom[SPROM4_BOARDREV + 1] |= (1 << 6);
			} else {
					sprom[SPROM_BOARDREV + 2] |= (1 << 6);
			}
		}
		break;
	case VALUE_ANTA1:
		if (sprom_rev == 4)
			sprom[SPROM4_BOARDREV + 1] &= ~(1 << 7);
		else
			sprom[SPROM_BOARDREV + 2] &= ~(1 << 7);
		if (v)
			if (sprom_rev == 4) {
				sprom[SPROM4_BOARDREV + 1] |= (1 << 7);
			} else {
				sprom[SPROM_BOARDREV + 2] |= (1 << 7);
			}
		break;
	case VALUE_ANTBG0:
		if (sprom_rev == 4)
			sprom[SPROM4_BOARDREV + 1] &= ~(1 << 4);
		else
			sprom[SPROM_BOARDREV + 2] &= ~(1 << 4);
		if (v)
			if (sprom_rev == 4) {
				sprom[SPROM4_BOARDREV + 1] |= (1 << 4);
			} else {
				sprom[SPROM_BOARDREV + 2] |= (1 << 4);
			}
		break;
	case VALUE_ANTBG1:
		if (sprom_rev == 4)
			sprom[SPROM4_BOARDREV + 1] &= ~(1 << 5);
		else
			sprom[SPROM_BOARDREV + 2] &= ~(1 << 5);
		if (v)
			if (sprom_rev == 4) {
				sprom[SPROM4_BOARDREV + 1] |= (1 << 5);
			} else {
				sprom[SPROM_BOARDREV + 2] |= (1 << 5);
			}
		break;
	case VALUE_ANTGA:
		if (sprom_rev == 4)
			sprom[SPROM4_ANTENNA_GAIN + 1] = (v & 0xFF);
		else
			sprom[SPROM_ANTENNA_GAIN + 2] = (v & 0xFF);
		break;
	case VALUE_ANTGBG:
		if (sprom_rev == 4)
			sprom[SPROM4_ANTENNA_GAIN + 0] = (v & 0xFF);
		else
			sprom[SPROM_ANTENNA_GAIN + 0] = (v & 0xFF);
		break;
	case VALUE_PA0B0:
		sprom[SPROM_PA0B0 + 0] = (v & 0x00FF);
		sprom[SPROM_PA0B0 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PA0B1:
		sprom[SPROM_PA0B1 + 0] = (v & 0x00FF);
		sprom[SPROM_PA0B1 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PA0B2:
		sprom[SPROM_PA0B2 + 0] = (v & 0x00FF);
		sprom[SPROM_PA0B2 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PA1B0:
		sprom[SPROM_PA1B0 + 0] = (v & 0x00FF);
		sprom[SPROM_PA1B0 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PA1B1:
		sprom[SPROM_PA1B1 + 0] = (v & 0x00FF);
		sprom[SPROM_PA1B1 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_PA1B2:
		sprom[SPROM_PA1B2 + 0] = (v & 0x00FF);
		sprom[SPROM_PA1B2 + 1] = (v & 0xFF00) >> 8;
		break;
	case VALUE_WL0GPIO0:
		sprom[SPROM_WL0GPIO0 + 0] = (v & 0xFF);
		break;
	case VALUE_WL0GPIO1:
		sprom[SPROM_WL0GPIO0 + 1] = (v & 0xFF);
		break;
	case VALUE_WL0GPIO2:
		sprom[SPROM_WL0GPIO2 + 0] = (v & 0xFF);
		break;
	case VALUE_WL0GPIO3:
		sprom[SPROM_WL0GPIO2 + 1] = (v & 0xFF);
		break;
	case VALUE_MAXPA:
		sprom[SPROM_MAXPWR + 0] = (v & 0xFF);
		break;
	case VALUE_MAXPBG:
		sprom[SPROM_MAXPWR + 1] = (v & 0xFF);
		break;
	case VALUE_ITSSIA:
		sprom[SPROM_IDL_TSSI_TGT + 0] = (v & 0xFF);
		break;
	case VALUE_ITSSIBG:
		sprom[SPROM_IDL_TSSI_TGT + 1] = (v & 0xFF);
		break;
	case VALUE_SVER:
		if (sprom_rev != 4)
			sprom[SPROM_VERSION + 0] = (v & 0xFF);
		else
			sprom[SPROM4_VERSION + 0] = (v & 0xFF);
		break;
	default:
		prerror("vparm->type internal error (0)\n");
		exit(1);
	}

	return 0;
}

static int modify_sprom(uint8_t *sprom)
{
	struct cmdline_vparm *vparm;
	int i;
	int modified = 0;
	uint8_t crc;

	for (i = 0; i < cmdargs.nr_vparm; i++) {
		vparm = &(cmdargs.vparm[i]);
		if (!vparm->set)
			continue;
		modify_value(sprom, vparm);
		modified = 1;
	}
	if (modified) {
		/* Recalculate the CRC. */
		crc = sprom_crc(sprom);
		sprom[sprom_size - 1] = crc;
	}

	return modified;
}

static void display_value(const uint8_t *sprom,
			  struct cmdline_vparm *vparm)
{
	const char *desc;
	uint16_t offset;
	uint16_t value;
	uint16_t tmp;

	switch (vparm->type) {
	case VALUE_RAW:
		desc = "RAW";
		offset = vparm->u.raw.offset;
		value = sprom[offset];
		break;
	case VALUE_SUBP:
		desc = "Subsytem product ID";
		if (sprom_rev == 4)
			offset = SPROM4_SUBP;
		else
			offset = SPROM_SUBP;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_SUBV:
		desc = "Subsystem vendor ID";
		offset = SPROM_SUBV;
		value = sprom[SPROM_SUBV + 0];
		value |= sprom[SPROM_SUBV + 1] << 8;
		break;
	case VALUE_PPID:
		desc = "PCI Product ID";
		if (sprom_rev == 4)
			offset = SPROM4_PPID;
		else
			offset = SPROM_PPID;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_BFLHI:
		desc = "High 16 bits of Boardflags";
		if (sprom_rev == 4)
			offset = SPROM4_BOARDFLAGS + 2;
		else
			offset = SPROM_BFLHI;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_BFL:
		desc = "Low 16 bits of Boardflags";
		if (sprom_rev == 4)
			offset = SPROM4_BOARDFLAGS;
		else
			offset = SPROM_BOARDFLAGS;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_BGMAC:
		desc = "MAC address for 802.11b/g";
		if (sprom_rev == 3)
			offset = SPROM3_IL0MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_IL0MACADDR;
		else
			offset = SPROM_IL0MACADDR;
		value = 0;
		break;
	case VALUE_ETMAC:
		desc = "MAC address for ethernet";
		if (sprom_rev == 3)
			offset = SPROM3_ET0MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_ET0MACADDR;
		else
			offset = SPROM_ET0MACADDR;
		value = 0;
		break;
	case VALUE_AMAC:
		desc = "MAC address for 802.11a";
		if (sprom_rev == 3)
			offset = SPROM3_ET1MACADDR;
		else if (sprom_rev == 4)
			offset = SPROM4_ET1MACADDR;
		else
			offset = SPROM_ET1MACADDR;
		value = 0;
		break;
	case VALUE_ET0PHY:
		desc = "Ethernet phy settings (0)";
		offset = SPROM_ETHPHY;
		tmp = sprom[SPROM_ETHPHY + 0];
		tmp |= sprom[SPROM_ETHPHY + 1] << 8;
		value = (tmp & 0x001F);
		break;
	case VALUE_ET1PHY:
		desc = "Ethernet phy settings (1)";
		offset = SPROM_ETHPHY;
		tmp = sprom[SPROM_ETHPHY + 0];
		tmp |= sprom[SPROM_ETHPHY + 1] << 8;
		value = (tmp & 0x03E0) >> 5;
		break;
	case VALUE_ET0MDC:
		desc = "et0mdcport";
		offset = SPROM_ETHPHY + 1;
		value = 0;
		if (sprom[SPROM_ETHPHY + 1] & (1 << 6))
			value = 1;
		break;
	case VALUE_ET1MDC:
		desc = "et1mdcport";
		offset = SPROM_ETHPHY + 1;
		value = 0;
		if (sprom[SPROM_ETHPHY + 1] & (1 << 7))
			value = 1;
		break;
	case VALUE_BREV:
		desc = "Board revision";
		if (sprom_rev == 4)
			offset = SPROM4_BOARDREV;
		else
			offset = SPROM_BOARDREV;
		value = sprom[offset];
		break;
	case VALUE_LOC:
		desc = "Locale / Country Code";
		if (sprom_rev == 4) {
			offset = SPROM4_COUNTRY;
			value = sprom[offset] | (sprom[offset + 1] << 8);
		} else {
			offset = SPROM_COUNTRY;
			value = (sprom[offset] & 0x0F);
		}
		break;
	case VALUE_ANTA0:
		desc = "A PHY antenna 0 available";
		value = 0;
		if (sprom_rev == 4) {
			offset = SPROM4_ANTAVAIL + 1;
			if (sprom[offset] & 1)
				value = 1;
		} else {
			offset = SPROM_BOARDREV;
			value = 0;
			if (sprom[offset + 2] & (1 << 6))
				value = 1;
		}
		break;
	case VALUE_ANTA1:
		desc = "A PHY antenna 1 available";
		value = 0;
		if (sprom_rev == 4) {
			offset = SPROM4_ANTAVAIL + 1;
			if (sprom[offset] & 2)
				value = 1;
		} else {
			offset = SPROM_BOARDREV;
			value = 0;
			if (sprom[offset + 2] & (1 << 7))
				value = 1;
		}
		break;
	case VALUE_ANTBG0:
		desc = "B/G PHY antenna 0 available";
		value = 0;
		if (sprom_rev == 4) {
			offset = SPROM4_ANTAVAIL;
			if (sprom[offset] & 1)
				value = 1;
		} else {
			offset = SPROM_BOARDREV;
			value = 0;
			if (sprom[offset + 2] & (1 << 4))
				value = 1;
		}
		break;
	case VALUE_ANTBG1:
		desc = "B/G PHY antenna 1 available";
		value = 0;
		if (sprom_rev == 4) {
			offset = SPROM4_ANTAVAIL;
			if (sprom[offset] & 2)
				value = 1;
		} else {
			offset = SPROM_BOARDREV;
			value = 0;
			if (sprom[offset + 2] & (1 << 5))
				value = 1;
		}
		break;
	case VALUE_ANTGA:
		if (sprom_rev != 4) {
			desc = "A PHY antenna gain";
			offset = SPROM_ANTENNA_GAIN + 1;
		} else {
			desc = "Antenna 1 Gain";
			offset = SPROM4_ANTENNA_GAIN;
		}
		value = sprom[offset + 1];
		break;
	case VALUE_ANTGBG:
		if (sprom_rev != 4) {
			desc = "B/G PHY antenna gain";
			offset = SPROM_ANTENNA_GAIN;
		} else {
			desc = "Antenna 0 Gain";
			offset = SPROM4_ANTENNA_GAIN;
		}
		value = sprom[offset];
		break;
	case VALUE_PA0B0:
		desc = "pa0b0";
		offset = SPROM_PA0B0;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_PA0B1:
		desc = "pa0b1";
		offset = SPROM_PA0B1;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_PA0B2:
		desc = "pa0b2";
		offset = SPROM_PA0B2;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_PA1B0:
		desc = "pa1b0";
		offset = SPROM_PA1B0;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_PA1B1:
		desc = "pa1b1";
		offset = SPROM_PA1B1;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_PA1B2:
		desc = "pa1b2";
		offset = SPROM_PA1B2;
		value = sprom[offset + 0];
		value |= sprom[offset + 1] << 8;
		break;
	case VALUE_WL0GPIO0:
		desc = "LED 0 behaviour";
		if (sprom_rev != 4)
			offset = SPROM_WL0GPIO0 + 0;
		else
			offset = SPROM4_WL0GPIO0 + 0;
		value = sprom[offset];
		break;
	case VALUE_WL0GPIO1:
		desc = "LED 1 behaviour";
		if (sprom_rev != 4)
			offset = SPROM_WL0GPIO0 + 1;
		else
			offset = SPROM4_WL0GPIO0 + 1;
		value = sprom[offset];
		break;
	case VALUE_WL0GPIO2:
		desc = "LED 2 behaviour";
		if (sprom_rev != 4)
			offset = SPROM_WL0GPIO2 + 0;
		else
			offset = SPROM4_WL0GPIO2 + 0;
		value = sprom[offset];
		break;
	case VALUE_WL0GPIO3:
		desc = "LED 3 behaviour";
		if (sprom_rev != 4)
			offset = SPROM_WL0GPIO2 + 1;
		else
			offset = SPROM4_WL0GPIO2 + 1;
		value = sprom[offset];
		break;
	case VALUE_MAXPA:
		desc = "A PHY max powerout";
		if (sprom_rev != 4)
			offset = SPROM_MAXPWR + 1;
		else
			offset = SPROM4_MAXPWR + 1;
		value = sprom[offset];
		break;
	case VALUE_MAXPBG:
		desc = "B/G PHY max powerout";
		if (sprom_rev != 4)
			offset = SPROM_MAXPWR + 0;
		else
			offset = SPROM4_MAXPWR + 0;
		value = sprom[offset];
		break;
	case VALUE_ITSSIA:
		desc = "A PHY idle TSSI target";
		if (sprom_rev != 4)
			offset = SPROM_IDL_TSSI_TGT + 1;
		else
			offset = SPROM4_IDL_TSSI_TGT + 1;
		value = sprom[offset];
		break;
	case VALUE_ITSSIBG:
		desc = "B/G PHY idle TSSI target";
		if (sprom_rev != 4)
			offset = SPROM_IDL_TSSI_TGT + 0;
		else
			offset = SPROM4_IDL_TSSI_TGT + 0;
		value = sprom[offset];
		break;
	case VALUE_SVER:
		desc = "SPROM version";
		if (sprom_rev != 4)
			offset = SPROM_VERSION;
		else
			offset = SPROM4_VERSION;
		value = sprom[offset];
		break;
	default:
		prerror("vparm->type internal error (1)\n");
		exit(1);
	}

	switch (vparm->bits) {
	case 1:
		prdata("SPROM(0x%02X, %s) = %s\n",
		       offset, desc, value ? "ON" : "OFF");
		break;
	case 4:
		prdata("SPROM(0x%02X, %s) = 0x%01X\n",
		       offset, desc, (value & 0xF));
		break;
	case 8:
		prdata("SPROM(0x%02X, %s) = 0x%02X\n",
		       offset, desc, (value & 0xFF));
		break;
	case 16:
		prdata("SPROM(0x%02X, %s) = 0x%04X\n",
		       offset, desc, (value & 0xFFFF));
		break;
	case -1: {
		/* MAC address. */
		const uint8_t *p = &(sprom[offset]);

		prdata("SPROM(0x%02X, %s) = %02x:%02x:%02x:%02x:%02x:%02x\n",
		       offset, desc,
		       p[1], p[0], p[3], p[2], p[5], p[4]);
		break;
	}
	default:
		prerror("vparm->bits internal error (%d)\n",
			vparm->bits);
		exit(1);
	}
}

static int display_sprom(const uint8_t *sprom)
{
	struct cmdline_vparm *vparm;
	int i;

	for (i = 0; i < cmdargs.nr_vparm; i++) {
		vparm = &(cmdargs.vparm[i]);
		if (vparm->set)
			continue;
		display_value(sprom, vparm);
	}

	return 0;
}

static int validate_input(const uint8_t *sprom)
{
	uint8_t crc, expected_crc;

	crc = sprom_crc(sprom);
	expected_crc = sprom[sprom_size - 1];

	if (crc != expected_crc) {
		prerror("Corrupt input data (crc: 0x%02X, expected: 0x%02X)\n",
			crc, expected_crc);
		if (!cmdargs.force)
			return 1;
	}

	return 0;
}

static int parse_input(uint8_t *sprom, char *buffer, size_t bsize)
{
	char *input;
	size_t inlen;
	size_t cnt;
	unsigned long parsed;
	char tmp[SPROM4_SIZE * 2 + 10] = { 0 };

	if (cmdargs.bin_mode) {
		/* The input buffer already contains
		 * the binary sprom data.
		 */
		internal_error_on(bsize != SPROM_SIZE && bsize != SPROM4_SIZE);
		memcpy(sprom, buffer, bsize);
		return 0;
	}

	inlen = bsize;
	input = strchr(buffer, ':');
	if (input) {
		input++;
		inlen -= input - buffer;
	} else
		input = buffer;

	if (inlen < SPROM_SIZE * 2) {
		prerror("Input data too short\n");
		return -1;
	}
	for (cnt = 0; cnt < inlen / 2; cnt++) {
		memcpy(tmp, input + cnt * 2, 2);
		parsed = strtoul(tmp, NULL, 16);
		sprom[cnt] = parsed & 0xFF;
	}
	/* check for "magic" data for V4 SPROM */
	if (sprom[0x40] == 0x72 && sprom[0x41] == 0x53) {
		sprom_rev = sprom[SPROM4_VERSION];
		sprom_size = SPROM4_SIZE;
	} else {
		sprom_rev = sprom[SPROM_VERSION];
		sprom_size = SPROM_SIZE;
	}

	if (cmdargs.verbose) {
		hexdump_sprom(sprom, tmp, sizeof(tmp));
		prinfo("Raw input:  %s\n", tmp);
	}

	return 0;
}

static int read_infile(int fd, char **buffer, size_t *bsize)
{
	struct stat s;
	int err;
	ssize_t r;

	err = fstat(fd, &s);
	if (err) {
		prerror("Could not stat input file.\n");
		return err;
	}
	if (s.st_size == 0) {
		prerror("No input data\n");
		return -1;
	}
	if (cmdargs.bin_mode) {
		if (s.st_size != SPROM_SIZE && s.st_size != SPROM4_SIZE) {
			prerror("The input data is no SPROM Binary data. "
				"The size must be exactly %d (V1-3) "
				"or %d (V4) bytes, "
				"but it is %u bytes\n",
				SPROM_SIZE, SPROM4_SIZE,
				(unsigned int)(s.st_size));
			return -1;
		}
	} else {
		if (s.st_size > 1024 * 1024) {
			prerror("The input data does not look "
				"like SPROM HEX data (too long).\n");
			return -1;
		}
	}

	*bsize = s.st_size;
	if (!cmdargs.bin_mode)
		(*bsize)++;
	*buffer = malloce(*bsize);
	r = read(fd, *buffer, s.st_size);
	if (r != s.st_size) {
		prerror("Could not read input data.\n");
		return -1;
	}
	if (!cmdargs.bin_mode)
		(*buffer)[r] = '\0';

	return 0;
}

static void close_infile(int fd)
{
	if (cmdargs.infile)
		close(fd);
}

static void close_outfile(int fd)
{
	if (cmdargs.outfile)
		close(fd);
}

static int open_infile(int *fd)
{
	*fd = STDIN_FILENO;
	if (!cmdargs.infile)
		return 0;
	*fd = open(cmdargs.infile, O_RDONLY);
	if (*fd < 0) {
		prerror("Could not open --infile %s\n",
			cmdargs.infile);
		return -1;
	}

	return 0;
}

static int open_outfile(int *fd)
{
	*fd = STDOUT_FILENO;
	if (!cmdargs.outfile)
		return 0;
	*fd = open(cmdargs.outfile, O_RDWR | O_CREAT, 0644);
	if (*fd < 0) {
		prerror("Could not open --outfile %s\n",
			cmdargs.outfile);
		return -1;
	}

	return 0;
}

static void print_banner(int forceprint)
{
	const char *str = "Broadcom-SSB SPROM data modification tool version  
" VERSION "\n";
	if (forceprint)
		prdata(str);
	else
		prinfo(str);
}

static void print_usage(int argc, char *argv[])
{
	print_banner(1);
	prdata("\nUsage: %s [OPTION]\n", argv[0]);
	prdata("  -i|--input FILE       Input file\n");
	prdata("  -o|--output FILE      Output file\n");
	prdata("  -b|--binmode          The Input data is plain binary data  
and Output will be binary\n");
	prdata("  -V|--verbose          Be verbose\n");
	prdata("  -f|--force            Override error checks\n");
	prdata("  -v|--version          Print version\n");
	prdata("  -h|--help             Print this help\n");
	prdata("\n");
	prdata("Value Parameters:\n");
	prdata("\n");
	prdata("  -s|--rawset OFF,VAL   Set a VALue at a byte-OFFset\n");
	prdata("  -g|--rawget OFF       Get a value at a byte-OFFset\n");
	prdata("\n");
	prdata("Predefined values (for displaying (GET) or modification):\n");
	prdata("  --subp [0xFFFF]       Subsytem product ID for PCI\n");
	prdata("  --subv [0xFFFF]       Subsystem vendor ID for PCI\n");
	prdata("  --ppid [0xFFFF]       Product ID for PCI\n");
	prdata("  --bflhi [0xFFFF]      High 16 bits of boardflags (only if  
spromversion > 1)\n");
	prdata("  --bfl [0xFFFF]        Low 16 bits of boardflags\n");
	prdata("  --bgmac [MAC-ADDR]    MAC address for 802.11b/g\n");
	prdata("  --etmac [MAC-ADDR]    MAC address for ethernet, see b44  
driver\n");
	prdata("  --amac [MAC-ADDR]     Mac address for 802.11a\n");
	prdata("  --et0phy [0xFF]\n");
	prdata("  --et1phy [0xFF]\n");
	prdata("  --et0mdc [BOOL]\n");
	prdata("  --et1mdc [BOOL]\n");
	prdata("  --brev [0xFF]         Board revision\n");
	prdata("  --loc [0xF]           Country code\n");
	prdata("  --anta0 [BOOL]        Antenna 0 available for A PHY\n");
	prdata("  --anta1 [BOOL]        Antenna 1 available for A PHY\n");
	prdata("  --antbg0 [BOOL]       Antenna 0 available for B/G PHY\n");
	prdata("  --antbg1 [BOOL]       Antenna 1 available for B/G PHY\n");
	prdata("  --antga [0xFF]        Antenna gain for A PHY\n");
	prdata("  --antgbg [0xFF]       Antenna gain for B/G PHY\n");
	prdata("  --pa0b0 [0xFFFF]\n");
	prdata("  --pa0b1 [0xFFFF]\n");
	prdata("  --pa0b2 [0xFFFF]\n");
	prdata("  --pa1b0 [0xFFFF]\n");
	prdata("  --pa1b1 [0xFFFF]\n");
	prdata("  --pa1b2 [0xFFFF]\n");
	prdata("  --wl0gpio0 [0xFF]     LED 0 behaviour\n");
	prdata("  --wl0gpio1 [0xFF]     LED 1 behaviour\n");
	prdata("  --wl0gpio2 [0xFF]     LED 2 behaviour\n");
	prdata("  --wl0gpio3 [0xFF]     LED 3 behaviour\n");
	prdata("  --maxpa [0xFF]        A PHY max power\n");
	prdata("  --maxpbg [0xFF]       B/G PHY max power\n");
	prdata("  --itssia [0xFF]       Idle tssi target for A PHY\n");
	prdata("  --itssibg [0xFF]      Idle tssi target for B/G PHY\n");
	prdata("  --sver [0xFF]         SPROM-version\n");
	prdata("\n");
	prdata("  -P|--print-all        Display all values\n");
	prdata("\n");
	prdata(" BOOL      is a boolean value. Either 0 or 1\n");
	prdata(" 0xF..     is a hexadecimal value\n");
	prdata(" MAC-ADDR  is a MAC address in the format 00:00:00:00:00:00 
\n");
	prdata(" If the value parameter is \"GET\", the value will be  
printed;\n");
	prdata(" otherwise it is modified.\n");
}

#define ARG_MATCH		0
#define ARG_NOMATCH		1
#define ARG_ERROR		-1

static int do_cmp_arg(char **argv, int *pos,
		      const char *template,
		      int allow_merged,
		      char **param)
{
	char *arg;
	char *next_arg;
	size_t arg_len, template_len;

	arg = argv[*pos];
	next_arg = argv[*pos + 1];
	arg_len = strlen(arg);
	template_len = strlen(template);

	if (param) {
		/* Maybe we have a merged parameter here.
		 * A merged parameter is "-pfoobar" for example.
		 */
		if (allow_merged && arg_len > template_len) {
			if (memcmp(arg, template, template_len) == 0) {
				*param = arg + template_len;
				return ARG_MATCH;
			}
			return ARG_NOMATCH;
		} else if (arg_len != template_len)
			return ARG_NOMATCH;
		*param = next_arg;
	}
	if (strcmp(arg, template) == 0) {
		if (param) {
			/* Skip the parameter on the next iteration. */
			(*pos)++;
			if (*param == 0) {
				prerror("%s needs a parameter\n", arg);
				return ARG_ERROR;
			}
		}
		return ARG_MATCH;
	}

	return ARG_NOMATCH;
}

/* Simple and lean command line argument parsing. */
static int cmp_arg(char **argv, int *pos,
		   const char *long_template,
		   const char *short_template,
		   char **param)
{
	int err;

	if (long_template) {
		err = do_cmp_arg(argv, pos, long_template, 0, param);
		if (err == ARG_MATCH || err == ARG_ERROR)
			return err;
	}
	err = ARG_NOMATCH;
	if (short_template)
		err = do_cmp_arg(argv, pos, short_template, 1, param);
	return err;
}

static int parse_err;

static int arg_match(char **argv, int *i,
		     const char *long_template,
		     const char *short_template,
		     char **param)
{
	int res;

	res = cmp_arg(argv, i, long_template,
		      short_template, param);
	if (res == ARG_ERROR) {
		parse_err = 1;
		return 0;
	}
	return (res == ARG_MATCH);
}

static int parse_value(const char *str,
		       struct cmdline_vparm *vparm,
		       const char *param)
{
	unsigned long v;
	int i;

	vparm->bits = value_length_map[vparm->type];
	vparm->set = 1;
	if (strcmp(str, "GET") == 0 || strcmp(str, "get") == 0) {
		vparm->set = 0;
		return 0;
	}
	if (vparm->bits == 1) {
		/* This is a boolean value. */
		if (strcmp(str, "0") == 0)
			vparm->u.value = 0;
		else if (strcmp(str, "1") == 0)
			vparm->u.value = 1;
		else
			goto error_bool;
		return 1;
	}

	if (strncmp(str, "0x", 2) != 0)
		goto error;
	str += 2;
	/* The following logic presents a problem because the offsets
	 * for V4 SPROMs can be greater than 0xFF; however, the arguments
	 * are parsed before the SPROM revision is known. To fix this
	 * problem, if an input is expecting 0xFF-type input, then input
	 * of 0xFFF will be permitted */
	for (i = 0; i < vparm->bits / 4; i++) {
		if (str[i] == '\0')
			goto error;
	}
	if (str[i] != '\0') {
		if (i == 2)
			i++;		/* add an extra character */
		if (str[i] != '\0')
			goto error;
	}
	errno = 0;
	v = strtoul(str, NULL, 16);
	if (errno)
		goto error;
	vparm->u.value = v;

	return 1;
error:
	if (param) {
		prerror("%s value parsing error. Format: 0x", param);
		for (i = 0; i < vparm->bits / 4; i++)
			prerror("F");
		prerror("\n");
	}
	return -1;

error_bool:
	if (param)
		prerror("%s value parsing error. Format: 0 or 1 (boolean)\n", param);
	return -1;
}

static int parse_mac(const char *str,
		     struct cmdline_vparm *vparm,
		     const char *param)
{
	int i;
	char *delim;
	const char *in = str;
	uint8_t *out = vparm->u.mac;

	vparm->bits = -1;
	vparm->set = 1;
	if (strcmp(str, "GET") == 0 || strcmp(str, "get") == 0) {
		vparm->set = 0;
		return 0;
	}

	for (i = 0; ; i++) {
		errno = 0;
		out[i] = strtoul(in, NULL, 16);
		if (errno)
			goto error;
		if (i == 5) {
			if (in[1] != '\0' && in[2] != '\0')
				goto error;
			break;
		}
		delim = strchr(in, ':');
		if (!delim)
			goto error;
		in = delim + 1;
	}

	return 1;
error:
	prerror("%s MAC parsing error. Format: 00:00:00:00:00:00\n", param);
	return -1;
}

static int parse_rawset(const char *str,
			struct cmdline_vparm *vparm)
{
	char *delim;
	uint8_t value;
	uint16_t offset;
	int err;

	vparm->type = VALUE_RAW;

	delim = strchr(str, ',');
	if (!delim)
		goto error;
	*delim = '\0';
	err = parse_value(str, vparm, NULL);
	if (err != 1)
		goto error;
	offset = vparm->u.value;
	if (offset >= SPROM4_SIZE) {
		prerror("--rawset offset too big (>= 0x%02X)\n",
			SPROM4_SIZE);
		return -1;
	}
	err = parse_value(delim + 1, vparm, NULL);
	if (err != 1)
		goto error;
	value = vparm->u.value;

	vparm->u.raw.value = value;
	vparm->u.raw.offset = offset;
	vparm->set = 1;

	return 0;
error:
	prerror("--rawset value parsing error. Format: 0xFF,0xFF "
		"(first Offset, second Value)\n");
	return -1;
}

static int parse_rawget(const char *str,
			struct cmdline_vparm *vparm)
{
	int err;
	uint16_t offset;

	vparm->type = VALUE_RAW;

	err = parse_value(str, vparm, "--rawget");
	if (err != 1)
		return -1;
	offset = vparm->u.value;
	if (offset >= SPROM4_SIZE) {
		prerror("--rawget offset too big (>= 0x%02X)\n",
			SPROM4_SIZE);
		return -1;
	}

	vparm->u.raw.offset = offset;
	vparm->type = VALUE_RAW;
	vparm->set = 0;

	return 0;
}

static int generate_printall(void)
{
	struct cmdline_vparm *vparm;
	int count, i;
	enum valuetype vt = VALUE_FIRST;

	count = VALUE_LAST - VALUE_FIRST + 1;
	for (i = 0; i < count; i++, vt++) {
		if (cmdargs.nr_vparm == MAX_VPARM) {
			prerror("Too many value parameters.\n");
			return -1;
		}

		vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
		vparm->type = vt;
		vparm->set = 0;
		vparm->bits = value_length_map[vt];
	}

	return 0;
}

static int parse_args(int argc, char *argv[])
{
	struct cmdline_vparm *vparm;
	int i, err;
	char *param;

	parse_err = 0;
	for (i = 1; i < argc; i++) {
		if (cmdargs.nr_vparm == MAX_VPARM) {
			prerror("Too many value parameters.\n");
			return -1;
		}

		if (arg_match(argv, &i, "--version", "-v", 0)) {
			print_banner(1);
			return 1;
		} else if (arg_match(argv, &i, "--help", "-h", 0)) {
			goto out_usage;
		} else if (arg_match(argv, &i, "--input", "-i", &param)) {
			cmdargs.infile = param;
		} else if (arg_match(argv, &i, "--output", "-o", &param)) {
			cmdargs.outfile = param;
		} else if (arg_match(argv, &i, "--verbose", "-V", 0)) {
			cmdargs.verbose = 1;
		} else if (arg_match(argv, &i, "--force", "-n", 0)) {
			cmdargs.force = 1;
		} else if (arg_match(argv, &i, "--binmode", "-b", 0)) {
			cmdargs.bin_mode = 1;


		} else if (arg_match(argv, &i, "--rawset", "-s", &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			err = parse_rawset(param, vparm);
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--rawget", "-g", &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			err = parse_rawget(param, vparm);
			if (err < 0)
				goto error;


		} else if (arg_match(argv, &i, "--subp", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_SUBP;
			err = parse_value(param, vparm, "--subp");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--subv", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_SUBV;
			err = parse_value(param, vparm, "--subv");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--ppid", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PPID;
			err = parse_value(param, vparm, "--ppid");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--bflhi", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_BFLHI;
			err = parse_value(param, vparm, "--bflhi");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--bfl", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_BFL;
			err = parse_value(param, vparm, "--bfl");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--bgmac", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_BGMAC;
			err = parse_mac(param, vparm, "--bgmac");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--etmac", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ETMAC;
			err = parse_mac(param, vparm, "--etmac");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--amac", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_AMAC;
			err = parse_mac(param, vparm, "--amac");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--et0phy", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ET0PHY;
			err = parse_value(param, vparm, "--et0phy");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--et1phy", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ET1PHY;
			err = parse_value(param, vparm, "--et1phy");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--et0mdc", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ET0MDC;
			err = parse_value(param, vparm, "--et0mdc");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--et1mdc", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ET1MDC;
			err = parse_value(param, vparm, "--et1mdc");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--brev", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_BREV;
			err = parse_value(param, vparm, "--brev");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--loc", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_LOC;
			err = parse_value(param, vparm, "--loc");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--anta0", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTA0;
			err = parse_value(param, vparm, "--anta0");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--anta1", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTA1;
			err = parse_value(param, vparm, "--anta1");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--antbg0", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTBG0;
			err = parse_value(param, vparm, "--antbg0");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--antbg1", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTBG1;
			err = parse_value(param, vparm, "--antbg1");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--antga", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTGA;
			err = parse_value(param, vparm, "--antga");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--antgbg", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ANTGBG;
			err = parse_value(param, vparm, "--antgbg");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa0b0", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA0B0;
			err = parse_value(param, vparm, "--pa0b0");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa0b1", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA0B1;
			err = parse_value(param, vparm, "--pa0b1");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa0b2", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA0B2;
			err = parse_value(param, vparm, "--pa0b2");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa1b0", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA1B0;
			err = parse_value(param, vparm, "--pa1b0");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa1b1", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA1B1;
			err = parse_value(param, vparm, "--pa1b1");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--pa1b2", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_PA1B2;
			err = parse_value(param, vparm, "--pa1b2");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--wl0gpio0", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_WL0GPIO0;
			err = parse_value(param, vparm, "--wl0gpio0");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--wl0gpio1", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_WL0GPIO1;
			err = parse_value(param, vparm, "--wl0gpio1");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--wl0gpio2", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_WL0GPIO2;
			err = parse_value(param, vparm, "--wl0gpio2");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--wl0gpio3", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_WL0GPIO3;
			err = parse_value(param, vparm, "--wl0gpio3");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--maxpa", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_MAXPA;
			err = parse_value(param, vparm, "--maxpa");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--maxpbg", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_MAXPBG;
			err = parse_value(param, vparm, "--maxpbg");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--itssia", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ITSSIA;
			err = parse_value(param, vparm, "--itssia");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--itssibg", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_ITSSIBG;
			err = parse_value(param, vparm, "--itssibg");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--sver", 0, &param)) {
			vparm = &(cmdargs.vparm[cmdargs.nr_vparm++]);
			vparm->type = VALUE_SVER;
			err = parse_value(param, vparm, "--sver");
			if (err < 0)
				goto error;
		} else if (arg_match(argv, &i, "--print-all", "-P", 0)) {
			err = generate_printall();
			if (err)
				goto error;
		} else {
			prerror("Unrecognized argument: %s\n", argv[i]);
			goto out_usage;
		}
		if (parse_err)
			goto out_usage;
	}
	if (cmdargs.nr_vparm == 0) {
		prerror("No Value parameter given. See --help.\n");
		return -1;
	}
	return 0;

out_usage:
	print_usage(argc, argv);
error:
	return -1;	
}


int main(int argc, char **argv)
{
	int err;
	int fd;
	uint8_t sprom[SPROM4_SIZE + 10];
	char *buffer = NULL;
	size_t buffer_size = 0;

	err = parse_args(argc, argv);
	if (err == 1)
		return 0;
	else if (err != 0)
		goto out;

	print_banner(0);
	prinfo("\nReading input from \"%s\"...\n",
	       cmdargs.infile ? cmdargs.infile : "stdin");

	err = open_infile(&fd);
	if (err)
		goto out;
	err = read_infile(fd, &buffer, &buffer_size);
	close_infile(fd);
	if (err)
		goto out;
	err = parse_input(sprom, buffer, buffer_size);
	free(buffer);
	if (err)
		goto out;
	err = validate_input(sprom);
	if (err)
		goto out;

	err = display_sprom(sprom);
	if (err)
		goto out;
	err = modify_sprom(sprom);
	if (err < 0)
		goto out;
	if (err) {
		err = open_outfile(&fd);
		if (err)
			goto out;
		err = write_output(fd, sprom);
		close_outfile(fd);
		if (err)
			goto out;
		prinfo("SPROM modified.\n");
	}
out:
	return err;
}

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (Darwin)

iD8DBQFIYdUuiD9DTPch4RQRAnqRAKC3I4ikPuo4o7qTGQ8hXTBUeMNooACfUa0z
qZmfxJVwji3L8WKsSMbfoxs=
=LDMD
-----END PGP SIGNATURE-----


From zajec5polish at gmail.com  Wed Jun 25 08:23:34 2008
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Wed, 25 Jun 2008 08:23:34 +0200
Subject: Distro support for firmware installation
In-Reply-To: <48602375.8000107@lwfinger.net>
References: <486017AB.5070103@lwfinger.net>
	<200806240003.23214.kropx77@gmail.com> <48602375.8000107@lwfinger.net>
Message-ID: <14b026160806242323x12f1b7ecx6e65f5adf39e4265@mail.gmail.com>

2008/6/24, Larry Finger <Larry.Finger at lwfinger.net>:
> Thanks for the info. The instructions for openSUSE, Ubuntu and Debian
>  are now included. Please suggest any wording changes.

It may be impossible for some ppl to connect to the internet using
eth0 or modem. In such a case they can't use install_bcm43xx_firmware.
There is nice solution worth mentioning for openSUSE.

Packman repository provides two packages:
b43-firmware
b43legacy-firmware
Is should be quite easy for everyone to bring packages on cd/pendrive
from other machine with any OS.

-- 
Rafa? Mi?ecki

From mb at bu3sch.de  Wed Jun 25 11:31:10 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Jun 2008 11:31:10 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <1214366125.31272.13.camel@dv>
References: <1214359691.29345.19.camel@dv> <4861B65A.3000104@lwfinger.net>
	<1214366125.31272.13.camel@dv>
Message-ID: <200806251131.10478.mb@bu3sch.de>

On Wednesday 25 June 2008 05:55:25 Pavel Roskin wrote:
> On Tue, 2008-06-24 at 22:07 -0500, Larry Finger wrote:
> 
> > I agree that ssb-sprom should be rewritten; however, before that is 
> > done, we need to think carefully as to what variables should be 
> > exposed for a user. For instance, should antenna gains be brought
> > out? 
> > What about antenna enable variables? Is there any reason for a user
> > to 
> > change these?
> 
> The reason would be to fix wrong values.  I believe everything should be
> available.  If there are any specific concerns about specific fields,
> there should be warnings.  If there are chances to brick the device,
> there should be big warnings, or perhaps the entries should have a
> read-only flag.  Anyway, ssb-sprom is not for casual users.

The intention of ssb-sprom _never_ was to be used by users. It is a
development tool. So there's nothing going to get removed from it, nor
are there read-only checks added.
We could, however add a warning to the helptext of the app:
DO NOT USE THIS. YOU WILL BRICK YOUR DEVICE.

These threads clearly show that people are using the tool who have
absolutely _no_ clue what the tool really does.

-- 
Greetings Michael.


From dale at daleenterprise.com  Wed Jun 25 13:51:54 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 25 Jun 2008 07:51:54 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806251131.10478.mb@bu3sch.de>
References: <1214359691.29345.19.camel@dv> <4861B65A.3000104@lwfinger.net>
	<1214366125.31272.13.camel@dv> <200806251131.10478.mb@bu3sch.de>
Message-ID: <9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>


On Jun 25, 2008, at 05:31 AM, Michael Buesch wrote:

> On Wednesday 25 June 2008 05:55:25 Pavel Roskin wrote:
>> On Tue, 2008-06-24 at 22:07 -0500, Larry Finger wrote:
>>
>>> I agree that ssb-sprom should be rewritten; however, before that is
>>> done, we need to think carefully as to what variables should be
>>> exposed for a user. For instance, should antenna gains be brought
>>> out?
>>> What about antenna enable variables? Is there any reason for a user
>>> to
>>> change these?
>>
>> The reason would be to fix wrong values.  I believe everything  
>> should be
>> available.  If there are any specific concerns about specific fields,
>> there should be warnings.  If there are chances to brick the device,
>> there should be big warnings, or perhaps the entries should have a
>> read-only flag.  Anyway, ssb-sprom is not for casual users.
>
> The intention of ssb-sprom _never_ was to be used by users. It is a
> development tool. So there's nothing going to get removed from it, nor
> are there read-only checks added.
> We could, however add a warning to the helptext of the app:
> DO NOT USE THIS. YOU WILL BRICK YOUR DEVICE.
>
> These threads clearly show that people are using the tool who have
> absolutely _no_ clue what the tool really does.
>
> -- 
> Greetings Michael.

The problem with your statement is that as far as I could locate,  
this is the only tool that allows you to modify the subsystem vend/ 
prod ID's and to tweak antenna gains to improve performance of a card.

I know what I want as an end result, the lack of available software  
for my OS has had me go outside to another OS to find a solution  
which appears to be b43.ko, ssb-sprom and ssb.ko.

I can buy card-A from my OS vendor, he charges $100.00 for the card,  
BestBuy sells the same card using the same chipset but the gain is  
lower and the ID's are different and the cost if $21.00, it makes  
economical sense to purchase the $21.00 card, change the ID's and  
tweak the gain if 3 cards are required per system and the time to  
modify 3 cards is less than 15 minutes.

The advantage to modifying a card for my OS is obvious to those who  
use it, no custom drivers are required, no installation of a custom  
driver which takes roughly 5 minutes is required and additional OS  
features are activated with the use of a natively recognized card  
that are not activated using the custom driver and a card that isn't  
natively recognized.

My OS vendor isn't releasing the source for the native driver so  
making it work with generic ID'd cards is not very fruitful despite  
what people may tell you because they only understand a portion of  
the card identification process and they assume thats all there is,  
the thought that the driver is self modifying based on the subsystem  
ID's never enters their mind.

Considering it is a utility with a very unique and powerful  
capability, the ssb-sprom application itself is fairly harmless  
because it does not operate directly on a card however in my OS, I do  
not have this luxury, I have a single tool that reads the sprom data  
to disk, makes changes, saves it again with a timestamp and writes it  
back to the card in one fluid move which is a much more serious and  
potentially dangerous app in that errors of any kinds are most  
destructive so all but the ability to modify the ID's has been  
stripped until time permits me to rewrite it into a more useful set  
of tools to accomplish the task in stages.

Since my app is based on the ssb-sprom program, modification of the  
subsystem ID's has not been an issue but other changes would be  
beneficial to improving a cards performance and I'd like to take  
advantage of this option.

At this time I'm working with ssb-sprom in a standalone setting and  
working with data files rather than directly on a card so when the  
bugs have been ironed out I can redo my app with some extra safety  
features and a final prompt before writing to a card and know that  
the written data will be correct.

Since this tool has been around for quite some time I was under the  
impression that it was a solid performer which is undergoing updates  
to handle the new sprom data but seeing it needs a little massaging  
is disappointing, not discouraging, while my needs are immediate,  
quick fixes to keep me in motion are the main focus but when a little  
time permits I look into resolving something provided is doesn't eat  
too much of my time but my motivation is based on my needs and not  
the needs of the general public and this could be advantageous to  
resolving some issues if they are related to my immediate needs or  
they could not be.

I don't mind that it's broken (well I do) cause it does meet one of  
my requirements and that is ID modification and for the most part  
this is my major need, fixing the other stuff basically would allow  
me to take an alright card and turn it into a great card but as you  
already know, information is not very forthcoming from Broadcom so  
progress is slow.


-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/80c636f5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/80c636f5/attachment.pgp>

From mb at bu3sch.de  Wed Jun 25 14:35:13 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Jun 2008 14:35:13 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806251131.10478.mb@bu3sch.de>
	<9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>
Message-ID: <200806251435.13138.mb@bu3sch.de>

On Wednesday 25 June 2008 13:51:54 Dale Walsh wrote:
> The problem with your statement is that as far as I could locate,  
> this is the only tool that allows you to modify the subsystem vend/ 
> prod ID's and to tweak antenna gains to improve performance of a card.

You should read a good book about antenna physics.

> I know what I want as an end result, the lack of available software  
> for my OS has had me go outside to another OS to find a solution  
> which appears to be b43.ko, ssb-sprom and ssb.ko.
> 
> I can buy card-A from my OS vendor, he charges $100.00 for the card,  
> BestBuy sells the same card using the same chipset but the gain is  
> lower and the ID's are different and the cost if $21.00, it makes  
> economical sense to purchase the $21.00 card, change the ID's and  
> tweak the gain if 3 cards are required per system and the time to  
> modify 3 cards is less than 15 minutes.
...

You will understand, that I am not going to support somebody who
takes my GPL'ed software and uses it for a proprietary in-house solution.
Of course, this is perfectly legal what you are doing, as long as
you don't redistribute the software outside of your local office.
But please do not expect any support from me unless you release your
work under the GNU/GPL version 2.
Helping you with your proprietary in-house solution would be a complete
waste of my limited time.

This is not BSD licensed. For good reasons, as we can see.

-- 
Greetings Michael.


From f.middleton at apogeect.com  Wed Jun 25 17:06:46 2008
From: f.middleton at apogeect.com (Frank Middleton)
Date: Wed, 25 Jun 2008 11:06:46 -0400
Subject: Regression (FC8 to FC9)
Message-ID: <48625F06.3070201@apogeect.com>

Did have a problem with FC8 - under relatively heavy loads, enough packets
would be quietly dropped (with no log entries at all) such that NFS or
X -query would stop working for a while. This was on a 2.6.24 kernel using
the 2.6.25 firmware (don't ask!). An update to 2.6.25 fixed the problem
(note that Fedora doesn't seem to ship BCM firmware), and it worked
flawlessly for days at a time! 

However, after upgrading to FC9, the load problem reappeared. Reinstalling
the correct firmware for the kernel doesn't seem to fix the problem. However,
rebooting with 2.6.25.6-27.fc8 works just fine, so it seems it really is
just the kernel that makes a difference...

Original kernel (with load problem)  2.6.24.3-50.fc8
Updated FC8 kernel that worked fine  2.6.25.6-27.fc8
FC9 kernel (that has the regression) 2.6.25.6-55.fc9.x86_64

The following probably won't help much, but since you ask...

# uname -a
Linux apogee10.apogeect.com 2.6.25.6-55.fc9.x86_64 #1 SMP Tue Jun 10 16:05:21 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux

# lspci -vvn|grep 43 -A7
00:0c.0 0280: 14e4:4320 (rev 03)
	Subsystem: 144f:7050
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 64
	Interrupt: pin A routed to IRQ 18
	Region 0: Memory at d0000000 (32-bit, non-prefetchable) [size=8K]
	Capabilities: [40] Power Management version 2
--
	Kernel driver in use: b43-pci-bridge
	Kernel modules: ssb

00:10.0 0c03: 1106:3038 (rev 80) (prog-if 00 [UHCI])
	Subsystem: 161f:2032
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV+ VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 64, Cache Line Size: 64 bytes

# dmesg (attached)

The AP is a D-Link 624 about 3 meters from the laptop, Link Quality=92/100
Signal level:-56 dBm  Noise level=-64 dBm; no other APs within 1KM of here.
NFS and X -query work fine over wired LAN.

Cheers -- Frank Middleton

P.S. On a recent trip on the East coast of the US along I95, I was able to
use my M6805 laptop in many locations, only just once having to resort to
MSWXP. Can't thank you enough for making this possible! Your efforts are
much appreciated...


-------------- next part --------------
A non-text attachment was scrubbed...
Name: dmesg.log
Type: text/x-log
Size: 25887 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/44b1586b/attachment.bin>

From proski at gnu.org  Wed Jun 25 18:26:05 2008
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 25 Jun 2008 12:26:05 -0400
Subject: Regression (FC8 to FC9)
In-Reply-To: <48625F06.3070201@apogeect.com>
References: <48625F06.3070201@apogeect.com>
Message-ID: <1214411165.5881.27.camel@dv>

On Wed, 2008-06-25 at 11:06 -0400, Frank Middleton wrote:

> Updated FC8 kernel that worked fine  2.6.25.6-27.fc8
> FC9 kernel (that has the regression) 2.6.25.6-55.fc9.x86_64

I would probably try to bisect it.  I realize that it's a lot of work.

The breakage is caused either by patches or by configuration changes.
Finding out is the first step.  Then look for the patch or for
configuration change that affects the problem.

-- 
Regards,
Pavel Roskin


From proski at gnu.org  Wed Jun 25 19:15:36 2008
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 25 Jun 2008 13:15:36 -0400
Subject: ssb-sprom application issues.
In-Reply-To: <0D5958F4-C95C-436D-BA64-1A3C7C463D7C@daleenterprise.com>
References: <F8061B95-1325-4393-B433-87085EB266F4@daleenterprise.com>
	<1214337506.20554.17.camel@dv>
	<A1A241D1-58E6-475C-B694-690212415377@daleenterprise.com>
	<1214348627.23565.28.camel@dv>
	<0D5958F4-C95C-436D-BA64-1A3C7C463D7C@daleenterprise.com>
Message-ID: <1214414136.7901.11.camel@dv>

On Wed, 2008-06-25 at 01:18 -0400, Dale Walsh wrote:

> As I stated, since I do not have anything concrete to work from I am  
> guessing at the expected locations and registers (bits) but after  
> close examination, I concluded the bytes are at "SPROM_BOARDREV + 2"  
> as seen in the html post and now this more legible post.

It overlaps with SPROM_PA0B0, so I'm not sure it's correct.  I would be
more willing to agree with you if you were restoring incorrectly changed
code, or fixing an inconsistency between reading and writing.  However,
I cannot support assertions not based on the (pre-)existing code or
reverse engineering.

> I would like to note that there should be 3 antenna entries in rev 4  
> as reported to me by Broadcom however they did not provide a decode  
> of the bytes or the sprom data.

That's a valuable piece of information.

But I think the first priority should be restructuring of ssb-eeprom to
make inconsistencies unlikely and to allow accumulating information
about new SPROM formats without having to change the code too much.

-- 
Regards,
Pavel Roskin


From linville at tuxdriver.com  Wed Jun 25 18:47:24 2008
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 25 Jun 2008 12:47:24 -0400
Subject: Regression (FC8 to FC9)
In-Reply-To: <1214411165.5881.27.camel@dv>
References: <48625F06.3070201@apogeect.com> <1214411165.5881.27.camel@dv>
Message-ID: <20080625164724.GA32751@tuxdriver.com>

On Wed, Jun 25, 2008 at 12:26:05PM -0400, Pavel Roskin wrote:
> On Wed, 2008-06-25 at 11:06 -0400, Frank Middleton wrote:
> 
> > Updated FC8 kernel that worked fine  2.6.25.6-27.fc8
> > FC9 kernel (that has the regression) 2.6.25.6-55.fc9.x86_64
> 
> I would probably try to bisect it.  I realize that it's a lot of work.
> 
> The breakage is caused either by patches or by configuration changes.
> Finding out is the first step.  Then look for the patch or for
> configuration change that affects the problem.

Sorry I missed the original post -- my reply is really to the OP
rather than to Pavel.

It would probably be better to report Fedora distribution problems
on Fedora lists rather than the general upstream lists.  That said,
since -27.fc8 is working for you, you should probably try the -fc9
kernel built on the same date:

	http://koji.fedoraproject.org/koji/buildinfo?buildID=52606

Perhaps it isn't obvious, but not every F9 kernel is newer than every
F8 kernel.

Hth!

Thanks,

John
-- 
John W. Linville
linville at tuxdriver.com


From dale at daleenterprise.com  Wed Jun 25 21:07:33 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 25 Jun 2008 15:07:33 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806251435.13138.mb@bu3sch.de>
References: <1214359691.29345.19.camel@dv> <200806251131.10478.mb@bu3sch.de>
	<9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>
	<200806251435.13138.mb@bu3sch.de>
Message-ID: <81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>


On Jun 25, 2008, at 08:35 AM, Michael Buesch wrote:

> On Wednesday 25 June 2008 13:51:54 Dale Walsh wrote:
>> The problem with your statement is that as far as I could locate,
>> this is the only tool that allows you to modify the subsystem vend/
>> prod ID's and to tweak antenna gains to improve performance of a  
>> card.
>
> You should read a good book about antenna physics.

I can assure you I know something about antenna design, gain and  
wavelength versus overall length, loading, termination, resistance,  
balancing, corona, directional versus omni-directional, resonance,  
multi-elements, arrays, yagi's, quad's and the antenna is only as  
good as the transmitter or receiver attached to it.

If the transmitter power is supplied at 70% of the available power  
then the distance that the transmitter is effective is diminished  
exponentially by the amount of power being generated.

If the receiver has the gain reduced then the S/N ratio and the  
signal level decrease logarithmically so turning it up has merit  
provided that the noise level does saturate the input signal because  
in most front-ends is some kind of circuitry that attempts to  
compress the incoming signal to prevent saturation and to continue to  
increase gain beyond this point only increases the noise level until  
it's saturation occurs and then the noise is just as loud as the signal.

>
>> I know what I want as an end result, the lack of available software
>> for my OS has had me go outside to another OS to find a solution
>> which appears to be b43.ko, ssb-sprom and ssb.ko.
>>
>> I can buy card-A from my OS vendor, he charges $100.00 for the card,
>> BestBuy sells the same card using the same chipset but the gain is
>> lower and the ID's are different and the cost if $21.00, it makes
>> economical sense to purchase the $21.00 card, change the ID's and
>> tweak the gain if 3 cards are required per system and the time to
>> modify 3 cards is less than 15 minutes.
> ...
>
> You will understand, that I am not going to support somebody who
> takes my GPL'ed software and uses it for a proprietary in-house  
> solution.
> Of course, this is perfectly legal what you are doing, as long as
> you don't redistribute the software outside of your local office.
> But please do not expect any support from me unless you release your
> work under the GNU/GPL version 2.
> Helping you with your proprietary in-house solution would be a  
> complete
> waste of my limited time.

First, I am not asking you to support any solution I generate for  
myself, I have not asked anyone to develop any software on my behalf,  
all I expect is that you support your software in the OS it was  
intended and this is currently where I am using it out of respect for  
you and your efforts.

Second, currently it's broken, I've offered some quick fixes to get  
the rev 2 sprom support functional again by using the same principals  
currently employed in the source.

Third, I respect your license, there is no need for you to discuss  
the terms or the inner-working of the license with me unless I have  
questions about it which I currently do not.

>
> This is not BSD licensed. For good reasons, as we can see.

Your software in general is not supported by my OS, some of the  
utilities have been ported and these have been useful in achieving a  
solution in my OS but please do not mistake my coming to you with  
problems in your software as an attempt for you to code a solution  
for my OS.

If there was a fully functional easy to use solution in your OS I  
would have no problem doing my work in it, I also expect a little  
respect for my preference of OS and the environment I chose to work  
in, I do not force it upon anyone and I am not asking you to support it.

> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/715086c3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/715086c3/attachment.pgp>

From proski at gnu.org  Wed Jun 25 21:19:00 2008
From: proski at gnu.org (Pavel Roskin)
Date: Wed, 25 Jun 2008 15:19:00 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806251131.10478.mb@bu3sch.de>
	<9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>
	<200806251435.13138.mb@bu3sch.de>
	<81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
Message-ID: <1214421540.9990.3.camel@dv>

On Wed, 2008-06-25 at 15:07 -0400, Dale Walsh wrote:
> 
> On Jun 25, 2008, at 08:35 AM, Michael Buesch wrote:
> 
> > On Wednesday 25 June 2008 13:51:54 Dale Walsh wrote:
> > > The problem with your statement is that as far as I could locate,
> > >  
> > > this is the only tool that allows you to modify the subsystem
> > > vend/ 
> > > prod ID's and to tweak antenna gains to improve performance of a
> > > card.
> > 
> > 
> > You should read a good book about antenna physics.
> 
> 
> I can assure you I know something about antenna design, gain and
> wavelength versus overall length, loading, termination, resistance,
> balancing, corona, directional versus omni-directional, resonance,
> multi-elements, arrays, yagi's, quad's and the antenna is only as good
> as the transmitter or receiver attached to it.
> 
> 
> If the transmitter power is supplied at 70% of the available power
> then the distance that the transmitter is effective
> is diminished exponentially by the amount of power being generated.

I suggest that you introduce a new field in ssb-sprom, call it
"antenna-shape" and put "yagi" there.  That would greatly help with both
reception and transmission :-)

-- 
Regards,
Pavel Roskin


From mb at bu3sch.de  Wed Jun 25 21:33:49 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 25 Jun 2008 21:33:49 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806251435.13138.mb@bu3sch.de>
	<81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
Message-ID: <200806252133.49335.mb@bu3sch.de>

On Wednesday 25 June 2008 21:07:33 Dale Walsh wrote:
> If the receiver has the gain reduced then the S/N ratio and the  
> signal level decrease logarithmically so turning it up has merit  
> provided that the noise level does saturate the input signal because  
> in most front-ends is some kind of circuitry that attempts to  
> compress the incoming signal to prevent saturation and to continue to  
> increase gain beyond this point only increases the noise level until  
> it's saturation occurs and then the noise is just as loud as the signal.

> ssb-sprom -i minipci_sprom -o minipci_new_sprom --antgbg 0x88

So you seriously think that increasing the antenna gain value
in the sprom by about 34 dBi is doing any good?

-- 
Greetings Michael.


From netrolller.3d at gmail.com  Wed Jun 25 22:22:31 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Wed, 25 Jun 2008 22:22:31 +0200
Subject: BUG(?): dev->wl->if_type is 0 for monitor interfaces (should be 5);
	b43_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) is always false
Message-ID: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>

In both b43 and b43legacy, dev->wl->if_type is 0
(IEEE80211_IF_TYPE_INVALID) when injecting/transmitting packets on a
monitor interface (not sure about receiving), while the logical result
would be  5 (IEEE80211_IF_TYPE_MNTR). Due to this, the check
b43(legacy)_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) always returns 0.

I discovered this when updating the b43/b43legacy injection patches.
This is the latest patch I made, working around this bug by checking
for both 0 and 5 (I added a quick printk("B43 DEBUG: dev->wl->if_type
= %d", dev->wl->if_type) after the /* MAC control */ comment, which
helped me find this bug):

diff --git a/drivers/net/wireless/b43/xmit.c b/drivers/net/wireless/b43/xmit.c
index f9e1cff..b7553ab 100644
--- a/drivers/net/wireless/b43/xmit.c
+++ b/drivers/net/wireless/b43/xmit.c
@@ -315,9 +315,11 @@ int b43_generate_txhdr(struct b43_wldev *dev,
 	}

 	/* MAC control */
-	if (!(info->flags & IEEE80211_TX_CTL_NO_ACK))
+	if (dev->wl->if_type != 5 && dev->wl->if_type != 0 &&
+	      !(info->flags & IEEE80211_TX_CTL_NO_ACK))
 		mac_ctl |= B43_TXH_MAC_ACK;
-	if (!(((fctl & IEEE80211_FCTL_FTYPE) == IEEE80211_FTYPE_CTL) &&
+	if (dev->wl->if_type != 5 && dev->wl->if_type != 0 &&
+	      !(((fctl & IEEE80211_FCTL_FTYPE) == IEEE80211_FTYPE_CTL) &&
 	      ((fctl & IEEE80211_FCTL_STYPE) == IEEE80211_STYPE_PSPOLL)))
 		mac_ctl |= B43_TXH_MAC_HWSEQ;
 	if (info->flags & IEEE80211_TX_CTL_FIRST_FRAGMENT)

Is this intentional? I don't know, but it does looks strange for sure.

--G?bor

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Wed Jun 25 22:23:52 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Wed, 25 Jun 2008 22:23:52 +0200
Subject: BUG(?): dev->wl->if_type is 0 for monitor interfaces (should be
	5); b43_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) is always false
In-Reply-To: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>
References: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>
Message-ID: <69e28c910806251323j3a80b31etde8683d573dcf2fa@mail.gmail.com>

On Wed, Jun 25, 2008 at 10:22 PM, Stefanik G?bor
<netrolller.3d at gmail.com> wrote:
> In both b43 and b43legacy, dev->wl->if_type is 0
> (IEEE80211_IF_TYPE_INVALID) when injecting/transmitting packets on a
> monitor interface (not sure about receiving), while the logical result
> would be  5 (IEEE80211_IF_TYPE_MNTR). Due to this, the check
> b43(legacy)_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) always returns 0.
>
> I discovered this when updating the b43/b43legacy injection patches.
> This is the latest patch I made, working around this bug by checking
> for both 0 and 5 (I added a quick printk("B43 DEBUG: dev->wl->if_type
> = %d", dev->wl->if_type) after the /* MAC control */ comment, which
> helped me find this bug):
>
> diff --git a/drivers/net/wireless/b43/xmit.c b/drivers/net/wireless/b43/xmit.c
> index f9e1cff..b7553ab 100644
> --- a/drivers/net/wireless/b43/xmit.c
> +++ b/drivers/net/wireless/b43/xmit.c
> @@ -315,9 +315,11 @@ int b43_generate_txhdr(struct b43_wldev *dev,
>        }
>
>        /* MAC control */
> -       if (!(info->flags & IEEE80211_TX_CTL_NO_ACK))
> +       if (dev->wl->if_type != 5 && dev->wl->if_type != 0 &&
> +             !(info->flags & IEEE80211_TX_CTL_NO_ACK))
>                mac_ctl |= B43_TXH_MAC_ACK;
> -       if (!(((fctl & IEEE80211_FCTL_FTYPE) == IEEE80211_FTYPE_CTL) &&
> +       if (dev->wl->if_type != 5 && dev->wl->if_type != 0 &&
> +             !(((fctl & IEEE80211_FCTL_FTYPE) == IEEE80211_FTYPE_CTL) &&
>              ((fctl & IEEE80211_FCTL_STYPE) == IEEE80211_STYPE_PSPOLL)))
>                mac_ctl |= B43_TXH_MAC_HWSEQ;
>        if (info->flags & IEEE80211_TX_CTL_FIRST_FRAGMENT)
>
> Is this intentional? I don't know, but it does looks strange for sure.
>
> --G?bor
>
> --
> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>

Oops... also CCing linux.wireless.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From johannes at sipsolutions.net  Wed Jun 25 22:24:11 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 25 Jun 2008 22:24:11 +0200
Subject: BUG(?): dev->wl->if_type is 0 for monitor interfaces (should
	be 5); b43_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) is always false
In-Reply-To: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>
	(sfid-20080625_222234_413182_6DAE084F)
References: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>
	(sfid-20080625_222234_413182_6DAE084F)
Message-ID: <1214425451.21847.59.camel@johannes.berg>

On Wed, 2008-06-25 at 22:22 +0200, Stefanik G?bor wrote:
> In both b43 and b43legacy, dev->wl->if_type is 0
> (IEEE80211_IF_TYPE_INVALID) when injecting/transmitting packets on a
> monitor interface (not sure about receiving), while the logical result
> would be  5 (IEEE80211_IF_TYPE_MNTR).

No, 5 wouldn't be the logical result. Try to understand how monitor mode
and virtual interfaces in mac80211 work.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/74d09d8e/attachment.pgp>

From johannes at sipsolutions.net  Wed Jun 25 22:26:30 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 25 Jun 2008 22:26:30 +0200
Subject: BUG(?): dev->wl->if_type is 0 for monitor interfaces (should
	be 5); b43_is_mode(dev->wl; IEEE80211_IF_TYPE_MNTR) is always false
In-Reply-To: <69e28c910806251323j3a80b31etde8683d573dcf2fa@mail.gmail.com>
	(sfid-20080625_222356_890423_579F588A)
References: <69e28c910806251322i31a8cb4flc7b6c85e8884a5ca@mail.gmail.com>
	<69e28c910806251323j3a80b31etde8683d573dcf2fa@mail.gmail.com>
	(sfid-20080625_222356_890423_579F588A)
Message-ID: <1214425590.21847.61.camel@johannes.berg>

On Wed, 2008-06-25 at 22:23 +0200, Stefanik G?bor wrote:
> On Wed, Jun 25, 2008 at 10:22 PM, Stefanik G?bor
> <netrolller.3d at gmail.com> wrote:
> > In both b43 and b43legacy, dev->wl->if_type is 0
> > (IEEE80211_IF_TYPE_INVALID) when injecting/transmitting packets on a
> > monitor interface (not sure about receiving), while the logical result
> > would be  5 (IEEE80211_IF_TYPE_MNTR).

I should answer on the list too then:

No, 5 wouldn't be the logical result. Try to understand how monitor mode
and virtual interfaces in mac80211 work.

b43 only sees what mode it is operating in, but pure monitor mode isn't
"operating" at all.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/5f258bde/attachment.pgp>

From f.middleton at apogeect.com  Wed Jun 25 22:28:48 2008
From: f.middleton at apogeect.com (Frank Middleton)
Date: Wed, 25 Jun 2008 16:28:48 -0400
Subject: Regression (FC8 to FC9)
In-Reply-To: <20080625164724.GA32751@tuxdriver.com>
References: <48625F06.3070201@apogeect.com> <1214411165.5881.27.camel@dv>
	<20080625164724.GA32751@tuxdriver.com>
Message-ID: <4862AA80.5010506@apogeect.com>

John W. Linville wrote:
> On Wed, Jun 25, 2008 at 12:26:05PM -0400, Pavel Roskin wrote:
>> On Wed, 2008-06-25 at 11:06 -0400, Frank Middleton wrote:
>>
>>> Updated FC8 kernel that worked fine  2.6.25.6-27.fc8
>>> FC9 kernel (that has the regression) 2.6.25.6-55.fc9.x86_64
>> I would probably try to bisect it.  I realize that it's a lot of work.
>>
>> The breakage is caused either by patches or by configuration changes.
>> Finding out is the first step.  Then look for the patch or for
>> configuration change that affects the problem.
> 
> Sorry I missed the original post -- my reply is really to the OP
> rather than to Pavel.
> 
> It would probably be better to report Fedora distribution problems
> on Fedora lists rather than the general upstream lists.  That said,
> since -27.fc8 is working for you, you should probably try the -fc9
> kernel built on the same date:
> 
> 	http://koji.fedoraproject.org/koji/buildinfo?buildID=52606
> 
> Perhaps it isn't obvious, but not every F9 kernel is newer than every
> F8 kernel.
> 
> Hth!

It did 
# uname -a
Linux apogee10.apogeect.com 2.6.25.6-59.fc9.x86_64 #1 SMP Fri Jun 13 16:20:31 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux

works like a charm! One learns something new every day :-)

Thanks again -- Frank



From dale at daleenterprise.com  Thu Jun 26 03:00:58 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 25 Jun 2008 21:00:58 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806252133.49335.mb@bu3sch.de>
References: <1214359691.29345.19.camel@dv> <200806251435.13138.mb@bu3sch.de>
	<81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
	<200806252133.49335.mb@bu3sch.de>
Message-ID: <494B123B-927B-482D-87F2-9EBC42F746C6@daleenterprise.com>


On Jun 25, 2008, at 15:33 PM, Michael Buesch wrote:

> On Wednesday 25 June 2008 21:07:33 Dale Walsh wrote:
>> If the receiver has the gain reduced then the S/N ratio and the
>> signal level decrease logarithmically so turning it up has merit
>> provided that the noise level does saturate the input signal because
>> in most front-ends is some kind of circuitry that attempts to
>> compress the incoming signal to prevent saturation and to continue to
>> increase gain beyond this point only increases the noise level until
>> it's saturation occurs and then the noise is just as loud as the  
>> signal.
>
>> ssb-sprom -i minipci_sprom -o minipci_new_sprom --antgbg 0x88
>
> So you seriously think that increasing the antenna gain value
> in the sprom by about 34 dBi is doing any good?

Who in their right mind would attempt a 34dbi increase?

An increase of this magnitude is not a wise increase considering that  
an increase of 10dbi is a signal gain of 1000 times of all the  
ambiants (including noise).

An increase of 1-3dbi should make a difference and it might need a  
decrease rather than an increase, I'm talking about performance  
tuning, not going nuts with an increase so strong that the noise  
level becomes so overwhelming that there is no way the signal would  
not be drowned out.

>
> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/884afbeb/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/884afbeb/attachment.pgp>

From dale at daleenterprise.com  Thu Jun 26 03:04:22 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Wed, 25 Jun 2008 21:04:22 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <1214421540.9990.3.camel@dv>
References: <1214359691.29345.19.camel@dv> <200806251131.10478.mb@bu3sch.de>
	<9167A940-A443-425A-AE82-EC10EA3AEDF7@daleenterprise.com>
	<200806251435.13138.mb@bu3sch.de>
	<81F220FE-48A4-40DA-926F-DCA1B82967E5@daleenterprise.com>
	<1214421540.9990.3.camel@dv>
Message-ID: <679DF33C-27DC-4131-9859-5D35F0C6B60C@daleenterprise.com>


On Jun 25, 2008, at 15:19 PM, Pavel Roskin wrote:

> On Wed, 2008-06-25 at 15:07 -0400, Dale Walsh wrote:
>>
>> On Jun 25, 2008, at 08:35 AM, Michael Buesch wrote:
>>
>>> On Wednesday 25 June 2008 13:51:54 Dale Walsh wrote:
>>>> The problem with your statement is that as far as I could locate,
>>>>
>>>> this is the only tool that allows you to modify the subsystem
>>>> vend/
>>>> prod ID's and to tweak antenna gains to improve performance of a
>>>> card.
>>>
>>>
>>> You should read a good book about antenna physics.
>>
>>
>> I can assure you I know something about antenna design, gain and
>> wavelength versus overall length, loading, termination, resistance,
>> balancing, corona, directional versus omni-directional, resonance,
>> multi-elements, arrays, yagi's, quad's and the antenna is only as  
>> good
>> as the transmitter or receiver attached to it.
>>
>>
>> If the transmitter power is supplied at 70% of the available power
>> then the distance that the transmitter is effective
>> is diminished exponentially by the amount of power being generated.
>
> I suggest that you introduce a new field in ssb-sprom, call it
> "antenna-shape" and put "yagi" there.  That would greatly help with  
> both
> reception and transmission :-)

You are welcome to perform this improvement for your own use but  
unless you can modify the firmware I'm not sure what benefit you  
could get out of defining a non-existent modifiable parameter under  
the expectation that it would be beneficial.

>
> -- 
> Regards,
> Pavel Roskin
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/5af6255b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080625/5af6255b/attachment.pgp>

From mb at bu3sch.de  Thu Jun 26 17:56:04 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 26 Jun 2008 17:56:04 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <494B123B-927B-482D-87F2-9EBC42F746C6@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806252133.49335.mb@bu3sch.de>
	<494B123B-927B-482D-87F2-9EBC42F746C6@daleenterprise.com>
Message-ID: <200806261756.04348.mb@bu3sch.de>

On Thursday 26 June 2008 03:00:58 Dale Walsh wrote:
> >> ssb-sprom -i minipci_sprom -o minipci_new_sprom --antgbg 0x88
> >
> > So you seriously think that increasing the antenna gain value
> > in the sprom by about 34 dBi is doing any good?
> 
> Who in their right mind would attempt a 34dbi increase?

The quoted command above, which changes the antenna gain by about
33.5dBi, is a quote from your mail that explains the ssb-sprom bug.

> An increase of this magnitude is not a wise increase considering that  
> an increase of 10dbi is a signal gain of 1000 times of all the  
> ambiants (including noise).
> 
> An increase of 1-3dbi should make a difference and it might need a  
> decrease rather than an increase, I'm talking about performance  
> tuning, not going nuts with an increase so strong that the noise  
> level becomes so overwhelming that there is no way the signal would  
> not be drowned out.

You should seriously go to a good bookstore and buy a book that
explains what an "antenna gain" is.

However, as an alternative you can simply increase the antenna gain
value of one of your cards by 3dBi. You'll notice what happens then.
You'll probably be surprised. :)
(However, you'll probably explain the results of the test with your
weird noise theories. hm...)


-- 
Greetings Michael.


From dale at daleenterprise.com  Fri Jun 27 10:40:39 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 04:40:39 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806261756.04348.mb@bu3sch.de>
References: <1214359691.29345.19.camel@dv> <200806252133.49335.mb@bu3sch.de>
	<494B123B-927B-482D-87F2-9EBC42F746C6@daleenterprise.com>
	<200806261756.04348.mb@bu3sch.de>
Message-ID: <D75F2E04-0109-4801-B307-1D542DF7811C@daleenterprise.com>


On Jun 26, 2008, at 11:56 AM, Michael Buesch wrote:

> On Thursday 26 June 2008 03:00:58 Dale Walsh wrote:
>>>> ssb-sprom -i minipci_sprom -o minipci_new_sprom --antgbg 0x88
>>>
>>> So you seriously think that increasing the antenna gain value
>>> in the sprom by about 34 dBi is doing any good?
>>
>> Who in their right mind would attempt a 34dbi increase?
>
> The quoted command above, which changes the antenna gain by about
> 33.5dBi, is a quote from your mail that explains the ssb-sprom bug.

That was an example valse I used so I could easily see what was  
modified, making a change of +0x01 or -0x01 means you have to look  
hard to see what changes to ensure it is the correct byte, at this  
time I'm working from a file and want to be sure that whatever is  
modified in the file is correct and currently it is not.

Most cards shouldn't need to be tweaked at all while others might  
require a minor increase or decrease to improve performance, this is  
all I am after.

>
>> An increase of this magnitude is not a wise increase considering that
>> an increase of 10dbi is a signal gain of 1000 times of all the
>> ambiants (including noise).
>>
>> An increase of 1-3dbi should make a difference and it might need a
>> decrease rather than an increase, I'm talking about performance
>> tuning, not going nuts with an increase so strong that the noise
>> level becomes so overwhelming that there is no way the signal would
>> not be drowned out.
>
> You should seriously go to a good bookstore and buy a book that
> explains what an "antenna gain" is.
>
> However, as an alternative you can simply increase the antenna gain
> value of one of your cards by 3dBi. You'll notice what happens then.
> You'll probably be surprised. :)
> (However, you'll probably explain the results of the test with your
> weird noise theories. hm...)

Weird noise theory, maybe reading a book on RF theory might help you  
to understand about noise and the S/N ratio and how the noise can  
affect superimposed modulation and frequency shifting which is the  
principal of wlan cards, wireless routers and AP's.

When you increase input sensitivity it does not just increase the  
sensitivity for the signal, it also increases sensitivity to  
everything which includes white noise.

You are implying that there is no white noise and this white noise  
does not affect the signal and that just isn't true.

The receiver portion of most lan card is PLL based with a clipping  
circuit to prevent the input signal from over saturating the the  
first stage of the receiver and causing damage, increasing input  
sensitivity beyond this level does not increase the signal past the  
clipped level but it does allow the level of the noise to reach this  
same level if sensitivity is turned up significantly.

A 1db or 2db increase in input sensitivity is probably more than  
enough to improve a cards performance if it lacks it and can  
compensate for design changes in poorly designed cards, a 10db  
increase is essentially an increase of 1000% which makes a 500mw  
signal look like a 5watt signal, this also increases the generated  
harmonics, the 3rd order harmonics being the most damaging since very  
little filtering is included in wlan cards.

We are now discussing RF fundamentals and we should be discussing the  
application which is what I originally was writing about, if you wish  
to continue a discussion about RF principals I would be more than  
happy to discuss this off list since it does not apply to fixing the  
ssb-sprom application.

>
> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/0b3746cf/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/0b3746cf/attachment.pgp>

From mb at bu3sch.de  Fri Jun 27 11:57:52 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 27 Jun 2008 11:57:52 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <D75F2E04-0109-4801-B307-1D542DF7811C@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806261756.04348.mb@bu3sch.de>
	<D75F2E04-0109-4801-B307-1D542DF7811C@daleenterprise.com>
Message-ID: <200806271157.52593.mb@bu3sch.de>

On Friday 27 June 2008 10:40:39 Dale Walsh wrote:
> A 1db or 2db increase in input sensitivity is probably more than  
> enough to improve a cards performance if it lacks it and can  
> compensate for design changes in poorly designed cards, a 10db  
> increase is essentially an increase of 1000% which makes a 500mw  
> signal look like a 5watt signal, this also increases the generated  
> harmonics, the 3rd order harmonics being the most damaging since very  
> little filtering is included in wlan cards.


Go read the b43 device specifications, please.
You're making a fool out of yourself.
You have absolutely no clue about the meaning of the values in the sprom.
But please try to increase the value by 1 or 2 dBi. You will see what
happens. But please don't explain the result with any weird clipping
theory or whatever.

-- 
Greetings Michael.


From dale at daleenterprise.com  Fri Jun 27 13:36:11 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 07:36:11 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806271157.52593.mb@bu3sch.de>
References: <1214359691.29345.19.camel@dv> <200806261756.04348.mb@bu3sch.de>
	<D75F2E04-0109-4801-B307-1D542DF7811C@daleenterprise.com>
	<200806271157.52593.mb@bu3sch.de>
Message-ID: <D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>


On Jun 27, 2008, at 05:57 AM, Michael Buesch wrote:

> On Friday 27 June 2008 10:40:39 Dale Walsh wrote:
>> A 1db or 2db increase in input sensitivity is probably more than
>> enough to improve a cards performance if it lacks it and can
>> compensate for design changes in poorly designed cards, a 10db
>> increase is essentially an increase of 1000% which makes a 500mw
>> signal look like a 5watt signal, this also increases the generated
>> harmonics, the 3rd order harmonics being the most damaging since very
>> little filtering is included in wlan cards.
>
>
> Go read the b43 device specifications, please.

If it's relevant I'll read it, have a link to the specifications  
because a serach of "b43 device specifications" does not reveal any  
specifications?

> You're making a fool out of yourself.

I am ???

> You have absolutely no clue about the meaning of the values in the  
> sprom.

You're probably correct because I can't find any concrete description  
of the data other than what you claim it to possibly be.

In my dealings with Broadcom, I'm told that receiver gain and  
transmit power are controllable but they do not release the  
information so I have to go by the information I can find which is  
minimal and it's accuracy is questionable.

> But please try to increase the value by 1 or 2 dBi. You will see what
> happens. But please don't explain the result with any weird clipping
> theory or whatever.

I'd love to test changes however the program is broken and this is  
what I have been writing about, if you have already performed similar  
test why not publish the results of your tests?

Now, can we get back to the discussion of fixing the application?

>
> -- 
> Greetings Michael.
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/01002d3c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/01002d3c/attachment.pgp>

From gene.heskett at verizon.net  Fri Jun 27 14:47:38 2008
From: gene.heskett at verizon.net (Gene Heskett)
Date: Fri, 27 Jun 2008 08:47:38 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
Message-ID: <200806270847.38579.gene.heskett@verizon.net>

On Friday 27 June 2008, Dale Walsh wrote:
>On Jun 27, 2008, at 05:57 AM, Michael Buesch wrote:
>> On Friday 27 June 2008 10:40:39 Dale Walsh wrote:
[...]
>> You're making a fool out of yourself.
>
>I am ???

Yes.

>> You have absolutely no clue about the meaning of the values in the
>> sprom.
>
>You're probably correct because I can't find any concrete description
>of the data other than what you claim it to possibly be.

That is because the FCC (and most regulatory agencies) is paranoid about just 
anybody turning these things up to illegal output values, so it is they who 
have put the shroud of secrecy about this stuff, which many of them can do 
since the chipsets are not US specific, but largely universal as other places 
allow more power output and somewhat different band usage limits & channel 
assignments.  The fact that this suits Broadcoms business model is just icing 
on the cake for their legal staff.

>In my dealings with Broadcom, I'm told that receiver gain and
>transmit power are controllable but they do not release the
>information so I have to go by the information I can find which is
>minimal and it's accuracy is questionable.
>
>> But please try to increase the value by 1 or 2 dBi. You will see what
>> happens. But please don't explain the result with any weird clipping
>> theory or whatever.
>
>I'd love to test changes however the program is broken and this is
>what I have been writing about, if you have already performed similar
>test why not publish the results of your tests?
>
>Now, can we get back to the discussion of fixing the application?

Possibly, provided your sidewalk superintending is just that.  As a broadcast 
engineer with nearly 60 years of steering electrons in ways to make them do 
useful work, I think Michael has a better understanding of what it is that he 
is slowly discovering and making work than someone who just walked in the door.  
Even with my experience, I wouldn't pretend to think I can tell Micheal or 
Larry what to do, so why should you be capable of doing that with maybe a month 
of observation?

-- 
Cheers, Gene
"There are four boxes to be used in defense of liberty:
 soap, ballot, jury, and ammo. Please use in that order."
-Ed Howdershelt (Author)
Having nothing, nothing can he lose.
		-- William Shakespeare, "Henry VI"


From dale at daleenterprise.com  Fri Jun 27 18:34:19 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 12:34:19 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <200806270847.38579.gene.heskett@verizon.net>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
Message-ID: <01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>


On Jun 27, 2008, at 08:47 AM, Gene Heskett wrote:

> On Friday 27 June 2008, Dale Walsh wrote:
>> On Jun 27, 2008, at 05:57 AM, Michael Buesch wrote:
>>> On Friday 27 June 2008 10:40:39 Dale Walsh wrote:
> [...]
>>> You're making a fool out of yourself.
>>
>> I am ???
>
> Yes.

And in my opinion this comment makes you look like an idiot.

>
>>> You have absolutely no clue about the meaning of the values in the
>>> sprom.
>>
>> You're probably correct because I can't find any concrete description
>> of the data other than what you claim it to possibly be.
>
> That is because the FCC (and most regulatory agencies) is paranoid  
> about just
> anybody turning these things up to illegal output values, so it is  
> they who
> have put the shroud of secrecy about this stuff, which many of them  
> can do
> since the chipsets are not US specific, but largely universal as  
> other places
> allow more power output and somewhat different band usage limits &  
> channel
> assignments.  The fact that this suits Broadcoms business model is  
> just icing
> on the cake for their legal staff.

I don't want to increase it to an illegal level or blindly make  
changes with throughly testing the effects of the changes to ensure  
they are optimum settings and still within legal levels.

>
>> In my dealings with Broadcom, I'm told that receiver gain and
>> transmit power are controllable but they do not release the
>> information so I have to go by the information I can find which is
>> minimal and it's accuracy is questionable.
>>
>>> But please try to increase the value by 1 or 2 dBi. You will see  
>>> what
>>> happens. But please don't explain the result with any weird clipping
>>> theory or whatever.
>>
>> I'd love to test changes however the program is broken and this is
>> what I have been writing about, if you have already performed similar
>> test why not publish the results of your tests?
>>
>> Now, can we get back to the discussion of fixing the application?
>
> Possibly, provided your sidewalk superintending is just that.  As a  
> broadcast
> engineer with nearly 60 years of steering electrons in ways to make  
> them do
> useful work, I think Michael has a better understanding of what it  
> is that he
> is slowly discovering and making work than someone who just walked  
> in the door.
> Even with my experience, I wouldn't pretend to think I can tell  
> Micheal or
> Larry what to do, so why should you be capable of doing that with  
> maybe a month
> of observation?

Sidewalk superintending???

What you do has nothing to do with fixing the program and I could  
really care less about what you do, as I have been saying, it's  
broken so lets fix it.

I'm not telling him to do anything, when the program works properly I  
will conduct tests and draw conclusions based on the results, make  
the results available to others but I certainly wont do it with a  
broken program.

At this time there is no certainty that he has decoded the data  
properly because there is no manufacturing documentation I can find  
that outlines the data, only a very good possibility that he has  
decoded it properly and this is what I am counting on.

Regardless of anything I want to do to a card, the program needs to  
be fixed and the focus is being sidetracked by chatter of licenses  
and books about antennas which have nothing to do with the ssb-sprom  
program working.

Discussing anything with me other than fixing the program is a  
complete waste of time yet people are hell-bent on sidetracking the  
fixing of the program, draw whatever conclusion you want from it,  
unless you have something of value to add towards fixing the program  
your comments have no value.

We can sit here in a pissing contest and the ruffling of feathers  
about bullshit and stupidity for months to come and it wont change  
the fact that the application is broken and needs to be fixed, if you  
don't wish to contribute to fixing it then I suggest you let someone  
who does intervene and let the focus return to fixing the program.

>
> -- 
> Cheers, Gene
> "There are four boxes to be used in defense of liberty:
>  soap, ballot, jury, and ammo. Please use in that order."
> -Ed Howdershelt (Author)
> Having nothing, nothing can he lose.
> 		-- William Shakespeare, "Henry VI"
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/49df46fe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/49df46fe/attachment.pgp>

From gavron at wetwork.net  Fri Jun 27 18:41:11 2008
From: gavron at wetwork.net (Ehud Gavron)
Date: Fri, 27 Jun 2008 09:41:11 -0700
Subject: More discrepancies in ssb-sprom
In-Reply-To: <01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
Message-ID: <48651827.40708@wetwork.net>

Dale Walsh wrote:
> ...
> And in my opinion this comment makes you look like an idiot.
And now that you're resorting to calling list members idiots this is 
your opportunity for a time-out.  Go stand in the corner, post on this 
list no more, and stop lowering the S/N ratio.  The idiot is the one 
staring at you from the mirror.
> ...
> I could really care less about what you do...
Clearly you don't care about people here.  This is reason number two for 
you to MOVE ALONG NOW.

> ...
> Discussing anything with me ... is a complete waste of time ...
Yes, it is.

So go sit in the corner, or move on. 

No need to reply.  You've already called us idiots and told us you don't 
care and that discussing things with you is a waste of time.  I'm just 
offering friendly advice.

Ehud



From netrolller.3d at gmail.com  Fri Jun 27 19:19:41 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Fri, 27 Jun 2008 19:19:41 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
Message-ID: <69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>

On Tue, May 20, 2008 at 6:24 PM, Stefanik G?bor <netrolller.3d at gmail.com> wrote:
> Hi all,
>
> One day I was testing monitor-while-operating, with "wlan0" as the
> managed interface and "rtap0" as the monitor one, and found an
> interesting bug: when I am associated with an AP on wlan0, and try to
> receive the same AP's packets through the monitor interface, the
> packets arrive in decrypted form, but with the WEP bit still set. This
> appears to be a HW-crypto-related bug, though I haven't tested with HW
> crypto off. What can cause such a bug?
>
> Thanks,
> G?bor
>
> --
> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>

Could someone investigate this? I first posted this a month ago, and
noone really did anything about it.

(CCing Johannes Berg.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From dale at daleenterprise.com  Fri Jun 27 19:34:34 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 13:34:34 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <48651827.40708@wetwork.net>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
	<48651827.40708@wetwork.net>
Message-ID: <E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>


On Jun 27, 2008, at 12:41 PM, Ehud Gavron wrote:

> Dale Walsh wrote:
>> ...
>> And in my opinion this comment makes you look like an idiot.
> And now that you're resorting to calling list members idiots this  
> is your opportunity for a time-out.  Go stand in the corner, post  
> on this list no more, and stop lowering the S/N ratio.  The idiot  
> is the one staring at you from the mirror.
>> ...
>> I could really care less about what you do...
> Clearly you don't care about people here.  This is reason number  
> two for you to MOVE ALONG NOW.
>
>> ...
>> Discussing anything with me ... is a complete waste of time ...
> Yes, it is.
>
> So go sit in the corner, or move on.
> No need to reply.  You've already called us idiots and told us you  
> don't care and that discussing things with you is a waste of time.   
> I'm just offering friendly advice.

What is your problem, maybe you should up your medication!!!

The fact that you make this response shows your not very bright, I'm  
not interested in a "high" and "mightier than thou" attitude of turds  
like you when your response doesn't contribute to anything positive.

Is everyone on this list a moron who has nothing better to do than  
attack another list member who is trying to instigate advancement and  
corrections or are there some who can contribute in a positive way  
without attacking another???

No need to respond to that, I don't believe everyone on this list is  
an idiot.

No need for you to respond at all, I'll wait for someone intelligent  
to offer something of value while anyone else who doesn't have  
anything positive to add to this thread and does will only be  
demonstrating their lack of intelligence.

At this time yes, if you respond to this thread with anything that  
does not contribute to fixing the ssb-sprom program you will be seen  
as an idiot and an instigator.


>
> Ehud
>
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/eb0f5438/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/eb0f5438/attachment.pgp>

From gavron at wetwork.net  Fri Jun 27 19:40:33 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Fri, 27 Jun 2008 10:40:33 -0700
Subject: More discrepancies in ssb-sprom
In-Reply-To: <E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
	<48651827.40708@wetwork.net>
	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>
Message-ID: <48652611.60507@wetwork.net>

Dale this is not a flame-war list or a place to show your illiteracy.  
Step off.

Dale Walsh wrote:
>
> On Jun 27, 2008, at 12:41 PM, Ehud Gavron wrote:
...
> What is your problem, maybe you should up your medication!!!
I can't find you listed as a licensed physician.  Are you dispensing 
medical advice without a license?
> The fact that you make this response shows your not very bright,
*LOL*  Did you mean "You're" not very bright, because then "you're" 
right.  If you meant "your not very bright" then perhaps remedial first 
grade English would be called for.  I don't know -- English is my second 
language. 

> I'm not interested in a "high" and "mightier than thou" attitude of 
> turds like you when your response doesn't contribute to anything positive.
Calling people idiots and then turds is further evidence that you need 
to MOVE ALONG NOW.  Step off, eh.
>
> Is everyone on this list a moron
Yes, we're all morons.  You're the genius.  Go to 
bcm43xx-genius at step-off.org.

> ...
>  I'll wait for someone intelligent to offer something of value
Apparently your four postings over several weeks have gained you none of 
that.  Step off, eh.

> -- Dale
>
Perhaps instead of prescribing medications, calling people idiots and 
turds, and saying nothing of intelligence is being presented you should 
take a deep breath (go ahead, really), try not to be illiterate (you 
know, "your" vs "you're", "it's" vs "its" and so on), and MOVE ALONG.

In case the message was unclear, let me assure you in the friendliest way,
Step off, eh.

Ehud


From dale at daleenterprise.com  Fri Jun 27 20:24:17 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 14:24:17 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <48652611.60507@wetwork.net>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
	<48651827.40708@wetwork.net>
	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>
	<48652611.60507@wetwork.net>
Message-ID: <018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>


On Jun 27, 2008, at 13:40 PM, gavron at wetwork.net wrote:

> Dale this is not a flame-war list or a place to show your  
> illiteracy.  Step off.
>
> Dale Walsh wrote:
>>
>> On Jun 27, 2008, at 12:41 PM, Ehud Gavron wrote:
> ...
>> What is your problem, maybe you should up your medication!!!
> I can't find you listed as a licensed physician.  Are you  
> dispensing medical advice without a license?
>> The fact that you make this response shows your not very bright,
> *LOL*  Did you mean "You're" not very bright, because then "you're"  
> right.  If you meant "your not very bright" then perhaps remedial  
> first grade English would be called for.  I don't know -- English  
> is my second language.
>> I'm not interested in a "high" and "mightier than thou" attitude  
>> of turds like you when your response doesn't contribute to  
>> anything positive.
> Calling people idiots and then turds is further evidence that you  
> need to MOVE ALONG NOW.  Step off, eh.

You must be a moron to continue to pursue this conversation.

>>
>> Is everyone on this list a moron
> Yes, we're all morons.  You're the genius.  Go to bcm43xx- 
> genius at step-off.org.

No, only you are a moron as far as I can tell.

>
>> ...
>>  I'll wait for someone intelligent to offer something of value
> Apparently your four postings over several weeks have gained you  
> none of that.  Step off, eh.
>
>>
>
>> -- Dale
>>
> Perhaps instead of prescribing medications, calling people idiots  
> and turds, and saying nothing of intelligence is being presented  
> you should take a deep breath (go ahead, really), try not to be  
> illiterate (you know, "your" vs "you're", "it's" vs "its" and so  
> on), and MOVE ALONG.

Now it's an issue of literacy???

What a putz you are, looking for something, anything to make you feel  
better than everyone else by giving you something to complain about,  
I could care less if it's "your" or "you're" as long as you shut up,  
get a life dude.

> In case the message was unclear, let me assure you in the  
> friendliest way,
> Step off, eh.

What is your problem???

Don't you have any more intelligence than what you have displayed???

Why don't you step off.

If you had kept your mouth shut in the first place then this  
conversation wouldn't be happening, you really need to get laid!!!!

>
> Ehud
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/1eca48af/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/1eca48af/attachment.pgp>

From gavron at wetwork.net  Fri Jun 27 20:32:26 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Fri, 27 Jun 2008 11:32:26 -0700
Subject: More discrepancies in ssb-sprom
In-Reply-To: <018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
	<48651827.40708@wetwork.net>
	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>
	<48652611.60507@wetwork.net>
	<018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
Message-ID: <4865323A.6050005@wetwork.net>

Dale Walsh wrote:
> Now it's an issue of literacy???

I don't know when you became illiterate.  I only noticed it in the 
previous posting.

>
> What a putz you are, looking for something, anything to make you feel 
> better than everyone else by giving you something to complain about, I 
> could care less if it's "your" or "you're" as long as you shut up, get 
> a life dude.

Calling people idiots, turds, and putzes does not appear to be effective 
in making friends or influencing people.



> If you had kept your mouth shut in the first place then this 
> conversation wouldn't be happening, you really need to get laid!!!!
As you can tell from your posts of
06/05, 06/06, 06/08, 06/11, 06/19, 06/21, 06/23, 06/25, and today, there 
IS NO CONVERSATION HAPPENING.  It has nothing to do with my sex life, 
because you see, Dale, nobody loves you.  Again, if you want to see the 
illiterate idiot putz who needs to get laid and step off -- look in the 
mirror.


Nothing to see here.   Move along now.

Ehud


From richie at coderworld.net  Fri Jun 27 20:37:40 2008
From: richie at coderworld.net (Richard Jonsson)
Date: Fri, 27 Jun 2008 20:37:40 +0200
Subject: More discrepancies in ssb-sprom
In-Reply-To: <018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
References: <1214359691.29345.19.camel@dv>
	<200806271157.52593.mb@bu3sch.de>	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>	<200806270847.38579.gene.heskett@verizon.net>	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>	<48651827.40708@wetwork.net>	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>	<48652611.60507@wetwork.net>
	<018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
Message-ID: <48653374.4090202@coderworld.net>

You should really take Ehuds advice, Dale. But I fear you can't because 
you really must have the last word, don't you?

Since you pissed off everyone who could possibly help you out, you don't 
have anything to gain from staying here.

I suggest you re-read this discussion and figure out why you get the 
replies you get.

I guess you're welcome back when you've learned to behave and keep a 
decent discussion level.

Until then, Richard


From dale at daleenterprise.com  Fri Jun 27 20:47:48 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 14:47:48 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <4865323A.6050005@wetwork.net>
References: <1214359691.29345.19.camel@dv> <200806271157.52593.mb@bu3sch.de>
	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>
	<200806270847.38579.gene.heskett@verizon.net>
	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>
	<48651827.40708@wetwork.net>
	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>
	<48652611.60507@wetwork.net>
	<018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
	<4865323A.6050005@wetwork.net>
Message-ID: <6B1CEE61-7520-4E52-9171-38541FD133D7@daleenterprise.com>


On Jun 27, 2008, at 14:32 PM, gavron at wetwork.net wrote:

> Dale Walsh wrote:
>> Now it's an issue of literacy???
>
> I don't know when you became illiterate.  I only noticed it in the  
> previous posting.
>
>>
>> What a putz you are, looking for something, anything to make you  
>> feel better than everyone else by giving you something to complain  
>> about, I could care less if it's "your" or "you're" as long as you  
>> shut up, get a life dude.
>
> Calling people idiots, turds, and putzes does not appear to be  
> effective in making friends or influencing people.
>
>
>
>> If you had kept your mouth shut in the first place then this  
>> conversation wouldn't be happening, you really need to get laid!!!!
> As you can tell from your posts of
> 06/05, 06/06, 06/08, 06/11, 06/19, 06/21, 06/23, 06/25, and today,  
> there IS NO CONVERSATION HAPPENING.  It has nothing to do with my  
> sex life, because you see, Dale, nobody loves you.  Again, if you  
> want to see the illiterate idiot putz who needs to get laid and  
> step off -- look in the mirror.
>
>
> Nothing to see here.   Move along now.

Man, you just have to be a total idiot, I guess it's better if I just  
ignore you cause you obviously can't contribute in a meaningful  
manner from what I've seen so far.

>
> Ehud
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/855f5ed3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/855f5ed3/attachment.pgp>

From dale at daleenterprise.com  Fri Jun 27 20:58:04 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Fri, 27 Jun 2008 14:58:04 -0400
Subject: More discrepancies in ssb-sprom
In-Reply-To: <48653374.4090202@coderworld.net>
References: <1214359691.29345.19.camel@dv>
	<200806271157.52593.mb@bu3sch.de>	<D019D307-0CC7-4CBB-A2C1-AFCBCF06796B@daleenterprise.com>	<200806270847.38579.gene.heskett@verizon.net>	<01E3C78B-39A6-444A-A68E-B4274906E690@daleenterprise.com>	<48651827.40708@wetwork.net>	<E00FDCF4-414E-4756-A2FE-F888928583DB@daleenterprise.com>	<48652611.60507@wetwork.net>
	<018D20C3-B88B-48DF-B26E-B82656814732@daleenterprise.com>
	<48653374.4090202@coderworld.net>
Message-ID: <63A319CC-AAFF-42DE-9C07-97BE9CA3BAE5@daleenterprise.com>


On Jun 27, 2008, at 14:37 PM, Richard Jonsson wrote:

> You should really take Ehuds advice, Dale. But I fear you can't  
> because you really must have the last word, don't you?

I'm sorry it's hard to take advice from a putz and so far that is the  
opinion I've reached based on my interaction with him.

>
> Since you pissed off everyone who could possibly help you out, you  
> don't have anything to gain from staying here.

Now I've pissed off everyone who can help me???

I think you are mistaken, this is not about helping me, this is about  
fixing the ssb-sprom program, something that everyone seems to have  
lost sight of or don't care about.

>
> I suggest you re-read this discussion and figure out why you get  
> the replies you get.

Re-reading his drivel doesn't sound productive.

>
> I guess you're welcome back when you've learned to behave and keep  
> a decent discussion level.

I wasn't aware you were authoritative around here???

I also wasn't aware I needed to go anywhere, as I said, I want to  
discuss fixing the ssb-sprom program but so far those who have  
responded would rather discuss bullshit and stupidity so jump on them.

As far as ehud goes, he should have just kept his mouth shut but  
obviously, it's something he was incapable of.

>
> Until then, Richard
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/c54280df/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/c54280df/attachment.pgp>

From mb at bu3sch.de  Fri Jun 27 21:14:09 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 27 Jun 2008 21:14:09 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
Message-ID: <200806272114.09433.mb@bu3sch.de>

On Friday 27 June 2008 19:19:41 Stefanik G?bor wrote:
> On Tue, May 20, 2008 at 6:24 PM, Stefanik G?bor <netrolller.3d at gmail.com> wrote:
> > Hi all,
> >
> > One day I was testing monitor-while-operating, with "wlan0" as the
> > managed interface and "rtap0" as the monitor one, and found an
> > interesting bug: when I am associated with an AP on wlan0, and try to
> > receive the same AP's packets through the monitor interface, the
> > packets arrive in decrypted form, but with the WEP bit still set. This
> > appears to be a HW-crypto-related bug, though I haven't tested with HW
> > crypto off. What can cause such a bug?
> >
> > Thanks,
> > G?bor
> >
> > --
> > Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
> >
> 
> Could someone investigate this? I first posted this a month ago, and
> noone really did anything about it.

I'm sorry, we cannot reproduce this bug.
I'm also unsure how hwcrypto could break here. The driver/firmware doesn't
even know about whether there's a monitor interface in addition to the
STA interface. The firmware simply decrypts the packet or it doesn't.
If the firmware does decrypt, the driver will clear the protected bit.
If it doesn't decrypt, the driver won't clear the bit.

I guess you need to debug this by yourself, if you can still reproduce
the bug. see drivers/net/b43/xmit.c for the b43_rx function. You can add
a few sanity checks there. If you don't find a bug here, go up to the
mac80211 stack.

-- 
Greetings Michael.


From netrolller.3d at gmail.com  Fri Jun 27 21:27:47 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Fri, 27 Jun 2008 21:27:47 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <200806272114.09433.mb@bu3sch.de>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
	<200806272114.09433.mb@bu3sch.de>
Message-ID: <69e28c910806271227k42177cefla46be43fb8e82459@mail.gmail.com>

On Fri, Jun 27, 2008 at 9:14 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Friday 27 June 2008 19:19:41 Stefanik G?bor wrote:
>> On Tue, May 20, 2008 at 6:24 PM, Stefanik G?bor <netrolller.3d at gmail.com> wrote:
>> > Hi all,
>> >
>> > One day I was testing monitor-while-operating, with "wlan0" as the
>> > managed interface and "rtap0" as the monitor one, and found an
>> > interesting bug: when I am associated with an AP on wlan0, and try to
>> > receive the same AP's packets through the monitor interface, the
>> > packets arrive in decrypted form, but with the WEP bit still set. This
>> > appears to be a HW-crypto-related bug, though I haven't tested with HW
>> > crypto off. What can cause such a bug?
>> >
>> > Thanks,
>> > G?bor
>> >
>> > --
>> > Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>> >
>>
>> Could someone investigate this? I first posted this a month ago, and
>> noone really did anything about it.
>
> I'm sorry, we cannot reproduce this bug.
> I'm also unsure how hwcrypto could break here. The driver/firmware doesn't
> even know about whether there's a monitor interface in addition to the
> STA interface. The firmware simply decrypts the packet or it doesn't.
> If the firmware does decrypt, the driver will clear the protected bit.
> If it doesn't decrypt, the driver won't clear the bit.
>
> I guess you need to debug this by yourself, if you can still reproduce
> the bug. see drivers/net/b43/xmit.c for the b43_rx function. You can add
> a few sanity checks there. If you don't find a bug here, go up to the
> mac80211 stack.
>
> --
> Greetings Michael.
>

Hmm... I re-checked, and now it appears that the packets are now
passed with the protected bit set correctly, but still they arrive
decrypted. Trying to transmit an already-encrypted frame results in it
being double-encrypted. However, I believe that a raw monitor mode
interface should pass the packets as they are received. and not in
decrypted form.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From johannes at sipsolutions.net  Fri Jun 27 21:13:16 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 27 Jun 2008 21:13:16 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
	(sfid-20080627_191943_995182_41430239)
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
	(sfid-20080627_191943_995182_41430239)
Message-ID: <1214593997.5507.2.camel@johannes.berg>

On Fri, 2008-06-27 at 19:19 +0200, Stefanik G?bor wrote:
> On Tue, May 20, 2008 at 6:24 PM, Stefanik G?bor <netrolller.3d at gmail.com> wrote:
> > Hi all,
> >
> > One day I was testing monitor-while-operating, with "wlan0" as the
> > managed interface and "rtap0" as the monitor one, and found an
> > interesting bug: when I am associated with an AP on wlan0, and try to
> > receive the same AP's packets through the monitor interface, the
> > packets arrive in decrypted form, but with the WEP bit still set. This
> > appears to be a HW-crypto-related bug, though I haven't tested with HW
> > crypto off. What can cause such a bug?

> Could someone investigate this? I first posted this a month ago, and
> noone really did anything about it.

It's not a bug, it's a feature. Turn off hardware encryption if it
bothers you.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/bf9b7833/attachment.pgp>

From netrolller.3d at gmail.com  Fri Jun 27 21:38:07 2008
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?Stefanik_G=E1bor?=)
Date: Fri, 27 Jun 2008 21:38:07 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <1214593997.5507.2.camel@johannes.berg>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
	<1214593997.5507.2.camel@johannes.berg>
Message-ID: <69e28c910806271238h181b7630lc598204c140843e8@mail.gmail.com>

On Fri, Jun 27, 2008 at 9:13 PM, Johannes Berg
<johannes at sipsolutions.net> wrote:
> On Fri, 2008-06-27 at 19:19 +0200, Stefanik G?bor wrote:
>> On Tue, May 20, 2008 at 6:24 PM, Stefanik G?bor <netrolller.3d at gmail.com> wrote:
>> > Hi all,
>> >
>> > One day I was testing monitor-while-operating, with "wlan0" as the
>> > managed interface and "rtap0" as the monitor one, and found an
>> > interesting bug: when I am associated with an AP on wlan0, and try to
>> > receive the same AP's packets through the monitor interface, the
>> > packets arrive in decrypted form, but with the WEP bit still set. This
>> > appears to be a HW-crypto-related bug, though I haven't tested with HW
>> > crypto off. What can cause such a bug?
>
>> Could someone investigate this? I first posted this a month ago, and
>> noone really did anything about it.
>
> It's not a bug, it's a feature. Turn off hardware encryption if it
> bothers you.
>
> johannes
>

I don't think that we should require turning off hardware cryptography
for doing this - one might want to use a managed interface with
hardware cryptography enabled (less code overhead), while getting a
truely-raw dump on a monitor interface simultaneously. This is useful
for wireless IDS, for example.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Fri Jun 27 21:39:30 2008
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 27 Jun 2008 21:39:30 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910806271227k42177cefla46be43fb8e82459@mail.gmail.com>
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<200806272114.09433.mb@bu3sch.de>
	<69e28c910806271227k42177cefla46be43fb8e82459@mail.gmail.com>
Message-ID: <200806272139.30174.mb@bu3sch.de>

On Friday 27 June 2008 21:27:47 Stefanik G?bor wrote:
> However, I believe that a raw monitor mode
> interface should pass the packets as they are received. and not in
> decrypted form.

Ehm, the hardware decrypts the frame before it arrives at the driver.
So if you don't want hwcrypto, disable hwcrypto. See the module parameter.

-- 
Greetings Michael.


From johannes at sipsolutions.net  Fri Jun 27 21:40:13 2008
From: johannes at sipsolutions.net (Johannes Berg)
Date: Fri, 27 Jun 2008 21:40:13 +0200
Subject: Monitor-while-operating bug in b43: WEP-encrypted packets are
	received in decrypted form on the monitor interface
In-Reply-To: <69e28c910806271238h181b7630lc598204c140843e8@mail.gmail.com>
	(sfid-20080627_213809_793790_71B1E71F)
References: <69e28c910805200924k56f19058n5f7f4e10a4031669@mail.gmail.com>
	<69e28c910806271019r305c57d2ydf5d1eeee9f8d7f0@mail.gmail.com>
	<1214593997.5507.2.camel@johannes.berg>
	<69e28c910806271238h181b7630lc598204c140843e8@mail.gmail.com>
	(sfid-20080627_213809_793790_71B1E71F)
Message-ID: <1214595613.5507.4.camel@johannes.berg>

On Fri, 2008-06-27 at 21:38 +0200, Stefanik G?bor wrote:

> I don't think that we should require turning off hardware cryptography
> for doing this - one might want to use a managed interface with
> hardware cryptography enabled (less code overhead), while getting a
> truely-raw dump on a monitor interface simultaneously. This is useful
> for wireless IDS, for example.

Sure, would be great. Go implement it. Might need hardware changes. And
think about it first maybe.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080627/64580991/attachment.pgp>

From rmichael-bcm at edgeofthenet.org  Sun Jun 29 22:52:36 2008
From: rmichael-bcm at edgeofthenet.org (Richard Michael)
Date: Sun, 29 Jun 2008 16:52:36 -0400
Subject: F9 PPC on Airport Extreme / PB G4 Ti
Message-ID: <20080629205236.GA6420@nexus.edgeofthenet.org>

Hello,

I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
been trying to configure the Airport Extreme wireless card without
success.  The b43 loads, and the interface is available, but after
installing the firmware, the system freezes and requires a hard reboot.

At first, I thought I should use b43 and new firmware, since this is
kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
perhaps I should use b43legacy and old firmware, since this is a
"BCM4306 ... rev(03)" card.

Has anyone got this card working?

Below is the entire procedure I went through already, trying both
drivers and firmware; sorry for the long post. :)

Regards,
Richard

-----------------------------

# uname -a
Linux localhost.localdomain 2.6.25.6-55.fc9.ppc #1 Tue Jun 10 15:58:33 EDT 2008 ppc ppc ppc GNU/Linux

# lspci -v -v -v -s 0001:10:12.0
0001:10:12.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller (rev 03)
        Subsystem: Apple Computer Inc. AirPort Extreme
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 16
        Interrupt: pin A routed to IRQ 52
        Region 0: Memory at a0006000 (32-bit, non-prefetchable) [size=8K]
        Capabilities: [40] Power Management version 2
                Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
                Status: D0 PME-Enable- DSel=0 DScale=2 PME-
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb

# ./ssb-sprom -i ssb_sprom_copy -P
SPROM(0x04, Subsystem product ID) = 0x004E
SPROM(0x06, Subsystem vendor ID) = 0x106B
SPROM(0x08, PCI Product ID) = 0x4320

Reading the supported devices list on the b43 website, this is an
Airport Extreme Mini-PCI Card, and should work.

Fedora automagically wanted to use the b43 driver.  F9 ships:

# modinfo b43
filename:       /lib/modules/2.6.25.6-55.fc9.ppc/kernel/drivers/net/wireless/b43/b43.ko
firmware:       FW13
license:        GPL
author:         Michael Buesch
author:         Stefano Brivio
author:         Martin Langer
description:    Broadcom B43 wireless driver
srcversion:     9A886AA7ED4F1A447449875
alias:          pcmcia:m02D0c0448f*fn*pfn*pa*pb*pc*pd*
alias:          ssb:v4243id0812rev0D*
alias:          ssb:v4243id0812rev0B*
alias:          ssb:v4243id0812rev0A*
alias:          ssb:v4243id0812rev09*
alias:          ssb:v4243id0812rev07*
alias:          ssb:v4243id0812rev06*
alias:          ssb:v4243id0812rev05*
depends:        mac80211,ssb,input-polldev,rfkill
vermagic:       2.6.25.6-55.fc9.ppc mod_unload 
parm:           bad_frames_preempt:enable(1) / disable(0) Bad Frames Preemption (int)
parm:           fwpostfix:Postfix for the .fw files to load. (string)
parm:           hwpctl:Enable hardware-side power control (default off) (int)
parm:           nohwcrypt:Disable hardware encryption. (int)
parm:           qos:Enable QOS support (default on) (int)
parm:           btcoex:Enable Bluetooth coexistance (default on) (int)


I followed the instructions on the b43 website to use b43-fwcutter to
extract the firmware.  b43-fwcutter version 011 ships with Fedora:

# b43-fwcutter --version
b43-fwcutter version 011

Initially, I used the b43-new instructions because I (Fedora) was using
the b43 driver from 2.6.25.  I verified the MD5SUM of the firmware file
matched an acceptable one from "b43-fwcutter --list":

b43             wl_apsta_mimo.o         410.2160        FW13 cb8d70972b885b1f8883b943c0261a3c

After installing the firmware into /lib/firmware/b43, I "modprobe
-r"/"modprobe" cycled the b43 driver.  During "ifup wlan0" (I believe
it's when dhclient starts), the system simply freezes; a total lockup,
holding down the power button to force a shutdown was necessary.  I
rebooted to try again, but the same problem occurred.

Based on "lspci -v -v" telling me I had a "BCM4306 ... (rev 03)"
Broadcom card, and this from the website:

> b43legacy should be used on all 4301 and 4303 cards. 4306 and 4309
> cards with a MAC core revision of 4 or less should also use b43legacy.
> b43 should be used on all other cards. You can safely have both
> versions built on the same system. The full MAC core version is
> printed in the kernel logs when "SSB debugging" is enabled in KConfig
> and the driver finds a board.

I decided perhaps I was supposed to use the b43legacy driver and
therefore also a different firmware.

I then followed the firmware extraction and installation for the older
firmware.  I again verified the firmware matched "b43-fwcutter --list",
and b43-fwcutter installed the firmware into /lib/firmware/b43legacy.  

b43legacy       wl_apsta.o              295.14          FW10 e08665c5c5b66beb9c3b2dd54aa80cb3

# b43-fwcutter -i wl_apsta-3.130.20.0.o 
This file is recognised as:
  ID         :  FW10
  filename   :  wl_apsta.o
  version    :  295.14
  MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3


I insured there were no b43 modules inserted ("lsmod | grep 43"), then
modprobed b43legacy.  Strangely, Fedora also loaded the b43 driver.
dmesg showed me the driver couldn't find the ucode5.fw file, it wasn't
looking in /lib/firmware/b43legacy, it was looking in /lib/firmware/b43.
So, I linked /lib/firmware/b43 -> /lib/firmware/b43legacy.  Then it told
me the firmware was too old.

Figuring b43 was still involved somehow, but it shouldn't be, I
blacklisted b43.  Now, after "modprobe b43legacy" there is no wlan0
interface, so I cannot "ifup wlan0".  In syslog I find:

Jun 29 16:46:57 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
Jun 29 16:46:57 localhost kernel: Broadcom 43xx-legacy driver loaded [ Features: PLRID, Firmware-ID: FW10 ]


While "modprobe b43" now yields:
(with /lib/firmware/b43 -> /lib/firmware/b43legacy)

Jun 29 16:44:21 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
Jun 29 16:44:21 localhost kernel: b43-phy0: Broadcom 4306 WLAN found
Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
Jun 29 16:44:21 localhost kernel: phy0: Selected rate control algorithm 'pid'
Jun 29 16:44:21 localhost kernel: Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]

but, "ifup wlan0" yields:

Jun 29 16:44:57 localhost kernel: b43-phy0 ERROR: YOUR FIRMWARE IS TOO OLD.


From Larry.Finger at lwfinger.net  Mon Jun 30 00:05:31 2008
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 29 Jun 2008 17:05:31 -0500
Subject: F9 PPC on Airport Extreme / PB G4 Ti
In-Reply-To: <20080629205236.GA6420@nexus.edgeofthenet.org>
References: <20080629205236.GA6420@nexus.edgeofthenet.org>
Message-ID: <4868072B.2070007@lwfinger.net>

Richard Michael wrote:
> Hello,
> 
> I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
> been trying to configure the Airport Extreme wireless card without
> success.  The b43 loads, and the interface is available, but after
> installing the firmware, the system freezes and requires a hard reboot.
> 
> At first, I thought I should use b43 and new firmware, since this is
> kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
> perhaps I should use b43legacy and old firmware, since this is a
> "BCM4306 ... rev(03)" card.
> 
> Has anyone got this card working?
> 
> Below is the entire procedure I went through already, trying both
> drivers and firmware; sorry for the long post. :)

A BCM4306 rev 03 is used my Michael Buesch, the main developer of b43, 
and I think he uses it on PPC hardware. If not, he will let us know.

The correct driver to use is b43. If you had a rev 2 BCM4306, it would 
use b43legacy. The choice of b43 versus b43legacy is made by ssb and 
is dependent on the revision level of the 802.11 core located on the 
Sonics Silicon Backplane. That rev level cannot be seen from the 
outside. I repeat - b43 is the correct driver.

Your initial choice of firmware was correct. It should be extracted 
from the 4.150.10.5 driver. One should _NEVER_ link /lib/firmware/b43 
to /lib/firmware/b43legacy. After you did that, you tried to load V3 
firmware, which does not work with b43, thus the "TOO OLD" message.

As to why your system locked up, I don't know. To help debug this, use 
a 'sudo strace ifup' command to start bringing up the interface. This 
produces a lot of output, but hopefully it will reveal something 
useful on the screen when it freezes. To get the most output, maximize 
the terminal in which you issue the command.

This sounds like a problem in the PPC port of F9. I hope you have 
looked at the Fedora forums.

Larry


From gavron at wetwork.net  Mon Jun 30 00:31:15 2008
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Sun, 29 Jun 2008 15:31:15 -0700
Subject: F9 PPC on Airport Extreme / PB G4 Ti
In-Reply-To: <4868072B.2070007@lwfinger.net>
References: <20080629205236.GA6420@nexus.edgeofthenet.org>
	<4868072B.2070007@lwfinger.net>
Message-ID: <48680D33.9010904@wetwork.net>



Larry Finger wrote:
> Richard Michael wrote:
>> Hello,
>> ...
>> Has anyone got this card working?
>>
> ...
> A BCM4306 rev 03 is used my Michael Buesch, the main developer of b43, 
...
>
> This sounds like a problem in the PPC port of F9. I hope you have 
> looked at the Fedora forums.
>
> Larry
>
It seemed the original message was missing info from dmesg as well as a 
result of the iwlist wlan0 scan or even iwconfig...

Ehud
PS my living-room guest-laptop uses a PCMCIA 4306 card.  Info below for 
comparison.

Kernel from wireless-testing: Linux vaioz505 2.6.26-rc6-eg20080623-wl #6 
SMP PREEMPT Tue Jun 24 14:43:05 MST 2008 i686 GNU/Linux

Device:
root at vaioz505:~# lspci -d 14e4:4320 -v
01:00.0 Network controller: Broadcom Corporation BCM4306 802.11b/g 
Wireless LAN Controller (rev 03)
    Subsystem: Linksys Device 4320
    Flags: bus master, fast devsel, latency 64, IRQ 9
    Memory at 14000000 (32-bit, non-prefetchable) [size=8K]
    Capabilities: [40] Power Management version 2
    Kernel driver in use: b43-pci-bridge
    Kernel modules: ssb

root at vaioz505:~# iwconfig
lo        no wireless extensions.

wmaster0  no wireless extensions.

wlan0     IEEE 802.11  ESSID:"wetwork" 
          Mode:Managed  Frequency:2.437 GHz  Access Point: 
00:16:01:B9:FE:8F  
          Bit Rate=24 Mb/s   Tx-Power=27 dBm  
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B  
          Encryption key:896A-0055-AE77-5E80-FD86-4E38-6B
          Link Quality=55/100  Signal level:-81 dBm  Noise level=-69 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

root at vaioz505:~# lsmod | grep b43
b43                   145952  0
ssb                    42372  1 b43
pcmcia                 37420  2 b43,ssb
firmware_class         11392  2 b43,pcmcia
mac80211              145296  1 b43
led_class               7940  1 b43
input_polldev           7816  1 b43
rfkill                 10260  3 b43,rfkill_input
pcmcia_core            39572  5 b43,ssb,pcmcia,yenta_socket,rsrc_nonstatic




From jarb1 at uk2.net  Mon Jun 30 11:29:45 2008
From: jarb1 at uk2.net (James A R Brown)
Date: Mon, 30 Jun 2008 10:29:45 +0100
Subject: F9 PPC on Airport Extreme / PB G4 Ti
In-Reply-To: <4868072B.2070007@lwfinger.net>
References: <20080629205236.GA6420@nexus.edgeofthenet.org>
	<4868072B.2070007@lwfinger.net>
Message-ID: <1214818185.13752.2.camel@localhost.localdomain>

Yes I have the same

I have filed this bug the other day.

https://bugzilla.redhat.com/show_bug.cgi?id=453298

This is on X86_64 FC9 and I have same issue on a "clean" install of FC9,
was working on DVD install and then following yum update does not work.

Can boot with older kernel and is ok, so I personally think its a kernel
issue on FC9

James


On Sun, 2008-06-29 at 17:05 -0500, Larry Finger wrote:
> Richard Michael wrote:
> > Hello,
> > 
> > I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
> > been trying to configure the Airport Extreme wireless card without
> > success.  The b43 loads, and the interface is available, but after
> > installing the firmware, the system freezes and requires a hard reboot.
> > 
> > At first, I thought I should use b43 and new firmware, since this is
> > kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
> > perhaps I should use b43legacy and old firmware, since this is a
> > "BCM4306 ... rev(03)" card.
> > 
> > Has anyone got this card working?
> > 
> > Below is the entire procedure I went through already, trying both
> > drivers and firmware; sorry for the long post. :)
> 
> A BCM4306 rev 03 is used my Michael Buesch, the main developer of b43, 
> and I think he uses it on PPC hardware. If not, he will let us know.
> 
> The correct driver to use is b43. If you had a rev 2 BCM4306, it would 
> use b43legacy. The choice of b43 versus b43legacy is made by ssb and 
> is dependent on the revision level of the 802.11 core located on the 
> Sonics Silicon Backplane. That rev level cannot be seen from the 
> outside. I repeat - b43 is the correct driver.
> 
> Your initial choice of firmware was correct. It should be extracted 
> from the 4.150.10.5 driver. One should _NEVER_ link /lib/firmware/b43 
> to /lib/firmware/b43legacy. After you did that, you tried to load V3 
> firmware, which does not work with b43, thus the "TOO OLD" message.
> 
> As to why your system locked up, I don't know. To help debug this, use 
> a 'sudo strace ifup' command to start bringing up the interface. This 
> produces a lot of output, but hopefully it will reveal something 
> useful on the screen when it freezes. To get the most output, maximize 
> the terminal in which you issue the command.
> 
> This sounds like a problem in the PPC port of F9. I hope you have 
> looked at the Fedora forums.
> 
> Larry
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From dale at daleenterprise.com  Mon Jun 30 15:01:59 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 30 Jun 2008 09:01:59 -0400
Subject: F9 PPC on Airport Extreme / PB G4 Ti
In-Reply-To: <20080629205236.GA6420@nexus.edgeofthenet.org>
References: <20080629205236.GA6420@nexus.edgeofthenet.org>
Message-ID: <45CA2499-65AE-4BD3-9343-DFA8CE6B1B71@daleenterprise.com>


On Jun 29, 2008, at 16:52 PM, Richard Michael wrote:

> Hello,
>
> I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
> been trying to configure the Airport Extreme wireless card without
> success.  The b43 loads, and the interface is available, but after
> installing the firmware, the system freezes and requires a hard  
> reboot.
>
> At first, I thought I should use b43 and new firmware, since this is
> kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
> perhaps I should use b43legacy and old firmware, since this is a
> "BCM4306 ... rev(03)" card.
>
> Has anyone got this card working?

I can confirm that I have this working in PPC and x86 without issues  
in Ubuntu Hardy-Heron.

>
> Below is the entire procedure I went through already, trying both
> drivers and firmware; sorry for the long post. :)
>
> Regards,
> Richard
>
> -----------------------------
>
> # uname -a
> Linux localhost.localdomain 2.6.25.6-55.fc9.ppc #1 Tue Jun 10  
> 15:58:33 EDT 2008 ppc ppc ppc GNU/Linux
>
> # lspci -v -v -v -s 0001:10:12.0
> 0001:10:12.0 Network controller: Broadcom Corporation BCM4306  
> 802.11b/g Wireless LAN Controller (rev 03)
>         Subsystem: Apple Computer Inc. AirPort Extreme
>         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop-  
> ParErr- Stepping- SERR- FastB2B- DisINTx-
>         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast  
> >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
>         Latency: 16
>         Interrupt: pin A routed to IRQ 52
>         Region 0: Memory at a0006000 (32-bit, non-prefetchable)  
> [size=8K]
>         Capabilities: [40] Power Management version 2
>                 Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0 
> +,D1+,D2+,D3hot+,D3cold+)
>                 Status: D0 PME-Enable- DSel=0 DScale=2 PME-
>         Kernel driver in use: b43-pci-bridge
>         Kernel modules: ssb
>
> # ./ssb-sprom -i ssb_sprom_copy -P
> SPROM(0x04, Subsystem product ID) = 0x004E
> SPROM(0x06, Subsystem vendor ID) = 0x106B
> SPROM(0x08, PCI Product ID) = 0x4320

This is not quite right but just be lspci/pcitools, it's a  
BCM4318MPKAG and not a BCM4306EFKB because it's a/b/g.

b43 is the correct driver to use.

>
> Reading the supported devices list on the b43 website, this is an
> Airport Extreme Mini-PCI Card, and should work.
>
> Fedora automagically wanted to use the b43 driver.  F9 ships:
>
> # modinfo b43
> filename:       /lib/modules/2.6.25.6-55.fc9.ppc/kernel/drivers/net/ 
> wireless/b43/b43.ko
> firmware:       FW13
> license:        GPL
> author:         Michael Buesch
> author:         Stefano Brivio
> author:         Martin Langer
> description:    Broadcom B43 wireless driver
> srcversion:     9A886AA7ED4F1A447449875
> alias:          pcmcia:m02D0c0448f*fn*pfn*pa*pb*pc*pd*
> alias:          ssb:v4243id0812rev0D*
> alias:          ssb:v4243id0812rev0B*
> alias:          ssb:v4243id0812rev0A*
> alias:          ssb:v4243id0812rev09*
> alias:          ssb:v4243id0812rev07*
> alias:          ssb:v4243id0812rev06*
> alias:          ssb:v4243id0812rev05*
> depends:        mac80211,ssb,input-polldev,rfkill
> vermagic:       2.6.25.6-55.fc9.ppc mod_unload
> parm:           bad_frames_preempt:enable(1) / disable(0) Bad  
> Frames Preemption (int)
> parm:           fwpostfix:Postfix for the .fw files to load. (string)
> parm:           hwpctl:Enable hardware-side power control (default  
> off) (int)
> parm:           nohwcrypt:Disable hardware encryption. (int)
> parm:           qos:Enable QOS support (default on) (int)
> parm:           btcoex:Enable Bluetooth coexistance (default on) (int)
>
>
> I followed the instructions on the b43 website to use b43-fwcutter to
> extract the firmware.  b43-fwcutter version 011 ships with Fedora:
>
> # b43-fwcutter --version
> b43-fwcutter version 011
>
> Initially, I used the b43-new instructions because I (Fedora) was  
> using
> the b43 driver from 2.6.25.  I verified the MD5SUM of the firmware  
> file
> matched an acceptable one from "b43-fwcutter --list":
>
> b43             wl_apsta_mimo.o         410.2160        FW13  
> cb8d70972b885b1f8883b943c0261a3c
>
> After installing the firmware into /lib/firmware/b43, I "modprobe
> -r"/"modprobe" cycled the b43 driver.  During "ifup wlan0" (I believe
> it's when dhclient starts), the system simply freezes; a total lockup,
> holding down the power button to force a shutdown was necessary.  I
> rebooted to try again, but the same problem occurred.
>
> Based on "lspci -v -v" telling me I had a "BCM4306 ... (rev 03)"
> Broadcom card, and this from the website:
>
>> b43legacy should be used on all 4301 and 4303 cards. 4306 and 4309
>> cards with a MAC core revision of 4 or less should also use  
>> b43legacy.
>> b43 should be used on all other cards. You can safely have both
>> versions built on the same system. The full MAC core version is
>> printed in the kernel logs when "SSB debugging" is enabled in KConfig
>> and the driver finds a board.
>
> I decided perhaps I was supposed to use the b43legacy driver and
> therefore also a different firmware.
>
> I then followed the firmware extraction and installation for the older
> firmware.  I again verified the firmware matched "b43-fwcutter -- 
> list",
> and b43-fwcutter installed the firmware into /lib/firmware/b43legacy.
>
> b43legacy       wl_apsta.o              295.14          FW10  
> e08665c5c5b66beb9c3b2dd54aa80cb3
>
> # b43-fwcutter -i wl_apsta-3.130.20.0.o
> This file is recognised as:
>   ID         :  FW10
>   filename   :  wl_apsta.o
>   version    :  295.14
>   MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
>
>
> I insured there were no b43 modules inserted ("lsmod | grep 43"), then
> modprobed b43legacy.  Strangely, Fedora also loaded the b43 driver.
> dmesg showed me the driver couldn't find the ucode5.fw file, it wasn't
> looking in /lib/firmware/b43legacy, it was looking in /lib/firmware/ 
> b43.
> So, I linked /lib/firmware/b43 -> /lib/firmware/b43legacy.  Then it  
> told
> me the firmware was too old.
>
> Figuring b43 was still involved somehow, but it shouldn't be, I
> blacklisted b43.  Now, after "modprobe b43legacy" there is no wlan0
> interface, so I cannot "ifup wlan0".  In syslog I find:
>
> Jun 29 16:46:57 localhost kernel: ssb: Sonics Silicon Backplane  
> found on PCI device 0001:10:12.0
> Jun 29 16:46:57 localhost kernel: Broadcom 43xx-legacy driver  
> loaded [ Features: PLRID, Firmware-ID: FW10 ]
>
>
> While "modprobe b43" now yields:
> (with /lib/firmware/b43 -> /lib/firmware/b43legacy)
>
> Jun 29 16:44:21 localhost kernel: ssb: Sonics Silicon Backplane  
> found on PCI device 0001:10:12.0
> Jun 29 16:44:21 localhost kernel: b43-phy0: Broadcom 4306 WLAN found
> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found PHY: Analog  
> 2, Type 2, Revision 2
> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found Radio:  
> Manuf 0x17F, Version 0x2050, Revision 2
> Jun 29 16:44:21 localhost kernel: phy0: Selected rate control  
> algorithm 'pid'
> Jun 29 16:44:21 localhost kernel: Broadcom 43xx driver loaded  
> [ Features: PMLR, Firmware-ID: FW13 ]
>
> but, "ifup wlan0" yields:
>
> Jun 29 16:44:57 localhost kernel: b43-phy0 ERROR: YOUR FIRMWARE IS  
> TOO OLD.

This explains why it's not working for you.

> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080630/92b241e4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080630/92b241e4/attachment.pgp>

From dale at daleenterprise.com  Mon Jun 30 15:07:36 2008
From: dale at daleenterprise.com (Dale Walsh)
Date: Mon, 30 Jun 2008 09:07:36 -0400
Subject: F9 PPC on Airport Extreme / PB G4 Ti
In-Reply-To: <45CA2499-65AE-4BD3-9343-DFA8CE6B1B71@daleenterprise.com>
References: <20080629205236.GA6420@nexus.edgeofthenet.org>
	<45CA2499-65AE-4BD3-9343-DFA8CE6B1B71@daleenterprise.com>
Message-ID: <9D4DD135-6656-45C8-857A-DBE0921F3C2C@daleenterprise.com>


On Jun 30, 2008, at 09:01 AM, Dale Walsh wrote:

>
> On Jun 29, 2008, at 16:52 PM, Richard Michael wrote:
>
>> Hello,
>>
>> I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
>> been trying to configure the Airport Extreme wireless card without
>> success.  The b43 loads, and the interface is available, but after
>> installing the firmware, the system freezes and requires a hard  
>> reboot.
>>
>> At first, I thought I should use b43 and new firmware, since this is
>> kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
>> perhaps I should use b43legacy and old firmware, since this is a
>> "BCM4306 ... rev(03)" card.
>>
>> Has anyone got this card working?
>
> I can confirm that I have this working in PPC and x86 without  
> issues in Ubuntu Hardy-Heron.

Clarification, that's FC9 for PPC and Ubuntu for x86.

>
>>
>> Below is the entire procedure I went through already, trying both
>> drivers and firmware; sorry for the long post. :)
>>
>> Regards,
>> Richard
>>
>> -----------------------------
>>
>> # uname -a
>> Linux localhost.localdomain 2.6.25.6-55.fc9.ppc #1 Tue Jun 10  
>> 15:58:33 EDT 2008 ppc ppc ppc GNU/Linux
>>
>> # lspci -v -v -v -s 0001:10:12.0
>> 0001:10:12.0 Network controller: Broadcom Corporation BCM4306  
>> 802.11b/g Wireless LAN Controller (rev 03)
>>         Subsystem: Apple Computer Inc. AirPort Extreme
>>         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV-  
>> VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
>>         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast  
>> >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
>>         Latency: 16
>>         Interrupt: pin A routed to IRQ 52
>>         Region 0: Memory at a0006000 (32-bit, non-prefetchable)  
>> [size=8K]
>>         Capabilities: [40] Power Management version 2
>>                 Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0 
>> +,D1+,D2+,D3hot+,D3cold+)
>>                 Status: D0 PME-Enable- DSel=0 DScale=2 PME-
>>         Kernel driver in use: b43-pci-bridge
>>         Kernel modules: ssb
>>
>> # ./ssb-sprom -i ssb_sprom_copy -P
>> SPROM(0x04, Subsystem product ID) = 0x004E
>> SPROM(0x06, Subsystem vendor ID) = 0x106B
>> SPROM(0x08, PCI Product ID) = 0x4320
>
> This is not quite right but just be lspci/pcitools, it's a  
> BCM4318MPKAG and not a BCM4306EFKB because it's a/b/g.
>
> b43 is the correct driver to use.
>
>>
>> Reading the supported devices list on the b43 website, this is an
>> Airport Extreme Mini-PCI Card, and should work.
>>
>> Fedora automagically wanted to use the b43 driver.  F9 ships:
>>
>> # modinfo b43
>> filename:       /lib/modules/2.6.25.6-55.fc9.ppc/kernel/drivers/ 
>> net/wireless/b43/b43.ko
>> firmware:       FW13
>> license:        GPL
>> author:         Michael Buesch
>> author:         Stefano Brivio
>> author:         Martin Langer
>> description:    Broadcom B43 wireless driver
>> srcversion:     9A886AA7ED4F1A447449875
>> alias:          pcmcia:m02D0c0448f*fn*pfn*pa*pb*pc*pd*
>> alias:          ssb:v4243id0812rev0D*
>> alias:          ssb:v4243id0812rev0B*
>> alias:          ssb:v4243id0812rev0A*
>> alias:          ssb:v4243id0812rev09*
>> alias:          ssb:v4243id0812rev07*
>> alias:          ssb:v4243id0812rev06*
>> alias:          ssb:v4243id0812rev05*
>> depends:        mac80211,ssb,input-polldev,rfkill
>> vermagic:       2.6.25.6-55.fc9.ppc mod_unload
>> parm:           bad_frames_preempt:enable(1) / disable(0) Bad  
>> Frames Preemption (int)
>> parm:           fwpostfix:Postfix for the .fw files to load. (string)
>> parm:           hwpctl:Enable hardware-side power control (default  
>> off) (int)
>> parm:           nohwcrypt:Disable hardware encryption. (int)
>> parm:           qos:Enable QOS support (default on) (int)
>> parm:           btcoex:Enable Bluetooth coexistance (default on)  
>> (int)
>>
>>
>> I followed the instructions on the b43 website to use b43-fwcutter to
>> extract the firmware.  b43-fwcutter version 011 ships with Fedora:
>>
>> # b43-fwcutter --version
>> b43-fwcutter version 011
>>
>> Initially, I used the b43-new instructions because I (Fedora) was  
>> using
>> the b43 driver from 2.6.25.  I verified the MD5SUM of the firmware  
>> file
>> matched an acceptable one from "b43-fwcutter --list":
>>
>> b43             wl_apsta_mimo.o         410.2160        FW13  
>> cb8d70972b885b1f8883b943c0261a3c
>>
>> After installing the firmware into /lib/firmware/b43, I "modprobe
>> -r"/"modprobe" cycled the b43 driver.  During "ifup wlan0" (I believe
>> it's when dhclient starts), the system simply freezes; a total  
>> lockup,
>> holding down the power button to force a shutdown was necessary.  I
>> rebooted to try again, but the same problem occurred.
>>
>> Based on "lspci -v -v" telling me I had a "BCM4306 ... (rev 03)"
>> Broadcom card, and this from the website:
>>
>>> b43legacy should be used on all 4301 and 4303 cards. 4306 and 4309
>>> cards with a MAC core revision of 4 or less should also use  
>>> b43legacy.
>>> b43 should be used on all other cards. You can safely have both
>>> versions built on the same system. The full MAC core version is
>>> printed in the kernel logs when "SSB debugging" is enabled in  
>>> KConfig
>>> and the driver finds a board.
>>
>> I decided perhaps I was supposed to use the b43legacy driver and
>> therefore also a different firmware.
>>
>> I then followed the firmware extraction and installation for the  
>> older
>> firmware.  I again verified the firmware matched "b43-fwcutter -- 
>> list",
>> and b43-fwcutter installed the firmware into /lib/firmware/b43legacy.
>>
>> b43legacy       wl_apsta.o              295.14          FW10  
>> e08665c5c5b66beb9c3b2dd54aa80cb3
>>
>> # b43-fwcutter -i wl_apsta-3.130.20.0.o
>> This file is recognised as:
>>   ID         :  FW10
>>   filename   :  wl_apsta.o
>>   version    :  295.14
>>   MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
>>
>>
>> I insured there were no b43 modules inserted ("lsmod | grep 43"),  
>> then
>> modprobed b43legacy.  Strangely, Fedora also loaded the b43 driver.
>> dmesg showed me the driver couldn't find the ucode5.fw file, it  
>> wasn't
>> looking in /lib/firmware/b43legacy, it was looking in /lib/ 
>> firmware/b43.
>> So, I linked /lib/firmware/b43 -> /lib/firmware/b43legacy.  Then  
>> it told
>> me the firmware was too old.
>>
>> Figuring b43 was still involved somehow, but it shouldn't be, I
>> blacklisted b43.  Now, after "modprobe b43legacy" there is no wlan0
>> interface, so I cannot "ifup wlan0".  In syslog I find:
>>
>> Jun 29 16:46:57 localhost kernel: ssb: Sonics Silicon Backplane  
>> found on PCI device 0001:10:12.0
>> Jun 29 16:46:57 localhost kernel: Broadcom 43xx-legacy driver  
>> loaded [ Features: PLRID, Firmware-ID: FW10 ]
>>
>>
>> While "modprobe b43" now yields:
>> (with /lib/firmware/b43 -> /lib/firmware/b43legacy)
>>
>> Jun 29 16:44:21 localhost kernel: ssb: Sonics Silicon Backplane  
>> found on PCI device 0001:10:12.0
>> Jun 29 16:44:21 localhost kernel: b43-phy0: Broadcom 4306 WLAN found
>> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found PHY:  
>> Analog 2, Type 2, Revision 2
>> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found Radio:  
>> Manuf 0x17F, Version 0x2050, Revision 2
>> Jun 29 16:44:21 localhost kernel: phy0: Selected rate control  
>> algorithm 'pid'
>> Jun 29 16:44:21 localhost kernel: Broadcom 43xx driver loaded  
>> [ Features: PMLR, Firmware-ID: FW13 ]
>>
>> but, "ifup wlan0" yields:
>>
>> Jun 29 16:44:57 localhost kernel: b43-phy0 ERROR: YOUR FIRMWARE IS  
>> TOO OLD.
>
> This explains why it's not working for you.
>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>
>
> -- Dale
>
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev

-- Dale



-- Dale



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080630/dfadbc08/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 188 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080630/dfadbc08/attachment.pgp>

From agejanstap at gmail.com  Mon Jun 30 16:32:23 2008
From: agejanstap at gmail.com (Age Jan Stap)
Date: Mon, 30 Jun 2008 10:32:23 -0400
Subject: Bcm43xx-dev Digest, Vol 24, Issue 46
In-Reply-To: <mailman.49.1214820068.13542.bcm43xx-dev@lists.berlios.de>
References: <mailman.49.1214820068.13542.bcm43xx-dev@lists.berlios.de>
Message-ID: <1214836343.5883.5.camel@ThinkPad.tr.cgocable.ca>

?I used to have lots of problems with this chip on a linksys PCIcma card
in my little ThinkPad X22 (almost 10 years old!). However on the web I
found the magic solution and I got it working on Suse-11, Mint, Ubuntu
8.04

John


On Mon, 2008-06-30 at 12:01 +0200, bcm43xx-dev-request at lists.berlios.de
wrote:

> Send Bcm43xx-dev mailing list submissions to
> 	bcm43xx-dev at lists.berlios.de
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> or, via email, send a message with subject or body 'help' to
> 	bcm43xx-dev-request at lists.berlios.de
> 
> You can reach the person managing the list at
> 	bcm43xx-dev-owner at lists.berlios.de
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Bcm43xx-dev digest..."
> 
> 
> Today's Topics:
> 
>    1. F9 PPC on Airport Extreme / PB G4 Ti (Richard Michael)
>    2. Re: F9 PPC on Airport Extreme / PB G4 Ti (Larry Finger)
>    3. Re: F9 PPC on Airport Extreme / PB G4 Ti (gavron at wetwork.net)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Sun, 29 Jun 2008 16:52:36 -0400
> From: Richard Michael <rmichael-bcm at edgeofthenet.org>
> Subject: F9 PPC on Airport Extreme / PB G4 Ti
> To: bcm43xx-dev at lists.berlios.de
> Message-ID: <20080629205236.GA6420 at nexus.edgeofthenet.org>
> Content-Type: text/plain; charset=us-ascii
> 
> Hello,
> 
> I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
> been trying to configure the Airport Extreme wireless card without
> success.  The b43 loads, and the interface is available, but after
> installing the firmware, the system freezes and requires a hard reboot.
> 
> At first, I thought I should use b43 and new firmware, since this is
> kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
> perhaps I should use b43legacy and old firmware, since this is a
> "BCM4306 ... rev(03)" card.
> 
> Has anyone got this card working?
> 
> Below is the entire procedure I went through already, trying both
> drivers and firmware; sorry for the long post. :)
> 
> Regards,
> Richard
> 
> -----------------------------
> 
> # uname -a
> Linux localhost.localdomain 2.6.25.6-55.fc9.ppc #1 Tue Jun 10 15:58:33 EDT 2008 ppc ppc ppc GNU/Linux
> 
> # lspci -v -v -v -s 0001:10:12.0
> 0001:10:12.0 Network controller: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller (rev 03)
>         Subsystem: Apple Computer Inc. AirPort Extreme
>         Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
>         Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
>         Latency: 16
>         Interrupt: pin A routed to IRQ 52
>         Region 0: Memory at a0006000 (32-bit, non-prefetchable) [size=8K]
>         Capabilities: [40] Power Management version 2
>                 Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
>                 Status: D0 PME-Enable- DSel=0 DScale=2 PME-
>         Kernel driver in use: b43-pci-bridge
>         Kernel modules: ssb
> 
> # ./ssb-sprom -i ssb_sprom_copy -P
> SPROM(0x04, Subsystem product ID) = 0x004E
> SPROM(0x06, Subsystem vendor ID) = 0x106B
> SPROM(0x08, PCI Product ID) = 0x4320
> 
> Reading the supported devices list on the b43 website, this is an
> Airport Extreme Mini-PCI Card, and should work.
> 
> Fedora automagically wanted to use the b43 driver.  F9 ships:
> 
> # modinfo b43
> filename:       /lib/modules/2.6.25.6-55.fc9.ppc/kernel/drivers/net/wireless/b43/b43.ko
> firmware:       FW13
> license:        GPL
> author:         Michael Buesch
> author:         Stefano Brivio
> author:         Martin Langer
> description:    Broadcom B43 wireless driver
> srcversion:     9A886AA7ED4F1A447449875
> alias:          pcmcia:m02D0c0448f*fn*pfn*pa*pb*pc*pd*
> alias:          ssb:v4243id0812rev0D*
> alias:          ssb:v4243id0812rev0B*
> alias:          ssb:v4243id0812rev0A*
> alias:          ssb:v4243id0812rev09*
> alias:          ssb:v4243id0812rev07*
> alias:          ssb:v4243id0812rev06*
> alias:          ssb:v4243id0812rev05*
> depends:        mac80211,ssb,input-polldev,rfkill
> vermagic:       2.6.25.6-55.fc9.ppc mod_unload 
> parm:           bad_frames_preempt:enable(1) / disable(0) Bad Frames Preemption (int)
> parm:           fwpostfix:Postfix for the .fw files to load. (string)
> parm:           hwpctl:Enable hardware-side power control (default off) (int)
> parm:           nohwcrypt:Disable hardware encryption. (int)
> parm:           qos:Enable QOS support (default on) (int)
> parm:           btcoex:Enable Bluetooth coexistance (default on) (int)
> 
> 
> I followed the instructions on the b43 website to use b43-fwcutter to
> extract the firmware.  b43-fwcutter version 011 ships with Fedora:
> 
> # b43-fwcutter --version
> b43-fwcutter version 011
> 
> Initially, I used the b43-new instructions because I (Fedora) was using
> the b43 driver from 2.6.25.  I verified the MD5SUM of the firmware file
> matched an acceptable one from "b43-fwcutter --list":
> 
> b43             wl_apsta_mimo.o         410.2160        FW13 cb8d70972b885b1f8883b943c0261a3c
> 
> After installing the firmware into /lib/firmware/b43, I "modprobe
> -r"/"modprobe" cycled the b43 driver.  During "ifup wlan0" (I believe
> it's when dhclient starts), the system simply freezes; a total lockup,
> holding down the power button to force a shutdown was necessary.  I
> rebooted to try again, but the same problem occurred.
> 
> Based on "lspci -v -v" telling me I had a "BCM4306 ... (rev 03)"
> Broadcom card, and this from the website:
> 
> > b43legacy should be used on all 4301 and 4303 cards. 4306 and 4309
> > cards with a MAC core revision of 4 or less should also use b43legacy.
> > b43 should be used on all other cards. You can safely have both
> > versions built on the same system. The full MAC core version is
> > printed in the kernel logs when "SSB debugging" is enabled in KConfig
> > and the driver finds a board.
> 
> I decided perhaps I was supposed to use the b43legacy driver and
> therefore also a different firmware.
> 
> I then followed the firmware extraction and installation for the older
> firmware.  I again verified the firmware matched "b43-fwcutter --list",
> and b43-fwcutter installed the firmware into /lib/firmware/b43legacy.  
> 
> b43legacy       wl_apsta.o              295.14          FW10 e08665c5c5b66beb9c3b2dd54aa80cb3
> 
> # b43-fwcutter -i wl_apsta-3.130.20.0.o 
> This file is recognised as:
>   ID         :  FW10
>   filename   :  wl_apsta.o
>   version    :  295.14
>   MD5        :  e08665c5c5b66beb9c3b2dd54aa80cb3
> 
> 
> I insured there were no b43 modules inserted ("lsmod | grep 43"), then
> modprobed b43legacy.  Strangely, Fedora also loaded the b43 driver.
> dmesg showed me the driver couldn't find the ucode5.fw file, it wasn't
> looking in /lib/firmware/b43legacy, it was looking in /lib/firmware/b43.
> So, I linked /lib/firmware/b43 -> /lib/firmware/b43legacy.  Then it told
> me the firmware was too old.
> 
> Figuring b43 was still involved somehow, but it shouldn't be, I
> blacklisted b43.  Now, after "modprobe b43legacy" there is no wlan0
> interface, so I cannot "ifup wlan0".  In syslog I find:
> 
> Jun 29 16:46:57 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
> Jun 29 16:46:57 localhost kernel: Broadcom 43xx-legacy driver loaded [ Features: PLRID, Firmware-ID: FW10 ]
> 
> 
> While "modprobe b43" now yields:
> (with /lib/firmware/b43 -> /lib/firmware/b43legacy)
> 
> Jun 29 16:44:21 localhost kernel: ssb: Sonics Silicon Backplane found on PCI device 0001:10:12.0
> Jun 29 16:44:21 localhost kernel: b43-phy0: Broadcom 4306 WLAN found
> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found PHY: Analog 2, Type 2, Revision 2
> Jun 29 16:44:21 localhost kernel: b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
> Jun 29 16:44:21 localhost kernel: phy0: Selected rate control algorithm 'pid'
> Jun 29 16:44:21 localhost kernel: Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
> 
> but, "ifup wlan0" yields:
> 
> Jun 29 16:44:57 localhost kernel: b43-phy0 ERROR: YOUR FIRMWARE IS TOO OLD.
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Sun, 29 Jun 2008 17:05:31 -0500
> From: Larry Finger <Larry.Finger at lwfinger.net>
> Subject: Re: F9 PPC on Airport Extreme / PB G4 Ti
> To: Richard Michael <rmichael-bcm at edgeofthenet.org>
> Cc: bcm43xx-dev at lists.berlios.de
> Message-ID: <4868072B.2070007 at lwfinger.net>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Richard Michael wrote:
> > Hello,
> > 
> > I recently installed Fedora 9 PPC on a Powerbook G4 Titanium.  I have
> > been trying to configure the Airport Extreme wireless card without
> > success.  The b43 loads, and the interface is available, but after
> > installing the firmware, the system freezes and requires a hard reboot.
> > 
> > At first, I thought I should use b43 and new firmware, since this is
> > kernel 2.6.25 (and Fedora wanted to use that driver!).  Although,
> > perhaps I should use b43legacy and old firmware, since this is a
> > "BCM4306 ... rev(03)" card.
> > 
> > Has anyone got this card working?
> > 
> > Below is the entire procedure I went through already, trying both
> > drivers and firmware; sorry for the long post. :)
> 
> A BCM4306 rev 03 is used my Michael Buesch, the main developer of b43, 
> and I think he uses it on PPC hardware. If not, he will let us know.
> 
> The correct driver to use is b43. If you had a rev 2 BCM4306, it would 
> use b43legacy. The choice of b43 versus b43legacy is made by ssb and 
> is dependent on the revision level of the 802.11 core located on the 
> Sonics Silicon Backplane. That rev level cannot be seen from the 
> outside. I repeat - b43 is the correct driver.
> 
> Your initial choice of firmware was correct. It should be extracted 
> from the 4.150.10.5 driver. One should _NEVER_ link /lib/firmware/b43 
> to /lib/firmware/b43legacy. After you did that, you tried to load V3 
> firmware, which does not work with b43, thus the "TOO OLD" message.
> 
> As to why your system locked up, I don't know. To help debug this, use 
> a 'sudo strace ifup' command to start bringing up the interface. This 
> produces a lot of output, but hopefully it will reveal something 
> useful on the screen when it freezes. To get the most output, maximize 
> the terminal in which you issue the command.
> 
> This sounds like a problem in the PPC port of F9. I hope you have 
> looked at the Fedora forums.
> 
> Larry
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Sun, 29 Jun 2008 15:31:15 -0700
> From: gavron at wetwork.net
> Subject: Re: F9 PPC on Airport Extreme / PB G4 Ti
> To: Larry Finger <Larry.Finger at lwfinger.net>
> Cc: bcm43xx-dev at lists.berlios.de
> Message-ID: <48680D33.9010904 at wetwork.net>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> 
> 
> Larry Finger wrote:
> > Richard Michael wrote:
> >> Hello,
> >> ...
> >> Has anyone got this card working?
> >>
> > ...
> > A BCM4306 rev 03 is used my Michael Buesch, the main developer of b43, 
> ...
> >
> > This sounds like a problem in the PPC port of F9. I hope you have 
> > looked at the Fedora forums.
> >
> > Larry
> >
> It seemed the original message was missing info from dmesg as well as a 
> result of the iwlist wlan0 scan or even iwconfig...
> 
> Ehud
> PS my living-room guest-laptop uses a PCMCIA 4306 card.  Info below for 
> comparison.
> 
> Kernel from wireless-testing: Linux vaioz505 2.6.26-rc6-eg20080623-wl #6 
> SMP PREEMPT Tue Jun 24 14:43:05 MST 2008 i686 GNU/Linux
> 
> Device:
> root at vaioz505:~# lspci -d 14e4:4320 -v
> 01:00.0 Network controller: Broadcom Corporation BCM4306 802.11b/g 
> Wireless LAN Controller (rev 03)
>     Subsystem: Linksys Device 4320
>     Flags: bus master, fast devsel, latency 64, IRQ 9
>     Memory at 14000000 (32-bit, non-prefetchable) [size=8K]
>     Capabilities: [40] Power Management version 2
>     Kernel driver in use: b43-pci-bridge
>     Kernel modules: ssb
> 
> root at vaioz505:~# iwconfig
> lo        no wireless extensions.
> 
> wmaster0  no wireless extensions.
> 
> wlan0     IEEE 802.11  ESSID:"wetwork" 
>           Mode:Managed  Frequency:2.437 GHz  Access Point: 
> 00:16:01:B9:FE:8F  
>           Bit Rate=24 Mb/s   Tx-Power=27 dBm  
>           Retry min limit:7   RTS thr:off   Fragment thr=2352 B  
>           Encryption key:896A-0055-AE77-5E80-FD86-4E38-6B
>           Link Quality=55/100  Signal level:-81 dBm  Noise level=-69 dBm
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> 
> root at vaioz505:~# lsmod | grep b43
> b43                   145952  0
> ssb                    42372  1 b43
> pcmcia                 37420  2 b43,ssb
> firmware_class         11392  2 b43,pcmcia
> mac80211              145296  1 b43
> led_class               7940  1 b43
> input_polldev           7816  1 b43
> rfkill                 10260  3 b43,rfkill_input
> pcmcia_core            39572  5 b43,ssb,pcmcia,yenta_socket,rsrc_nonstatic
> 
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 
> 
> End of Bcm43xx-dev Digest, Vol 24, Issue 46
> *******************************************

John Stap
1565 Calixa-Lavallee
Trois-Rivieres, Qc.
G8Y3G1 Canada


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20080630/c65be756/attachment.html>

