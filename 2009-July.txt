From ccmcphe at verizon.net  Wed Jul  1 00:37:12 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Tue, 30 Jun 2009 18:37:12 -0400
Subject: [Patch] b43:Added Support for 4318E chipset
Message-ID: <4A4A9398.9000005@verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

diff --git a/drivers/net/wireless/b43/pcmcia.c 
b/drivers/net/wireless/b43/pcmcia.c
index 3cfc303..6c3a749 100644
--- a/drivers/net/wireless/b43/pcmcia.c
+++ b/drivers/net/wireless/b43/pcmcia.c
@@ -35,6 +35,7 @@
 
 static /*const */ struct pcmcia_device_id b43_pcmcia_tbl[] = {
        PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x448),
+       PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x476),
        PCMCIA_DEVICE_NULL,
 };


Cheers
Clyde "Tex" McPherson




From ccmcphe at verizon.net  Wed Jul  1 00:40:32 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Tue, 30 Jun 2009 18:40:32 -0400
Subject: [Patch] ssb: Added Support for the 4318E Chipset
Message-ID: <4A4A9460.10304@verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

diff --git a/drivers/ssb/pcmcia.c b/drivers/ssb/pcmcia.c
index fbfadba..d288608 100644
--- a/drivers/ssb/pcmcia.c
+++ b/drivers/ssb/pcmcia.c
@@ -678,7 +678,8 @@ int ssb_pcmcia_get_invariants(struct ssb_bus *bus,
                        sprom->board_rev = tuple.TupleData[1];
                        break;
                case SSB_PCMCIA_CIS_PA:
-                       GOTO_ERROR_ON(tuple.TupleDataLen != 9,
+                       GOTO_ERROR_ON((tuple.TupleDataLen != 9) &&
+                                     (tuple.TupleDataLen != 10),
                                      "pa tpl size");
                        sprom->pa0b0 = tuple.TupleData[1] |
                                 ((u16)tuple.TupleData[2] << 8);
@@ -718,7 +719,8 @@ int ssb_pcmcia_get_invariants(struct ssb_bus *bus,
                        sprom->antenna_gain.ghz5.a3 = tuple.TupleData[1];
                        break;
                case SSB_PCMCIA_CIS_BFLAGS:
-                       GOTO_ERROR_ON(tuple.TupleDataLen != 3,
+                       GOTO_ERROR_ON((tuple.TupleDataLen != 3) &&
+                                     (tuple.TupleDataLen != 5),
                                      "bfl tpl size");
                        sprom->boardflags_lo = tuple.TupleData[1] |
                                         ((u16)tuple.TupleData[2] << 8);


Cheers
Clyde "Tex" McPherson



From Larry.Finger at lwfinger.net  Wed Jul  1 05:36:42 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 30 Jun 2009 22:36:42 -0500
Subject: No subject
Message-ID: <4a4ad9ca.vjHlJqRZ71Q1f7CP%Larry.Finger@lwfinger.net>

From: Clyde McPherson <ccmcphe at verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

diff --git a/drivers/net/wireless/b43/pcmcia.c 
b/drivers/net/wireless/b43/pcmcia.c
index 3cfc303..6c3a749 100644
--- a/drivers/net/wireless/b43/pcmcia.c
+++ b/drivers/net/wireless/b43/pcmcia.c
@@ -35,6 +35,7 @@
 
 static /*const */ struct pcmcia_device_id b43_pcmcia_tbl[] = {
 	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x448),
+	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x476),
 	PCMCIA_DEVICE_NULL,
 };



From Larry.Finger at lwfinger.net  Wed Jul  1 05:37:08 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 30 Jun 2009 22:37:08 -0500
Subject: No subject
Message-ID: <4a4ad9e4.vPnta8trzUXc4YPz%Larry.Finger@lwfinger.net>

From: Clyde McPherson <ccmcphe at verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-testing/drivers/ssb/pcmcia.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pcmcia.c
+++ wireless-testing/drivers/ssb/pcmcia.c
@@ -678,7 +678,8 @@ int ssb_pcmcia_get_invariants(struct ssb
 			sprom->board_rev = tuple.TupleData[1];
 			break;
 		case SSB_PCMCIA_CIS_PA:
-			GOTO_ERROR_ON(tuple.TupleDataLen != 9,
+			GOTO_ERROR_ON((tuple.TupleDataLen != 9) &&
+				      (tuple.TupleDataLen != 10),
 				      "pa tpl size");
 			sprom->pa0b0 = tuple.TupleData[1] |
 				 ((u16)tuple.TupleData[2] << 8);
@@ -718,7 +719,8 @@ int ssb_pcmcia_get_invariants(struct ssb
 			sprom->antenna_gain.ghz5.a3 = tuple.TupleData[1];
 			break;
 		case SSB_PCMCIA_CIS_BFLAGS:
-			GOTO_ERROR_ON(tuple.TupleDataLen != 3,
+			GOTO_ERROR_ON((tuple.TupleDataLen != 3) &&
+				      (tuple.TupleDataLen != 5),
 				      "bfl tpl size");
 			sprom->boardflags_lo = tuple.TupleData[1] |
 					 ((u16)tuple.TupleData[2] << 8);


From Larry.Finger at lwfinger.net  Wed Jul  1 05:38:40 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 30 Jun 2009 22:38:40 -0500
Subject: [Patch] ssb: Added Support for the 4318E Chipset
In-Reply-To: <4A4A9460.10304@verizon.net>
References: <4A4A9460.10304@verizon.net>
Message-ID: <4A4ADA40.6020407@lwfinger.net>

Clyde McPherson wrote:
> Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
> 4318E can do 802.11A/B/G, only B and G mode are supported in b43.
> 
> diff --git a/drivers/ssb/pcmcia.c b/drivers/ssb/pcmcia.c
> index fbfadba..d288608 100644
> --- a/drivers/ssb/pcmcia.c
> +++ b/drivers/ssb/pcmcia.c
> @@ -678,7 +678,8 @@ int ssb_pcmcia_get_invariants(struct ssb_bus *bus,
>                         sprom->board_rev = tuple.TupleData[1];
>                         break;
>                 case SSB_PCMCIA_CIS_PA:
> -                       GOTO_ERROR_ON(tuple.TupleDataLen != 9,
> +                       GOTO_ERROR_ON((tuple.TupleDataLen != 9) &&
> +                                     (tuple.TupleDataLen != 10),
>                                       "pa tpl size");
>                         sprom->pa0b0 = tuple.TupleData[1] |
>                                  ((u16)tuple.TupleData[2] << 8);
> @@ -718,7 +719,8 @@ int ssb_pcmcia_get_invariants(struct ssb_bus *bus,
>                         sprom->antenna_gain.ghz5.a3 = tuple.TupleData[1];
>                         break;
>                 case SSB_PCMCIA_CIS_BFLAGS:
> -                       GOTO_ERROR_ON(tuple.TupleDataLen != 3,
> +                       GOTO_ERROR_ON((tuple.TupleDataLen != 3) &&
> +                                     (tuple.TupleDataLen != 5),
>                                       "bfl tpl size");
>                         sprom->boardflags_lo = tuple.TupleData[1] |
>                                          ((u16)tuple.TupleData[2] << 8);

These two patches do not have the correct form, and they have mangled
white space. That is why I reformatted and resubmitted them.

Larry


From Larry.Finger at lwfinger.net  Wed Jul  1 05:39:28 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 30 Jun 2009 22:39:28 -0500
Subject: [PATCH V2] b43: Add support for 4318E
Message-ID: <4a4ada70.t85pybsO8xH4owyV%Larry.Finger@lwfinger.net>

From: Clyde McPherson <ccmcphe at verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

diff --git a/drivers/net/wireless/b43/pcmcia.c 
b/drivers/net/wireless/b43/pcmcia.c
index 3cfc303..6c3a749 100644
--- a/drivers/net/wireless/b43/pcmcia.c
+++ b/drivers/net/wireless/b43/pcmcia.c
@@ -35,6 +35,7 @@
 
 static /*const */ struct pcmcia_device_id b43_pcmcia_tbl[] = {
 	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x448),
+	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x476),
 	PCMCIA_DEVICE_NULL,
 };



From Larry.Finger at lwfinger.net  Wed Jul  1 05:39:43 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 30 Jun 2009 22:39:43 -0500
Subject: [PATCH V2] ssb: Add support for 4318E
Message-ID: <4a4ada7f.oItwGXurq7WMW+HE%Larry.Finger@lwfinger.net>

From: Clyde McPherson <ccmcphe at verizon.net>

Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
4318E can do 802.11A/B/G, only B and G mode are supported in b43.

Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: wireless-testing/drivers/ssb/pcmcia.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pcmcia.c
+++ wireless-testing/drivers/ssb/pcmcia.c
@@ -678,7 +678,8 @@ int ssb_pcmcia_get_invariants(struct ssb
 			sprom->board_rev = tuple.TupleData[1];
 			break;
 		case SSB_PCMCIA_CIS_PA:
-			GOTO_ERROR_ON(tuple.TupleDataLen != 9,
+			GOTO_ERROR_ON((tuple.TupleDataLen != 9) &&
+				      (tuple.TupleDataLen != 10),
 				      "pa tpl size");
 			sprom->pa0b0 = tuple.TupleData[1] |
 				 ((u16)tuple.TupleData[2] << 8);
@@ -718,7 +719,8 @@ int ssb_pcmcia_get_invariants(struct ssb
 			sprom->antenna_gain.ghz5.a3 = tuple.TupleData[1];
 			break;
 		case SSB_PCMCIA_CIS_BFLAGS:
-			GOTO_ERROR_ON(tuple.TupleDataLen != 3,
+			GOTO_ERROR_ON((tuple.TupleDataLen != 3) &&
+				      (tuple.TupleDataLen != 5),
 				      "bfl tpl size");
 			sprom->boardflags_lo = tuple.TupleData[1] |
 					 ((u16)tuple.TupleData[2] << 8);


From mb at bu3sch.de  Wed Jul  1 15:17:33 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 1 Jul 2009 15:17:33 +0200
Subject: [PATCH V2] ssb: Add support for 4318E
In-Reply-To: <4a4ada7f.oItwGXurq7WMW+HE%Larry.Finger@lwfinger.net>
References: <4a4ada7f.oItwGXurq7WMW+HE%Larry.Finger@lwfinger.net>
Message-ID: <200907011517.34061.mb@bu3sch.de>

On Wednesday 01 July 2009 05:39:43 Larry Finger wrote:
> From: Clyde McPherson <ccmcphe at verizon.net>
> 
> Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
> 4318E can do 802.11A/B/G, only B and G mode are supported in b43.
> 
> Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

ack

> ---
> 
> Index: wireless-testing/drivers/ssb/pcmcia.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pcmcia.c
> +++ wireless-testing/drivers/ssb/pcmcia.c
> @@ -678,7 +678,8 @@ int ssb_pcmcia_get_invariants(struct ssb
>  			sprom->board_rev = tuple.TupleData[1];
>  			break;
>  		case SSB_PCMCIA_CIS_PA:
> -			GOTO_ERROR_ON(tuple.TupleDataLen != 9,
> +			GOTO_ERROR_ON((tuple.TupleDataLen != 9) &&
> +				      (tuple.TupleDataLen != 10),
>  				      "pa tpl size");
>  			sprom->pa0b0 = tuple.TupleData[1] |
>  				 ((u16)tuple.TupleData[2] << 8);
> @@ -718,7 +719,8 @@ int ssb_pcmcia_get_invariants(struct ssb
>  			sprom->antenna_gain.ghz5.a3 = tuple.TupleData[1];
>  			break;
>  		case SSB_PCMCIA_CIS_BFLAGS:
> -			GOTO_ERROR_ON(tuple.TupleDataLen != 3,
> +			GOTO_ERROR_ON((tuple.TupleDataLen != 3) &&
> +				      (tuple.TupleDataLen != 5),
>  				      "bfl tpl size");
>  			sprom->boardflags_lo = tuple.TupleData[1] |
>  					 ((u16)tuple.TupleData[2] << 8);
> 
> 



-- 
Greetings, Michael.


From mb at bu3sch.de  Wed Jul  1 15:17:41 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 1 Jul 2009 15:17:41 +0200
Subject: [PATCH V2] b43: Add support for 4318E
In-Reply-To: <4a4ada70.t85pybsO8xH4owyV%Larry.Finger@lwfinger.net>
References: <4a4ada70.t85pybsO8xH4owyV%Larry.Finger@lwfinger.net>
Message-ID: <200907011517.41572.mb@bu3sch.de>

On Wednesday 01 July 2009 05:39:28 Larry Finger wrote:
> From: Clyde McPherson <ccmcphe at verizon.net>
> 
> Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
> 4318E can do 802.11A/B/G, only B and G mode are supported in b43.
> 
> Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

ack

> ---
> 
> diff --git a/drivers/net/wireless/b43/pcmcia.c 
> b/drivers/net/wireless/b43/pcmcia.c
> index 3cfc303..6c3a749 100644
> --- a/drivers/net/wireless/b43/pcmcia.c
> +++ b/drivers/net/wireless/b43/pcmcia.c
> @@ -35,6 +35,7 @@
>  
>  static /*const */ struct pcmcia_device_id b43_pcmcia_tbl[] = {
>  	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x448),
> +	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x476),
>  	PCMCIA_DEVICE_NULL,
>  };
> 
> 
> 



-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Jul  1 17:28:43 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 01 Jul 2009 10:28:43 -0500
Subject: [PATCH V2] ssb: Add support for 4318E
In-Reply-To: <200907011517.34061.mb@bu3sch.de>
References: <4a4ada7f.oItwGXurq7WMW+HE%Larry.Finger@lwfinger.net>
	<200907011517.34061.mb@bu3sch.de>
Message-ID: <4A4B80AB.6090307@lwfinger.net>

Michael Buesch wrote:
> On Wednesday 01 July 2009 05:39:43 Larry Finger wrote:
>> From: Clyde McPherson <ccmcphe at verizon.net>
>>
>> Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
>> 4318E can do 802.11A/B/G, only B and G mode are supported in b43.
>>
>> Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
>> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> 
> ack
> 

Cc: Stable <stable at vger.kernel.org>

John,

I forgot the above line in both the b43 and ssb patches.

Larry



From mb at bu3sch.de  Wed Jul  1 20:18:35 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 1 Jul 2009 20:18:35 +0200
Subject: [PATCH V2] ssb: Add support for 4318E
In-Reply-To: <4A4B80AB.6090307@lwfinger.net>
References: <4a4ada7f.oItwGXurq7WMW+HE%Larry.Finger@lwfinger.net>
	<200907011517.34061.mb@bu3sch.de> <4A4B80AB.6090307@lwfinger.net>
Message-ID: <200907012018.35962.mb@bu3sch.de>

On Wednesday 01 July 2009 17:28:43 Larry Finger wrote:
> Michael Buesch wrote:
> > On Wednesday 01 July 2009 05:39:43 Larry Finger wrote:
> >> From: Clyde McPherson <ccmcphe at verizon.net>
> >>
> >> Added support for the Broadcom 4318E chipset on PCMCIA/CF cards. The 
> >> 4318E can do 802.11A/B/G, only B and G mode are supported in b43.
> >>
> >> Signed-off-by: Clyde McPherson <ccmcphe at verizon.net>
> >> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> > 
> > ack
> > 
> 
> Cc: Stable <stable at vger.kernel.org>

I do not think these patches are subject to -stable.

-- 
Greetings, Michael.


From facorread at gmail.com  Thu Jul  2 16:47:26 2009
From: facorread at gmail.com (Fabio A. Correa)
Date: Thu, 2 Jul 2009 09:47:26 -0500
Subject: 4311 not detected at all
In-Reply-To: <4A4CC25D.4090400@lwfinger.net>
References: <ec2083b20906120654j370e5bdo724a7c3b6d505a6c@mail.gmail.com>
	<4A326771.6030301@lwfinger.net>
	<ec2083b20906120759x4a8c247eh61d1f6bdb6f194f6@mail.gmail.com>
	<20090618021017.19879.qmail@stuge.se>
	<ec2083b20906171932g401fab8fk15531459e1dc4d41@mail.gmail.com>
	<ec2083b20907020617q689f9672h383bb853ba6019d0@mail.gmail.com>
	<4A4CC25D.4090400@lwfinger.net>
Message-ID: <ec2083b20907020747t5b702bc8q755fa35b44b5e4ca@mail.gmail.com>

2009/7/2 Larry Finger <Larry.Finger at lwfinger.net>:
> AFAIK, the phy driver is for wired devices.
OK, thanks.

> Have you installed the firmware? Please look at the output of the command dmesg | egrep "ssb|b43|wlan0"
Yes, I have installed it. Here is some output from Syslog:

Jul  2 08:56:16 [sudo] facorread : TTY=pts/0 ; PWD=/home/facorread ;
USER=root ; COMMAND=/sbin/modprobe -v b43
Jul  2 08:56:16 [kernel] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI
18 (level, low) -> IRQ 18
Jul  2 08:56:16 [kernel] ssb: Core 0 found: ChipCommon (cc 0x800, rev
0x11, vendor 0x4243)
Jul  2 08:56:16 [kernel] ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev
0x0A, vendor 0x4243)
Jul  2 08:56:16 [kernel] ssb: Core 2 found: USB 1.1 Host (cc 0x817,
rev 0x03, vendor 0x4243)
Jul  2 08:56:16 [kernel] ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01,
vendor 0x4243)
Jul  2 08:56:16 [kernel] ssb: Sonics Silicon Backplane found on PCI
device 0000:06:00.0
Jul  2 08:56:16 [kernel] b43-phy1: Broadcom 4311 WLAN found (core revision 10)

Jul  2 08:56:21 [sudo] facorread : TTY=pts/0 ; PWD=/home/facorread ;
USER=root ; COMMAND=/etc/init.d/net.wlan0 start
Jul  2 08:56:21 [kernel] b43 ssb0:0: firmware: requesting b43/ucode5.fw
Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/pcm5.fw
Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
Jul  2 08:56:22 [kernel] b43-phy1: Loading firmware version 410.2160
(2007-05-26 15:32:10)
Jul  2 08:56:22 [kernel] Registered led device: b43-phy1::tx
Jul  2 08:56:22 [kernel] Registered led device: b43-phy1::rx
Jul  2 08:56:22 [kernel] b43-phy1: Radio turned on by software
Jul  2 08:56:22 [kernel] ADDRCONF(NETDEV_UP): wlan0: link is not ready
Jul  2 08:56:22 [/etc/init.d/net.wlan0] WARNING: net.wlan0 has
started, but is inactive

> The other kernel modules that are needed are mac80211 and friends;
> however, the Kconfig rules should ensure that mac80211 is built before
> you can actually build b43.
You are right; I set them to be built into the kernel.

>
> BTW, your mailer is misconfigured. the "To:" header field is wrong,
> which prevents an automatic "reply to".
Oh, I had the addresses as bcc. Thanks for your remarks and your help.

-- 
Fabio Andr?s Correa Dur?n
http://facorread.150m.com


From Larry.Finger at lwfinger.net  Thu Jul  2 17:31:49 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 02 Jul 2009 10:31:49 -0500
Subject: 4311 not detected at all
In-Reply-To: <ec2083b20907020747t5b702bc8q755fa35b44b5e4ca@mail.gmail.com>
References: <ec2083b20906120654j370e5bdo724a7c3b6d505a6c@mail.gmail.com>	<4A326771.6030301@lwfinger.net>	<ec2083b20906120759x4a8c247eh61d1f6bdb6f194f6@mail.gmail.com>	<20090618021017.19879.qmail@stuge.se>	<ec2083b20906171932g401fab8fk15531459e1dc4d41@mail.gmail.com>	<ec2083b20907020617q689f9672h383bb853ba6019d0@mail.gmail.com>	<4A4CC25D.4090400@lwfinger.net>
	<ec2083b20907020747t5b702bc8q755fa35b44b5e4ca@mail.gmail.com>
Message-ID: <4A4CD2E5.4020500@lwfinger.net>

Fabio A. Correa wrote:
> 2009/7/2 Larry Finger <Larry.Finger at lwfinger.net>:
>> AFAIK, the phy driver is for wired devices.
> OK, thanks.
> 
>> Have you installed the firmware? Please look at the output of the command dmesg | egrep "ssb|b43|wlan0"
> Yes, I have installed it. Here is some output from Syslog:
> 
> Jul  2 08:56:16 [sudo] facorread : TTY=pts/0 ; PWD=/home/facorread ;
> USER=root ; COMMAND=/sbin/modprobe -v b43
> Jul  2 08:56:16 [kernel] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI
> 18 (level, low) -> IRQ 18
> Jul  2 08:56:16 [kernel] ssb: Core 0 found: ChipCommon (cc 0x800, rev
> 0x11, vendor 0x4243)
> Jul  2 08:56:16 [kernel] ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev
> 0x0A, vendor 0x4243)
> Jul  2 08:56:16 [kernel] ssb: Core 2 found: USB 1.1 Host (cc 0x817,
> rev 0x03, vendor 0x4243)
> Jul  2 08:56:16 [kernel] ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01,
> vendor 0x4243)
> Jul  2 08:56:16 [kernel] ssb: Sonics Silicon Backplane found on PCI
> device 0000:06:00.0
> Jul  2 08:56:16 [kernel] b43-phy1: Broadcom 4311 WLAN found (core revision 10)
> 
> Jul  2 08:56:21 [sudo] facorread : TTY=pts/0 ; PWD=/home/facorread ;
> USER=root ; COMMAND=/etc/init.d/net.wlan0 start
> Jul  2 08:56:21 [kernel] b43 ssb0:0: firmware: requesting b43/ucode5.fw
> Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/pcm5.fw
> Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
> Jul  2 08:56:22 [kernel] b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
> Jul  2 08:56:22 [kernel] b43-phy1: Loading firmware version 410.2160
> (2007-05-26 15:32:10)
> Jul  2 08:56:22 [kernel] Registered led device: b43-phy1::tx
> Jul  2 08:56:22 [kernel] Registered led device: b43-phy1::rx
> Jul  2 08:56:22 [kernel] b43-phy1: Radio turned on by software
> Jul  2 08:56:22 [kernel] ADDRCONF(NETDEV_UP): wlan0: link is not ready
> Jul  2 08:56:22 [/etc/init.d/net.wlan0] WARNING: net.wlan0 has
> started, but is inactive
> 
>> The other kernel modules that are needed are mac80211 and friends;
>> however, the Kconfig rules should ensure that mac80211 is built before
>> you can actually build b43.
> You are right; I set them to be built into the kernel.

Please send the output I requested!


From facorread at gmail.com  Thu Jul  2 18:13:33 2009
From: facorread at gmail.com (Fabio A. Correa)
Date: Thu, 2 Jul 2009 11:13:33 -0500
Subject: 4311 not detected at all
In-Reply-To: <ec2083b20907020912t6d5a13dqc41255eb9be4bfdf@mail.gmail.com>
References: <ec2083b20906120654j370e5bdo724a7c3b6d505a6c@mail.gmail.com>
	<4A326771.6030301@lwfinger.net>
	<ec2083b20906120759x4a8c247eh61d1f6bdb6f194f6@mail.gmail.com>
	<20090618021017.19879.qmail@stuge.se>
	<ec2083b20906171932g401fab8fk15531459e1dc4d41@mail.gmail.com>
	<ec2083b20907020617q689f9672h383bb853ba6019d0@mail.gmail.com>
	<4A4CC25D.4090400@lwfinger.net>
	<ec2083b20907020747t5b702bc8q755fa35b44b5e4ca@mail.gmail.com>
	<4A4CD33E.5020700@lwfinger.net>
	<ec2083b20907020912t6d5a13dqc41255eb9be4bfdf@mail.gmail.com>
Message-ID: <ec2083b20907020913j4c73c0bg873cfd74ed5cd72@mail.gmail.com>

> Please send the output I requested!

I did not express myself correctly. The Syslog output you see is
actually the dmesg output, which has been processed via Syslog. It is
from a previous linux kernel run. It does not matter now, here is new output.

> One other thing. If your computer has a switch to turn the radio
> on/off, you need to have rfkill in your configuration. It is not now.
Good hint, I applied now and recompiled my kernel. Here are the results:

facorread at aaron ~ $ dmesg | egrep "ssb|b43|wlan0"
b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
b43-pci-bridge 0000:06:00.0: setting latency timer to 64
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
ssb: SPROM revision 2 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:06:00.0
b43-phy0: Broadcom 4311 WLAN found (core revision 10)
b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
input: b43-phy0 as /devices/virtual/input/input7
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
ADDRCONF(NETDEV_UP): wlan0: link is not ready
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0: Radio turned on by software
b43-phy0: The hardware RF-kill button still turns the radio physically
off. Press the button to turn it on.
b43-phy0: Radio hardware status changed to ENABLED
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0: Radio hardware status changed to ENABLED
b43-phy0 debug: Removing Interface type 2
b43-phy0 debug: Wireless interface stopped
b43-phy0 debug: DMA-32 rx_ring: Used slots 1/64, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BK: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BE: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_VI: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_VO: Used slots 2/256, Failed frames
0/110 = 0.0%, Average tries 0.95
b43-phy0 debug: DMA-32 tx_ring_mcast: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-pci-bridge 0000:06:00.0: PCI INT A disabled
b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 18 (level, low) -> IRQ
18
b43-pci-bridge 0000:06:00.0: setting latency timer to 64
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x11, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0A, vendor 0x4243)
ssb: Core 2 found: USB 1.1 Host (cc 0x817, rev 0x03, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x01, vendor 0x4243)
ssb: SPROM revision 2 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:06:00.0
b43-phy1: Broadcom 4311 WLAN found (core revision 10)
b43-phy1 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy1 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
input: b43-phy1 as /devices/virtual/input/input8
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy1: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy1 debug: Chip initialized
b43-phy1 debug: 32-bit DMA initialized
Registered led device: b43-phy1::tx
Registered led device: b43-phy1::rx
Registered led device: b43-phy1::radio
b43-phy1 debug: Wireless interface started
b43-phy1 debug: Adding Interface type 2
b43-phy1: Radio turned on by software
ADDRCONF(NETDEV_UP): wlan0: link is not ready
b43-phy1: Radio hardware status changed to DISABLED
b43-phy1: Radio hardware status changed to ENABLED
b43-phy1 debug: Removing Interface type 2
b43-phy1 debug: Wireless interface stopped
b43-phy1 debug: DMA-32 rx_ring: Used slots 1/64, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_BK: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_BE: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_VI: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_VO: Used slots 2/256, Failed frames
0/22 = 0.0%, Average tries 1.00
b43-phy1 debug: DMA-32 tx_ring_mcast: Used slots 0/256, Failed frames
0/0 = 0.0%, Average tries 0.00
input: b43-phy1 as /devices/virtual/input/input9
b43-phy1: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy1 debug: Chip initialized
b43-phy1 debug: 32-bit DMA initialized
Registered led device: b43-phy1::tx
Registered led device: b43-phy1::rx
Registered led device: b43-phy1::radio
b43-phy1 debug: Wireless interface started
b43-phy1 debug: Adding Interface type 2
b43-phy1: Radio turned off by software
ADDRCONF(NETDEV_UP): wlan0: link is not ready
wlan0: direct probe to AP 00:0f:fd:1f:5f:cd try 1
b43-phy1: Radio turned on by software
wlan0: direct probe to AP 00:0f:fd:1f:5f:cd try 1
wlan0: direct probe to AP 00:0f:fd:1f:5f:cd try 1

It is now scanning, lots of APs come up, it tries to connect to my AP
which has no security; however, it times out with no result.

Thanks for your help.

--
Fabio Andr?s Correa Dur?n
http://facorread.150m.com


From vojta at math.berkeley.edu  Thu Jul  2 23:58:33 2009
From: vojta at math.berkeley.edu (Paul Vojta)
Date: Thu, 2 Jul 2009 14:58:33 -0700
Subject: b43: does not connect with essid=any
In-Reply-To: <20090702214824.GA16277@math.berkeley.edu>
References: <20090702214824.GA16277@math.berkeley.edu>
Message-ID: <20090702215833.GA16327@math.berkeley.edu>

Oops, I forgot to attach the files.

--Paul Vojta


On Thu, Jul 02, 2009 at 02:48:24PM -0700, Paul Vojta wrote:
> Folks:
> 
> In recent kernels (2.6.30 and 2.6.31-rc1-git8, but not 2.6.29) I am no longer
> able to connect to a wireless access point with essid=any.  ...
-------------- next part --------------
_~# uname -a
Linux xps 2.6.30 #2 SMP Sat Jun 13 22:33:55 PDT 2009 x86_64 GNU/Linux
_~# lspci -vvn | grep 43 -A7
03:01.2 0880: 1180:0843 (rev 12)
	Subsystem: 1028:0209
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 64, Cache Line Size: 64 bytes
	Interrupt: pin B routed to IRQ 4
	Region 0: Memory at f1aff500 (32-bit, non-prefetchable) [size=256]
	Capabilities: [80] Power Management version 2
--
0c:00.0 0280: 14e4:4311 (rev 01)
	Subsystem: 1028:0007
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 0, Cache Line Size: 64 bytes
	Interrupt: pin A routed to IRQ 17
	Region 0: Memory at f1ffc000 (32-bit, non-prefetchable) [size=16K]
	Capabilities: [40] Power Management version 2
--
	Kernel driver in use: b43-pci-bridge

_~# dmesg
Linux version 2.6.30 (vojta at xps) (gcc version 4.3.3 (Debian 4.3.3-10) ) #2 SMP Sat Jun 13 22:33:55 PDT 2009
Command line: BOOT_IMAGE=6 ro root=805
KERNEL supported cpus:
  Intel GenuineIntel
  AMD AuthenticAMD
  Centaur CentaurHauls
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
 BIOS-e820: 000000000009f000 - 00000000000a0000 (reserved)
 BIOS-e820: 0000000000100000 - 000000007fe6d800 (usable)
 BIOS-e820: 000000007fe6d800 - 0000000080000000 (reserved)
 BIOS-e820: 00000000f8000000 - 00000000fc000000 (reserved)
 BIOS-e820: 00000000fec00000 - 00000000fec10000 (reserved)
 BIOS-e820: 00000000fed18000 - 00000000fed1c000 (reserved)
 BIOS-e820: 00000000fed20000 - 00000000fed90000 (reserved)
 BIOS-e820: 00000000feda0000 - 00000000feda6000 (reserved)
 BIOS-e820: 00000000fee00000 - 00000000fee10000 (reserved)
 BIOS-e820: 00000000ffe00000 - 0000000100000000 (reserved)
DMI 2.4 present.
last_pfn = 0x7fe6d max_arch_pfn = 0x100000000
MTRR default type: uncachable
MTRR fixed ranges enabled:
  00000-9FFFF write-back
  A0000-BFFFF uncachable
  C0000-CFFFF write-protect
  D0000-EFFFF uncachable
  F0000-FFFFF write-protect
MTRR variable ranges enabled:
  0 base 000000000 mask F80000000 write-back
  1 base 07FF00000 mask FFFF00000 uncachable
  2 disabled
  3 disabled
  4 disabled
  5 disabled
  6 disabled
  7 disabled
init_memory_mapping: 0000000000000000-000000007fe6d000
 0000000000 - 007fe00000 page 2M
 007fe00000 - 007fe6d000 page 4k
kernel direct mapping tables up to 7fe6d000 @ 8000-c000
ACPI: RSDP 00000000000fbc00 00024 (v02 DELL  )
ACPI: XSDT 000000007fe6f200 0005C (v01 DELL    M08     27D80B13 ASL  00000061)
ACPI: FACP 000000007fe6f09c 000F4 (v04 DELL    M08     27D80B13 ASL  00000061)
ACPI: DSDT 000000007fe6f800 05733 (v02 INT430 SYSFexxx 00001001 INTL 20050624)
ACPI: FACS 000000007fe7e000 00040
ACPI: HPET 000000007fe6f300 00038 (v01 DELL    M08     00000001 ASL  00000061)
ACPI: APIC 000000007fe6f400 00068 (v01 DELL    M08     27D80B13 ASL  00000047)
ACPI: MCFG 000000007fe6f3c0 0003E (v16 DELL    M08     27D80B13 ASL  00000061)
ACPI: SLIC 000000007fe6f49c 00176 (v01 DELL    M08     27D80B13 ASL  00000061)
ACPI: BOOT 000000007fe6efc0 00028 (v01 DELL    M08     27D80B13 ASL  00000061)
ACPI: SSDT 000000007fe6da82 004CC (v01  PmRef    CpuPm 00003000 INTL 20050624)
ACPI: Local APIC address 0xfee00000
(6 early reservations) ==> bootmem [0000000000 - 007fe6d000]
  #0 [0000000000 - 0000001000]   BIOS data page ==> [0000000000 - 0000001000]
  #1 [0000006000 - 0000008000]       TRAMPOLINE ==> [0000006000 - 0000008000]
  #2 [0000200000 - 0000791b80]    TEXT DATA BSS ==> [0000200000 - 0000791b80]
  #3 [000009f000 - 0000100000]    BIOS reserved ==> [000009f000 - 0000100000]
  #4 [0000792000 - 00007921ec]              BRK ==> [0000792000 - 00007921ec]
  #5 [0000008000 - 000000a000]          PGTABLE ==> [0000008000 - 000000a000]
 [ffffe20000000000-ffffe20001bfffff] PMD -> [ffff880001200000-ffff880002dfffff] on node 0
Zone PFN ranges:
  DMA      0x00000000 -> 0x00001000
  DMA32    0x00001000 -> 0x00100000
  Normal   0x00100000 -> 0x00100000
Movable zone start PFN for each node
early_node_map[2] active PFN ranges
    0: 0x00000000 -> 0x0000009f
    0: 0x00000100 -> 0x0007fe6d
On node 0 totalpages: 523788
  DMA zone: 56 pages used for memmap
  DMA zone: 1527 pages reserved
  DMA zone: 2416 pages, LIFO batch:0
  DMA32 zone: 7107 pages used for memmap
  DMA32 zone: 512682 pages, LIFO batch:31
ACPI: PM-Timer IO Port: 0x1008
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] enabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 2, version 0, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Using ACPI (MADT) for SMP configuration information
ACPI: HPET id: 0x8086a201 base: 0xfed00000
SMP: Allowing 2 CPUs, 0 hotplug CPUs
nr_irqs_gsi: 24
Allocating PCI resources starting at 88000000 (gap: 80000000:78000000)
NR_CPUS:2 nr_cpumask_bits:2 nr_cpu_ids:2 nr_node_ids:1
PERCPU: Embedded 24 pages at ffff880001010000, static data 69600 bytes
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 515098
Kernel command line: BOOT_IMAGE=6 ro root=805
Initializing CPU#0
NR_IRQS:320
PID hash table entries: 4096 (order: 12, 32768 bytes)
Extended CMOS year: 2000
Fast TSC calibration using PIT
Detected 1496.173 MHz processor.
Console: colour VGA+ 80x25
console [tty0] enabled
Dentry cache hash table entries: 262144 (order: 9, 2097152 bytes)
Inode-cache hash table entries: 131072 (order: 8, 1048576 bytes)
Checking aperture...
No AGP bridge found
Memory: 2056716k/2095540k available (3562k kernel code, 388k absent, 37796k reserved, 1392k data, 340k init)
SLUB: Genslabs=13, HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
hpet clockevent registered
Calibrating delay loop (skipped), value calculated using timer frequency.. 2992.34 BogoMIPS (lpj=5984692)
Mount-cache hash table entries: 256
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 2048K
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 0
CPU0: Thermal monitoring enabled (TM2)
using mwait in idle threads.
ACPI: Core revision 20090320
Setting APIC routing to flat
..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
CPU0: Intel(R) Core(TM)2 Duo CPU     T5250  @ 1.50GHz stepping 0d
Booting processor 1 APIC 0x1 ip 0x6000
Initializing CPU#1
Calibrating delay using timer specific routine.. 2992.50 BogoMIPS (lpj=5985009)
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 2048K
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 1
CPU1: Thermal monitoring enabled (TM2)
CPU1: Intel(R) Core(TM)2 Duo CPU     T5250  @ 1.50GHz stepping 0d
checking TSC synchronization [CPU#0 -> CPU#1]: passed.
Brought up 2 CPUs
Total of 2 processors activated (5984.85 BogoMIPS).
net_namespace: 560 bytes
NET: Registered protocol family 16
ACPI: bus type pci registered
PCI: MCFG configuration 0: base f8000000 segment 0 buses 0 - 63
PCI: MCFG area at f8000000 reserved in E820
PCI: Using MMCONFIG at f8000000 - fbffffff
PCI: Using configuration type 1 for base access
bio: create slab <bio-0> at 0
ACPI: EC: Look up EC in DSDT
ACPI: SSDT 000000007fe7e080 00043 (v01  LMPWR  DELLLOM 00001001 INTL 20050624)
ACPI: Interpreter enabled
ACPI: (supports S0 S3 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: PCI Root Bridge [PCI0] (0000:00)
pci 0000:00:01.0: PME# supported from D0 D3hot D3cold
pci 0000:00:01.0: PME# disabled
pci 0000:00:1a.0: reg 20 io port: [0x6f20-0x6f3f]
pci 0000:00:1a.1: reg 20 io port: [0x6f00-0x6f1f]
pci 0000:00:1a.7: reg 10 32bit mmio: [0xfed1c400-0xfed1c7ff]
pci 0000:00:1a.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1a.7: PME# disabled
pci 0000:00:1b.0: reg 10 64bit mmio: [0xf6ffc000-0xf6ffffff]
pci 0000:00:1b.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1b.0: PME# disabled
pci 0000:00:1c.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.0: PME# disabled
pci 0000:00:1c.1: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.1: PME# disabled
pci 0000:00:1c.3: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.3: PME# disabled
pci 0000:00:1c.5: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.5: PME# disabled
pci 0000:00:1d.0: reg 20 io port: [0x6f80-0x6f9f]
pci 0000:00:1d.1: reg 20 io port: [0x6f60-0x6f7f]
pci 0000:00:1d.2: reg 20 io port: [0x6f40-0x6f5f]
pci 0000:00:1d.7: reg 10 32bit mmio: [0xfed1c000-0xfed1c3ff]
pci 0000:00:1d.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1d.7: PME# disabled
pci 0000:00:1f.0: quirk: region 1000-107f claimed by ICH6 ACPI/GPIO/TCO
pci 0000:00:1f.0: quirk: region 1080-10bf claimed by ICH6 GPIO
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 1 PIO at 0900 (mask 007f)
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 3 PIO at 0c80 (mask 003f)
pci 0000:00:1f.1: reg 10 io port: [0x1f0-0x1f7]
pci 0000:00:1f.1: reg 14 io port: [0x3f4-0x3f7]
pci 0000:00:1f.1: reg 18 io port: [0x170-0x177]
pci 0000:00:1f.1: reg 1c io port: [0x374-0x377]
pci 0000:00:1f.1: reg 20 io port: [0x6fa0-0x6faf]
pci 0000:00:1f.2: reg 10 io port: [0x6eb0-0x6eb7]
pci 0000:00:1f.2: reg 14 io port: [0x6eb8-0x6ebb]
pci 0000:00:1f.2: reg 18 io port: [0x6ec0-0x6ec7]
pci 0000:00:1f.2: reg 1c io port: [0x6ec8-0x6ecb]
pci 0000:00:1f.2: reg 20 io port: [0x6ee0-0x6eff]
pci 0000:00:1f.2: reg 24 32bit mmio: [0xf6ffb800-0xf6ffbfff]
pci 0000:00:1f.2: PME# supported from D3hot
pci 0000:00:1f.2: PME# disabled
pci 0000:00:1f.3: reg 10 32bit mmio: [0xf6ffb700-0xf6ffb7ff]
pci 0000:00:1f.3: reg 20 io port: [0x10c0-0x10df]
pci 0000:01:00.0: reg 10 32bit mmio: [0xf5000000-0xf5ffffff]
pci 0000:01:00.0: reg 14 64bit mmio: [0xe0000000-0xefffffff]
pci 0000:01:00.0: reg 1c 64bit mmio: [0xf2000000-0xf3ffffff]
pci 0000:01:00.0: reg 24 io port: [0xef00-0xef7f]
pci 0000:01:00.0: reg 30 32bit mmio: [0x000000-0x01ffff]
pci 0000:00:01.0: bridge io port: [0xe000-0xefff]
pci 0000:00:01.0: bridge 32bit mmio: [0xf2000000-0xf6efffff]
pci 0000:00:01.0: bridge 64bit mmio pref: [0xe0000000-0xefffffff]
pci 0000:0c:00.0: reg 10 32bit mmio: [0xf1ffc000-0xf1ffffff]
pci 0000:0c:00.0: supports D1 D2
pci 0000:00:1c.1: bridge 32bit mmio: [0xf1f00000-0xf1ffffff]
pci 0000:00:1c.3: bridge io port: [0xd000-0xdfff]
pci 0000:00:1c.3: bridge 32bit mmio: [0xf1c00000-0xf1efffff]
pci 0000:00:1c.3: bridge 64bit mmio pref: [0xf0000000-0xf01fffff]
pci 0000:09:00.0: reg 10 64bit mmio: [0xf1bf0000-0xf1bfffff]
pci 0000:09:00.0: PME# supported from D3hot D3cold
pci 0000:09:00.0: PME# disabled
pci 0000:00:1c.5: bridge 32bit mmio: [0xf1b00000-0xf1bfffff]
pci 0000:03:01.0: reg 10 32bit mmio: [0xf1aff800-0xf1afffff]
pci 0000:03:01.0: supports D1 D2
pci 0000:03:01.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.0: PME# disabled
pci 0000:03:01.1: reg 10 32bit mmio: [0xf1aff400-0xf1aff4ff]
pci 0000:03:01.1: supports D1 D2
pci 0000:03:01.1: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.1: PME# disabled
pci 0000:03:01.2: reg 10 32bit mmio: [0xf1aff500-0xf1aff5ff]
pci 0000:03:01.2: supports D1 D2
pci 0000:03:01.2: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.2: PME# disabled
pci 0000:03:01.3: reg 10 32bit mmio: [0xf1aff600-0xf1aff6ff]
pci 0000:03:01.3: supports D1 D2
pci 0000:03:01.3: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.3: PME# disabled
pci 0000:03:01.4: reg 10 32bit mmio: [0xf1aff700-0xf1aff7ff]
pci 0000:03:01.4: supports D1 D2
pci 0000:03:01.4: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.4: PME# disabled
pci 0000:00:1e.0: transparent bridge
pci 0000:00:1e.0: bridge 32bit mmio: [0xf1a00000-0xf1afffff]
pci_bus 0000:00: on NUMA node 0
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PCIE._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.AGP_._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP01._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP02._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP04._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP06._PRT]
ACPI: PCI Interrupt Link [LNKA] (IRQs 9 10 11) *7
ACPI: PCI Interrupt Link [LNKB] (IRQs 5 7) *10
ACPI: PCI Interrupt Link [LNKC] (IRQs 9 10 11) *4
ACPI: PCI Interrupt Link [LNKD] (IRQs *5 7 9 10 11)
ACPI: PCI Interrupt Link [LNKE] (IRQs 3 4 5 6 7 9 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNKF] (IRQs 3 4 5 6 7 9 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKG] (IRQs 3 4 5 6 7 *9 10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKH] (IRQs 3 4 5 6 7 9 10 11 12 14 15) *0, disabled.
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: US
	(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
	(2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
	(5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
cfg80211: Calling CRDA for country: US
hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
hpet0: 3 comparators, 64-bit 14.318180 MHz counter
pnp: PnP ACPI init
ACPI: bus type pnp registered
pnp 00:09: io resource (0x1000-0x1005) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:09: io resource (0x1008-0x100f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1006-0x1007) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x100a-0x1059) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1060-0x107f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1010-0x102f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp: PnP ACPI: found 12 devices
ACPI: ACPI bus type pnp unregistered
system 00:05: ioport range 0xc80-0xcff could not be reserved
system 00:08: iomem range 0xfed00000-0xfed003ff has been reserved
system 00:09: ioport range 0x900-0x97f has been reserved
system 00:09: ioport range 0x4d0-0x4d1 has been reserved
system 00:0a: ioport range 0xf400-0xf4fe has been reserved
system 00:0a: ioport range 0x1080-0x10bf has been reserved
system 00:0a: ioport range 0x10c0-0x10df has been reserved
system 00:0a: ioport range 0x809-0x809 has been reserved
system 00:0b: iomem range 0x0-0x9efff could not be reserved
system 00:0b: iomem range 0x9f000-0x9ffff could not be reserved
system 00:0b: iomem range 0xc0000-0xcffff has been reserved
system 00:0b: iomem range 0xe0000-0xfffff has been reserved
system 00:0b: iomem range 0x100000-0x7fe6d7ff could not be reserved
system 00:0b: iomem range 0x7fe6d800-0x7fefffff has been reserved
system 00:0b: iomem range 0x7ff00000-0x7fffffff has been reserved
system 00:0b: iomem range 0x7ff00000-0x806fffff could not be reserved
system 00:0b: iomem range 0xffe00000-0xffffffff has been reserved
system 00:0b: iomem range 0xffa00000-0xffbfffff has been reserved
system 00:0b: iomem range 0xfec00000-0xfec0ffff has been reserved
system 00:0b: iomem range 0xfee00000-0xfee0ffff has been reserved
system 00:0b: iomem range 0xfed20000-0xfed8ffff has been reserved
system 00:0b: iomem range 0xfeda0000-0xfeda3fff has been reserved
system 00:0b: iomem range 0xfeda4000-0xfeda4fff has been reserved
system 00:0b: iomem range 0xfeda5000-0xfeda5fff has been reserved
system 00:0b: iomem range 0xfeda6000-0xfeda6fff has been reserved
system 00:0b: iomem range 0xfed18000-0xfed1bfff has been reserved
system 00:0b: iomem range 0xf8000000-0xfbffffff has been reserved
b43-pci-bridge 0000:0c:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
b43-pci-bridge 0000:0c:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0
pci 0000:00:01.0: PCI bridge, secondary bus 0000:01
pci 0000:00:01.0:   IO window: 0xe000-0xefff
pci 0000:00:01.0:   MEM window: 0xf2000000-0xf6efffff
pci 0000:00:01.0:   PREFETCH window: 0x000000e0000000-0x000000efffffff
pci 0000:00:1c.0: PCI bridge, secondary bus 0000:0b
pci 0000:00:1c.0:   IO window: disabled
pci 0000:00:1c.0:   MEM window: disabled
pci 0000:00:1c.0:   PREFETCH window: disabled
pci 0000:00:1c.1: PCI bridge, secondary bus 0000:0c
pci 0000:00:1c.1:   IO window: disabled
pci 0000:00:1c.1:   MEM window: 0xf1f00000-0xf1ffffff
pci 0000:00:1c.1:   PREFETCH window: disabled
pci 0000:00:1c.3: PCI bridge, secondary bus 0000:0d
pci 0000:00:1c.3:   IO window: 0xd000-0xdfff
pci 0000:00:1c.3:   MEM window: 0xf1c00000-0xf1efffff
pci 0000:00:1c.3:   PREFETCH window: 0x000000f0000000-0x000000f01fffff
pci 0000:00:1c.5: PCI bridge, secondary bus 0000:09
pci 0000:00:1c.5:   IO window: disabled
pci 0000:00:1c.5:   MEM window: 0xf1b00000-0xf1bfffff
pci 0000:00:1c.5:   PREFETCH window: disabled
pci 0000:00:1e.0: PCI bridge, secondary bus 0000:03
pci 0000:00:1e.0:   IO window: disabled
pci 0000:00:1e.0:   MEM window: 0xf1a00000-0xf1afffff
pci 0000:00:1e.0:   PREFETCH window: disabled
pci 0000:00:01.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:01.0: setting latency timer to 64
pci 0000:00:1c.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:1c.0: setting latency timer to 64
pci 0000:00:1c.1: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.1: setting latency timer to 64
pci 0000:00:1c.3: PCI INT D -> GSI 19 (level, low) -> IRQ 19
pci 0000:00:1c.3: setting latency timer to 64
pci 0000:00:1c.5: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.5: setting latency timer to 64
pci 0000:00:1e.0: setting latency timer to 64
pci_bus 0000:00: resource 0 io:  [0x00-0xffff]
pci_bus 0000:00: resource 1 mem: [0x000000-0xffffffffffffffff]
pci_bus 0000:01: resource 0 io:  [0xe000-0xefff]
pci_bus 0000:01: resource 1 mem: [0xf2000000-0xf6efffff]
pci_bus 0000:01: resource 2 pref mem [0xe0000000-0xefffffff]
pci_bus 0000:0c: resource 1 mem: [0xf1f00000-0xf1ffffff]
pci_bus 0000:0d: resource 0 io:  [0xd000-0xdfff]
pci_bus 0000:0d: resource 1 mem: [0xf1c00000-0xf1efffff]
pci_bus 0000:0d: resource 2 pref mem [0xf0000000-0xf01fffff]
pci_bus 0000:09: resource 1 mem: [0xf1b00000-0xf1bfffff]
pci_bus 0000:03: resource 1 mem: [0xf1a00000-0xf1afffff]
pci_bus 0000:03: resource 3 io:  [0x00-0xffff]
pci_bus 0000:03: resource 4 mem: [0x000000-0xffffffffffffffff]
NET: Registered protocol family 2
IP route cache hash table entries: 65536 (order: 7, 524288 bytes)
TCP established hash table entries: 262144 (order: 10, 4194304 bytes)
TCP bind hash table entries: 65536 (order: 8, 1048576 bytes)
TCP: Hash tables configured (established 262144 bind 65536)
TCP reno registered
NET: Registered protocol family 1
Simple Boot Flag at 0x79 set to 0x1
NTFS driver 2.1.29 [Flags: R/O].
msgmni has been set to 4018
alg: No test for stdrng (krng)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
pci 0000:01:00.0: Boot video device
ACPI: AC Adapter [AC] (on-line)
input: Lid Switch as /devices/LNXSYSTM:00/device:00/PNP0C0D:00/input/input0
ACPI: Lid Switch [LID]
input: Power Button as /devices/LNXSYSTM:00/device:00/PNP0C0C:00/input/input1
ACPI: Power Button [PBTN]
input: Sleep Button as /devices/LNXSYSTM:00/device:00/PNP0C0E:00/input/input2
ACPI: Sleep Button [SBTN]
ACPI: SSDT 000000007fe6e5b8 001C0 (v01  PmRef  Cpu0Ist 00003000 INTL 20050624)
ACPI: SSDT 000000007fe6df4e 005E5 (v01  PmRef  Cpu0Cst 00003001 INTL 20050624)
Monitor-Mwait will be used to enter C-1 state
Monitor-Mwait will be used to enter C-2 state
Monitor-Mwait will be used to enter C-3 state
Marking TSC unstable due to TSC halts in idle
ACPI: CPU0 (power states: C1[C1] C2[C2] C3[C3])
processor ACPI_CPU:00: registered as cooling_device0
ACPI: Processor [CPU0] (supports 8 throttling states)
ACPI: SSDT 000000007fe6e778 000C4 (v01  PmRef  Cpu1Ist 00003000 INTL 20050624)
ACPI: SSDT 000000007fe6e533 00085 (v01  PmRef  Cpu1Cst 00003000 INTL 20050624)
ACPI: CPU1 (power states: C1[C1] C2[C2] C3[C3])
processor ACPI_CPU:01: registered as cooling_device1
ACPI: Processor [CPU1] (supports 8 throttling states)
thermal LNXTHERM:01: registered as thermal_zone0
ACPI: Thermal Zone [THM] (48 C)
Linux agpgart interface v0.103
loop: module loaded
Uniform Multi-Platform E-IDE driver
piix 0000:00:1f.1: IDE controller (0x8086:0x2850 rev 0x02)
PIIX_IDE 0000:00:1f.1: PCI INT A -> GSI 16 (level, low) -> IRQ 16
piix 0000:00:1f.1: IDE port disabled
piix 0000:00:1f.1: not 100% native mode: will probe irqs later
    ide0: BM-DMA at 0x6fa0-0x6fa7
Probing IDE interface ide0...
ACPI: Battery Slot [BAT0] (battery present)
hda: MATSHITA DVD+/-RW UJ-857G, ATAPI CD/DVD-ROM drive
hda: host max PIO4 wanted PIO255(auto-tune) selected PIO4
hda: UDMA/33 mode selected
ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
ide-gd driver 1.18
ide-cd driver 5.00
ide-cd: hda: ATAPI 24X DVD-ROM DVD-R CD-R/RW drive, 2048kB Cache
Uniform CD-ROM driver Revision: 3.20
Driver 'sd' needs updating - please use bus_type methods
ahci 0000:00:1f.2: version 3.0
ahci 0000:00:1f.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
ahci 0000:00:1f.2: AHCI 0001.0100 32 slots 3 ports 3 Gbps 0x5 impl SATA mode
ahci 0000:00:1f.2: flags: 64bit ncq sntf pm led clo pio slum part ems 
ahci 0000:00:1f.2: setting latency timer to 64
scsi0 : ahci
scsi1 : ahci
scsi2 : ahci
ata1: SATA max UDMA/133 irq_stat 0x00400040, connection status changed irq 17
ata2: DUMMY
ata3: SATA max UDMA/133 abar m2048 at 0xf6ffb800 port 0xf6ffba00 irq 17
tg3.c:v3.98 (February 25, 2009)
tg3 0000:09:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
tg3 0000:09:00.0: setting latency timer to 64
tg3 0000:09:00.0: PME# disabled
ata3: SATA link down (SStatus 0 SControl 300)
eth0: Tigon3 [partno(BCM95906) rev c002] (PCI Express) MAC address 00:23:ae:29:78:d9
eth0: attached PHY is 5906 (10/100Base-TX Ethernet) (WireSpeed[0])
eth0: RXcsums[1] LinkChgREG[0] MIirq[0] ASF[0] TSOcap[0]
eth0: dma_rwctrl[76180000] dma_mask[64-bit]
PPP generic driver version 2.4.2
b43-phy0: Broadcom 4311 WLAN found (core revision 10)
b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: P, Firmware-ID: FW13 ]
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci_hcd 0000:00:1a.7: PCI INT C -> GSI 22 (level, low) -> IRQ 22
ehci_hcd 0000:00:1a.7: setting latency timer to 64
ehci_hcd 0000:00:1a.7: EHCI Host Controller
ehci_hcd 0000:00:1a.7: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:1a.7: debug port 1
ehci_hcd 0000:00:1a.7: cache line size of 32 is not supported
ehci_hcd 0000:00:1a.7: irq 22, io mem 0xfed1c400
ehci_hcd 0000:00:1a.7: USB 2.0 started, EHCI 1.00
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 4 ports detected
ehci_hcd 0000:00:1d.7: PCI INT A -> GSI 20 (level, low) -> IRQ 20
ehci_hcd 0000:00:1d.7: setting latency timer to 64
ehci_hcd 0000:00:1d.7: EHCI Host Controller
ehci_hcd 0000:00:1d.7: new USB bus registered, assigned bus number 2
ehci_hcd 0000:00:1d.7: debug port 1
ehci_hcd 0000:00:1d.7: cache line size of 32 is not supported
ehci_hcd 0000:00:1d.7: irq 20, io mem 0xfed1c000
ehci_hcd 0000:00:1d.7: USB 2.0 started, EHCI 1.00
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 6 ports detected
uhci_hcd: USB Universal Host Controller Interface driver
uhci_hcd 0000:00:1a.0: PCI INT A -> GSI 20 (level, low) -> IRQ 20
uhci_hcd 0000:00:1a.0: setting latency timer to 64
uhci_hcd 0000:00:1a.0: UHCI Host Controller
uhci_hcd 0000:00:1a.0: new USB bus registered, assigned bus number 3
uhci_hcd 0000:00:1a.0: irq 20, io base 0x00006f20
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 2 ports detected
uhci_hcd 0000:00:1a.1: PCI INT B -> GSI 21 (level, low) -> IRQ 21
uhci_hcd 0000:00:1a.1: setting latency timer to 64
uhci_hcd 0000:00:1a.1: UHCI Host Controller
uhci_hcd 0000:00:1a.1: new USB bus registered, assigned bus number 4
uhci_hcd 0000:00:1a.1: irq 21, io base 0x00006f00
usb usb4: configuration #1 chosen from 1 choice
hub 4-0:1.0: USB hub found
hub 4-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.0: PCI INT A -> GSI 20 (level, low) -> IRQ 20
uhci_hcd 0000:00:1d.0: setting latency timer to 64
uhci_hcd 0000:00:1d.0: UHCI Host Controller
uhci_hcd 0000:00:1d.0: new USB bus registered, assigned bus number 5
uhci_hcd 0000:00:1d.0: irq 20, io base 0x00006f80
usb usb5: configuration #1 chosen from 1 choice
hub 5-0:1.0: USB hub found
hub 5-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.1: PCI INT B -> GSI 21 (level, low) -> IRQ 21
uhci_hcd 0000:00:1d.1: setting latency timer to 64
uhci_hcd 0000:00:1d.1: UHCI Host Controller
uhci_hcd 0000:00:1d.1: new USB bus registered, assigned bus number 6
uhci_hcd 0000:00:1d.1: irq 21, io base 0x00006f60
usb usb6: configuration #1 chosen from 1 choice
hub 6-0:1.0: USB hub found
hub 6-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.2: PCI INT C -> GSI 22 (level, low) -> IRQ 22
uhci_hcd 0000:00:1d.2: setting latency timer to 64
uhci_hcd 0000:00:1d.2: UHCI Host Controller
uhci_hcd 0000:00:1d.2: new USB bus registered, assigned bus number 7
uhci_hcd 0000:00:1d.2: irq 22, io base 0x00006f40
usb usb7: configuration #1 chosen from 1 choice
hub 7-0:1.0: USB hub found
hub 7-0:1.0: 2 ports detected
Initializing USB Mass Storage driver...
usbcore: registered new interface driver usb-storage
USB Mass Storage support registered.
usbcore: registered new interface driver usbserial
usbserial: USB Serial Driver core
USB Serial support registered for Handspring Visor / Palm OS
USB Serial support registered for Sony Clie 3.5
USB Serial support registered for Sony Clie 5.0
usbcore: registered new interface driver visor
visor: USB HandSpring Visor / Palm OS driver
PNP: PS/2 Controller [PNP0303:KBC,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
rtc_cmos 00:03: RTC can wake from S4
rtc_cmos 00:03: rtc core: registered rtc_cmos as rtc0
rtc0: alarms up to one month, y3k, 114 bytes nvram, hpet irqs
cpuidle: using governor ladder
sdhci: Secure Digital Host Controller Interface driver
sdhci: Copyright(c) Pierre Ossman
sdhci-pci 0000:03:01.1: SDHCI controller found [1180:0822] (rev 22)
sdhci-pci 0000:03:01.1: PCI INT B -> GSI 18 (level, low) -> IRQ 18
mmc0: SDHCI controller on PCI [0000:03:01.1] using DMA
input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input3
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
usbhid: v2.6:USB HID core driver
Advanced Linux Sound Architecture Driver Version 1.0.20.
HDA Intel 0000:00:1b.0: PCI INT A -> GSI 21 (level, low) -> IRQ 21
HDA Intel 0000:00:1b.0: setting latency timer to 64
input: HDA Digital PCBeep as /devices/pci0000:00/0000:00:1b.0/input/input4
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ATA-8: SAMSUNG HM121HI, LZ100-10, max UDMA7
ata1.00: 234441648 sectors, multi 8: LBA48 NCQ (depth 31/32)
ata1.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      SAMSUNG HM121HI  LZ10 PQ: 0 ANSI: 5
sd 0:0:0:0: [sda] 234441648 512-byte hardware sectors: (120 GB/111 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sda:<6>usb 2-6: new high speed USB device using ehci_hcd and address 2
 sda1 sda2 sda3 <<4>Clocksource tsc unstable (delta = -167101793 ns)
 sda5<6>input: HDA Intel Mic at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input5
input: HDA Intel HP Out at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input6
input: HDA Intel HP Out at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input7
 sda6 >
sd 0:0:0:0: [sda] Attached SCSI disk
ALSA device list:
  #0: HDA Intel at 0xf6ffc000 irq 21
TCP cubic registered
NET: Registered protocol family 17
usb 2-6: configuration #1 chosen from 1 choice
Synaptics Touchpad, model: 1, fw: 6.3, id: 0x1c0b1, caps: 0xa04753/0x200000
input: SynPS/2 Synaptics TouchPad as /devices/platform/i8042/serio1/input/input8
kjournald starting.  Commit interval 5 seconds
EXT3-fs: mounted filesystem with writeback data mode.
VFS: Mounted root (ext3 filesystem) readonly on device 8:5.
Freeing unused kernel memory: 340k freed
EXT3 FS on sda5, internal journal
NTFS volume version 3.1.
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
wlan0: authenticate with AP 00:13:5f:55:d3:c0
wlan0: authenticated
wlan0: associate with AP 00:13:5f:55:d3:c0
wlan0: associate with AP 00:13:5f:55:d3:c0
wlan0: deauthenticated (Reason: 2)
wlan0: direct probe to AP 00:13:5f:55:d3:c0 try 1
wlan0 direct probe responded
wlan0: authenticate with AP 00:13:5f:55:d3:c0
wlan0: authenticated
wlan0: associate with AP 00:13:5f:55:d3:c0
wlan0: association with AP 00:13:5f:55:d3:c0 timed out
-------------- next part --------------
_~# uname -a
Linux xps 2.6.29 #4 SMP Sat Jun 6 00:40:15 PDT 2009 x86_64 GNU/Linux
_~# lspci -vvn | grep 43 -A7
03:01.2 0880: 1180:0843 (rev 12)
	Subsystem: 1028:0209
	Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 64, Cache Line Size: 64 bytes
	Interrupt: pin B routed to IRQ 4
	Region 0: Memory at f1aff500 (32-bit, non-prefetchable) [size=256]
	Capabilities: [80] Power Management version 2
--
0c:00.0 0280: 14e4:4311 (rev 01)
	Subsystem: 1028:0007
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-
	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 0, Cache Line Size: 64 bytes
	Interrupt: pin A routed to IRQ 17
	Region 0: Memory at f1ffc000 (32-bit, non-prefetchable) [size=16K]
	Capabilities: [40] Power Management version 2
--
	Kernel driver in use: b43-pci-bridge

_~# dmesg
Linux version 2.6.29 (vojta at xps) (gcc version 4.3.3 (Debian 4.3.3-10) ) #4 SMP Sat Jun 6 00:40:15 PDT 2009
Command line: BOOT_IMAGE=p ro root=805
KERNEL supported cpus:
  Intel GenuineIntel
  AMD AuthenticAMD
  Centaur CentaurHauls
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
 BIOS-e820: 000000000009f000 - 00000000000a0000 (reserved)
 BIOS-e820: 0000000000100000 - 000000007fe6d800 (usable)
 BIOS-e820: 000000007fe6d800 - 0000000080000000 (reserved)
 BIOS-e820: 00000000f8000000 - 00000000fc000000 (reserved)
 BIOS-e820: 00000000fec00000 - 00000000fec10000 (reserved)
 BIOS-e820: 00000000fed18000 - 00000000fed1c000 (reserved)
 BIOS-e820: 00000000fed20000 - 00000000fed90000 (reserved)
 BIOS-e820: 00000000feda0000 - 00000000feda6000 (reserved)
 BIOS-e820: 00000000fee00000 - 00000000fee10000 (reserved)
 BIOS-e820: 00000000ffe00000 - 0000000100000000 (reserved)
DMI 2.4 present.
last_pfn = 0x7fe6d max_arch_pfn = 0x100000000
init_memory_mapping: 0000000000000000-000000007fe6d000
 0000000000 - 007fe00000 page 2M
 007fe00000 - 007fe6d000 page 4k
kernel direct mapping tables up to 7fe6d000 @ 8000-c000
last_map_addr: 7fe6d000 end: 7fe6d000
ACPI: RSDP 000FBC00, 0024 (r2 DELL  )
ACPI: XSDT 7FE6F200, 005C (r1 DELL    M08     27D80B13 ASL        61)
ACPI: FACP 7FE6F09C, 00F4 (r4 DELL    M08     27D80B13 ASL        61)
FADT: X_PM1a_EVT_BLK.bit_width (16) does not match PM1_EVT_LEN (4)
ACPI: DSDT 7FE6F800, 5733 (r2 INT430 SYSFexxx     1001 INTL 20050624)
ACPI: FACS 7FE7E000, 0040
ACPI: HPET 7FE6F300, 0038 (r1 DELL    M08            1 ASL        61)
ACPI: APIC 7FE6F400, 0068 (r1 DELL    M08     27D80B13 ASL        47)
ACPI: MCFG 7FE6F3C0, 003E (r16 DELL    M08     27D80B13 ASL        61)
ACPI: SLIC 7FE6F49C, 0176 (r1 DELL    M08     27D80B13 ASL        61)
ACPI: BOOT 7FE6EFC0, 0028 (r1 DELL    M08     27D80B13 ASL        61)
ACPI: SSDT 7FE6DA82, 04CC (r1  PmRef    CpuPm     3000 INTL 20050624)
ACPI: Local APIC address 0xfee00000
(5 early reservations) ==> bootmem [0000000000 - 007fe6d000]
  #0 [0000000000 - 0000001000]   BIOS data page ==> [0000000000 - 0000001000]
  #1 [0000006000 - 0000008000]       TRAMPOLINE ==> [0000006000 - 0000008000]
  #2 [0000200000 - 0000781c84]    TEXT DATA BSS ==> [0000200000 - 0000781c84]
  #3 [000009f000 - 0000100000]    BIOS reserved ==> [000009f000 - 0000100000]
  #4 [0000008000 - 000000a000]          PGTABLE ==> [0000008000 - 000000a000]
 [ffffe20000000000-ffffe20001bfffff] PMD -> [ffff880001200000-ffff880002dfffff] on node 0
Zone PFN ranges:
  DMA      0x00000000 -> 0x00001000
  DMA32    0x00001000 -> 0x00100000
  Normal   0x00100000 -> 0x00100000
Movable zone start PFN for each node
early_node_map[2] active PFN ranges
    0: 0x00000000 -> 0x0000009f
    0: 0x00000100 -> 0x0007fe6d
On node 0 totalpages: 523788
  DMA zone: 56 pages used for memmap
  DMA zone: 1511 pages reserved
  DMA zone: 2432 pages, LIFO batch:0
  DMA32 zone: 7107 pages used for memmap
  DMA32 zone: 512682 pages, LIFO batch:31
ACPI: PM-Timer IO Port: 0x1008
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] enabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 2, version 0, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Using ACPI (MADT) for SMP configuration information
ACPI: HPET id: 0x8086a201 base: 0xfed00000
SMP: Allowing 2 CPUs, 0 hotplug CPUs
nr_irqs_gsi: 24
Allocating PCI resources starting at 88000000 (gap: 80000000:78000000)
NR_CPUS:2 nr_cpumask_bits:2 nr_cpu_ids:2 nr_node_ids:1
PERCPU: Allocating 45056 bytes of per cpu data
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 515114
Kernel command line: BOOT_IMAGE=p ro root=805
Initializing CPU#0
PID hash table entries: 4096 (order: 12, 32768 bytes)
Extended CMOS year: 2000
Fast TSC calibration using PIT
Detected 1496.101 MHz processor.
Console: colour VGA+ 80x25
console [tty0] enabled
Dentry cache hash table entries: 262144 (order: 9, 2097152 bytes)
Inode-cache hash table entries: 131072 (order: 8, 1048576 bytes)
Checking aperture...
No AGP bridge found
Memory: 2057040k/2095540k available (3520k kernel code, 388k absent, 37624k reserved, 1383k data, 304k init)
SLUB: Genslabs=12, HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
hpet clockevent registered
Calibrating delay loop (skipped), value calculated using timer frequency.. 2992.20 BogoMIPS (lpj=5984404)
Mount-cache hash table entries: 256
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 2048K
[ds] using Core 2/Atom configuration
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 0
CPU0: Thermal monitoring enabled (TM2)
using mwait in idle threads.
ACPI: Core revision 20081204
Setting APIC routing to flat
..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
CPU0: Intel(R) Core(TM)2 Duo CPU     T5250  @ 1.50GHz stepping 0d
Booting processor 1 APIC 0x1 ip 0x6000
Initializing CPU#1
Calibrating delay using timer specific routine.. 2992.45 BogoMIPS (lpj=5984901)
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 2048K
[ds] using Core 2/Atom configuration
CPU: Physical Processor ID: 0
CPU: Processor Core ID: 1
CPU1: Thermal monitoring enabled (TM2)
CPU1: Intel(R) Core(TM)2 Duo CPU     T5250  @ 1.50GHz stepping 0d
checking TSC synchronization [CPU#0 -> CPU#1]: passed.
Brought up 2 CPUs
Total of 2 processors activated (5984.65 BogoMIPS).
net_namespace: 560 bytes
NET: Registered protocol family 16
ACPI: bus type pci registered
PCI: MCFG configuration 0: base f8000000 segment 0 buses 0 - 63
PCI: MCFG area at f8000000 reserved in E820
PCI: Using MMCONFIG at f8000000 - fbffffff
PCI: Using configuration type 1 for base access
bio: create slab <bio-0> at 0
ACPI: EC: Look up EC in DSDT
ACPI: SSDT 7FE7E080, 0043 (r1  LMPWR  DELLLOM     1001 INTL 20050624)
ACPI: Interpreter enabled
ACPI: (supports S0 S3 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: PCI Root Bridge [PCI0] (0000:00)
pci 0000:00:01.0: PME# supported from D0 D3hot D3cold
pci 0000:00:01.0: PME# disabled
pci 0000:00:1a.0: reg 20 io port: [0x6f20-0x6f3f]
pci 0000:00:1a.1: reg 20 io port: [0x6f00-0x6f1f]
pci 0000:00:1a.7: reg 10 32bit mmio: [0xfed1c400-0xfed1c7ff]
pci 0000:00:1a.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1a.7: PME# disabled
pci 0000:00:1b.0: reg 10 64bit mmio: [0xf6ffc000-0xf6ffffff]
pci 0000:00:1b.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1b.0: PME# disabled
pci 0000:00:1c.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.0: PME# disabled
pci 0000:00:1c.1: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.1: PME# disabled
pci 0000:00:1c.3: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.3: PME# disabled
pci 0000:00:1c.5: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.5: PME# disabled
pci 0000:00:1d.0: reg 20 io port: [0x6f80-0x6f9f]
pci 0000:00:1d.1: reg 20 io port: [0x6f60-0x6f7f]
pci 0000:00:1d.2: reg 20 io port: [0x6f40-0x6f5f]
pci 0000:00:1d.7: reg 10 32bit mmio: [0xfed1c000-0xfed1c3ff]
pci 0000:00:1d.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1d.7: PME# disabled
pci 0000:00:1f.0: quirk: region 1000-107f claimed by ICH6 ACPI/GPIO/TCO
pci 0000:00:1f.0: quirk: region 1080-10bf claimed by ICH6 GPIO
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 1 PIO at 0900 (mask 007f)
pci 0000:00:1f.0: ICH7 LPC Generic IO decode 3 PIO at 0c80 (mask 003f)
pci 0000:00:1f.1: reg 10 io port: [0x1f0-0x1f7]
pci 0000:00:1f.1: reg 14 io port: [0x3f4-0x3f7]
pci 0000:00:1f.1: reg 18 io port: [0x170-0x177]
pci 0000:00:1f.1: reg 1c io port: [0x374-0x377]
pci 0000:00:1f.1: reg 20 io port: [0x6fa0-0x6faf]
pci 0000:00:1f.2: reg 10 io port: [0x6eb0-0x6eb7]
pci 0000:00:1f.2: reg 14 io port: [0x6eb8-0x6ebb]
pci 0000:00:1f.2: reg 18 io port: [0x6ec0-0x6ec7]
pci 0000:00:1f.2: reg 1c io port: [0x6ec8-0x6ecb]
pci 0000:00:1f.2: reg 20 io port: [0x6ee0-0x6eff]
pci 0000:00:1f.2: reg 24 32bit mmio: [0xf6ffb800-0xf6ffbfff]
pci 0000:00:1f.2: PME# supported from D3hot
pci 0000:00:1f.2: PME# disabled
pci 0000:00:1f.3: reg 10 32bit mmio: [0xf6ffb700-0xf6ffb7ff]
pci 0000:00:1f.3: reg 20 io port: [0x10c0-0x10df]
pci 0000:01:00.0: reg 10 32bit mmio: [0xf5000000-0xf5ffffff]
pci 0000:01:00.0: reg 14 64bit mmio: [0xe0000000-0xefffffff]
pci 0000:01:00.0: reg 1c 64bit mmio: [0xf2000000-0xf3ffffff]
pci 0000:01:00.0: reg 24 io port: [0xef00-0xef7f]
pci 0000:01:00.0: reg 30 32bit mmio: [0x000000-0x01ffff]
pci 0000:00:01.0: bridge io port: [0xe000-0xefff]
pci 0000:00:01.0: bridge 32bit mmio: [0xf2000000-0xf6efffff]
pci 0000:00:01.0: bridge 64bit mmio pref: [0xe0000000-0xefffffff]
pci 0000:0c:00.0: reg 10 32bit mmio: [0xf1ffc000-0xf1ffffff]
pci 0000:0c:00.0: supports D1 D2
pci 0000:00:1c.1: bridge 32bit mmio: [0xf1f00000-0xf1ffffff]
pci 0000:00:1c.3: bridge io port: [0xd000-0xdfff]
pci 0000:00:1c.3: bridge 32bit mmio: [0xf1c00000-0xf1efffff]
pci 0000:00:1c.3: bridge 64bit mmio pref: [0xf0000000-0xf01fffff]
pci 0000:09:00.0: reg 10 64bit mmio: [0xf1bf0000-0xf1bfffff]
pci 0000:09:00.0: PME# supported from D3hot D3cold
pci 0000:09:00.0: PME# disabled
pci 0000:00:1c.5: bridge 32bit mmio: [0xf1b00000-0xf1bfffff]
pci 0000:03:01.0: reg 10 32bit mmio: [0xf1aff800-0xf1afffff]
pci 0000:03:01.0: supports D1 D2
pci 0000:03:01.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.0: PME# disabled
pci 0000:03:01.1: reg 10 32bit mmio: [0xf1aff400-0xf1aff4ff]
pci 0000:03:01.1: supports D1 D2
pci 0000:03:01.1: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.1: PME# disabled
pci 0000:03:01.2: reg 10 32bit mmio: [0xf1aff500-0xf1aff5ff]
pci 0000:03:01.2: supports D1 D2
pci 0000:03:01.2: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.2: PME# disabled
pci 0000:03:01.3: reg 10 32bit mmio: [0xf1aff600-0xf1aff6ff]
pci 0000:03:01.3: supports D1 D2
pci 0000:03:01.3: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.3: PME# disabled
pci 0000:03:01.4: reg 10 32bit mmio: [0xf1aff700-0xf1aff7ff]
pci 0000:03:01.4: supports D1 D2
pci 0000:03:01.4: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:03:01.4: PME# disabled
pci 0000:00:1e.0: transparent bridge
pci 0000:00:1e.0: bridge 32bit mmio: [0xf1a00000-0xf1afffff]
pci_bus 0000:00: on NUMA node 0
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PCIE._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.AGP_._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP01._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP02._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP04._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP06._PRT]
ACPI: PCI Interrupt Link [LNKA] (IRQs 9 10 11) *7
ACPI: PCI Interrupt Link [LNKB] (IRQs 5 7) *10
ACPI: PCI Interrupt Link [LNKC] (IRQs 9 10 11) *4
ACPI: PCI Interrupt Link [LNKD] (IRQs *5 7 9 10 11)
ACPI: PCI Interrupt Link [LNKE] (IRQs 3 4 5 6 7 9 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNKF] (IRQs 3 4 5 6 7 9 *10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKG] (IRQs 3 4 5 6 7 *9 10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKH] (IRQs 3 4 5 6 7 9 10 11 12 14 15) *0, disabled.
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: US
	(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
	(2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
	(5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
	(5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
cfg80211: Calling CRDA for country: US
hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
hpet0: 3 comparators, 64-bit 14.318180 MHz counter
pnp: PnP ACPI init
ACPI: bus type pnp registered
pnp 00:09: io resource (0x1000-0x1005) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:09: io resource (0x1008-0x100f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1006-0x1007) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x100a-0x1059) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1060-0x107f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp 00:0a: io resource (0x1010-0x102f) overlaps 0000:00:1f.0 BAR 7 (0x1000-0x107f), disabling
pnp: PnP ACPI: found 12 devices
ACPI: ACPI bus type pnp unregistered
system 00:05: ioport range 0xc80-0xcff could not be reserved
system 00:08: iomem range 0xfed00000-0xfed003ff has been reserved
system 00:09: ioport range 0x900-0x97f has been reserved
system 00:09: ioport range 0x4d0-0x4d1 has been reserved
system 00:0a: ioport range 0xf400-0xf4fe has been reserved
system 00:0a: ioport range 0x1080-0x10bf has been reserved
system 00:0a: ioport range 0x10c0-0x10df has been reserved
system 00:0a: ioport range 0x809-0x809 has been reserved
system 00:0b: iomem range 0x0-0x9efff could not be reserved
system 00:0b: iomem range 0x9f000-0x9ffff could not be reserved
system 00:0b: iomem range 0xc0000-0xcffff has been reserved
system 00:0b: iomem range 0xe0000-0xfffff has been reserved
system 00:0b: iomem range 0x100000-0x7fe6d7ff could not be reserved
system 00:0b: iomem range 0x7fe6d800-0x7fefffff has been reserved
system 00:0b: iomem range 0x7ff00000-0x7fffffff has been reserved
system 00:0b: iomem range 0x7ff00000-0x806fffff could not be reserved
system 00:0b: iomem range 0xffe00000-0xffffffff has been reserved
system 00:0b: iomem range 0xffa00000-0xffbfffff has been reserved
system 00:0b: iomem range 0xfec00000-0xfec0ffff has been reserved
system 00:0b: iomem range 0xfee00000-0xfee0ffff has been reserved
system 00:0b: iomem range 0xfed20000-0xfed8ffff has been reserved
system 00:0b: iomem range 0xfeda0000-0xfeda3fff has been reserved
system 00:0b: iomem range 0xfeda4000-0xfeda4fff has been reserved
system 00:0b: iomem range 0xfeda5000-0xfeda5fff has been reserved
system 00:0b: iomem range 0xfeda6000-0xfeda6fff has been reserved
system 00:0b: iomem range 0xfed18000-0xfed1bfff has been reserved
system 00:0b: iomem range 0xf8000000-0xfbffffff has been reserved
b43-pci-bridge 0000:0c:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
b43-pci-bridge 0000:0c:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:0c:00.0
pci 0000:00:01.0: PCI bridge, secondary bus 0000:01
pci 0000:00:01.0:   IO window: 0xe000-0xefff
pci 0000:00:01.0:   MEM window: 0xf2000000-0xf6efffff
pci 0000:00:01.0:   PREFETCH window: 0x000000e0000000-0x000000efffffff
pci 0000:00:1c.0: PCI bridge, secondary bus 0000:0b
pci 0000:00:1c.0:   IO window: disabled
pci 0000:00:1c.0:   MEM window: disabled
pci 0000:00:1c.0:   PREFETCH window: disabled
pci 0000:00:1c.1: PCI bridge, secondary bus 0000:0c
pci 0000:00:1c.1:   IO window: disabled
pci 0000:00:1c.1:   MEM window: 0xf1f00000-0xf1ffffff
pci 0000:00:1c.1:   PREFETCH window: disabled
pci 0000:00:1c.3: PCI bridge, secondary bus 0000:0d
pci 0000:00:1c.3:   IO window: 0xd000-0xdfff
pci 0000:00:1c.3:   MEM window: 0xf1c00000-0xf1efffff
pci 0000:00:1c.3:   PREFETCH window: 0x000000f0000000-0x000000f01fffff
pci 0000:00:1c.5: PCI bridge, secondary bus 0000:09
pci 0000:00:1c.5:   IO window: disabled
pci 0000:00:1c.5:   MEM window: 0xf1b00000-0xf1bfffff
pci 0000:00:1c.5:   PREFETCH window: disabled
pci 0000:00:1e.0: PCI bridge, secondary bus 0000:03
pci 0000:00:1e.0:   IO window: disabled
pci 0000:00:1e.0:   MEM window: 0xf1a00000-0xf1afffff
pci 0000:00:1e.0:   PREFETCH window: disabled
pci 0000:00:01.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:01.0: setting latency timer to 64
pci 0000:00:1c.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:1c.0: setting latency timer to 64
pci 0000:00:1c.1: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.1: setting latency timer to 64
pci 0000:00:1c.3: PCI INT D -> GSI 19 (level, low) -> IRQ 19
pci 0000:00:1c.3: setting latency timer to 64
pci 0000:00:1c.5: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.5: setting latency timer to 64
pci 0000:00:1e.0: setting latency timer to 64
pci_bus 0000:00: resource 0 io:  [0x00-0xffff]
pci_bus 0000:00: resource 1 mem: [0x000000-0xffffffffffffffff]
pci_bus 0000:01: resource 0 io:  [0xe000-0xefff]
pci_bus 0000:01: resource 1 mem: [0xf2000000-0xf6efffff]
pci_bus 0000:01: resource 2 mem: [0xe0000000-0xefffffff]
pci_bus 0000:01: resource 3 mem: [0x0-0x0]
pci_bus 0000:0b: resource 0 mem: [0x0-0x0]
pci_bus 0000:0b: resource 1 mem: [0x0-0x0]
pci_bus 0000:0b: resource 2 mem: [0x0-0x0]
pci_bus 0000:0b: resource 3 mem: [0x0-0x0]
pci_bus 0000:0c: resource 0 mem: [0x0-0x0]
pci_bus 0000:0c: resource 1 mem: [0xf1f00000-0xf1ffffff]
pci_bus 0000:0c: resource 2 mem: [0x0-0x0]
pci_bus 0000:0c: resource 3 mem: [0x0-0x0]
pci_bus 0000:0d: resource 0 io:  [0xd000-0xdfff]
pci_bus 0000:0d: resource 1 mem: [0xf1c00000-0xf1efffff]
pci_bus 0000:0d: resource 2 mem: [0xf0000000-0xf01fffff]
pci_bus 0000:0d: resource 3 mem: [0x0-0x0]
pci_bus 0000:09: resource 0 mem: [0x0-0x0]
pci_bus 0000:09: resource 1 mem: [0xf1b00000-0xf1bfffff]
pci_bus 0000:09: resource 2 mem: [0x0-0x0]
pci_bus 0000:09: resource 3 mem: [0x0-0x0]
pci_bus 0000:03: resource 0 mem: [0x0-0x0]
pci_bus 0000:03: resource 1 mem: [0xf1a00000-0xf1afffff]
pci_bus 0000:03: resource 2 mem: [0x0-0x0]
pci_bus 0000:03: resource 3 io:  [0x00-0xffff]
pci_bus 0000:03: resource 4 mem: [0x000000-0xffffffffffffffff]
NET: Registered protocol family 2
IP route cache hash table entries: 65536 (order: 7, 524288 bytes)
TCP established hash table entries: 262144 (order: 10, 4194304 bytes)
TCP bind hash table entries: 65536 (order: 8, 1048576 bytes)
TCP: Hash tables configured (established 262144 bind 65536)
TCP reno registered
NET: Registered protocol family 1
Simple Boot Flag at 0x79 set to 0x1
NTFS driver 2.1.29 [Flags: R/O].
msgmni has been set to 4018
alg: No test for stdrng (krng)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
pci 0000:01:00.0: Boot video device
ACPI: AC Adapter [AC] (on-line)
ACPI: Battery Slot [BAT0] (battery present)
input: Lid Switch as /devices/LNXSYSTM:00/device:00/PNP0C0D:00/input/input0
ACPI: Lid Switch [LID]
input: Power Button (CM) as /devices/LNXSYSTM:00/device:00/PNP0C0C:00/input/input1
ACPI: Power Button (CM) [PBTN]
input: Sleep Button (CM) as /devices/LNXSYSTM:00/device:00/PNP0C0E:00/input/input2
ACPI: Sleep Button (CM) [SBTN]
ACPI: SSDT 7FE6E5B8, 01C0 (r1  PmRef  Cpu0Ist     3000 INTL 20050624)
ACPI: SSDT 7FE6DF4E, 05E5 (r1  PmRef  Cpu0Cst     3001 INTL 20050624)
Monitor-Mwait will be used to enter C-1 state
Monitor-Mwait will be used to enter C-2 state
Monitor-Mwait will be used to enter C-3 state
ACPI: CPU0 (power states: C1[C1] C2[C2] C3[C3])
processor ACPI_CPU:00: registered as cooling_device0
ACPI: Processor [CPU0] (supports 8 throttling states)
ACPI: SSDT 7FE6E778, 00C4 (r1  PmRef  Cpu1Ist     3000 INTL 20050624)
ACPI: SSDT 7FE6E533, 0085 (r1  PmRef  Cpu1Cst     3000 INTL 20050624)
ACPI: CPU1 (power states: C1[C1] C2[C2] C3[C3])
processor ACPI_CPU:01: registered as cooling_device1
ACPI: Processor [CPU1] (supports 8 throttling states)
thermal LNXTHERM:01: registered as thermal_zone0
ACPI: Thermal Zone [THM] (32 C)
Linux agpgart interface v0.103
loop: module loaded
tg3.c:v3.97 (December 10, 2008)
tg3 0000:09:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
tg3 0000:09:00.0: setting latency timer to 64
tg3 0000:09:00.0: PME# disabled
eth0: Tigon3 [partno(BCM95906) rev c002] (PCI Express) MAC address 00:23:ae:29:78:d9
eth0: attached PHY is 5906 (10/100Base-TX Ethernet) (WireSpeed[0])
eth0: RXcsums[1] LinkChgREG[0] MIirq[0] ASF[0] TSOcap[0]
eth0: dma_rwctrl[76180000] dma_mask[64-bit]
PPP generic driver version 2.4.2
b43-phy0: Broadcom 4311 WLAN found
b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
wmaster0 (b43): not using net_device_ops yet
phy0: Selected rate control algorithm 'minstrel'
wlan0 (b43): not using net_device_ops yet
Broadcom 43xx driver loaded [ Features: P, Firmware-ID: FW13 ]
Uniform Multi-Platform E-IDE driver
piix 0000:00:1f.1: IDE controller (0x8086:0x2850 rev 0x02)
PIIX_IDE 0000:00:1f.1: PCI INT A -> GSI 16 (level, low) -> IRQ 16
piix 0000:00:1f.1: IDE port disabled
piix 0000:00:1f.1: not 100% native mode: will probe irqs later
    ide0: BM-DMA at 0x6fa0-0x6fa7
Probing IDE interface ide0...
hda: MATSHITA DVD+/-RW UJ-857G, ATAPI CD/DVD-ROM drive
hda: host max PIO4 wanted PIO255(auto-tune) selected PIO4
hda: UDMA/33 mode selected
ide0 at 0x1f0-0x1f7,0x3f6 on irq 14
ide-gd driver 1.18
ide-cd driver 5.00
ide-cd: hda: ATAPI 24X DVD-ROM DVD-R CD-R/RW drive, 2048kB Cache
Uniform CD-ROM driver Revision: 3.20
Driver 'sd' needs updating - please use bus_type methods
ahci 0000:00:1f.2: version 3.0
ahci 0000:00:1f.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
ahci 0000:00:1f.2: AHCI 0001.0100 32 slots 3 ports 3 Gbps 0x5 impl SATA mode
ahci 0000:00:1f.2: flags: 64bit ncq sntf pm led clo pio slum part ems 
ahci 0000:00:1f.2: setting latency timer to 64
scsi0 : ahci
scsi1 : ahci
scsi2 : ahci
ata1: SATA max UDMA/133 irq_stat 0x00000040, connection status changed irq 17
ata2: DUMMY
ata3: SATA max UDMA/133 abar m2048 at 0xf6ffb800 port 0xf6ffba00 irq 17
ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata1.00: ATA-8: SAMSUNG HM121HI, LZ100-10, max UDMA7
ata1.00: 234441648 sectors, multi 8: LBA48 NCQ (depth 31/32)
ata1.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      SAMSUNG HM121HI  LZ10 PQ: 0 ANSI: 5
sd 0:0:0:0: [sda] 234441648 512-byte hardware sectors: (120 GB/111 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
sd 0:0:0:0: [sda] 234441648 512-byte hardware sectors: (120 GB/111 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sda: sda1 sda2 sda3 < sda5 sda6 >
sd 0:0:0:0: [sda] Attached SCSI disk
ata3: SATA link down (SStatus 0 SControl 300)
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci_hcd 0000:00:1a.7: PCI INT C -> GSI 22 (level, low) -> IRQ 22
ehci_hcd 0000:00:1a.7: setting latency timer to 64
ehci_hcd 0000:00:1a.7: EHCI Host Controller
ehci_hcd 0000:00:1a.7: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:1a.7: debug port 1
ehci_hcd 0000:00:1a.7: cache line size of 32 is not supported
ehci_hcd 0000:00:1a.7: irq 22, io mem 0xfed1c400
ehci_hcd 0000:00:1a.7: USB 2.0 started, EHCI 1.00
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 4 ports detected
ehci_hcd 0000:00:1d.7: PCI INT A -> GSI 20 (level, low) -> IRQ 20
ehci_hcd 0000:00:1d.7: setting latency timer to 64
ehci_hcd 0000:00:1d.7: EHCI Host Controller
ehci_hcd 0000:00:1d.7: new USB bus registered, assigned bus number 2
ehci_hcd 0000:00:1d.7: debug port 1
ehci_hcd 0000:00:1d.7: cache line size of 32 is not supported
ehci_hcd 0000:00:1d.7: irq 20, io mem 0xfed1c000
ehci_hcd 0000:00:1d.7: USB 2.0 started, EHCI 1.00
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 6 ports detected
uhci_hcd: USB Universal Host Controller Interface driver
uhci_hcd 0000:00:1a.0: PCI INT A -> GSI 20 (level, low) -> IRQ 20
uhci_hcd 0000:00:1a.0: setting latency timer to 64
uhci_hcd 0000:00:1a.0: UHCI Host Controller
uhci_hcd 0000:00:1a.0: new USB bus registered, assigned bus number 3
uhci_hcd 0000:00:1a.0: irq 20, io base 0x00006f20
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 2 ports detected
uhci_hcd 0000:00:1a.1: PCI INT B -> GSI 21 (level, low) -> IRQ 21
uhci_hcd 0000:00:1a.1: setting latency timer to 64
uhci_hcd 0000:00:1a.1: UHCI Host Controller
uhci_hcd 0000:00:1a.1: new USB bus registered, assigned bus number 4
uhci_hcd 0000:00:1a.1: irq 21, io base 0x00006f00
usb usb4: configuration #1 chosen from 1 choice
hub 4-0:1.0: USB hub found
hub 4-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.0: PCI INT A -> GSI 20 (level, low) -> IRQ 20
uhci_hcd 0000:00:1d.0: setting latency timer to 64
uhci_hcd 0000:00:1d.0: UHCI Host Controller
uhci_hcd 0000:00:1d.0: new USB bus registered, assigned bus number 5
uhci_hcd 0000:00:1d.0: irq 20, io base 0x00006f80
usb usb5: configuration #1 chosen from 1 choice
hub 5-0:1.0: USB hub found
hub 5-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.1: PCI INT B -> GSI 21 (level, low) -> IRQ 21
uhci_hcd 0000:00:1d.1: setting latency timer to 64
uhci_hcd 0000:00:1d.1: UHCI Host Controller
uhci_hcd 0000:00:1d.1: new USB bus registered, assigned bus number 6
uhci_hcd 0000:00:1d.1: irq 21, io base 0x00006f60
usb usb6: configuration #1 chosen from 1 choice
hub 6-0:1.0: USB hub found
hub 6-0:1.0: 2 ports detected
uhci_hcd 0000:00:1d.2: PCI INT C -> GSI 22 (level, low) -> IRQ 22
uhci_hcd 0000:00:1d.2: setting latency timer to 64
uhci_hcd 0000:00:1d.2: UHCI Host Controller
uhci_hcd 0000:00:1d.2: new USB bus registered, assigned bus number 7
uhci_hcd 0000:00:1d.2: irq 22, io base 0x00006f40
usb usb7: configuration #1 chosen from 1 choice
hub 7-0:1.0: USB hub found
hub 7-0:1.0: 2 ports detected
Initializing USB Mass Storage driver...
usbcore: registered new interface driver usb-storage
USB Mass Storage support registered.
usbcore: registered new interface driver usbserial
usbserial: USB Serial Driver core
USB Serial support registered for Handspring Visor / Palm OS
USB Serial support registered for Sony Clie 3.5
USB Serial support registered for Sony Clie 5.0
usbcore: registered new interface driver visor
visor: USB HandSpring Visor / Palm OS driver
PNP: PS/2 Controller [PNP0303:KBC,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
input: PC Speaker as /devices/platform/pcspkr/input/input3
input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input4
rtc_cmos 00:03: RTC can wake from S4
rtc_cmos 00:03: rtc core: registered rtc_cmos as rtc0
rtc0: alarms up to one month, y3k, 114 bytes nvram, hpet irqs
cpuidle: using governor ladder
sdhci: Secure Digital Host Controller Interface driver
sdhci: Copyright(c) Pierre Ossman
sdhci-pci 0000:03:01.1: SDHCI controller found [1180:0822] (rev 22)
sdhci-pci 0000:03:01.1: PCI INT B -> GSI 18 (level, low) -> IRQ 18
mmc0: SDHCI controller on PCI [0000:03:01.1] using DMA
Marking TSC unstable due to TSC halts in idle
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
usbhid: v2.6:USB HID core driver
Advanced Linux Sound Architecture Driver Version 1.0.18a.
HDA Intel 0000:00:1b.0: PCI INT A -> GSI 21 (level, low) -> IRQ 21
HDA Intel 0000:00:1b.0: setting latency timer to 64
input: HDA Digital PCBeep as /devices/pci0000:00/0000:00:1b.0/input/input5
usb 2-6: new high speed USB device using ehci_hcd and address 2
usb 2-6: configuration #1 chosen from 1 choice
input: HDA Intel Mic at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input6
input: HDA Intel HP Out at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input7
input: HDA Intel HP Out at Ext Front Jack as /devices/pci0000:00/0000:00:1b.0/input/input8
ALSA device list:
  #0: HDA Intel at 0xf6ffc000 irq 21
TCP cubic registered
NET: Registered protocol family 17
Clocksource tsc unstable (delta = -215558766 ns)
Synaptics Touchpad, model: 1, fw: 6.3, id: 0x1c0b1, caps: 0xa04753/0x200000
input: SynPS/2 Synaptics TouchPad as /devices/platform/i8042/serio1/input/input9
kjournald starting.  Commit interval 5 seconds
EXT3-fs: mounted filesystem with ordered data mode.
VFS: Mounted root (ext3 filesystem) readonly on device 8:5.
Freeing unused kernel memory: 304k freed
EXT3 FS on sda5, internal journal
NTFS volume version 3.1.
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
wlan0: authenticate with AP 00:13:5f:55:d3:c0
wlan0: authenticated
wlan0: associate with AP 00:13:5f:55:d3:c0
wlan0: RX AssocResp from 00:13:5f:55:d3:c0 (capab=0x421 status=0 aid=93)
wlan0: associated

From facorread at gmail.com  Fri Jul  3 00:08:03 2009
From: facorread at gmail.com (Fabio A. Correa)
Date: Thu, 2 Jul 2009 17:08:03 -0500
Subject: b43: does not connect with essid=any
In-Reply-To: <20090702215833.GA16327@math.berkeley.edu>
References: <20090702214824.GA16277@math.berkeley.edu>
	<20090702215833.GA16327@math.berkeley.edu>
Message-ID: <ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>

Hello Paul, we are into the same issue with the 4311 card. Please
check the thread

"4311 not detected at all"

which is available in the Archives:

http://lists.berlios.de/pipermail/bcm43xx-dev/2009-June/thread.html#8981
https://lists.berlios.de/pipermail/bcm43xx-dev/2009-July/thread.html#9025

Maybe you also forgot to ad the b43 RFKILL button support in the kernel.

2009/7/2 Paul Vojta <vojta at math.berkeley.edu>:
> Oops, I forgot to attach the files.
>
> --Paul Vojta
>
>
> On Thu, Jul 02, 2009 at 02:48:24PM -0700, Paul Vojta wrote:
>> Folks:
>>
>> In recent kernels (2.6.30 and 2.6.31-rc1-git8, but not 2.6.29) I am no longer
>> able to connect to a wireless access point with essid=any. ?...
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev

-- 
Fabio Andr?s Correa Dur?n
http://facorread.150m.com


From vojta at math.berkeley.edu  Thu Jul  2 23:48:24 2009
From: vojta at math.berkeley.edu (Paul Vojta)
Date: Thu, 2 Jul 2009 14:48:24 -0700
Subject: b43: does not connect with essid=any
Message-ID: <20090702214824.GA16277@math.berkeley.edu>

Folks:

In recent kernels (2.6.30 and 2.6.31-rc1-git8, but not 2.6.29) I am no longer
able to connect to a wireless access point with essid=any.  Instead, I get
"No DHCPOFFERS received."

I have attached outputs from uname -a, lspci ..., and dmesg for 2.6.30
(where the bug occurs) and 2.6.29 (where the connection was successful).

Authentication on the wlan is by starting up a browser and getting redirected
to a login page (which I can't do under 2.6.30 because I never connect).

How to reproduce:  Set essid=any and try to connect to an access point.

I have read the bug-reporting instructions at
http://linuxwireless.org/en/users/Drivers/b43#bug_reporting and
believe that I've answered the questions to the best of my ability
(except that I'm not sure what a bisection is...).

I am using Debian unstable, but compile the kernels myself, using sources
from kernel.org (I've patched one of the sound drivers, but that shouldn't
affect b43).

I am using the same (Debian) user-space tools in each case.  I connect
using "sudo ifup wlan0", with the stanza

	iface wlan0 inet dhcp
		wireless-essid any

in /etc/network/interfaces.

Your help would be much appreciated.

Sincerely,


Paul Vojta
vojta at math.berkeley.edu


From vojta at math.berkeley.edu  Fri Jul  3 01:23:54 2009
From: vojta at math.berkeley.edu (Paul Vojta)
Date: Thu, 2 Jul 2009 16:23:54 -0700
Subject: b43: does not connect with essid=any
In-Reply-To: <ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>
References: <20090702214824.GA16277@math.berkeley.edu>
	<20090702215833.GA16327@math.berkeley.edu>
	<ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>
Message-ID: <20090702232354.GA2519@math.berkeley.edu>

Fabio:

I recompiled with RFKILL and RFKILL_INPUT ... same results.

It doesn't seem to be the same problem as you are experiencing.  In my
case the kernel recognizes the 4311 chip.

In fact (and I forgot to mention this) I am able to connect if I explicitly
give the essid.  I'm doing it right now.

--Paul Vojta, vojta at math.berkeley.edu


On Thu, Jul 02, 2009 at 05:08:03PM -0500, Fabio A. Correa wrote:
> Hello Paul, we are into the same issue with the 4311 card. Please
> check the thread
> 
> "4311 not detected at all"
> 
> which is available in the Archives:
> 
> http://lists.berlios.de/pipermail/bcm43xx-dev/2009-June/thread.html#8981
> https://lists.berlios.de/pipermail/bcm43xx-dev/2009-July/thread.html#9025
> 
> Maybe you also forgot to ad the b43 RFKILL button support in the kernel.
> 
> 2009/7/2 Paul Vojta <vojta at math.berkeley.edu>:
> > Oops, I forgot to attach the files.
> >
> > --Paul Vojta
> >
> >
> > On Thu, Jul 02, 2009 at 02:48:24PM -0700, Paul Vojta wrote:
> >> Folks:
> >>
> >> In recent kernels (2.6.30 and 2.6.31-rc1-git8, but not 2.6.29) I am no longer
> >> able to connect to a wireless access point with essid=any. ?...


From facorread at gmail.com  Fri Jul  3 01:48:43 2009
From: facorread at gmail.com (Fabio A. Correa)
Date: Thu, 2 Jul 2009 18:48:43 -0500
Subject: b43: does not connect with essid=any
In-Reply-To: <20090702232354.GA2519@math.berkeley.edu>
References: <20090702214824.GA16277@math.berkeley.edu>
	<20090702215833.GA16327@math.berkeley.edu>
	<ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>
	<20090702232354.GA2519@math.berkeley.edu>
Message-ID: <ec2083b20907021648k542cc8b3p7e86d0569628dbfb@mail.gmail.com>

2009/7/2 Paul Vojta <vojta at math.berkeley.edu>:
> I recompiled with RFKILL and RFKILL_INPUT ... same results.
>
> It doesn't seem to be the same problem as you are experiencing. ?In my
> case the kernel recognizes the 4311 chip.
>
> In fact (and I forgot to mention this) I am able to connect if I explicitly
> give the essid. ?I'm doing it right now.

You are right. our problems are different, because I was unable to
connect to my open network, even without explicit ssid, bssid.

Would yo do a great favor to me? Send me your .config and your
wpa_supplicant.conf (without the passwords, of course); I would love
to connect just as you do. Thank you very much.


From facorread at gmail.com  Fri Jul  3 16:06:30 2009
From: facorread at gmail.com (Fabio A. Correa)
Date: Fri, 3 Jul 2009 09:06:30 -0500
Subject: b43: does not connect with essid=any
In-Reply-To: <ec2083b20907021648k542cc8b3p7e86d0569628dbfb@mail.gmail.com>
References: <20090702214824.GA16277@math.berkeley.edu>
	<20090702215833.GA16327@math.berkeley.edu>
	<ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>
	<20090702232354.GA2519@math.berkeley.edu>
	<ec2083b20907021648k542cc8b3p7e86d0569628dbfb@mail.gmail.com>
Message-ID: <ec2083b20907030706o2ee30310yff9c62c62617c1ad@mail.gmail.com>

In the .config file you sent me I realize your RFKILL button is not
enabled to work with the b43 driver.

In order to work with it, I recommend you enable the following setting
in the 2.6.30 kernel configuration program (make menuconfig, make
gconfig, etc):

-> Device Drivers
    -> Input device support
        -> Generic input layer (needed for keyboard, mouse, ...)
            -> Polled input device skeleton

You can read about the B43_RFKILL symbol in
drivers/net/wireless/b43/Kconfig:104. In order to check tat B43_RFKILL
is enabled, you can use

grep B43_RFKILL /boot/config

Also, please send me your /etc/network/interfaces (without your
passwords). Thanks.

-- 
Fabio Andr?s Correa Dur?n
http://facorread.150m.com


From vojta at math.berkeley.edu  Sat Jul  4 00:09:55 2009
From: vojta at math.berkeley.edu (Paul Vojta)
Date: Fri, 3 Jul 2009 15:09:55 -0700
Subject: b43: does not connect with essid=any
In-Reply-To: <ec2083b20907030706o2ee30310yff9c62c62617c1ad@mail.gmail.com>
References: <20090702214824.GA16277@math.berkeley.edu>
	<20090702215833.GA16327@math.berkeley.edu>
	<ec2083b20907021508g41a95ba5xbacd6ff778d629b3@mail.gmail.com>
	<20090702232354.GA2519@math.berkeley.edu>
	<ec2083b20907021648k542cc8b3p7e86d0569628dbfb@mail.gmail.com>
	<ec2083b20907030706o2ee30310yff9c62c62617c1ad@mail.gmail.com>
Message-ID: <20090703220955.GB2597@math.berkeley.edu>

On Fri, Jul 03, 2009 at 09:06:30AM -0500, Fabio A. Correa wrote:
> In the .config file you sent me I realize your RFKILL button is not
> enabled to work with the b43 driver.
> 
> In order to work with it, I recommend you enable the following setting
> in the 2.6.30 kernel configuration program (make menuconfig, make
> gconfig, etc):
> 
> -> Device Drivers
>     -> Input device support
>         -> Generic input layer (needed for keyboard, mouse, ...)
>             -> Polled input device skeleton
> 
> You can read about the B43_RFKILL symbol in
> drivers/net/wireless/b43/Kconfig:104. In order to check tat B43_RFKILL
> is enabled, you can use
> 
> grep B43_RFKILL /boot/config
> 
> Also, please send me your /etc/network/interfaces (without your
> passwords). Thanks.

I've set it now.

It seems to fix the problem in the coffee shop, but not in my office.
(I'm surprised it fixes anything -- doesn't it pertain mostly to the
wifi switch on the side of my laptop?)

--Paul


From zajec5polish at gmail.com  Tue Jul  7 15:09:51 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Tue, 7 Jul 2009 15:09:51 +0200
Subject: Ask for help about openChrome killing Broadcom
Message-ID: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>

Last time we ended with discovering it's openChrome register operation
that affects Broadcom's PCI bus. The most obvious was we have bug
causing writing over our pci region. Problem is quite well described
in http://www.openchrome.org/trac/ticket/288

We were able to discover exact part of driver causing this problem.
It's about writing to our 0x2A register. That's well documented in one
comment: http://www.openchrome.org/trac/ticket/288#comment:20 and
confirmed by some patches disabling 0x2A writing that are known to
workaround it.

Problem is that 0x2A doesn't seem to be anything outside our pci
region. We do many other operations on even higher ports (from 0x00 up
to 0x4C) and it doesn't seem to break anything.

Do you have any idea what can be wrong with this 0x2A? I can't imagine
any connection between GPU and WiFi done on purpose. Can that just
mean broken motherboard by design? Or maybe some BIOS issue?

As far as I know this happens only on very one notebook model, that is
HP 2133 (but many cases confirmed that, it's not just one broken
case).

I know it's not really your business, but any help/tips would be appreciated.

-- 
Rafa? Mi?ecki


From mb at bu3sch.de  Tue Jul  7 15:17:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 7 Jul 2009 15:17:15 +0200
Subject: Ask for help about openChrome killing Broadcom
In-Reply-To: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
References: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
Message-ID: <200907071517.15809.mb@bu3sch.de>

On Tuesday 07 July 2009 15:09:51 Rafa? Mi?ecki wrote:
> Last time we ended with discovering it's openChrome register operation
> that affects Broadcom's PCI bus. The most obvious was we have bug
> causing writing over our pci region. Problem is quite well described
> in http://www.openchrome.org/trac/ticket/288
> 
> We were able to discover exact part of driver causing this problem.
> It's about writing to our 0x2A register. That's well documented in one
> comment: http://www.openchrome.org/trac/ticket/288#comment:20 and
> confirmed by some patches disabling 0x2A writing that are known to
> workaround it.
> 
> Problem is that 0x2A doesn't seem to be anything outside our pci
> region. We do many other operations on even higher ports (from 0x00 up
> to 0x4C) and it doesn't seem to break anything.
> 
> Do you have any idea what can be wrong with this 0x2A? I can't imagine
> any connection between GPU and WiFi done on purpose. Can that just
> mean broken motherboard by design? Or maybe some BIOS issue?
> 
> As far as I know this happens only on very one notebook model, that is
> HP 2133 (but many cases confirmed that, it's not just one broken
> case).
> 
> I know it's not really your business, but any help/tips would be appreciated.
> 

Your register accesses seem to be indirect:
	root at mini:> inb 0x3C4 #check which register is active
	0x00
	root at mini:> outb 0x3C4 0x2a #i want to acess register 2A
Can you explain how the register access works exactly? Is this MMIO or is this
x86 in/out instructions (PIO)?

What does lcpci -vvnn show on your system (for wifi and GPU)

-- 
Greetings, Michael.


From peter at stuge.se  Tue Jul  7 18:22:15 2009
From: peter at stuge.se (Peter Stuge)
Date: Tue, 7 Jul 2009 18:22:15 +0200
Subject: Ask for help about openChrome killing Broadcom
In-Reply-To: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
References: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
Message-ID: <20090707162215.12429.qmail@stuge.se>

Hi,

Rafa? Mi?ecki wrote:
> Problem is that 0x2A doesn't seem to be anything outside our pci
> region.

No, but it has reserved bits.


> I know it's not really your business,

Correct. This issue has nothing to do with b43, and everything to do
with PCIe in general in the chipset.

Classic mixup of symptom and cause. That said, ..


> but any help/tips would be appreciated.

..I didn't know there was a ticket. There was a thread about this
issue on openchrome-devel back in November, but the ticket was never
mentioned in that thread. At any rate I've tried to clarify a bit in
http://www.openchrome.org/trac/ticket/288#comment:24 and I believe
r746 of OpenChrome should have fixed the issue.

Further discussion via Trac or openchrome-devel, please.


//Peter


From zajec5polish at gmail.com  Tue Jul  7 20:03:10 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Tue, 7 Jul 2009 20:03:10 +0200
Subject: Ask for help about openChrome killing Broadcom
In-Reply-To: <20090707162215.12429.qmail@stuge.se>
References: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
	<20090707162215.12429.qmail@stuge.se>
Message-ID: <14b026160907071103j74f3ee05pb9a40da6c7887bb5@mail.gmail.com>

W dniu 7 lipca 2009 15:17 u?ytkownik Michael Buesch <mb at bu3sch.de> napisa?:
> Your register accesses seem to be indirect:
> ? ? ? ?root at mini:> inb 0x3C4 #check which register is active
> ? ? ? ?0x00
> ? ? ? ?root at mini:> outb 0x3C4 0x2a #i want to acess register 2A
> Can you explain how the register access works exactly? Is this MMIO or is this
> x86 in/out instructions (PIO)?

Sorry, I started reading openChrome code yesterday and don't even know
that. It uses vgaHWPtr with some hidden initialization. Plus private
openChrome's function are ready for both PIO and MMIO:

>     if (hwp->MMIOBase)
>         MMIO_OUT8(hwp->MMIOBase, hwp->MMIOOffset + address, value);
>     else
>         outb(hwp->PIOOffset + address, value);

> What does lcpci -vvnn show on your system (for wifi and GPU)

I don't own that problematic HP, just try to fix regressions to let
new release happen.


2009/7/7 Peter Stuge <peter at stuge.se>:
> Rafa? Mi?ecki wrote:
>> Problem is that 0x2A doesn't seem to be anything outside our pci
>> region.
>
> No, but it has reserved bits.
>
>
>> I know it's not really your business,
>
> Correct. This issue has nothing to do with b43, and everything to do
> with PCIe in general in the chipset.
>
> Classic mixup of symptom and cause. That said, ..
>
>
>> but any help/tips would be appreciated.
>
> ..I didn't know there was a ticket. There was a thread about this
> issue on openchrome-devel back in November, but the ticket was never
> mentioned in that thread. At any rate I've tried to clarify a bit in
> http://www.openchrome.org/trac/ticket/288#comment:24 and I believe
> r746 of OpenChrome should have fixed the issue.
>
> Further discussion via Trac or openchrome-devel, please.

Thanks a lot for your explainations.

-- 
Rafa? Mi?ecki


From mb at bu3sch.de  Tue Jul  7 20:33:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 7 Jul 2009 20:33:19 +0200
Subject: Ask for help about openChrome killing Broadcom
In-Reply-To: <14b026160907071103j74f3ee05pb9a40da6c7887bb5@mail.gmail.com>
References: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
	<20090707162215.12429.qmail@stuge.se>
	<14b026160907071103j74f3ee05pb9a40da6c7887bb5@mail.gmail.com>
Message-ID: <200907072033.19896.mb@bu3sch.de>

On Tuesday 07 July 2009 20:03:10 Rafa? Mi?ecki wrote:
> W dniu 7 lipca 2009 15:17 u?ytkownik Michael Buesch <mb at bu3sch.de> napisa?:
> > Your register accesses seem to be indirect:
> > ? ? ? ?root at mini:> inb 0x3C4 #check which register is active
> > ? ? ? ?0x00
> > ? ? ? ?root at mini:> outb 0x3C4 0x2a #i want to acess register 2A
> > Can you explain how the register access works exactly? Is this MMIO or is this
> > x86 in/out instructions (PIO)?
> 
> Sorry, I started reading openChrome code yesterday and don't even know
> that. It uses vgaHWPtr with some hidden initialization. Plus private
> openChrome's function are ready for both PIO and MMIO:
> 
> >     if (hwp->MMIOBase)
> >         MMIO_OUT8(hwp->MMIOBase, hwp->MMIOOffset + address, value);
> >     else
> >         outb(hwp->PIOOffset + address, value);

Ok, you should probably check if it's possible (with some hacks) to select
between MMIO and PIO. Maybe you don't have a choice and it's hardware dependent.
But if it isn't, you should check which one of these shows bad behavior. That might give
you some extra hints.

-- 
Greetings, Michael.


From peter at stuge.se  Tue Jul  7 20:46:07 2009
From: peter at stuge.se (Peter Stuge)
Date: Tue, 7 Jul 2009 20:46:07 +0200
Subject: Ask for help about openChrome killing Broadcom
In-Reply-To: <200907072033.19896.mb@bu3sch.de>
References: <14b026160907070609t155bd5bcl5f356b275140a2a@mail.gmail.com>
	<20090707162215.12429.qmail@stuge.se>
	<14b026160907071103j74f3ee05pb9a40da6c7887bb5@mail.gmail.com>
	<200907072033.19896.mb@bu3sch.de>
Message-ID: <20090707184607.10965.qmail@stuge.se>

Michael Buesch wrote:
> > > root at mini:> outb 0x3C4 0x2a #i want to acess register 2A
> > > Can you explain how the register access works exactly?
> > > Is this MMIO or is this x86 in/out instructions (PIO)?

This is a PIO access to an extended sequencer register in the
graphics hardware. It's not reachable through MMIO AFAIU from the
data sheet. Read my comment in oc-trac for the full story, basically
openchrome most likely changed a reserved bit, and I find it likely
to cause PCIe problems because video output and PCIe are closely
related in hardware.


//Peter


From jrtayloriv at gmail.com  Thu Jul  9 19:50:16 2009
From: jrtayloriv at gmail.com (Jesse Taylor)
Date: Thu, 9 Jul 2009 10:50:16 -0700
Subject: BCM4312: Not Creating Interface in Gentoo Linux (2.6.29)
Message-ID: <4fddc9c90907091050r3553f682m4a3eca9ae322a635@mail.gmail.com>

I am having trouble getting my BCM4312 card working in Gentoo Linux.

I followed all of the instructions at
http://wireless.kernel.org/en/users/Drivers/b43 , and did not run into any
errors during the install process outlined there.

'dmesg' seems to show that the module is loading up fine at boot ("Broadcom
43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]"), and I get the same
message when I 'rmmod b43; modprobe b43; dmesg' ...

However, 'ifconfig -a' is not showing a wireless interface for it, and lspci
-k is saying that there is no kernel driver in use for the BCM4312. Any idea
what I should do next? I have b43 debugging enabled in the kernel, so if
there is anything I can provide from there, please let me know.

Thanks,
Jesse Taylor
(jrtayloriv at gmail.com)

Here is the output from the commands requested in the guide:

# uname -a
Linux localhost 2.6.29-gentoo-r5 #6 Thu Jul 9 16:34:43 PDT 2009 i686 Genuine
Intel(R) CPU 585 @ 2.16GHz GenuineIntel GNU/Linux

#lspci -vvn|grep 43 -A7
0c:00.0 0280: 14e4:4315 (rev 01)
        Subsystem: 1028:000c
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort-
<TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 4
        Region 0: Memory at f69fc000 (64-bit, non-prefetchable) [size=16K]
        Capabilities: [40] Power Management version 3

#dmesg
Linux version 2.6.29-gentoo-r5 (root at localhost) (gcc version 4.3.2 (Gentoo
4.3.2-r3 p1.6, pie-10.1.5) ) #6 Thu Jul 9 16:34:43 PDT 2009
KERNEL supported cpus:
  Intel GenuineIntel
  AMD AuthenticAMD
  NSC Geode by NSC
  Cyrix CyrixInstead
  Centaur CentaurHauls
  Transmeta GenuineTMx86
  Transmeta TransmetaCPU
  UMC UMC UMC UMC
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
 BIOS-e820: 000000000009f000 - 00000000000a0000 (reserved)
 BIOS-e820: 0000000000100000 - 000000007dabf400 (usable)
 BIOS-e820: 000000007dabf400 - 000000007dac1400 (ACPI NVS)
 BIOS-e820: 000000007dac1400 - 0000000080000000 (reserved)
 BIOS-e820: 00000000f8000000 - 00000000fc000000 (reserved)
 BIOS-e820: 00000000fec00000 - 00000000fec10000 (reserved)
 BIOS-e820: 00000000fed18000 - 00000000fed1c000 (reserved)
 BIOS-e820: 00000000fed20000 - 00000000fed90000 (reserved)
 BIOS-e820: 00000000feda0000 - 00000000feda6000 (reserved)
 BIOS-e820: 00000000fee00000 - 00000000fee10000 (reserved)
 BIOS-e820: 00000000ffe00000 - 0000000100000000 (reserved)
DMI 2.4 present.
last_pfn = 0x7dabf max_arch_pfn = 0x100000
x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
Scanning 1 areas for low memory corruption
modified physical RAM map:
 modified: 0000000000000000 - 0000000000001000 (usable)
 modified: 0000000000001000 - 0000000000010000 (reserved)
 modified: 0000000000010000 - 0000000000090000 (usable)
 modified: 000000000009f000 - 00000000000a0000 (reserved)
 modified: 0000000000100000 - 000000007dabf400 (usable)
 modified: 000000007dabf400 - 000000007dac1400 (ACPI NVS)
 modified: 000000007dac1400 - 0000000080000000 (reserved)
 modified: 00000000f8000000 - 00000000fc000000 (reserved)
 modified: 00000000fec00000 - 00000000fec10000 (reserved)
 modified: 00000000fed18000 - 00000000fed1c000 (reserved)
 modified: 00000000fed20000 - 00000000fed90000 (reserved)
 modified: 00000000feda0000 - 00000000feda6000 (reserved)
 modified: 00000000fee00000 - 00000000fee10000 (reserved)
 modified: 00000000ffe00000 - 0000000100000000 (reserved)
kernel direct mapping tables up to 377fe000 @ 10000-15000
ACPI: RSDP 000FBDD0, 0024 (r2 DELL  )
ACPI: XSDT 7DAC3E00, 0064 (r1 DELL    M09     27D90219 ASL        61)
ACPI: FACP 7DAC3C9C, 00F4 (r4 DELL    M09     27D90219 ASL        61)
ACPI Warning (tbfadt-0568): 32/64X length mismatch in Gpe0Block: 128/64
[20081204]
FADT: X_PM1a_EVT_BLK.bit_width (16) does not match PM1_EVT_LEN (4)
ACPI: DSDT 7DAC4400, 5170 (r2 INT430 SYSFexxx     1001 INTL 20050624)
ACPI: FACS 7DAD2C00, 0040
ACPI: HPET 7DAC3F00, 0038 (r1 DELL    M09            1 ASL        61)
ACPI: APIC 7DAC4000, 0068 (r1 DELL    M09     27D90219 ASL        47)
ACPI: MCFG 7DAC3FC0, 003E (r16 DELL    M09     27D90219 ASL        61)
ACPI: SLIC 7DAC409C, 0024 (r1 DELL    M09     27D90219 ASL        61)
ACPI: SSDT 7DAC2E72, 05C6 (r1  PmRef   BspCst     3001 INTL 20050624)
ACPI: SSDT 7DAC2BF1, 0281 (r1  PmRef   BspIst     3000 INTL 20050624)
ACPI: SSDT 7DAC2585, 066C (r1  PmRef    CpuPm     3000 INTL 20050624)
ACPI: Local APIC address 0xfee00000
1122MB HIGHMEM available.
887MB LOWMEM available.
  mapped low ram: 0 - 377fe000
  low ram: 00000000 - 377fe000
  bootmap 00011000 - 00017f00
(6 early reservations) ==> bootmem [0000000000 - 00377fe000]
  #0 [0000000000 - 0000001000]   BIOS data page ==> [0000000000 -
0000001000]
  #1 [0001000000 - 00014b9680]    TEXT DATA BSS ==> [0001000000 -
00014b9680]
  #2 [00014ba000 - 00014c1000]    INIT_PG_TABLE ==> [00014ba000 -
00014c1000]
  #3 [000009f000 - 0000100000]    BIOS reserved ==> [000009f000 -
0000100000]
  #4 [0000010000 - 0000011000]          PGTABLE ==> [0000010000 -
0000011000]
  #5 [0000011000 - 0000018000]          BOOTMAP ==> [0000011000 -
0000018000]
Zone PFN ranges:
  DMA      0x00000000 -> 0x00001000
  Normal   0x00001000 -> 0x000377fe
  HighMem  0x000377fe -> 0x0007dabf
Movable zone start PFN for each node
early_node_map[3] active PFN ranges
    0: 0x00000000 -> 0x00000001
    0: 0x00000010 -> 0x00000090
    0: 0x00000100 -> 0x0007dabf
On node 0 totalpages: 514624
free_area_init_node: node 0, pgdat c13f8050, node_mem_map c14c1000
  DMA zone: 32 pages used for memmap
  DMA zone: 0 pages reserved
  DMA zone: 3937 pages, LIFO batch:0
  Normal zone: 1744 pages used for memmap
  Normal zone: 221486 pages, LIFO batch:31
  HighMem zone: 2246 pages used for memmap
  HighMem zone: 285179 pages, LIFO batch:31
ACPI: PM-Timer IO Port: 0x1008
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] disabled)
ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
ACPI: IOAPIC (id[0x01] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 1, version 32, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Enabling APIC mode:  Flat.  Using 1 I/O APICs
Using ACPI (MADT) for SMP configuration information
ACPI: HPET id: 0x8086a201 base: 0xfed00000
nr_irqs_gsi: 24
PM: Registered nosave memory: 0000000000001000 - 0000000000010000
PM: Registered nosave memory: 0000000000090000 - 000000000009f000
PM: Registered nosave memory: 000000000009f000 - 00000000000a0000
PM: Registered nosave memory: 00000000000a0000 - 0000000000100000
Allocating PCI resources starting at 88000000 (gap: 80000000:78000000)
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 510602
Kernel command line: root=/dev/sda3 video=vesafb:mtrr:3,ywrap
Enabling fast FPU save and restore... done.
Enabling unmasked SIMD FPU exception support... done.
Initializing CPU#0
Experimental hierarchical RCU implementation.
Experimental hierarchical RCU init done.
PID hash table entries: 4096 (order: 12, 16384 bytes)
Extended CMOS year: 2000
Fast TSC calibration using PIT
Detected 2161.270 MHz processor.
Console: colour VGA+ 80x25
console [tty0] enabled
Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
Memory: 2035616k/2059004k available (2821k kernel code, 21932k reserved,
1282k data, 288k init, 1149700k highmem)
virtual kernel memory layout:
    fixmap  : 0xfffac000 - 0xfffff000   ( 332 kB)
    pkmap   : 0xff800000 - 0xffc00000   (4096 kB)
    vmalloc : 0xf7ffe000 - 0xff7fe000   ( 120 MB)
    lowmem  : 0xc0000000 - 0xf77fe000   ( 887 MB)
      .init : 0xc1404000 - 0xc144c000   ( 288 kB)
      .data : 0xc12c1735 - 0xc1401f58   (1282 kB)
      .text : 0xc1000000 - 0xc12c1735   (2821 kB)
Checking if this processor honours the WP bit even in supervisor mode...Ok.
SLUB: Genslabs=12, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
hpet clockevent registered
Calibrating delay loop (skipped), value calculated using timer frequency..
4322.54 BogoMIPS (lpj=2161270)
Mount-cache hash table entries: 512
CPU: L1 I cache: 32K, L1 D cache: 32K
CPU: L2 cache: 1024K
Intel machine check architecture supported.
Intel machine check reporting enabled on CPU#0.
using mwait in idle threads.
CPU: Genuine Intel(R) CPU             585  @ 2.16GHz stepping 0d
Checking 'hlt' instruction... OK.
Freeing SMP alternatives: 0k freed
ACPI: Core revision 20081204
..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
net_namespace: 524 bytes
Time: 16:39:40  Date: 07/09/09
NET: Registered protocol family 16
ACPI: bus type pci registered
PCI: MCFG configuration 0: base f8000000 segment 0 buses 0 - 63
PCI: MCFG area at f8000000 reserved in E820
PCI: Using MMCONFIG for extended config space
PCI: Using configuration type 1 for base access
bio: create slab <bio-0> at 0
ACPI: EC: Look up EC in DSDT
ACPI: BIOS _OSI(Linux) query ignored
ACPI: Interpreter enabled
ACPI: (supports S0 S3 S4 S5)
ACPI: Using IOAPIC for interrupt routing
ACPI: No dock devices found.
ACPI: PCI Root Bridge [PCI0] (0000:00)
pci 0000:00:02.0: reg 10 64bit mmio: [0xf6c00000-0xf6ffffff]
pci 0000:00:02.0: reg 18 64bit mmio: [0xe0000000-0xefffffff]
pci 0000:00:02.0: reg 20 io port: [0xefe8-0xefef]
pci 0000:00:02.1: reg 10 64bit mmio: [0xf6b00000-0xf6bfffff]
pci 0000:00:1a.0: reg 20 io port: [0x6f60-0x6f7f]
pci 0000:00:1a.1: reg 20 io port: [0x6f80-0x6f9f]
pci 0000:00:1a.2: reg 20 io port: [0x6fa0-0x6fbf]
pci 0000:00:1a.7: reg 10 32bit mmio: [0xfed1c400-0xfed1c7ff]
pci 0000:00:1a.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1a.7: PME# disabled
pci 0000:00:1b.0: reg 10 64bit mmio: [0xf6afc000-0xf6afffff]
pci 0000:00:1b.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1b.0: PME# disabled
pci 0000:00:1c.0: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.0: PME# disabled
pci 0000:00:1c.1: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.1: PME# disabled
pci 0000:00:1c.2: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.2: PME# disabled
pci 0000:00:1c.4: PME# supported from D0 D3hot D3cold
pci 0000:00:1c.4: PME# disabled
pci 0000:00:1d.0: reg 20 io port: [0x6f00-0x6f1f]
pci 0000:00:1d.1: reg 20 io port: [0x6f20-0x6f3f]
pci 0000:00:1d.2: reg 20 io port: [0x6f40-0x6f5f]
pci 0000:00:1d.7: reg 10 32bit mmio: [0xfed1c000-0xfed1c3ff]
pci 0000:00:1d.7: PME# supported from D0 D3hot D3cold
pci 0000:00:1d.7: PME# disabled
pci 0000:00:1f.2: reg 10 io port: [0x6e70-0x6e77]
pci 0000:00:1f.2: reg 14 io port: [0x6e78-0x6e7b]
pci 0000:00:1f.2: reg 18 io port: [0x6e80-0x6e87]
pci 0000:00:1f.2: reg 1c io port: [0x6e88-0x6e8b]
pci 0000:00:1f.2: reg 20 io port: [0x6ea0-0x6ebf]
pci 0000:00:1f.2: reg 24 32bit mmio: [0xfed1c800-0xfed1cfff]
pci 0000:00:1f.2: PME# supported from D3hot
pci 0000:00:1f.2: PME# disabled
pci 0000:00:1f.3: reg 10 64bit mmio: [0xf6afbf00-0xf6afbfff]
pci 0000:00:1f.3: reg 20 io port: [0x1100-0x111f]
pci 0000:0c:00.0: reg 10 64bit mmio: [0xf69fc000-0xf69fffff]
pci 0000:0c:00.0: supports D1 D2
pci 0000:0c:00.0: PME# supported from D0 D3hot D3cold
pci 0000:0c:00.0: PME# disabled
pci 0000:00:1c.1: bridge 32bit mmio: [0xf6900000-0xf69fffff]
pci 0000:09:00.0: reg 10 64bit mmio: [0xf68fc000-0xf68fffff]
pci 0000:09:00.0: reg 18 io port: [0xde00-0xdeff]
pci 0000:09:00.0: supports D1 D2
pci 0000:09:00.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:09:00.0: PME# disabled
pci 0000:00:1c.2: bridge io port: [0xd000-0xdfff]
pci 0000:00:1c.2: bridge 32bit mmio: [0xf6800000-0xf68fffff]
pci 0000:00:1c.4: bridge io port: [0xc000-0xcfff]
pci 0000:00:1c.4: bridge 32bit mmio: [0xf6600000-0xf67fffff]
pci 0000:00:1c.4: bridge 64bit mmio pref: [0xf0000000-0xf01fffff]
pci 0000:00:1e.0: transparent bridge
pci_bus 0000:00: on NUMA node 0
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PCIE._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP01._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP02._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP03._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.RP05._PRT]
ACPI: PCI Interrupt Link [LNKA] (IRQs *10 11)
ACPI: PCI Interrupt Link [LNKB] (IRQs 5 7) *4
ACPI: PCI Interrupt Link [LNKC] (IRQs *10 11)
ACPI: PCI Interrupt Link [LNKD] (IRQs 5 7 10 11) *0, disabled.
ACPI: PCI Interrupt Link [LNKE] (IRQs 3 4 5 6 7 10 *11 12 14 15)
ACPI: PCI Interrupt Link [LNKF] (IRQs 3 4 5 6 *7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKG] (IRQs 3 4 *5 6 7 10 11 12 14 15)
ACPI: PCI Interrupt Link [LNKH] (IRQs 3 4 5 6 7 10 11 12 14 15) *0,
disabled.
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
cfg80211: Calling CRDA to update world regulatory domain
cfg80211: calling CRDA failed - unable to update world regulatory domain,
using static definition
hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0, 0
hpet0: 4 comparators, 64-bit 14.318180 MHz counter
pnp: PnP ACPI init
ACPI: bus type pnp registered
pnp: PnP ACPI: found 12 devices
ACPI: ACPI bus type pnp unregistered
system 00:08: iomem range 0xfed00000-0xfed003ff has been reserved
system 00:09: ioport range 0x900-0x97f has been reserved
system 00:09: ioport range 0x4d0-0x4d1 has been reserved
system 00:09: ioport range 0x1000-0x1005 has been reserved
system 00:09: ioport range 0x1008-0x100f has been reserved
system 00:0a: ioport range 0xf400-0xf4fe has been reserved
system 00:0a: ioport range 0x1006-0x1007 has been reserved
system 00:0a: ioport range 0x100a-0x1059 could not be reserved
system 00:0a: ioport range 0x1060-0x107f has been reserved
system 00:0a: ioport range 0x1080-0x10bf has been reserved
system 00:0a: ioport range 0x1100-0x111f has been reserved
system 00:0a: ioport range 0x1010-0x102f has been reserved
system 00:0a: ioport range 0x809-0x809 has been reserved
system 00:0b: iomem range 0x0-0x9efff could not be reserved
system 00:0b: iomem range 0x9f000-0x9ffff could not be reserved
system 00:0b: iomem range 0xc0000-0xcffff could not be reserved
system 00:0b: iomem range 0xe0000-0xfffff could not be reserved
system 00:0b: iomem range 0x100000-0x7dabf3ff could not be reserved
system 00:0b: iomem range 0x7dabf400-0x7dafffff could not be reserved
system 00:0b: iomem range 0x7db00000-0x7dbfffff has been reserved
system 00:0b: iomem range 0xffe00000-0xffffffff has been reserved
system 00:0b: iomem range 0xffa00000-0xffbfffff has been reserved
system 00:0b: iomem range 0xfec00000-0xfec0ffff has been reserved
system 00:0b: iomem range 0xfee00000-0xfee0ffff has been reserved
system 00:0b: iomem range 0xfed20000-0xfed8ffff has been reserved
system 00:0b: iomem range 0xfeda0000-0xfeda3fff has been reserved
system 00:0b: iomem range 0xfeda4000-0xfeda4fff has been reserved
system 00:0b: iomem range 0xfeda5000-0xfeda5fff has been reserved
system 00:0b: iomem range 0xfeda6000-0xfeda6fff has been reserved
system 00:0b: iomem range 0xfed1c800-0xfed1cfff has been reserved
system 00:0b: iomem range 0xfed18000-0xfed1bfff has been reserved
system 00:0b: iomem range 0xf8000000-0xfbffffff has been reserved
pci 0000:00:1c.0: PCI bridge, secondary bus 0000:0b
pci 0000:00:1c.0:   IO window: disabled
pci 0000:00:1c.0:   MEM window: disabled
pci 0000:00:1c.0:   PREFETCH window: disabled
pci 0000:00:1c.1: PCI bridge, secondary bus 0000:0c
pci 0000:00:1c.1:   IO window: disabled
pci 0000:00:1c.1:   MEM window: 0xf6900000-0xf69fffff
pci 0000:00:1c.1:   PREFETCH window: disabled
pci 0000:00:1c.2: PCI bridge, secondary bus 0000:09
pci 0000:00:1c.2:   IO window: 0xd000-0xdfff
pci 0000:00:1c.2:   MEM window: 0xf6800000-0xf68fffff
pci 0000:00:1c.2:   PREFETCH window: disabled
pci 0000:00:1c.4: PCI bridge, secondary bus 0000:0d
pci 0000:00:1c.4:   IO window: 0xc000-0xcfff
pci 0000:00:1c.4:   MEM window: 0xf6600000-0xf67fffff
pci 0000:00:1c.4:   PREFETCH window: 0x000000f0000000-0x000000f01fffff
pci 0000:00:1e.0: PCI bridge, secondary bus 0000:03
pci 0000:00:1e.0:   IO window: disabled
pci 0000:00:1e.0:   MEM window: disabled
pci 0000:00:1e.0:   PREFETCH window: disabled
pci 0000:00:1c.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:1c.0: setting latency timer to 64
pci 0000:00:1c.1: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:1c.1: setting latency timer to 64
pci 0000:00:1c.2: PCI INT C -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:1c.2: setting latency timer to 64
pci 0000:00:1c.4: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:1c.4: setting latency timer to 64
pci 0000:00:1e.0: setting latency timer to 64
pci_bus 0000:00: resource 0 io:  [0x00-0xffff]
pci_bus 0000:00: resource 1 mem: [0x000000-0xffffffff]
pci_bus 0000:0b: resource 0 mem: [0x0-0x0]
pci_bus 0000:0b: resource 1 mem: [0x0-0x0]
pci_bus 0000:0b: resource 2 mem: [0x0-0x0]
pci_bus 0000:0b: resource 3 mem: [0x0-0x0]
pci_bus 0000:0c: resource 0 mem: [0x0-0x0]
pci_bus 0000:0c: resource 1 mem: [0xf6900000-0xf69fffff]
pci_bus 0000:0c: resource 2 mem: [0x0-0x0]
pci_bus 0000:0c: resource 3 mem: [0x0-0x0]
pci_bus 0000:09: resource 0 io:  [0xd000-0xdfff]
pci_bus 0000:09: resource 1 mem: [0xf6800000-0xf68fffff]
pci_bus 0000:09: resource 2 mem: [0x0-0x0]
pci_bus 0000:09: resource 3 mem: [0x0-0x0]
pci_bus 0000:0d: resource 0 io:  [0xc000-0xcfff]
pci_bus 0000:0d: resource 1 mem: [0xf6600000-0xf67fffff]
pci_bus 0000:0d: resource 2 mem: [0xf0000000-0xf01fffff]
pci_bus 0000:0d: resource 3 mem: [0x0-0x0]
pci_bus 0000:03: resource 0 mem: [0x0-0x0]
pci_bus 0000:03: resource 1 mem: [0x0-0x0]
pci_bus 0000:03: resource 2 mem: [0x0-0x0]
pci_bus 0000:03: resource 3 io:  [0x00-0xffff]
pci_bus 0000:03: resource 4 mem: [0x000000-0xffffffff]
NET: Registered protocol family 2
IP route cache hash table entries: 32768 (order: 5, 131072 bytes)
TCP established hash table entries: 131072 (order: 8, 1048576 bytes)
TCP bind hash table entries: 65536 (order: 6, 262144 bytes)
TCP: Hash tables configured (established 131072 bind 65536)
TCP reno registered
NET: Registered protocol family 1
Microcode Update Driver: v2.00 <tigran at aivazian.fsnet.co.uk>, Peter Oruba
Scanning for low memory corruption every 60 seconds
highmem bounce pool size: 64 pages
NTFS driver 2.1.29 [Flags: R/W].
msgmni has been set to 1732
alg: No test for stdrng (krng)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
pci 0000:00:02.0: Boot video device
pci 0000:00:1a.0: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1a.0: Performing full reset
pci 0000:00:1a.1: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1a.1: Performing full reset
pci 0000:00:1a.2: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1a.2: Performing full reset
pci 0000:00:1d.0: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1d.0: Performing full reset
pci 0000:00:1d.1: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1d.1: Performing full reset
pci 0000:00:1d.2: uhci_check_and_reset_hc: cmd = 0x0080
pci 0000:00:1d.2: Performing full reset
pcieport-driver 0000:00:1c.0: setting latency timer to 64
pcieport-driver 0000:00:1c.1: setting latency timer to 64
pcieport-driver 0000:00:1c.2: setting latency timer to 64
pcieport-driver 0000:00:1c.4: setting latency timer to 64
Non-volatile memory driver v1.3
Linux agpgart interface v0.103
agpgart-intel 0000:00:00.0: Intel Mobile Intel?? GM45 Express Chipset
agpgart-intel 0000:00:00.0: detected 32764K stolen memory
agpgart-intel 0000:00:00.0: AGP aperture is 256M @ 0xe0000000
ACPI: AC Adapter [AC] (on-line)
ACPI: Battery Slot [BAT0] (battery present)
input: Lid Switch as /devices/LNXSYSTM:00/device:00/PNP0C0D:00/input/input0
ACPI: Lid Switch [LID]
input: Power Button (CM) as
/devices/LNXSYSTM:00/device:00/PNP0C0C:00/input/input1
ACPI: Power Button (CM) [PBTN]
input: Sleep Button (CM) as
/devices/LNXSYSTM:00/device:00/PNP0C0E:00/input/input2
ACPI: Sleep Button (CM) [SBTN]
Monitor-Mwait will be used to enter C-1 state
Monitor-Mwait will be used to enter C-2 state
ACPI: CPU0 (power states: C1[C1] C2[C2])
processor ACPI_CPU:00: registered as cooling_device0
ACPI: Processor [CPU0] (supports 8 throttling states)
thermal LNXTHERM:01: registered as thermal_zone0
ACPI: Thermal Zone [THM] (60 C)
[drm] Initialized drm 1.1.0 20060810
pci 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:02.0: setting latency timer to 64
mtrr: type mismatch for e0000000,10000000 old: write-back new:
write-combining
[drm] MTRR allocation failed.  Graphics performance may suffer.
[drm] Initialized i915 1.6.0 20080730 on minor 0
Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
loop: module loaded
e100: Intel(R) PRO/100 Network Driver, 3.5.23-k6-NAPI
e100: Copyright(c) 1999-2006 Intel Corporation
sky2 driver version 1.22
sky2 0000:09:00.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
sky2 0000:09:00.0: setting latency timer to 64
sky2 0000:09:00.0: Yukon-2 FE+ chip revision 0
sky2 eth0: addr 00:23:ae:33:bf:88
Driver 'sd' needs updating - please use bus_type methods
Driver 'sr' needs updating - please use bus_type methods
ahci 0000:00:1f.2: version 3.0
ahci 0000:00:1f.2: PCI INT C -> GSI 18 (level, low) -> IRQ 18
ahci: SSS flag set, parallel bus scan disabled
ahci 0000:00:1f.2: AHCI 0001.0200 32 slots 4 ports 3 Gbps 0x33 impl SATA
mode
ahci 0000:00:1f.2: flags: 64bit ncq sntf stag pm led clo pio slum part ems
ahci 0000:00:1f.2: setting latency timer to 64
scsi0 : ahci
scsi1 : ahci
scsi2 : ahci
scsi3 : ahci
scsi4 : ahci
scsi5 : ahci
ata1: SATA max UDMA/133 abar m2048 at 0xfed1c800 port 0xfed1c900 irq 18
ata2: SATA max UDMA/133 abar m2048 at 0xfed1c800 port 0xfed1c980 irq 18
ata3: DUMMY
ata4: DUMMY
ata5: SATA max UDMA/133 abar m2048 at 0xfed1c800 port 0xfed1cb00 irq 18
ata6: SATA max UDMA/133 abar m2048 at 0xfed1c800 port 0xfed1cb80 irq 18
Switched to high resolution mode on CPU 0
ata1: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
ata1.00: ATA-8: WDC WD1600BEVT-75ZCT2, 11.01A11, max UDMA/133
ata1.00: 312581808 sectors, multi 8: LBA48 NCQ (depth 31/32)
ata1.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      WDC WD1600BEVT-7 11.0 PQ: 0 ANSI: 5
sd 0:0:0:0: [sda] 312581808 512-byte hardware sectors: (160 GB/149 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support
DPO or FUA
sd 0:0:0:0: [sda] 312581808 512-byte hardware sectors: (160 GB/149 GiB)
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support
DPO or FUA
 sda: sda1 sda2 sda3
sd 0:0:0:0: [sda] Attached SCSI disk
sd 0:0:0:0: Attached scsi generic sg0 type 0
ata2: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
ata2.00: ATAPI: HL-DT-ST DVD+/-RW GT10N, A105, max UDMA/100
ata2.00: configured for UDMA/100
scsi 1:0:0:0: CD-ROM            HL-DT-ST DVD+-RW GT10N    A105 PQ: 0 ANSI: 5
sr0: scsi3-mmc drive: 24x/24x writer dvd-ram cd/rw xa/form2 cdda tray
Uniform CD-ROM driver Revision: 3.20
sr 1:0:0:0: Attached scsi CD-ROM sr0
sr 1:0:0:0: Attached scsi generic sg1 type 5
drivers/usb/core/inode.c: creating file '001'
usbcore: registered new interface driver usblp
Initializing USB Mass Storage driver...
usbcore: registered new interface driver usb-storage
USB Mass Storage support registered.
PNP: PS/2 Controller [PNP0303:KBC,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
i8042.c: Detected active multiplexing controller, rev 1.1.
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX0 port at 0x60,0x64 irq 12
serio: i8042 AUX1 port at 0x60,0x64 irq 12
serio: i8042 AUX2 port at 0x60,0x64 irq 12
serio: i8042 AUX3 port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
rtc_cmos 00:03: RTC can wake from S4
rtc_cmos 00:03: rtc core: registered rtc_cmos as rtc0
rtc0: alarms up to one month, y3k, 114 bytes nvram, hpet irqs
i801_smbus 0000:00:1f.3: PCI INT B -> GSI 18 (level, low) -> IRQ 18
EDAC MC: Ver: 2.1.0 Jul  9 2009
cpuidle: using governor ladder
cpuidle: using governor menu
sdhci: Secure Digital Host Controller Interface driver
sdhci: Copyright(c) Pierre Ossman
ricoh-mmc: Ricoh MMC Controller disabling driver
ricoh-mmc: Copyright(c) Philip Langdale
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
usbhid: v2.6:USB HID core driver
Advanced Linux Sound Architecture Driver Version 1.0.18a.
HDA Intel 0000:00:1b.0: PCI INT A -> GSI 21 (level, low) -> IRQ 21
HDA Intel 0000:00:1b.0: setting latency timer to 64
Marking TSC unstable due to TSC halts in idle
ehci_hcd 0000:00:1a.7: GetStatus port 5 status 001803 POWER sig=j CSC
CONNECT
hub 1-0:1.0: port 5: status 0501 change 0001
ALSA device list:
  #0: HDA Intel at 0xf6afc000 irq 21
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 17
NET: Registered protocol family 15
lib80211: common routines for IEEE802.11 drivers
lib80211_crypt: registered algorithm 'NULL'
ehci_hcd 0000:00:1d.7: GetStatus port 3 status 001403 POWER sig=k CSC
CONNECT
hub 2-0:1.0: port 3: status 0501 change 0001
uhci_hcd 0000:00:1a.2: port 1 portsc 0082,00
uhci_hcd 0000:00:1d.1: port 1 portsc 008a,00
hub 3-0:1.0: state 7 ports 2 chg 0000 evt 0000
hub 4-0:1.0: state 7 ports 2 chg 0000 evt 0000
hub 6-0:1.0: state 7 ports 2 chg 0000 evt 0000
Using IPI Shortcut mode
  Magic number: 1:511:691
sound timer: hash matches
hub 8-0:1.0: state 7 ports 2 chg 0000 evt 0000
hub 1-0:1.0: state 7 ports 6 chg 0020 evt 0000
hub 1-0:1.0: port 5, status 0501, change 0000, 480 Mb/s
ehci_hcd 0000:00:1a.7: port 5 high speed
ehci_hcd 0000:00:1a.7: GetStatus port 5 status 001005 POWER sig=se0 PE
CONNECT
input: AT Translated Set 2 keyboard as
/devices/platform/i8042/serio0/input/input3
usb 1-5: new high speed USB device using ehci_hcd and address 2
Clocksource tsc unstable (delta = -202086657 ns)
input: PS/2 Mouse as /devices/platform/i8042/serio2/input/input5
input: AlpsPS/2 ALPS GlidePoint as
/devices/platform/i8042/serio2/input/input6
usb usb5: suspend_rh (auto-stop)
kjournald starting.  Commit interval 5 seconds
EXT3-fs: mounted filesystem with ordered data mode.
VFS: Mounted root (ext3 filesystem) readonly on device 8:3.
Freeing unused kernel memory: 288k freed
input: PS/2 Mouse as /devices/platform/i8042/serio2/input/input7
input: AlpsPS/2 ALPS GlidePoint as
/devices/platform/i8042/serio2/input/input8
udev: starting version 141
EXT3 FS on sda3, internal journal
Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]
..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090709/4c33c156/attachment.html>

From Larry.Finger at lwfinger.net  Thu Jul  9 20:01:51 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 09 Jul 2009 13:01:51 -0500
Subject: BCM4312: Not Creating Interface in Gentoo Linux (2.6.29)
In-Reply-To: <4fddc9c90907091050r3553f682m4a3eca9ae322a635@mail.gmail.com>
References: <4fddc9c90907091050r3553f682m4a3eca9ae322a635@mail.gmail.com>
Message-ID: <4A56308F.9020408@lwfinger.net>

Jesse Taylor wrote:
> I am having trouble getting my BCM4312 card working in Gentoo Linux.
> 
> I followed all of the instructions at
> http://wireless.kernel.org/en/users/Drivers/b43 , and did not run into
> any errors during the install process outlined there.
> 
> 'dmesg' seems to show that the module is loading up fine at boot
> ("Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]"), and
> I get the same message when I 'rmmod b43; modprobe b43; dmesg' ...
> 
> However, 'ifconfig -a' is not showing a wireless interface for it, and
> lspci -k is saying that there is no kernel driver in use for the
> BCM4312. Any idea what I should do next? I have b43 debugging enabled in
> the kernel, so if there is anything I can provide from there, please let
> me know.
> 
> Thanks,
> Jesse Taylor
> (jrtayloriv at gmail.com <mailto:jrtayloriv at gmail.com>)
> 
> Here is the output from the commands requested in the guide:
> 
> # uname -a
> Linux localhost 2.6.29-gentoo-r5 #6 Thu Jul 9 16:34:43 PDT 2009 i686
> Genuine Intel(R) CPU 585 @ 2.16GHz GenuineIntel GNU/Linux
> 
> #lspci -vvn|grep 43 -A7
> 0c:00.0 0280: 14e4:4315 (rev 01)

You missed the following line from the Wiki:

14e4:4315         not supported 	BCM4312 802.11b/g - low power

The LP-PHY devices need to use Broadcom's wl driver. In openSUSE, the
Packman repository has a package for it. I don't know about Gentoo.
The firmware is built into that driver, so all you need to do is
install the appropriate package (if it exists), or download the source
and binary blob from Broadcom and build a module for your kernel.

Larry



From Larry.Finger at lwfinger.net  Thu Jul  9 21:19:14 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 09 Jul 2009 14:19:14 -0500
Subject: BCM4312: Not Creating Interface in Gentoo Linux (2.6.29)
In-Reply-To: <4fddc9c90907091140i7d84ddafg5a09a3fb7bacadb5@mail.gmail.com>
References: <4fddc9c90907091050r3553f682m4a3eca9ae322a635@mail.gmail.com>
	<4A56308F.9020408@lwfinger.net>
	<4fddc9c90907091140i7d84ddafg5a09a3fb7bacadb5@mail.gmail.com>
Message-ID: <4A5642B2.9050800@lwfinger.net>

Jesse Taylor wrote:
> I cannot use the 'wl' module, because it crashes my computer for some
> reason. What state of development is the "BCM4312 802.11b/g - low power"
> driver in? Where would I get started if I wanted to help with
> development for it?

Please do not top post.

I have finished the reverse engineering for the LP-PHY devices, and
all the steps needed to program the device are supposedly in the
"specs" at http://bcm-v4.sipsolutions.net/802.11. There are people
that have said that they were coding parts, but I don't know what the
progress has been made. I have not seen any suggested code. What you
need to do is pick a section of the LP PHY coding, ask the community
if anyone is working on that part, and start coding if no one is
working there. The first rule is to post early and often using "[RFC]
b43: LP PHY xxxxxxxxx" as the subject. Your code will be reviewed and
suggestions will be forthcoming on how to improve it.

Once you get started, you will likely have questions regarding the
specs as they may be confusing or [may appear to] be inconsistent.
Post these on the mailing list as well. The clean-room rules prevent
me from writing any of the code, but I certainly can and should answer
questions about the material on the web site.

Larry



From celejar at gmail.com  Fri Jul 10 08:32:00 2009
From: celejar at gmail.com (Celejar)
Date: Fri, 10 Jul 2009 02:32:00 -0400
Subject: 4318 misbehaving with bleeding edge kernels
Message-ID: <20090710023200.fe13ee43.celejar@gmail.com>

Hi,

I have a 4318 (rev 02), which has been working fine with b43.
Recently, with 2.6.31-rc2 kernels from the wireless-testing git repo,
I've been having trouble.  Sometimes the card simply fails to associate
after doing 'iwconfig eth0 essid xxxx'.  It doesn't even seem to try;
i.e., when it does associate, I see log entries like these:

Jul 10 02:25:19 lizzie kernel: [  318.302652] eth0: direct probe to AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.310396] eth0 direct probe responded
Jul 10 02:25:19 lizzie kernel: [  318.310401] eth0: authenticate with AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.312273] eth0: authenticated
Jul 10 02:25:19 lizzie kernel: [  318.510040] eth0: associate with AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.511947] eth0: RX AssocResp from 00:1a:70:f5:76:7e (capab=0x401 status=0 aid=1)
Jul 10 02:25:19 lizzie kernel: [  318.511952] eth0: associated
Jul 10 02:25:19 lizzie kernel: [  318.513218] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready

but often I see nothing in the logs at all, and iwconfig shows
"Not-associated".  I just keep repeating the 'iwconfig eth0 essid xxxx'
command until it finally takes, and then the connection seems to behave
normally.  When the card is not functioning, trying 'iwlist eth0 scan'
initially gives:

~# iwlist eth0 scan
eth0      Failed to read scan data : Resource temporarily unavailable

and subsequent invocations, when the card is still not working, gives:

~# iwlist eth0 scan
eth0      Interface doesn't support scanning : Device or resource busy

When the card resumes functioning, scanning works correctly.

I have tried both the old and new firmware, with similar results.  Any
ideas?


From mb at bu3sch.de  Fri Jul 10 11:31:41 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 10 Jul 2009 11:31:41 +0200
Subject: Fwd: 4318 misbehaving with bleeding edge kernels
Message-ID: <200907101131.41781.mb@bu3sch.de>


----------  Forwarded Message  ----------

Subject: 4318 misbehaving with bleeding edge kernels
Date: Friday 10 July 2009
From: Celejar <celejar at gmail.com>
To: bcm43xx-dev <bcm43xx-dev at lists.berlios.de>

Hi,

I have a 4318 (rev 02), which has been working fine with b43.
Recently, with 2.6.31-rc2 kernels from the wireless-testing git repo,
I've been having trouble.  Sometimes the card simply fails to associate
after doing 'iwconfig eth0 essid xxxx'.  It doesn't even seem to try;
i.e., when it does associate, I see log entries like these:

Jul 10 02:25:19 lizzie kernel: [  318.302652] eth0: direct probe to AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.310396] eth0 direct probe responded
Jul 10 02:25:19 lizzie kernel: [  318.310401] eth0: authenticate with AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.312273] eth0: authenticated
Jul 10 02:25:19 lizzie kernel: [  318.510040] eth0: associate with AP 00:1a:70:f5:76:7e (try 1)
Jul 10 02:25:19 lizzie kernel: [  318.511947] eth0: RX AssocResp from 00:1a:70:f5:76:7e (capab=0x401 status=0 aid=1)
Jul 10 02:25:19 lizzie kernel: [  318.511952] eth0: associated
Jul 10 02:25:19 lizzie kernel: [  318.513218] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready

but often I see nothing in the logs at all, and iwconfig shows
"Not-associated".  I just keep repeating the 'iwconfig eth0 essid xxxx'
command until it finally takes, and then the connection seems to behave
normally.  When the card is not functioning, trying 'iwlist eth0 scan'
initially gives:

~# iwlist eth0 scan
eth0      Failed to read scan data : Resource temporarily unavailable

and subsequent invocations, when the card is still not working, gives:

~# iwlist eth0 scan
eth0      Interface doesn't support scanning : Device or resource busy

When the card resumes functioning, scanning works correctly.

I have tried both the old and new firmware, with similar results.  Any
ideas?

From lspci -v:

06:02.0 Network controller: Broadcom Corporation BCM4318 [AirForce One 54g] 802.11g Wireless LAN Controller (rev 02)
	Subsystem: AMBIT Microsystem Corp. TravelMate 2410
	Flags: bus master, fast devsel, latency 64, IRQ 22
	Memory at d0002000 (32-bit, non-prefetchable) [size=8K]
	Kernel driver in use: b43-pci-bridge

uname -a:

Linux lizzie 2.6.31-rc2-wl-lizzie-27873-ga483c23-dirty #4 Thu Jul 9 19:13:30 EDT 2009 i686 GNU/Linux

Celejar
--
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator

_______________________________________________
Bcm43xx-dev mailing list
Bcm43xx-dev at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/bcm43xx-dev


-------------------------------------------------------

-- 
Greetings, Michael.


From linville at tuxdriver.com  Fri Jul 10 17:06:03 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 10 Jul 2009 11:06:03 -0400
Subject: Fwd: 4318 misbehaving with bleeding edge kernels
In-Reply-To: <1247237986.3210.10.camel@mj>
References: <200907101131.41781.mb@bu3sch.de> <1247237986.3210.10.camel@mj>
Message-ID: <20090710150602.GB2825@tuxdriver.com>

On Fri, Jul 10, 2009 at 10:59:46AM -0400, Pavel Roskin wrote:
> On Fri, 2009-07-10 at 11:31 +0200, Michael Buesch wrote:
> 
> > I have a 4318 (rev 02), which has been working fine with b43.
> > Recently, with 2.6.31-rc2 kernels from the wireless-testing git repo,
> > I've been having trouble.  Sometimes the card simply fails to associate
> > after doing 'iwconfig eth0 essid xxxx'.  It doesn't even seem to try;
> > i.e., when it does associate, I see log entries like these:
> 
> I believe is that the ESSID support in the wext compatibility layer is
> seriously broken.  It's not shown originally at all.  Once it's set, it
> cannot be changed.

What kernel are you using?  I don't see this behavior...

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.
			?Viva Honduras Libre!


From ccmcphe at verizon.net  Mon Jul 13 21:37:39 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Mon, 13 Jul 2009 15:37:39 -0400
Subject: Off Subject Question
Message-ID: <4A5B8D03.9090901@verizon.net>

Does anyone know when or if the Wireless Summit will be in Portland?

Thanks in advance
Clyde McPherson



From mb at bu3sch.de  Mon Jul 13 21:41:27 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 13 Jul 2009 21:41:27 +0200
Subject: Off Subject Question
In-Reply-To: <4A5B8D03.9090901@verizon.net>
References: <4A5B8D03.9090901@verizon.net>
Message-ID: <200907132141.28065.mb@bu3sch.de>

On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
> Does anyone know when or if the Wireless Summit will be in Portland?

There currently is no plan to do a summit in Portland.
The last summit recently was on the Linux Tag in Berlin.

-- 
Greetings, Michael.


From mcgrof at gmail.com  Mon Jul 13 21:48:29 2009
From: mcgrof at gmail.com (Luis R. Rodriguez)
Date: Mon, 13 Jul 2009 12:48:29 -0700
Subject: Off Subject Question
In-Reply-To: <200907132141.28065.mb@bu3sch.de>
References: <4A5B8D03.9090901@verizon.net> <200907132141.28065.mb@bu3sch.de>
Message-ID: <43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>

On Mon, Jul 13, 2009 at 12:41 PM, Michael Buesch<mb at bu3sch.de> wrote:
> On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
>> Does anyone know when or if the Wireless Summit will be in Portland?
>
> There currently is no plan to do a summit in Portland.
> The last summit recently was on the Linux Tag in Berlin.

Actually there is one but its currently invite-only.

  Luis


From mcgrof at gmail.com  Mon Jul 13 21:48:29 2009
From: mcgrof at gmail.com (Luis R. Rodriguez)
Date: Mon, 13 Jul 2009 12:48:29 -0700
Subject: Off Subject Question
In-Reply-To: <200907132141.28065.mb@bu3sch.de>
References: <4A5B8D03.9090901@verizon.net> <200907132141.28065.mb@bu3sch.de>
Message-ID: <43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>

On Mon, Jul 13, 2009 at 12:41 PM, Michael Buesch<mb at bu3sch.de> wrote:
> On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
>> Does anyone know when or if the Wireless Summit will be in Portland?
>
> There currently is no plan to do a summit in Portland.
> The last summit recently was on the Linux Tag in Berlin.

Actually there is one but its currently invite-only.

  Luis


From mb at bu3sch.de  Mon Jul 13 21:41:27 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 13 Jul 2009 21:41:27 +0200
Subject: Off Subject Question
In-Reply-To: <4A5B8D03.9090901@verizon.net>
References: <4A5B8D03.9090901@verizon.net>
Message-ID: <200907132141.28065.mb@bu3sch.de>

On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
> Does anyone know when or if the Wireless Summit will be in Portland?

There currently is no plan to do a summit in Portland.
The last summit recently was on the Linux Tag in Berlin.

-- 
Greetings, Michael.


From linville at tuxdriver.com  Tue Jul 14 15:32:11 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 14 Jul 2009 09:32:11 -0400
Subject: Off Subject Question
In-Reply-To: <43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>
References: <4A5B8D03.9090901@verizon.net> <200907132141.28065.mb@bu3sch.de>
	<43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>
Message-ID: <20090714133211.GB3484@tuxdriver.com>

On Mon, Jul 13, 2009 at 12:48:29PM -0700, Luis R. Rodriguez wrote:
> On Mon, Jul 13, 2009 at 12:41 PM, Michael Buesch<mb at bu3sch.de> wrote:
> > On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
> >> Does anyone know when or if the Wireless Summit will be in Portland?
> >
> > There currently is no plan to do a summit in Portland.
> > The last summit recently was on the Linux Tag in Berlin.
> 
> Actually there is one but its currently invite-only.

Indeed...space is tight, but please feel free to nominate oneself or
someone else if you are interested.  It is in Portland on the weekend
before LinuxCon.

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.
			?Viva Honduras Libre!


From linville at tuxdriver.com  Tue Jul 14 15:32:11 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 14 Jul 2009 09:32:11 -0400
Subject: Off Subject Question
In-Reply-To: <43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>
References: <4A5B8D03.9090901@verizon.net> <200907132141.28065.mb@bu3sch.de>
	<43e72e890907131248s4e7ffaeap9e988f960c4d73bd@mail.gmail.com>
Message-ID: <20090714133211.GB3484@tuxdriver.com>

On Mon, Jul 13, 2009 at 12:48:29PM -0700, Luis R. Rodriguez wrote:
> On Mon, Jul 13, 2009 at 12:41 PM, Michael Buesch<mb at bu3sch.de> wrote:
> > On Monday 13 July 2009 21:37:39 Clyde McPherson wrote:
> >> Does anyone know when or if the Wireless Summit will be in Portland?
> >
> > There currently is no plan to do a summit in Portland.
> > The last summit recently was on the Linux Tag in Berlin.
> 
> Actually there is one but its currently invite-only.

Indeed...space is tight, but please feel free to nominate oneself or
someone else if you are interested.  It is in Portland on the weekend
before LinuxCon.

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.
			?Viva Honduras Libre!


From mparnell at gmail.com  Wed Jul 15 01:21:24 2009
From: mparnell at gmail.com (Matt Parnell)
Date: Tue, 14 Jul 2009 18:21:24 -0500
Subject: Bug Report - BCM4311 on an HP Laptop (dv9205us)
Message-ID: <680ad8bc0907141621o52e51af7id1e3411a0c0f743f@mail.gmail.com>

I have fought with this issue for years now, and am still at a loss, though
I used to be able to work around it. You may take note that since this is an
HP laptop, other problems have been discussed in the past regarding rfkill,
b43, and getting them to play nice on HP laptops. After much researching, I
don't think anyone ever fixed it. I can attest to it still not working
properly. I would appreciate any help you all can give me, and I appreciate
b43, as it makes everything on my system (almost now) work natively.

Bug Report Below:
This problem has existed in one way or another since b43 first came about.
Up until now, I had to compile b43, as well as polldev, evdev, rfkill, and
leds_class as modules instead of building them in to get them to (sometimes)
work depending on the kernel, allowing my wireless card to work. Now, I get
the same result either way, and it is quite strange.

I really would rather build everything in, and it makes no difference if I
do either anymore. At boot, the card is brought up by software, only to be
disabled immediately in a split second by rfkill. I try to manually change
rfkill's state via several methods, only to get "operation not permitted."
Furthermore, if I try to do an ifconfig up with rfkill enabled, I get
"SIOCSIFFLAGS: Unknown error 132."

If I don't build rfkill at all, I can bring the card up and down manually,
but am unable to scan or connect to any networks. Both ways, the rfkill
switch has no bearing on whether or not the device functions, and doesn't
change the LED state either.

I can confirm that I have LEDS_CLASS, INPUT_POLLDEV, EVDEV, RFKILL (when
mentioned), and B43 all built in (and have tried them all as modules). I
know my kernel is bleeding edge, but this problem is not related, as it has
happened to me off and on since 2.6.26 or earlier.

To reproduce, you need a Broadcom Corporation BCM4311 802.11b/g WLAN (rev
01) and a 2.6.3x (or some of the 2.6.2x) kernel.

My current kernel: Linux mattop 2.6.31-rc2-zen1-20090105 #4 ZEN SMP PREEMPT
Tue Jul 14 17:41:50 CDT 2009 x86_64 AMD Turion(tm) 64 X2 Mobile Technology
TL-50 AuthenticAMD GNU/Linux

Output of lspci -vvn|grep 43 -A7:

03:00.0 0280: 14e4:4311 (rev 01)
        Subsystem: 103c:1363
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort-
<TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 19
        Region 0: Memory at b6000000 (32-bit, non-prefetchable) [size=16K]
        Capabilities: <access denied>
        Kernel driver in use: b43-pci-bridge

07:05.0 0c00: 1180:0832 (prog-if 10 [OHCI])
        Subsystem: 103c:30b7
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort-
<TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 64 (500ns min, 1000ns max)
        Interrupt: pin A routed to IRQ 11
--
07:05.2 0880: 1180:0843 (rev 01)
        Subsystem: 103c:30b7
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
Stepping- SERR+ FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort-
<TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 0
        Interrupt: pin B routed to IRQ 11
        Region 0: Memory at b8000c00 (32-bit, non-prefetchable) [size=256]
        Capabilities: <access denied>

Output of dmesg | grep b43 (see the line that says status changed to
DISABLED):

b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
b43-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 debug: Chip initialized
b43-phy0 debug: 32-bit DMA initialized
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio turned on by software
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0 debug: Removing Interface type 2
b43-phy0 debug: Wireless interface stopped
b43-phy0 debug: DMA-32 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%,
Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy0 debug: DMA-32 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 =
0.0%, Average tries 0.00

The wlan configuration is probably irrelevant, but I've tried using iwconfig
manually, as well as wifi-radar, and networkmanager, all to connect to open
AP's with no success. Furthermore, I can't scan and find them.

Sorry, I don't have a bisection and didn't actually pull the b43 git
sources, as they are included and updated on an as-changed basis by the Zen
kernel devs. I believe I would have this problem with the other current
stable kernels as well, though, since this has happened since 2.6.26 as I
experimented with a wide range of kernels, including vanilla.


Matt Parnell
mparnell at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090714/57b6cbf8/attachment.html>

From Larry.Finger at lwfinger.net  Wed Jul 15 05:31:26 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 14 Jul 2009 22:31:26 -0500
Subject: Bug Report - BCM4311 on an HP Laptop (dv9205us)
In-Reply-To: <680ad8bc0907141621o52e51af7id1e3411a0c0f743f@mail.gmail.com>
References: <680ad8bc0907141621o52e51af7id1e3411a0c0f743f@mail.gmail.com>
Message-ID: <4A5D4D8E.8000002@lwfinger.net>

Matt Parnell wrote:
> Output of dmesg | grep b43 (see the line that says status changed to
> DISABLED):
> 
> b43-phy0 debug: Found PHY: Analog 4, Type 2, Revision 8
> b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 2
> b43-phy0 debug: DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config
> b43 ssb0:0: firmware: requesting b43/ucode5.fw
> b43 ssb0:0: firmware: requesting b43/pcm5.fw
> b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
> b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
> b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
> b43-phy0 debug: Chip initialized
> b43-phy0 debug: 32-bit DMA initialized
> Registered led device: b43-phy0::tx
> Registered led device: b43-phy0::rx
> Registered led device: b43-phy0::radio
> b43-phy0 debug: Wireless interface started
> b43-phy0 debug: Adding Interface type 2
> b43-phy0: Radio turned on by software
> b43-phy0: Radio hardware status changed to DISABLED

The software is doing exactly as it should. Your radio kill switch is
_OFF_, which tells the system to forbid the transmitter from
generating a radio signal.

The problem is that your radio kill switch does not generate a
keycode. This kind of hardware is handled by the hp-wmi module, but
you will need to load it manually. It will not load automatically as
there is no way to detect that the switch on your laptop is of that
type. Note that WMI stands for Windows Management Interface.

Larry


From Larry.Finger at lwfinger.net  Wed Jul 15 19:34:20 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 15 Jul 2009 12:34:20 -0500
Subject: Bug Report - BCM4311 on an HP Laptop (dv9205us)
In-Reply-To: <680ad8bc0907151010w19c26d73lb8a2a461dccb037a@mail.gmail.com>
References: <680ad8bc0907141621o52e51af7id1e3411a0c0f743f@mail.gmail.com>	
	<4A5D4D8E.8000002@lwfinger.net>
	<680ad8bc0907151010w19c26d73lb8a2a461dccb037a@mail.gmail.com>
Message-ID: <4A5E131C.9030009@lwfinger.net>

Matt Parnell wrote:
> I've been building the hp-wmi module, and it has always worked, as the
> hotkeys above my keyboard have always sent proper codes. I will tinker
> and see if I can't get it to work, and I really hope that I don't look
> like a n00b here in front of everyone on the list. One other question
> entails the fact that even with RFKILL disabled, I was still unable to
> get wireless to work...I even upgraded to the latest firmware.
> 
> Thanks for the heads up, though.

Do not drop the list from the CC's for 2 reasons. I  may get the
answer wrong, or our interchange may help someone else with their
debugging.

For the BCM43XX PCIe modules, the input from the radio kill switch is
wired into the device. When you disable RFKILL in the kernel, all you
disable is the ability of the kernel to deliver the info that the
switch has changed. The driver still reads the state when it loads. If
it was off at startup, it remains off.

Larry




From mparnell at gmail.com  Thu Jul 16 20:56:42 2009
From: mparnell at gmail.com (Matt Parnell)
Date: Thu, 16 Jul 2009 13:56:42 -0500
Subject: Bcm43xx-dev Digest, Vol 37, Issue 12
In-Reply-To: <mailman.49.1247738478.7988.bcm43xx-dev@lists.berlios.de>
References: <mailman.49.1247738478.7988.bcm43xx-dev@lists.berlios.de>
Message-ID: <680ad8bc0907161156v272ff61cna09ca584e56f45c5@mail.gmail.com>

All of that said, I still can't change the hardware or software states, and
I have tried manually...I get permission denied errors. I'm going to upgrade
my git repo and rebuild first, but if that doesn't work I'll make sure to
post here.

-Matt

On Thu, Jul 16, 2009 at 5:01 AM, <bcm43xx-dev-request at lists.berlios.de>wrote:

> Send Bcm43xx-dev mailing list submissions to
>        bcm43xx-dev at lists.berlios.de
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> or, via email, send a message with subject or body 'help' to
>        bcm43xx-dev-request at lists.berlios.de
>
> You can reach the person managing the list at
>        bcm43xx-dev-owner at lists.berlios.de
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Bcm43xx-dev digest..."
>
>
> Today's Topics:
>
>   1. Re: Bug Report - BCM4311 on an HP Laptop (dv9205us) (Larry Finger)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 15 Jul 2009 12:34:20 -0500
> From: Larry Finger <Larry.Finger at lwfinger.net>
> Subject: Re: Bug Report - BCM4311 on an HP Laptop (dv9205us)
> To: Matt Parnell <mparnell at gmail.com>
> Cc: Broadcom Linux <bcm43xx-dev at lists.berlios.de>
> Message-ID: <4A5E131C.9030009 at lwfinger.net>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Matt Parnell wrote:
> > I've been building the hp-wmi module, and it has always worked, as the
> > hotkeys above my keyboard have always sent proper codes. I will tinker
> > and see if I can't get it to work, and I really hope that I don't look
> > like a n00b here in front of everyone on the list. One other question
> > entails the fact that even with RFKILL disabled, I was still unable to
> > get wireless to work...I even upgraded to the latest firmware.
> >
> > Thanks for the heads up, though.
>
> Do not drop the list from the CC's for 2 reasons. I  may get the
> answer wrong, or our interchange may help someone else with their
> debugging.
>
> For the BCM43XX PCIe modules, the input from the radio kill switch is
> wired into the device. When you disable RFKILL in the kernel, all you
> disable is the ability of the kernel to deliver the info that the
> switch has changed. The driver still reads the state when it loads. If
> it was off at startup, it remains off.
>
> Larry
>
>
>
>
> ------------------------------
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
> End of Bcm43xx-dev Digest, Vol 37, Issue 12
> *******************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090716/7daa9c49/attachment.html>

From mparnell at gmail.com  Fri Jul 17 20:33:46 2009
From: mparnell at gmail.com (Matt Parnell)
Date: Fri, 17 Jul 2009 13:33:46 -0500
Subject: Bcm43xx-dev Digest, Vol 37, Issue 13
In-Reply-To: <mailman.65.1247824905.19909.bcm43xx-dev@lists.berlios.de>
References: <mailman.65.1247824905.19909.bcm43xx-dev@lists.berlios.de>
Message-ID: <680ad8bc0907171133j4bda0c30i8a1e1cb45d089ec9@mail.gmail.com>

It's fixed...no worries. I guess it was something within that revision of
kernel code after all.

On Fri, Jul 17, 2009 at 5:01 AM, <bcm43xx-dev-request at lists.berlios.de>wrote:

> Send Bcm43xx-dev mailing list submissions to
>        bcm43xx-dev at lists.berlios.de
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> or, via email, send a message with subject or body 'help' to
>        bcm43xx-dev-request at lists.berlios.de
>
> You can reach the person managing the list at
>        bcm43xx-dev-owner at lists.berlios.de
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Bcm43xx-dev digest..."
>
>
> Today's Topics:
>
>   1. Re: Bcm43xx-dev Digest, Vol 37, Issue 12 (Matt Parnell)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 16 Jul 2009 13:56:42 -0500
> From: Matt Parnell <mparnell at gmail.com>
> Subject: Re: Bcm43xx-dev Digest, Vol 37, Issue 12
> To: bcm43xx-dev at lists.berlios.de
> Message-ID:
>        <680ad8bc0907161156v272ff61cna09ca584e56f45c5 at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> All of that said, I still can't change the hardware or software states, and
> I have tried manually...I get permission denied errors. I'm going to
> upgrade
> my git repo and rebuild first, but if that doesn't work I'll make sure to
> post here.
>
> -Matt
>
> On Thu, Jul 16, 2009 at 5:01 AM, <bcm43xx-dev-request at lists.berlios.de
> >wrote:
>
> > Send Bcm43xx-dev mailing list submissions to
> >        bcm43xx-dev at lists.berlios.de
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> > or, via email, send a message with subject or body 'help' to
> >        bcm43xx-dev-request at lists.berlios.de
> >
> > You can reach the person managing the list at
> >        bcm43xx-dev-owner at lists.berlios.de
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of Bcm43xx-dev digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Re: Bug Report - BCM4311 on an HP Laptop (dv9205us) (Larry Finger)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Wed, 15 Jul 2009 12:34:20 -0500
> > From: Larry Finger <Larry.Finger at lwfinger.net>
> > Subject: Re: Bug Report - BCM4311 on an HP Laptop (dv9205us)
> > To: Matt Parnell <mparnell at gmail.com>
> > Cc: Broadcom Linux <bcm43xx-dev at lists.berlios.de>
> > Message-ID: <4A5E131C.9030009 at lwfinger.net>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Matt Parnell wrote:
> > > I've been building the hp-wmi module, and it has always worked, as the
> > > hotkeys above my keyboard have always sent proper codes. I will tinker
> > > and see if I can't get it to work, and I really hope that I don't look
> > > like a n00b here in front of everyone on the list. One other question
> > > entails the fact that even with RFKILL disabled, I was still unable to
> > > get wireless to work...I even upgraded to the latest firmware.
> > >
> > > Thanks for the heads up, though.
> >
> > Do not drop the list from the CC's for 2 reasons. I  may get the
> > answer wrong, or our interchange may help someone else with their
> > debugging.
> >
> > For the BCM43XX PCIe modules, the input from the radio kill switch is
> > wired into the device. When you disable RFKILL in the kernel, all you
> > disable is the ability of the kernel to deliver the info that the
> > switch has changed. The driver still reads the state when it loads. If
> > it was off at startup, it remains off.
> >
> > Larry
> >
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > Bcm43xx-dev mailing list
> > Bcm43xx-dev at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >
> >
> > End of Bcm43xx-dev Digest, Vol 37, Issue 12
> > *******************************************
> >
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090716/7daa9c49/attachment-0001.html
>
> ------------------------------
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>
> End of Bcm43xx-dev Digest, Vol 37, Issue 13
> *******************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090717/f509a6e1/attachment.html>

From francesco.gringoli at ing.unibs.it  Tue Jul 21 18:41:22 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Tue, 21 Jul 2009 18:41:22 +0200
Subject: Improved opensource firmware
Message-ID: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>

Hello there,

after a long time we just made available a new version of the  
opensource firmware at http://www.ing.unibs.it/openfwwf (release 5.2).

We discovered a bug that was causing the firmware to go into  
suspension after a phy error due to external conditions: syslog  
reported a phy error and the mac suspended, interface was no more  
usable. This bug appears usually when the signal received from the  
peer is very low, and was reported by several users. Now we can still  
have phy errors in the system.log but the interface remains fully  
functional (as it happens with the official firmware).

There are also more comments in the source code with some registers  
explained.

Larry, I think this could be one of the causes of the malfunctioning  
you reported before. If you have some time (and indeed if you feel  
like doing it :-) ) please test this firmware, it will be great.

Cheers,
-Francesco



"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From bervikk at gmail.com  Wed Jul 22 06:02:58 2009
From: bervikk at gmail.com (Berke Viktor)
Date: Wed, 22 Jul 2009 06:02:58 +0200
Subject: Improved opensource firmware
In-Reply-To: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
Message-ID: <20090722060258.00006487@unknown>

wow! although b43 & openfwwf already worked fine for me, i'm glad to
see openfwwf is still improving after a 100 day hiatus. i'm unable to
test it ATM, but anyway, thanks for your efforts!

On Tue, 21 Jul 2009 18:41:22 +0200
Francesco Gringoli <francesco.gringoli at ing.unibs.it> wrote:

> Hello there,
> 
> after a long time we just made available a new version of the  
> opensource firmware at http://www.ing.unibs.it/openfwwf (release 5.2).
> 
> We discovered a bug that was causing the firmware to go into  
> suspension after a phy error due to external conditions: syslog  
> reported a phy error and the mac suspended, interface was no more  
> usable. This bug appears usually when the signal received from the  
> peer is very low, and was reported by several users. Now we can
> still have phy errors in the system.log but the interface remains
> fully functional (as it happens with the official firmware).
> 
> There are also more comments in the source code with some registers  
> explained.
> 
> Larry, I think this could be one of the causes of the malfunctioning  
> you reported before. If you have some time (and indeed if you feel  
> like doing it :-) ) please test this firmware, it will be great.
> 
> Cheers,
> -Francesco


From bervikk at gmail.com  Wed Jul 22 06:05:43 2009
From: bervikk at gmail.com (Berke Viktor)
Date: Wed, 22 Jul 2009 06:05:43 +0200
Subject: Improved opensource firmware
In-Reply-To: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
Message-ID: <20090722060543.00006007@unknown>

oh i forgot to ask: any plan to implement QoS and/or hw crypto?

On Tue, 21 Jul 2009 18:41:22 +0200
Francesco Gringoli <francesco.gringoli at ing.unibs.it> wrote:

> Hello there,
> 
> after a long time we just made available a new version of the  
> opensource firmware at http://www.ing.unibs.it/openfwwf (release 5.2).
> 
> We discovered a bug that was causing the firmware to go into  
> suspension after a phy error due to external conditions: syslog  
> reported a phy error and the mac suspended, interface was no more  
> usable. This bug appears usually when the signal received from the  
> peer is very low, and was reported by several users. Now we can
> still have phy errors in the system.log but the interface remains
> fully functional (as it happens with the official firmware).
> 
> There are also more comments in the source code with some registers  
> explained.
> 
> Larry, I think this could be one of the causes of the malfunctioning  
> you reported before. If you have some time (and indeed if you feel  
> like doing it :-) ) please test this firmware, it will be great.
> 
> Cheers,
> -Francesco


From Larry.Finger at lwfinger.net  Thu Jul 23 04:05:17 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 22 Jul 2009 21:05:17 -0500
Subject: Improved opensource firmware
In-Reply-To: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
Message-ID: <4A67C55D.9040306@lwfinger.net>

Francesco Gringoli wrote:
> Larry, I think this could be one of the causes of the malfunctioning you
> reported before. If you have some time (and indeed if you feel like
> doing it :-) ) please test this firmware, it will be great.

Francesco,

The system ran about 30 minutes, then crashed. I missed the first
oops, but caught a kernel panic with formal traceback on my i386 system:

b43_dma_handle_txstatus + 0x1ee/0x2fa
b43_handle_txstatus + 0x45/0x52

The call in b43_dma_handle_status is at line 1405:

unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
                 1);

The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the oops.

As usual, I was running an infinite loop of tcpperf in one console and
a flood ping in a second.

Larry



From francesco.gringoli at ing.unibs.it  Thu Jul 23 10:08:24 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 23 Jul 2009 10:08:24 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A67C55D.9040306@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
Message-ID: <BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>

On Jul 23, 2009, at 4:05 AM, Larry Finger wrote:

> Francesco Gringoli wrote:
>> Larry, I think this could be one of the causes of the  
>> malfunctioning you
>> reported before. If you have some time (and indeed if you feel like
>> doing it :-) ) please test this firmware, it will be great.
>
> Francesco,
>
> The system ran about 30 minutes, then crashed. I missed the first
> oops, but caught a kernel panic with formal traceback on my i386  
> system:
>
> b43_dma_handle_txstatus + 0x1ee/0x2fa
> b43_handle_txstatus + 0x45/0x52
>
> The call in b43_dma_handle_status is at line 1405:
>
> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
>                 1);
>
> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the  
> oops.
>
> As usual, I was running an infinite loop of tcpperf in one console and
> a flood ping in a second.
>
> Larry
Hi Larry,

Many many thanks.

As I focussed almost only on the firmware side during these last  
months, I forgot to upgrade the kernel :-) . Which version have you  
used to do the test? Are you still using the PCcard32 (rev11/a)? I  
will try this summer to replicate precisely your setup. I also think  
it is time to use the support provided by Michael for telling the  
kernel which features are present.

Cheers,
-Francesco



"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From mb at bu3sch.de  Thu Jul 23 11:18:01 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 23 Jul 2009 11:18:01 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A67C55D.9040306@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
Message-ID: <200907231118.02274.mb@bu3sch.de>

On Thursday 23 July 2009 04:05:17 Larry Finger wrote:
> Francesco Gringoli wrote:
> > Larry, I think this could be one of the causes of the malfunctioning you
> > reported before. If you have some time (and indeed if you feel like
> > doing it :-) ) please test this firmware, it will be great.
> 
> Francesco,
> 
> The system ran about 30 minutes, then crashed. I missed the first
> oops, but caught a kernel panic with formal traceback on my i386 system:
> 
> b43_dma_handle_txstatus + 0x1ee/0x2fa
> b43_handle_txstatus + 0x45/0x52
> 
> The call in b43_dma_handle_status is at line 1405:
> 
> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
>                  1);
> 
> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the oops.

How is that possible? Is the firmware clobbering random memory?


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Jul 23 16:39:52 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 23 Jul 2009 09:39:52 -0500
Subject: Improved opensource firmware
In-Reply-To: <BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
	<BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
Message-ID: <4A687638.1040708@lwfinger.net>

Francesco Gringoli wrote:
> On Jul 23, 2009, at 4:05 AM, Larry Finger wrote:
> 
>> Francesco Gringoli wrote:
>>> Larry, I think this could be one of the causes of the malfunctioning you
>>> reported before. If you have some time (and indeed if you feel like
>>> doing it :-) ) please test this firmware, it will be great.
>>
>> Francesco,
>>
>> The system ran about 30 minutes, then crashed. I missed the first
>> oops, but caught a kernel panic with formal traceback on my i386 system:
>>
>> b43_dma_handle_txstatus + 0x1ee/0x2fa
>> b43_handle_txstatus + 0x45/0x52
>>
>> The call in b43_dma_handle_status is at line 1405:
>>
>> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
>>                 1);
>>
>> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
>> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the oops.
>>
>> As usual, I was running an infinite loop of tcpperf in one console and
>> a flood ping in a second.
>>
>> Larry
> Hi Larry,
> 
> Many many thanks.
> 
> As I focussed almost only on the firmware side during these last months,
> I forgot to upgrade the kernel :-) . Which version have you used to do
> the test? Are you still using the PCcard32 (rev11/a)? I will try this
> summer to replicate precisely your setup. I also think it is time to use
> the support provided by Michael for telling the kernel which features
> are present.

The dump traceback was for 2.6.31-rc1-wl. The card is a Cardbus
version of the BCM4318 on i386 architecture. I have now upgraded the
kernel for that machine to 2.6.31-rc3-wl, but as there have been no
recent changes in b43, I expect the same result. I will be adding some
diagnostics to the interrupt routine to detect bad values and get
better information for your debugging. Just knowint that there was a
"fatal exception in interrupt" crash isn't very helpful. I will also
test with my PCIe version of a BCM4311, which also uses rev 5
firmware. That will be on x86_64 architecture.

Larry


From francesco.gringoli at ing.unibs.it  Thu Jul 23 17:18:24 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 23 Jul 2009 17:18:24 +0200
Subject: Improved opensource firmware
In-Reply-To: <200907231118.02274.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net> <200907231118.02274.mb@bu3sch.de>
Message-ID: <A4536D29-0F24-4258-A78A-F2157F5F9B4C@ing.unibs.it>

On Jul 23, 2009, at 11:18 AM, Michael Buesch wrote:

> On Thursday 23 July 2009 04:05:17 Larry Finger wrote:
>> Francesco Gringoli wrote:
>>> Larry, I think this could be one of the causes of the  
>>> malfunctioning you
>>> reported before. If you have some time (and indeed if you feel like
>>> doing it :-) ) please test this firmware, it will be great.
>>
>> Francesco,
>>
>> The system ran about 30 minutes, then crashed. I missed the first
>> oops, but caught a kernel panic with formal traceback on my i386  
>> system:
>>
>> b43_dma_handle_txstatus + 0x1ee/0x2fa
>> b43_handle_txstatus + 0x45/0x52
>>
>> The call in b43_dma_handle_status is at line 1405:
>>
>> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
>>                 1);
>>
>> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
>> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the  
>> oops.
>
> How is that possible? Is the firmware clobbering random memory?

I don't think that the value was modified by the firmware. It cannot  
poke values into host memory ;-) I suppose that the issue on pccard32  
hardware is not yet solved. I will get a closer look at how the  
overflow condition should be handled correctly when reporting txstatus  
to host.

Cheers,
-Francesco



"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From mb at bu3sch.de  Thu Jul 23 23:29:25 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 23 Jul 2009 23:29:25 +0200
Subject: Improved opensource firmware
In-Reply-To: <A4536D29-0F24-4258-A78A-F2157F5F9B4C@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907231118.02274.mb@bu3sch.de>
	<A4536D29-0F24-4258-A78A-F2157F5F9B4C@ing.unibs.it>
Message-ID: <200907232329.25885.mb@bu3sch.de>

On Thursday 23 July 2009 17:18:24 Francesco Gringoli wrote:
> On Jul 23, 2009, at 11:18 AM, Michael Buesch wrote:
> 
> > On Thursday 23 July 2009 04:05:17 Larry Finger wrote:
> >> Francesco Gringoli wrote:
> >>> Larry, I think this could be one of the causes of the  
> >>> malfunctioning you
> >>> reported before. If you have some time (and indeed if you feel like
> >>> doing it :-) ) please test this firmware, it will be great.
> >>
> >> Francesco,
> >>
> >> The system ran about 30 minutes, then crashed. I missed the first
> >> oops, but caught a kernel panic with formal traceback on my i386  
> >> system:
> >>
> >> b43_dma_handle_txstatus + 0x1ee/0x2fa
> >> b43_handle_txstatus + 0x45/0x52
> >>
> >> The call in b43_dma_handle_status is at line 1405:
> >>
> >> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
> >>                 1);
> >>
> >> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
> >> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the  
> >> oops.
> >
> > How is that possible? Is the firmware clobbering random memory?
> 
> I don't think that the value was modified by the firmware. It cannot  
> poke values into host memory ;-)

Oh yes it can. It has a DMA engine.

> I suppose that the issue on pccard32   
> hardware is not yet solved.

Which issue? This crash does _not_ happen with proprietary firmware.
The only way dev->fw.rev could crash is by dev being NULL.

> I will get a closer look at how the   
> overflow condition should be handled correctly when reporting txstatus  
> to host.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Jul 24 01:24:34 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 23 Jul 2009 18:24:34 -0500
Subject: Improved opensource firmware
In-Reply-To: <BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
	<BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
Message-ID: <4A68F132.6010200@lwfinger.net>

Francesco Gringoli wrote:
> On Jul 23, 2009, at 4:05 AM, Larry Finger wrote:
> 
>> Francesco Gringoli wrote:
>>> Larry, I think this could be one of the causes of the malfunctioning you
>>> reported before. If you have some time (and indeed if you feel like
>>> doing it :-) ) please test this firmware, it will be great.
>>
>> Francesco,
>>
>> The system ran about 30 minutes, then crashed. I missed the first
>> oops, but caught a kernel panic with formal traceback on my i386 system:

I had a kernel panic while testing the open firmware on a BCM4312
802.11abg model (rev 01). The b/g section is just like a BCM4311/1. I
was not watching the error console, so I have no dump information, but
will do that next.

Larry


From francesco.gringoli at ing.unibs.it  Fri Jul 24 01:57:53 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 24 Jul 2009 01:57:53 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A68F132.6010200@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
	<BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
	<4A68F132.6010200@lwfinger.net>
Message-ID: <89CE36EA-7E86-451B-B341-18B8C8FA398E@ing.unibs.it>


On Jul 24, 2009, at 1:24 AM, Larry Finger wrote:

> Francesco Gringoli wrote:
>> On Jul 23, 2009, at 4:05 AM, Larry Finger wrote:
>>
>>> Francesco Gringoli wrote:
>>>> Larry, I think this could be one of the causes of the  
>>>> malfunctioning you
>>>> reported before. If you have some time (and indeed if you feel like
>>>> doing it :-) ) please test this firmware, it will be great.
>>>
>>> Francesco,
>>>
>>> The system ran about 30 minutes, then crashed. I missed the first
>>> oops, but caught a kernel panic with formal traceback on my i386  
>>> system:
>
> I had a kernel panic while testing the open firmware on a BCM4312
> 802.11abg model (rev 01). The b/g section is just like a BCM4311/1. I
> was not watching the error console, so I have no dump information, but
> will do that next.
>
> Larry
Hi Larry,

Last time (it was February I believe) I didn't buy anything because I  
was involved in other projects. So again I ask you if I can place an  
order for this item

http://cgi.ebay.com/HP-PCI-E-Broadcom-4312-wifi-card-generation-of-4311_W0QQitemZ320388697319QQcmdZViewItemQQptZLH_DefaultDomain_0?hash=item4a98a78ce7&_trksid=p3286.c0.m14&_trkparms=65%3A12%7C66%3A2%7C39%3A1%7C72%3A1234%7C293%3A1%7C294%3A50#ht_2507wt_1012

I hope the link is ok, otherwise you can get the picture from here

http://www.ing.unibs.it/~gringoli/4312.png

Tell me it's ok, I will order immediately, without the board I can't  
debug.

Many thanks,
-Francesco



"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From francesco.gringoli at ing.unibs.it  Fri Jul 24 02:13:38 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 24 Jul 2009 02:13:38 +0200
Subject: Improved opensource firmware
In-Reply-To: <200907232329.25885.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907231118.02274.mb@bu3sch.de>
	<A4536D29-0F24-4258-A78A-F2157F5F9B4C@ing.unibs.it>
	<200907232329.25885.mb@bu3sch.de>
Message-ID: <63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>


On Jul 23, 2009, at 11:29 PM, Michael Buesch wrote:

> On Thursday 23 July 2009 17:18:24 Francesco Gringoli wrote:
>> On Jul 23, 2009, at 11:18 AM, Michael Buesch wrote:
>>
>>> On Thursday 23 July 2009 04:05:17 Larry Finger wrote:
>>>> Francesco Gringoli wrote:
>>>>> Larry, I think this could be one of the causes of the
>>>>> malfunctioning you
>>>>> reported before. If you have some time (and indeed if you feel  
>>>>> like
>>>>> doing it :-) ) please test this firmware, it will be great.
>>>>
>>>> Francesco,
>>>>
>>>> The system ran about 30 minutes, then crashed. I missed the first
>>>> oops, but caught a kernel panic with formal traceback on my i386
>>>> system:
>>>>
>>>> b43_dma_handle_txstatus + 0x1ee/0x2fa
>>>> b43_handle_txstatus + 0x45/0x52
>>>>
>>>> The call in b43_dma_handle_status is at line 1405:
>>>>
>>>> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
>>>>                1);
>>>>
>>>> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
>>>> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the
>>>> oops.
>>>
>>> How is that possible? Is the firmware clobbering random memory?
>>
>> I don't think that the value was modified by the firmware. It cannot
>> poke values into host memory ;-)
>
> Oh yes it can. It has a DMA engine.
Hello Michael,

yes, you are right. I was referring to something like mov 0x0000,  
HOST_MEM[random].

Jokes apart, I really didn't think about this possibility but I  
believe your idea is correct. I originally thought, reading the specs,  
that the dma controller can be configured not only with the base  
address but also with a "Descriptor Stop Index", and I thought this  
was an upper limit to the memory it can use, beyond that the  
controller would have turned down to the beginning of the ring.  
Instead I see from the kernel code that there is not such kind of  
limit, is it right? Is it the kernel responsible of taking down the  
controller to the first slot when the dma reserved memory is exhausted  
(by writing zero in B43_DMA64_RXINDEX)? Sorry for these questions but  
I'm missing some details.

>> I suppose that the issue on pccard32
>> hardware is not yet solved.
>
> Which issue?
The one we are talking about, reported by Larry for some pccard32  
boards where the opensource firmware crashes. We did several testing  
with a few 4306 pccard32s the first time Larry reported the problem  
but unfortunately that hardware has different problems and crashes  
also with the original firmware.

> This crash does _not_ happen with proprietary firmware.
> The only way dev->fw.rev could crash is by dev being NULL.
Got it!

Many thanks,
-Francesco




"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From Larry.Finger at lwfinger.net  Fri Jul 24 03:44:49 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 23 Jul 2009 20:44:49 -0500
Subject: Improved opensource firmware
In-Reply-To: <89CE36EA-7E86-451B-B341-18B8C8FA398E@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
	<BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
	<4A68F132.6010200@lwfinger.net>
	<89CE36EA-7E86-451B-B341-18B8C8FA398E@ing.unibs.it>
Message-ID: <4A691211.9040801@lwfinger.net>

Francesco Gringoli wrote:
> 
> On Jul 24, 2009, at 1:24 AM, Larry Finger wrote:
> 
>> Francesco Gringoli wrote:
>>> On Jul 23, 2009, at 4:05 AM, Larry Finger wrote:
>>>
>>>> Francesco Gringoli wrote:
>>>>> Larry, I think this could be one of the causes of the
>>>>> malfunctioning you
>>>>> reported before. If you have some time (and indeed if you feel like
>>>>> doing it :-) ) please test this firmware, it will be great.
>>>>
>>>> Francesco,
>>>>
>>>> The system ran about 30 minutes, then crashed. I missed the first
>>>> oops, but caught a kernel panic with formal traceback on my i386
>>>> system:
>>
>> I had a kernel panic while testing the open firmware on a BCM4312
>> 802.11abg model (rev 01). The b/g section is just like a BCM4311/1. I
>> was not watching the error console, so I have no dump information, but
>> will do that next.
>>
>> Larry
> Hi Larry,
> 
> Last time (it was February I believe) I didn't buy anything because I
> was involved in other projects. So again I ask you if I can place an
> order for this item
> 
> http://cgi.ebay.com/HP-PCI-E-Broadcom-4312-wifi-card-generation-of-4311_W0QQitemZ320388697319QQcmdZViewItemQQptZLH_DefaultDomain_0?hash=item4a98a78ce7&_trksid=p3286.c0.m14&_trkparms=65%3A12%7C66%3A2%7C39%3A1%7C72%3A1234%7C293%3A1%7C294%3A50#ht_2507wt_1012

You must be careful with BCM4312 units as some of them have rev 5
cores, but some have LP PHYs. The correct HP Part Number is
459263-001. The one you looked at is 459263-002, which has the LP PHY.
One other criterion is the -001 is an 802.11abg unit, whereas the -002
is 802.11bg.

The one in the listing below is the correct model. Unfortunately, it
is in Malaysia and the shipping will be high.
http://cgi.ebay.com.my/ws/eBayISAPI.dll?ViewItem&item=150358107902

If there is a problem finding one at a reasonable price, I would be
willing to ship mine to you.

I got the dump from a second error from my PCIe card. It hit the
BUG_ON(!meta->skb) in b43_dma_handle_txstatus() (Line 1414 of
drivers/net/wireless/b43/dma.c). In the first one I reported,
meta->skb was not NULL, and it crashed during the
unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len, 1).

Larry




From francesco.gringoli at ing.unibs.it  Fri Jul 24 10:25:02 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 24 Jul 2009 10:25:02 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A691211.9040801@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A67C55D.9040306@lwfinger.net>
	<BEE11717-BE5B-4E31-80BA-F6301DE23A63@ing.unibs.it>
	<4A68F132.6010200@lwfinger.net>
	<89CE36EA-7E86-451B-B341-18B8C8FA398E@ing.unibs.it>
	<4A691211.9040801@lwfinger.net>
Message-ID: <65E286F0-1300-46F8-BE00-64E5F5D3D9F1@ing.unibs.it>


On Jul 24, 2009, at 3:44 AM, Larry Finger wrote:

> Francesco Gringoli wrote:
>>>
>>>
>> Hi Larry,
>>
>> Last time (it was February I believe) I didn't buy anything because I
>> was involved in other projects. So again I ask you if I can place an
>> order for this item
>>
>> http://cgi.ebay.com/HP-PCI-E-Broadcom-4312-wifi-card-generation-of-4311_W0QQitemZ320388697319QQcmdZViewItemQQptZLH_DefaultDomain_0?hash=item4a98a78ce7&_trksid=p3286.c0.m14&_trkparms=65%3A12%7C66%3A2%7C39%3A1%7C72%3A1234%7C293%3A1%7C294%3A50#ht_2507wt_1012
>
> You must be careful with BCM4312 units as some of them have rev 5
> cores, but some have LP PHYs. The correct HP Part Number is
> 459263-001. The one you looked at is 459263-002, which has the LP PHY.
> One other criterion is the -001 is an 802.11abg unit, whereas the -002
> is 802.11bg.
>
> The one in the listing below is the correct model. Unfortunately, it
> is in Malaysia and the shipping will be high.
> http://cgi.ebay.com.my/ws/eBayISAPI.dll?ViewItem&item=150358107902
>
> If there is a problem finding one at a reasonable price, I would be
> willing to ship mine to you.
Hi Larry,

Don't matter, I just bought a couple of 4312 rev1 from the sellers you  
pointed out (just in case one adapter was broken...) I will start  
testing as soon as I get them.
>
>
> I got the dump from a second error from my PCIe card. It hit the
> BUG_ON(!meta->skb) in b43_dma_handle_txstatus() (Line 1414 of
> drivers/net/wireless/b43/dma.c). In the first one I reported,
> meta->skb was not NULL, and it crashed during the
> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len, 1).
I think having the hardware is mandatory because we are now doing  
stress testing using a number of 4318s and also several linksys  
WRT54GL and we can never observe a crash. After the last improvement  
the boards get never halted. So there should be something that must be  
handled differently on 4312/001. We will discover...

Many thanks for your help,

Cheers,
-Francesco
>
>
> Larry
>
>





"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From mb at bu3sch.de  Fri Jul 24 11:43:28 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 24 Jul 2009 11:43:28 +0200
Subject: Improved opensource firmware
In-Reply-To: <63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907232329.25885.mb@bu3sch.de>
	<63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>
Message-ID: <200907241143.28652.mb@bu3sch.de>

On Friday 24 July 2009 02:13:38 Francesco Gringoli wrote:
> 
> On Jul 23, 2009, at 11:29 PM, Michael Buesch wrote:
> 
> > On Thursday 23 July 2009 17:18:24 Francesco Gringoli wrote:
> >> On Jul 23, 2009, at 11:18 AM, Michael Buesch wrote:
> >>
> >>> On Thursday 23 July 2009 04:05:17 Larry Finger wrote:
> >>>> Francesco Gringoli wrote:
> >>>>> Larry, I think this could be one of the causes of the
> >>>>> malfunctioning you
> >>>>> reported before. If you have some time (and indeed if you feel  
> >>>>> like
> >>>>> doing it :-) ) please test this firmware, it will be great.
> >>>>
> >>>> Francesco,
> >>>>
> >>>> The system ran about 30 minutes, then crashed. I missed the first
> >>>> oops, but caught a kernel panic with formal traceback on my i386
> >>>> system:
> >>>>
> >>>> b43_dma_handle_txstatus + 0x1ee/0x2fa
> >>>> b43_handle_txstatus + 0x45/0x52
> >>>>
> >>>> The call in b43_dma_handle_status is at line 1405:
> >>>>
> >>>> unmap_descbuffer(ring, meta->dmaaddr, meta->skb->len,
> >>>>                1);
> >>>>
> >>>> The oops was in drivers/net/wireless/b43/xmit.h:171 in the call to
> >>>> b43_is_old_txhdr_format(). It appears that dev->fw.rev causes the
> >>>> oops.
> >>>
> >>> How is that possible? Is the firmware clobbering random memory?
> >>
> >> I don't think that the value was modified by the firmware. It cannot
> >> poke values into host memory ;-)
> >
> > Oh yes it can. It has a DMA engine.
> Hello Michael,
> 
> yes, you are right. I was referring to something like mov 0x0000,  
> HOST_MEM[random].
> 
> Jokes apart, I really didn't think about this possibility but I  
> believe your idea is correct. I originally thought, reading the specs,  
> that the dma controller can be configured not only with the base  
> address but also with a "Descriptor Stop Index", and I thought this  
> was an upper limit to the memory it can use, beyond that the  
> controller would have turned down to the beginning of the ring.  
> Instead I see from the kernel code that there is not such kind of  
> limit, is it right? Is it the kernel responsible of taking down the  
> controller to the first slot when the dma reserved memory is exhausted  
> (by writing zero in B43_DMA64_RXINDEX)? Sorry for these questions but  
> I'm missing some details.

Well it depends on the architecture to which places the DMA controller can write.
On i386 it can write pretty much anywhere. On x86_64 it can probably
only write to mapped areas due to the IOMMU.

The engine is supposed to wrap reading/writing at the descriptor table end marker
and should stop at the index marker.

> >> I suppose that the issue on pccard32
> >> hardware is not yet solved.
> >
> > Which issue?
> The one we are talking about, reported by Larry for some pccard32  
> boards where the opensource firmware crashes. We did several testing  
> with a few 4306 pccard32s the first time Larry reported the problem  
> but unfortunately that hardware has different problems and crashes  
> also with the original firmware.

Ok. I'd like to see some oopses with proprietary firmware.

> > This crash does _not_ happen with proprietary firmware.
> > The only way dev->fw.rev could crash is by dev being NULL.
> Got it!

Ok, NULL was a typo. I meant "invalid" instead.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Fri Jul 24 11:57:02 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 24 Jul 2009 11:57:02 +0200
Subject: Improved opensource firmware
In-Reply-To: <200907241143.28652.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907232329.25885.mb@bu3sch.de>
	<63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>
	<200907241143.28652.mb@bu3sch.de>
Message-ID: <A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>


On Jul 24, 2009, at 11:43 AM, Michael Buesch wrote:

> On Friday 24 July 2009 02:13:38 Francesco Gringoli wrote:
>>
>> Hello Michael,
>>
>> yes, you are right. I was referring to something like mov 0x0000,
>> HOST_MEM[random].
>>
>> Jokes apart, I really didn't think about this possibility but I
>> believe your idea is correct. I originally thought, reading the  
>> specs,
>> that the dma controller can be configured not only with the base
>> address but also with a "Descriptor Stop Index", and I thought this
>> was an upper limit to the memory it can use, beyond that the
>> controller would have turned down to the beginning of the ring.
>> Instead I see from the kernel code that there is not such kind of
>> limit, is it right? Is it the kernel responsible of taking down the
>> controller to the first slot when the dma reserved memory is  
>> exhausted
>> (by writing zero in B43_DMA64_RXINDEX)? Sorry for these questions but
>> I'm missing some details.
>
> Well it depends on the architecture to which places the DMA  
> controller can write.
> On i386 it can write pretty much anywhere. On x86_64 it can probably
> only write to mapped areas due to the IOMMU.
>
> The engine is supposed to wrap reading/writing at the descriptor  
> table end marker
> and should stop at the index marker.
As I wrote to Larry I decided to buy that kind of card. When I get it  
I will try to reproduce that problem and catch the bug. Thanks for  
clarifying the DMA.

>>>> I suppose that the issue on pccard32
>>>> hardware is not yet solved.
>>>
>>> Which issue?
>> The one we are talking about, reported by Larry for some pccard32
>> boards where the opensource firmware crashes. We did several testing
>> with a few 4306 pccard32s the first time Larry reported the problem
>> but unfortunately that hardware has different problems and crashes
>> also with the original firmware.
>
> Ok. I'd like to see some oopses with proprietary firmware.
I will have to send you the laptop and the cards (happens with both  
cards I have of that kind) because there is nothing written on  
display, it simply gets freeze. I also tried to enable the debug  
features such as magic system request keys to print something but they  
do not work. However the board is different than the one Larry  
reported the problem and in my case it can be something due to some  
hardware incompatibility.

>>> This crash does _not_ happen with proprietary firmware.
>>> The only way dev->fw.rev could crash is by dev being NULL.
>> Got it!
>
> Ok, NULL was a typo. I meant "invalid" instead.
>
> --
Cheers,
-Francesco




"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From mb at bu3sch.de  Fri Jul 24 12:13:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 24 Jul 2009 12:13:29 +0200
Subject: Improved opensource firmware
In-Reply-To: <A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907241143.28652.mb@bu3sch.de>
	<A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
Message-ID: <200907241213.29726.mb@bu3sch.de>

On Friday 24 July 2009 11:57:02 Francesco Gringoli wrote:
> > Ok. I'd like to see some oopses with proprietary firmware.
> I will have to send you the laptop and the cards (happens with both  
> cards I have of that kind) because there is nothing written on  
> display, it simply gets freeze. I also tried to enable the debug  
> features such as magic system request keys to print something but they  
> do not work. However the board is different than the one Larry  
> reported the problem and in my case it can be something due to some  
> hardware incompatibility.

Did you try things like the hangcheck timer? Just enable all kernel hacking options.

-- 
Greetings, Michael.


From peter at stuge.se  Fri Jul 24 13:53:33 2009
From: peter at stuge.se (Peter Stuge)
Date: Fri, 24 Jul 2009 13:53:33 +0200
Subject: Improved opensource firmware
In-Reply-To: <A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907232329.25885.mb@bu3sch.de>
	<63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>
	<200907241143.28652.mb@bu3sch.de>
	<A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
Message-ID: <20090724115334.27151.qmail@stuge.se>

Francesco Gringoli wrote:
> > Ok. I'd like to see some oopses with proprietary firmware.
> 
> I will have to send you the laptop and the cards (happens with both
> cards I have of that kind) because there is nothing written on
> display, it simply gets freeze.

Does the laptop have a serial port? In that case you could enable
serial console and maybe get some debugging information out.

Alternatively netconsole. Possibly even USB debug console, but for
that you need a debug class device:

http://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=12083


//Peter


From Larry.Finger at lwfinger.net  Fri Jul 24 16:48:49 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 24 Jul 2009 09:48:49 -0500
Subject: Improved opensource firmware
In-Reply-To: <A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907232329.25885.mb@bu3sch.de>
	<63EF86DE-9501-423E-A54A-21EC89A939F5@ing.unibs.it>
	<200907241143.28652.mb@bu3sch.de>
	<A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
Message-ID: <4A69C9D1.3060905@lwfinger.net>

Francesco,

Sorry, but I missed a warning about DMA queue overflow that was being
logged as follows:

 ------------[ cut here ]------------
 WARNING: at drivers/net/wireless/b43/dma.c:1342
b43_dma_tx+0x115/0x9b2 [b43]()
 Hardware name: HP Pavilion dv2700 Notebook PC
 Modules linked in: b43 ssb rng_core mac80211 cfg80211 rfkill
led_class aes_x86_64 aes_gene
ric af_packet snd_pcm_oss snd_mixer_oss snd_seq snd_seq_device nfs
lockd nfs_acl auth_rpcgss vboxnetadp sunrpc vboxnetflt v
boxdrv cpufreq_conservative cpufreq_userspace cpufreq_powersave
powernow_k8 fuse ext4 jbd2 crc16 loop dm_mod ide_cd_mod cdr
om snd_hda_codec_conexant arc4 ecb ide_pci_generic snd_hda_intel
snd_hda_codec snd_pcm snd_timer ac k8temp amd74xx i2c_nfor
ce2 battery snd sg serio_raw button forcedeth hwmon soundcore
snd_page_alloc ide_core joydev i2c_core sd_mod ohci_hcd ehci_
hcd usbcore edd ahci libata scsi_mod ext3 mbcache jbd fan thermal
processor [last unloaded: led_class]
 Pid: 10623, comm: tcpperf Tainted: G        W  2.6.31-rc3-wl #183
 Call Trace:
  [<ffffffffa06cfeed>] ? b43_dma_tx+0x115/0x9b2 [b43]
  [<ffffffff8103f426>] warn_slowpath_common+0x77/0xa4
  [<ffffffff8103f462>] warn_slowpath_null+0xf/0x11
  [<ffffffffa06cfeed>] b43_dma_tx+0x115/0x9b2 [b43]
  [<ffffffffa06be7af>] ? b43_op_tx+0x60/0x9e [b43]
  [<ffffffffa06be7c5>] b43_op_tx+0x76/0x9e [b43]
  [<ffffffffa06950c7>] __ieee80211_tx+0xa3/0x104 [mac80211]
  [<ffffffffa069524c>] ieee80211_tx+0x124/0x272 [mac80211]
  [<ffffffffa0695169>] ? ieee80211_tx+0x41/0x272 [mac80211]
  [<ffffffffa0695604>] ieee80211_xmit+0x26a/0x28e [mac80211]
  [<ffffffffa0696372>] ieee80211_subif_start_xmit+0x516/0x538 [mac80211]
  [<ffffffffa069606a>] ? ieee80211_subif_start_xmit+0x20e/0x538 [mac80211]
  [<ffffffff8106380f>] ? trace_hardirqs_on_caller+0xf1/0x12f
  [<ffffffff8106385a>] ? trace_hardirqs_on+0xd/0xf
  [<ffffffff81202e3c>] ? __kfree_skb+0x82/0x86
  [<ffffffff8120b38f>] dev_hard_start_xmit+0x254/0x302
  [<ffffffff8120b199>] ? dev_hard_start_xmit+0x5e/0x302
  [<ffffffff8121cafa>] __qdisc_run+0xf5/0x208
  [<ffffffff8120b79a>] dev_queue_xmit+0x24b/0x390
  [<ffffffff8120b6c4>] ? dev_queue_xmit+0x175/0x390
  [<ffffffff8122c631>] ip_finish_output+0x239/0x27f
  [<ffffffff810dce0c>] ? do_select+0x5b7/0x5d6
  [<ffffffff8122c720>] ip_output+0xa9/0xad
  [<ffffffff8122b7b3>] ip_local_out+0x20/0x24
  [<ffffffff8122c020>] ip_queue_xmit+0x2e0/0x337
  [<ffffffff8123d20d>] tcp_transmit_skb+0x600/0x643
  [<ffffffff8123f71b>] tcp_write_xmit+0x83f/0x924
  [<ffffffff810449d0>] ? local_bh_enable+0xc9/0xce
  [<ffffffff8123f82f>] tcp_push_one+0x2f/0x31
  [<ffffffff81233cda>] tcp_sendmsg+0x7d1/0xa2e
  [<ffffffff811fc5ce>] sock_sendmsg+0xdf/0xf8
  [<ffffffff810b060b>] ? might_fault+0xaf/0xb1
  [<ffffffff81054e88>] ? autoremove_wake_function+0x0/0x38
  [<ffffffff810dce68>] ? core_sys_select+0x3d/0x2b4
  [<ffffffff81063829>] ? trace_hardirqs_on_caller+0x10b/0x12f
  [<ffffffff8106385a>] ? trace_hardirqs_on+0xd/0xf
  [<ffffffff811fbeff>] ? sockfd_lookup_light+0x1b/0x54
  [<ffffffff811fd150>] sys_sendto+0xdf/0x107
  [<ffffffff81058077>] ? ktime_get_ts+0x49/0x4e
  [<ffffffff810dbfbd>] ? poll_select_copy_remaining+0xc5/0xea
  [<ffffffff8100ba6b>] system_call_fastpath+0x16/0x1b
 ---[ end trace 3cd1097c91b647a6 ]---
 b43-phy0 warning: DMA queue overflow

Larry



From mb at bu3sch.de  Fri Jul 24 20:59:28 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 24 Jul 2009 20:59:28 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A69C9D1.3060905@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
	<4A69C9D1.3060905@lwfinger.net>
Message-ID: <200907242059.29186.mb@bu3sch.de>

On Friday 24 July 2009 16:48:49 Larry Finger wrote:
> Francesco,
> 
> Sorry, but I missed a warning about DMA queue overflow that was being
> logged as follows:

Can you printk the value of free_slots(), when this happens?

> 
>  ------------[ cut here ]------------
>  WARNING: at drivers/net/wireless/b43/dma.c:1342
> b43_dma_tx+0x115/0x9b2 [b43]()
>  Hardware name: HP Pavilion dv2700 Notebook PC
>  Modules linked in: b43 ssb rng_core mac80211 cfg80211 rfkill
> led_class aes_x86_64 aes_gene
> ric af_packet snd_pcm_oss snd_mixer_oss snd_seq snd_seq_device nfs
> lockd nfs_acl auth_rpcgss vboxnetadp sunrpc vboxnetflt v
> boxdrv cpufreq_conservative cpufreq_userspace cpufreq_powersave
> powernow_k8 fuse ext4 jbd2 crc16 loop dm_mod ide_cd_mod cdr
> om snd_hda_codec_conexant arc4 ecb ide_pci_generic snd_hda_intel
> snd_hda_codec snd_pcm snd_timer ac k8temp amd74xx i2c_nfor
> ce2 battery snd sg serio_raw button forcedeth hwmon soundcore
> snd_page_alloc ide_core joydev i2c_core sd_mod ohci_hcd ehci_
> hcd usbcore edd ahci libata scsi_mod ext3 mbcache jbd fan thermal
> processor [last unloaded: led_class]
>  Pid: 10623, comm: tcpperf Tainted: G        W  2.6.31-rc3-wl #183
>  Call Trace:
>   [<ffffffffa06cfeed>] ? b43_dma_tx+0x115/0x9b2 [b43]
>   [<ffffffff8103f426>] warn_slowpath_common+0x77/0xa4
>   [<ffffffff8103f462>] warn_slowpath_null+0xf/0x11
>   [<ffffffffa06cfeed>] b43_dma_tx+0x115/0x9b2 [b43]
>   [<ffffffffa06be7af>] ? b43_op_tx+0x60/0x9e [b43]
>   [<ffffffffa06be7c5>] b43_op_tx+0x76/0x9e [b43]
>   [<ffffffffa06950c7>] __ieee80211_tx+0xa3/0x104 [mac80211]
>   [<ffffffffa069524c>] ieee80211_tx+0x124/0x272 [mac80211]
>   [<ffffffffa0695169>] ? ieee80211_tx+0x41/0x272 [mac80211]
>   [<ffffffffa0695604>] ieee80211_xmit+0x26a/0x28e [mac80211]
>   [<ffffffffa0696372>] ieee80211_subif_start_xmit+0x516/0x538 [mac80211]
>   [<ffffffffa069606a>] ? ieee80211_subif_start_xmit+0x20e/0x538 [mac80211]
>   [<ffffffff8106380f>] ? trace_hardirqs_on_caller+0xf1/0x12f
>   [<ffffffff8106385a>] ? trace_hardirqs_on+0xd/0xf
>   [<ffffffff81202e3c>] ? __kfree_skb+0x82/0x86
>   [<ffffffff8120b38f>] dev_hard_start_xmit+0x254/0x302
>   [<ffffffff8120b199>] ? dev_hard_start_xmit+0x5e/0x302
>   [<ffffffff8121cafa>] __qdisc_run+0xf5/0x208
>   [<ffffffff8120b79a>] dev_queue_xmit+0x24b/0x390
>   [<ffffffff8120b6c4>] ? dev_queue_xmit+0x175/0x390
>   [<ffffffff8122c631>] ip_finish_output+0x239/0x27f
>   [<ffffffff810dce0c>] ? do_select+0x5b7/0x5d6
>   [<ffffffff8122c720>] ip_output+0xa9/0xad
>   [<ffffffff8122b7b3>] ip_local_out+0x20/0x24
>   [<ffffffff8122c020>] ip_queue_xmit+0x2e0/0x337
>   [<ffffffff8123d20d>] tcp_transmit_skb+0x600/0x643
>   [<ffffffff8123f71b>] tcp_write_xmit+0x83f/0x924
>   [<ffffffff810449d0>] ? local_bh_enable+0xc9/0xce
>   [<ffffffff8123f82f>] tcp_push_one+0x2f/0x31
>   [<ffffffff81233cda>] tcp_sendmsg+0x7d1/0xa2e
>   [<ffffffff811fc5ce>] sock_sendmsg+0xdf/0xf8
>   [<ffffffff810b060b>] ? might_fault+0xaf/0xb1
>   [<ffffffff81054e88>] ? autoremove_wake_function+0x0/0x38
>   [<ffffffff810dce68>] ? core_sys_select+0x3d/0x2b4
>   [<ffffffff81063829>] ? trace_hardirqs_on_caller+0x10b/0x12f
>   [<ffffffff8106385a>] ? trace_hardirqs_on+0xd/0xf
>   [<ffffffff811fbeff>] ? sockfd_lookup_light+0x1b/0x54
>   [<ffffffff811fd150>] sys_sendto+0xdf/0x107
>   [<ffffffff81058077>] ? ktime_get_ts+0x49/0x4e
>   [<ffffffff810dbfbd>] ? poll_select_copy_remaining+0xc5/0xea
>   [<ffffffff8100ba6b>] system_call_fastpath+0x16/0x1b
>  ---[ end trace 3cd1097c91b647a6 ]---
>  b43-phy0 warning: DMA queue overflow
> 
> Larry
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 
> 



-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Jul 25 22:31:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 25 Jul 2009 22:31:19 +0200
Subject: Who is working on b43 LP-PHY?
Message-ID: <200907252231.19839.mb@bu3sch.de>

I'm wondering who is currently working on the b43 LP-PHY code.

I'm just wondering, because there are maybe 20 people who promised to me
to work on the code. Who is left _working_ on it? (I mean _working_, not
looking or planning to work). What about patches?

Are you guys all scared away and dropped the plan to work on LP?

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Sun Jul 26 01:04:16 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 26 Jul 2009 01:04:16 +0200
Subject: Who is working on b43 LP-PHY?
In-Reply-To: <200907252231.19839.mb@bu3sch.de>
References: <200907252231.19839.mb@bu3sch.de>
Message-ID: <69e28c910907251604y44641c79n27ec646c309e71a2@mail.gmail.com>

On Sat, Jul 25, 2009 at 10:31 PM, Michael Buesch<mb at bu3sch.de> wrote:
> I'm wondering who is currently working on the b43 LP-PHY code.
>
> I'm just wondering, because there are maybe 20 people who promised to me
> to work on the code. Who is left _working_ on it? (I mean _working_, not
> looking or planning to work). What about patches?
>
> Are you guys all scared away and dropped the plan to work on LP?

I'm actually working on it, but most of my work was done in a virtual
machine on Windows, and I've recently reinstalled Windows and still in
the process of setting up my environment (don't worry, the virtual HDD
was not lost). Once everything is ready, I'll move development over to
my real Linux install.

BTW are there any desktop cards (PCI/PCIE) with an LP-PHY? Or
alternatively a MiniPCIE one (not MiniPCI - I've recently bought a
PCIE-to-miniPCIE adapter to work on iwl5300)?

Thanks,
G?bor


-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Jul 26 01:58:24 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 26 Jul 2009 01:58:24 +0200
Subject: Who is working on b43 LP-PHY?
In-Reply-To: <69e28c910907251604y44641c79n27ec646c309e71a2@mail.gmail.com>
References: <200907252231.19839.mb@bu3sch.de>
	<69e28c910907251604y44641c79n27ec646c309e71a2@mail.gmail.com>
Message-ID: <200907260158.24807.mb@bu3sch.de>

On Sunday 26 July 2009 01:04:16 G?bor Stefanik wrote:
> On Sat, Jul 25, 2009 at 10:31 PM, Michael Buesch<mb at bu3sch.de> wrote:
> > I'm wondering who is currently working on the b43 LP-PHY code.
> >
> > I'm just wondering, because there are maybe 20 people who promised to me
> > to work on the code. Who is left _working_ on it? (I mean _working_, not
> > looking or planning to work). What about patches?
> >
> > Are you guys all scared away and dropped the plan to work on LP?
> 
> I'm actually working on it, but most of my work was done in a virtual
> machine on Windows, and I've recently reinstalled Windows and still in
> the process of setting up my environment (don't worry, the virtual HDD
> was not lost). Once everything is ready, I'll move development over to
> my real Linux install.

So make sure you properly split up your patches and submit them early.
Big blob patches that are not reviewable are not acceptable.

> BTW are there any desktop cards (PCI/PCIE) with an LP-PHY? Or
> alternatively a MiniPCIE one (not MiniPCI - I've recently bought a
> PCIE-to-miniPCIE adapter to work on iwl5300)?

Sure. Lots of laptops ship them.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Jul 26 03:18:56 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 25 Jul 2009 20:18:56 -0500
Subject: Who is working on b43 LP-PHY?
In-Reply-To: <200907260158.24807.mb@bu3sch.de>
References: <200907252231.19839.mb@bu3sch.de>	<69e28c910907251604y44641c79n27ec646c309e71a2@mail.gmail.com>
	<200907260158.24807.mb@bu3sch.de>
Message-ID: <4A6BAF00.8080408@lwfinger.net>

Michael Buesch wrote:
> On Sunday 26 July 2009 01:04:16 G?bor Stefanik wrote:
>> On Sat, Jul 25, 2009 at 10:31 PM, Michael Buesch<mb at bu3sch.de> wrote:
>>> I'm wondering who is currently working on the b43 LP-PHY code.
>>>
>>> I'm just wondering, because there are maybe 20 people who promised to me
>>> to work on the code. Who is left _working_ on it? (I mean _working_, not
>>> looking or planning to work). What about patches?
>>>
>>> Are you guys all scared away and dropped the plan to work on LP?
>> I'm actually working on it, but most of my work was done in a virtual
>> machine on Windows, and I've recently reinstalled Windows and still in
>> the process of setting up my environment (don't worry, the virtual HDD
>> was not lost). Once everything is ready, I'll move development over to
>> my real Linux install.
> 
> So make sure you properly split up your patches and submit them early.
> Big blob patches that are not reviewable are not acceptable.
> 
>> BTW are there any desktop cards (PCI/PCIE) with an LP-PHY? Or
>> alternatively a MiniPCIE one (not MiniPCI - I've recently bought a
>> PCIE-to-miniPCIE adapter to work on iwl5300)?
> 
> Sure. Lots of laptops ship them.

The HP P/N 459263-002 is a BCM94312MCG has an LP PHY. There are a
number of places that have them.

Larry


From Larry.Finger at lwfinger.net  Sun Jul 26 05:16:53 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 25 Jul 2009 22:16:53 -0500
Subject: Improved opensource firmware
In-Reply-To: <200907242059.29186.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<A0C0B47B-A44C-4364-A2C4-E39D2152632F@ing.unibs.it>
	<4A69C9D1.3060905@lwfinger.net> <200907242059.29186.mb@bu3sch.de>
Message-ID: <4A6BCAA5.2090109@lwfinger.net>

Michael Buesch wrote:
> On Friday 24 July 2009 16:48:49 Larry Finger wrote:
>> Francesco,
>>
>> Sorry, but I missed a warning about DMA queue overflow that was being
>> logged as follows:
> 
> Can you printk the value of free_slots(), when this happens?

I have a printk in place, but that warning has not happened again.

I made the following changes:

(1) I put guard words around meta in struct b43_dma_ring, and around
the skb in struct b43_dmadesc_meta. These were checked in
b43_dma_handle_txstatus() and were OK. Whatever is setting meta->skb
to NULL is specific in writing that location.

(2) I replaced the BUG_ON when meta->skb is NULL with printk
statements that dump elements of the ring and meta structs. At least I
get a chance to interrogate the internal data. Furthermore, I can get
the wireless back by unloading and reloading b43 without rebooting.
The dumped values are as follows:

b43: meta data: skb              (null)
                dmaaddr          00000000986d50bc
                is_last_fragment 1
b43: ring data: nr_slots       256
                used_slots     45
                current_slot   65
                index          1
                tx             1
                max_used_slots 256

Unfortunately, all of these look reasonable - no smoking guns.

Any suggestions on other values to dump?

Larry


From mb at bu3sch.de  Sun Jul 26 12:41:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 26 Jul 2009 12:41:15 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A6BCAA5.2090109@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907242059.29186.mb@bu3sch.de> <4A6BCAA5.2090109@lwfinger.net>
Message-ID: <200907261241.15704.mb@bu3sch.de>

On Sunday 26 July 2009 05:16:53 Larry Finger wrote:
> Michael Buesch wrote:
> > On Friday 24 July 2009 16:48:49 Larry Finger wrote:
> >> Francesco,
> >>
> >> Sorry, but I missed a warning about DMA queue overflow that was being
> >> logged as follows:
> > 
> > Can you printk the value of free_slots(), when this happens?
> 
> I have a printk in place, but that warning has not happened again.

Just to explain my idea:
I think there are two ways for this warning to trigger.
The first being mac80211 being broken and not stopping the queue on request.
That's probably not very likely.
The second could possibly be the firmware reporting status for one frame
multiple times. I did not check the whole code, but this could possibly
lead to an integer under/overflow in the free_slots() calculation. A signed integer
is used, so I think it can go negative, which would trigger the warning.

I don't see another way to trigger the message.
And as it only seems to happen with open firmware, it seems likely be caused
by TX status reporting in the firmware.

> I made the following changes:
> 
> (1) I put guard words around meta in struct b43_dma_ring, and around
> the skb in struct b43_dmadesc_meta. These were checked in
> b43_dma_handle_txstatus() and were OK. Whatever is setting meta->skb
> to NULL is specific in writing that location.
> 
> (2) I replaced the BUG_ON when meta->skb is NULL with printk
> statements that dump elements of the ring and meta structs. At least I
> get a chance to interrogate the internal data. Furthermore, I can get
> the wireless back by unloading and reloading b43 without rebooting.
> The dumped values are as follows:
> 
> b43: meta data: skb              (null)
>                 dmaaddr          00000000986d50bc
>                 is_last_fragment 1
> b43: ring data: nr_slots       256
>                 used_slots     45
>                 current_slot   65
>                 index          1
>                 tx             1
>                 max_used_slots 256
> 
> Unfortunately, all of these look reasonable - no smoking guns.
> 
> Any suggestions on other values to dump?
> 
> Larry
> 
> 



-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Jul 26 17:37:10 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 26 Jul 2009 10:37:10 -0500
Subject: Improved opensource firmware
In-Reply-To: <200907261241.15704.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907242059.29186.mb@bu3sch.de> <4A6BCAA5.2090109@lwfinger.net>
	<200907261241.15704.mb@bu3sch.de>
Message-ID: <4A6C7826.1000004@lwfinger.net>

Michael Buesch wrote:
> 
> Just to explain my idea:
> I think there are two ways for this warning to trigger.
> The first being mac80211 being broken and not stopping the queue on request.
> That's probably not very likely.
> The second could possibly be the firmware reporting status for one frame
> multiple times. I did not check the whole code, but this could possibly
> lead to an integer under/overflow in the free_slots() calculation. A signed integer
> is used, so I think it can go negative, which would trigger the warning.
> 
> I don't see another way to trigger the message.
> And as it only seems to happen with open firmware, it seems likely be caused
> by TX status reporting in the firmware.

The message also triggers with proprietary firmware. My debugging hunk is

@@ -1340,7 +1350,8 @@ int b43_dma_tx(struct b43_wldev *dev, st
        B43_WARN_ON(ring->stopped);

        if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
-               b43warn(dev->wl, "DMA queue overflow\n");
+               b43warn(dev->wl, "DMA queue overflow with free_slots =
%d\n",
+                       free_slots(ring));
                err = -ENOSPC;
                goto out_unlock;
        }

The revised printk shows

b43-phy0 warning: DMA queue overflow with free_slots = 0

Larry


From mb at bu3sch.de  Sun Jul 26 17:54:36 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 26 Jul 2009 17:54:36 +0200
Subject: Improved opensource firmware
In-Reply-To: <4A6C7826.1000004@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261241.15704.mb@bu3sch.de> <4A6C7826.1000004@lwfinger.net>
Message-ID: <200907261754.36489.mb@bu3sch.de>

On Sunday 26 July 2009 17:37:10 Larry Finger wrote:
> Michael Buesch wrote:
> > 
> > Just to explain my idea:
> > I think there are two ways for this warning to trigger.
> > The first being mac80211 being broken and not stopping the queue on request.
> > That's probably not very likely.
> > The second could possibly be the firmware reporting status for one frame
> > multiple times. I did not check the whole code, but this could possibly
> > lead to an integer under/overflow in the free_slots() calculation. A signed integer
> > is used, so I think it can go negative, which would trigger the warning.
> > 
> > I don't see another way to trigger the message.
> > And as it only seems to happen with open firmware, it seems likely be caused
> > by TX status reporting in the firmware.
> 
> The message also triggers with proprietary firmware. My debugging hunk is
> 
> @@ -1340,7 +1350,8 @@ int b43_dma_tx(struct b43_wldev *dev, st
>         B43_WARN_ON(ring->stopped);
> 
>         if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
> -               b43warn(dev->wl, "DMA queue overflow\n");
> +               b43warn(dev->wl, "DMA queue overflow with free_slots =
> %d\n",
> +                       free_slots(ring));
>                 err = -ENOSPC;
>                 goto out_unlock;
>         }
> 
> The revised printk shows
> 
> b43-phy0 warning: DMA queue overflow with free_slots = 0

Ok, it's a mac80211 bug then.


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Jul 26 19:01:35 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 26 Jul 2009 12:01:35 -0500
Subject: DMA queue overflow
In-Reply-To: <200907261754.36489.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261241.15704.mb@bu3sch.de> <4A6C7826.1000004@lwfinger.net>
	<200907261754.36489.mb@bu3sch.de>
Message-ID: <4A6C8BEF.6020606@lwfinger.net>

Michael Buesch wrote:
> On Sunday 26 July 2009 17:37:10 Larry Finger wrote:
>>
>> The revised printk shows
>>
>> b43-phy0 warning: DMA queue overflow with free_slots = 0
> 
> Ok, it's a mac80211 bug then.

Perhaps not. I also got the ring->stopped WARN_ON. Is it possible that
a second transmission was held at the spin_lock_irqsave() when the
queues were stopped. If that were the case, the following patch should
fix the problem.

---

Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c
+++ wireless-testing/drivers/net/wireless/b43/dma.c
@@ -1334,17 +1334,20 @@ int b43_dma_tx(struct b43_wldev *dev, st
 	spin_lock_irqsave(&ring->lock, flags);

 	B43_WARN_ON(!ring->tx);
+
+	if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
+		if (b43_debug(dev, B43_DBG_DMAVERBOSE)) {
+			b43warn(dev->wl, "DMA queue overflow with %d"
+				" free slots\n", free_slots(ring));
+			err = -ENOSPC;
+			goto out_unlock;
+		}
+	}
 	/* Check if the queue was stopped in mac80211,
 	 * but we got called nevertheless.
 	 * That would be a mac80211 bug. */
 	B43_WARN_ON(ring->stopped);

-	if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
-		b43warn(dev->wl, "DMA queue overflow\n");
-		err = -ENOSPC;
-		goto out_unlock;
-	}
-
 	/* Assign the queue number to the ring (if not already done before)
 	 * so TX status handling can use it. The queue to ring mapping is
 	 * static, so we don't need to store it per frame. */

---

I do have one question. Should the "DMA queue overflow" message ever be printed?
It seems to me that we have a 'no harm - no foul' situation.

Larry


From mb at bu3sch.de  Sun Jul 26 21:53:23 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 26 Jul 2009 21:53:23 +0200
Subject: DMA queue overflow
In-Reply-To: <4A6C8BEF.6020606@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261754.36489.mb@bu3sch.de> <4A6C8BEF.6020606@lwfinger.net>
Message-ID: <200907262153.23233.mb@bu3sch.de>

On Sunday 26 July 2009 19:01:35 Larry Finger wrote:
> Michael Buesch wrote:
> > On Sunday 26 July 2009 17:37:10 Larry Finger wrote:
> >>
> >> The revised printk shows
> >>
> >> b43-phy0 warning: DMA queue overflow with free_slots = 0
> > 
> > Ok, it's a mac80211 bug then.
> 
> Perhaps not. I also got the ring->stopped WARN_ON.

Yeah. That just indicates that it _is_ a mac80211 bug.

> Is it possible that 
> a second transmission was held at the spin_lock_irqsave() when the
> queues were stopped. If that were the case, the following patch should
> fix the problem.

Nah, that patch cannot fix anything. You just move the check inside of the lock.
From the outside view it stays the same. The lock makes it atomic.

> ---
> 
> Index: wireless-testing/drivers/net/wireless/b43/dma.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/dma.c
> +++ wireless-testing/drivers/net/wireless/b43/dma.c
> @@ -1334,17 +1334,20 @@ int b43_dma_tx(struct b43_wldev *dev, st
>  	spin_lock_irqsave(&ring->lock, flags);
> 
>  	B43_WARN_ON(!ring->tx);
> +
> +	if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
> +		if (b43_debug(dev, B43_DBG_DMAVERBOSE)) {
> +			b43warn(dev->wl, "DMA queue overflow with %d"
> +				" free slots\n", free_slots(ring));
> +			err = -ENOSPC;
> +			goto out_unlock;
> +		}
> +	}
>  	/* Check if the queue was stopped in mac80211,
>  	 * but we got called nevertheless.
>  	 * That would be a mac80211 bug. */
>  	B43_WARN_ON(ring->stopped);
> 
> -	if (unlikely(free_slots(ring) < TX_SLOTS_PER_FRAME)) {
> -		b43warn(dev->wl, "DMA queue overflow\n");
> -		err = -ENOSPC;
> -		goto out_unlock;
> -	}
> -
>  	/* Assign the queue number to the ring (if not already done before)
>  	 * so TX status handling can use it. The queue to ring mapping is
>  	 * static, so we don't need to store it per frame. */
> 
> ---
> 
> I do have one question. Should the "DMA queue overflow" message ever be printed?
> It seems to me that we have a 'no harm - no foul' situation.

Yes. This is a situation that should not happen.
If we stop the queue in mac80211, we expect that mac80211 does not queue more
frames from then on.

-- 
Greetings, Michael.


From gregor.kowski at gmail.com  Mon Jul 27 22:49:17 2009
From: gregor.kowski at gmail.com (gregor kowski)
Date: Mon, 27 Jul 2009 22:49:17 +0200
Subject: [RESEND] [PATCHv2] b43 add harware tkip
Message-ID: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>

Update : work with qos, implement dump key, fix an issue with setting
random value on tkip key clear.
PS : this depends on "b43 : remove old kidx API"

This add hardware tkip for b43.

It uncovered a bug in b43_write_probe_resp_template : it is writing at the
wrong shm offset, it is in the B43_SHM_SH_TKIPTSCTTAK zone. This patch
comments these writes.

Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>
Index: linux-2.6/drivers/net/wireless/b43/dma.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/dma.c	2009-07-25
10:58:30.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/dma.c	2009-07-27 20:46:05.000000000 +0000
@@ -1188,7 +1188,7 @@
 	header = &(ring->txhdr_cache[(slot / TX_SLOTS_PER_FRAME) * hdrsize]);
 	cookie = generate_cookie(ring, slot);
 	err = b43_generate_txhdr(ring->dev, header,
-				 skb->data, skb->len, info, cookie);
+				 skb, info, cookie);
 	if (unlikely(err)) {
 		ring->current_slot = old_top_slot;
 		ring->used_slots = old_used_slots;
Index: linux-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-27
20:40:14.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-27
20:46:05.000000000 +0000
@@ -836,6 +836,64 @@
 	}
 }

+/* The ucode will use this with key to decrypt rx packets.
+ * It will first check if the iv32 match,
+ * - if they don't it returns the packet without decryption (and software
+ *   decryption can be done). That's what happen when iv16 wrap.
+ * - if they do, the rc4 key is computed with tkip phase2, and
+ *   the wep decryption is tried on the packet. Either it will
+ *   success and B43_RX_MAC_DEC is returned, either it fails
+ *   and B43_RX_MAC_DEC|B43_RX_MAC_DECERR is returned and the packet
+ *   is not usable (wrong key used on it).
+ * So in order to never have B43_RX_MAC_DECERR, we should provide
+ * a iv32 and phase1key that match. Because we drop packets in case of
+ * B43_RX_MAC_DECERR, if we have a correct iv32 but a wrong phase1key, all
+ * packets will be lost without higher layer knowing (ie no resync possible
+ * until next wrap).
+ *
+ * NOTE : this should support 50 key like RCMTA because
+ * (B43_SHM_SH_KEYIDXBLOCK - B43_SHM_SH_TKIPTSCTTAK)/14 = 50
+ */
+static void rx_tkip_phase1_write(struct b43_wldev *dev, u8 index, u32 iv32,
+		u16 *phase1key)
+{
+	unsigned int i;
+	u32 offset;
+	const u8 per_sta_keys_start = 4;
+
+	B43_WARN_ON(index < per_sta_keys_start);
+	/* We have two default TX keys and possibly two default RX keys.
+	 * Physical mac 0 is mapped to physical key 4 or 8, depending
+	 * on the firmware version.
+	 * So we must adjust the index here.
+	 */
+	index -= per_sta_keys_start;
+
+	if (b43_debug(dev, B43_DBG_KEYS))
+		b43dbg(dev->wl, "rx_tkip_phase1_write : idx 0x%x, iv32 0x%x\n",
+				index, iv32);
+	/* Write the key to the  RX tkip shared mem */
+	offset = B43_SHM_SH_TKIPTSCTTAK + index * (10 + 4);
+	for (i = 0; i < 10; i += 2) {
+		b43_shm_write16(dev, B43_SHM_SHARED, offset + i, phase1key[i/2]);
+	}
+	b43_shm_write16(dev, B43_SHM_SHARED, offset + i, iv32);
+	b43_shm_write16(dev, B43_SHM_SHARED, offset + i + 2, iv32>>16);
+}
+
+static void b43_mac_update_tkip_key(struct ieee80211_hw *hw,
+			struct ieee80211_key_conf *keyconf, const u8 *addr,
+			u32 iv32, u16 *phase1key)
+{
+	struct b43_wl *wl = hw_to_b43_wl(hw);
+	struct b43_wldev *dev = wl->current_dev;
+	int index = keyconf->hw_key_idx;
+	keymac_write(dev, index, NULL);	/* First zero out mac to avoid race */
+
+	rx_tkip_phase1_write(dev, index, iv32, phase1key);
+	keymac_write(dev, index, addr);
+}
+
 static void do_key_write(struct b43_wldev *dev,
 			 u8 index, u8 algorithm,
 			 const u8 *key, size_t key_len, const u8 *mac_addr)
@@ -848,6 +906,19 @@

 	if (index >= per_sta_keys_start)
 		keymac_write(dev, index, NULL);	/* First zero out mac. */
+	if (algorithm == B43_SEC_ALGO_TKIP) {
+		/*
+		 * We should provide an initial iv32, phase1key pair.
+		 * We could start with iv32=0 and compute the corresponding
+		 * phase1key, but this mean calling ieee80211_get_tkip_key
+		 * with a fake skb (or export other tkip function).
+		 * Because we are lazy we hope iv32 won't start with
+		 * 0xffffffff and let's b43_mac_update_tkip_key provide a
+		 * correct pair.
+		 */
+		rx_tkip_phase1_write(dev, index, 0xffffffff, (u16*)buf);
+	} else if (index >= per_sta_keys_start) /* clear it */
+		rx_tkip_phase1_write(dev, index, 0, (u16*)buf);
 	if (key)
 		memcpy(buf, key, key_len);
 	key_write(dev, index, algorithm, buf);
@@ -865,6 +936,8 @@
 {
 	int i;

+	if (algorithm == B43_SEC_ALGO_TKIP && key_len == 32)
+		key_len = 16;
 	if (key_len > B43_SEC_KEYSIZE)
 		return -EINVAL;
 	for (i = 0; i < dev->max_nr_keys; i++) {
@@ -946,6 +1019,14 @@
 		printk("   Algo: %04X/%02X", algo, key->algorithm);

 		if (index >= 4) {
+			if (key->algorithm == B43_SEC_ALGO_TKIP) {
+				printk("   TKIP: ");
+				offset = B43_SHM_SH_TKIPTSCTTAK + (index - 4) * (10 + 4);
+				for (i = 0; i < 14; i+=2) {
+					u16 tmp = b43_shm_read16(dev, B43_SHM_SHARED, offset + i);
+					printk("%02X%02X", (tmp & 0xFF), ((tmp >> 8) & 0xFF));
+				}
+			}
 			rcmta0 = b43_shm_read32(dev, B43_SHM_RCMTA,
 						((index - 4) * 2) + 0);
 			rcmta1 = b43_shm_read16(dev, B43_SHM_RCMTA,
@@ -1505,10 +1586,13 @@
 	/* Looks like PLCP headers plus packet timings are stored for
 	 * all possible basic rates
 	 */
+	/* FIXME this is the wrong offset : it goes in tkip rx phase1 shm */
+#if 0
 	b43_write_probe_resp_plcp(dev, 0x31A, size, &b43_b_ratetable[0]);
 	b43_write_probe_resp_plcp(dev, 0x32C, size, &b43_b_ratetable[1]);
 	b43_write_probe_resp_plcp(dev, 0x33E, size, &b43_b_ratetable[2]);
 	b43_write_probe_resp_plcp(dev, 0x350, size, &b43_b_ratetable[3]);
+#endif

 	size = min((size_t) size, 0x200 - sizeof(struct b43_plcp_hdr6));
 	b43_write_template_common(dev, probe_resp_data,
@@ -3667,8 +3751,9 @@

 	switch (cmd) {
 	case SET_KEY:
-		if (algorithm == B43_SEC_ALGO_TKIP) {
-			/* FIXME: No TKIP hardware encryption for now. */
+		if (algorithm == B43_SEC_ALGO_TKIP &&
+		    !(key->flags & IEEE80211_KEY_FLAG_PAIRWISE)) {
+			/* We support only pairwise key */
 			err = -EOPNOTSUPP;
 			goto out_unlock;
 		}
@@ -3698,6 +3783,8 @@
 				     b43_hf_read(dev) & ~B43_HF_USEDEFKEYS);
 		}
 		key->flags |= IEEE80211_KEY_FLAG_GENERATE_IV;
+		if (algorithm == B43_SEC_ALGO_TKIP)
+			key->flags |= IEEE80211_KEY_FLAG_GENERATE_MMIC;
 		break;
 	case DISABLE_KEY: {
 		err = b43_key_clear(dev, key->hw_key_idx);
@@ -4425,6 +4512,7 @@
 	.bss_info_changed	= b43_op_bss_info_changed,
 	.configure_filter	= b43_op_configure_filter,
 	.set_key		= b43_op_set_key,
+	.update_tkip_key	= b43_mac_update_tkip_key,
 	.get_stats		= b43_op_get_stats,
 	.get_tx_stats		= b43_op_get_tx_stats,
 	.get_tsf		= b43_op_get_tsf,
Index: linux-2.6/drivers/net/wireless/b43/pio.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/pio.c	2009-07-25
10:58:30.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/pio.c	2009-07-27 20:46:05.000000000 +0000
@@ -461,8 +461,8 @@

 	cookie = generate_cookie(q, pack);
 	hdrlen = b43_txhdr_size(q->dev);
-	err = b43_generate_txhdr(q->dev, (u8 *)&txhdr, skb->data,
-				 skb->len, info, cookie);
+	err = b43_generate_txhdr(q->dev, (u8 *)&txhdr, skb,
+				 info, cookie);
 	if (err)
 		return err;

Index: linux-2.6/drivers/net/wireless/b43/xmit.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.c	2009-07-27
20:40:14.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.c	2009-07-27
20:46:05.000000000 +0000
@@ -180,11 +180,12 @@
 /* Generate a TX data header. */
 int b43_generate_txhdr(struct b43_wldev *dev,
 		       u8 *_txhdr,
-		       const unsigned char *fragment_data,
-		       unsigned int fragment_len,
+		       struct sk_buff *skb_frag,
 		       struct ieee80211_tx_info *info,
 		       u16 cookie)
 {
+	const unsigned char *fragment_data = skb_frag->data;
+	unsigned int fragment_len = skb_frag->len;
 	struct b43_txhdr *txhdr = (struct b43_txhdr *)_txhdr;
 	const struct b43_phy *phy = &dev->phy;
 	const struct ieee80211_hdr *wlhdr =
@@ -257,9 +258,25 @@
 		mac_ctl |= (key->algorithm << B43_TXH_MAC_KEYALG_SHIFT) &
 			   B43_TXH_MAC_KEYALG;
 		wlhdr_len = ieee80211_hdrlen(fctl);
-		iv_len = min((size_t) info->control.hw_key->iv_len,
-			     ARRAY_SIZE(txhdr->iv));
-		memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
+		if (key->algorithm == B43_SEC_ALGO_TKIP) {
+			u16 phase1key[5];
+			int i;
+			/* we give the phase1key and iv16 here, the key is stored in
+			 * shm. With that the hardware can do phase 2 and encryption.
+			 */
+			ieee80211_get_tkip_key(info->control.hw_key, skb_frag,
IEEE80211_TKIP_P1_KEY, (u8*)phase1key);
+			/* phase1key is in host endian */
+			for (i = 0; i < 5; i++)
+				phase1key[i] = cpu_to_le16(phase1key[i]);
+
+			memcpy(txhdr->iv, phase1key, 10);
+			/* iv16 */
+			memcpy(txhdr->iv+10, ((u8 *) wlhdr) + wlhdr_len, 3);
+		} else {
+			iv_len = min((size_t) info->control.hw_key->iv_len,
+				     ARRAY_SIZE(txhdr->iv));
+			memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
+		}
 	}
 	if (b43_is_old_txhdr_format(dev)) {
 		b43_generate_plcp_hdr((struct b43_plcp_hdr4 *)(&txhdr->old_format.plcp),
Index: linux-2.6/drivers/net/wireless/b43/xmit.h
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.h	2009-07-27
20:40:14.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.h	2009-07-27
20:46:05.000000000 +0000
@@ -176,8 +176,7 @@

 int b43_generate_txhdr(struct b43_wldev *dev,
 		       u8 * txhdr,
-		       const unsigned char *fragment_data,
-		       unsigned int fragment_len,
+		       struct sk_buff *skb_frag,
 		       struct ieee80211_tx_info *txctl, u16 cookie);

 /* Transmit Status */


From gregor.kowski at gmail.com  Mon Jul 27 22:43:36 2009
From: gregor.kowski at gmail.com (gregor kowski)
Date: Mon, 27 Jul 2009 22:43:36 +0200
Subject: [RESEND] [PATCH] b43 : remove old kidx API
Message-ID: <83a869cd0907271343g6111794ejff963258a52f546@mail.gmail.com>

Remove old kidx API.
This simplify the code, and fix a potential key overflow.

Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>

Index: linux-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-25
10:58:31.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-27
20:40:14.000000000 +0000
@@ -776,13 +776,11 @@
 	unsigned int i;
 	u32 offset;
 	u16 value;
-	u16 kidx;

 	/* Key index/algo block */
-	kidx = b43_kidx_to_fw(dev, index);
-	value = ((kidx << 4) | algorithm);
+	value = ((index << 4) | algorithm);
 	b43_shm_write16(dev, B43_SHM_SHARED,
-			B43_SHM_SH_KEYIDXBLOCK + (kidx * 2), value);
+			B43_SHM_SH_KEYIDXBLOCK + (index * 2), value);

 	/* Write the key to the Key Table Pointer offset */
 	offset = dev->ktp + (index * B43_SEC_KEYSIZE);
@@ -796,10 +794,7 @@
 static void keymac_write(struct b43_wldev *dev, u8 index, const u8 *addr)
 {
 	u32 addrtmp[2] = { 0, 0, };
-	u8 per_sta_keys_start = 8;
-
-	if (b43_new_kidx_api(dev))
-		per_sta_keys_start = 4;
+	const u8 per_sta_keys_start = 4;

 	B43_WARN_ON(index < per_sta_keys_start);
 	/* We have two default TX keys and possibly two default RX keys.
@@ -846,10 +841,7 @@
 			 const u8 *key, size_t key_len, const u8 *mac_addr)
 {
 	u8 buf[B43_SEC_KEYSIZE] = { 0, };
-	u8 per_sta_keys_start = 8;
-
-	if (b43_new_kidx_api(dev))
-		per_sta_keys_start = 4;
+	const u8 per_sta_keys_start = 4;

 	B43_WARN_ON(index >= dev->max_nr_keys);
 	B43_WARN_ON(key_len > B43_SEC_KEYSIZE);
@@ -872,7 +864,6 @@
 			 struct ieee80211_key_conf *keyconf)
 {
 	int i;
-	int sta_keys_start;

 	if (key_len > B43_SEC_KEYSIZE)
 		return -EINVAL;
@@ -881,12 +872,9 @@
 		B43_WARN_ON(dev->key[i].keyconf == keyconf);
 	}
 	if (index < 0) {
+		const int per_sta_keys_start = 4;
 		/* Pairwise key. Get an empty slot for the key. */
-		if (b43_new_kidx_api(dev))
-			sta_keys_start = 4;
-		else
-			sta_keys_start = 8;
-		for (i = sta_keys_start; i < dev->max_nr_keys; i++) {
+		for (i = per_sta_keys_start; i < dev->max_nr_keys; i++) {
 			if (!dev->key[i].keyconf) {
 				/* found empty */
 				index = i;
@@ -901,11 +889,6 @@
 		B43_WARN_ON(index > 3);

 	do_key_write(dev, index, algorithm, key, key_len, mac_addr);
-	if ((index <= 3) && !b43_new_kidx_api(dev)) {
-		/* Default RX key */
-		B43_WARN_ON(mac_addr);
-		do_key_write(dev, index + 4, algorithm, key, key_len, NULL);
-	}
 	keyconf->hw_key_idx = index;
 	dev->key[index].keyconf = keyconf;

@@ -918,10 +901,6 @@
 		return -EINVAL;
 	do_key_write(dev, index, B43_SEC_ALGO_NONE,
 		     NULL, B43_SEC_KEYSIZE, NULL);
-	if ((index <= 3) && !b43_new_kidx_api(dev)) {
-		do_key_write(dev, index + 4, B43_SEC_ALGO_NONE,
-			     NULL, B43_SEC_KEYSIZE, NULL);
-	}
 	dev->key[index].keyconf = NULL;

 	return 0;
@@ -2972,7 +2951,8 @@

 static void b43_security_init(struct b43_wldev *dev)
 {
-	dev->max_nr_keys = (dev->dev->id.revision >= 5) ? 58 : 20;
+	dev->max_nr_keys = (dev->dev->id.revision >= 5) ? 54 : 20;
+	B43_WARN_ON(dev->fw.rev < 351);
 	B43_WARN_ON(dev->max_nr_keys > ARRAY_SIZE(dev->key));
 	dev->ktp = b43_shm_read16(dev, B43_SHM_SHARED, B43_SHM_SH_KTP);
 	/* KTP is a word address, but we address SHM bytewise.
@@ -2981,7 +2961,7 @@
 	dev->ktp *= 2;
 	if (dev->dev->id.revision >= 5) {
 		/* Number of RCMTA address slots */
-		b43_write16(dev, B43_MMIO_RCMTA_COUNT, dev->max_nr_keys - 8);
+		b43_write16(dev, B43_MMIO_RCMTA_COUNT, dev->max_nr_keys - 4);
 	}
 	b43_clear_keys(dev);
 }
Index: linux-2.6/drivers/net/wireless/b43/xmit.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.c	2009-07-25
10:58:31.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.c	2009-07-27
20:40:14.000000000 +0000
@@ -252,7 +252,6 @@
 		/* Hardware appends ICV. */
 		plcp_fragment_len += info->control.hw_key->icv_len;

-		key_idx = b43_kidx_to_fw(dev, key_idx);
 		mac_ctl |= (key_idx << B43_TXH_MAC_KEYIDX_SHIFT) &
 			   B43_TXH_MAC_KEYIDX;
 		mac_ctl |= (key->algorithm << B43_TXH_MAC_KEYALG_SHIFT) &
@@ -577,7 +576,6 @@
 		/* We must adjust the key index here. We want the "physical"
 		 * key index, but the ucode passed it slightly different.
 		 */
-		keyidx = b43_kidx_to_raw(dev, keyidx);
 		B43_WARN_ON(keyidx >= dev->max_nr_keys);

 		if (dev->key[keyidx].algorithm != B43_SEC_ALGO_NONE) {
Index: linux-2.6/drivers/net/wireless/b43/xmit.h
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.h	2009-07-25
10:58:30.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.h	2009-07-27
20:40:14.000000000 +0000
@@ -301,36 +301,4 @@
 void b43_tx_suspend(struct b43_wldev *dev);
 void b43_tx_resume(struct b43_wldev *dev);

-
-/* Helper functions for converting the key-table index from "firmware-format"
- * to "raw-format" and back. The firmware API changed for this at
some revision.
- * We need to account for that here. */
-static inline int b43_new_kidx_api(struct b43_wldev *dev)
-{
-	/* FIXME: Not sure the change was at rev 351 */
-	return (dev->fw.rev >= 351);
-}
-static inline u8 b43_kidx_to_fw(struct b43_wldev *dev, u8 raw_kidx)
-{
-	u8 firmware_kidx;
-	if (b43_new_kidx_api(dev)) {
-		firmware_kidx = raw_kidx;
-	} else {
-		if (raw_kidx >= 4)	/* Is per STA key? */
-			firmware_kidx = raw_kidx - 4;
-		else
-			firmware_kidx = raw_kidx;	/* TX default key */
-	}
-	return firmware_kidx;
-}
-static inline u8 b43_kidx_to_raw(struct b43_wldev *dev, u8 firmware_kidx)
-{
-	u8 raw_kidx;
-	if (b43_new_kidx_api(dev))
-		raw_kidx = firmware_kidx;
-	else
-		raw_kidx = firmware_kidx + 4;	/* RX default keys or per STA keys */
-	return raw_kidx;
-}
-
 #endif /* B43_XMIT_H_ */


From mb at bu3sch.de  Tue Jul 28 18:08:35 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 28 Jul 2009 18:08:35 +0200
Subject: [RESEND] [PATCHv2] b43 add harware tkip
In-Reply-To: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
References: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
Message-ID: <200907281808.35906.mb@bu3sch.de>

On Monday 27 July 2009 22:49:17 gregor kowski wrote:
> Update : work with qos, implement dump key, fix an issue with setting
> random value on tkip key clear.
> PS : this depends on "b43 : remove old kidx API"
> 
> This add hardware tkip for b43.

First of all, I don't really want to support hw tkip on b43.
Broadcom removed the support for hw tkip from their drivers. I bet they
had a very good reason to do so.

So can we put hw tkip support under module parameter that defaults to OFF?

> Index: linux-2.6/drivers/net/wireless/b43/main.c
> ===================================================================
> --- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-27
> 20:40:14.000000000 +0000
> +++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-27
> 20:46:05.000000000 +0000
> @@ -836,6 +836,64 @@
>  	}
>  }
> 
> +/* The ucode will use this with key to decrypt rx packets.
> + * It will first check if the iv32 match,
> + * - if they don't it returns the packet without decryption (and software
> + *   decryption can be done). That's what happen when iv16 wrap.
> + * - if they do, the rc4 key is computed with tkip phase2, and
> + *   the wep decryption is tried on the packet. Either it will
> + *   success and B43_RX_MAC_DEC is returned, either it fails
> + *   and B43_RX_MAC_DEC|B43_RX_MAC_DECERR is returned and the packet
> + *   is not usable (wrong key used on it).
> + * So in order to never have B43_RX_MAC_DECERR, we should provide
> + * a iv32 and phase1key that match. Because we drop packets in case of
> + * B43_RX_MAC_DECERR, if we have a correct iv32 but a wrong phase1key, all
> + * packets will be lost without higher layer knowing (ie no resync possible
> + * until next wrap).
> + *
> + * NOTE : this should support 50 key like RCMTA because
> + * (B43_SHM_SH_KEYIDXBLOCK - B43_SHM_SH_TKIPTSCTTAK)/14 = 50
> + */

It's rather hard for me to understand your comments. You should try to fix
a few spelling and grammar errors and such...

> +static void rx_tkip_phase1_write(struct b43_wldev *dev, u8 index, u32 iv32,
> +		u16 *phase1key)
> +{
> +	unsigned int i;
> +	u32 offset;
> +	const u8 per_sta_keys_start = 4;
> +
> +	B43_WARN_ON(index < per_sta_keys_start);
> +	/* We have two default TX keys and possibly two default RX keys.

That comment is wrong.
We have 4 default TX/RX keys.

> +	 * Physical mac 0 is mapped to physical key 4 or 8, depending

It's mapped to 4, because you removed the old API support.
(I'm not sure whether we want to remove that support, yet. Gimme some time on it...)

> +	 * on the firmware version.
> +	 * So we must adjust the index here.
> +	 */
> +	index -= per_sta_keys_start;
> +
> +	if (b43_debug(dev, B43_DBG_KEYS))
> +		b43dbg(dev->wl, "rx_tkip_phase1_write : idx 0x%x, iv32 0x%x\n",
> +				index, iv32);

Add curly brackets. (yes, the code is correct. But our coding style is to use brackets
on multiline-indents).

> +	/* Write the key to the  RX tkip shared mem */
> +	offset = B43_SHM_SH_TKIPTSCTTAK + index * (10 + 4);
> +	for (i = 0; i < 10; i += 2) {
> +		b43_shm_write16(dev, B43_SHM_SHARED, offset + i, phase1key[i/2]);
                                                                           ^^^
Coding style

> +	}

Remove curly brackets.

> +	b43_shm_write16(dev, B43_SHM_SHARED, offset + i, iv32);
> +	b43_shm_write16(dev, B43_SHM_SHARED, offset + i + 2, iv32>>16);
                                                             ^^^^^^^^

Coding style

> +}
> +
> +static void b43_mac_update_tkip_key(struct ieee80211_hw *hw,
> +			struct ieee80211_key_conf *keyconf, const u8 *addr,
> +			u32 iv32, u16 *phase1key)
> +{
> +	struct b43_wl *wl = hw_to_b43_wl(hw);
> +	struct b43_wldev *dev = wl->current_dev;
> +	int index = keyconf->hw_key_idx;
> +	keymac_write(dev, index, NULL);	/* First zero out mac to avoid race */
> +
> +	rx_tkip_phase1_write(dev, index, iv32, phase1key);
> +	keymac_write(dev, index, addr);
> +}

Completely lacks locking. You need to hold the mutex and check for dev validity.
See other b43_op_* for examples.

>  static void do_key_write(struct b43_wldev *dev,
>  			 u8 index, u8 algorithm,
>  			 const u8 *key, size_t key_len, const u8 *mac_addr)
> @@ -848,6 +906,19 @@
> 
>  	if (index >= per_sta_keys_start)
>  		keymac_write(dev, index, NULL);	/* First zero out mac. */
> +	if (algorithm == B43_SEC_ALGO_TKIP) {
> +		/*
> +		 * We should provide an initial iv32, phase1key pair.
> +		 * We could start with iv32=0 and compute the corresponding
> +		 * phase1key, but this mean calling ieee80211_get_tkip_key
> +		 * with a fake skb (or export other tkip function).
> +		 * Because we are lazy we hope iv32 won't start with
> +		 * 0xffffffff and let's b43_mac_update_tkip_key provide a
> +		 * correct pair.
> +		 */
> +		rx_tkip_phase1_write(dev, index, 0xffffffff, (u16*)buf);
> +	} else if (index >= per_sta_keys_start) /* clear it */
> +		rx_tkip_phase1_write(dev, index, 0, (u16*)buf);

Why do you state /* clear it */, but yet you pass the key?
Shouldn't you pass a NULL pointer and modify rx_tkip_phase1_write() to cope with
NULL pointers? (write zeros if the key is NULL).

>  	if (key)
>  		memcpy(buf, key, key_len);
>  	key_write(dev, index, algorithm, buf);
> @@ -865,6 +936,8 @@
>  {
>  	int i;
> 
> +	if (algorithm == B43_SEC_ALGO_TKIP && key_len == 32)
> +		key_len = 16;

Can you add a comment to this? It doesn't make sense without explanation.

>  	if (key_len > B43_SEC_KEYSIZE)
>  		return -EINVAL;
>  	for (i = 0; i < dev->max_nr_keys; i++) {
> @@ -946,6 +1019,14 @@
>  		printk("   Algo: %04X/%02X", algo, key->algorithm);
> 
>  		if (index >= 4) {
> +			if (key->algorithm == B43_SEC_ALGO_TKIP) {
> +				printk("   TKIP: ");
> +				offset = B43_SHM_SH_TKIPTSCTTAK + (index - 4) * (10 + 4);
> +				for (i = 0; i < 14; i+=2) {
                                                    ^^^^
Coding style.

> +					u16 tmp = b43_shm_read16(dev, B43_SHM_SHARED, offset + i);
> +					printk("%02X%02X", (tmp & 0xFF), ((tmp >> 8) & 0xFF));
> +				}
> +			}
>  			rcmta0 = b43_shm_read32(dev, B43_SHM_RCMTA,
>  						((index - 4) * 2) + 0);
>  			rcmta1 = b43_shm_read16(dev, B43_SHM_RCMTA,
> @@ -1505,10 +1586,13 @@
>  	/* Looks like PLCP headers plus packet timings are stored for
>  	 * all possible basic rates
>  	 */
> +	/* FIXME this is the wrong offset : it goes in tkip rx phase1 shm */
> +#if 0
>  	b43_write_probe_resp_plcp(dev, 0x31A, size, &b43_b_ratetable[0]);
>  	b43_write_probe_resp_plcp(dev, 0x32C, size, &b43_b_ratetable[1]);
>  	b43_write_probe_resp_plcp(dev, 0x33E, size, &b43_b_ratetable[2]);
>  	b43_write_probe_resp_plcp(dev, 0x350, size, &b43_b_ratetable[3]);
> +#endif
> 
>  	size = min((size_t) size, 0x200 - sizeof(struct b43_plcp_hdr6));
>  	b43_write_template_common(dev, probe_resp_data,

Please submit this hunk as separate patch.

> @@ -3667,8 +3751,9 @@
> 
>  	switch (cmd) {
>  	case SET_KEY:
> -		if (algorithm == B43_SEC_ALGO_TKIP) {
> -			/* FIXME: No TKIP hardware encryption for now. */
> +		if (algorithm == B43_SEC_ALGO_TKIP &&
> +		    !(key->flags & IEEE80211_KEY_FLAG_PAIRWISE)) {
> +			/* We support only pairwise key */
>  			err = -EOPNOTSUPP;
>  			goto out_unlock;
>  		}
> @@ -3698,6 +3783,8 @@
>  				     b43_hf_read(dev) & ~B43_HF_USEDEFKEYS);
>  		}
>  		key->flags |= IEEE80211_KEY_FLAG_GENERATE_IV;
> +		if (algorithm == B43_SEC_ALGO_TKIP)
> +			key->flags |= IEEE80211_KEY_FLAG_GENERATE_MMIC;
>  		break;
>  	case DISABLE_KEY: {
>  		err = b43_key_clear(dev, key->hw_key_idx);
> @@ -4425,6 +4512,7 @@
>  	.bss_info_changed	= b43_op_bss_info_changed,
>  	.configure_filter	= b43_op_configure_filter,
>  	.set_key		= b43_op_set_key,
> +	.update_tkip_key	= b43_mac_update_tkip_key,

Rename to
b43_op_update_tkip_key

>  	.get_stats		= b43_op_get_stats,
>  	.get_tx_stats		= b43_op_get_tx_stats,
>  	.get_tsf		= b43_op_get_tsf,

> @@ -257,9 +258,25 @@
>  		mac_ctl |= (key->algorithm << B43_TXH_MAC_KEYALG_SHIFT) &
>  			   B43_TXH_MAC_KEYALG;
>  		wlhdr_len = ieee80211_hdrlen(fctl);
> -		iv_len = min((size_t) info->control.hw_key->iv_len,
> -			     ARRAY_SIZE(txhdr->iv));
> -		memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
> +		if (key->algorithm == B43_SEC_ALGO_TKIP) {
> +			u16 phase1key[5];
> +			int i;
> +			/* we give the phase1key and iv16 here, the key is stored in
> +			 * shm. With that the hardware can do phase 2 and encryption.
> +			 */
> +			ieee80211_get_tkip_key(info->control.hw_key, skb_frag,
> IEEE80211_TKIP_P1_KEY, (u8*)phase1key);

Patch is linewrap damaged. Fix your mail agent.

> +			/* phase1key is in host endian */
> +			for (i = 0; i < 5; i++)
> +				phase1key[i] = cpu_to_le16(phase1key[i]);
> +
> +			memcpy(txhdr->iv, phase1key, 10);
> +			/* iv16 */
> +			memcpy(txhdr->iv+10, ((u8 *) wlhdr) + wlhdr_len, 3);
                                      ^^^^^
Coding style.


> +		} else {
> +			iv_len = min((size_t) info->control.hw_key->iv_len,
> +				     ARRAY_SIZE(txhdr->iv));
> +			memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
> +		}
>  	}
>  	if (b43_is_old_txhdr_format(dev)) {
>  		b43_generate_plcp_hdr((struct b43_plcp_hdr4 *)(&txhdr->old_format.plcp),


-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Wed Jul 29 10:51:51 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Wed, 29 Jul 2009 10:51:51 +0200
Subject: DMA queue overflow
In-Reply-To: <4A6C8BEF.6020606@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261241.15704.mb@bu3sch.de> <4A6C7826.1000004@lwfinger.net>
	<200907261754.36489.mb@bu3sch.de> <4A6C8BEF.6020606@lwfinger.net>
Message-ID: <83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>

On Jul 26, 2009, at 7:01 PM, Larry Finger wrote:

> Michael Buesch wrote:
>> On Sunday 26 July 2009 17:37:10 Larry Finger wrote:
>>>
>>> The revised printk shows
>>>
>>> b43-phy0 warning: DMA queue overflow with free_slots = 0
>>
>> Ok, it's a mac80211 bug then.
>
> Perhaps not. I also got the ring->stopped WARN_ON. Is it possible that
> a second transmission was held at the spin_lock_irqsave() when the
> queues were stopped. If that were the case, the following patch should
> fix the problem.
>
> [cut]
>
> I do have one question. Should the "DMA queue overflow" message ever  
> be printed?
> It seems to me that we have a 'no harm - no foul' situation.
>
> Larry
Larry,

is this stuff related in some way to the error triggered by the  
opensource firmware? What happens with your patch?

I still have not received the boards so I have not started working on  
it, I'm waiting them from Hong Kong.

Cheers,
-Francesco




"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From Larry.Finger at lwfinger.net  Wed Jul 29 17:56:07 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 29 Jul 2009 10:56:07 -0500
Subject: DMA queue overflow
In-Reply-To: <83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261241.15704.mb@bu3sch.de> <4A6C7826.1000004@lwfinger.net>
	<200907261754.36489.mb@bu3sch.de> <4A6C8BEF.6020606@lwfinger.net>
	<83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
Message-ID: <4A707117.5040307@lwfinger.net>

Francesco Gringoli wrote:
> Larry,
> 
> is this stuff related in some way to the error triggered by the
> opensource firmware? What happens with your patch?

I do not think that it is related, but I have not yet done the test.
It is next on my list of things to do.

Larry



From Larry.Finger at lwfinger.net  Wed Jul 29 18:38:15 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 29 Jul 2009 11:38:15 -0500
Subject: 
In-Reply-To: <a23fe9cc0907290917p1a835dbs8595ce8a8b0330b6@mail.gmail.com>
References: <a23fe9cc0907290917p1a835dbs8595ce8a8b0330b6@mail.gmail.com>
Message-ID: <4A707AF7.6070202@lwfinger.net>

Brian J. Mc Hugh wrote:
> I have a Gateway Solo 9300 laptop and a Linksys Wireless-G Notebook Adapter.
> I've installed the latest Debian release (v5.0.2) and the latest b43
> driver (4.150.10.5).

This is a firmware version not a driver version.

> My WiFi card receives signal from my wireless router, but I suspect it
> isn't able to transmit signal and I'm not able to establish an Internet
> connection via my WiFi card.
>  
> The WiFi card has worked with previous Debian releases.

What kernel was in the previous release that you used?

> Can anyone understand why I'm unable to establish communication with the
> Internet based on the replies of the five diagnostic messages I've
> included below?
> Thanks,
> Brian
> 
> *****************1) uname -r *************************************
> 2.6.26-2-686

I do not remember any killer bugs in 2.6.26, but that was a long time
ago. You will probably do better if you install compat-wireless-old.
See http://wireless.kernel.org/en/users/Download/compat-wireless-old

There may be a deb package for Lenny. If so, I didn't find it with a
quick look; however, http://forum.eeeuser.com/viewtopic.php?id=65376
shows what to do to build the package.

Everything else looks OK; however, your interface was unable to use
DHCP to get an IP address. It appears that TX is messed up.




From netrolller.3d at gmail.com  Wed Jul 29 18:46:24 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Wed, 29 Jul 2009 18:46:24 +0200
Subject: 
In-Reply-To: <4A707AF7.6070202@lwfinger.net>
References: <a23fe9cc0907290917p1a835dbs8595ce8a8b0330b6@mail.gmail.com> 
	<4A707AF7.6070202@lwfinger.net>
Message-ID: <69e28c910907290946v160800a6lf43e7728a8edc1fd@mail.gmail.com>

On Wed, Jul 29, 2009 at 6:38 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
> Brian J. Mc Hugh wrote:
>> I have a Gateway Solo 9300 laptop and a Linksys Wireless-G Notebook Adapter.
>> I've installed the latest Debian release (v5.0.2) and the latest b43
>> driver (4.150.10.5).
>
> This is a firmware version not a driver version.
>
>> My WiFi card receives signal from my wireless router, but I suspect it
>> isn't able to transmit signal and I'm not able to establish an Internet
>> connection via my WiFi card.
>>
>> The WiFi card has worked with previous Debian releases.
>
> What kernel was in the previous release that you used?
>
>> Can anyone understand why I'm unable to establish communication with the
>> Internet based on the replies of the five diagnostic messages I've
>> included below?
>> Thanks,
>> Brian
>>
>> *****************1) uname -r *************************************
>> 2.6.26-2-686
>
> I do not remember any killer bugs in 2.6.26, but that was a long time
> ago. You will probably do better if you install compat-wireless-old.
> See http://wireless.kernel.org/en/users/Download/compat-wireless-old
>
> There may be a deb package for Lenny. If so, I didn't find it with a
> quick look; however, http://forum.eeeuser.com/viewtopic.php?id=65376
> shows what to do to build the package.
>
> Everything else looks OK; however, your interface was unable to use
> DHCP to get an IP address. It appears that TX is messed up.

Hmm, sounds familiar...

A hint: Debian Etch shipped with 2.6.18, which still had bcm43xx (no
BT coex support). I guess we are looking at yet another card where
trying to use BT coexistence disables TX.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Wed Jul 29 19:15:42 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 29 Jul 2009 12:15:42 -0500
Subject: 
In-Reply-To: <69e28c910907290946v160800a6lf43e7728a8edc1fd@mail.gmail.com>
References: <a23fe9cc0907290917p1a835dbs8595ce8a8b0330b6@mail.gmail.com>
	<4A707AF7.6070202@lwfinger.net>
	<69e28c910907290946v160800a6lf43e7728a8edc1fd@mail.gmail.com>
Message-ID: <4A7083BE.9080807@lwfinger.net>

G?bor Stefanik wrote:
> On Wed, Jul 29, 2009 at 6:38 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
>> Brian J. Mc Hugh wrote:
>>> I have a Gateway Solo 9300 laptop and a Linksys Wireless-G Notebook Adapter.
>>> I've installed the latest Debian release (v5.0.2) and the latest b43
>>> driver (4.150.10.5).
>> This is a firmware version not a driver version.
>>
>>> My WiFi card receives signal from my wireless router, but I suspect it
>>> isn't able to transmit signal and I'm not able to establish an Internet
>>> connection via my WiFi card.
>>>
>>> The WiFi card has worked with previous Debian releases.
>> What kernel was in the previous release that you used?
>>
>>> Can anyone understand why I'm unable to establish communication with the
>>> Internet based on the replies of the five diagnostic messages I've
>>> included below?
>>> Thanks,
>>> Brian
>>>
>>> *****************1) uname -r *************************************
>>> 2.6.26-2-686
>> I do not remember any killer bugs in 2.6.26, but that was a long time
>> ago. You will probably do better if you install compat-wireless-old.
>> See http://wireless.kernel.org/en/users/Download/compat-wireless-old
>>
>> There may be a deb package for Lenny. If so, I didn't find it with a
>> quick look; however, http://forum.eeeuser.com/viewtopic.php?id=65376
>> shows what to do to build the package.
>>
>> Everything else looks OK; however, your interface was unable to use
>> DHCP to get an IP address. It appears that TX is messed up.
> 
> Hmm, sounds familiar...
> 
> A hint: Debian Etch shipped with 2.6.18, which still had bcm43xx (no
> BT coex support). I guess we are looking at yet another card where
> trying to use BT coexistence disables TX.

Most of the cards with the BT coexistence problem were 4320's, but
there is one 4318. It has subvendor codes 1043:100f.

Brian, please run the command 'lspci -nnv | grep -A1 14e4' and post
the output.

Larry


From Larry.Finger at lwfinger.net  Thu Jul 30 03:18:17 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 29 Jul 2009 20:18:17 -0500
Subject: 
In-Reply-To: <a23fe9cc0907291451x72729eecy6865b3ab200973b@mail.gmail.com>
References: <a23fe9cc0907290917p1a835dbs8595ce8a8b0330b6@mail.gmail.com>	
	<4A707AF7.6070202@lwfinger.net>	
	<69e28c910907290946v160800a6lf43e7728a8edc1fd@mail.gmail.com>	
	<4A7083BE.9080807@lwfinger.net>
	<a23fe9cc0907291451x72729eecy6865b3ab200973b@mail.gmail.com>
Message-ID: <4A70F4D9.9020403@lwfinger.net>

Brian J. Mc Hugh wrote:
> Hi Larry, et. al:
> 
> Here is the result:
> 
> # lspci -nnv | grep -A1 14e4
> 02:00.0 Network controller [0280]: Broadcom Corporation BCM4318
> [AirForce One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
>     Subsystem: Linksys WPC54G-EU version 3 [Wireless-G Notebook Adapter]
> [1737:0048]

Thanks for the info. There is a possibility that your device will not
work even with compat-wireless-old. If that happens, please let me
know and I'll make a patch for you to try.

Larry


From Larry.Finger at lwfinger.net  Thu Jul 30 04:10:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 29 Jul 2009 21:10:32 -0500
Subject: DMA queue overflow
In-Reply-To: <83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<200907261241.15704.mb@bu3sch.de> <4A6C7826.1000004@lwfinger.net>
	<200907261754.36489.mb@bu3sch.de> <4A6C8BEF.6020606@lwfinger.net>
	<83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
Message-ID: <4A710118.2010505@lwfinger.net>

Francesco Gringoli wrote:
> 
> is this stuff related in some way to the error triggered by the
> opensource firmware? What happens with your patch?

Using the same test with tcpperf running on one console and a flood
ping on a second, the system lasted 7 minutes before meta->skb was
NULL. The data are:

b43: meta data: skb              (null)
                dmaaddr          000000004fa820bc
                is_last_fragment 1
b43: ring data: nr_slots       256
                used_slots     205
                current_slot   105
                index          1
                tx             1
                max_used_slots 256

Notice that the DMA queue is not even close to full - there are about
50 slots left or enough space for 25 more packets.

This error was generated with the DMA queue full patch applied.

Larry


From mb at bu3sch.de  Thu Jul 30 11:52:33 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 30 Jul 2009 11:52:33 +0200
Subject: DMA queue overflow
In-Reply-To: <4A710118.2010505@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
	<4A710118.2010505@lwfinger.net>
Message-ID: <200907301152.34151.mb@bu3sch.de>

On Thursday 30 July 2009 04:10:32 Larry Finger wrote:
> Francesco Gringoli wrote:
> > 
> > is this stuff related in some way to the error triggered by the
> > opensource firmware? What happens with your patch?
> 
> Using the same test with tcpperf running on one console and a flood
> ping on a second, the system lasted 7 minutes before meta->skb was
> NULL. The data are:
> 
> b43: meta data: skb              (null)
>                 dmaaddr          000000004fa820bc
>                 is_last_fragment 1
> b43: ring data: nr_slots       256
>                 used_slots     205
>                 current_slot   105
>                 index          1
>                 tx             1
>                 max_used_slots 256
> 
> Notice that the DMA queue is not even close to full - there are about
> 50 slots left or enough space for 25 more packets.

Yeah but it _was_ full earlier (max_used_slots 256).
I don't say that this is triggering the issue, however.

skb=NULL somehow smells like a double-free caused by a double-report
or something like that.

> This error was generated with the DMA queue full patch applied.



-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Thu Jul 30 23:54:17 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 30 Jul 2009 23:54:17 +0200
Subject: DMA queue overflow
In-Reply-To: <4A71EE5E.4040407@lwfinger.net>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<83A2AF45-8E39-43C8-A9A2-DFEE85C9F1C9@ing.unibs.it>
	<4A710118.2010505@lwfinger.net> <200907301152.34151.mb@bu3sch.de>
	<4A71EE5E.4040407@lwfinger.net>
Message-ID: <F83D6CFD-D5BF-4080-92E7-401281154EA1@ing.unibs.it>


On Jul 30, 2009, at 9:02 PM, Larry Finger wrote:

> Francesco,
>
>> skb=NULL somehow smells like a double-free caused by a double-report
>> or something like that.
>
> Based on what Michael said about a double-free, I changed from
> "meta->skb = NULL" to "meta->skb = 0x0606060606060606", and changed to
> testing section apropriately. Now I got two messages, then the
> interface hung, probably due to a bogus skb that was not NULL:
>
> b43: meta data: skb              0606060606060606
>                dmaaddr          0000000020a320bc
>                is_last_fragment 1
> b43: ring data: nr_slots       256
>                used_slots     241
>                current_slot   87
>                index          1
>                tx             1
>                max_used_slots 256
> b43: cookie: 0x2062
>     slot:   99
>
>
> b43: meta data: skb              0606060606060606
>                dmaaddr          00000000279220bc
>                is_last_fragment 1
> b43: ring data: nr_slots       256
>                used_slots     252
>                current_slot   147
>                index          1
>                tx             1
>                max_used_slots 256
> b43: cookie: 0x2044
>     slot:   69
>
>
> It certainly looks as if txstatus is called more than once with the
> same cookie.
>
> Larry
Hi Larry,

many thanks. I will surely look into that direction as soon as I get  
the boards. By the way: I never worked with mini-pci-e and I don't  
even have a desktop PC with that bus, so I plan to get some newer  
desktop around in my department and use a pci-e to mini-pci-e adapter.  
Do you know if such adapter can trigger some incompatibility with b43?  
Or is it completely transparent?

Cheers,
-Francesco



"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From mb at bu3sch.de  Thu Jul 30 23:55:47 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 30 Jul 2009 23:55:47 +0200
Subject: DMA queue overflow
In-Reply-To: <F83D6CFD-D5BF-4080-92E7-401281154EA1@ing.unibs.it>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A71EE5E.4040407@lwfinger.net>
	<F83D6CFD-D5BF-4080-92E7-401281154EA1@ing.unibs.it>
Message-ID: <200907302355.47945.mb@bu3sch.de>

On Thursday 30 July 2009 23:54:17 Francesco Gringoli wrote:
> many thanks. I will surely look into that direction as soon as I get  
> the boards. By the way: I never worked with mini-pci-e and I don't  
> even have a desktop PC with that bus, so I plan to get some newer  
> desktop around in my department and use a pci-e to mini-pci-e adapter.  
> Do you know if such adapter can trigger some incompatibility with b43?  
> Or is it completely transparent?

I think it's just a mechanical adapter.


-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Thu Jul 30 23:58:07 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 30 Jul 2009 23:58:07 +0200
Subject: DMA queue overflow
In-Reply-To: <200907302355.47945.mb@bu3sch.de>
References: <11878DAD-E42C-4455-8A6B-837BF2D187F2@ing.unibs.it>
	<4A71EE5E.4040407@lwfinger.net>
	<F83D6CFD-D5BF-4080-92E7-401281154EA1@ing.unibs.it>
	<200907302355.47945.mb@bu3sch.de>
Message-ID: <CD4C5C2E-A808-4E59-9BBB-DDE033E6A95F@ing.unibs.it>

On Jul 30, 2009, at 11:55 PM, Michael Buesch wrote:

> On Thursday 30 July 2009 23:54:17 Francesco Gringoli wrote:
>> many thanks. I will surely look into that direction as soon as I get
>> the boards. By the way: I never worked with mini-pci-e and I don't
>> even have a desktop PC with that bus, so I plan to get some newer
>> desktop around in my department and use a pci-e to mini-pci-e  
>> adapter.
>> Do you know if such adapter can trigger some incompatibility with  
>> b43?
>> Or is it completely transparent?
>
> I think it's just a mechanical adapter.
Thanks, I will get one immediately.

Cheers,
-Francesco




"INFORMATIVA SUL TRATTAMENTO DEI DATI PERSONALI"

I dati utilizzati per l'invio del presente messaggio sono trattati dall' Universita' degli
studi di Brescia esclusivamente per finalita' istituzionali. Informazioni piu' dettagliate
anche in ordine ai diritti dell'interessato sono riposte nell'informativa generale e nelle
notizie pubblicate sul sito web dell'Ateneo nella sezione "privacy".

Il contenuto di questo messaggio e' rivolto unicamente alle persone cui e' indirizzato e puo'
contenere informazioni la cui riservatezza e' tutelata legalmente. Ne sono vietati la
riproduzione, la diffusione e l'uso in mancanza di autorizzazione del destinatario.
Qualora il messaggio fosse pervenuto per errore, preghiamo di eliminarlo.




From neiro21 at gmail.com  Fri Jul 31 18:57:53 2009
From: neiro21 at gmail.com (Nikolay Borisov)
Date: Fri, 31 Jul 2009 20:57:53 +0400
Subject: BCM5354 support
Message-ID: <20090731205753.0f1eb65b@gmail.com>

Hi all!


I have ASUS WL500gP v2 AP with BCM5354 integrated wireless card so I am
very interested in getting it supported by b43 driver as I'd like to
use OpenWRT :)
Could anyone tell me if I can help the development somehow?

PS I am quite experienced C/C++ *nix developer but unfortunately never
took part in linux kernel driver development.


With kind regards,
			Nikolay Borisov
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090731/058cbc53/attachment.pgp>

From Larry.Finger at lwfinger.net  Fri Jul 31 19:13:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 31 Jul 2009 12:13:32 -0500
Subject: BCM5354 support
In-Reply-To: <20090731205753.0f1eb65b@gmail.com>
References: <20090731205753.0f1eb65b@gmail.com>
Message-ID: <4A73263C.3000709@lwfinger.net>

Nikolay Borisov wrote:
> Hi all!
> 
> 
> I have ASUS WL500gP v2 AP with BCM5354 integrated wireless card so I am
> very interested in getting it supported by b43 driver as I'd like to
> use OpenWRT :)
> Could anyone tell me if I can help the development somehow?

In the article in the URL listed below, the changes needed to run the
chip are listed. It seems likely that it should be possible. The first
step is to get the PCI ID's usiong the 'lspci -n' command.
 https://dev.openwrt.org/browser/trunk/target/linux/brcm-2.4/patches/014-bcm5354.patch?rev=9684

Larry


From neiro21 at gmail.com  Fri Jul 31 19:42:37 2009
From: neiro21 at gmail.com (Nikolay Borisov)
Date: Fri, 31 Jul 2009 21:42:37 +0400
Subject: BCM5354 support
In-Reply-To: <4A73263C.3000709@lwfinger.net>
References: <20090731205753.0f1eb65b@gmail.com> <4A73263C.3000709@lwfinger.net>
Message-ID: <20090731214237.0b22846f@gmail.com>

Larry Finger (Larry.Finger at lwfinger.net) wrote on Fri, 31 Jul 2009
12:13:32 -0500:
>Nikolay Borisov wrote:
>> Hi all!
>> 
>> 
>> I have ASUS WL500gP v2 AP with BCM5354 integrated wireless card so I
>> am very interested in getting it supported by b43 driver as I'd like
>> to use OpenWRT :)
>> Could anyone tell me if I can help the development somehow?
>
>In the article in the URL listed below, the changes needed to run the
>chip are listed. It seems likely that it should be possible. The first
>step is to get the PCI ID's usiong the 'lspci -n' command.
> https://dev.openwrt.org/browser/trunk/target/linux/brcm-2.4/patches/014-bcm5354.patch?rev=9684
>
>Larry


Thank you for your answer. Actually this patch is for kernel 2.4 - the
driver is known to be stable. I think I forgot to mention that I'd like
to get BCM5354 supported by 2.6 kernel driver, sorry.

Now the following is reported:
	b43-phy0: Broadcom 5354 WLAN found (core revision 13)
	b43-phy0 ERROR: FOUND UNSUPPORTED PHY (Analog 6, Type 5, Revision 0)
	b43: probe of ssb0:3 failed with error -122


With kind regards,
			Nikolay Borisov
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090731/aafe57f5/attachment.pgp>

From Larry.Finger at lwfinger.net  Fri Jul 31 20:04:48 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 31 Jul 2009 13:04:48 -0500
Subject: BCM5354 support
In-Reply-To: <20090731214237.0b22846f@gmail.com>
References: <20090731205753.0f1eb65b@gmail.com>	<4A73263C.3000709@lwfinger.net>
	<20090731214237.0b22846f@gmail.com>
Message-ID: <4A733240.1090107@lwfinger.net>

Nikolay Borisov wrote:
> 
> 
> Thank you for your answer. Actually this patch is for kernel 2.4 - the
> driver is known to be stable. I think I forgot to mention that I'd like
> to get BCM5354 supported by 2.6 kernel driver, sorry.

I knew you wanted a 2.6 kernel as b43 only runs under 2.6.
> 
> Now the following is reported:
> 	b43-phy0: Broadcom 5354 WLAN found (core revision 13)
> 	b43-phy0 ERROR: FOUND UNSUPPORTED PHY (Analog 6, Type 5, Revision 0)
> 	b43: probe of ssb0:3 failed with error -122

The PHY with type 5 is a so-called LP PHY, which is not yet supported
for any device. The reverse engineering has been done, but no one has
yet written the code from the specs. As I did the RE, I cannot work on
the coding. Until that step is completed, the device will not be
supported. Your only choice is to use the Broadcom wl driver. Of
course, that driver does not have access to mac80211.

Larry


From mb at bu3sch.de  Fri Jul 31 20:51:41 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 31 Jul 2009 20:51:41 +0200
Subject: [PATCH] b43: Fix unaligned 32bit SHM-shared access
Message-ID: <200907312051.41457.mb@bu3sch.de>

This fixes unaligned 32bit SHM-shared read/write access.
The low and high 16 bits were swapped.
It also adds a testcase for this to the chipaccess validation.

(Thanks to Albert Herranz for tracking down this bug.)

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

This patch does _not_ need to be pushed as a bugfix, because we currently
do not use unaligned 32bit SHM-shared access.


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-07-31 20:36:18.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-07-31 20:42:48.000000000 +0200
@@ -392,15 +392,14 @@ u32 __b43_shm_read32(struct b43_wldev *d
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			ret = b43_read16(dev, B43_MMIO_SHM_DATA_UNALIGNED);
-			ret <<= 16;
 			b43_shm_control_word(dev, routing, (offset >> 2) + 1);
-			ret |= b43_read16(dev, B43_MMIO_SHM_DATA);
+			ret |= ((u32)b43_read16(dev, B43_MMIO_SHM_DATA)) << 16;
 
 			goto out;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
@@ -461,15 +460,16 @@ void __b43_shm_write32(struct b43_wldev 
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
 		if (offset & 0x0003) {
 			/* Unaligned access */
 			b43_shm_control_word(dev, routing, offset >> 2);
 			b43_write16(dev, B43_MMIO_SHM_DATA_UNALIGNED,
-				    (value >> 16) & 0xffff);
+				    value & 0xFFFF);
 			b43_shm_control_word(dev, routing, (offset >> 2) + 1);
-			b43_write16(dev, B43_MMIO_SHM_DATA, value & 0xffff);
+			b43_write16(dev, B43_MMIO_SHM_DATA,
+				    (value >> 16) & 0xFFFF);
 			return;
 		}
 		offset >>= 2;
 	}
 	b43_shm_control_word(dev, routing, offset);
 	b43_write32(dev, B43_MMIO_SHM_DATA, value);
@@ -2928,25 +2928,42 @@ static void b43_periodic_tasks_setup(str
 	queue_delayed_work(dev->wl->hw->workqueue, work, 0);
 }
 
 /* Check if communication with the device works correctly. */
 static int b43_validate_chipaccess(struct b43_wldev *dev)
 {
-	u32 v, backup;
+	u32 v, backup0, backup4;
 
-	backup = b43_shm_read32(dev, B43_SHM_SHARED, 0);
+	backup0 = b43_shm_read32(dev, B43_SHM_SHARED, 0);
+	backup4 = b43_shm_read32(dev, B43_SHM_SHARED, 4);
 
 	/* Check for read/write and endianness problems. */
 	b43_shm_write32(dev, B43_SHM_SHARED, 0, 0x55AAAA55);
 	if (b43_shm_read32(dev, B43_SHM_SHARED, 0) != 0x55AAAA55)
 		goto error;
 	b43_shm_write32(dev, B43_SHM_SHARED, 0, 0xAA5555AA);
 	if (b43_shm_read32(dev, B43_SHM_SHARED, 0) != 0xAA5555AA)
 		goto error;
 
-	b43_shm_write32(dev, B43_SHM_SHARED, 0, backup);
+	/* Check if unaligned 32bit SHM_SHARED access works properly.
+	 * However, don't bail out on failure, because it's noncritical. */
+	b43_shm_write16(dev, B43_SHM_SHARED, 0, 0x1122);
+	b43_shm_write16(dev, B43_SHM_SHARED, 2, 0x3344);
+	b43_shm_write16(dev, B43_SHM_SHARED, 4, 0x5566);
+	b43_shm_write16(dev, B43_SHM_SHARED, 6, 0x7788);
+	if (b43_shm_read32(dev, B43_SHM_SHARED, 2) != 0x55663344)
+		b43warn(dev->wl, "Unaligned 32bit SHM read access is broken\n");
+	b43_shm_write32(dev, B43_SHM_SHARED, 2, 0xAABBCCDD);
+	if (b43_shm_read16(dev, B43_SHM_SHARED, 0) != 0x1122 ||
+	    b43_shm_read16(dev, B43_SHM_SHARED, 2) != 0xCCDD ||
+	    b43_shm_read16(dev, B43_SHM_SHARED, 4) != 0xAABB ||
+	    b43_shm_read16(dev, B43_SHM_SHARED, 6) != 0x7788)
+		b43warn(dev->wl, "Unaligned 32bit SHM write access is broken\n");
+
+	b43_shm_write32(dev, B43_SHM_SHARED, 0, backup0);
+	b43_shm_write32(dev, B43_SHM_SHARED, 4, backup4);
 
 	if ((dev->dev->id.revision >= 3) && (dev->dev->id.revision <= 10)) {
 		/* The 32bit register shadows the two 16bit registers
 		 * with update sideeffects. Validate this. */
 		b43_write16(dev, B43_MMIO_TSF_CFP_START, 0xAAAA);
 		b43_write32(dev, B43_MMIO_TSF_CFP_START, 0xCCCCBBBB);

-- 
Greetings, Michael.


From gregor.kowski at gmail.com  Fri Jul 31 22:35:49 2009
From: gregor.kowski at gmail.com (gregor kowski)
Date: Fri, 31 Jul 2009 22:35:49 +0200
Subject: [PATCH] remove wrong probe_resp_plcp write
Message-ID: <83a869cd0907311335h3065547aqc736573a663b6d42@mail.gmail.com>

The tkip hw support uncovered a bug in b43_write_probe_resp_template : it is
writing at the wrong shm offset, it is in the B43_SHM_SH_TKIPTSCTTAK zone. This
patch comments these writes.

Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>

Index: linux-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-31
20:32:21.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-31
20:32:28.000000000 +0000
@@ -1505,10 +1505,13 @@
 	/* Looks like PLCP headers plus packet timings are stored for
 	 * all possible basic rates
 	 */
+	/* FIXME this is the wrong offset : it goes in tkip rx phase1 shm */
+#if 0
 	b43_write_probe_resp_plcp(dev, 0x31A, size, &b43_b_ratetable[0]);
 	b43_write_probe_resp_plcp(dev, 0x32C, size, &b43_b_ratetable[1]);
 	b43_write_probe_resp_plcp(dev, 0x33E, size, &b43_b_ratetable[2]);
 	b43_write_probe_resp_plcp(dev, 0x350, size, &b43_b_ratetable[3]);
+#endif

 	size = min((size_t) size, 0x200 - sizeof(struct b43_plcp_hdr6));
 	b43_write_template_common(dev, probe_resp_data,


From mb at bu3sch.de  Fri Jul 31 22:38:14 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 31 Jul 2009 22:38:14 +0200
Subject: [PATCH] remove wrong probe_resp_plcp write
In-Reply-To: <83a869cd0907311335h3065547aqc736573a663b6d42@mail.gmail.com>
References: <83a869cd0907311335h3065547aqc736573a663b6d42@mail.gmail.com>
Message-ID: <200907312238.15705.mb@bu3sch.de>

On Friday 31 July 2009 22:35:49 gregor kowski wrote:
> The tkip hw support uncovered a bug in b43_write_probe_resp_template : it is
> writing at the wrong shm offset, it is in the B43_SHM_SH_TKIPTSCTTAK zone. This
> patch comments these writes.
> 
> Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>

Signed-off-by: Michael Buesch <mb at bu3sch.de>

> 
> Index: linux-2.6/drivers/net/wireless/b43/main.c
> ===================================================================
> --- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-31
> 20:32:21.000000000 +0000
> +++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-31
> 20:32:28.000000000 +0000
> @@ -1505,10 +1505,13 @@
>  	/* Looks like PLCP headers plus packet timings are stored for
>  	 * all possible basic rates
>  	 */
> +	/* FIXME this is the wrong offset : it goes in tkip rx phase1 shm */
> +#if 0
>  	b43_write_probe_resp_plcp(dev, 0x31A, size, &b43_b_ratetable[0]);
>  	b43_write_probe_resp_plcp(dev, 0x32C, size, &b43_b_ratetable[1]);
>  	b43_write_probe_resp_plcp(dev, 0x33E, size, &b43_b_ratetable[2]);
>  	b43_write_probe_resp_plcp(dev, 0x350, size, &b43_b_ratetable[3]);
> +#endif
> 
>  	size = min((size_t) size, 0x200 - sizeof(struct b43_plcp_hdr6));
>  	b43_write_template_common(dev, probe_resp_data,
> 
> 



-- 
Greetings, Michael.


From gregor.kowski at gmail.com  Fri Jul 31 23:00:01 2009
From: gregor.kowski at gmail.com (gregor kowski)
Date: Fri, 31 Jul 2009 23:00:01 +0200
Subject: [RESEND] [PATCHv3] b43 add harware tkip
In-Reply-To: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
References: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
Message-ID: <83a869cd0907311400g2e94f217g3f4aefc64681e0b5@mail.gmail.com>

Update v3 : add a module parameter to enable hw tkip, Coding style
fix, locking fix
Update v2 : work with qos, implement dump key, fix an issue with setting
random value on tkip key clear.
PS : this depends on "b43 : remove old kidx API" and "remove wrong
probe_resp_plcp write"

This add hardware tkip for b43.

Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>

Index: linux-2.6/drivers/net/wireless/b43/dma.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/dma.c	2009-07-31
20:51:10.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/dma.c	2009-07-31 20:54:06.000000000 +0000
@@ -1188,7 +1188,7 @@
 	header = &(ring->txhdr_cache[(slot / TX_SLOTS_PER_FRAME) * hdrsize]);
 	cookie = generate_cookie(ring, slot);
 	err = b43_generate_txhdr(ring->dev, header,
-				 skb->data, skb->len, info, cookie);
+				 skb, info, cookie);
 	if (unlikely(err)) {
 		ring->current_slot = old_top_slot;
 		ring->used_slots = old_used_slots;
Index: linux-2.6/drivers/net/wireless/b43/main.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-31
20:51:10.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-31
20:56:10.000000000 +0000
@@ -80,6 +80,10 @@
 module_param_named(nohwcrypt, modparam_nohwcrypt, int, 0444);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption.");

+static int modparam_hwtkip;
+module_param_named(hwtkip, modparam_hwtkip, int, 0444);
+MODULE_PARM_DESC(hwtkip, "Enable hardware tkip.");
+
 static int modparam_qos = 1;
 module_param_named(qos, modparam_qos, int, 0444);
 MODULE_PARM_DESC(qos, "Enable QOS support (default on)");
@@ -836,6 +840,76 @@
 	}
 }

+/* The ucode will use phase1 key with TEK key to decrypt rx packets.
+ * When a packet is received, the iv32 is checked.
+ * - if it doesn't the packet is returned without modification (and software
+ *   decryption can be done). That's what happen when iv16 wrap.
+ * - if it does, the rc4 key is computed, and decryption is tried.
+ *   Either it will success and B43_RX_MAC_DEC is returned,
+ *   either it fails and B43_RX_MAC_DEC|B43_RX_MAC_DECERR is returned
+ *   and the packet is not usable (it got modified by the ucode).
+ * So in order to never have B43_RX_MAC_DECERR, we should provide
+ * a iv32 and phase1key that match. Because we drop packets in case of
+ * B43_RX_MAC_DECERR, if we have a correct iv32 but a wrong phase1key, all
+ * packets will be lost without higher layer knowing (ie no resync possible
+ * until next wrap).
+ *
+ * NOTE : this should support 50 key like RCMTA because
+ * (B43_SHM_SH_KEYIDXBLOCK - B43_SHM_SH_TKIPTSCTTAK)/14 = 50
+ */
+static void rx_tkip_phase1_write(struct b43_wldev *dev, u8 index, u32 iv32,
+		u16 *phase1key)
+{
+	unsigned int i;
+	u32 offset;
+	const u8 per_sta_keys_start = 4;
+	if (!modparam_hwtkip)
+		return;
+
+	B43_WARN_ON(index < per_sta_keys_start);
+	/* We have four default TX/ RX keys.
+	 * Physical mac 0 is mapped to physical key 4.
+	 * So we must adjust the index here.
+	 */
+	index -= per_sta_keys_start;
+
+	if (b43_debug(dev, B43_DBG_KEYS)) {
+		b43dbg(dev->wl, "rx_tkip_phase1_write : idx 0x%x, iv32 0x%x\n",
+				index, iv32);
+	}
+	/* Write the key to the  RX tkip shared mem */
+	offset = B43_SHM_SH_TKIPTSCTTAK + index * (10 + 4);
+	for (i = 0; i < 10; i += 2) {
+		b43_shm_write16(dev, B43_SHM_SHARED, offset + i,
+				phase1key ? phase1key[i / 2] : 0);
+	}
+	b43_shm_write16(dev, B43_SHM_SHARED, offset + i, iv32);
+	b43_shm_write16(dev, B43_SHM_SHARED, offset + i + 2, iv32 >> 16);
+}
+
+static void b43_op_update_tkip_key(struct ieee80211_hw *hw,
+			struct ieee80211_key_conf *keyconf, const u8 *addr,
+			u32 iv32, u16 *phase1key)
+{
+	struct b43_wl *wl = hw_to_b43_wl(hw);
+	struct b43_wldev *dev;
+	int index = keyconf->hw_key_idx;
+
+	mutex_lock(&wl->mutex);
+
+	dev = wl->current_dev;
+	if (!dev || b43_status(dev) < B43_STAT_INITIALIZED)
+		goto out_unlock;
+
+	keymac_write(dev, index, NULL);	/* First zero out mac to avoid race */
+
+	rx_tkip_phase1_write(dev, index, iv32, phase1key);
+	keymac_write(dev, index, addr);
+
+out_unlock:
+	mutex_unlock(&wl->mutex);
+}
+
 static void do_key_write(struct b43_wldev *dev,
 			 u8 index, u8 algorithm,
 			 const u8 *key, size_t key_len, const u8 *mac_addr)
@@ -848,6 +922,19 @@

 	if (index >= per_sta_keys_start)
 		keymac_write(dev, index, NULL);	/* First zero out mac. */
+	if (algorithm == B43_SEC_ALGO_TKIP) {
+		/*
+		 * We should provide an initial iv32, phase1key pair.
+		 * We could start with iv32=0 and compute the corresponding
+		 * phase1key, but this means calling ieee80211_get_tkip_key
+		 * with a fake skb (or export other tkip function).
+		 * Because we are lazy we hope iv32 won't start with
+		 * 0xffffffff and let's b43_op_update_tkip_key provide a
+		 * correct pair.
+		 */
+		rx_tkip_phase1_write(dev, index, 0xffffffff, (u16*)buf);
+	} else if (index >= per_sta_keys_start) /* clear it */
+		rx_tkip_phase1_write(dev, index, 0, NULL);
 	if (key)
 		memcpy(buf, key, key_len);
 	key_write(dev, index, algorithm, buf);
@@ -865,6 +952,15 @@
 {
 	int i;

+	/* For ALG_TKIP the key is encoded as a 256-bit (32 byte) data block:
+	 * 	- Temporal Encryption Key (128 bits)
+	 * 	- Temporal Authenticator Tx MIC Key (64 bits)
+	 * 	- Temporal Authenticator Rx MIC Key (64 bits)
+	 *
+	 * 	Hardware only store TEK
+	 */
+	if (algorithm == B43_SEC_ALGO_TKIP && key_len == 32)
+		key_len = 16;
 	if (key_len > B43_SEC_KEYSIZE)
 		return -EINVAL;
 	for (i = 0; i < dev->max_nr_keys; i++) {
@@ -946,6 +1042,14 @@
 		printk("   Algo: %04X/%02X", algo, key->algorithm);

 		if (index >= 4) {
+			if (key->algorithm == B43_SEC_ALGO_TKIP) {
+				printk("   TKIP: ");
+				offset = B43_SHM_SH_TKIPTSCTTAK + (index - 4) * (10 + 4);
+				for (i = 0; i < 14; i += 2) {
+					u16 tmp = b43_shm_read16(dev, B43_SHM_SHARED, offset + i);
+					printk("%02X%02X", (tmp & 0xFF), ((tmp >> 8) & 0xFF));
+				}
+			}
 			rcmta0 = b43_shm_read32(dev, B43_SHM_RCMTA,
 						((index - 4) * 2) + 0);
 			rcmta1 = b43_shm_read16(dev, B43_SHM_RCMTA,
@@ -3670,8 +3774,10 @@

 	switch (cmd) {
 	case SET_KEY:
-		if (algorithm == B43_SEC_ALGO_TKIP) {
-			/* FIXME: No TKIP hardware encryption for now. */
+		if (algorithm == B43_SEC_ALGO_TKIP &&
+		    (!(key->flags & IEEE80211_KEY_FLAG_PAIRWISE) ||
+		    !modparam_hwtkip)) {
+			/* We support only pairwise key */
 			err = -EOPNOTSUPP;
 			goto out_unlock;
 		}
@@ -3701,6 +3807,8 @@
 				     b43_hf_read(dev) & ~B43_HF_USEDEFKEYS);
 		}
 		key->flags |= IEEE80211_KEY_FLAG_GENERATE_IV;
+		if (algorithm == B43_SEC_ALGO_TKIP)
+			key->flags |= IEEE80211_KEY_FLAG_GENERATE_MMIC;
 		break;
 	case DISABLE_KEY: {
 		err = b43_key_clear(dev, key->hw_key_idx);
@@ -4428,6 +4536,7 @@
 	.bss_info_changed	= b43_op_bss_info_changed,
 	.configure_filter	= b43_op_configure_filter,
 	.set_key		= b43_op_set_key,
+	.update_tkip_key	= b43_op_update_tkip_key,
 	.get_stats		= b43_op_get_stats,
 	.get_tx_stats		= b43_op_get_tx_stats,
 	.get_tsf		= b43_op_get_tsf,
Index: linux-2.6/drivers/net/wireless/b43/pio.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/pio.c	2009-07-31
20:51:10.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/pio.c	2009-07-31 20:54:06.000000000 +0000
@@ -461,8 +461,8 @@

 	cookie = generate_cookie(q, pack);
 	hdrlen = b43_txhdr_size(q->dev);
-	err = b43_generate_txhdr(q->dev, (u8 *)&txhdr, skb->data,
-				 skb->len, info, cookie);
+	err = b43_generate_txhdr(q->dev, (u8 *)&txhdr, skb,
+				 info, cookie);
 	if (err)
 		return err;

Index: linux-2.6/drivers/net/wireless/b43/xmit.c
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.c	2009-07-31
20:51:10.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.c	2009-07-31
20:54:06.000000000 +0000
@@ -180,11 +180,12 @@
 /* Generate a TX data header. */
 int b43_generate_txhdr(struct b43_wldev *dev,
 		       u8 *_txhdr,
-		       const unsigned char *fragment_data,
-		       unsigned int fragment_len,
+		       struct sk_buff *skb_frag,
 		       struct ieee80211_tx_info *info,
 		       u16 cookie)
 {
+	const unsigned char *fragment_data = skb_frag->data;
+	unsigned int fragment_len = skb_frag->len;
 	struct b43_txhdr *txhdr = (struct b43_txhdr *)_txhdr;
 	const struct b43_phy *phy = &dev->phy;
 	const struct ieee80211_hdr *wlhdr =
@@ -257,9 +258,26 @@
 		mac_ctl |= (key->algorithm << B43_TXH_MAC_KEYALG_SHIFT) &
 			   B43_TXH_MAC_KEYALG;
 		wlhdr_len = ieee80211_hdrlen(fctl);
-		iv_len = min((size_t) info->control.hw_key->iv_len,
-			     ARRAY_SIZE(txhdr->iv));
-		memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
+		if (key->algorithm == B43_SEC_ALGO_TKIP) {
+			u16 phase1key[5];
+			int i;
+			/* we give the phase1key and iv16 here, the key is stored in
+			 * shm. With that the hardware can do phase 2 and encryption.
+			 */
+			ieee80211_get_tkip_key(info->control.hw_key, skb_frag,
+					IEEE80211_TKIP_P1_KEY, (u8*)phase1key);
+			/* phase1key is in host endian */
+			for (i = 0; i < 5; i++)
+				phase1key[i] = cpu_to_le16(phase1key[i]);
+
+			memcpy(txhdr->iv, phase1key, 10);
+			/* iv16 */
+			memcpy(txhdr->iv + 10, ((u8 *) wlhdr) + wlhdr_len, 3);
+		} else {
+			iv_len = min((size_t) info->control.hw_key->iv_len,
+				     ARRAY_SIZE(txhdr->iv));
+			memcpy(txhdr->iv, ((u8 *) wlhdr) + wlhdr_len, iv_len);
+		}
 	}
 	if (b43_is_old_txhdr_format(dev)) {
 		b43_generate_plcp_hdr((struct b43_plcp_hdr4 *)(&txhdr->old_format.plcp),
Index: linux-2.6/drivers/net/wireless/b43/xmit.h
===================================================================
--- linux-2.6.orig/drivers/net/wireless/b43/xmit.h	2009-07-31
20:51:10.000000000 +0000
+++ linux-2.6/drivers/net/wireless/b43/xmit.h	2009-07-31
20:54:06.000000000 +0000
@@ -176,8 +176,7 @@

 int b43_generate_txhdr(struct b43_wldev *dev,
 		       u8 * txhdr,
-		       const unsigned char *fragment_data,
-		       unsigned int fragment_len,
+		       struct sk_buff *skb_frag,
 		       struct ieee80211_tx_info *txctl, u16 cookie);

 /* Transmit Status */


From gregor.kowski at gmail.com  Fri Jul 31 23:04:17 2009
From: gregor.kowski at gmail.com (gregor kowski)
Date: Fri, 31 Jul 2009 23:04:17 +0200
Subject: [RESEND] [PATCHv2] b43 add harware tkip
In-Reply-To: <200907281808.35906.mb@bu3sch.de>
References: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
	<200907281808.35906.mb@bu3sch.de>
Message-ID: <83a869cd0907311404o793c1733p43e936437a923340@mail.gmail.com>

Hi Michael,

On 7/28/09, Michael Buesch <mb at bu3sch.de> wrote:
>> This add hardware tkip for b43.
>
> First of all, I don't really want to support hw tkip on b43.
> Broadcom removed the support for hw tkip from their drivers. I bet they
> had a very good reason to do so.
Did they remove it from the firmware or only the driver ?
May be they remove it to support advanced stuff like multiple SSID ?
Which version of the driver it is ?

> It's mapped to 4, because you removed the old API support.
> (I'm not sure whether we want to remove that support, yet. Gimme some time
> on it...)
>
Does the old API still useful ?
Are there v4 firmware supporting old API ?


Regards,

Gregor


From mb at bu3sch.de  Fri Jul 31 23:08:30 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 31 Jul 2009 23:08:30 +0200
Subject: [RESEND] [PATCHv2] b43 add harware tkip
In-Reply-To: <83a869cd0907311404o793c1733p43e936437a923340@mail.gmail.com>
References: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
	<200907281808.35906.mb@bu3sch.de>
	<83a869cd0907311404o793c1733p43e936437a923340@mail.gmail.com>
Message-ID: <200907312308.31066.mb@bu3sch.de>

On Friday 31 July 2009 23:04:17 gregor kowski wrote:
> Hi Michael,
> 
> On 7/28/09, Michael Buesch <mb at bu3sch.de> wrote:
> >> This add hardware tkip for b43.
> >
> > First of all, I don't really want to support hw tkip on b43.
> > Broadcom removed the support for hw tkip from their drivers. I bet they
> > had a very good reason to do so.
> Did they remove it from the firmware or only the driver ?

I'm not sure about the firmware. But they removed it from the driver.

> > It's mapped to 4, because you removed the old API support.
> > (I'm not sure whether we want to remove that support, yet. Gimme some time
> > on it...)
> >
> Does the old API still useful ?

Well, I'm not sure. Why do we remove it at all? It just avoids one single
if condition in your tkip patch, doesn't it?

> Are there v4 firmware supporting old API ?

Yes

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jul 31 23:20:00 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 31 Jul 2009 23:20:00 +0200
Subject: [RESEND] [PATCHv3] b43 add harware tkip
In-Reply-To: <83a869cd0907311400g2e94f217g3f4aefc64681e0b5@mail.gmail.com>
References: <83a869cd0907271349h248204at74cc1603419fc83b@mail.gmail.com>
	<83a869cd0907311400g2e94f217g3f4aefc64681e0b5@mail.gmail.com>
Message-ID: <200907312320.02171.mb@bu3sch.de>

On Friday 31 July 2009 23:00:01 gregor kowski wrote:
> Update v3 : add a module parameter to enable hw tkip, Coding style
> fix, locking fix
> Update v2 : work with qos, implement dump key, fix an issue with setting
> random value on tkip key clear.
> PS : this depends on "b43 : remove old kidx API" and "remove wrong
> probe_resp_plcp write"
> 
> This add hardware tkip for b43.
> 
> Signed-off-by: Gregor Kowski <gregor.kowski at gmail.com>
> 
> Index: linux-2.6/drivers/net/wireless/b43/dma.c
> ===================================================================
> --- linux-2.6.orig/drivers/net/wireless/b43/dma.c	2009-07-31
> 20:51:10.000000000 +0000
> +++ linux-2.6/drivers/net/wireless/b43/dma.c	2009-07-31 20:54:06.000000000 +0000
> @@ -1188,7 +1188,7 @@
>  	header = &(ring->txhdr_cache[(slot / TX_SLOTS_PER_FRAME) * hdrsize]);
>  	cookie = generate_cookie(ring, slot);
>  	err = b43_generate_txhdr(ring->dev, header,
> -				 skb->data, skb->len, info, cookie);
> +				 skb, info, cookie);
>  	if (unlikely(err)) {
>  		ring->current_slot = old_top_slot;
>  		ring->used_slots = old_used_slots;
> Index: linux-2.6/drivers/net/wireless/b43/main.c
> ===================================================================
> --- linux-2.6.orig/drivers/net/wireless/b43/main.c	2009-07-31
> 20:51:10.000000000 +0000
> +++ linux-2.6/drivers/net/wireless/b43/main.c	2009-07-31
> 20:56:10.000000000 +0000
> @@ -80,6 +80,10 @@
>  module_param_named(nohwcrypt, modparam_nohwcrypt, int, 0444);
>  MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption.");
> 
> +static int modparam_hwtkip;
> +module_param_named(hwtkip, modparam_hwtkip, int, 0444);
> +MODULE_PARM_DESC(hwtkip, "Enable hardware tkip.");
> +
>  static int modparam_qos = 1;
>  module_param_named(qos, modparam_qos, int, 0444);
>  MODULE_PARM_DESC(qos, "Enable QOS support (default on)");
> @@ -836,6 +840,76 @@
>  	}
>  }
> 
> +/* The ucode will use phase1 key with TEK key to decrypt rx packets.
> + * When a packet is received, the iv32 is checked.
> + * - if it doesn't the packet is returned without modification (and software
> + *   decryption can be done). That's what happen when iv16 wrap.
> + * - if it does, the rc4 key is computed, and decryption is tried.
> + *   Either it will success and B43_RX_MAC_DEC is returned,
> + *   either it fails and B43_RX_MAC_DEC|B43_RX_MAC_DECERR is returned
> + *   and the packet is not usable (it got modified by the ucode).
> + * So in order to never have B43_RX_MAC_DECERR, we should provide
> + * a iv32 and phase1key that match. Because we drop packets in case of
> + * B43_RX_MAC_DECERR, if we have a correct iv32 but a wrong phase1key, all
> + * packets will be lost without higher layer knowing (ie no resync possible
> + * until next wrap).
> + *
> + * NOTE : this should support 50 key like RCMTA because
> + * (B43_SHM_SH_KEYIDXBLOCK - B43_SHM_SH_TKIPTSCTTAK)/14 = 50
> + */
> +static void rx_tkip_phase1_write(struct b43_wldev *dev, u8 index, u32 iv32,
> +		u16 *phase1key)
> +{
> +	unsigned int i;
> +	u32 offset;
> +	const u8 per_sta_keys_start = 4;

Can we add an empty line here before the code begins?

> +	if (!modparam_hwtkip)
> +		return;
> +
> +	B43_WARN_ON(index < per_sta_keys_start);
> +	/* We have four default TX/ RX keys.
> +	 * Physical mac 0 is mapped to physical key 4.
> +	 * So we must adjust the index here.
> +	 */
> +	index -= per_sta_keys_start;
> +
> +	if (b43_debug(dev, B43_DBG_KEYS)) {
> +		b43dbg(dev->wl, "rx_tkip_phase1_write : idx 0x%x, iv32 0x%x\n",
> +				index, iv32);
> +	}
> +	/* Write the key to the  RX tkip shared mem */
> +	offset = B43_SHM_SH_TKIPTSCTTAK + index * (10 + 4);
> +	for (i = 0; i < 10; i += 2) {
> +		b43_shm_write16(dev, B43_SHM_SHARED, offset + i,
> +				phase1key ? phase1key[i / 2] : 0);
> +	}
> +	b43_shm_write16(dev, B43_SHM_SHARED, offset + i, iv32);
> +	b43_shm_write16(dev, B43_SHM_SHARED, offset + i + 2, iv32 >> 16);
> +}
> +
> +static void b43_op_update_tkip_key(struct ieee80211_hw *hw,
> +			struct ieee80211_key_conf *keyconf, const u8 *addr,
> +			u32 iv32, u16 *phase1key)
> +{
> +	struct b43_wl *wl = hw_to_b43_wl(hw);
> +	struct b43_wldev *dev;
> +	int index = keyconf->hw_key_idx;
> +

I'd add

	if (B43_WARN_ON(!modparam_hwtkip))
		return;

here, because it's a cheap way to detect possible mac80211 bugs.
Mac80211 should not ever call this function, if we reject all tkip keys. But if
it does (due to a bug), this cheap check will prevent keymac trashing and keep the
device working.

> +	mutex_lock(&wl->mutex);
> +
> +	dev = wl->current_dev;
> +	if (!dev || b43_status(dev) < B43_STAT_INITIALIZED)
> +		goto out_unlock;
> +
> +	keymac_write(dev, index, NULL);	/* First zero out mac to avoid race */
> +
> +	rx_tkip_phase1_write(dev, index, iv32, phase1key);
> +	keymac_write(dev, index, addr);
> +
> +out_unlock:
> +	mutex_unlock(&wl->mutex);
> +}
> +


The rest of the patch looks very good.


-- 
Greetings, Michael.


