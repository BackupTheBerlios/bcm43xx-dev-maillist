From mb at bu3sch.de  Tue Sep  1 14:55:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 1 Sep 2009 14:55:15 +0200
Subject: [PATCH v2] b43: LP-PHY: Begin implementing calibration & software
	RFKILL support
In-Reply-To: <69e28c910908311238r51222506j7bd21e3b7af5b4ad@mail.gmail.com>
References: <4A99C4BB.7080806@gmail.com> <200908312117.26915.mb@bu3sch.de>
	<69e28c910908311238r51222506j7bd21e3b7af5b4ad@mail.gmail.com>
Message-ID: <200909011455.17302.mb@bu3sch.de>

On Monday 31 August 2009 21:38:28 G?bor Stefanik wrote:
> On Mon, Aug 31, 2009 at 9:17 PM, Michael Buesch<mb at bu3sch.de> wrote:
> > On Monday 31 August 2009 19:53:31 John W. Linville wrote:
> >> On Sun, Aug 30, 2009 at 05:55:40PM +0200, Michael Buesch wrote:
> >> > On Sunday 30 August 2009 17:10:23 Larry Finger wrote:
> >> > > Michael Buesch wrote:
> >> > > > On Sunday 30 August 2009 02:15:55 G?bor Stefanik wrote:
> >> > > >> ?static void lpphy_pr41573_workaround(struct b43_wldev *dev)
> >> > > >> ?{
> >> > > >> ? ? ? ?struct b43_phy_lp *lpphy = dev->phy.lp;
> >> > > >> @@ -1357,28 +1488,440 @@ static void lpphy_pr41573_workaround(struct b43_wldev *dev)
> >> > > >> ? ? ? ? ? ? ? ?b43_lptab_read_bulk(dev, B43_LPTAB32(7, 0x140),
> >> > > >> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?saved_tab_size, saved_tab);
> >> > > >> ? ? ? ?}
> >> > > >> + ? ? ?b43_put_phy_into_reset(dev);
> >> > > >
> >> > > > Are you sure you really want this?
> >> > > > This function completely disables the PHY on the backplane and keeps the physical
> >> > > > PHY reset pin asserted (even after return from the function).
> >> > > > So the PHY will physically be powered down from this point on. The following
> >> > > > PHY accesses could even hang the machine, because the PHY won't respond to
> >> > > > register accesses anymore.
> >> > > >
> >> > > > We currently only use this function on A/G Multi-PHY devices to permanently
> >> > > > hard-disable the PHY that's not used.
> >> > >
> >> > > The PHY reset routine in
> >> > > http://bcm-v4.sipsolutions.net/802.11/PHY/Reset, which I just updated
> >> > > for the latest N PHY changes, appears to be a different routine than
> >> > > b43_put_phy_into_reset(). The names are confusing.
> >> >
> >> > b43_put_phy_into_reset() is opencoded in the specifications in various init
> >> > routines. There's no separate specs page for that function.
> >> > But I think the code is straightforward and easy to understand.
> >>
> >> So is this patch right or not? ?Should I hold onto it for 2.6.33
> >> (i.e. after the 2.6.32 merge window)?
> >
> > I'm pretty sure it's incorrect.
> >
> > --
> > Greetings, Michael.
> >
> 
> Do we have the correct reset routine implemented somewhere, or is it a
> new routine to add?
> 

We opencode something similar (N stuff and so on not included) in wireless_core_reset.
So we should probably implement http://bcm-v4.sipsolutions.net/802.11/PHY/Reset
in a separate function and also call that from wireless_core_reset (and your workaround
code).

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Wed Sep  2 16:33:18 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Wed, 2 Sep 2009 16:33:18 +0200
Subject: Help again please
In-Reply-To: <a23fe9cc0909020729k128864dfv7afc237ee4c3db2d@mail.gmail.com>
References: <a23fe9cc0909020723t6365ea9al461fd5a641aefe3c@mail.gmail.com> 
	<a23fe9cc0909020724k67071b6ds493928bc14417a8f@mail.gmail.com> 
	<a23fe9cc0909020729k128864dfv7afc237ee4c3db2d@mail.gmail.com>
Message-ID: <69e28c910909020733y1d8cdd9ci438fc0aab863dd53@mail.gmail.com>

(CCing bcm43xx-dev.)

Could you post the dmesg output when this happens? (Enable debugging
in b43 before taking the log.)

2009/9/2 Brian J. Mc Hugh <bjmchugh at aya.yale.edu>:
> Hi?G?bor,
>
> I?seem to remember you explaining there was a bluetooth?problem and it
> couldn't coexist. Is that?right?
>
> Brian
>
>
> 2009/9/2 Brian J. Mc Hugh <bjmchugh at aya.yale.edu>
>>
>> sorry. And everything worked. Now it doesn't. Am I missing a command?
>>
>> Brian
>>
>> 2009/9/2 Brian J. Mc Hugh <bjmchugh at aya.yale.edu>
>>>
>>> Hi Stefanik,
>>>
>>> My wireless Broadcom control?transmit problem occurs when my Gateway Solo
>>> 9300 experiences a hard sthudown, when it loses power.
>>>
>>> I think you instructed me to issue the following commands:
>>>
>>>
>>> ?sudo modprobe b43 btcoex=0
>>> ?sudo /etc/init.d/networking restart
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Thu Sep  3 00:00:02 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 3 Sep 2009 00:00:02 +0200
Subject: Appreciate help
In-Reply-To: <a23fe9cc0909021457u4a1ce855t5ef66c22e513c823@mail.gmail.com>
References: <a23fe9cc0909021457u4a1ce855t5ef66c22e513c823@mail.gmail.com>
Message-ID: <69e28c910909021500m70210bddi5cb3cbf8e3fe8581@mail.gmail.com>

On Wed, Sep 2, 2009 at 11:57 PM, Brian J. Mc Hugh<bjmchugh at aya.yale.edu> wrote:
> Hi G?bor and Broadcom,
>
> In essense, my card seems to be receiving signal but transmitting none.
>
> I was appreciate your help,
>
> Thanks,
> Brian
>
>
> Here are the diagnostics;
>
> #uname -r
> 2.6.26-2-686
>
> #dmesg | grep b43
> [?? 30.415512] b43-pci-bridge 0000:02:00.0: enabling device (0000 -> 0002)
> [?? 32.618331] b43-phy0: Broadcom 4318 WLAN found
> [?? 40.118466] input: b43-phy0 as /class/input/input6
> [?? 40.204186] firmware: requesting b43/ucode5.fw
> [?? 40.493492] firmware: requesting b43/pcm5.fw
> [?? 40.677031] firmware: requesting b43/b0g0initvals5.fw
> [?? 40.763606] firmware: requesting b43/b0g0bsinitvals5.fw
> [?? 41.036083] b43-phy0: Loading firmware version 410.2160 (2007-05-26
> 15:32:10)
> [?? 42.308852] Registered led device: b43-phy0::tx
> [?? 42.308934] Registered led device: b43-phy0::rx
> [?? 42.309022] Registered led device: b43-phy0::radio
>
> #lspci -vnn | grep 14e4
> 02:00.0 Network controller [0280]: Broadcom Corporation BCM4318 [AirForce
> One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
>
> #lspci -nnv | grep -A1 14e4
> 02:00.0 Network controller [0280]: Broadcom Corporation BCM4318 [AirForce
> One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
> ??? Subsystem: Linksys WPC54G-EU version 3 [Wireless-G Notebook Adapter]
> [1737:0048]
>
> #iwlist wlan0 scan
> wlan0???? Scan completed :
> ????????? Cell 01 - Address: 00:17:9A:52:34:2D
> ??????????????????? ESSID:"dlink"
> ??????????????????? Mode:Master
> ??????????????????? Channel:11
> ??????????????????? Frequency:2.462 GHz (Channel 11)
> ??????????????????? Quality=73/100? Signal level=-42 dBm? Noise level=-63
> dBm
> ??????????????????? Encryption key:off
> ??????????????????? Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 6 Mb/s
> ????????????????????????????? 9 Mb/s; 12 Mb/s; 18 Mb/s; 24 Mb/s; 36 Mb/s
> ????????????????????????????? 48 Mb/s; 54 Mb/s
> ??????????????????? Extra:tsf=00000017b3fcb180
>
> #ifdown wlan0
> There is already a pid file /var/run/dhclient.wlan0.pid with pid 1949
> killed old client process, removed PID file
> Internet Systems Consortium DHCP Client V3.1.1
> Copyright 2004-2008 Internet Systems Consortium.
> All rights reserved.
> For info, please visit http://www.isc.org/sw/dhcp/
>
> wmaster0: unknown hardware address type 801
> wmaster0: unknown hardware address type 801
> Listening on LPF/wlan0/00:18:f8:e2:1c:71
> Sending on?? LPF/wlan0/00:18:f8:e2:1c:71
> Sending on?? Socket/fallback
>
> #ifup wlan0
> Internet Systems Consortium DHCP Client V3.1.1
> Copyright 2004-2008 Internet Systems Consortium.
> All rights reserved.
> For info, please visit http://www.isc.org/sw/dhcp/
>
> wmaster0: unknown hardware address type 801
> wmaster0: unknown hardware address type 801
> Listening on LPF/wlan0/00:18:f8:e2:1c:71
> Sending on?? LPF/wlan0/00:18:f8:e2:1c:71
> Sending on?? Socket/fallback
> DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 5
> DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 7
> DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 14
> DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 17
> DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 18
> No DHCPOFFERS received.
> No working leases in persistent database - sleeping.
>
>
>

What's visible in dmesg after dhclient?

Also, to rule out hardware failures - does the card work under
Windows? (4318s break rather easily.)


-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Thu Sep  3 00:26:10 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 3 Sep 2009 00:26:10 +0200
Subject: Appreciate help
In-Reply-To: <a23fe9cc0909021509q2ce19d60te0cf56d4a516b6f6@mail.gmail.com>
References: <a23fe9cc0909021457u4a1ce855t5ef66c22e513c823@mail.gmail.com> 
	<69e28c910909021500m70210bddi5cb3cbf8e3fe8581@mail.gmail.com> 
	<a23fe9cc0909021509q2ce19d60te0cf56d4a516b6f6@mail.gmail.com>
Message-ID: <69e28c910909021526x1a8552d1gf6872d6c47efd083@mail.gmail.com>

2009/9/3 Brian J. Mc Hugh <bjmchugh at aya.yale.edu>:
> I went in the file /var/log/dmesg and didn't find dhclient.
>
> Does that signify failure?

You don't need to find dhclient in dmesg - the question is, what shows
up in dmesg after ifup calls dhclient?

About the Windows machine problem - try the Windows driver in ndiswrapper.

>
>
> 2009/9/2 G?bor Stefanik <netrolller.3d at gmail.com>
>>
>> On Wed, Sep 2, 2009 at 11:57 PM, Brian J. Mc Hugh<bjmchugh at aya.yale.edu>
>> wrote:
>> > Hi G?bor and Broadcom,
>> >
>> > In essense, my card seems to be receiving signal but transmitting none.
>> >
>> > I was appreciate your help,
>> >
>> > Thanks,
>> > Brian
>> >
>> >
>> > Here are the diagnostics;
>> >
>> > #uname -r
>> > 2.6.26-2-686
>> >
>> > #dmesg | grep b43
>> > [?? 30.415512] b43-pci-bridge 0000:02:00.0: enabling device (0000 ->
>> > 0002)
>> > [?? 32.618331] b43-phy0: Broadcom 4318 WLAN found
>> > [?? 40.118466] input: b43-phy0 as /class/input/input6
>> > [?? 40.204186] firmware: requesting b43/ucode5.fw
>> > [?? 40.493492] firmware: requesting b43/pcm5.fw
>> > [?? 40.677031] firmware: requesting b43/b0g0initvals5.fw
>> > [?? 40.763606] firmware: requesting b43/b0g0bsinitvals5.fw
>> > [?? 41.036083] b43-phy0: Loading firmware version 410.2160 (2007-05-26
>> > 15:32:10)
>> > [?? 42.308852] Registered led device: b43-phy0::tx
>> > [?? 42.308934] Registered led device: b43-phy0::rx
>> > [?? 42.309022] Registered led device: b43-phy0::radio
>> >
>> > #lspci -vnn | grep 14e4
>> > 02:00.0 Network controller [0280]: Broadcom Corporation BCM4318
>> > [AirForce
>> > One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
>> >
>> > #lspci -nnv | grep -A1 14e4
>> > 02:00.0 Network controller [0280]: Broadcom Corporation BCM4318
>> > [AirForce
>> > One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
>> > ??? Subsystem: Linksys WPC54G-EU version 3 [Wireless-G Notebook Adapter]
>> > [1737:0048]
>> >
>> > #iwlist wlan0 scan
>> > wlan0???? Scan completed :
>> > ????????? Cell 01 - Address: 00:17:9A:52:34:2D
>> > ??????????????????? ESSID:"dlink"
>> > ??????????????????? Mode:Master
>> > ??????????????????? Channel:11
>> > ??????????????????? Frequency:2.462 GHz (Channel 11)
>> > ??????????????????? Quality=73/100? Signal level=-42 dBm? Noise
>> > level=-63
>> > dBm
>> > ??????????????????? Encryption key:off
>> > ??????????????????? Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 6 Mb/s
>> > ????????????????????????????? 9 Mb/s; 12 Mb/s; 18 Mb/s; 24 Mb/s; 36 Mb/s
>> > ????????????????????????????? 48 Mb/s; 54 Mb/s
>> > ??????????????????? Extra:tsf=00000017b3fcb180
>> >
>> > #ifdown wlan0
>> > There is already a pid file /var/run/dhclient.wlan0.pid with pid 1949
>> > killed old client process, removed PID file
>> > Internet Systems Consortium DHCP Client V3.1.1
>> > Copyright 2004-2008 Internet Systems Consortium.
>> > All rights reserved.
>> > For info, please visit http://www.isc.org/sw/dhcp/
>> >
>> > wmaster0: unknown hardware address type 801
>> > wmaster0: unknown hardware address type 801
>> > Listening on LPF/wlan0/00:18:f8:e2:1c:71
>> > Sending on?? LPF/wlan0/00:18:f8:e2:1c:71
>> > Sending on?? Socket/fallback
>> >
>> > #ifup wlan0
>> > Internet Systems Consortium DHCP Client V3.1.1
>> > Copyright 2004-2008 Internet Systems Consortium.
>> > All rights reserved.
>> > For info, please visit http://www.isc.org/sw/dhcp/
>> >
>> > wmaster0: unknown hardware address type 801
>> > wmaster0: unknown hardware address type 801
>> > Listening on LPF/wlan0/00:18:f8:e2:1c:71
>> > Sending on?? LPF/wlan0/00:18:f8:e2:1c:71
>> > Sending on?? Socket/fallback
>> > DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 5
>> > DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 7
>> > DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 14
>> > DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 17
>> > DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 18
>> > No DHCPOFFERS received.
>> > No working leases in persistent database - sleeping.
>> >
>> >
>> >
>>
>> What's visible in dmesg after dhclient?
>>
>> Also, to rule out hardware failures - does the card work under
>> Windows? (4318s break rather easily.)
>>
>>
>> --
>> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Thu Sep  3 01:08:04 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 02 Sep 2009 18:08:04 -0500
Subject: same problem with card
In-Reply-To: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com>
References: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com>
Message-ID: <4A9EFAD4.8050002@lwfinger.net>

Brian J. Mc Hugh wrote:
> Hi Larry,
> 
> I just did a clean install and have the same problem you help me solve
> before.
> 
> DIdn't you recommend that I issue:
> 
>    sudo modprobe b43?

I don't remember the circumstances; however, your driver b43 is
already loaded and this command would do nothing.

There is a possibility that your board suffers from a Bluetooth
coexistence problem as does one other 4318. The only way to tell would
be to rewrite the SPROM data. As I read the code, the btcoex module
parameter does not accomplish the same thing.

If you want to try that approach and are not using Bluetooth on that
computer, do the following commands:

SSB_SPROM=$(find /sys/devices -name ssb_sprom)
echo $SSB_SPROM
sudo cat $SSB_SPROM > ssb_sprom_copy

The echo command should list only a single line. If it does, E-mail me
the file ssb_sprom_copy, and I will modify it and mail it back.

BTW, I have been following the thread with Gabor. It is bad form to
open a second interchange on the same problem.

Larry


From eternaleye at gmail.com  Thu Sep  3 01:55:09 2009
From: eternaleye at gmail.com (Alex Elsayed)
Date: Wed, 2 Sep 2009 16:55:09 -0700
Subject: Is there a b43 dev who needs an N-PHY card?
Message-ID: <83bc88050909021655y7d2a9e40m873f34ec8eb10a13@mail.gmail.com>

I just recently got a new laptop with an Intel 5350, which means my
4328 [PCI-ID] (4321 official Broadcom designation) is not in use any
longer. I am in the Seattle area, but can send it by post if needed.


From netrolller.3d at gmail.com  Thu Sep  3 02:06:42 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 3 Sep 2009 02:06:42 +0200
Subject: Is there a b43 dev who needs an N-PHY card?
In-Reply-To: <83bc88050909021655y7d2a9e40m873f34ec8eb10a13@mail.gmail.com>
References: <83bc88050909021655y7d2a9e40m873f34ec8eb10a13@mail.gmail.com>
Message-ID: <69e28c910909021706o7acf6715v3538276763f895d6@mail.gmail.com>

On Thu, Sep 3, 2009 at 1:55 AM, Alex Elsayed<eternaleye at gmail.com> wrote:
> I just recently got a new laptop with an Intel 5350, which means my
> 4328 [PCI-ID] (4321 official Broadcom designation) is not in use any
> longer. I am in the Seattle area, but can send it by post if needed.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

We are still not ready to actually start implementing N-PHY support
(the specs are incomplete), so unless someone in the
reverse-engineering team needs one, then probably noone will be able
to use it at this point. However, it will be useful at a later time.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Thu Sep  3 02:47:14 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 3 Sep 2009 02:47:14 +0200
Subject: same problem with card
In-Reply-To: <a23fe9cc0909021737h63d442f3lc78722c6ced6fa9b@mail.gmail.com>
References: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com> 
	<4A9EFAD4.8050002@lwfinger.net>
	<a23fe9cc0909021737h63d442f3lc78722c6ced6fa9b@mail.gmail.com>
Message-ID: <69e28c910909021747t5cb03d4va1267914e2a84403@mail.gmail.com>

On Thu, Sep 3, 2009 at 2:37 AM, Brian J. Mc Hugh<bjmchugh at aya.yale.edu> wrote:
> Hi Larry and Gabor,
>
> Here is the file. Sorry about contacting both of you independently
>
> Brian
>
>

Hmm, this SPROM has the BT coexistence bit unset - in that case, BT is
not the reason behind the bug.

Do you know the exact kernel that introduced this bug?

>
> On Wed, Sep 2, 2009 at 7:08 PM, Larry Finger <Larry.Finger at lwfinger.net>
> wrote:
>>
>> Brian J. Mc Hugh wrote:
>> > Hi Larry,
>> >
>> > I just did a clean install and have the same problem you help me solve
>> > before.
>> >
>> > DIdn't you recommend that I issue:
>> >
>> > ? ?sudo modprobe b43?
>>
>> I don't remember the circumstances; however, your driver b43 is
>> already loaded and this command would do nothing.
>>
>> There is a possibility that your board suffers from a Bluetooth
>> coexistence problem as does one other 4318. The only way to tell would
>> be to rewrite the SPROM data. As I read the code, the btcoex module
>> parameter does not accomplish the same thing.
>>
>> If you want to try that approach and are not using Bluetooth on that
>> computer, do the following commands:
>>
>> SSB_SPROM=$(find /sys/devices -name ssb_sprom)
>> echo $SSB_SPROM
>> sudo cat $SSB_SPROM > ssb_sprom_copy
>>
>> The echo command should list only a single line. If it does, E-mail me
>> the file ssb_sprom_copy, and I will modify it and mail it back.
>>
>> BTW, I have been following the thread with Gabor. It is bad form to
>> open a second interchange on the same problem.
>>
>> Larry
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Thu Sep  3 03:22:02 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 3 Sep 2009 03:22:02 +0200
Subject: same problem with card
In-Reply-To: <a23fe9cc0909021817jcd71274p42c1915b57c9ec8b@mail.gmail.com>
References: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com> 
	<4A9EFAD4.8050002@lwfinger.net>
	<a23fe9cc0909021737h63d442f3lc78722c6ced6fa9b@mail.gmail.com> 
	<69e28c910909021747t5cb03d4va1267914e2a84403@mail.gmail.com> 
	<a23fe9cc0909021817jcd71274p42c1915b57c9ec8b@mail.gmail.com>
Message-ID: <69e28c910909021822j73772135q4713cac70d3e5570@mail.gmail.com>

2009/9/3 Brian J. Mc Hugh <bjmchugh at aya.yale.edu>:
> I use Debian. Etch was 2.18. Lenny is 2.26.
>
> ?But I did already issue the commands to disable the bluetooth, i.e.,
>
> ?????? #sudo modprobe -rv b43
> ?????? #sudo modprobe -v b43 btcoex=0
> ?????? #sudo /etc/init.d/networking restart
>
> Unfortunately, I still don't have wireless.
>
> Brian

Could you try compiling equivalent kernels from Kernel.org? Just so
that we can rule out a Debian bug (e.g. in a distro-specific kernel
patch).

>
>
> 2009/9/2 G?bor Stefanik <netrolller.3d at gmail.com>
>>
>> On Thu, Sep 3, 2009 at 2:37 AM, Brian J. Mc Hugh<bjmchugh at aya.yale.edu>
>> wrote:
>> > Hi Larry and Gabor,
>> >
>> > Here is the file. Sorry about contacting both of you independently
>> >
>> > Brian
>> >
>> >
>>
>> Hmm, this SPROM has the BT coexistence bit unset - in that case, BT is
>> not the reason behind the bug.
>>
>> Do you know the exact kernel that introduced this bug?
>>
>> >
>> > On Wed, Sep 2, 2009 at 7:08 PM, Larry Finger <Larry.Finger at lwfinger.net>
>> > wrote:
>> >>
>> >> Brian J. Mc Hugh wrote:
>> >> > Hi Larry,
>> >> >
>> >> > I just did a clean install and have the same problem you help me
>> >> > solve
>> >> > before.
>> >> >
>> >> > DIdn't you recommend that I issue:
>> >> >
>> >> > ? ?sudo modprobe b43?
>> >>
>> >> I don't remember the circumstances; however, your driver b43 is
>> >> already loaded and this command would do nothing.
>> >>
>> >> There is a possibility that your board suffers from a Bluetooth
>> >> coexistence problem as does one other 4318. The only way to tell would
>> >> be to rewrite the SPROM data. As I read the code, the btcoex module
>> >> parameter does not accomplish the same thing.
>> >>
>> >> If you want to try that approach and are not using Bluetooth on that
>> >> computer, do the following commands:
>> >>
>> >> SSB_SPROM=$(find /sys/devices -name ssb_sprom)
>> >> echo $SSB_SPROM
>> >> sudo cat $SSB_SPROM > ssb_sprom_copy
>> >>
>> >> The echo command should list only a single line. If it does, E-mail me
>> >> the file ssb_sprom_copy, and I will modify it and mail it back.
>> >>
>> >> BTW, I have been following the thread with Gabor. It is bad form to
>> >> open a second interchange on the same problem.
>> >>
>> >> Larry
>> >
>> >
>>
>>
>>
>> --
>> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Thu Sep  3 03:28:05 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 02 Sep 2009 20:28:05 -0500
Subject: same problem with card
In-Reply-To: <a23fe9cc0909021817jcd71274p42c1915b57c9ec8b@mail.gmail.com>
References: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com>	
	<4A9EFAD4.8050002@lwfinger.net>	
	<a23fe9cc0909021737h63d442f3lc78722c6ced6fa9b@mail.gmail.com>	
	<69e28c910909021747t5cb03d4va1267914e2a84403@mail.gmail.com>
	<a23fe9cc0909021817jcd71274p42c1915b57c9ec8b@mail.gmail.com>
Message-ID: <4A9F1BA5.2020105@lwfinger.net>

Brian J. Mc Hugh wrote:
> I use Debian. Etch was 2.18. Lenny is 2.26.
> 
>  But I did already issue the commands to disable the bluetooth, i.e.,
>  
>        #sudo modprobe -rv b43
>        #sudo modprobe -v b43 btcoex=0
>        #sudo /etc/init.d/networking restart
> 
> Unfortunately, I still don't have wireless.

The btcoex=0 is not needed for your card.

When your card worked before, was that also with Lenny?

I don't use Debian so I'm not familiar with the wireless
configuration. What process and/or files do you use?

Larry



From Larry.Finger at lwfinger.net  Thu Sep  3 05:07:26 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 02 Sep 2009 22:07:26 -0500
Subject: Is there a b43 dev who needs an N-PHY card?
In-Reply-To: <83bc88050909021655y7d2a9e40m873f34ec8eb10a13@mail.gmail.com>
References: <83bc88050909021655y7d2a9e40m873f34ec8eb10a13@mail.gmail.com>
Message-ID: <4A9F32EE.7030704@lwfinger.net>

Alex Elsayed wrote:
> I just recently got a new laptop with an Intel 5350, which means my
> 4328 [PCI-ID] (4321 official Broadcom designation) is not in use any
> longer. I am in the Seattle area, but can send it by post if needed.

As a member of the reverse engineering team, I could use it once code
starts being written, but I'm not sure I am the best one to receive
it. Let's see who else responds.

Larry


From Larry.Finger at lwfinger.net  Thu Sep  3 17:03:38 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 03 Sep 2009 10:03:38 -0500
Subject: same problem with card
In-Reply-To: <a23fe9cc0909030321ua62b777jc6267f2be35ef771@mail.gmail.com>
References: <a23fe9cc0909021536t5b0126a4h5b3fc229944d909f@mail.gmail.com>	
	<4A9EFAD4.8050002@lwfinger.net>	
	<a23fe9cc0909021737h63d442f3lc78722c6ced6fa9b@mail.gmail.com>	
	<69e28c910909021747t5cb03d4va1267914e2a84403@mail.gmail.com>	
	<a23fe9cc0909021817jcd71274p42c1915b57c9ec8b@mail.gmail.com>	
	<4A9F1BA5.2020105@lwfinger.net>
	<a23fe9cc0909030321ua62b777jc6267f2be35ef771@mail.gmail.com>
Message-ID: <4A9FDACA.5050700@lwfinger.net>

Brian J. Mc Hugh wrote:
> Hi Larry and G?bor,
> 
> G?bor gave the suggestion that made it work in Debian version 5.0.2
> kernel 2.26,
> 
>             sudo modprobe b43 btcoex=0
>             sudo /etc/init.d/networking restart
> 
> Larry then suggested I remove b43 and re-add it, which all worked!
> 
>             sudo modprobe -rv b44
>             sudo modprobe -v b43
>             sudo /etc/init.d/networking restart

OK, we have established that neither of these command sets should have
done anything. As you are using the /etc/init.d/networking script to
control your wireless, I suspect that the details are in
/etc/network/interfaces. Please post that file.

Larry




From dlenski at gmail.com  Thu Sep  3 22:49:12 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Thu, 03 Sep 2009 16:49:12 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and 508.102)
Message-ID: <1252010952.6667.74.camel@basashi>

Hi,
I'm a b43 noob, but have been playing around with b43-fwcutter and found
a couple more versions of the firmware distributed by Linksys which I
can extract with mklist.py.

Both of these firmwares work on my BCM4311 laptop card in managed and
monitor modes.  When loaded, they identify themselves as newer firmware
revisions than anything that b43-fwcutter currently knows about:

      * 508.1107 (2009-06-26 19:16:02), extracted from
        http://downloads.linksysbycisco.com/downloads/wrt610n_v2.00.00.05_us.tar,0.gz
      * 508.102 (2008-10-16 18:23:25), extracted from
        http://downloads.linksysbycisco.com/downloads/wrt610n_v1.00.03.15_us.tar,0.gz

I was particularly interested in these because I believe the Linksys
WRT610N uses an LP PHY, and I know that those are actively worked on by
the b43 developers.  I'm not sure if these are useful to the project
but... *if* anyone is interested, here is a patch to fwcutter_list.h
that adds these firmware versions.  Apologies for naming them "FW15" and
"FW16" in the patch, but I really don't understand the naming convention
used.

Anyway, I hope these can be useful.  Thanks for an amazing b43 driver!

Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: b43-fwcutter-012.patch
Type: text/x-patch
Size: 13218 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090903/b1872404/attachment.bin>

From dlenski at gmail.com  Thu Sep  3 23:00:10 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Thu, 03 Sep 2009 17:00:10 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and
	508.102)
In-Reply-To: <1252010952.6667.74.camel@basashi>
References: <1252010952.6667.74.camel@basashi>
Message-ID: <1252011610.6667.75.camel@basashi>

On Thu, 2009-09-03 at 16:49 -0400, Daniel Lenski wrote:
> Both of these firmwares work on my BCM4311 laptop card in managed and
> monitor modes.  When loaded, they identify themselves as newer firmware
> revisions than anything that b43-fwcutter currently knows about:

On that note, is there a way to identify the ucode-version of b43 
firmware without reloading the b43 driver?

A quick glance at the drivers/net/wireless/b43/main.c suggests that the 
driver actually loads the firmware, then queries the device for its 
version number... but maybe there's some kind of heuristic?

Dan



From Larry.Finger at lwfinger.net  Thu Sep  3 23:13:37 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 03 Sep 2009 16:13:37 -0500
Subject: b43-fwcutter patch for new firmware versions (508.1107 and
	508.102)
In-Reply-To: <1252010952.6667.74.camel@basashi>
References: <1252010952.6667.74.camel@basashi>
Message-ID: <4AA03181.3060702@lwfinger.net>

Daniel Lenski wrote:
> Hi,
> I'm a b43 noob, but have been playing around with b43-fwcutter and found
> a couple more versions of the firmware distributed by Linksys which I
> can extract with mklist.py.
> 
> Both of these firmwares work on my BCM4311 laptop card in managed and
> monitor modes.  When loaded, they identify themselves as newer firmware
> revisions than anything that b43-fwcutter currently knows about:
> 
>       * 508.1107 (2009-06-26 19:16:02), extracted from
>         http://downloads.linksysbycisco.com/downloads/wrt610n_v2.00.00.05_us.tar,0.gz
>       * 508.102 (2008-10-16 18:23:25), extracted from
>         http://downloads.linksysbycisco.com/downloads/wrt610n_v1.00.03.15_us.tar,0.gz
> 
> I was particularly interested in these because I believe the Linksys
> WRT610N uses an LP PHY, and I know that those are actively worked on by
> the b43 developers.  I'm not sure if these are useful to the project
> but... *if* anyone is interested, here is a patch to fwcutter_list.h
> that adds these firmware versions.  Apologies for naming them "FW15" and
> "FW16" in the patch, but I really don't understand the naming convention
> used.
> 
> Anyway, I hope these can be useful.  Thanks for an amazing b43 driver!

I certainly would like to have access to the later firmware; however
downloads of 338 and 340 MB seem a little silly just to get a few
hundred KB of firmware. Have you found any other sources with 508.XX
firmware?

I notice in your extraction that there are now ucode files for
revisions 16, 17, 19, 20, and 21.

Larry


From dlenski at gmail.com  Thu Sep  3 23:25:29 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Thu, 03 Sep 2009 17:25:29 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and
	508.102)
In-Reply-To: <4AA03181.3060702@lwfinger.net>
References: <1252010952.6667.74.camel@basashi> <4AA03181.3060702@lwfinger.net>
Message-ID: <1252013129.6667.84.camel@basashi>

On Thu, 2009-09-03 at 16:13 -0500, Larry Finger wrote:
> I certainly would like to have access to the later firmware; however
> downloads of 338 and 340 MB seem a little silly just to get a few
> hundred KB of firmware. Have you found any other sources with 508.XX
> firmware?

Larry,
I agree on the ridiculously poor packaging... did I mention they're 1gb+
extracted?

I have not found any other source of these, unfortunately.  I am happy
to send the extracted firmware to developers off-list if desired.
Linksys's less-than-helpful GPL source code page gives no indication of
the age or date of the various files, so it's hard for me to tell which
might be newer without downloading many Gb and extracting many
firmwares.  I have half a mind to write a Python script...

> I notice in your extraction that there are now ucode files for
> revisions 16, 17, 19, 20, and 21.

Yes, indeed.  So are these the source of the FW12/13/14/... numbering?

Dan



From Larry.Finger at lwfinger.net  Thu Sep  3 23:26:32 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 03 Sep 2009 16:26:32 -0500
Subject: b43-fwcutter patch for new firmware versions (508.1107
	and	508.102)
In-Reply-To: <1252011610.6667.75.camel@basashi>
References: <1252010952.6667.74.camel@basashi>
	<1252011610.6667.75.camel@basashi>
Message-ID: <4AA03488.70006@lwfinger.net>

Sending to the list:

Daniel Lenski wrote:
> 
> On that note, is there a way to identify the ucode-version of b43 
> firmware without reloading the b43 driver?

The dmesg output has it.

> A quick glance at the drivers/net/wireless/b43/main.c suggests that the 
> driver actually loads the firmware, then queries the device for its 
> version number... but maybe there's some kind of heuristic?

The ucode file that is loaded is dictated by the revision number of
the 802.11 core. The output from 'dmesg | egrep "ssb|b43"' on my
system shows the following:

ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
ssb: Found rev 1 PMU (capabilities 0x02A62F01)
ssb: SPROM revision 8 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:04:00.0
b43-phy0: Broadcom 4312 WLAN found (core revision 15)
b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, Revision 2
b43 ssb0:0: firmware: requesting b43/ucode15.fw
b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
b43-phy0: Loading firmware version 478.104 (2008-07-01 00:50:23)

Note that 0x0F in ssb core 1 => ucode15. The version is stored within
that file. A number of different versions are likely to work with a
given card. In fact, there may not be any difference in the ucode5
file between firmware version 410.XXX and 508.XXX. One would have to
look at the binary differences to tell if anything other that the
version number had changed.

Larry



From Larry.Finger at lwfinger.net  Thu Sep  3 23:37:31 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 03 Sep 2009 16:37:31 -0500
Subject: b43-fwcutter patch for new firmware versions (508.1107
	and	508.102)
In-Reply-To: <1252013129.6667.84.camel@basashi>
References: <1252010952.6667.74.camel@basashi> <4AA03181.3060702@lwfinger.net>
	<1252013129.6667.84.camel@basashi>
Message-ID: <4AA0371B.7010008@lwfinger.net>

Daniel Lenski wrote:
> Larry,
> I agree on the ridiculously poor packaging... did I mention they're 1gb+
> extracted?

I didn't look at what is contained within that package, but we
certainly don't need it.

> I have not found any other source of these, unfortunately.  I am happy
> to send the extracted firmware to developers off-list if desired.
> Linksys's less-than-helpful GPL source code page gives no indication of
> the age or date of the various files, so it's hard for me to tell which
> might be newer without downloading many Gb and extracting many
> firmwares.  I have half a mind to write a Python script...

Not necessary to send the extracted software. If and when I want to
see the new firmware, I'm perfectly happy to download that big file;
however, it does not make sense for some user who is using the
openSUSE script to wait through a large download just to install firmware.
> 
>> I notice in your extraction that there are now ucode files for
>> revisions 16, 17, 19, 20, and 21.
> 
> Yes, indeed.  So are these the source of the FW12/13/14/... numbering?

No. Michael assigns a new number whenever he releases a new version.
All the new files are supposed to be listed with that number. At least
I think that is the way it works. Version 12 is the last one released.

Larry


From dlenski at gmail.com  Fri Sep  4 00:02:42 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Thu, 03 Sep 2009 18:02:42 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and
	508.102)
In-Reply-To: <4AA0371B.7010008@lwfinger.net>
References: <1252010952.6667.74.camel@basashi>
	<4AA03181.3060702@lwfinger.net> <1252013129.6667.84.camel@basashi>
	<4AA0371B.7010008@lwfinger.net>
Message-ID: <1252015362.6667.98.camel@basashi>

On Thu, 2009-09-03 at 16:37 -0500, Larry Finger wrote:
> Daniel Lenski wrote:
> > Larry,
> > I agree on the ridiculously poor packaging... did I mention they're 1gb+
> > extracted?
> 
> I didn't look at what is contained within that package, but we
> certainly don't need it.

It appears to be the complete toolchain used to build the firmware,
complete with a bunch of random binaries floating around.

> > I have not found any other source of these, unfortunately.  I am happy
> > to send the extracted firmware to developers off-list if desired.
> > Linksys's less-than-helpful GPL source code page gives no indication of
> > the age or date of the various files, so it's hard for me to tell which
> > might be newer without downloading many Gb and extracting many
> > firmwares.  I have half a mind to write a Python script...
> 
> Not necessary to send the extracted software. If and when I want to
> see the new firmware, I'm perfectly happy to download that big file;
> however, it does not make sense for some user who is using the
> openSUSE script to wait through a large download just to install firmware.

Good point.  I'm not really familiar with the legal intricacies of the
licensing issues involved.  The LICENSE files strewn throughout the
tarball *seem* to indicate that it'd be permissible to cut out the
relevant binaries and distribute them, but I'm in way over my head
here...

> >> I notice in your extraction that there are now ucode files for
> >> revisions 16, 17, 19, 20, and 21.
> > 
> > Yes, indeed.  So are these the source of the FW12/13/14/... numbering?
> 
> No. Michael assigns a new number whenever he releases a new version.
> All the new files are supposed to be listed with that number. At least
> I think that is the way it works. Version 12 is the last one released.

Hmm... I think we might be talking about two different things.  I'm
wondering about the source of the .id = "FWxx" tags in fwcutter_list.h.

Dan



From netrolller.3d at gmail.com  Fri Sep  4 00:06:53 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Fri, 4 Sep 2009 00:06:53 +0200
Subject: b43-fwcutter patch for new firmware versions (508.1107 and 
	508.102)
In-Reply-To: <1252015362.6667.98.camel@basashi>
References: <1252010952.6667.74.camel@basashi> <4AA03181.3060702@lwfinger.net>
	<1252013129.6667.84.camel@basashi> <4AA0371B.7010008@lwfinger.net> 
	<1252015362.6667.98.camel@basashi>
Message-ID: <69e28c910909031506g743f904w3068d5a777c32b12@mail.gmail.com>

On Fri, Sep 4, 2009 at 12:02 AM, Daniel Lenski<dlenski at gmail.com> wrote:
> On Thu, 2009-09-03 at 16:37 -0500, Larry Finger wrote:
>> Daniel Lenski wrote:
>> > Larry,
>> > I agree on the ridiculously poor packaging... did I mention they're 1gb+
>> > extracted?
>>
>> I didn't look at what is contained within that package, but we
>> certainly don't need it.
>
> It appears to be the complete toolchain used to build the firmware,
> complete with a bunch of random binaries floating around.
>
>> > I have not found any other source of these, unfortunately. ?I am happy
>> > to send the extracted firmware to developers off-list if desired.
>> > Linksys's less-than-helpful GPL source code page gives no indication of
>> > the age or date of the various files, so it's hard for me to tell which
>> > might be newer without downloading many Gb and extracting many
>> > firmwares. ?I have half a mind to write a Python script...
>>
>> Not necessary to send the extracted software. If and when I want to
>> see the new firmware, I'm perfectly happy to download that big file;
>> however, it does not make sense for some user who is using the
>> openSUSE script to wait through a large download just to install firmware.
>
> Good point. ?I'm not really familiar with the legal intricacies of the
> licensing issues involved. ?The LICENSE files strewn throughout the
> tarball *seem* to indicate that it'd be permissible to cut out the
> relevant binaries and distribute them, but I'm in way over my head
> here...
>
>> >> I notice in your extraction that there are now ucode files for
>> >> revisions 16, 17, 19, 20, and 21.
>> >
>> > Yes, indeed. ?So are these the source of the FW12/13/14/... numbering?
>>
>> No. Michael assigns a new number whenever he releases a new version.
>> All the new files are supposed to be listed with that number. At least
>> I think that is the way it works. Version 12 is the last one released.
>
> Hmm... I think we might be talking about two different things. ?I'm
> wondering about the source of the .id = "FWxx" tags in fwcutter_list.h.

They have no source - everytime a new version is added to fwcutter,
it's FWxx ID is incremented. E.g. if the most recent version is FW15,
then adding a new entry should be done as FW16.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Fri Sep  4 10:31:21 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 10:31:21 +0200
Subject: b43-fwcutter patch for new firmware versions (508.1107
	=?iso-8859-1?q?and=09508=2E102?=)
In-Reply-To: <4AA0371B.7010008@lwfinger.net>
References: <1252010952.6667.74.camel@basashi>
	<1252013129.6667.84.camel@basashi> <4AA0371B.7010008@lwfinger.net>
Message-ID: <200909041031.23073.mb@bu3sch.de>

On Thursday 03 September 2009 23:37:31 Larry Finger wrote:
> Daniel Lenski wrote:
> > Larry,
> > I agree on the ridiculously poor packaging... did I mention they're 1gb+
> > extracted?
> 
> I didn't look at what is contained within that package, but we
> certainly don't need it.
> 
> > I have not found any other source of these, unfortunately.  I am happy
> > to send the extracted firmware to developers off-list if desired.
> > Linksys's less-than-helpful GPL source code page gives no indication of
> > the age or date of the various files, so it's hard for me to tell which
> > might be newer without downloading many Gb and extracting many
> > firmwares.  I have half a mind to write a Python script...
> 
> Not necessary to send the extracted software. If and when I want to
> see the new firmware, I'm perfectly happy to download that big file;
> however, it does not make sense for some user who is using the
> openSUSE script to wait through a large download just to install firmware.
> > 
> >> I notice in your extraction that there are now ucode files for
> >> revisions 16, 17, 19, 20, and 21.
> > 
> > Yes, indeed.  So are these the source of the FW12/13/14/... numbering?
> 
> No. Michael assigns a new number whenever he releases a new version.
> All the new files are supposed to be listed with that number. At least
> I think that is the way it works. Version 12 is the last one released.

Ehm, no.
The FW.. identifier is a _unique_ identifier for a set of firmware files.
So the identifier is the same for binary equal firmware files. So if you add
a firmware _that_ _is_ _not_ _already_ _there_ you monotonically increment the
last ID and assign the firmware that ID.
But if another firmware is already there which has the same version _and_
number of files _and_ filenames _and_ these files are binary equal, assign
the new firmware the ID of the existing equal firmware.

The idea is that the driver prints a string to dmesg telling what the best supported
firmware is. For example if the driver says:
  Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]
that means the user should go and get FW13.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:47:37 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:47:37 +0200
Subject: [PATCH 0/5] b43: Prepare driver for sleeping busses
Message-ID: <200909042247.37655.mb@bu3sch.de>

This patchset is the first series to remove atomic sections
from the b43 driver to allow running b43 on a slow bus like
SDIO that needs to sleep for register accesses.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:51:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:51:29 +0200
Subject: [PATCH 1/5] b43: Use a threaded IRQ handler
Message-ID: <200909042251.29868.mb@bu3sch.de>

Use a threaded IRQ handler to allow locking the mutex and
sleeping while executing an interrupt.
This removes usage of the irq_lock spinlock, but introduces
a new hardirq_lock, which is _only_ used for the PCI/SSB lowlevel
hard-irq handler. Sleeping busses (SDIO) will use mutex instead.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-04 22:15:32.000000000 +0200
@@ -616,6 +616,12 @@ struct b43_wl {
 	/* Pointer to the ieee80211 hardware data structure */
 	struct ieee80211_hw *hw;
 
+	/* Global driver mutex. Every operation must run with this mutex locked. */
+	struct mutex mutex;
+	/* Hard-IRQ spinlock. This lock protects things used in the hard-IRQ
+	 * handler, only. This basically is just the IRQ mask register. */
+	spinlock_t hardirq_lock;
+
 	/* The number of queues that were registered with the mac80211 subsystem
 	 * initially. This is a backup copy of hw->queues in case hw->queues has
 	 * to be dynamically lowered at runtime (Firmware does not support QoS).
@@ -623,8 +629,6 @@ struct b43_wl {
 	 * from the mac80211 subsystem. */
 	u16 mac80211_initially_registered_queues;
 
-	struct mutex mutex;
-	spinlock_t irq_lock;
 	/* R/W lock for data transmission.
 	 * Transmissions on 2+ queues can run concurrently, but somebody else
 	 * might sync with TX by write_lock_irqsave()'ing. */
@@ -665,8 +669,7 @@ struct b43_wl {
 	bool radiotap_enabled;
 	bool radio_enabled;
 
-	/* The beacon we are currently using (AP or IBSS mode).
-	 * This beacon stuff is protected by the irq_lock. */
+	/* The beacon we are currently using (AP or IBSS mode). */
 	struct sk_buff *current_beacon;
 	bool beacon0_uploaded;
 	bool beacon1_uploaded;
@@ -754,14 +757,6 @@ enum {
 		smp_wmb();					\
 					} while (0)
 
-/* XXX---   HOW LOCKING WORKS IN B43   ---XXX
- *
- * You should always acquire both, wl->mutex and wl->irq_lock unless:
- * - You don't need to acquire wl->irq_lock, if the interface is stopped.
- * - You don't need to acquire wl->mutex in the IRQ handler, IRQ tasklet
- *   and packet TX path (and _ONLY_ there.)
- */
-
 /* Data structure for one wireless device (802.11 core) */
 struct b43_wldev {
 	struct ssb_device *dev;
@@ -807,14 +802,12 @@ struct b43_wldev {
 	u32 dma_reason[6];
 	/* The currently active generic-interrupt mask. */
 	u32 irq_mask;
+
 	/* Link Quality calculation context. */
 	struct b43_noise_calculation noisecalc;
 	/* if > 0 MAC is suspended. if == 0 MAC is enabled. */
 	int mac_suspended;
 
-	/* Interrupt Service Routine tasklet (bottom-half) */
-	struct tasklet_struct isr_tasklet;
-
 	/* Periodic tasks */
 	struct delayed_work periodic_work;
 	unsigned int periodic_state;
Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2009-09-04 22:15:32.000000000 +0200
@@ -46,8 +46,6 @@ struct b43_debugfs_fops {
 	struct file_operations fops;
 	/* Offset of struct b43_dfs_file in struct b43_dfsentry */
 	size_t file_struct_offset;
-	/* Take wl->irq_lock before calling read/write? */
-	bool take_irqlock;
 };
 
 static inline
@@ -372,14 +370,12 @@ static ssize_t txstat_read_file(struct b
 {
 	struct b43_txstatus_log *log = &dev->dfsentry->txstatlog;
 	ssize_t count = 0;
-	unsigned long flags;
 	int i, idx;
 	struct b43_txstatus *stat;
 
-	spin_lock_irqsave(&log->lock, flags);
 	if (log->end < 0) {
 		fappend("Nothing transmitted, yet\n");
-		goto out_unlock;
+		goto out;
 	}
 	fappend("b43 TX status reports:\n\n"
 		"index | cookie | seq | phy_stat | frame_count | "
@@ -409,13 +405,11 @@ static ssize_t txstat_read_file(struct b
 			break;
 		i++;
 	}
-out_unlock:
-	spin_unlock_irqrestore(&log->lock, flags);
+out:
 
 	return count;
 }
 
-/* wl->irq_lock is locked */
 static int restart_write_file(struct b43_wldev *dev,
 			      const char *buf, size_t count)
 {
@@ -556,12 +550,7 @@ static ssize_t b43_debugfs_read(struct f
 			goto out_unlock;
 		}
 		memset(buf, 0, bufsize);
-		if (dfops->take_irqlock) {
-			spin_lock_irq(&dev->wl->irq_lock);
-			ret = dfops->read(dev, buf, bufsize);
-			spin_unlock_irq(&dev->wl->irq_lock);
-		} else
-			ret = dfops->read(dev, buf, bufsize);
+		ret = dfops->read(dev, buf, bufsize);
 		if (ret <= 0) {
 			free_pages((unsigned long)buf, buforder);
 			err = ret;
@@ -623,12 +612,7 @@ static ssize_t b43_debugfs_write(struct 
 		err = -EFAULT;
 		goto out_freepage;
 	}
-	if (dfops->take_irqlock) {
-		spin_lock_irq(&dev->wl->irq_lock);
-		err = dfops->write(dev, buf, count);
-		spin_unlock_irq(&dev->wl->irq_lock);
-	} else
-		err = dfops->write(dev, buf, count);
+	err = dfops->write(dev, buf, count);
 	if (err)
 		goto out_freepage;
 
@@ -641,7 +625,7 @@ out_unlock:
 }
 
 
-#define B43_DEBUGFS_FOPS(name, _read, _write, _take_irqlock)	\
+#define B43_DEBUGFS_FOPS(name, _read, _write)			\
 	static struct b43_debugfs_fops fops_##name = {		\
 		.read	= _read,				\
 		.write	= _write,				\
@@ -652,20 +636,19 @@ out_unlock:
 		},						\
 		.file_struct_offset = offsetof(struct b43_dfsentry, \
 					       file_##name),	\
-		.take_irqlock	= _take_irqlock,		\
 	}
 
-B43_DEBUGFS_FOPS(shm16read, shm16read__read_file, shm16read__write_file, 1);
-B43_DEBUGFS_FOPS(shm16write, NULL, shm16write__write_file, 1);
-B43_DEBUGFS_FOPS(shm32read, shm32read__read_file, shm32read__write_file, 1);
-B43_DEBUGFS_FOPS(shm32write, NULL, shm32write__write_file, 1);
-B43_DEBUGFS_FOPS(mmio16read, mmio16read__read_file, mmio16read__write_file, 1);
-B43_DEBUGFS_FOPS(mmio16write, NULL, mmio16write__write_file, 1);
-B43_DEBUGFS_FOPS(mmio32read, mmio32read__read_file, mmio32read__write_file, 1);
-B43_DEBUGFS_FOPS(mmio32write, NULL, mmio32write__write_file, 1);
-B43_DEBUGFS_FOPS(txstat, txstat_read_file, NULL, 0);
-B43_DEBUGFS_FOPS(restart, NULL, restart_write_file, 1);
-B43_DEBUGFS_FOPS(loctls, loctls_read_file, NULL, 0);
+B43_DEBUGFS_FOPS(shm16read, shm16read__read_file, shm16read__write_file);
+B43_DEBUGFS_FOPS(shm16write, NULL, shm16write__write_file);
+B43_DEBUGFS_FOPS(shm32read, shm32read__read_file, shm32read__write_file);
+B43_DEBUGFS_FOPS(shm32write, NULL, shm32write__write_file);
+B43_DEBUGFS_FOPS(mmio16read, mmio16read__read_file, mmio16read__write_file);
+B43_DEBUGFS_FOPS(mmio16write, NULL, mmio16write__write_file);
+B43_DEBUGFS_FOPS(mmio32read, mmio32read__read_file, mmio32read__write_file);
+B43_DEBUGFS_FOPS(mmio32write, NULL, mmio32write__write_file);
+B43_DEBUGFS_FOPS(txstat, txstat_read_file, NULL);
+B43_DEBUGFS_FOPS(restart, NULL, restart_write_file);
+B43_DEBUGFS_FOPS(loctls, loctls_read_file, NULL);
 
 
 bool b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature)
@@ -738,7 +721,6 @@ void b43_debugfs_add_device(struct b43_w
 		return;
 	}
 	log->end = -1;
-	spin_lock_init(&log->lock);
 
 	dev->dfsentry = e;
 
@@ -822,7 +804,6 @@ void b43_debugfs_remove_device(struct b4
 	kfree(e);
 }
 
-/* Called with IRQs disabled. */
 void b43_debugfs_log_txstat(struct b43_wldev *dev,
 			    const struct b43_txstatus *status)
 {
@@ -834,14 +815,12 @@ void b43_debugfs_log_txstat(struct b43_w
 	if (!e)
 		return;
 	log = &e->txstatlog;
-	spin_lock(&log->lock); /* IRQs are already disabled. */
 	i = log->end + 1;
 	if (i == B43_NR_LOGGED_TXSTATUS)
 		i = 0;
 	log->end = i;
 	cur = &(log->log[i]);
 	memcpy(cur, status, sizeof(*cur));
-	spin_unlock(&log->lock);
 }
 
 void b43_debugfs_init(void)
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-04 22:17:06.000000000 +0200
@@ -291,7 +291,7 @@ static struct ieee80211_supported_band b
 
 static void b43_wireless_core_exit(struct b43_wldev *dev);
 static int b43_wireless_core_init(struct b43_wldev *dev);
-static void b43_wireless_core_stop(struct b43_wldev *dev);
+static struct b43_wldev * b43_wireless_core_stop(struct b43_wldev *dev);
 static int b43_wireless_core_start(struct b43_wldev *dev);
 
 static int b43_ratelimit(struct b43_wl *wl)
@@ -685,16 +685,6 @@ static void b43_short_slot_timing_disabl
 	b43_set_slot_time(dev, 20);
 }
 
-/* Synchronize IRQ top- and bottom-half.
- * IRQs must be masked before calling this.
- * This must not be called with the irq_lock held.
- */
-static void b43_synchronize_irq(struct b43_wldev *dev)
-{
-	synchronize_irq(dev->dev->irq);
-	tasklet_kill(&dev->isr_tasklet);
-}
-
 /* DummyTransmission function, as documented on
  * http://bcm-v4.sipsolutions.net/802.11/DummyTransmission
  */
@@ -720,8 +710,7 @@ void b43_dummy_transmission(struct b43_w
 		buffer[0] = 0x000B846E;
 	}
 
-	spin_lock_irq(&wl->irq_lock);
-	write_lock(&wl->tx_lock);
+	write_lock_irq(&wl->tx_lock);
 
 	for (i = 0; i < 5; i++)
 		b43_ram_write(dev, i * 4, buffer[i]);
@@ -779,8 +768,7 @@ void b43_dummy_transmission(struct b43_w
 	if (phy->radio_ver == 0x2050 && phy->radio_rev <= 0x5)
 		b43_radio_write16(dev, 0x0051, 0x0037);
 
-	write_unlock(&wl->tx_lock);
-	spin_unlock_irq(&wl->irq_lock);
+	write_unlock_irq(&wl->tx_lock);
 }
 
 static void key_write(struct b43_wldev *dev,
@@ -1620,6 +1608,27 @@ static void handle_irq_beacon(struct b43
 	}
 }
 
+static void b43_do_beacon_update_trigger_work(struct b43_wldev *dev)
+{
+	u32 old_irq_mask = dev->irq_mask;
+
+	/* update beacon right away or defer to irq */
+	handle_irq_beacon(dev);
+	if (old_irq_mask != dev->irq_mask) {
+		/* The handler updated the IRQ mask. */
+		B43_WARN_ON(!dev->irq_mask);
+		if (b43_read32(dev, B43_MMIO_GEN_IRQ_MASK)) {
+			b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
+		} else {
+			/* Device interrupts are currently disabled. That means
+			 * we just ran the hardirq handler and scheduled the
+			 * IRQ thread. The thread will write the IRQ mask when
+			 * it finished, so there's nothing to do here. Writing
+			 * the mask _here_ would incorrectly re-enable IRQs. */
+		}
+	}
+}
+
 static void b43_beacon_update_trigger_work(struct work_struct *work)
 {
 	struct b43_wl *wl = container_of(work, struct b43_wl,
@@ -1629,19 +1638,22 @@ static void b43_beacon_update_trigger_wo
 	mutex_lock(&wl->mutex);
 	dev = wl->current_dev;
 	if (likely(dev && (b43_status(dev) >= B43_STAT_INITIALIZED))) {
-		spin_lock_irq(&wl->irq_lock);
-		/* update beacon right away or defer to irq */
-		handle_irq_beacon(dev);
-		/* The handler might have updated the IRQ mask. */
-		b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
-		mmiowb();
-		spin_unlock_irq(&wl->irq_lock);
+		if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
+			/* wl->mutex is enough. */
+			b43_do_beacon_update_trigger_work(dev);
+			mmiowb();
+		} else {
+			spin_lock_irq(&wl->hardirq_lock);
+			b43_do_beacon_update_trigger_work(dev);
+			mmiowb();
+			spin_unlock_irq(&wl->hardirq_lock);
+		}
 	}
 	mutex_unlock(&wl->mutex);
 }
 
 /* Asynchronously update the packet templates in template RAM.
- * Locking: Requires wl->irq_lock to be locked. */
+ * Locking: Requires wl->mutex to be locked. */
 static void b43_update_templates(struct b43_wl *wl)
 {
 	struct sk_buff *beacon;
@@ -1778,18 +1790,15 @@ out:
 			B43_DEBUGIRQ_REASON_REG, B43_DEBUGIRQ_ACK);
 }
 
-/* Interrupt handler bottom-half */
-static void b43_interrupt_tasklet(struct b43_wldev *dev)
+static void b43_do_interrupt_thread(struct b43_wldev *dev)
 {
 	u32 reason;
 	u32 dma_reason[ARRAY_SIZE(dev->dma_reason)];
 	u32 merged_dma_reason = 0;
 	int i;
-	unsigned long flags;
-
-	spin_lock_irqsave(&dev->wl->irq_lock, flags);
 
-	B43_WARN_ON(b43_status(dev) != B43_STAT_STARTED);
+	if (unlikely(b43_status(dev) != B43_STAT_STARTED))
+		return;
 
 	reason = dev->irq_reason;
 	for (i = 0; i < ARRAY_SIZE(dma_reason); i++) {
@@ -1822,8 +1831,6 @@ static void b43_interrupt_tasklet(struct
 			       dma_reason[2], dma_reason[3],
 			       dma_reason[4], dma_reason[5]);
 			b43_controller_restart(dev, "DMA error");
-			mmiowb();
-			spin_unlock_irqrestore(&dev->wl->irq_lock, flags);
 			return;
 		}
 		if (merged_dma_reason & B43_DMAIRQ_NONFATALMASK) {
@@ -1867,47 +1874,36 @@ static void b43_interrupt_tasklet(struct
 	if (reason & B43_IRQ_TX_OK)
 		handle_irq_transmit_status(dev);
 
+	/* Re-enable interrupts on the device by restoring the current interrupt mask. */
 	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
-	mmiowb();
-	spin_unlock_irqrestore(&dev->wl->irq_lock, flags);
 }
 
-static void b43_interrupt_ack(struct b43_wldev *dev, u32 reason)
+/* Interrupt thread handler. Handles device interrupts in thread context. */
+static irqreturn_t b43_interrupt_thread_handler(int irq, void *dev_id)
 {
-	b43_write32(dev, B43_MMIO_GEN_IRQ_REASON, reason);
+	struct b43_wldev *dev = dev_id;
 
-	b43_write32(dev, B43_MMIO_DMA0_REASON, dev->dma_reason[0]);
-	b43_write32(dev, B43_MMIO_DMA1_REASON, dev->dma_reason[1]);
-	b43_write32(dev, B43_MMIO_DMA2_REASON, dev->dma_reason[2]);
-	b43_write32(dev, B43_MMIO_DMA3_REASON, dev->dma_reason[3]);
-	b43_write32(dev, B43_MMIO_DMA4_REASON, dev->dma_reason[4]);
-/* Unused ring
-	b43_write32(dev, B43_MMIO_DMA5_REASON, dev->dma_reason[5]);
-*/
+	mutex_lock(&dev->wl->mutex);
+	b43_do_interrupt_thread(dev);
+	mmiowb();
+	mutex_unlock(&dev->wl->mutex);
+
+	return IRQ_HANDLED;
 }
 
-/* Interrupt handler top-half */
-static irqreturn_t b43_interrupt_handler(int irq, void *dev_id)
+static irqreturn_t b43_do_interrupt(struct b43_wldev *dev)
 {
-	irqreturn_t ret = IRQ_NONE;
-	struct b43_wldev *dev = dev_id;
 	u32 reason;
 
-	B43_WARN_ON(!dev);
+	/* This code runs under wl->hardirq_lock, but _only_ on non-SDIO busses.
+	 * On SDIO, this runs under wl->mutex. */
 
-	spin_lock(&dev->wl->irq_lock);
-
-	if (unlikely(b43_status(dev) < B43_STAT_STARTED)) {
-		/* This can only happen on shared IRQ lines. */
-		goto out;
-	}
 	reason = b43_read32(dev, B43_MMIO_GEN_IRQ_REASON);
 	if (reason == 0xffffffff)	/* shared IRQ */
-		goto out;
-	ret = IRQ_HANDLED;
+		return IRQ_NONE;
 	reason &= dev->irq_mask;
 	if (!reason)
-		goto out;
+		return IRQ_HANDLED;
 
 	dev->dma_reason[0] = b43_read32(dev, B43_MMIO_DMA0_REASON)
 	    & 0x0001DC00;
@@ -1924,15 +1920,38 @@ static irqreturn_t b43_interrupt_handler
 	    & 0x0000DC00;
 */
 
-	b43_interrupt_ack(dev, reason);
-	/* disable all IRQs. They are enabled again in the bottom half. */
+	/* ACK the interrupt. */
+	b43_write32(dev, B43_MMIO_GEN_IRQ_REASON, reason);
+	b43_write32(dev, B43_MMIO_DMA0_REASON, dev->dma_reason[0]);
+	b43_write32(dev, B43_MMIO_DMA1_REASON, dev->dma_reason[1]);
+	b43_write32(dev, B43_MMIO_DMA2_REASON, dev->dma_reason[2]);
+	b43_write32(dev, B43_MMIO_DMA3_REASON, dev->dma_reason[3]);
+	b43_write32(dev, B43_MMIO_DMA4_REASON, dev->dma_reason[4]);
+/* Unused ring
+	b43_write32(dev, B43_MMIO_DMA5_REASON, dev->dma_reason[5]);
+*/
+
+	/* Disable IRQs on the device. The IRQ thread handler will re-enable them. */
 	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
-	/* save the reason code and call our bottom half. */
+	/* Save the reason bitmasks for the IRQ thread handler. */
 	dev->irq_reason = reason;
-	tasklet_schedule(&dev->isr_tasklet);
-out:
+
+	return IRQ_WAKE_THREAD;
+}
+
+/* Interrupt handler top-half. This runs with interrupts disabled. */
+static irqreturn_t b43_interrupt_handler(int irq, void *dev_id)
+{
+	struct b43_wldev *dev = dev_id;
+	irqreturn_t ret;
+
+	if (unlikely(b43_status(dev) < B43_STAT_STARTED))
+		return IRQ_NONE;
+
+	spin_lock(&dev->wl->hardirq_lock);
+	ret = b43_do_interrupt(dev);
 	mmiowb();
-	spin_unlock(&dev->wl->irq_lock);
+	spin_unlock(&dev->wl->hardirq_lock);
 
 	return ret;
 }
@@ -3038,15 +3057,12 @@ static void b43_security_init(struct b43
 static int b43_rng_read(struct hwrng *rng, u32 *data)
 {
 	struct b43_wl *wl = (struct b43_wl *)rng->priv;
-	unsigned long flags;
 
-	/* Don't take wl->mutex here, as it could deadlock with
-	 * hwrng internal locking. It's not needed to take
-	 * wl->mutex here, anyway. */
+	/* FIXME: We need to take wl->mutex here to make sure the device
+	 * is not going away from under our ass. However it could deadlock
+	 * with hwrng internal locking. */
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
 	*data = b43_read16(wl->current_dev, B43_MMIO_RNG);
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	return (sizeof(u16));
 }
@@ -3283,22 +3299,20 @@ static int b43_op_get_tx_stats(struct ie
 			       struct ieee80211_tx_queue_stats *stats)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
-	struct b43_wldev *dev = wl->current_dev;
-	unsigned long flags;
+	struct b43_wldev *dev;
 	int err = -ENODEV;
 
-	if (!dev)
-		goto out;
-	spin_lock_irqsave(&wl->irq_lock, flags);
-	if (likely(b43_status(dev) >= B43_STAT_STARTED)) {
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (dev && b43_status(dev) >= B43_STAT_STARTED) {
 		if (b43_using_pio_transfers(dev))
 			b43_pio_get_tx_stats(dev, stats);
 		else
 			b43_dma_get_tx_stats(dev, stats);
 		err = 0;
 	}
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
-out:
+	mutex_unlock(&wl->mutex);
+
 	return err;
 }
 
@@ -3306,11 +3320,10 @@ static int b43_op_get_stats(struct ieee8
 			    struct ieee80211_low_level_stats *stats)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
-	unsigned long flags;
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
+	mutex_lock(&wl->mutex);
 	memcpy(stats, &wl->ieee_stats, sizeof(*stats));
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
+	mutex_unlock(&wl->mutex);
 
 	return 0;
 }
@@ -3322,7 +3335,6 @@ static u64 b43_op_get_tsf(struct ieee802
 	u64 tsf;
 
 	mutex_lock(&wl->mutex);
-	spin_lock_irq(&wl->irq_lock);
 	dev = wl->current_dev;
 
 	if (dev && (b43_status(dev) >= B43_STAT_INITIALIZED))
@@ -3330,7 +3342,6 @@ static u64 b43_op_get_tsf(struct ieee802
 	else
 		tsf = 0;
 
-	spin_unlock_irq(&wl->irq_lock);
 	mutex_unlock(&wl->mutex);
 
 	return tsf;
@@ -3342,13 +3353,11 @@ static void b43_op_set_tsf(struct ieee80
 	struct b43_wldev *dev;
 
 	mutex_lock(&wl->mutex);
-	spin_lock_irq(&wl->irq_lock);
 	dev = wl->current_dev;
 
 	if (dev && (b43_status(dev) >= B43_STAT_INITIALIZED))
 		b43_tsf_write(dev, tsf);
 
-	spin_unlock_irq(&wl->irq_lock);
 	mutex_unlock(&wl->mutex);
 }
 
@@ -3434,7 +3443,7 @@ static int b43_switch_band(struct b43_wl
 	prev_status = b43_status(down_dev);
 	/* Shutdown the currently running core. */
 	if (prev_status >= B43_STAT_STARTED)
-		b43_wireless_core_stop(down_dev);
+		down_dev = b43_wireless_core_stop(down_dev);
 	if (prev_status >= B43_STAT_INITIALIZED)
 		b43_wireless_core_exit(down_dev);
 
@@ -3498,7 +3507,6 @@ static int b43_op_config(struct ieee8021
 	struct b43_wldev *dev;
 	struct b43_phy *phy;
 	struct ieee80211_conf *conf = &hw->conf;
-	unsigned long flags;
 	int antenna;
 	int err = 0;
 
@@ -3529,13 +3537,11 @@ static int b43_op_config(struct ieee8021
 
 	/* Adjust the desired TX power level. */
 	if (conf->power_level != 0) {
-		spin_lock_irqsave(&wl->irq_lock, flags);
 		if (conf->power_level != phy->desired_txpower) {
 			phy->desired_txpower = conf->power_level;
 			b43_phy_txpower_check(dev, B43_TXPWR_IGNORE_TIME |
 						   B43_TXPWR_IGNORE_TSSI);
 		}
-		spin_unlock_irqrestore(&wl->irq_lock, flags);
 	}
 
 	/* Antennas for RX and management frame TX. */
@@ -3620,7 +3626,6 @@ static void b43_op_bss_info_changed(stru
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev;
-	unsigned long flags;
 
 	mutex_lock(&wl->mutex);
 
@@ -3630,7 +3635,6 @@ static void b43_op_bss_info_changed(stru
 
 	B43_WARN_ON(wl->vif != vif);
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
 	if (changed & BSS_CHANGED_BSSID) {
 		if (conf->bssid)
 			memcpy(wl->bssid, conf->bssid, ETH_ALEN);
@@ -3648,7 +3652,6 @@ static void b43_op_bss_info_changed(stru
 		if (changed & BSS_CHANGED_BSSID)
 			b43_write_mac_bssid_templates(dev);
 	}
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	b43_mac_suspend(dev);
 
@@ -3683,18 +3686,15 @@ static int b43_op_set_key(struct ieee802
 	u8 algorithm;
 	u8 index;
 	int err;
+	unsigned long flags;
 	static const u8 bcast_addr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
 
 	if (modparam_nohwcrypt)
 		return -ENOSPC; /* User disabled HW-crypto */
 
 	mutex_lock(&wl->mutex);
-	spin_lock_irq(&wl->irq_lock);
-	write_lock(&wl->tx_lock);
-	/* Why do we need all this locking here?
-	 * mutex     -> Every config operation must take it.
-	 * irq_lock  -> We modify the dev->key array, which is accessed
-	 *              in the IRQ handlers.
+	write_lock_irqsave(&wl->tx_lock, flags);
+	/* mutex     -> Every config operation must take it.
 	 * tx_lock   -> We modify the dev->key array, which is accessed
 	 *              in the TX handler.
 	 */
@@ -3789,8 +3789,7 @@ out_unlock:
 		       sta ? sta->addr : bcast_addr);
 		b43_dump_keymemory(dev);
 	}
-	write_unlock(&wl->tx_lock);
-	spin_unlock_irq(&wl->irq_lock);
+	write_unlock_irqrestore(&wl->tx_lock, flags);
 	mutex_unlock(&wl->mutex);
 
 	return err;
@@ -3801,15 +3800,15 @@ static void b43_op_configure_filter(stru
 				    u64 multicast)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
-	struct b43_wldev *dev = wl->current_dev;
-	unsigned long flags;
+	struct b43_wldev *dev;
 
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
 	if (!dev) {
 		*fflags = 0;
-		return;
+		goto out_unlock;
 	}
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
 	*fflags &= FIF_PROMISC_IN_BSS |
 		  FIF_ALLMULTI |
 		  FIF_FCSFAIL |
@@ -3830,41 +3829,66 @@ static void b43_op_configure_filter(stru
 
 	if (changed && b43_status(dev) >= B43_STAT_INITIALIZED)
 		b43_adjust_opmode(dev);
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
+
+out_unlock:
+	mutex_unlock(&wl->mutex);
 }
 
-/* Locking: wl->mutex */
-static void b43_wireless_core_stop(struct b43_wldev *dev)
+/* Locking: wl->mutex
+ * Returns the current dev. This might be different from the passed in dev,
+ * because the core might be gone away while we unlocked the mutex. */
+static struct b43_wldev * b43_wireless_core_stop(struct b43_wldev *dev)
 {
 	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
+	struct b43_wldev *orig_dev;
 
-	if (b43_status(dev) < B43_STAT_STARTED)
-		return;
+redo:
+	if (!dev || b43_status(dev) < B43_STAT_STARTED)
+		return dev;
 
-	/* Disable and sync interrupts. We must do this before than
-	 * setting the status to INITIALIZED, as the interrupt handler
-	 * won't care about IRQs then. */
-	spin_lock_irqsave(&wl->irq_lock, flags);
-	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
-	b43_read32(dev, B43_MMIO_GEN_IRQ_MASK);	/* flush */
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
-	b43_synchronize_irq(dev);
+	/* Disable periodic work. Unlock to avoid deadlocks. */
+	mutex_unlock(&wl->mutex);
+	cancel_delayed_work_sync(&dev->periodic_work);
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (!dev || b43_status(dev) < B43_STAT_STARTED) {
+		/* Whoops, aliens ate up the device while we were unlocked. */
+		return dev;
+	}
 
-	write_lock_irqsave(&wl->tx_lock, flags);
+	/* Disable interrupts on the device. */
 	b43_set_status(dev, B43_STAT_INITIALIZED);
-	write_unlock_irqrestore(&wl->tx_lock, flags);
-
-	b43_pio_stop(dev);
+	if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
+		/* wl->mutex is locked. That is enough. */
+		b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
+		b43_read32(dev, B43_MMIO_GEN_IRQ_MASK);	/* Flush */
+	} else {
+		spin_lock_irq(&wl->hardirq_lock);
+		b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
+		b43_read32(dev, B43_MMIO_GEN_IRQ_MASK);	/* Flush */
+		spin_unlock_irq(&wl->hardirq_lock);
+	}
+	/* Synchronize the interrupt handlers. Unlock to avoid deadlocks. */
+	orig_dev = dev;
 	mutex_unlock(&wl->mutex);
-	/* Must unlock as it would otherwise deadlock. No races here.
-	 * Cancel the possibly running self-rearming periodic work. */
-	cancel_delayed_work_sync(&dev->periodic_work);
+	synchronize_irq(dev->dev->irq);
 	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (!dev)
+		return dev;
+	if (dev != orig_dev) {
+		if (b43_status(dev) >= B43_STAT_STARTED)
+			goto redo;
+		return dev;
+	}
+	B43_WARN_ON(b43_read32(dev, B43_MMIO_GEN_IRQ_MASK));
 
+	b43_pio_stop(dev);
 	b43_mac_suspend(dev);
 	free_irq(dev->dev->irq, dev);
 	b43dbg(wl, "Wireless interface stopped\n");
+
+	return dev;
 }
 
 /* Locking: wl->mutex */
@@ -3875,8 +3899,9 @@ static int b43_wireless_core_start(struc
 	B43_WARN_ON(b43_status(dev) != B43_STAT_INITIALIZED);
 
 	drain_txstatus_queue(dev);
-	err = request_irq(dev->dev->irq, b43_interrupt_handler,
-			  IRQF_SHARED, KBUILD_MODNAME, dev);
+	err = request_threaded_irq(dev->dev->irq, b43_interrupt_handler,
+				   b43_interrupt_thread_handler,
+				   IRQF_SHARED, KBUILD_MODNAME, dev);
 	if (err) {
 		b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq);
 		goto out;
@@ -4155,8 +4180,8 @@ static void b43_wireless_core_exit(struc
 {
 	u32 macctl;
 
-	B43_WARN_ON(b43_status(dev) > B43_STAT_INITIALIZED);
-	if (b43_status(dev) != B43_STAT_INITIALIZED)
+	B43_WARN_ON(dev && b43_status(dev) > B43_STAT_INITIALIZED);
+	if (!dev || b43_status(dev) != B43_STAT_INITIALIZED)
 		return;
 	b43_set_status(dev, B43_STAT_UNINIT);
 
@@ -4309,7 +4334,6 @@ static int b43_op_add_interface(struct i
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev;
-	unsigned long flags;
 	int err = -EOPNOTSUPP;
 
 	/* TODO: allow WDS/AP devices to coexist */
@@ -4333,12 +4357,10 @@ static int b43_op_add_interface(struct i
 	wl->if_type = conf->type;
 	memcpy(wl->mac_addr, conf->mac_addr, ETH_ALEN);
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
 	b43_adjust_opmode(dev);
 	b43_set_pretbtt(dev);
 	b43_set_synth_pu_delay(dev, 0);
 	b43_upload_card_macaddress(dev);
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	err = 0;
  out_mutex_unlock:
@@ -4352,7 +4374,6 @@ static void b43_op_remove_interface(stru
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev = wl->current_dev;
-	unsigned long flags;
 
 	b43dbg(wl, "Removing Interface type %d\n", conf->type);
 
@@ -4364,11 +4385,9 @@ static void b43_op_remove_interface(stru
 
 	wl->operating = 0;
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
 	b43_adjust_opmode(dev);
 	memset(wl->mac_addr, 0, ETH_ALEN);
 	b43_upload_card_macaddress(dev);
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
 
 	mutex_unlock(&wl->mutex);
 }
@@ -4428,10 +4447,15 @@ static void b43_op_stop(struct ieee80211
 	cancel_work_sync(&(wl->beacon_update_trigger));
 
 	mutex_lock(&wl->mutex);
-	if (b43_status(dev) >= B43_STAT_STARTED)
-		b43_wireless_core_stop(dev);
+	if (b43_status(dev) >= B43_STAT_STARTED) {
+		dev = b43_wireless_core_stop(dev);
+		if (!dev)
+			goto out_unlock;
+	}
 	b43_wireless_core_exit(dev);
 	wl->radio_enabled = 0;
+
+out_unlock:
 	mutex_unlock(&wl->mutex);
 
 	cancel_work_sync(&(wl->txpower_adjust_work));
@@ -4441,11 +4465,10 @@ static int b43_op_beacon_set_tim(struct 
 				 struct ieee80211_sta *sta, bool set)
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
-	unsigned long flags;
 
-	spin_lock_irqsave(&wl->irq_lock, flags);
+	mutex_lock(&wl->mutex);
 	b43_update_templates(wl);
-	spin_unlock_irqrestore(&wl->irq_lock, flags);
+	mutex_unlock(&wl->mutex);
 
 	return 0;
 }
@@ -4526,8 +4549,13 @@ static void b43_chip_reset(struct work_s
 
 	prev_status = b43_status(dev);
 	/* Bring the device down... */
-	if (prev_status >= B43_STAT_STARTED)
-		b43_wireless_core_stop(dev);
+	if (prev_status >= B43_STAT_STARTED) {
+		dev = b43_wireless_core_stop(dev);
+		if (!dev) {
+			err = -ENODEV;
+			goto out;
+		}
+	}
 	if (prev_status >= B43_STAT_INITIALIZED)
 		b43_wireless_core_exit(dev);
 
@@ -4742,9 +4770,6 @@ static int b43_one_core_attach(struct ss
 	wldev->wl = wl;
 	b43_set_status(wldev, B43_STAT_UNINIT);
 	wldev->bad_frames_preempt = modparam_bad_frames_preempt;
-	tasklet_init(&wldev->isr_tasklet,
-		     (void (*)(unsigned long))b43_interrupt_tasklet,
-		     (unsigned long)wldev);
 	INIT_LIST_HEAD(&wldev->list);
 
 	err = b43_wireless_core_attach(wldev);
@@ -4841,11 +4866,11 @@ static int b43_wireless_init(struct ssb_
 
 	/* Initialize struct b43_wl */
 	wl->hw = hw;
-	spin_lock_init(&wl->irq_lock);
 	rwlock_init(&wl->tx_lock);
 	spin_lock_init(&wl->leds_lock);
 	spin_lock_init(&wl->shm_lock);
 	mutex_init(&wl->mutex);
+	spin_lock_init(&wl->hardirq_lock);
 	INIT_LIST_HEAD(&wl->devlist);
 	INIT_WORK(&wl->beacon_update_trigger, b43_beacon_update_trigger_work);
 	INIT_WORK(&wl->txpower_adjust_work, b43_phy_txpower_adjust_work);
@@ -4946,8 +4971,8 @@ static int b43_suspend(struct ssb_device
 	wldev->suspend_in_progress = true;
 	wldev->suspend_init_status = b43_status(wldev);
 	if (wldev->suspend_init_status >= B43_STAT_STARTED)
-		b43_wireless_core_stop(wldev);
-	if (wldev->suspend_init_status >= B43_STAT_INITIALIZED)
+		wldev = b43_wireless_core_stop(wldev);
+	if (wldev && wldev->suspend_init_status >= B43_STAT_INITIALIZED)
 		b43_wireless_core_exit(wldev);
 	mutex_unlock(&wl->mutex);
 
Index: wireless-testing/drivers/net/wireless/b43/phy_common.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.c	2009-09-04 22:15:32.000000000 +0200
@@ -347,7 +347,6 @@ void b43_phy_txpower_adjust_work(struct 
 	mutex_unlock(&wl->mutex);
 }
 
-/* Called with wl->irq_lock locked */
 void b43_phy_txpower_check(struct b43_wldev *dev, unsigned int flags)
 {
 	struct b43_phy *phy = &dev->phy;
Index: wireless-testing/drivers/net/wireless/b43/phy_common.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_common.h	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_common.h	2009-09-04 22:15:32.000000000 +0200
@@ -131,7 +131,7 @@ enum b43_txpwr_result {
  * 			If the parameter "ignore_tssi" is true, the TSSI values should
  * 			be ignored and a recalculation of the power settings should be
  * 			done even if the TSSI values did not change.
- * 			This callback is called with wl->irq_lock held and must not sleep.
+ * 			This function may sleep, but should not.
  * 			Must not be NULL.
  * @adjust_txpower:	Write the previously calculated TX power settings
  * 			(from @recalc_txpower) to the hardware.
@@ -379,7 +379,6 @@ void b43_software_rfkill(struct b43_wlde
  *
  * Compare the current TX power output to the desired power emission
  * and schedule an adjustment in case it mismatches.
- * Requires wl->irq_lock locked.
  *
  * @flags:	OR'ed enum b43_phy_txpower_check_flags flags.
  * 		See the docs below.
Index: wireless-testing/drivers/net/wireless/b43/phy_g.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.c	2009-09-04 22:15:32.000000000 +0200
@@ -2823,8 +2823,6 @@ static void b43_gphy_op_adjust_txpower(s
 
 	b43_mac_suspend(dev);
 
-	spin_lock_irq(&dev->wl->irq_lock);
-
 	/* Calculate the new attenuation values. */
 	bbatt = gphy->bbatt.att;
 	bbatt += gphy->bbatt_delta;
@@ -2864,11 +2862,6 @@ static void b43_gphy_op_adjust_txpower(s
 	gphy->rfatt.att = rfatt;
 	gphy->bbatt.att = bbatt;
 
-	/* We drop the lock early, so we can sleep during hardware
-	 * adjustment. Possible races with op_recalc_txpower are harmless,
-	 * as we will be called once again in case we raced. */
-	spin_unlock_irq(&dev->wl->irq_lock);
-
 	if (b43_debug(dev, B43_DBG_XMITPOWER))
 		b43dbg(dev->wl, "Adjusting TX power\n");
 
Index: wireless-testing/drivers/net/wireless/b43/phy_g.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.h	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/phy_g.h	2009-09-04 22:15:32.000000000 +0200
@@ -141,8 +141,7 @@ struct b43_phy_g {
 	int tgt_idle_tssi;
 	/* Current idle TSSI */
 	int cur_idle_tssi;
-	/* The current average TSSI.
-	 * Needs irq_lock, as it's updated in the IRQ path. */
+	/* The current average TSSI. */
 	u8 average_tssi;
 	/* Current TX power level attenuation control values */
 	struct b43_bbatt bbatt;
Index: wireless-testing/drivers/net/wireless/b43/sysfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/sysfs.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/sysfs.c	2009-09-04 22:15:32.000000000 +0200
@@ -94,7 +94,6 @@ static ssize_t b43_attr_interfmode_store
 					 const char *buf, size_t count)
 {
 	struct b43_wldev *wldev = dev_to_b43_wldev(dev);
-	unsigned long flags;
 	int err;
 	int mode;
 
@@ -120,7 +119,6 @@ static ssize_t b43_attr_interfmode_store
 	}
 
 	mutex_lock(&wldev->wl->mutex);
-	spin_lock_irqsave(&wldev->wl->irq_lock, flags);
 
 	if (wldev->phy.ops->interf_mitigation) {
 		err = wldev->phy.ops->interf_mitigation(wldev, mode);
@@ -132,7 +130,6 @@ static ssize_t b43_attr_interfmode_store
 		err = -ENOSYS;
 
 	mmiowb();
-	spin_unlock_irqrestore(&wldev->wl->irq_lock, flags);
 	mutex_unlock(&wldev->wl->mutex);
 
 	return err ? err : count;
Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-09-04 22:15:32.000000000 +0200
@@ -1387,7 +1387,6 @@ out_unlock:
 	return err;
 }
 
-/* Called with IRQs disabled. */
 void b43_dma_handle_txstatus(struct b43_wldev *dev,
 			     const struct b43_txstatus *status)
 {
@@ -1402,7 +1401,7 @@ void b43_dma_handle_txstatus(struct b43_
 	if (unlikely(!ring))
 		return;
 
-	spin_lock(&ring->lock); /* IRQs are already disabled. */
+	spin_lock_irq(&ring->lock);
 
 	B43_WARN_ON(!ring->tx);
 	ops = ring->ops;
@@ -1463,7 +1462,7 @@ void b43_dma_handle_txstatus(struct b43_
 		}
 	}
 
-	spin_unlock(&ring->lock);
+	spin_unlock_irq(&ring->lock);
 }
 
 void b43_dma_get_tx_stats(struct b43_wldev *dev,
Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-09-04 22:15:32.000000000 +0200
@@ -570,7 +570,6 @@ out_unlock:
 	return err;
 }
 
-/* Called with IRQs disabled. */
 void b43_pio_handle_txstatus(struct b43_wldev *dev,
 			     const struct b43_txstatus *status)
 {
@@ -584,7 +583,7 @@ void b43_pio_handle_txstatus(struct b43_
 		return;
 	B43_WARN_ON(!pack);
 
-	spin_lock(&q->lock); /* IRQs are already disabled. */
+	spin_lock_irq(&q->lock);
 
 	info = IEEE80211_SKB_CB(pack->skb);
 
@@ -604,7 +603,7 @@ void b43_pio_handle_txstatus(struct b43_
 		q->stopped = 0;
 	}
 
-	spin_unlock(&q->lock);
+	spin_unlock_irq(&q->lock);
 }
 
 void b43_pio_get_tx_stats(struct b43_wldev *dev,
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2009-09-04 22:15:30.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2009-09-04 22:15:32.000000000 +0200
@@ -23,9 +23,10 @@ struct dentry;
 #define B43_NR_LOGGED_TXSTATUS	100
 
 struct b43_txstatus_log {
+	/* This structure is protected by wl->mutex */
+
 	struct b43_txstatus *log;
 	int end;
-	spinlock_t lock;
 };
 
 struct b43_dfs_file {

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:53:18 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:53:18 +0200
Subject: [PATCH 2/5] b43: Remove TX spinlock
Message-ID: <200909042253.18417.mb@bu3sch.de>

This removes the TX spinlock and defers TX to a workqueue to allow
locking wl->mutex instead and to allow sleeping for register accesses.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-04 22:18:47.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-04 22:18:48.000000000 +0200
@@ -683,6 +683,11 @@ struct b43_wl {
 	 * This is scheduled when we determine that the actual TX output
 	 * power doesn't match what we want. */
 	struct work_struct txpower_adjust_work;
+
+	/* Packet transmit work */
+	struct work_struct tx_work;
+	/* Queue of packets to be transmitted. */
+	struct sk_buff_head tx_queue;
 };
 
 /* The type of the firmware file. */
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-04 22:18:47.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-04 22:18:49.000000000 +0200
@@ -690,7 +690,6 @@ static void b43_short_slot_timing_disabl
  */
 void b43_dummy_transmission(struct b43_wldev *dev, bool ofdm, bool pa_on)
 {
-	struct b43_wl *wl = dev->wl;
 	struct b43_phy *phy = &dev->phy;
 	unsigned int i, max_loop;
 	u16 value;
@@ -710,8 +709,6 @@ void b43_dummy_transmission(struct b43_w
 		buffer[0] = 0x000B846E;
 	}
 
-	write_lock_irq(&wl->tx_lock);
-
 	for (i = 0; i < 5; i++)
 		b43_ram_write(dev, i * 4, buffer[i]);
 
@@ -767,8 +764,6 @@ void b43_dummy_transmission(struct b43_w
 	}
 	if (phy->radio_ver == 0x2050 && phy->radio_rev <= 0x5)
 		b43_radio_write16(dev, 0x0051, 0x0037);
-
-	write_unlock_irq(&wl->tx_lock);
 }
 
 static void key_write(struct b43_wldev *dev,
@@ -3098,42 +3093,49 @@ static int b43_rng_init(struct b43_wl *w
 	return err;
 }
 
-static int b43_op_tx(struct ieee80211_hw *hw,
-		     struct sk_buff *skb)
+static void b43_tx_work(struct work_struct *work)
 {
-	struct b43_wl *wl = hw_to_b43_wl(hw);
-	struct b43_wldev *dev = wl->current_dev;
-	unsigned long flags;
-	int err;
+	struct b43_wl *wl = container_of(work, struct b43_wl, tx_work);
+	struct b43_wldev *dev;
+	struct sk_buff *skb;
+	int err = 0;
 
-	if (unlikely(skb->len < 2 + 2 + 6)) {
-		/* Too short, this can't be a valid frame. */
-		goto drop_packet;
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (unlikely(!dev || b43_status(dev) < B43_STAT_STARTED)) {
+		mutex_unlock(&wl->mutex);
+		return;
 	}
-	B43_WARN_ON(skb_shinfo(skb)->nr_frags);
-	if (unlikely(!dev))
-		goto drop_packet;
 
-	/* Transmissions on seperate queues can run concurrently. */
-	read_lock_irqsave(&wl->tx_lock, flags);
+	while (skb_queue_len(&wl->tx_queue)) {
+		skb = skb_dequeue(&wl->tx_queue);
 
-	err = -ENODEV;
-	if (likely(b43_status(dev) >= B43_STAT_STARTED)) {
 		if (b43_using_pio_transfers(dev))
 			err = b43_pio_tx(dev, skb);
 		else
 			err = b43_dma_tx(dev, skb);
+		if (unlikely(err))
+			dev_kfree_skb(skb); /* Drop it */
 	}
 
-	read_unlock_irqrestore(&wl->tx_lock, flags);
+	mutex_unlock(&wl->mutex);
+}
 
-	if (unlikely(err))
-		goto drop_packet;
-	return NETDEV_TX_OK;
+static int b43_op_tx(struct ieee80211_hw *hw,
+		     struct sk_buff *skb)
+{
+	struct b43_wl *wl = hw_to_b43_wl(hw);
+
+	if (unlikely(skb->len < 2 + 2 + 6)) {
+		/* Too short, this can't be a valid frame. */
+		dev_kfree_skb_any(skb);
+		return NETDEV_TX_OK;
+	}
+	B43_WARN_ON(skb_shinfo(skb)->nr_frags);
+
+	skb_queue_tail(&wl->tx_queue, skb);
+	ieee80211_queue_work(wl->hw, &wl->tx_work);
 
-drop_packet:
-	/* We can not transmit this packet. Drop it. */
-	dev_kfree_skb_any(skb);
 	return NETDEV_TX_OK;
 }
 
@@ -3686,18 +3688,12 @@ static int b43_op_set_key(struct ieee802
 	u8 algorithm;
 	u8 index;
 	int err;
-	unsigned long flags;
 	static const u8 bcast_addr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
 
 	if (modparam_nohwcrypt)
 		return -ENOSPC; /* User disabled HW-crypto */
 
 	mutex_lock(&wl->mutex);
-	write_lock_irqsave(&wl->tx_lock, flags);
-	/* mutex     -> Every config operation must take it.
-	 * tx_lock   -> We modify the dev->key array, which is accessed
-	 *              in the TX handler.
-	 */
 
 	dev = wl->current_dev;
 	err = -ENODEV;
@@ -3789,7 +3785,6 @@ out_unlock:
 		       sta ? sta->addr : bcast_addr);
 		b43_dump_keymemory(dev);
 	}
-	write_unlock_irqrestore(&wl->tx_lock, flags);
 	mutex_unlock(&wl->mutex);
 
 	return err;
@@ -3846,9 +3841,10 @@ redo:
 	if (!dev || b43_status(dev) < B43_STAT_STARTED)
 		return dev;
 
-	/* Disable periodic work. Unlock to avoid deadlocks. */
+	/* Cancel work. Unlock to avoid deadlocks. */
 	mutex_unlock(&wl->mutex);
 	cancel_delayed_work_sync(&dev->periodic_work);
+	cancel_work_sync(&wl->tx_work);
 	mutex_lock(&wl->mutex);
 	dev = wl->current_dev;
 	if (!dev || b43_status(dev) < B43_STAT_STARTED) {
@@ -3883,6 +3879,10 @@ redo:
 	}
 	B43_WARN_ON(b43_read32(dev, B43_MMIO_GEN_IRQ_MASK));
 
+	/* Drain the TX queue */
+	while (skb_queue_len(&wl->tx_queue))
+		dev_kfree_skb(skb_dequeue(&wl->tx_queue));
+
 	b43_pio_stop(dev);
 	b43_mac_suspend(dev);
 	free_irq(dev->dev->irq, dev);
@@ -4866,7 +4866,6 @@ static int b43_wireless_init(struct ssb_
 
 	/* Initialize struct b43_wl */
 	wl->hw = hw;
-	rwlock_init(&wl->tx_lock);
 	spin_lock_init(&wl->leds_lock);
 	spin_lock_init(&wl->shm_lock);
 	mutex_init(&wl->mutex);
@@ -4874,6 +4873,8 @@ static int b43_wireless_init(struct ssb_
 	INIT_LIST_HEAD(&wl->devlist);
 	INIT_WORK(&wl->beacon_update_trigger, b43_beacon_update_trigger_work);
 	INIT_WORK(&wl->txpower_adjust_work, b43_phy_txpower_adjust_work);
+	INIT_WORK(&wl->tx_work, b43_tx_work);
+	skb_queue_head_init(&wl->tx_queue);
 
 	ssb_set_devtypedata(dev, wl);
 	b43info(wl, "Broadcom %04X WLAN found (core revision %u)\n",

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:56:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:56:19 +0200
Subject: [PATCH 4/5] b43: Remove PIO RX workqueue
Message-ID: <200909042256.20125.mb@bu3sch.de>

This removes the PIO RX work. It's not needed anymore, because
we can sleep in the threaded interrupt handler.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-09-04 22:18:53.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-09-04 22:18:54.000000000 +0200
@@ -32,9 +32,6 @@
 #include <linux/delay.h>
 
 
-static void b43_pio_rx_work(struct work_struct *work);
-
-
 static u16 generate_cookie(struct b43_pio_txqueue *q,
 			   struct b43_pio_txpacket *pack)
 {
@@ -182,7 +179,6 @@ static struct b43_pio_rxqueue *b43_setup
 	q->rev = dev->dev->id.revision;
 	q->mmio_base = index_to_pioqueue_base(dev, index) +
 		       pio_rxqueue_offset(dev);
-	INIT_WORK(&q->rx_work, b43_pio_rx_work);
 
 	/* Enable Direct FIFO RX (PIO) on the engine. */
 	b43_dma_direct_fifo_rx(dev, index, 1);
@@ -247,13 +243,6 @@ void b43_pio_free(struct b43_wldev *dev)
 	destroy_queue_tx(pio, tx_queue_AC_BK);
 }
 
-void b43_pio_stop(struct b43_wldev *dev)
-{
-	if (!b43_using_pio_transfers(dev))
-		return;
-	cancel_work_sync(&dev->pio.rx_queue->rx_work);
-}
-
 int b43_pio_init(struct b43_wldev *dev)
 {
 	struct b43_pio *pio = &dev->pio;
@@ -745,30 +734,19 @@ rx_error:
 	return 1;
 }
 
-/* RX workqueue. We can sleep, yay! */
-static void b43_pio_rx_work(struct work_struct *work)
+void b43_pio_rx(struct b43_pio_rxqueue *q)
 {
-	struct b43_pio_rxqueue *q = container_of(work, struct b43_pio_rxqueue,
-						 rx_work);
-	unsigned int budget = 50;
+	unsigned int count = 0;
 	bool stop;
 
-	do {
-		mutex_lock(&q->dev->wl->mutex);
+	while (1) {
 		stop = (pio_rx_frame(q) == 0);
-		mutex_unlock(&q->dev->wl->mutex);
-		cond_resched();
 		if (stop)
 			break;
-	} while (--budget);
-}
-
-/* Called with IRQs disabled. */
-void b43_pio_rx(struct b43_pio_rxqueue *q)
-{
-	/* Due to latency issues we must run the RX path in
-	 * a workqueue to be able to schedule between packets. */
-	ieee80211_queue_work(q->dev->wl->hw, &q->rx_work);
+		cond_resched();
+		if (WARN_ON_ONCE(++count > 10000))
+			break;
+	}
 }
 
 static void b43_pio_tx_suspend_queue(struct b43_pio_txqueue *q)
Index: wireless-testing/drivers/net/wireless/b43/pio.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.h	2009-09-04 22:18:53.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.h	2009-09-04 22:18:54.000000000 +0200
@@ -104,9 +104,6 @@ struct b43_pio_rxqueue {
 	struct b43_wldev *dev;
 	u16 mmio_base;
 
-	/* Work to reduce latency issues on RX. */
-	struct work_struct rx_work;
-
 	/* Shortcut to the 802.11 core revision. This is to
 	 * avoid horrible pointer dereferencing in the fastpaths. */
 	u8 rev;
@@ -160,7 +157,6 @@ static inline void b43_piorx_write32(str
 
 
 int b43_pio_init(struct b43_wldev *dev);
-void b43_pio_stop(struct b43_wldev *dev);
 void b43_pio_free(struct b43_wldev *dev);
 
 int b43_pio_tx(struct b43_wldev *dev, struct sk_buff *skb);
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-04 22:18:49.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-04 22:18:54.000000000 +0200
@@ -3883,7 +3883,6 @@ redo:
 	while (skb_queue_len(&wl->tx_queue))
 		dev_kfree_skb(skb_dequeue(&wl->tx_queue));
 
-	b43_pio_stop(dev);
 	b43_mac_suspend(dev);
 	free_irq(dev->dev->irq, dev);
 	b43dbg(wl, "Wireless interface stopped\n");

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:55:00 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:55:00 +0200
Subject: [PATCH 3/5] b43: Remove DMA/PIO queue locks
Message-ID: <200909042255.01072.mb@bu3sch.de>

This removes the DMA/PIO queue locks. Locking is handled by
wl->mutex now.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-08-23 13:43:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-08-23 14:21:21.000000000 +0200
@@ -856,7 +856,6 @@ struct b43_dmaring *b43_setup_dmaring(st
 		} else
 			B43_WARN_ON(1);
 	}
-	spin_lock_init(&ring->lock);
 #ifdef CONFIG_B43_DEBUG
 	ring->last_injected_overflow = jiffies;
 #endif
@@ -1315,7 +1314,6 @@ int b43_dma_tx(struct b43_wldev *dev, st
 	struct b43_dmaring *ring;
 	struct ieee80211_hdr *hdr;
 	int err = 0;
-	unsigned long flags;
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
 
 	hdr = (struct ieee80211_hdr *)skb->data;
@@ -1331,8 +1329,6 @@ int b43_dma_tx(struct b43_wldev *dev, st
 			dev, skb_get_queue_mapping(skb));
 	}
 
-	spin_lock_irqsave(&ring->lock, flags);
-
 	B43_WARN_ON(!ring->tx);
 
 	if (unlikely(ring->stopped)) {
@@ -1343,7 +1339,7 @@ int b43_dma_tx(struct b43_wldev *dev, st
 		if (b43_debug(dev, B43_DBG_DMAVERBOSE))
 			b43err(dev->wl, "Packet after queue stopped\n");
 		err = -ENOSPC;
-		goto out_unlock;
+		goto out;
 	}
 
 	if (unlikely(WARN_ON(free_slots(ring) < TX_SLOTS_PER_FRAME))) {
@@ -1351,7 +1347,7 @@ int b43_dma_tx(struct b43_wldev *dev, st
 		 * full, but queues not stopped. */
 		b43err(dev->wl, "DMA queue overflow\n");
 		err = -ENOSPC;
-		goto out_unlock;
+		goto out;
 	}
 
 	/* Assign the queue number to the ring (if not already done before)
@@ -1365,11 +1361,11 @@ int b43_dma_tx(struct b43_wldev *dev, st
 		 * anymore and must not transmit it unencrypted. */
 		dev_kfree_skb_any(skb);
 		err = 0;
-		goto out_unlock;
+		goto out;
 	}
 	if (unlikely(err)) {
 		b43err(dev->wl, "DMA tx mapping failure\n");
-		goto out_unlock;
+		goto out;
 	}
 	ring->nr_tx_packets++;
 	if ((free_slots(ring) < TX_SLOTS_PER_FRAME) ||
@@ -1381,8 +1377,7 @@ int b43_dma_tx(struct b43_wldev *dev, st
 			b43dbg(dev->wl, "Stopped TX ring %d\n", ring->index);
 		}
 	}
-out_unlock:
-	spin_unlock_irqrestore(&ring->lock, flags);
+out:
 
 	return err;
 }
@@ -1401,8 +1396,6 @@ void b43_dma_handle_txstatus(struct b43_
 	if (unlikely(!ring))
 		return;
 
-	spin_lock_irq(&ring->lock);
-
 	B43_WARN_ON(!ring->tx);
 	ops = ring->ops;
 	while (1) {
@@ -1461,8 +1454,6 @@ void b43_dma_handle_txstatus(struct b43_
 			b43dbg(dev->wl, "Woke up TX ring %d\n", ring->index);
 		}
 	}
-
-	spin_unlock_irq(&ring->lock);
 }
 
 void b43_dma_get_tx_stats(struct b43_wldev *dev,
@@ -1470,17 +1461,14 @@ void b43_dma_get_tx_stats(struct b43_wld
 {
 	const int nr_queues = dev->wl->hw->queues;
 	struct b43_dmaring *ring;
-	unsigned long flags;
 	int i;
 
 	for (i = 0; i < nr_queues; i++) {
 		ring = select_ring_by_priority(dev, i);
 
-		spin_lock_irqsave(&ring->lock, flags);
 		stats[i].len = ring->used_slots / TX_SLOTS_PER_FRAME;
 		stats[i].limit = ring->nr_slots / TX_SLOTS_PER_FRAME;
 		stats[i].count = ring->nr_tx_packets;
-		spin_unlock_irqrestore(&ring->lock, flags);
 	}
 }
 
@@ -1591,22 +1579,14 @@ void b43_dma_rx(struct b43_dmaring *ring
 
 static void b43_dma_tx_suspend_ring(struct b43_dmaring *ring)
 {
-	unsigned long flags;
-
-	spin_lock_irqsave(&ring->lock, flags);
 	B43_WARN_ON(!ring->tx);
 	ring->ops->tx_suspend(ring);
-	spin_unlock_irqrestore(&ring->lock, flags);
 }
 
 static void b43_dma_tx_resume_ring(struct b43_dmaring *ring)
 {
-	unsigned long flags;
-
-	spin_lock_irqsave(&ring->lock, flags);
 	B43_WARN_ON(!ring->tx);
 	ring->ops->tx_resume(ring);
-	spin_unlock_irqrestore(&ring->lock, flags);
 }
 
 void b43_dma_tx_suspend(struct b43_wldev *dev)
Index: wireless-testing/drivers/net/wireless/b43/dma.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.h	2009-08-23 13:43:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.h	2009-08-23 14:21:21.000000000 +0200
@@ -2,7 +2,6 @@
 #define B43_DMA_H_
 
 #include <linux/ieee80211.h>
-#include <linux/spinlock.h>
 
 #include "b43.h"
 
@@ -244,8 +243,6 @@ struct b43_dmaring {
 	/* The QOS priority assigned to this ring. Only used for TX rings.
 	 * This is the mac80211 "queue" value. */
 	u8 queue_prio;
-	/* Lock, only used for TX. */
-	spinlock_t lock;
 	struct b43_wldev *dev;
 #ifdef CONFIG_B43_DEBUG
 	/* Maximum number of used slots. */
Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-08-23 13:43:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-08-23 14:21:21.000000000 +0200
@@ -144,7 +144,6 @@ static struct b43_pio_txqueue *b43_setup
 	q = kzalloc(sizeof(*q), GFP_KERNEL);
 	if (!q)
 		return NULL;
-	spin_lock_init(&q->lock);
 	q->dev = dev;
 	q->rev = dev->dev->id.revision;
 	q->mmio_base = index_to_pioqueue_base(dev, index) +
@@ -179,7 +178,6 @@ static struct b43_pio_rxqueue *b43_setup
 	q = kzalloc(sizeof(*q), GFP_KERNEL);
 	if (!q)
 		return NULL;
-	spin_lock_init(&q->lock);
 	q->dev = dev;
 	q->rev = dev->dev->id.revision;
 	q->mmio_base = index_to_pioqueue_base(dev, index) +
@@ -494,7 +492,6 @@ int b43_pio_tx(struct b43_wldev *dev, st
 {
 	struct b43_pio_txqueue *q;
 	struct ieee80211_hdr *hdr;
-	unsigned long flags;
 	unsigned int hdrlen, total_len;
 	int err = 0;
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
@@ -512,20 +509,18 @@ int b43_pio_tx(struct b43_wldev *dev, st
 		q = select_queue_by_priority(dev, skb_get_queue_mapping(skb));
 	}
 
-	spin_lock_irqsave(&q->lock, flags);
-
 	hdrlen = b43_txhdr_size(dev);
 	total_len = roundup(skb->len + hdrlen, 4);
 
 	if (unlikely(total_len > q->buffer_size)) {
 		err = -ENOBUFS;
 		b43dbg(dev->wl, "PIO: TX packet longer than queue.\n");
-		goto out_unlock;
+		goto out;
 	}
 	if (unlikely(q->free_packet_slots == 0)) {
 		err = -ENOBUFS;
 		b43warn(dev->wl, "PIO: TX packet overflow.\n");
-		goto out_unlock;
+		goto out;
 	}
 	B43_WARN_ON(q->buffer_used > q->buffer_size);
 
@@ -534,7 +529,7 @@ int b43_pio_tx(struct b43_wldev *dev, st
 		err = -EBUSY;
 		ieee80211_stop_queue(dev->wl->hw, skb_get_queue_mapping(skb));
 		q->stopped = 1;
-		goto out_unlock;
+		goto out;
 	}
 
 	/* Assign the queue number to the ring (if not already done before)
@@ -548,11 +543,11 @@ int b43_pio_tx(struct b43_wldev *dev, st
 		 * anymore and must not transmit it unencrypted. */
 		dev_kfree_skb_any(skb);
 		err = 0;
-		goto out_unlock;
+		goto out;
 	}
 	if (unlikely(err)) {
 		b43err(dev->wl, "PIO transmission failure\n");
-		goto out_unlock;
+		goto out;
 	}
 	q->nr_tx_packets++;
 
@@ -564,9 +559,7 @@ int b43_pio_tx(struct b43_wldev *dev, st
 		q->stopped = 1;
 	}
 
-out_unlock:
-	spin_unlock_irqrestore(&q->lock, flags);
-
+out:
 	return err;
 }
 
@@ -583,8 +576,6 @@ void b43_pio_handle_txstatus(struct b43_
 		return;
 	B43_WARN_ON(!pack);
 
-	spin_lock_irq(&q->lock);
-
 	info = IEEE80211_SKB_CB(pack->skb);
 
 	b43_fill_txstatus_report(dev, info, status);
@@ -602,8 +593,6 @@ void b43_pio_handle_txstatus(struct b43_
 		ieee80211_wake_queue(dev->wl->hw, q->queue_prio);
 		q->stopped = 0;
 	}
-
-	spin_unlock_irq(&q->lock);
 }
 
 void b43_pio_get_tx_stats(struct b43_wldev *dev,
@@ -611,17 +600,14 @@ void b43_pio_get_tx_stats(struct b43_wld
 {
 	const int nr_queues = dev->wl->hw->queues;
 	struct b43_pio_txqueue *q;
-	unsigned long flags;
 	int i;
 
 	for (i = 0; i < nr_queues; i++) {
 		q = select_queue_by_priority(dev, i);
 
-		spin_lock_irqsave(&q->lock, flags);
 		stats[i].len = B43_PIO_MAX_NR_TXPACKETS - q->free_packet_slots;
 		stats[i].limit = B43_PIO_MAX_NR_TXPACKETS;
 		stats[i].count = q->nr_tx_packets;
-		spin_unlock_irqrestore(&q->lock, flags);
 	}
 }
 
@@ -768,9 +754,9 @@ static void b43_pio_rx_work(struct work_
 	bool stop;
 
 	do {
-		spin_lock_irq(&q->lock);
+		mutex_lock(&q->dev->wl->mutex);
 		stop = (pio_rx_frame(q) == 0);
-		spin_unlock_irq(&q->lock);
+		mutex_unlock(&q->dev->wl->mutex);
 		cond_resched();
 		if (stop)
 			break;
@@ -787,9 +773,6 @@ void b43_pio_rx(struct b43_pio_rxqueue *
 
 static void b43_pio_tx_suspend_queue(struct b43_pio_txqueue *q)
 {
-	unsigned long flags;
-
-	spin_lock_irqsave(&q->lock, flags);
 	if (q->rev >= 8) {
 		b43_piotx_write32(q, B43_PIO8_TXCTL,
 				  b43_piotx_read32(q, B43_PIO8_TXCTL)
@@ -799,14 +782,10 @@ static void b43_pio_tx_suspend_queue(str
 				  b43_piotx_read16(q, B43_PIO_TXCTL)
 				  | B43_PIO_TXCTL_SUSPREQ);
 	}
-	spin_unlock_irqrestore(&q->lock, flags);
 }
 
 static void b43_pio_tx_resume_queue(struct b43_pio_txqueue *q)
 {
-	unsigned long flags;
-
-	spin_lock_irqsave(&q->lock, flags);
 	if (q->rev >= 8) {
 		b43_piotx_write32(q, B43_PIO8_TXCTL,
 				  b43_piotx_read32(q, B43_PIO8_TXCTL)
@@ -816,7 +795,6 @@ static void b43_pio_tx_resume_queue(stru
 				  b43_piotx_read16(q, B43_PIO_TXCTL)
 				  & ~B43_PIO_TXCTL_SUSPREQ);
 	}
-	spin_unlock_irqrestore(&q->lock, flags);
 }
 
 void b43_pio_tx_suspend(struct b43_wldev *dev)
Index: wireless-testing/drivers/net/wireless/b43/pio.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.h	2009-08-23 13:43:13.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.h	2009-08-23 14:21:21.000000000 +0200
@@ -70,7 +70,6 @@ struct b43_pio_txpacket {
 
 struct b43_pio_txqueue {
 	struct b43_wldev *dev;
-	spinlock_t lock;
 	u16 mmio_base;
 
 	/* The device queue buffer size in bytes. */
@@ -103,7 +102,6 @@ struct b43_pio_txqueue {
 
 struct b43_pio_rxqueue {
 	struct b43_wldev *dev;
-	spinlock_t lock;
 	u16 mmio_base;
 
 	/* Work to reduce latency issues on RX. */

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep  4 22:57:26 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 4 Sep 2009 22:57:26 +0200
Subject: [PATCH 5/5] b43: remove SHM spinlock
Message-ID: <200909042257.26810.mb@bu3sch.de>

This removes the SHM spinlock.
SHM is protected by wl->mutex.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-04 22:18:48.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-04 22:18:58.000000000 +0200
@@ -635,8 +635,6 @@ struct b43_wl {
 	rwlock_t tx_lock;
 	/* Lock for LEDs access. */
 	spinlock_t leds_lock;
-	/* Lock for SHM access. */
-	spinlock_t shm_lock;
 
 	/* We can only have one operating interface (802.11 core)
 	 * at a time. General information about this interface follows.
Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2009-09-04 22:18:42.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2009-09-04 22:18:58.000000000 +0200
@@ -125,7 +125,6 @@ static int shm16write__write_file(struct
 	unsigned int routing, addr, mask, set;
 	u16 val;
 	int res;
-	unsigned long flags;
 
 	res = sscanf(buf, "0x%X 0x%X 0x%X 0x%X",
 		     &routing, &addr, &mask, &set);
@@ -142,15 +141,13 @@ static int shm16write__write_file(struct
 	if ((mask > 0xFFFF) || (set > 0xFFFF))
 		return -E2BIG;
 
-	spin_lock_irqsave(&dev->wl->shm_lock, flags);
 	if (mask == 0)
 		val = 0;
 	else
-		val = __b43_shm_read16(dev, routing, addr);
+		val = b43_shm_read16(dev, routing, addr);
 	val &= mask;
 	val |= set;
-	__b43_shm_write16(dev, routing, addr, val);
-	spin_unlock_irqrestore(&dev->wl->shm_lock, flags);
+	b43_shm_write16(dev, routing, addr, val);
 
 	return 0;
 }
@@ -204,7 +201,6 @@ static int shm32write__write_file(struct
 	unsigned int routing, addr, mask, set;
 	u32 val;
 	int res;
-	unsigned long flags;
 
 	res = sscanf(buf, "0x%X 0x%X 0x%X 0x%X",
 		     &routing, &addr, &mask, &set);
@@ -221,15 +217,13 @@ static int shm32write__write_file(struct
 	if ((mask > 0xFFFFFFFF) || (set > 0xFFFFFFFF))
 		return -E2BIG;
 
-	spin_lock_irqsave(&dev->wl->shm_lock, flags);
 	if (mask == 0)
 		val = 0;
 	else
-		val = __b43_shm_read32(dev, routing, addr);
+		val = b43_shm_read32(dev, routing, addr);
 	val &= mask;
 	val |= set;
-	__b43_shm_write32(dev, routing, addr, val);
-	spin_unlock_irqrestore(&dev->wl->shm_lock, flags);
+	b43_shm_write32(dev, routing, addr, val);
 
 	return 0;
 }
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-04 22:18:54.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-04 22:18:58.000000000 +0200
@@ -390,7 +390,7 @@ static inline void b43_shm_control_word(
 	b43_write32(dev, B43_MMIO_SHM_CONTROL, control);
 }
 
-u32 __b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
+u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
 {
 	u32 ret;
 
@@ -413,20 +413,7 @@ out:
 	return ret;
 }
 
-u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset)
-{
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
-	u32 ret;
-
-	spin_lock_irqsave(&wl->shm_lock, flags);
-	ret = __b43_shm_read32(dev, routing, offset);
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-
-	return ret;
-}
-
-u16 __b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset)
+u16 b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset)
 {
 	u16 ret;
 
@@ -447,20 +434,7 @@ out:
 	return ret;
 }
 
-u16 b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset)
-{
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
-	u16 ret;
-
-	spin_lock_irqsave(&wl->shm_lock, flags);
-	ret = __b43_shm_read16(dev, routing, offset);
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-
-	return ret;
-}
-
-void __b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
+void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
 {
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
@@ -480,17 +454,7 @@ void __b43_shm_write32(struct b43_wldev 
 	b43_write32(dev, B43_MMIO_SHM_DATA, value);
 }
 
-void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value)
-{
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
-
-	spin_lock_irqsave(&wl->shm_lock, flags);
-	__b43_shm_write32(dev, routing, offset, value);
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-}
-
-void __b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
+void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
 {
 	if (routing == B43_SHM_SHARED) {
 		B43_WARN_ON(offset & 0x0001);
@@ -506,16 +470,6 @@ void __b43_shm_write16(struct b43_wldev 
 	b43_write16(dev, B43_MMIO_SHM_DATA, value);
 }
 
-void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value)
-{
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
-
-	spin_lock_irqsave(&wl->shm_lock, flags);
-	__b43_shm_write16(dev, routing, offset, value);
-	spin_unlock_irqrestore(&wl->shm_lock, flags);
-}
-
 /* Read HostFlags */
 u64 b43_hf_read(struct b43_wldev *dev)
 {
@@ -4866,7 +4820,6 @@ static int b43_wireless_init(struct ssb_
 	/* Initialize struct b43_wl */
 	wl->hw = hw;
 	spin_lock_init(&wl->leds_lock);
-	spin_lock_init(&wl->shm_lock);
 	mutex_init(&wl->mutex);
 	spin_lock_init(&wl->hardirq_lock);
 	INIT_LIST_HEAD(&wl->devlist);
Index: wireless-testing/drivers/net/wireless/b43/main.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.h	2009-09-04 22:15:29.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.h	2009-09-04 22:18:58.000000000 +0200
@@ -112,13 +112,9 @@ void b43_tsf_read(struct b43_wldev *dev,
 void b43_tsf_write(struct b43_wldev *dev, u64 tsf);
 
 u32 b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset);
-u32 __b43_shm_read32(struct b43_wldev *dev, u16 routing, u16 offset);
 u16 b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset);
-u16 __b43_shm_read16(struct b43_wldev *dev, u16 routing, u16 offset);
 void b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value);
-void __b43_shm_write32(struct b43_wldev *dev, u16 routing, u16 offset, u32 value);
 void b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value);
-void __b43_shm_write16(struct b43_wldev *dev, u16 routing, u16 offset, u16 value);
 
 u64 b43_hf_read(struct b43_wldev *dev);
 void b43_hf_write(struct b43_wldev *dev, u64 value);

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Sep  5 18:20:21 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 05 Sep 2009 11:20:21 -0500
Subject: [PATCH 0/5] b43: Prepare driver for sleeping busses
In-Reply-To: <200909042247.37655.mb@bu3sch.de>
References: <200909042247.37655.mb@bu3sch.de>
Message-ID: <4AA28FC5.6030508@lwfinger.net>

Michael Buesch wrote:
> This patchset is the first series to remove atomic sections
> from the b43 driver to allow running b43 on a slow bus like
> SDIO that needs to sleep for register accesses.

I have installed this patch set and find no problems. It compiles
correctly after each step is installed, which ensures proper
bisection. The code appears to work correctly.

I also tested the stand-alone version of interrupt threading without
problems.

Tested-by: Larry Finger <Larry.Finger at lwfinger.net>


From mb at bu3sch.de  Sun Sep  6 12:46:59 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 12:46:59 +0200
Subject: [PATCH RFT] b43: Fix suspend/resume
Message-ID: <200909061247.00200.mb@bu3sch.de>

This patch is supposed to fix suspend/resume on b43.
It also fixes various locking bugs in the RNG and LED code.

Please test this code for various issues, including:
* Are your LEDs still working as expected?
* Turn on CONFIG_B43_DEBUG and CONFIG_SSB_DEBUG. Do you see error messages?
* Is the connection alife before suspend and after resume?
* testtesttesttest

This patch has to be applied on top of the patchset I sent recently:
"[PATCH 0/5] b43: Prepare driver for sleeping busses"

A quilt series including all those patches is available here:
http://bu3sch.de/patches/wireless-testing/20090906-1240/mb-wl-20090906-1240.tar.bz2
(Apply up to including 006-b43-fix-suspend.patch)

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-05 12:31:03.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-06 12:40:03.000000000 +0200
@@ -3006,14 +3006,18 @@ static void b43_security_init(struct b43
 static int b43_rng_read(struct hwrng *rng, u32 *data)
 {
 	struct b43_wl *wl = (struct b43_wl *)rng->priv;
+	struct b43_wldev *dev;
+	int count = -ENODEV;
 
-	/* FIXME: We need to take wl->mutex here to make sure the device
-	 * is not going away from under our ass. However it could deadlock
-	 * with hwrng internal locking. */
-
-	*data = b43_read16(wl->current_dev, B43_MMIO_RNG);
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (likely(dev && b43_status(dev) >= B43_STAT_INITIALIZED)) {
+		*data = b43_read16(dev, B43_MMIO_RNG);
+		count = sizeof(u16);
+	}
+	mutex_unlock(&wl->mutex);
 
-	return (sizeof(u16));
+	return count;
 }
 #endif /* CONFIG_B43_HWRNG */
 
@@ -3839,6 +3843,7 @@ redo:
 
 	b43_mac_suspend(dev);
 	free_irq(dev->dev->irq, dev);
+	b43_leds_exit(dev);
 	b43dbg(wl, "Wireless interface stopped\n");
 
 	return dev;
@@ -3870,8 +3875,10 @@ static int b43_wireless_core_start(struc
 	/* Start maintainance work */
 	b43_periodic_tasks_setup(dev);
 
+	b43_leds_init(dev);
+
 	b43dbg(dev->wl, "Wireless interface started\n");
-      out:
+out:
 	return err;
 }
 
@@ -4144,10 +4151,6 @@ static void b43_wireless_core_exit(struc
 	macctl |= B43_MACCTL_PSM_JMP0;
 	b43_write32(dev, B43_MMIO_MACCTL, macctl);
 
-	if (!dev->suspend_in_progress) {
-		b43_leds_exit(dev);
-		b43_rng_exit(dev->wl);
-	}
 	b43_dma_free(dev);
 	b43_pio_free(dev);
 	b43_chip_exit(dev);
@@ -4164,7 +4167,6 @@ static void b43_wireless_core_exit(struc
 /* Initialize a wireless core */
 static int b43_wireless_core_init(struct b43_wldev *dev)
 {
-	struct b43_wl *wl = dev->wl;
 	struct ssb_bus *bus = dev->dev->bus;
 	struct ssb_sprom *sprom = &bus->sprom;
 	struct b43_phy *phy = &dev->phy;
@@ -4264,13 +4266,9 @@ static int b43_wireless_core_init(struct
 	ssb_bus_powerup(bus, !(sprom->boardflags_lo & B43_BFL_XTAL_NOSLOW));
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	if (!dev->suspend_in_progress)
-		b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-	if (!dev->suspend_in_progress)
-		b43_leds_init(dev);
 out:
 	return err;
 
@@ -4819,7 +4817,6 @@ static int b43_wireless_init(struct ssb_
 
 	/* Initialize struct b43_wl */
 	wl->hw = hw;
-	spin_lock_init(&wl->leds_lock);
 	mutex_init(&wl->mutex);
 	spin_lock_init(&wl->hardirq_lock);
 	INIT_LIST_HEAD(&wl->devlist);
@@ -4860,6 +4857,8 @@ static int b43_probe(struct ssb_device *
 		err = ieee80211_register_hw(wl->hw);
 		if (err)
 			goto err_one_core_detach;
+		b43_leds_register(wl->current_dev);
+		b43_rng_init(wl);
 	}
 
       out:
@@ -4888,12 +4887,16 @@ static void b43_remove(struct ssb_device
 		 * might have modified it. Restoring is important, so the networking
 		 * stack can properly free resources. */
 		wl->hw->queues = wl->mac80211_initially_registered_queues;
+		wl->current_dev = NULL;
+		cancel_work_sync(&wl->leds.work);
 		ieee80211_unregister_hw(wl->hw);
 	}
 
 	b43_one_core_detach(dev);
 
 	if (list_empty(&wl->devlist)) {
+		b43_rng_exit(wl);
+		b43_leds_unregister(wldev);
 		/* Last core on the chip unregistered.
 		 * We can destroy common struct b43_wl.
 		 */
@@ -4911,74 +4914,11 @@ void b43_controller_restart(struct b43_w
 	ieee80211_queue_work(dev->wl->hw, &dev->restart_work);
 }
 
-#ifdef CONFIG_PM
-
-static int b43_suspend(struct ssb_device *dev, pm_message_t state)
-{
-	struct b43_wldev *wldev = ssb_get_drvdata(dev);
-	struct b43_wl *wl = wldev->wl;
-
-	b43dbg(wl, "Suspending...\n");
-
-	mutex_lock(&wl->mutex);
-	wldev->suspend_in_progress = true;
-	wldev->suspend_init_status = b43_status(wldev);
-	if (wldev->suspend_init_status >= B43_STAT_STARTED)
-		wldev = b43_wireless_core_stop(wldev);
-	if (wldev && wldev->suspend_init_status >= B43_STAT_INITIALIZED)
-		b43_wireless_core_exit(wldev);
-	mutex_unlock(&wl->mutex);
-
-	b43dbg(wl, "Device suspended.\n");
-
-	return 0;
-}
-
-static int b43_resume(struct ssb_device *dev)
-{
-	struct b43_wldev *wldev = ssb_get_drvdata(dev);
-	struct b43_wl *wl = wldev->wl;
-	int err = 0;
-
-	b43dbg(wl, "Resuming...\n");
-
-	mutex_lock(&wl->mutex);
-	if (wldev->suspend_init_status >= B43_STAT_INITIALIZED) {
-		err = b43_wireless_core_init(wldev);
-		if (err) {
-			b43err(wl, "Resume failed at core init\n");
-			goto out;
-		}
-	}
-	if (wldev->suspend_init_status >= B43_STAT_STARTED) {
-		err = b43_wireless_core_start(wldev);
-		if (err) {
-			b43_leds_exit(wldev);
-			b43_rng_exit(wldev->wl);
-			b43_wireless_core_exit(wldev);
-			b43err(wl, "Resume failed at core start\n");
-			goto out;
-		}
-	}
-	b43dbg(wl, "Device resumed.\n");
- out:
-	wldev->suspend_in_progress = false;
-	mutex_unlock(&wl->mutex);
-	return err;
-}
-
-#else /* CONFIG_PM */
-# define b43_suspend	NULL
-# define b43_resume	NULL
-#endif /* CONFIG_PM */
-
 static struct ssb_driver b43_ssb_driver = {
 	.name		= KBUILD_MODNAME,
 	.id_table	= b43_ssb_tbl,
 	.probe		= b43_probe,
 	.remove		= b43_remove,
-	.suspend	= b43_suspend,
-	.resume		= b43_resume,
 };
 
 static void b43_print_driverinfo(void)
Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-05 12:31:03.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-05 20:08:22.000000000 +0200
@@ -629,13 +629,6 @@ struct b43_wl {
 	 * from the mac80211 subsystem. */
 	u16 mac80211_initially_registered_queues;
 
-	/* R/W lock for data transmission.
-	 * Transmissions on 2+ queues can run concurrently, but somebody else
-	 * might sync with TX by write_lock_irqsave()'ing. */
-	rwlock_t tx_lock;
-	/* Lock for LEDs access. */
-	spinlock_t leds_lock;
-
 	/* We can only have one operating interface (802.11 core)
 	 * at a time. General information about this interface follows.
 	 */
@@ -686,6 +679,9 @@ struct b43_wl {
 	struct work_struct tx_work;
 	/* Queue of packets to be transmitted. */
 	struct sk_buff_head tx_queue;
+
+	/* The device LEDs. */
+	struct b43_leds leds;
 };
 
 /* The type of the firmware file. */
@@ -768,13 +764,10 @@ struct b43_wldev {
 	/* The device initialization status.
 	 * Use b43_status() to query. */
 	atomic_t __init_status;
-	/* Saved init status for handling suspend. */
-	int suspend_init_status;
 
 	bool bad_frames_preempt;	/* Use "Bad Frames Preemption" (default off) */
 	bool dfq_valid;		/* Directed frame queue valid (IBSS PS mode, ATIM) */
 	bool radio_hw_enable;	/* saved state of radio hardware enabled state */
-	bool suspend_in_progress;	/* TRUE, if we are in a suspend/resume cycle */
 	bool qos_enabled;		/* TRUE, if QoS is used. */
 	bool hwcrypto_enabled;		/* TRUE, if HW crypto acceleration is enabled. */
 
@@ -794,12 +787,6 @@ struct b43_wldev {
 	/* Various statistics about the physical device. */
 	struct b43_stats stats;
 
-	/* The device LEDs. */
-	struct b43_led led_tx;
-	struct b43_led led_rx;
-	struct b43_led led_assoc;
-	struct b43_led led_radio;
-
 	/* Reason code of the last interrupt. */
 	u32 irq_reason;
 	u32 dma_reason[6];
Index: wireless-testing/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.c	2009-07-28 22:53:07.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.c	2009-09-05 21:56:03.000000000 +0200
@@ -34,57 +34,91 @@
 static void b43_led_turn_on(struct b43_wldev *dev, u8 led_index,
 			    bool activelow)
 {
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
 	u16 ctl;
 
-	spin_lock_irqsave(&wl->leds_lock, flags);
 	ctl = b43_read16(dev, B43_MMIO_GPIO_CONTROL);
 	if (activelow)
 		ctl &= ~(1 << led_index);
 	else
 		ctl |= (1 << led_index);
 	b43_write16(dev, B43_MMIO_GPIO_CONTROL, ctl);
-	spin_unlock_irqrestore(&wl->leds_lock, flags);
 }
 
 static void b43_led_turn_off(struct b43_wldev *dev, u8 led_index,
 			     bool activelow)
 {
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
 	u16 ctl;
 
-	spin_lock_irqsave(&wl->leds_lock, flags);
 	ctl = b43_read16(dev, B43_MMIO_GPIO_CONTROL);
 	if (activelow)
 		ctl |= (1 << led_index);
 	else
 		ctl &= ~(1 << led_index);
 	b43_write16(dev, B43_MMIO_GPIO_CONTROL, ctl);
-	spin_unlock_irqrestore(&wl->leds_lock, flags);
 }
 
-/* Callback from the LED subsystem. */
-static void b43_led_brightness_set(struct led_classdev *led_dev,
-				   enum led_brightness brightness)
+static void b43_led_update(struct b43_wldev *dev,
+			   struct b43_led *led)
 {
-	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
-	struct b43_wldev *dev = led->dev;
 	bool radio_enabled;
+	bool turn_on;
 
-	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED))
+	if (!led->wl)
 		return;
 
-	/* Checking the radio-enabled status here is slightly racy,
-	 * but we want to avoid the locking overhead and we don't care
-	 * whether the LED has the wrong state for a second. */
 	radio_enabled = (dev->phy.radio_on && dev->radio_hw_enable);
 
-	if (brightness == LED_OFF || !radio_enabled)
-		b43_led_turn_off(dev, led->index, led->activelow);
+	/* The led->state read is racy, but we don't care. In case we raced
+	 * with the brightness_set handler, we will be called again soon
+	 * to fixup our state. */
+	if (radio_enabled)
+		turn_on = atomic_read(&led->state) != LED_OFF;
 	else
+		turn_on = 0;
+	if (turn_on == led->hw_state)
+		return;
+	led->hw_state = turn_on;
+
+	if (turn_on)
 		b43_led_turn_on(dev, led->index, led->activelow);
+	else
+		b43_led_turn_off(dev, led->index, led->activelow);
+}
+
+static void b43_leds_work(struct work_struct *work)
+{
+	struct b43_leds *leds = container_of(work, struct b43_leds, work);
+	struct b43_wl *wl = container_of(leds, struct b43_wl, leds);
+	struct b43_wldev *dev;
+
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (unlikely(!dev || b43_status(dev) < B43_STAT_STARTED))
+		goto out_unlock;
+
+	b43_led_update(dev, &wl->leds.led_tx);
+	b43_led_update(dev, &wl->leds.led_rx);
+	b43_led_update(dev, &wl->leds.led_radio);
+	b43_led_update(dev, &wl->leds.led_assoc);
+
+out_unlock:
+	mutex_unlock(&wl->mutex);
+}
+
+/* Callback from the LED subsystem. */
+static void b43_led_brightness_set(struct led_classdev *led_dev,
+				   enum led_brightness brightness)
+{
+	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
+	struct b43_wl *wl = led->wl;
+
+	/* The check for current_dev is only needed while unregistering,
+	 * so it is sequencial and does not race. But we must not dereference
+	 * current_dev here. */
+	if (likely(wl->current_dev)) {
+		atomic_set(&led->state, brightness);
+		ieee80211_queue_work(wl->hw, &wl->leds.work);
+	}
 }
 
 static int b43_register_led(struct b43_wldev *dev, struct b43_led *led,
@@ -93,15 +127,15 @@ static int b43_register_led(struct b43_w
 {
 	int err;
 
-	b43_led_turn_off(dev, led_index, activelow);
-	if (led->dev)
+	if (led->wl)
 		return -EEXIST;
 	if (!default_trigger)
 		return -EINVAL;
-	led->dev = dev;
+	led->wl = dev->wl;
 	led->index = led_index;
 	led->activelow = activelow;
 	strncpy(led->name, name, sizeof(led->name));
+	atomic_set(&led->state, 0);
 
 	led->led_dev.name = led->name;
 	led->led_dev.default_trigger = default_trigger;
@@ -110,19 +144,19 @@ static int b43_register_led(struct b43_w
 	err = led_classdev_register(dev->dev->dev, &led->led_dev);
 	if (err) {
 		b43warn(dev->wl, "LEDs: Failed to register %s\n", name);
-		led->dev = NULL;
+		led->wl = NULL;
 		return err;
 	}
+
 	return 0;
 }
 
 static void b43_unregister_led(struct b43_led *led)
 {
-	if (!led->dev)
+	if (!led->wl)
 		return;
 	led_classdev_unregister(&led->led_dev);
-	b43_led_turn_off(led->dev, led->index, led->activelow);
-	led->dev = NULL;
+	led->wl = NULL;
 }
 
 static void b43_map_led(struct b43_wldev *dev,
@@ -137,24 +171,20 @@ static void b43_map_led(struct b43_wldev
 	 * generic LED triggers. */
 	switch (behaviour) {
 	case B43_LED_INACTIVE:
-		break;
 	case B43_LED_OFF:
-		b43_led_turn_off(dev, led_index, activelow);
-		break;
 	case B43_LED_ON:
-		b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_ACTIVITY:
 	case B43_LED_TRANSFER:
 	case B43_LED_APTRANSFER:
 		snprintf(name, sizeof(name),
 			 "b43-%s::tx", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_tx, name,
+		b43_register_led(dev, &dev->wl->leds.led_tx, name,
 				 ieee80211_get_tx_led_name(hw),
 				 led_index, activelow);
 		snprintf(name, sizeof(name),
 			 "b43-%s::rx", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_rx, name,
+		b43_register_led(dev, &dev->wl->leds.led_rx, name,
 				 ieee80211_get_rx_led_name(hw),
 				 led_index, activelow);
 		break;
@@ -164,18 +194,15 @@ static void b43_map_led(struct b43_wldev
 	case B43_LED_MODE_BG:
 		snprintf(name, sizeof(name),
 			 "b43-%s::radio", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_radio, name,
+		b43_register_led(dev, &dev->wl->leds.led_radio, name,
 				 ieee80211_get_radio_led_name(hw),
 				 led_index, activelow);
-		/* Sync the RF-kill LED state with radio and switch states. */
-		if (dev->phy.radio_on && b43_is_hw_radio_enabled(dev))
-			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
 		snprintf(name, sizeof(name),
 			 "b43-%s::assoc", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_assoc, name,
+		b43_register_led(dev, &dev->wl->leds.led_assoc, name,
 				 ieee80211_get_assoc_led_name(hw),
 				 led_index, activelow);
 		break;
@@ -186,58 +213,140 @@ static void b43_map_led(struct b43_wldev
 	}
 }
 
-void b43_leds_init(struct b43_wldev *dev)
+static void b43_led_get_sprominfo(struct b43_wldev *dev,
+				  unsigned int led_index,
+				  enum b43_led_behaviour *behaviour,
+				  bool *activelow)
 {
 	struct ssb_bus *bus = dev->dev->bus;
 	u8 sprom[4];
-	int i;
-	enum b43_led_behaviour behaviour;
-	bool activelow;
 
 	sprom[0] = bus->sprom.gpio0;
 	sprom[1] = bus->sprom.gpio1;
 	sprom[2] = bus->sprom.gpio2;
 	sprom[3] = bus->sprom.gpio3;
 
-	for (i = 0; i < 4; i++) {
-		if (sprom[i] == 0xFF) {
-			/* There is no LED information in the SPROM
-			 * for this LED. Hardcode it here. */
-			activelow = 0;
-			switch (i) {
-			case 0:
-				behaviour = B43_LED_ACTIVITY;
-				activelow = 1;
-				if (bus->boardinfo.vendor == PCI_VENDOR_ID_COMPAQ)
-					behaviour = B43_LED_RADIO_ALL;
-				break;
-			case 1:
-				behaviour = B43_LED_RADIO_B;
-				if (bus->boardinfo.vendor == PCI_VENDOR_ID_ASUSTEK)
-					behaviour = B43_LED_ASSOC;
-				break;
-			case 2:
-				behaviour = B43_LED_RADIO_A;
-				break;
-			case 3:
-				behaviour = B43_LED_OFF;
-				break;
-			default:
-				B43_WARN_ON(1);
-				return;
-			}
+	if (sprom[led_index] == 0xFF) {
+		/* There is no LED information in the SPROM
+		 * for this LED. Hardcode it here. */
+		*activelow = 0;
+		switch (led_index) {
+		case 0:
+			*behaviour = B43_LED_ACTIVITY;
+			*activelow = 1;
+			if (bus->boardinfo.vendor == PCI_VENDOR_ID_COMPAQ)
+				*behaviour = B43_LED_RADIO_ALL;
+			break;
+		case 1:
+			*behaviour = B43_LED_RADIO_B;
+			if (bus->boardinfo.vendor == PCI_VENDOR_ID_ASUSTEK)
+				*behaviour = B43_LED_ASSOC;
+			break;
+		case 2:
+			*behaviour = B43_LED_RADIO_A;
+			break;
+		case 3:
+			*behaviour = B43_LED_OFF;
+			break;
+		default:
+			B43_WARN_ON(1);
+			return;
+		}
+	} else {
+		*behaviour = sprom[led_index] & B43_LED_BEHAVIOUR;
+		*activelow = !!(sprom[led_index] & B43_LED_ACTIVELOW);
+	}
+}
+
+void b43_leds_init(struct b43_wldev *dev)
+{
+	struct b43_led *led;
+	unsigned int i;
+	enum b43_led_behaviour behaviour;
+	bool activelow;
+
+	/* Sync the RF-kill LED state (if we have one) with radio and switch states. */
+	led = &dev->wl->leds.led_radio;
+	if (led->wl) {
+		if (dev->phy.radio_on && b43_is_hw_radio_enabled(dev)) {
+			b43_led_turn_on(dev, led->index, led->activelow);
+			led->hw_state = 1;
+			atomic_set(&led->state, 1);
 		} else {
-			behaviour = sprom[i] & B43_LED_BEHAVIOUR;
-			activelow = !!(sprom[i] & B43_LED_ACTIVELOW);
+			b43_led_turn_off(dev, led->index, led->activelow);
+			led->hw_state = 0;
+			atomic_set(&led->state, 0);
+		}
+	}
+
+	/* Initialize TX/RX/ASSOC leds */
+	led = &dev->wl->leds.led_tx;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+	led = &dev->wl->leds.led_rx;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+	led = &dev->wl->leds.led_assoc;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+
+	/* Initialize other LED states. */
+	for (i = 0; i < B43_MAX_NR_LEDS; i++) {
+		b43_led_get_sprominfo(dev, i, &behaviour, &activelow);
+		switch (behaviour) {
+		case B43_LED_OFF:
+			b43_led_turn_off(dev, i, activelow);
+			break;
+		case B43_LED_ON:
+			b43_led_turn_on(dev, i, activelow);
+			break;
+		default:
+			/* Leave others as-is. */
+			break;
 		}
-		b43_map_led(dev, i, behaviour, activelow);
 	}
 }
 
 void b43_leds_exit(struct b43_wldev *dev)
 {
-	b43_unregister_led(&dev->led_tx);
-	b43_unregister_led(&dev->led_rx);
-	b43_unregister_led(&dev->led_assoc);
-	b43_unregister_led(&dev->led_radio);
+	struct b43_leds *leds = &dev->wl->leds;
+
+	b43_led_turn_off(dev, leds->led_tx.index, leds->led_tx.activelow);
+	b43_led_turn_off(dev, leds->led_rx.index, leds->led_rx.activelow);
+	b43_led_turn_off(dev, leds->led_assoc.index, leds->led_assoc.activelow);
+	b43_led_turn_off(dev, leds->led_radio.index, leds->led_radio.activelow);
+}
+
+void b43_leds_register(struct b43_wldev *dev)
+{
+	unsigned int i;
+	enum b43_led_behaviour behaviour;
+	bool activelow;
+
+	INIT_WORK(&dev->wl->leds.work, b43_leds_work);
+
+	/* Register the LEDs to the LED subsystem. */
+	for (i = 0; i < B43_MAX_NR_LEDS; i++) {
+		b43_led_get_sprominfo(dev, i, &behaviour, &activelow);
+		b43_map_led(dev, i, behaviour, activelow);
+	}
+}
+
+void b43_leds_unregister(struct b43_wldev *dev)
+{
+	struct b43_leds *leds = &dev->wl->leds;
+
+	b43_unregister_led(&leds->led_tx);
+	b43_unregister_led(&leds->led_rx);
+	b43_unregister_led(&leds->led_assoc);
+	b43_unregister_led(&leds->led_radio);
 }
Index: wireless-testing/drivers/net/wireless/b43/leds.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.h	2008-02-15 21:39:56.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/leds.h	2009-09-05 20:43:31.000000000 +0200
@@ -7,12 +7,13 @@ struct b43_wldev;
 
 #include <linux/types.h>
 #include <linux/leds.h>
+#include <linux/workqueue.h>
 
 
 #define B43_LED_MAX_NAME_LEN	31
 
 struct b43_led {
-	struct b43_wldev *dev;
+	struct b43_wl *wl;
 	/* The LED class device */
 	struct led_classdev led_dev;
 	/* The index number of the LED. */
@@ -22,8 +23,23 @@ struct b43_led {
 	bool activelow;
 	/* The unique name string for this LED device. */
 	char name[B43_LED_MAX_NAME_LEN + 1];
+	/* The current status of the LED. This is updated locklessly. */
+	atomic_t state;
+	/* The active state in hardware. */
+	bool hw_state;
 };
 
+struct b43_leds {
+	struct b43_led led_tx;
+	struct b43_led led_rx;
+	struct b43_led led_radio;
+	struct b43_led led_assoc;
+
+	struct work_struct work;
+};
+
+#define B43_MAX_NR_LEDS			4
+
 #define B43_LED_BEHAVIOUR		0x7F
 #define B43_LED_ACTIVELOW		0x80
 /* LED behaviour values */
@@ -42,6 +58,8 @@ enum b43_led_behaviour {
 	B43_LED_INACTIVE,
 };
 
+void b43_leds_register(struct b43_wldev *dev);
+void b43_leds_unregister(struct b43_wldev *dev);
 void b43_leds_init(struct b43_wldev *dev);
 void b43_leds_exit(struct b43_wldev *dev);
 
@@ -49,10 +67,16 @@ void b43_leds_exit(struct b43_wldev *dev
 #else /* CONFIG_B43_LEDS */
 /* LED support disabled */
 
-struct b43_led {
+struct b43_leds {
 	/* empty */
 };
 
+static inline void b43_leds_register(struct b43_wldev *dev)
+{
+}
+static inline void b43_leds_unregister(struct b43_wldev *dev)
+{
+}
 static inline void b43_leds_init(struct b43_wldev *dev)
 {
 }

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Sep  6 14:49:43 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 14:49:43 +0200
Subject: [PATCH] b43: PCMCIA is not experimental anymore
Message-ID: <200909061449.45455.mb@bu3sch.de>

PCMCIA support works well and is not experimental anymore.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---
 drivers/net/wireless/b43/Kconfig |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- wireless-testing.orig/drivers/net/wireless/b43/Kconfig
+++ wireless-testing/drivers/net/wireless/b43/Kconfig
@@ -42,8 +42,8 @@ config B43_PCICORE_AUTOSELECT
 	default y
 
 config B43_PCMCIA
-	bool "Broadcom 43xx PCMCIA device support (EXPERIMENTAL)"
-	depends on B43 && SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL
+	bool "Broadcom 43xx PCMCIA device support"
+	depends on B43 && SSB_PCMCIAHOST_POSSIBLE
 	select SSB_PCMCIAHOST
 	---help---
 	  Broadcom 43xx PCMCIA device support.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Sep  6 15:42:45 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 15:42:45 +0200
Subject: [PATCH] b43: Really disable QoS, if requested
Message-ID: <200909061542.46256.mb@bu3sch.de>

Currently, when QoS-disable is requested, we would leave QoS enabled
in firmware, but only queue frames on one queue.
Change that and also tell firmware about disabled QoS, so it
completely ignores all the QoS parameters. Also don't upload the parameters,
if QoS is disabled.

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-06 15:37:47.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-06 15:38:03.000000000 +0200
@@ -3093,7 +3093,6 @@ static int b43_op_tx(struct ieee80211_hw
 	return NETDEV_TX_OK;
 }
 
-/* Locking: wl->irq_lock */
 static void b43_qos_params_upload(struct b43_wldev *dev,
 				  const struct ieee80211_tx_queue_params *p,
 				  u16 shm_offset)
@@ -3102,6 +3101,9 @@ static void b43_qos_params_upload(struct
 	int bslots, tmp;
 	unsigned int i;
 
+	if (!dev->qos_enabled)
+		return;
+
 	bslots = b43_read16(dev, B43_MMIO_RNG) & p->cw_min;
 
 	memset(&params, 0, sizeof(params));
@@ -3147,6 +3149,9 @@ static void b43_qos_upload_all(struct b4
 	struct b43_qos_params *params;
 	unsigned int i;
 
+	if (!dev->qos_enabled)
+		return;
+
 	BUILD_BUG_ON(ARRAY_SIZE(b43_qos_shm_offsets) !=
 		     ARRAY_SIZE(wl->qos_params));
 
@@ -3206,6 +3211,16 @@ static void b43_qos_clear(struct b43_wl 
 /* Initialize the core's QOS capabilities */
 static void b43_qos_init(struct b43_wldev *dev)
 {
+	if (!dev->qos_enabled) {
+		/* Disable QOS support. */
+		b43_hf_write(dev, b43_hf_read(dev) & ~B43_HF_EDCF);
+		b43_write16(dev, B43_MMIO_IFSCTL,
+			    b43_read16(dev, B43_MMIO_IFSCTL)
+			    & ~B43_MMIO_IFSCTL_USE_EDCF);
+		b43dbg(dev->wl, "QoS disabled\n");
+		return;
+	}
+
 	/* Upload the current QOS parameters. */
 	b43_qos_upload_all(dev);
 
@@ -3214,6 +3229,7 @@ static void b43_qos_init(struct b43_wlde
 	b43_write16(dev, B43_MMIO_IFSCTL,
 		    b43_read16(dev, B43_MMIO_IFSCTL)
 		    | B43_MMIO_IFSCTL_USE_EDCF);
+	b43dbg(dev->wl, "QoS enabled\n");
 }
 
 static int b43_op_conf_tx(struct ieee80211_hw *hw, u16 _queue,

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Sep  6 16:18:58 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 16:18:58 +0200
Subject: [PATCH] b43: Fix sparse warning in hw-tkip code
Message-ID: <200909061618.58584.mb@bu3sch.de>

This fixes a sparse warning in the hardware-TKIP code:

drivers/net/wireless/b43/xmit.c:272:18: warning: incorrect type in assignment (different base types)
drivers/net/wireless/b43/xmit.c:272:18:    expected unsigned short [unsigned] [short] <noident>
drivers/net/wireless/b43/xmit.c:272:18:    got restricted unsigned short [usertype] <noident>

The code should work correctly with and without this patch applied.

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-testing/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/xmit.c	2009-09-06 16:10:22.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/xmit.c	2009-09-06 16:17:08.000000000 +0200
@@ -267,11 +267,11 @@ int b43_generate_txhdr(struct b43_wldev 
 			 */
 			ieee80211_get_tkip_key(info->control.hw_key, skb_frag,
 					IEEE80211_TKIP_P1_KEY, (u8*)phase1key);
-			/* phase1key is in host endian */
-			for (i = 0; i < 5; i++)
-				phase1key[i] = cpu_to_le16(phase1key[i]);
-
-			memcpy(txhdr->iv, phase1key, 10);
+			/* phase1key is in host endian. Copy to little-endian txhdr->iv. */
+			for (i = 0; i < 5; i++) {
+				txhdr->iv[i * 2 + 0] = phase1key[i];
+				txhdr->iv[i * 2 + 1] = phase1key[i] >> 8;
+			}
 			/* iv16 */
 			memcpy(txhdr->iv + 10, ((u8 *) wlhdr) + wlhdr_len, 3);
 		} else {

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Sep  6 20:07:26 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 20:07:26 +0200
Subject: [COMPAT PATCH] b43: Threaded interrupts wrapper
Message-ID: <200909062007.27279.mb@bu3sch.de>

A patch converting b43 to threaded interrupts will be merged soon.
This will completely break b43 on compat-wireless, because working
threaded IRQ support requires kernel >= 2.6.31.

This patchset implements a workqueue based workaround wrapper, which
works on kernels with and without threaded IRQ support.

It's split up into a generic header and a b43 specific patch.
The generic header needs to be put somewhere into the compat include search
path. The b43 specific patch needs to be applied to compat-b43.
(The #include for the header file will also need to be adjusted)


-- 
Greetings, Michael.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 011-b43-use-compat-threaded-irq.patch
Type: text/x-diff
Size: 2460 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090906/44acd7ed/attachment.patch>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compat-threaded-irq.h
Type: text/x-chdr
Size: 2458 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090906/44acd7ed/attachment.h>

From netrolller.3d at gmail.com  Sun Sep  6 20:42:00 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 6 Sep 2009 20:42:00 +0200
Subject: [PATCH] b43: PCMCIA is not experimental anymore
In-Reply-To: <200909061449.45455.mb@bu3sch.de>
References: <200909061449.45455.mb@bu3sch.de>
Message-ID: <69e28c910909061142g546b4b0aqd123e8d800264505@mail.gmail.com>

On Sun, Sep 6, 2009 at 2:49 PM, Michael Buesch<mb at bu3sch.de> wrote:
> PCMCIA support works well and is not experimental anymore.
>
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
>
> ---
> ?drivers/net/wireless/b43/Kconfig | ? ?4 ++--
> ?1 file changed, 2 insertions(+), 2 deletions(-)
>
> --- wireless-testing.orig/drivers/net/wireless/b43/Kconfig
> +++ wireless-testing/drivers/net/wireless/b43/Kconfig
> @@ -42,8 +42,8 @@ config B43_PCICORE_AUTOSELECT
> ? ? ? ?default y
>
> ?config B43_PCMCIA
> - ? ? ? bool "Broadcom 43xx PCMCIA device support (EXPERIMENTAL)"
> - ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL
> + ? ? ? bool "Broadcom 43xx PCMCIA device support"
> + ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE
> ? ? ? ?select SSB_PCMCIAHOST
> ? ? ? ?---help---
> ? ? ? ? ?Broadcom 43xx PCMCIA device support.
>
> --
> Greetings, Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

This should be auto-selected depending on SSB_PCMCIAHOST_POSSIBLE (at
least if !EMBEDDED). There is no need for a separate config prompt if
it's not EXPERIMENTAL anymore.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Sep  6 20:43:32 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 20:43:32 +0200
Subject: [PATCH] b43: PCMCIA is not experimental anymore
In-Reply-To: <69e28c910909061142g546b4b0aqd123e8d800264505@mail.gmail.com>
References: <200909061449.45455.mb@bu3sch.de>
	<69e28c910909061142g546b4b0aqd123e8d800264505@mail.gmail.com>
Message-ID: <200909062043.33801.mb@bu3sch.de>

On Sunday 06 September 2009 20:42:00 G?bor Stefanik wrote:
> On Sun, Sep 6, 2009 at 2:49 PM, Michael Buesch<mb at bu3sch.de> wrote:
> > PCMCIA support works well and is not experimental anymore.
> >
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> >
> > ---
> > ?drivers/net/wireless/b43/Kconfig | ? ?4 ++--
> > ?1 file changed, 2 insertions(+), 2 deletions(-)
> >
> > --- wireless-testing.orig/drivers/net/wireless/b43/Kconfig
> > +++ wireless-testing/drivers/net/wireless/b43/Kconfig
> > @@ -42,8 +42,8 @@ config B43_PCICORE_AUTOSELECT
> > ? ? ? ?default y
> >
> > ?config B43_PCMCIA
> > - ? ? ? bool "Broadcom 43xx PCMCIA device support (EXPERIMENTAL)"
> > - ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL
> > + ? ? ? bool "Broadcom 43xx PCMCIA device support"
> > + ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE
> > ? ? ? ?select SSB_PCMCIAHOST
> > ? ? ? ?---help---
> > ? ? ? ? ?Broadcom 43xx PCMCIA device support.
> >
> > --
> > Greetings, Michael.
> > _______________________________________________
> > Bcm43xx-dev mailing list
> > Bcm43xx-dev at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >
> 
> This should be auto-selected depending on SSB_PCMCIAHOST_POSSIBLE (at
> least if !EMBEDDED). There is no need for a separate config prompt if
> it's not EXPERIMENTAL anymore.
> 

Patch please

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Sun Sep  6 21:02:20 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 6 Sep 2009 21:02:20 +0200
Subject: [PATCH] b43: PCMCIA is not experimental anymore
In-Reply-To: <200909062043.33801.mb@bu3sch.de>
References: <200909061449.45455.mb@bu3sch.de>
	<69e28c910909061142g546b4b0aqd123e8d800264505@mail.gmail.com> 
	<200909062043.33801.mb@bu3sch.de>
Message-ID: <69e28c910909061202r286244aeq84ec9ce8a145d76e@mail.gmail.com>

2009/9/6 Michael Buesch <mb at bu3sch.de>:
> On Sunday 06 September 2009 20:42:00 G?bor Stefanik wrote:
>> On Sun, Sep 6, 2009 at 2:49 PM, Michael Buesch<mb at bu3sch.de> wrote:
>> > PCMCIA support works well and is not experimental anymore.
>> >
>> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
>> >
>> > ---
>> > ?drivers/net/wireless/b43/Kconfig | ? ?4 ++--
>> > ?1 file changed, 2 insertions(+), 2 deletions(-)
>> >
>> > --- wireless-testing.orig/drivers/net/wireless/b43/Kconfig
>> > +++ wireless-testing/drivers/net/wireless/b43/Kconfig
>> > @@ -42,8 +42,8 @@ config B43_PCICORE_AUTOSELECT
>> > ? ? ? ?default y
>> >
>> > ?config B43_PCMCIA
>> > - ? ? ? bool "Broadcom 43xx PCMCIA device support (EXPERIMENTAL)"
>> > - ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL
>> > + ? ? ? bool "Broadcom 43xx PCMCIA device support"
>> > + ? ? ? depends on B43 && SSB_PCMCIAHOST_POSSIBLE
>> > ? ? ? ?select SSB_PCMCIAHOST
>> > ? ? ? ?---help---
>> > ? ? ? ? ?Broadcom 43xx PCMCIA device support.
>> >
>> > --
>> > Greetings, Michael.
>> > _______________________________________________
>> > Bcm43xx-dev mailing list
>> > Bcm43xx-dev at lists.berlios.de
>> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>> >
>>
>> This should be auto-selected depending on SSB_PCMCIAHOST_POSSIBLE (at
>> least if !EMBEDDED). There is no need for a separate config prompt if
>> it's not EXPERIMENTAL anymore.
>>
>
> Patch please
>
> --
> Greetings, Michael.
>

I need to fix my virtual machine first. (That's also why LP-PHY
development is stalled - I carelessly installed the VMware 7 beta
build I have been invited to, so that I can use all 4 CPU cores in the
VM - and the new VMware crashes on startup. Again, the VHD was not
lost, but I don't currently have the tools to read it.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sun Sep  6 23:36:31 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 6 Sep 2009 23:36:31 +0200
Subject: [PATCH 1/2] [b43-fwcutter] Firmware FW14 and FW15 are the same.
In-Reply-To: <1252272808-19274-1-git-send-email-hauke@hauke-m.de>
References: <1252272808-19274-1-git-send-email-hauke@hauke-m.de>
Message-ID: <200909062336.33659.mb@bu3sch.de>

On Sunday 06 September 2009 23:33:27 Hauke Mehrtens wrote:
> The extracted files have the same md5sum.
> The package broadcom-wl-4.178.10.4.tar.bz2 was extracted from
> wrt610n_v1.00.00.018_us.tgz as the package from the Linksys is not
> available any more. Changed the link to the
> broadcom-wl-4.178.10.4.tar.bz2 package.

One question: Why do this?


-- 
Greetings, Michael.


From hauke at hauke-m.de  Sun Sep  6 23:33:28 2009
From: hauke at hauke-m.de (Hauke Mehrtens)
Date: Sun,  6 Sep 2009 23:33:28 +0200
Subject: [PATCH 2/2] [b43-fwcutter] Remove extraction of core 4 firmware
In-Reply-To: <1252272808-19274-1-git-send-email-hauke@hauke-m.de>
References: <1252272808-19274-1-git-send-email-hauke@hauke-m.de>
Message-ID: <1252272808-19274-2-git-send-email-hauke@hauke-m.de>

Extraction of core 4 firmware was not removed for FW14 in
129d17b571722f864ae81f47d8c6c048d3d0a9df

Signed-off-by: Hauke Mehrtens <hauke at hauke-m.de>
---
 fwcutter/fwcutter_list.h |   22 ++++++++++++++++------
 1 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/fwcutter/fwcutter_list.h b/fwcutter/fwcutter_list.h
index 3cf8ea9..4f4f835 100644
--- a/fwcutter/fwcutter_list.h
+++ b/fwcutter/fwcutter_list.h
@@ -189,13 +189,17 @@ static struct extract _2dd738b8feb8b3559fd9d8fbaf3bfffc[] =
 	{ .name = "a0g1bsinitvals9", .offset = 0x94540, .type = EXT_IV, .length = 0x118 },
 	{ .name = "b0g0bsinitvals13", .offset = 0x974D0, .type = EXT_IV, .length = 0x118 },
 	{ .name = "b0g0bsinitvals5", .offset = 0x90A78, .type = EXT_IV, .length = 0x118 },
-	{ .name = "ucode4", .offset = 0x9B868, .type = EXT_UCODE_1, .length = 0x4EA0 },
-	{ .name = "b0g0initvals4", .offset = 0x8E2D8, .type = EXT_IV, .length = 0xE80 },
+/*
+ *	{ .name = "ucode4", .offset = 0x9B868, .type = EXT_UCODE_1, .length = 0x4EA0 },
+ *	{ .name = "b0g0initvals4", .offset = 0x8E2D8, .type = EXT_IV, .length = 0xE80 },
+ */
 	{ .name = "b0g0initvals13", .offset = 0x96930, .type = EXT_IV, .length = 0xB98 },
 	{ .name = "ucode14", .offset = 0xBBB1C, .type = EXT_UCODE_2, .length = 0x7910 },
 	{ .name = "a0g0initvals5", .offset = 0x90B98, .type = EXT_IV, .length = 0xA18 },
 	{ .name = "lp0bsinitvals16", .offset = 0x9B748, .type = EXT_IV, .length = 0x118 },
-	{ .name = "pcm4", .offset = 0xD4A40, .type = EXT_PCM, .length = 0x520 },
+/*
+ *	{ .name = "pcm4", .offset = 0xD4A40, .type = EXT_PCM, .length = 0x520 },
+ */
 	{ .name = "a0g1bsinitvals5", .offset = 0x920F8, .type = EXT_IV, .length = 0x118 },
 	{ .name = "n0bsinitvals11", .offset = 0x95230, .type = EXT_IV, .length = 0x118 },
 	{ .name = "n0absinitvals11", .offset = 0x95350, .type = EXT_IV, .length = 0x118 },
@@ -205,14 +209,20 @@ static struct extract _2dd738b8feb8b3559fd9d8fbaf3bfffc[] =
 	/* ERROR: Could not guess data type for: ucode_2w_bomminor */
 	{ .name = "ucode9", .offset = 0xA5E00, .type = EXT_UCODE_2, .length = 0x6248 },
 	{ .name = "a0g0bsinitvals9", .offset = 0x94420, .type = EXT_IV, .length = 0x118 },
-	{ .name = "a0g0bsinitvals4", .offset = 0x90020, .type = EXT_IV, .length = 0x30 },
+/*
+ *	{ .name = "a0g0bsinitvals4", .offset = 0x90020, .type = EXT_IV, .length = 0x30 },
+ */
 	{ .name = "a0g1initvals5", .offset = 0x915B8, .type = EXT_IV, .length = 0xA18 },
 	{ .name = "n0bsinitvals16", .offset = 0x9A980, .type = EXT_IV, .length = 0x118 },
 	{ .name = "ucode16", .offset = 0xCBB9C, .type = EXT_UCODE_3, .length = 0x8EA0 },
-	{ .name = "b0g0bsinitvals4", .offset = 0x8F160, .type = EXT_IV, .length = 0x30 },
+/*
+ *	{ .name = "b0g0bsinitvals4", .offset = 0x8F160, .type = EXT_IV, .length = 0x30 },
+ */
 	{ .name = "lp0initvals15", .offset = 0x98F58, .type = EXT_IV, .length = 0xC68 },
 	{ .name = "b0g0initvals5", .offset = 0x90058, .type = EXT_IV, .length = 0xA18 },
-	{ .name = "a0g0initvals4", .offset = 0x8F198, .type = EXT_IV, .length = 0xE80 },
+/*
+ *	{ .name = "a0g0initvals4", .offset = 0x8F198, .type = EXT_IV, .length = 0xE80 },
+ */
 	{ .name = "sslpn0initvals16", .offset = 0x9AAA0, .type = EXT_IV, .length = 0x0 },
 	{ .name = "a0g1initvals13", .offset = 0x975F0, .type = EXT_IV, .length = 0xB98 },
 	/* ERROR: Could not guess data type for: ucode_2w11 */
-- 
1.6.2.1



From hauke at hauke-m.de  Sun Sep  6 23:33:27 2009
From: hauke at hauke-m.de (Hauke Mehrtens)
Date: Sun,  6 Sep 2009 23:33:27 +0200
Subject: [PATCH 1/2] [b43-fwcutter] Firmware FW14 and FW15 are the same.
Message-ID: <1252272808-19274-1-git-send-email-hauke@hauke-m.de>

The extracted files have the same md5sum.
The package broadcom-wl-4.178.10.4.tar.bz2 was extracted from
wrt610n_v1.00.00.018_us.tgz as the package from the Linksys is not
available any more. Changed the link to the
broadcom-wl-4.178.10.4.tar.bz2 package.

The FW_FLAG_UNSUPPORTED flag was removed because it is not set for the
other files.

Signed-off-by: Hauke Mehrtens <hauke at hauke-m.de>
---
 fwcutter/fwcutter_list.h |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/fwcutter/fwcutter_list.h b/fwcutter/fwcutter_list.h
index 5175bbd..3cf8ea9 100644
--- a/fwcutter/fwcutter_list.h
+++ b/fwcutter/fwcutter_list.h
@@ -393,18 +393,18 @@ static const struct file files[] =
 		.extract	= _cb8d70972b885b1f8883b943c0261a3c,
 	},
 	{
-		/* ftp://ftp.linksys.com/opensourcecode/wrt610n/1.00.00.018/wrt610n_v1.00.00.018_us.tgz */
+		/* http://downloads.openwrt.org/sources/broadcom-wl-4.178.10.4.tar.bz2 */
 		.name		= "wl.o",
 		.id		= "FW14",
 		.ucode_version	= "478.104",
 		.md5		= "2dd738b8feb8b3559fd9d8fbaf3bfffc",
-		.flags		= FW_FLAG_LE | FW_FLAG_V4 | FW_FLAG_UNSUPPORTED,
+		.flags		= FW_FLAG_LE | FW_FLAG_V4,
 		.extract	= _2dd738b8feb8b3559fd9d8fbaf3bfffc,
 	},
 	{
 		/* ftp://downloads.netgear.com/files/GPL/WNDR3300-V1.0.29_gpl_src.zip */
 		.name		= "wl_apsta.o",
-		.id		= "FW15",
+		.id		= "FW14",
 		.ucode_version	= "478.104",
 		.md5		= "1a258b2d93efa641c32ddf3c3a962028",
 		.flags		= FW_FLAG_LE | FW_FLAG_V4,
@@ -413,7 +413,7 @@ static const struct file files[] =
 	{
 		/* http://downloads.openwrt.org/sources/broadcom-wl-4.178.10.4.tar.bz2 */
 		.name		= "wl_apsta.o",
-		.id		= "FW15",
+		.id		= "FW14",
 		.ucode_version	= "478.104",
 		.md5		= "bb8537e3204a1ea5903fe3e66b5e2763",
 		.flags		= FW_FLAG_LE | FW_FLAG_V4,
-- 
1.6.2.1



From mb at bu3sch.de  Mon Sep  7 20:55:22 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 7 Sep 2009 20:55:22 +0200
Subject: [PATCH RFC 1/3] sdio: recognize io card without powercycle
In-Reply-To: <369914.76148.qm@web28315.mail.ukl.yahoo.com>
References: <369914.76148.qm@web28315.mail.ukl.yahoo.com>
Message-ID: <200909072055.24589.mb@bu3sch.de>

On Monday 07 September 2009 20:46:58 Albert Herranz wrote:
> 
>       

Please submit this to the SDIO maintainer.

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Sep  7 20:55:58 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 7 Sep 2009 20:55:58 +0200
Subject: [PATCH RFC 2/3] sdio: pass unknown cis tuples to sdio drivers
In-Reply-To: <80555.93921.qm@web28308.mail.ukl.yahoo.com>
References: <80555.93921.qm@web28308.mail.ukl.yahoo.com>
Message-ID: <200909072056.00673.mb@bu3sch.de>

On Monday 07 September 2009 20:47:12 Albert Herranz wrote:
> 
>       

Please also submit to the SDIO maintainer.

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Sep  7 20:57:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 7 Sep 2009 20:57:57 +0200
Subject: [PATCH RFC 3/3] ssb: add support for ssb over sdio
In-Reply-To: <143541.29987.qm@web28309.mail.ukl.yahoo.com>
References: <143541.29987.qm@web28309.mail.ukl.yahoo.com>
Message-ID: <200909072057.58827.mb@bu3sch.de>

On Monday 07 September 2009 20:47:27 Albert Herranz wrote:
> 
>       

(next time please inline the patch)

Thanks a lot for the patch. I'll do more cleanups on it and submit it to john later.

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Sep  7 21:05:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 7 Sep 2009 21:05:29 +0200
Subject: [PATCH RFC 1/3] sdio: recognize io card without powercycle
In-Reply-To: <m3hbvey40u.fsf@pullcord.laptop.org>
References: <369914.76148.qm@web28315.mail.ukl.yahoo.com>
	<200909072055.24589.mb@bu3sch.de>
	<m3hbvey40u.fsf@pullcord.laptop.org>
Message-ID: <200909072105.31439.mb@bu3sch.de>

On Monday 07 September 2009 20:59:45 Chris Ball wrote:
> Hi Michael,
> 
>    > Please submit this to the SDIO maintainer.
> 
> MULTIMEDIA CARD (MMC), SECURE DIGITAL (SD) AND SDIO SUBSYSTEM
> S:  Orphan
> L:  linux-mmc at vger.kernel.org
> F:  drivers/mmc/
> F:  include/linux/mmc/
> 
> So, these patches are in the right place.

So who is going to pick it up? Just sending them to a random list is not
going to magically merge them into the kernel.

-- 
Greetings, Michael.


From Gavron at wetwork.net  Mon Sep  7 21:10:31 2009
From: Gavron at wetwork.net (Ehud Gavron)
Date: Mon, 07 Sep 2009 12:10:31 -0700
Subject: [PATCH RFC 1/3] sdio: recognize io card without powercycle
In-Reply-To: <200909072105.31439.mb@bu3sch.de>
References: <369914.76148.qm@web28315.mail.ukl.yahoo.com>
	<200909072055.24589.mb@bu3sch.de>
	<m3hbvey40u.fsf@pullcord.laptop.org>
	<200909072105.31439.mb@bu3sch.de>
Message-ID: <4AA55AA7.70207@wetwork.net>



Michael Buesch wrote:
> On Monday 07 September 2009 20:59:45 Chris Ball wrote:
>   
>> Hi Michael,
>>
>>    > Please submit this to the SDIO maintainer.
>>
>> MULTIMEDIA CARD (MMC), SECURE DIGITAL (SD) AND SDIO SUBSYSTEM
>> S:  Orphan
>> L:  linux-mmc at vger.kernel.org
>> F:  drivers/mmc/
>> F:  include/linux/mmc/
>>
>> So, these patches are in the right place.
>>     
>
> So who is going to pick it up? Just sending them to a random list is not
> going to magically merge them into the kernel.
>
>   
This wouldn't happen if you were more human.

Did you see Stefanik crying at the bottom the stairway last night?

E


From hidave.darkstar at gmail.com  Tue Sep  8 15:47:32 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Tue, 8 Sep 2009 21:47:32 +0800
Subject: b43 dma error
Message-ID: <20090908134732.GA1936@darkstar>

I tested wireless-testing b43 driver, but got "Fatal DMA error"
then the controller keep restarting...

Please tell what I can provide or test, Thanks.

The dmesg:

[  206.995465] b43-phy0 debug: Chip initialized
[  206.995620] b43-phy0 debug: 64-bit DMA initialized
[  207.004517] Registered led device: b43-phy0::tx
[  207.004995] Registered led device: b43-phy0::rx
[  207.005492] Registered led device: b43-phy0::radio
[  207.005752] b43-phy0 debug: Wireless interface started
[  207.005847] b43-phy0 debug: Wireless interface stopped
[  207.007322] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.007545] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.009291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.011296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.013293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.015298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  207.161463] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  207.163853] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  208.544478] b43-phy0 debug: Chip initialized
[  208.544630] b43-phy0 debug: 64-bit DMA initialized
[  208.553525] Registered led device: b43-phy0::tx
[  208.554006] Registered led device: b43-phy0::rx
[  208.554478] Registered led device: b43-phy0::radio
[  208.554970] b43-phy0 debug: Wireless interface started
[  208.554974] __ratelimit: 6 callbacks suppressed
[  208.554976] b43-phy0: Controller restarted
[  208.555043] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  208.555049] b43-phy0: Controller RESET (DMA error) ...
[  208.555086] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  208.555091] b43-phy0: Controller RESET (DMA error) ...
[  208.564569] b43-phy0 debug: Wireless interface stopped
[  208.565696] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.565922] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.567464] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.569308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.571295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.573296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  208.719470] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  208.721858] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  210.102476] b43-phy0 debug: Chip initialized
[  210.102625] b43-phy0 debug: 64-bit DMA initialized
[  210.111510] Registered led device: b43-phy0::tx
[  210.111987] Registered led device: b43-phy0::rx
[  210.112488] Registered led device: b43-phy0::radio
[  210.112748] b43-phy0 debug: Wireless interface started
[  210.112753] b43-phy0: Controller restarted
[  210.112786] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  210.112792] b43-phy0: Controller RESET (DMA error) ...
[  210.112834] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  210.112839] b43-phy0: Controller RESET (DMA error) ...
[  210.112875] b43-phy0 debug: Wireless interface stopped
[  210.114523] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.114747] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.116291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.118293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.120295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.122299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  210.268448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  210.270837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  211.651462] b43-phy0 debug: Chip initialized
[  211.651613] b43-phy0 debug: 64-bit DMA initialized
[  211.660505] Registered led device: b43-phy0::tx
[  211.660984] Registered led device: b43-phy0::rx
[  211.661488] Registered led device: b43-phy0::radio
[  211.661748] b43-phy0 debug: Wireless interface started
[  211.671569] b43-phy0 debug: Wireless interface stopped
[  211.672692] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.672917] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.674470] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.676293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.678293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.680293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  211.826448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  211.828837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  213.209479] b43-phy0 debug: Chip initialized
[  213.209644] b43-phy0 debug: 64-bit DMA initialized
[  213.218581] Registered led device: b43-phy0::tx
[  213.219437] Registered led device: b43-phy0::rx
[  213.219653] Registered led device: b43-phy0::radio
[  213.219724] b43-phy0 debug: Wireless interface started
[  213.219829] b43-phy0 debug: Wireless interface stopped
[  213.219933] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.220158] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.221265] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.223297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.225307] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.227297] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  213.373446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  213.375836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  214.756476] b43-phy0 debug: Chip initialized
[  214.756629] b43-phy0 debug: 64-bit DMA initialized
[  214.765527] Registered led device: b43-phy0::tx
[  214.766010] Registered led device: b43-phy0::rx
[  214.766486] Registered led device: b43-phy0::radio
[  214.766981] b43-phy0 debug: Wireless interface started
[  214.766985] __ratelimit: 10 callbacks suppressed
[  214.766987] b43-phy0: Controller restarted
[  214.767048] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  214.767054] b43-phy0: Controller RESET (DMA error) ...
[  214.767085] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  214.767089] b43-phy0: Controller RESET (DMA error) ...
[  214.767282] b43-phy0 debug: Wireless interface stopped
[  214.767933] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.768163] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.770470] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.772298] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.774293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.776293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  214.922447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  214.924832] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  216.310478] b43-phy0 debug: Chip initialized
[  216.310650] b43-phy0 debug: 64-bit DMA initialized
[  216.319576] Registered led device: b43-phy0::tx
[  216.320422] Registered led device: b43-phy0::rx
[  216.320637] Registered led device: b43-phy0::radio
[  216.320744] b43-phy0 debug: Wireless interface started
[  216.320748] b43-phy0: Controller restarted
[  216.320791] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  216.320797] b43-phy0: Controller RESET (DMA error) ...
[  216.320834] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  216.320839] b43-phy0: Controller RESET (DMA error) ...
[  216.320879] b43-phy0 debug: Wireless interface stopped
[  216.320982] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.321206] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.323271] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.325292] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.327294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.329293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  216.475460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  216.477849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  217.858476] b43-phy0 debug: Chip initialized
[  217.858635] b43-phy0 debug: 64-bit DMA initialized
[  217.867517] Registered led device: b43-phy0::tx
[  217.867996] Registered led device: b43-phy0::rx
[  217.868493] Registered led device: b43-phy0::radio
[  217.868754] b43-phy0 debug: Wireless interface started
[  217.868863] b43-phy0 debug: Wireless interface stopped
[  217.870319] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  217.870543] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  217.872289] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  217.874293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  217.876296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  217.878295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  218.024449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  218.026838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  219.407477] b43-phy0 debug: Chip initialized
[  219.407630] b43-phy0 debug: 64-bit DMA initialized
[  219.416522] Registered led device: b43-phy0::tx
[  219.417001] Registered led device: b43-phy0::rx
[  219.417478] Registered led device: b43-phy0::radio
[  219.417973] b43-phy0 debug: Wireless interface started
[  219.418092] b43-phy0 debug: Wireless interface stopped
[  219.418766] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.418829] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.420268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.422294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.424294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.426293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  219.573449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  219.575837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  220.963477] b43-phy0 debug: Chip initialized
[  220.963642] b43-phy0 debug: 64-bit DMA initialized
[  220.972586] Registered led device: b43-phy0::tx
[  220.973438] Registered led device: b43-phy0::rx
[  220.973653] Registered led device: b43-phy0::radio
[  220.973725] b43-phy0 debug: Wireless interface started
[  220.973759] __ratelimit: 10 callbacks suppressed
[  220.973761] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  220.973766] b43-phy0: Controller RESET (DMA error) ...
[  220.973770] b43-phy0: Controller restarted
[  220.973804] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  220.973809] b43-phy0: Controller RESET (DMA error) ...
[  220.973917] b43-phy0 debug: Wireless interface stopped
[  220.974026] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  220.974249] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  220.976282] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  220.978295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  220.980284] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  220.982295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  221.128477] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  221.130861] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  222.516512] b43-phy0 debug: Chip initialized
[  222.516689] b43-phy0 debug: 64-bit DMA initialized
[  222.527362] Registered led device: b43-phy0::tx
[  222.528181] Registered led device: b43-phy0::rx
[  222.528513] Registered led device: b43-phy0::radio
[  222.528775] b43-phy0 debug: Wireless interface started
[  222.528809] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  222.528814] b43-phy0: Controller RESET (DMA error) ...
[  222.528817] b43-phy0: Controller restarted
[  222.528851] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  222.528856] b43-phy0: Controller RESET (DMA error) ...
[  222.528911] b43-phy0 debug: Wireless interface stopped
[  222.529320] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.529545] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.531266] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.533283] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.535282] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.537285] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  222.696468] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  222.698859] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  224.081477] b43-phy0 debug: Chip initialized
[  224.081666] b43-phy0 debug: 64-bit DMA initialized
[  224.090624] Registered led device: b43-phy0::tx
[  224.091486] Registered led device: b43-phy0::rx
[  224.091701] Registered led device: b43-phy0::radio
[  224.091774] b43-phy0 debug: Wireless interface started
[  224.091812] b43-phy0 debug: Wireless interface stopped
[  224.091917] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.092145] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.093270] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.095290] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.097298] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.099294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  224.245448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  224.247838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  225.630464] b43-phy0 debug: Chip initialized
[  225.630622] b43-phy0 debug: 64-bit DMA initialized
[  225.639530] Registered led device: b43-phy0::tx
[  225.640018] Registered led device: b43-phy0::rx
[  225.640495] Registered led device: b43-phy0::radio
[  225.641030] b43-phy0 debug: Wireless interface started
[  225.641143] b43-phy0 debug: Wireless interface stopped
[  225.641834] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.642059] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.643287] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.645294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.647294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.649294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  225.795458] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  225.797845] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  227.180466] b43-phy0 debug: Chip initialized
[  227.180626] b43-phy0 debug: 64-bit DMA initialized
[  227.189216] Registered led device: b43-phy0::tx
[  227.189238] Registered led device: b43-phy0::rx
[  227.189789] Registered led device: b43-phy0::radio
[  227.190055] b43-phy0 debug: Wireless interface started
[  227.190061] __ratelimit: 6 callbacks suppressed
[  227.190063] b43-phy0: Controller restarted
[  227.190117] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  227.190123] b43-phy0: Controller RESET (DMA error) ...
[  227.190200] b43-phy0 debug: Wireless interface stopped
[  227.191760] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.191985] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.193296] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.195295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.197295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.199296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  227.345446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  227.347836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  228.730463] b43-phy0 debug: Chip initialized
[  228.730613] b43-phy0 debug: 64-bit DMA initialized
[  228.739520] Registered led device: b43-phy0::tx
[  228.740007] Registered led device: b43-phy0::rx
[  228.740480] Registered led device: b43-phy0::radio
[  228.740974] b43-phy0 debug: Wireless interface started
[  228.740979] b43-phy0: Controller restarted
[  228.741020] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  228.741025] b43-phy0: Controller RESET (DMA error) ...
[  228.741056] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  228.741061] b43-phy0: Controller RESET (DMA error) ...
[  228.741100] b43-phy0 debug: Wireless interface stopped
[  228.742530] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.742569] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.744305] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.746315] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.748294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.750298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  228.896458] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  228.898847] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  230.281478] b43-phy0 debug: Chip initialized
[  230.281642] b43-phy0 debug: 64-bit DMA initialized
[  230.290570] Registered led device: b43-phy0::tx
[  230.291423] Registered led device: b43-phy0::rx
[  230.291639] Registered led device: b43-phy0::radio
[  230.291711] b43-phy0 debug: Wireless interface started
[  230.291714] b43-phy0: Controller restarted
[  230.291786] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  230.301569] b43-phy0 debug: Wireless interface stopped
[  230.301688] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.301914] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.303269] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.305293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.307294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.309293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  230.455448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  230.457835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  231.840476] b43-phy0 debug: Chip initialized
[  231.840633] b43-phy0 debug: 64-bit DMA initialized
[  231.849517] Registered led device: b43-phy0::tx
[  231.849999] Registered led device: b43-phy0::rx
[  231.850501] Registered led device: b43-phy0::radio
[  231.850762] b43-phy0 debug: Wireless interface started
[  231.850856] b43-phy0 debug: Wireless interface stopped
[  231.852308] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  231.852532] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  231.854302] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  231.856309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  231.858295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  231.860302] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  232.006448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  232.008838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  233.391478] b43-phy0 debug: Chip initialized
[  233.391631] b43-phy0 debug: 64-bit DMA initialized
[  233.400515] Registered led device: b43-phy0::tx
[  233.400991] Registered led device: b43-phy0::rx
[  233.401492] Registered led device: b43-phy0::radio
[  233.401752] b43-phy0 debug: Wireless interface started
[  233.401756] __ratelimit: 8 callbacks suppressed
[  233.401758] b43-phy0: Controller restarted
[  233.401810] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  233.401816] b43-phy0: Controller RESET (DMA error) ...
[  233.411569] b43-phy0 debug: Wireless interface stopped
[  233.412703] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.412929] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.414469] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.416308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.418295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.420296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  233.567447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  233.569839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  234.952465] b43-phy0 debug: Chip initialized
[  234.952617] b43-phy0 debug: 64-bit DMA initialized
[  234.961514] Registered led device: b43-phy0::tx
[  234.961992] Registered led device: b43-phy0::rx
[  234.962496] Registered led device: b43-phy0::radio
[  234.962757] b43-phy0 debug: Wireless interface started
[  234.962762] b43-phy0: Controller restarted
[  234.962791] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  234.962797] b43-phy0: Controller RESET (DMA error) ...
[  234.962831] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  234.962836] b43-phy0: Controller RESET (DMA error) ...
[  234.962873] b43-phy0 debug: Wireless interface stopped
[  234.964147] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  234.964387] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  234.966502] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  234.968300] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  234.970296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  234.972300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  235.118450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  235.120837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  236.503464] b43-phy0 debug: Chip initialized
[  236.503620] b43-phy0 debug: 64-bit DMA initialized
[  236.512513] Registered led device: b43-phy0::tx
[  236.512995] Registered led device: b43-phy0::rx
[  236.513494] Registered led device: b43-phy0::radio
[  236.513754] b43-phy0 debug: Wireless interface started
[  236.513757] b43-phy0: Controller restarted
[  236.513815] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  236.523569] b43-phy0 debug: Wireless interface stopped
[  236.524694] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.524921] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.526466] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.528308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.530295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.532295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  236.678461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  236.680848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  238.063476] b43-phy0 debug: Chip initialized
[  238.063629] b43-phy0 debug: 64-bit DMA initialized
[  238.072538] Registered led device: b43-phy0::tx
[  238.073020] Registered led device: b43-phy0::rx
[  238.073498] Registered led device: b43-phy0::radio
[  238.073991] b43-phy0 debug: Wireless interface started
[  238.074080] b43-phy0 debug: Wireless interface stopped
[  238.074783] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.075010] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.076502] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.078296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.080294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.082298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  238.228450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  238.230839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  239.618465] b43-phy0 debug: Chip initialized
[  239.618634] b43-phy0 debug: 64-bit DMA initialized
[  239.627569] Registered led device: b43-phy0::tx
[  239.628425] Registered led device: b43-phy0::rx
[  239.628640] Registered led device: b43-phy0::radio
[  239.628712] b43-phy0 debug: Wireless interface started
[  239.628715] __ratelimit: 6 callbacks suppressed
[  239.628717] b43-phy0: Controller restarted
[  239.628755] b43-phy0 debug: Wireless interface stopped
[  239.628857] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.629084] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.630273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.632290] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.634296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.636293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  239.782447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  239.784833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  241.167478] b43-phy0 debug: Chip initialized
[  241.167634] b43-phy0 debug: 64-bit DMA initialized
[  241.176515] Registered led device: b43-phy0::tx
[  241.176995] Registered led device: b43-phy0::rx
[  241.177499] Registered led device: b43-phy0::radio
[  241.177759] b43-phy0 debug: Wireless interface started
[  241.177764] b43-phy0: Controller restarted
[  241.177820] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  241.177826] b43-phy0: Controller RESET (DMA error) ...
[  241.187574] b43-phy0 debug: Wireless interface stopped
[  241.188700] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.188925] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.190463] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.192309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.194295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.196296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  241.342449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  241.344838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  242.727463] b43-phy0 debug: Chip initialized
[  242.727617] b43-phy0 debug: 64-bit DMA initialized
[  242.736509] Registered led device: b43-phy0::tx
[  242.736986] Registered led device: b43-phy0::rx
[  242.737491] Registered led device: b43-phy0::radio
[  242.737751] b43-phy0 debug: Wireless interface started
[  242.737756] b43-phy0: Controller restarted
[  242.737789] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  242.737795] b43-phy0: Controller RESET (DMA error) ...
[  242.737837] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  242.737842] b43-phy0: Controller RESET (DMA error) ...
[  242.737878] b43-phy0 debug: Wireless interface stopped
[  242.739509] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.739734] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.741291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.743293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.745295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.747300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  242.893448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  242.895835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  244.278480] b43-phy0 debug: Chip initialized
[  244.278643] b43-phy0 debug: 64-bit DMA initialized
[  244.287582] Registered led device: b43-phy0::tx
[  244.288440] Registered led device: b43-phy0::rx
[  244.288656] Registered led device: b43-phy0::radio
[  244.288728] b43-phy0 debug: Wireless interface started
[  244.288731] b43-phy0: Controller restarted
[  244.298569] b43-phy0 debug: Wireless interface stopped
[  244.298687] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.298914] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.300269] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.302295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.304293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.306293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  244.452450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  244.454836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  245.837477] b43-phy0 debug: Chip initialized
[  245.837633] b43-phy0 debug: 64-bit DMA initialized
[  245.846505] Registered led device: b43-phy0::tx
[  245.846985] Registered led device: b43-phy0::rx
[  245.847841] Registered led device: b43-phy0::radio
[  245.848102] b43-phy0 debug: Wireless interface started
[  245.848180] b43-phy0 debug: Wireless interface stopped
[  245.848423] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  245.848646] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  245.850272] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  245.852295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  245.854293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  245.856298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  246.002447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  246.004837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  247.387478] b43-phy0 debug: Chip initialized
[  247.387631] b43-phy0 debug: 64-bit DMA initialized
[  247.396514] Registered led device: b43-phy0::tx
[  247.396992] Registered led device: b43-phy0::rx
[  247.397512] Registered led device: b43-phy0::radio
[  247.397772] b43-phy0 debug: Wireless interface started
[  247.397775] __ratelimit: 7 callbacks suppressed
[  247.397777] b43-phy0: Controller restarted
[  247.397830] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  247.397836] b43-phy0: Controller RESET (DMA error) ...
[  247.407569] b43-phy0 debug: Wireless interface stopped
[  247.408640] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.408867] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.410298] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.412294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.414293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.416294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  247.562463] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  247.564851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  248.947465] b43-phy0 debug: Chip initialized
[  248.947616] b43-phy0 debug: 64-bit DMA initialized
[  248.956509] Registered led device: b43-phy0::tx
[  248.956985] Registered led device: b43-phy0::rx
[  248.957840] Registered led device: b43-phy0::radio
[  248.958100] b43-phy0 debug: Wireless interface started
[  248.958132] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  248.958136] b43-phy0: Controller RESET (DMA error) ...
[  248.958140] b43-phy0: Controller restarted
[  248.958175] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  248.958181] b43-phy0: Controller RESET (DMA error) ...
[  248.958214] b43-phy0 debug: Wireless interface stopped
[  248.958824] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  248.959050] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  248.960292] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  248.962293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  248.964294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  248.966298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  249.112449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  249.114839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  250.512528] b43-phy0 debug: Chip initialized
[  250.512697] b43-phy0 debug: 64-bit DMA initialized
[  250.521232] Registered led device: b43-phy0::tx
[  250.521263] Registered led device: b43-phy0::rx
[  250.521286] Registered led device: b43-phy0::radio
[  250.521358] b43-phy0 debug: Wireless interface started
[  250.521387] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  250.521392] b43-phy0: Controller restarted
[  250.521430] b43-phy0 debug: Wireless interface stopped
[  250.521519] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.521550] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.523268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.525303] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.527303] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.529294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  250.675462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  250.677848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  252.060477] b43-phy0 debug: Chip initialized
[  252.060632] b43-phy0 debug: 64-bit DMA initialized
[  252.069517] Registered led device: b43-phy0::tx
[  252.069995] Registered led device: b43-phy0::rx
[  252.070500] Registered led device: b43-phy0::radio
[  252.070760] b43-phy0 debug: Wireless interface started
[  252.080569] b43-phy0 debug: Wireless interface stopped
[  252.081701] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.081926] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.083466] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.085309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.087294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.089296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  252.235449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  252.237832] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  253.620466] b43-phy0 debug: Chip initialized
[  253.620620] b43-phy0 debug: 64-bit DMA initialized
[  253.629517] Registered led device: b43-phy0::tx
[  253.630002] Registered led device: b43-phy0::rx
[  253.630483] Registered led device: b43-phy0::radio
[  253.630975] b43-phy0 debug: Wireless interface started
[  253.630979] __ratelimit: 6 callbacks suppressed
[  253.630981] b43-phy0: Controller restarted
[  253.631018] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  253.631024] b43-phy0: Controller RESET (DMA error) ...
[  253.631057] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  253.631063] b43-phy0: Controller RESET (DMA error) ...
[  253.631099] b43-phy0 debug: Wireless interface stopped
[  253.632004] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.632303] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.634297] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.636294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.638293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.640297] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  253.786462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  253.788850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  255.171478] b43-phy0 debug: Chip initialized
[  255.171646] b43-phy0 debug: 64-bit DMA initialized
[  255.180228] Registered led device: b43-phy0::tx
[  255.180799] Registered led device: b43-phy0::rx
[  255.181021] Registered led device: b43-phy0::radio
[  255.181092] b43-phy0 debug: Wireless interface started
[  255.181097] b43-phy0: Controller restarted
[  255.181152] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  255.181158] b43-phy0: Controller RESET (DMA error) ...
[  255.190575] b43-phy0 debug: Wireless interface stopped
[  255.190693] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.190919] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.192267] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.194295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.196294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.198294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  255.344447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  255.346836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  256.729477] b43-phy0 debug: Chip initialized
[  256.729631] b43-phy0 debug: 64-bit DMA initialized
[  256.738514] Registered led device: b43-phy0::tx
[  256.738995] Registered led device: b43-phy0::rx
[  256.739497] Registered led device: b43-phy0::radio
[  256.739758] b43-phy0 debug: Wireless interface started
[  256.739763] b43-phy0: Controller restarted
[  256.739796] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  256.739870] b43-phy0 debug: Wireless interface stopped
[  256.740837] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.741065] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.742271] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.744300] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.746293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.748298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  256.894447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  256.896833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  258.279475] b43-phy0 debug: Chip initialized
[  258.279630] b43-phy0 debug: 64-bit DMA initialized
[  258.288520] Registered led device: b43-phy0::tx
[  258.289001] Registered led device: b43-phy0::rx
[  258.289478] Registered led device: b43-phy0::radio
[  258.289971] b43-phy0 debug: Wireless interface started
[  258.299568] b43-phy0 debug: Wireless interface stopped
[  258.300685] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.300910] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.302470] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.304293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.306293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.308293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  258.454460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  258.456850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  259.839478] b43-phy0 debug: Chip initialized
[  259.839646] b43-phy0 debug: 64-bit DMA initialized
[  259.848578] Registered led device: b43-phy0::tx
[  259.849434] Registered led device: b43-phy0::rx
[  259.849649] Registered led device: b43-phy0::radio
[  259.849720] b43-phy0 debug: Wireless interface started
[  259.849724] __ratelimit: 6 callbacks suppressed
[  259.849726] b43-phy0: Controller restarted
[  259.849768] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  259.849774] b43-phy0: Controller RESET (DMA error) ...
[  259.849807] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  259.849812] b43-phy0: Controller RESET (DMA error) ...
[  259.849843] b43-phy0 debug: Wireless interface stopped
[  259.849956] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  259.850192] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  259.853211] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  259.854335] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  259.857211] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  259.858313] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  260.006443] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  260.008829] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  261.392471] b43-phy0 debug: Chip initialized
[  261.392628] b43-phy0 debug: 64-bit DMA initialized
[  261.401219] Registered led device: b43-phy0::tx
[  261.401279] Registered led device: b43-phy0::rx
[  261.401302] Registered led device: b43-phy0::radio
[  261.401373] b43-phy0 debug: Wireless interface started
[  261.401375] b43-phy0: 
[  261.401402] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  261.401407] b43-phy0: Controller RESET (DMA error) ...
[  261.401410] Controller restarted
[  261.401448] b43-phy0 debug: Wireless interface stopped
[  261.401532] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.401559] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.403016] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.405019] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.407221] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.409213] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  261.555443] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  261.557829] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  262.941458] b43-phy0 debug: Chip initialized
[  262.941615] b43-phy0 debug: 64-bit DMA initialized
[  262.950231] Registered led device: b43-phy0::tx
[  262.950256] Registered led device: b43-phy0::rx
[  262.950277] Registered led device: b43-phy0::radio
[  262.950346] b43-phy0 debug: Wireless interface started
[  262.950350] b43-phy0: Controller restarted
[  262.950425] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  262.959494] b43-phy0 debug: Wireless interface stopped
[  262.959610] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  262.959836] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  262.961017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  262.963220] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  262.965218] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  262.967219] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  263.113451] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  263.115841] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  264.498457] b43-phy0 debug: Chip initialized
[  264.498611] b43-phy0 debug: 64-bit DMA initialized
[  264.507520] Registered led device: b43-phy0::tx
[  264.507920] Registered led device: b43-phy0::rx
[  264.508767] Registered led device: b43-phy0::radio
[  264.509040] b43-phy0 debug: Wireless interface started
[  264.509208] b43-phy0 debug: Wireless interface stopped
[  264.509313] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.509534] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.511019] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.513221] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.515218] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.517215] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  264.664453] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  264.666839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  266.049469] b43-phy0 debug: Chip initialized
[  266.049633] b43-phy0 debug: 64-bit DMA initialized
[  266.058586] Registered led device: b43-phy0::tx
[  266.058950] Registered led device: b43-phy0::rx
[  266.059462] Registered led device: b43-phy0::radio
[  266.059956] b43-phy0 debug: Wireless interface started
[  266.059986] __ratelimit: 8 callbacks suppressed
[  266.059988] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  266.059993] b43-phy0: Controller RESET (DMA error) ...
[  266.059996] b43-phy0: Controller restarted
[  266.060024] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  266.060030] b43-phy0: Controller RESET (DMA error) ...
[  266.060821] b43-phy0 debug: Wireless interface stopped
[  266.060948] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.061189] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.063025] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.065219] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.067212] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.069214] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  266.215440] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  266.217827] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  267.600571] b43-phy0 debug: Chip initialized
[  267.600727] b43-phy0 debug: 64-bit DMA initialized
[  267.609218] Registered led device: b43-phy0::tx
[  267.609281] Registered led device: b43-phy0::rx
[  267.609304] Registered led device: b43-phy0::radio
[  267.609374] b43-phy0 debug: Wireless interface started
[  267.609377] b43-phy0: Controller restarted
[  267.609421] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  267.609427] b43-phy0: Controller RESET (DMA error) ...
[  267.609466] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  267.609470] b43-phy0: Controller RESET (DMA error) ...
[  267.609505] b43-phy0 debug: Wireless interface stopped
[  267.609596] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.609626] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.611274] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.613283] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.615292] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.617292] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  267.763448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  267.765839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  269.148466] b43-phy0 debug: Chip initialized
[  269.148618] b43-phy0 debug: 64-bit DMA initialized
[  269.157212] Registered led device: b43-phy0::tx
[  269.157235] Registered led device: b43-phy0::rx
[  269.157782] Registered led device: b43-phy0::radio
[  269.158046] b43-phy0 debug: Wireless interface started
[  269.158971] b43-phy0 debug: Wireless interface stopped
[  269.159085] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.159320] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.161312] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.163306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.165293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.167294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  269.313459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  269.315845] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  270.698478] b43-phy0 debug: Chip initialized
[  270.698631] b43-phy0 debug: 64-bit DMA initialized
[  270.707510] Registered led device: b43-phy0::tx
[  270.707988] Registered led device: b43-phy0::rx
[  270.708494] Registered led device: b43-phy0::radio
[  270.708754] b43-phy0 debug: Wireless interface started
[  270.708824] b43-phy0 debug: Wireless interface stopped
[  270.710370] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.710593] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.712290] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.714294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.716296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.718295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  270.864448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  270.866837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  272.249464] b43-phy0 debug: Chip initialized
[  272.249617] b43-phy0 debug: 64-bit DMA initialized
[  272.258513] Registered led device: b43-phy0::tx
[  272.258997] Registered led device: b43-phy0::rx
[  272.259505] Registered led device: b43-phy0::radio
[  272.259765] b43-phy0 debug: Wireless interface started
[  272.259771] __ratelimit: 6 callbacks suppressed
[  272.259773] b43-phy0: Controller restarted
[  272.259805] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  272.259810] b43-phy0: Controller RESET (DMA error) ...
[  272.259845] b43-phy0 debug: Wireless interface stopped
[  272.261461] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.261686] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.263290] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.265293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.267295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.269295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  272.415447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  272.417833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  273.800462] b43-phy0 debug: Chip initialized
[  273.800614] b43-phy0 debug: 64-bit DMA initialized
[  273.809506] Registered led device: b43-phy0::tx
[  273.809981] Registered led device: b43-phy0::rx
[  273.810835] Registered led device: b43-phy0::radio
[  273.811096] b43-phy0 debug: Wireless interface started
[  273.811127] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  273.811131] b43-phy0: Controller RESET (DMA error) ...
[  273.811135] b43-phy0: Controller restarted
[  273.811169] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  273.811174] b43-phy0: Controller RESET (DMA error) ...
[  273.811211] b43-phy0 debug: Wireless interface stopped
[  273.811819] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.812046] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.813286] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.815293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.817294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.819294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  273.965448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  273.967836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  275.350476] b43-phy0 debug: Chip initialized
[  275.350628] b43-phy0 debug: 64-bit DMA initialized
[  275.359514] Registered led device: b43-phy0::tx
[  275.359992] Registered led device: b43-phy0::rx
[  275.360496] Registered led device: b43-phy0::radio
[  275.360756] b43-phy0 debug: Wireless interface started
[  275.360761] b43-phy0: Controller restarted
[  275.360795] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  275.360832] b43-phy0 debug: Wireless interface stopped
[  275.362380] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.362603] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.364292] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.366293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.368296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.370293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  275.516446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  275.518834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  276.901476] b43-phy0 debug: Chip initialized
[  276.901643] b43-phy0 debug: 64-bit DMA initialized
[  276.910588] Registered led device: b43-phy0::tx
[  276.911450] Registered led device: b43-phy0::rx
[  276.911666] Registered led device: b43-phy0::radio
[  276.911737] b43-phy0 debug: Wireless interface started
[  276.911777] b43-phy0 debug: Wireless interface stopped
[  276.911884] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  276.912112] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  276.913272] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  276.915290] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  276.917296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  276.919293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  277.065447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  277.067832] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  278.450475] b43-phy0 debug: Chip initialized
[  278.450631] b43-phy0 debug: 64-bit DMA initialized
[  278.459518] Registered led device: b43-phy0::tx
[  278.460000] Registered led device: b43-phy0::rx
[  278.460509] Registered led device: b43-phy0::radio
[  278.460769] b43-phy0 debug: Wireless interface started
[  278.460775] __ratelimit: 2 callbacks suppressed
[  278.460777] b43-phy0: Controller restarted
[  278.460805] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  278.460811] b43-phy0: Controller RESET (DMA error) ...
[  278.460871] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  278.460876] b43-phy0: Controller RESET (DMA error) ...
[  278.460973] b43-phy0 debug: Wireless interface stopped
[  278.462701] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.462970] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.464301] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.466295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.468293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.470293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  278.617446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  278.619837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  280.002480] b43-phy0 debug: Chip initialized
[  280.002632] b43-phy0 debug: 64-bit DMA initialized
[  280.011517] Registered led device: b43-phy0::tx
[  280.011996] Registered led device: b43-phy0::rx
[  280.012502] Registered led device: b43-phy0::radio
[  280.012761] b43-phy0 debug: Wireless interface started
[  280.012766] b43-phy0: Controller restarted
[  280.012797] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  280.012803] b43-phy0: Controller RESET (DMA error) ...
[  280.012840] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  280.012844] b43-phy0: Controller RESET (DMA error) ...
[  280.012885] b43-phy0 debug: Wireless interface stopped
[  280.014102] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.014343] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.016501] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.018294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.020296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.022295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  280.168450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  280.170838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  281.553464] b43-phy0 debug: Chip initialized
[  281.553619] b43-phy0 debug: 64-bit DMA initialized
[  281.562511] Registered led device: b43-phy0::tx
[  281.562992] Registered led device: b43-phy0::rx
[  281.563501] Registered led device: b43-phy0::radio
[  281.563761] b43-phy0 debug: Wireless interface started
[  281.563926] b43-phy0 debug: Wireless interface stopped
[  281.565378] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.565602] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.567301] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.569294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.571464] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.573295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  281.719459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  281.721849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  283.104476] b43-phy0 debug: Chip initialized
[  283.104630] b43-phy0 debug: 64-bit DMA initialized
[  283.113539] Registered led device: b43-phy0::tx
[  283.114027] Registered led device: b43-phy0::rx
[  283.114508] Registered led device: b43-phy0::radio
[  283.115001] b43-phy0 debug: Wireless interface started
[  283.115093] b43-phy0 debug: Wireless interface stopped
[  283.115591] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.115817] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.117504] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.119296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.121293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.123299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  283.269462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  283.271848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  284.654476] b43-phy0 debug: Chip initialized
[  284.654629] b43-phy0 debug: 64-bit DMA initialized
[  284.663210] Registered led device: b43-phy0::tx
[  284.663233] Registered led device: b43-phy0::rx
[  284.663773] Registered led device: b43-phy0::radio
[  284.664037] b43-phy0 debug: Wireless interface started
[  284.664041] __ratelimit: 10 callbacks suppressed
[  284.664043] b43-phy0: Controller restarted
[  284.664074] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  284.664079] b43-phy0: Controller RESET (DMA error) ...
[  284.664113] b43-phy0 debug: Wireless interface stopped
[  284.664210] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.664445] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.667509] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.669304] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.671293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.673294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  284.819458] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  284.821848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  286.204478] b43-phy0 debug: Chip initialized
[  286.204631] b43-phy0 debug: 64-bit DMA initialized
[  286.213512] Registered led device: b43-phy0::tx
[  286.213993] Registered led device: b43-phy0::rx
[  286.214500] Registered led device: b43-phy0::radio
[  286.214759] b43-phy0 debug: Wireless interface started
[  286.214764] b43-phy0: Controller restarted
[  286.214821] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  286.214826] b43-phy0: Controller RESET (DMA error) ...
[  286.224569] b43-phy0 debug: Wireless interface stopped
[  286.225701] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.225926] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.227469] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.229308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.231294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.233296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  286.379448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  286.381836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  287.764476] b43-phy0 debug: Chip initialized
[  287.764632] b43-phy0 debug: 64-bit DMA initialized
[  287.773510] Registered led device: b43-phy0::tx
[  287.773985] Registered led device: b43-phy0::rx
[  287.774842] Registered led device: b43-phy0::radio
[  287.775103] b43-phy0 debug: Wireless interface started
[  287.775136] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  287.775140] b43-phy0: Controller RESET (DMA error) ...
[  287.775144] b43-phy0: Controller restarted
[  287.775179] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  287.775214] b43-phy0 debug: Wireless interface stopped
[  287.775811] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.776038] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.777291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.779294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.781293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.783298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  287.929447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  287.931836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  289.314479] b43-phy0 debug: Chip initialized
[  289.314644] b43-phy0 debug: 64-bit DMA initialized
[  289.323581] Registered led device: b43-phy0::tx
[  289.324446] Registered led device: b43-phy0::rx
[  289.324662] Registered led device: b43-phy0::radio
[  289.324733] b43-phy0 debug: Wireless interface started
[  289.324771] b43-phy0 debug: Wireless interface stopped
[  289.324876] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.325103] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.326267] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.328289] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.330299] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.332293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  289.478460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  289.480850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  290.863478] b43-phy0 debug: Chip initialized
[  290.863635] b43-phy0 debug: 64-bit DMA initialized
[  290.872518] Registered led device: b43-phy0::tx
[  290.872995] Registered led device: b43-phy0::rx
[  290.873498] Registered led device: b43-phy0::radio
[  290.873758] b43-phy0 debug: Wireless interface started
[  290.873762] __ratelimit: 2 callbacks suppressed
[  290.873764] b43-phy0: Controller restarted
[  290.873817] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  290.873822] b43-phy0: Controller RESET (DMA error) ...
[  290.883569] b43-phy0 debug: Wireless interface stopped
[  290.884705] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  290.884932] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  290.886464] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  290.888308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  290.890295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  290.892296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  291.038451] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  291.040840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  292.423477] b43-phy0 debug: Chip initialized
[  292.423632] b43-phy0 debug: 64-bit DMA initialized
[  292.432507] Registered led device: b43-phy0::tx
[  292.432978] Registered led device: b43-phy0::rx
[  292.433839] Registered led device: b43-phy0::radio
[  292.434100] b43-phy0 debug: Wireless interface started
[  292.434103] b43-phy0: 
[  292.434130] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  292.434135] b43-phy0: Controller RESET (DMA error) ...
[  292.434138] Controller restarted
[  292.434183] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  292.434188] b43-phy0: Controller RESET (DMA error) ...
[  292.434218] b43-phy0 debug: Wireless interface stopped
[  292.434854] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.435082] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.436291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.438295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.440294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.442298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  292.588448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  292.591350] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  293.973475] b43-phy0 debug: Chip initialized
[  293.973627] b43-phy0 debug: 64-bit DMA initialized
[  293.982511] Registered led device: b43-phy0::tx
[  293.982991] Registered led device: b43-phy0::rx
[  293.983487] Registered led device: b43-phy0::radio
[  293.983746] b43-phy0 debug: Wireless interface started
[  293.983751] b43-phy0: Controller restarted
[  293.983786] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  293.983823] b43-phy0 debug: Wireless interface stopped
[  293.985343] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  293.985567] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  293.987291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  293.989294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  293.991295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  293.993295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  294.139447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  294.141838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  295.524465] b43-phy0 debug: Chip initialized
[  295.524617] b43-phy0 debug: 64-bit DMA initialized
[  295.533515] Registered led device: b43-phy0::tx
[  295.533994] Registered led device: b43-phy0::rx
[  295.534500] Registered led device: b43-phy0::radio
[  295.534760] b43-phy0 debug: Wireless interface started
[  295.544569] b43-phy0 debug: Wireless interface stopped
[  295.545695] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.545922] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.547463] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.549309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.551295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.553295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  295.700462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  295.702853] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  297.085478] b43-phy0 debug: Chip initialized
[  297.085630] b43-phy0 debug: 64-bit DMA initialized
[  297.094506] Registered led device: b43-phy0::tx
[  297.094982] Registered led device: b43-phy0::rx
[  297.095835] Registered led device: b43-phy0::radio
[  297.096095] b43-phy0 debug: Wireless interface started
[  297.096127] __ratelimit: 4 callbacks suppressed
[  297.096129] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  297.096134] b43-phy0: Controller RESET (DMA error) ...
[  297.096137] b43-phy0: Controller restarted
[  297.096172] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  297.096178] b43-phy0: Controller RESET (DMA error) ...
[  297.096211] b43-phy0 debug: Wireless interface stopped
[  297.096850] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.097077] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.098289] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.100295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.102294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.104298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  297.250448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  297.252837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  298.635466] b43-phy0 debug: Chip initialized
[  298.635619] b43-phy0 debug: 64-bit DMA initialized
[  298.644517] Registered led device: b43-phy0::tx
[  298.644998] Registered led device: b43-phy0::rx
[  298.645496] Registered led device: b43-phy0::radio
[  298.645756] b43-phy0 debug: Wireless interface started
[  298.645759] b43-phy0: Controller restarted
[  298.645792] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  298.645798] b43-phy0: Controller RESET (DMA error) ...
[  298.645832] b43-phy0 debug: Wireless interface stopped
[  298.647399] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.647623] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.649284] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.651302] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.653295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.655294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  298.801449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  298.803837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  300.186478] b43-phy0 debug: Chip initialized
[  300.186645] b43-phy0 debug: 64-bit DMA initialized
[  300.195584] Registered led device: b43-phy0::tx
[  300.196439] Registered led device: b43-phy0::rx
[  300.196655] Registered led device: b43-phy0::radio
[  300.196726] b43-phy0 debug: Wireless interface started
[  300.196729] b43-phy0: Controller restarted
[  300.196801] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  300.206569] b43-phy0 debug: Wireless interface stopped
[  300.206688] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.206914] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.208268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.210293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.212294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.214294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  300.360448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  300.362838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  301.745465] b43-phy0 debug: Chip initialized
[  301.745620] b43-phy0 debug: 64-bit DMA initialized
[  301.754514] Registered led device: b43-phy0::tx
[  301.754995] Registered led device: b43-phy0::rx
[  301.755500] Registered led device: b43-phy0::radio
[  301.755761] b43-phy0 debug: Wireless interface started
[  301.755853] b43-phy0 debug: Wireless interface stopped
[  301.757304] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.757528] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.759302] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.761293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.763295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.765299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  301.911449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  301.913836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  303.296476] b43-phy0 debug: Chip initialized
[  303.296628] b43-phy0 debug: 64-bit DMA initialized
[  303.305506] Registered led device: b43-phy0::tx
[  303.305982] Registered led device: b43-phy0::rx
[  303.306836] Registered led device: b43-phy0::radio
[  303.307096] b43-phy0 debug: Wireless interface started
[  303.307128] __ratelimit: 6 callbacks suppressed
[  303.307130] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  303.307135] b43-phy0: Controller RESET (DMA error) ...
[  303.307139] b43-phy0: Controller restarted
[  303.307167] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  303.307172] b43-phy0: Controller RESET (DMA error) ...
[  303.316568] b43-phy0 debug: Wireless interface stopped
[  303.316684] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.316910] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.318270] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.320293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.322294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.324293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  303.470447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  303.472836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  304.855478] b43-phy0 debug: Chip initialized
[  304.855630] b43-phy0 debug: 64-bit DMA initialized
[  304.864509] Registered led device: b43-phy0::tx
[  304.864988] Registered led device: b43-phy0::rx
[  304.865487] Registered led device: b43-phy0::radio
[  304.865746] b43-phy0 debug: Wireless interface started
[  304.865749] b43-phy0: Controller restarted
[  304.865781] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  304.865787] b43-phy0: Controller RESET (DMA error) ...
[  304.865825] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  304.865830] b43-phy0: Controller RESET (DMA error) ...
[  304.865866] b43-phy0 debug: Wireless interface stopped
[  304.867493] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  304.867717] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  304.869291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  304.871293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  304.873296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  304.875299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  305.021463] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  305.023849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  306.406477] b43-phy0 debug: Chip initialized
[  306.406629] b43-phy0 debug: 64-bit DMA initialized
[  306.415517] Registered led device: b43-phy0::tx
[  306.415995] Registered led device: b43-phy0::rx
[  306.416505] Registered led device: b43-phy0::radio
[  306.416764] b43-phy0 debug: Wireless interface started
[  306.426569] b43-phy0 debug: Wireless interface stopped
[  306.427694] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.427920] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.429466] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.431308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.433295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.435295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  306.581448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  306.583834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  307.966475] b43-phy0 debug: Chip initialized
[  307.966628] b43-phy0 debug: 64-bit DMA initialized
[  307.975505] Registered led device: b43-phy0::tx
[  307.975980] Registered led device: b43-phy0::rx
[  307.976838] Registered led device: b43-phy0::radio
[  307.977098] b43-phy0 debug: Wireless interface started
[  307.977196] b43-phy0 debug: Wireless interface stopped
[  307.977628] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  307.977851] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  307.979278] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  307.981295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  307.983294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  307.985298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  308.131450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  308.133840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  309.516465] b43-phy0 debug: Chip initialized
[  309.516618] b43-phy0 debug: 64-bit DMA initialized
[  309.525516] Registered led device: b43-phy0::tx
[  309.525995] Registered led device: b43-phy0::rx
[  309.526499] Registered led device: b43-phy0::radio
[  309.526758] b43-phy0 debug: Wireless interface started
[  309.526763] __ratelimit: 10 callbacks suppressed
[  309.526765] b43-phy0: Controller restarted
[  309.526798] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  309.526803] b43-phy0: Controller RESET (DMA error) ...
[  309.526838] b43-phy0 debug: Wireless interface stopped
[  309.528421] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.528645] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.530290] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.532293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.534296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.536295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  309.683461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  309.685845] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  311.068476] b43-phy0 debug: Chip initialized
[  311.068628] b43-phy0 debug: 64-bit DMA initialized
[  311.077503] Registered led device: b43-phy0::tx
[  311.077979] Registered led device: b43-phy0::rx
[  311.078845] Registered led device: b43-phy0::radio
[  311.079107] b43-phy0 debug: Wireless interface started
[  311.079140] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  311.079145] b43-phy0: Controller RESET (DMA error) ...
[  311.079148] b43-phy0: Controller restarted
[  311.079203] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  311.079208] b43-phy0: Controller RESET (DMA error) ...
[  311.088569] b43-phy0 debug: Wireless interface stopped
[  311.088684] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.088909] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.090270] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.092293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.094294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.096294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  311.242447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  311.244833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  312.627479] b43-phy0 debug: Chip initialized
[  312.627646] b43-phy0 debug: 64-bit DMA initialized
[  312.636584] Registered led device: b43-phy0::tx
[  312.637437] Registered led device: b43-phy0::rx
[  312.637652] Registered led device: b43-phy0::radio
[  312.637724] b43-phy0 debug: Wireless interface started
[  312.637729] b43-phy0: Controller restarted
[  312.637772] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  312.637843] b43-phy0 debug: Wireless interface stopped
[  312.637948] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.638173] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.639268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.641284] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.643300] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.645300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  312.791447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  312.793837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  314.176478] b43-phy0 debug: Chip initialized
[  314.176631] b43-phy0 debug: 64-bit DMA initialized
[  314.185509] Registered led device: b43-phy0::tx
[  314.185990] Registered led device: b43-phy0::rx
[  314.186495] Registered led device: b43-phy0::radio
[  314.186756] b43-phy0 debug: Wireless interface started
[  314.196569] b43-phy0 debug: Wireless interface stopped
[  314.197694] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.197920] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.199469] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.201308] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.203294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.205295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  314.351450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  314.353836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  315.736477] b43-phy0 debug: Chip initialized
[  315.736631] b43-phy0 debug: 64-bit DMA initialized
[  315.745508] Registered led device: b43-phy0::tx
[  315.745985] Registered led device: b43-phy0::rx
[  315.746841] Registered led device: b43-phy0::radio
[  315.747103] b43-phy0 debug: Wireless interface started
[  315.747107] __ratelimit: 6 callbacks suppressed
[  315.747138] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  315.747142] b43-phy0: Controller RESET (DMA error) ...
[  315.747145] b43-phy0: Controller restarted
[  315.747190] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  315.747195] b43-phy0: Controller RESET (DMA error) ...
[  315.747225] b43-phy0 debug: Wireless interface stopped
[  315.747863] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.748091] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.749318] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.751293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.753294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.755298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  315.901447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  315.903835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  317.286479] b43-phy0 debug: Chip initialized
[  317.286630] b43-phy0 debug: 64-bit DMA initialized
[  317.295512] Registered led device: b43-phy0::tx
[  317.295988] Registered led device: b43-phy0::rx
[  317.296490] Registered led device: b43-phy0::radio
[  317.296750] b43-phy0 debug: Wireless interface started
[  317.296753] b43-phy0: Controller restarted
[  317.296786] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  317.296792] b43-phy0: Controller RESET (DMA error) ...
[  317.296823] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  317.296827] b43-phy0: Controller RESET (DMA error) ...
[  317.296862] b43-phy0 debug: Wireless interface stopped
[  317.298295] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.298521] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.300303] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.302294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.304295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.306295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  317.452450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  317.454833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  318.837464] b43-phy0 debug: Chip initialized
[  318.837616] b43-phy0 debug: 64-bit DMA initialized
[  318.846521] Registered led device: b43-phy0::tx
[  318.847001] Registered led device: b43-phy0::rx
[  318.847479] Registered led device: b43-phy0::radio
[  318.847973] b43-phy0 debug: Wireless interface started
[  318.857569] b43-phy0 debug: Wireless interface stopped
[  318.858695] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  318.858921] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  318.860466] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  318.862309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  318.864294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  318.866296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  319.012469] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  319.014856] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  320.397463] b43-phy0 debug: Chip initialized
[  320.397616] b43-phy0 debug: 64-bit DMA initialized
[  320.406501] Registered led device: b43-phy0::tx
[  320.406977] Registered led device: b43-phy0::rx
[  320.407828] Registered led device: b43-phy0::radio
[  320.408089] b43-phy0 debug: Wireless interface started
[  320.408184] b43-phy0 debug: Wireless interface stopped
[  320.408617] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.408840] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.410271] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.412304] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.414302] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.416299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  320.562450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  320.564840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  321.947464] b43-phy0 debug: Chip initialized
[  321.947617] b43-phy0 debug: 64-bit DMA initialized
[  321.956507] Registered led device: b43-phy0::tx
[  321.956983] Registered led device: b43-phy0::rx
[  321.957837] Registered led device: b43-phy0::radio
[  321.958098] b43-phy0 debug: Wireless interface started
[  321.958102] __ratelimit: 8 callbacks suppressed
[  321.958132] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  321.958136] b43-phy0: Controller RESET (DMA error) ...
[  321.958139] b43-phy0: Controller restarted
[  321.958210] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  321.958215] b43-phy0: Controller RESET (DMA error) ...
[  321.967568] b43-phy0 debug: Wireless interface stopped
[  321.967686] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  321.967912] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  321.969269] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  321.971292] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  321.973294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  321.975293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  322.121449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  322.123837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  323.506467] b43-phy0 debug: Chip initialized
[  323.506631] b43-phy0 debug: 64-bit DMA initialized
[  323.515586] Registered led device: b43-phy0::tx
[  323.516450] Registered led device: b43-phy0::rx
[  323.516665] Registered led device: b43-phy0::radio
[  323.516737] b43-phy0 debug: Wireless interface started
[  323.516740] b43-phy0: Controller restarted
[  323.516783] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  323.516789] b43-phy0: Controller RESET (DMA error) ...
[  323.516820] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  323.516825] b43-phy0: Controller RESET (DMA error) ...
[  323.516860] b43-phy0 debug: Wireless interface stopped
[  323.516965] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.517191] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.518267] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.520297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.522300] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.524300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  323.670449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  323.672838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  325.055475] b43-phy0 debug: Chip initialized
[  325.055631] b43-phy0 debug: 64-bit DMA initialized
[  325.064521] Registered led device: b43-phy0::tx
[  325.065013] Registered led device: b43-phy0::rx
[  325.065489] Registered led device: b43-phy0::radio
[  325.065981] b43-phy0 debug: Wireless interface started
[  325.066248] b43-phy0 debug: Wireless interface stopped
[  325.066699] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.066928] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.068288] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.070295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.072294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.074293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  325.220463] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  325.222850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  326.605477] b43-phy0 debug: Chip initialized
[  326.605628] b43-phy0 debug: 64-bit DMA initialized
[  326.614210] Registered led device: b43-phy0::tx
[  326.614233] Registered led device: b43-phy0::rx
[  326.615332] Registered led device: b43-phy0::radio
[  326.615593] b43-phy0 debug: Wireless interface started
[  326.615695] b43-phy0 debug: Wireless interface stopped
[  326.615806] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.616031] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.617268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.619283] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.621297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.623295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  326.769449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  326.771838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  328.159477] b43-phy0 debug: Chip initialized
[  328.159646] b43-phy0 debug: 64-bit DMA initialized
[  328.168550] Registered led device: b43-phy0::tx
[  328.169011] Registered led device: b43-phy0::rx
[  328.169225] Registered led device: b43-phy0::radio
[  328.169632] b43-phy0 debug: Wireless interface started
[  328.169636] __ratelimit: 10 callbacks suppressed
[  328.169638] b43-phy0: Controller restarted
[  328.169663] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  328.169668] b43-phy0: Controller RESET (DMA error) ...
[  328.169701] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  328.169706] b43-phy0: Controller RESET (DMA error) ...
[  328.170068] b43-phy0 debug: Wireless interface stopped
[  328.170181] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.170409] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.173214] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.175210] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.176314] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.179209] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  328.324440] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  328.326825] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  329.709471] b43-phy0 debug: Chip initialized
[  329.709627] b43-phy0 debug: 64-bit DMA initialized
[  329.718221] Registered led device: b43-phy0::tx
[  329.718285] Registered led device: b43-phy0::rx
[  329.718308] Registered led device: b43-phy0::radio
[  329.718378] b43-phy0 debug: Wireless interface started
[  329.718380] b43-phy0: Controller restarted
[  329.718426] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  329.718432] b43-phy0: Controller RESET (DMA error) ...
[  329.718470] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  329.718475] b43-phy0: Controller RESET (DMA error) ...
[  329.718510] b43-phy0 debug: Wireless interface stopped
[  329.718602] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.718633] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.720274] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.722287] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.724294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.726291] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  329.872458] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  329.874844] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  331.257465] b43-phy0 debug: Chip initialized
[  331.257620] b43-phy0 debug: 64-bit DMA initialized
[  331.266218] Registered led device: b43-phy0::tx
[  331.266241] Registered led device: b43-phy0::rx
[  331.266789] Registered led device: b43-phy0::radio
[  331.267055] b43-phy0 debug: Wireless interface started
[  331.267980] b43-phy0 debug: Wireless interface stopped
[  331.268089] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.268325] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.270314] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.272306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.274293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.276295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  331.422459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  331.424849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  332.807475] b43-phy0 debug: Chip initialized
[  332.807627] b43-phy0 debug: 64-bit DMA initialized
[  332.816513] Registered led device: b43-phy0::tx
[  332.816993] Registered led device: b43-phy0::rx
[  332.817493] Registered led device: b43-phy0::radio
[  332.817753] b43-phy0 debug: Wireless interface started
[  332.817820] b43-phy0 debug: Wireless interface stopped
[  332.819363] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.819588] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.821295] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.823294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.825294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.827293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  332.973445] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  332.975830] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  334.358479] b43-phy0 debug: Chip initialized
[  334.358645] b43-phy0 debug: 64-bit DMA initialized
[  334.367579] Registered led device: b43-phy0::tx
[  334.368430] Registered led device: b43-phy0::rx
[  334.368646] Registered led device: b43-phy0::radio
[  334.368718] b43-phy0 debug: Wireless interface started
[  334.368723] __ratelimit: 6 callbacks suppressed
[  334.368725] b43-phy0: Controller restarted
[  334.368764] b43-phy0 debug: Wireless interface stopped
[  334.368868] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.369095] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.370267] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.372303] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.374308] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.376294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  334.522445] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  334.524833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  335.907478] b43-phy0 debug: Chip initialized
[  335.907631] b43-phy0 debug: 64-bit DMA initialized
[  335.916512] Registered led device: b43-phy0::tx
[  335.916992] Registered led device: b43-phy0::rx
[  335.917493] Registered led device: b43-phy0::radio
[  335.917754] b43-phy0 debug: Wireless interface started
[  335.917759] b43-phy0: Controller restarted
[  335.917790] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  335.917796] b43-phy0: Controller RESET (DMA error) ...
[  335.917858] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  335.917863] b43-phy0: Controller RESET (DMA error) ...
[  335.917960] b43-phy0 debug: Wireless interface stopped
[  335.918696] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  335.918922] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  335.920287] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  335.922294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  335.924297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  335.926294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  336.072461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  336.074849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  337.457463] b43-phy0 debug: Chip initialized
[  337.457616] b43-phy0 debug: 64-bit DMA initialized
[  337.466513] Registered led device: b43-phy0::tx
[  337.466993] Registered led device: b43-phy0::rx
[  337.467493] Registered led device: b43-phy0::radio
[  337.467754] b43-phy0 debug: Wireless interface started
[  337.467759] b43-phy0: Controller restarted
[  337.467787] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  337.467793] b43-phy0: Controller RESET (DMA error) ...
[  337.467855] b43-phy0 debug: Wireless interface stopped
[  337.468830] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.469055] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.470274] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.472294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.474293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.476293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  337.622448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  337.624837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  339.007463] b43-phy0 debug: Chip initialized
[  339.007619] b43-phy0 debug: 64-bit DMA initialized
[  339.016520] Registered led device: b43-phy0::tx
[  339.017000] Registered led device: b43-phy0::rx
[  339.017481] Registered led device: b43-phy0::radio
[  339.017976] b43-phy0 debug: Wireless interface started
[  339.017980] b43-phy0: Controller restarted
[  339.018113] b43-phy0 debug: Wireless interface stopped
[  339.018827] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.019056] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.020289] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.022297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.024293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.026294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  339.172459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  339.174849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  340.557478] b43-phy0 debug: Chip initialized
[  340.557632] b43-phy0 debug: 64-bit DMA initialized
[  340.566213] Registered led device: b43-phy0::tx
[  340.566235] Registered led device: b43-phy0::rx
[  340.566784] Registered led device: b43-phy0::radio
[  340.567050] b43-phy0 debug: Wireless interface started
[  340.567996] b43-phy0 debug: Wireless interface stopped
[  340.568104] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.568339] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.570297] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.572306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.574294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.576299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  340.723451] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  340.725840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  342.108463] b43-phy0 debug: Chip initialized
[  342.108631] b43-phy0 debug: 64-bit DMA initialized
[  342.117570] Registered led device: b43-phy0::tx
[  342.118427] Registered led device: b43-phy0::rx
[  342.118642] Registered led device: b43-phy0::radio
[  342.118713] b43-phy0 debug: Wireless interface started
[  342.118716] __ratelimit: 7 callbacks suppressed
[  342.118718] b43-phy0: Controller restarted
[  342.118790] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  342.118796] b43-phy0: Controller RESET (DMA error) ...
[  342.118831] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  342.118836] b43-phy0: Controller RESET (DMA error) ...
[  342.128570] b43-phy0 debug: Wireless interface stopped
[  342.128689] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.128917] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.130268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.132293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.134294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.136293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  342.282461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  342.284849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  343.667478] b43-phy0 debug: Chip initialized
[  343.667636] b43-phy0 debug: 64-bit DMA initialized
[  343.676513] Registered led device: b43-phy0::tx
[  343.677350] Registered led device: b43-phy0::rx
[  343.677565] Registered led device: b43-phy0::radio
[  343.677636] b43-phy0 debug: Wireless interface started
[  343.677640] b43-phy0: Controller restarted
[  343.677684] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  343.677690] b43-phy0: Controller RESET (DMA error) ...
[  343.677724] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  343.677729] b43-phy0: Controller RESET (DMA error) ...
[  343.677763] b43-phy0 debug: Wireless interface stopped
[  343.677870] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.678095] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.679272] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.681284] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.683297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.685301] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  343.831447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  343.833838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  345.216467] b43-phy0 debug: Chip initialized
[  345.216633] b43-phy0 debug: 64-bit DMA initialized
[  345.225586] Registered led device: b43-phy0::tx
[  345.226444] Registered led device: b43-phy0::rx
[  345.226659] Registered led device: b43-phy0::radio
[  345.226729] b43-phy0 debug: Wireless interface started
[  345.236570] b43-phy0 debug: Wireless interface stopped
[  345.236687] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.236914] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.238279] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.240295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.242294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.244293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  345.390449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  345.392846] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  346.775477] b43-phy0 debug: Chip initialized
[  346.775642] b43-phy0 debug: 64-bit DMA initialized
[  346.784561] Registered led device: b43-phy0::tx
[  346.785409] Registered led device: b43-phy0::rx
[  346.785624] Registered led device: b43-phy0::radio
[  346.785696] b43-phy0 debug: Wireless interface started
[  346.785795] b43-phy0 debug: Wireless interface stopped
[  346.785908] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.786146] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.789214] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.791212] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.792312] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.795212] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  346.940439] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  346.942826] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  348.325458] b43-phy0 debug: Chip initialized
[  348.325612] b43-phy0 debug: 64-bit DMA initialized
[  348.334229] Registered led device: b43-phy0::tx
[  348.334291] Registered led device: b43-phy0::rx
[  348.334315] Registered led device: b43-phy0::radio
[  348.334385] b43-phy0 debug: Wireless interface started
[  348.334388] __ratelimit: 10 callbacks suppressed
[  348.334390] b43-phy0: Controller restarted
[  348.334429] b43-phy0 debug: Wireless interface stopped
[  348.334513] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.334544] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.336017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.338023] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.340223] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.342214] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  348.489451] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  348.491840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  349.874457] b43-phy0 debug: Chip initialized
[  349.874607] b43-phy0 debug: 64-bit DMA initialized
[  349.883505] Registered led device: b43-phy0::tx
[  349.883902] Registered led device: b43-phy0::rx
[  349.884773] Registered led device: b43-phy0::radio
[  349.885295] b43-phy0 debug: Wireless interface started
[  349.885329] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  349.885334] b43-phy0: Controller RESET (DMA error) ...
[  349.885337] b43-phy0: Controller restarted
[  349.885394] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  349.885400] b43-phy0: Controller RESET (DMA error) ...
[  349.894487] b43-phy0 debug: Wireless interface stopped
[  349.894601] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  349.894826] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  349.896017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  349.898212] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  349.900227] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  349.902212] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  350.049454] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  350.051836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  351.440458] b43-phy0 debug: Chip initialized
[  351.440627] b43-phy0 debug: 64-bit DMA initialized
[  351.449589] Registered led device: b43-phy0::tx
[  351.450436] Registered led device: b43-phy0::rx
[  351.450652] Registered led device: b43-phy0::radio
[  351.450723] b43-phy0 debug: Wireless interface started
[  351.450726] b43-phy0: Controller restarted
[  351.450771] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  351.450777] b43-phy0: Controller RESET (DMA error) ...
[  351.450810] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  351.450843] b43-phy0 debug: Wireless interface stopped
[  351.450955] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.451179] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.453285] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.455292] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.457292] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.459296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  351.605459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  351.607848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  352.990466] b43-phy0 debug: Chip initialized
[  352.990620] b43-phy0 debug: 64-bit DMA initialized
[  352.999221] Registered led device: b43-phy0::tx
[  352.999244] Registered led device: b43-phy0::rx
[  352.999786] Registered led device: b43-phy0::radio
[  353.000052] b43-phy0 debug: Wireless interface started
[  353.000976] b43-phy0 debug: Wireless interface stopped
[  353.001088] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.001326] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.003312] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.005306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.007293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.009294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  353.155461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  353.157851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  354.540475] b43-phy0 debug: Chip initialized
[  354.540628] b43-phy0 debug: 64-bit DMA initialized
[  354.549502] Registered led device: b43-phy0::tx
[  354.549978] Registered led device: b43-phy0::rx
[  354.550835] Registered led device: b43-phy0::radio
[  354.551096] b43-phy0 debug: Wireless interface started
[  354.560568] b43-phy0 debug: Wireless interface stopped
[  354.560682] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.560908] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.562269] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.564295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.566294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.568294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  354.714446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  354.716837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  356.099465] b43-phy0 debug: Chip initialized
[  356.099614] b43-phy0 debug: 64-bit DMA initialized
[  356.108504] Registered led device: b43-phy0::tx
[  356.108979] Registered led device: b43-phy0::rx
[  356.109833] Registered led device: b43-phy0::radio
[  356.110095] b43-phy0 debug: Wireless interface started
[  356.110128] __ratelimit: 9 callbacks suppressed
[  356.110130] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  356.110135] b43-phy0: Controller RESET (DMA error) ...
[  356.110138] b43-phy0: Controller restarted
[  356.110174] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  356.110179] b43-phy0: Controller RESET (DMA error) ...
[  356.110212] b43-phy0 debug: Wireless interface stopped
[  356.110855] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.111083] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.112291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.114296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.116294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.118298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  356.264494] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  356.266915] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  357.649475] b43-phy0 debug: Chip initialized
[  357.649631] b43-phy0 debug: 64-bit DMA initialized
[  357.658519] Registered led device: b43-phy0::tx
[  357.658998] Registered led device: b43-phy0::rx
[  357.659498] Registered led device: b43-phy0::radio
[  357.659758] b43-phy0 debug: Wireless interface started
[  357.659762] b43-phy0: Controller restarted
[  357.659794] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  357.659800] b43-phy0: Controller RESET (DMA error) ...
[  357.659834] b43-phy0 debug: Wireless interface stopped
[  357.661390] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.661615] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.663292] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.665293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.667295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.669295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  357.816459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  357.818850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  359.201478] b43-phy0 debug: Chip initialized
[  359.201629] b43-phy0 debug: 64-bit DMA initialized
[  359.210511] Registered led device: b43-phy0::tx
[  359.210992] Registered led device: b43-phy0::rx
[  359.211494] Registered led device: b43-phy0::radio
[  359.211755] b43-phy0 debug: Wireless interface started
[  359.211758] b43-phy0: Controller restarted
[  359.211816] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  359.221569] b43-phy0 debug: Wireless interface stopped
[  359.222700] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.222926] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.224464] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.226309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.228295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.230296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  359.376450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  359.378839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  360.761478] b43-phy0 debug: Chip initialized
[  360.761642] b43-phy0 debug: 64-bit DMA initialized
[  360.770545] Registered led device: b43-phy0::tx
[  360.771036] Registered led device: b43-phy0::rx
[  360.771511] Registered led device: b43-phy0::radio
[  360.772005] b43-phy0 debug: Wireless interface started
[  360.772114] b43-phy0 debug: Wireless interface stopped
[  360.772831] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.773059] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.774291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.776294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.778294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.780298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  360.926460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  360.928847] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  362.311479] b43-phy0 debug: Chip initialized
[  362.311645] b43-phy0 debug: 64-bit DMA initialized
[  362.320228] Registered led device: b43-phy0::tx
[  362.320796] Registered led device: b43-phy0::rx
[  362.321019] Registered led device: b43-phy0::radio
[  362.321092] b43-phy0 debug: Wireless interface started
[  362.321098] __ratelimit: 6 callbacks suppressed
[  362.321100] b43-phy0: Controller restarted
[  362.321154] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  362.321160] b43-phy0: Controller RESET (DMA error) ...
[  362.330575] b43-phy0 debug: Wireless interface stopped
[  362.330694] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.330922] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.332273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.334295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.336293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.338293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  362.484449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  362.486837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  363.869463] b43-phy0 debug: Chip initialized
[  363.869615] b43-phy0 debug: 64-bit DMA initialized
[  363.878506] Registered led device: b43-phy0::tx
[  363.878987] Registered led device: b43-phy0::rx
[  363.879489] Registered led device: b43-phy0::radio
[  363.879749] b43-phy0 debug: Wireless interface started
[  363.879754] b43-phy0: Controller restarted
[  363.879787] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  363.879793] b43-phy0: Controller RESET (DMA error) ...
[  363.879835] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  363.879840] b43-phy0: Controller RESET (DMA error) ...
[  363.879877] b43-phy0 debug: Wireless interface stopped
[  363.881522] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  363.881747] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  363.883291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  363.885294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  363.887296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  363.889300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  364.035455] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  364.037845] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  365.420466] b43-phy0 debug: Chip initialized
[  365.420618] b43-phy0 debug: 64-bit DMA initialized
[  365.429512] Registered led device: b43-phy0::tx
[  365.429993] Registered led device: b43-phy0::rx
[  365.430500] Registered led device: b43-phy0::radio
[  365.430760] b43-phy0 debug: Wireless interface started
[  365.430762] b43-phy0: Controller restarted
[  365.430817] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  365.440569] b43-phy0 debug: Wireless interface stopped
[  365.441693] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.441920] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.443464] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.445309] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.447493] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.449295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  365.595449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  365.597840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  366.980463] b43-phy0 debug: Chip initialized
[  366.980617] b43-phy0 debug: 64-bit DMA initialized
[  366.989514] Registered led device: b43-phy0::tx
[  366.989996] Registered led device: b43-phy0::rx
[  366.990498] Registered led device: b43-phy0::radio
[  366.990759] b43-phy0 debug: Wireless interface started
[  366.990865] b43-phy0 debug: Wireless interface stopped
[  366.992325] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  366.992550] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  366.994290] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  366.996293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  366.998295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  367.000300] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  367.146462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  367.148851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  368.531462] b43-phy0 debug: Chip initialized
[  368.531616] b43-phy0 debug: 64-bit DMA initialized
[  368.540528] Registered led device: b43-phy0::tx
[  368.541013] Registered led device: b43-phy0::rx
[  368.541487] Registered led device: b43-phy0::radio
[  368.541978] b43-phy0 debug: Wireless interface started
[  368.541982] __ratelimit: 6 callbacks suppressed
[  368.541984] b43-phy0: Controller restarted
[  368.542040] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  368.542046] b43-phy0: Controller RESET (DMA error) ...
[  368.542076] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  368.542080] b43-phy0: Controller RESET (DMA error) ...
[  368.551568] b43-phy0 debug: Wireless interface stopped
[  368.552685] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.552912] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.554465] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.556293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.558293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.560293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  368.706459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  368.708848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  370.091466] b43-phy0 debug: Chip initialized
[  370.091619] b43-phy0 debug: 64-bit DMA initialized
[  370.100514] Registered led device: b43-phy0::tx
[  370.100998] Registered led device: b43-phy0::rx
[  370.101501] Registered led device: b43-phy0::radio
[  370.101761] b43-phy0 debug: Wireless interface started
[  370.101766] b43-phy0: Controller restarted
[  370.101799] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  370.101805] b43-phy0: Controller RESET (DMA error) ...
[  370.101847] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  370.101852] b43-phy0: Controller RESET (DMA error) ...
[  370.101890] b43-phy0 debug: Wireless interface stopped
[  370.102635] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.102859] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.104510] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.106305] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.108294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.110298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  370.256461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  370.258847] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  371.646476] b43-phy0 debug: Chip initialized
[  371.646640] b43-phy0 debug: 64-bit DMA initialized
[  371.655558] Registered led device: b43-phy0::tx
[  371.656415] Registered led device: b43-phy0::rx
[  371.656630] Registered led device: b43-phy0::radio
[  371.656702] b43-phy0 debug: Wireless interface started
[  371.666569] b43-phy0 debug: Wireless interface stopped
[  371.666687] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.666915] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.668280] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.670296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.672294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.674293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  371.821460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  371.823852] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  373.206479] b43-phy0 debug: Chip initialized
[  373.206646] b43-phy0 debug: 64-bit DMA initialized
[  373.215585] Registered led device: b43-phy0::tx
[  373.216444] Registered led device: b43-phy0::rx
[  373.216660] Registered led device: b43-phy0::radio
[  373.216767] b43-phy0 debug: Wireless interface started
[  373.216870] b43-phy0 debug: Wireless interface stopped
[  373.216974] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.217199] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.219291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.221294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.223294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.225298] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  373.371449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  373.373838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  374.756475] b43-phy0 debug: Chip initialized
[  374.756628] b43-phy0 debug: 64-bit DMA initialized
[  374.765513] Registered led device: b43-phy0::tx
[  374.765992] Registered led device: b43-phy0::rx
[  374.766515] Registered led device: b43-phy0::radio
[  374.766776] b43-phy0 debug: Wireless interface started
[  374.766780] __ratelimit: 10 callbacks suppressed
[  374.766782] b43-phy0: Controller restarted
[  374.766835] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  374.766841] b43-phy0: Controller RESET (DMA error) ...
[  374.776568] b43-phy0 debug: Wireless interface stopped
[  374.777645] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.777872] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.779298] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.781294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.783293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.785293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  374.931447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  374.933836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  376.316478] b43-phy0 debug: Chip initialized
[  376.316632] b43-phy0 debug: 64-bit DMA initialized
[  376.325508] Registered led device: b43-phy0::tx
[  376.325988] Registered led device: b43-phy0::rx
[  376.326493] Registered led device: b43-phy0::radio
[  376.326753] b43-phy0 debug: Wireless interface started
[  376.326758] b43-phy0: Controller restarted
[  376.326792] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000400, 0x00000000, 0x00000000
[  376.326798] b43-phy0: Controller RESET (DMA error) ...
[  376.326849] b43-phy0 debug: Wireless interface stopped
[  376.328204] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.328446] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.330303] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.332293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.334296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 2/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.336299] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  376.482449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  376.484839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  377.867464] b43-phy0 debug: Chip initialized
[  377.867619] b43-phy0 debug: 64-bit DMA initialized
[  377.876512] Registered led device: b43-phy0::tx
[  377.876993] Registered led device: b43-phy0::rx
[  377.877496] Registered led device: b43-phy0::radio
[  377.877756] b43-phy0 debug: Wireless interface started
[  377.877760] b43-phy0: Controller restarted
[  377.877809] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  377.877815] b43-phy0: Controller RESET (DMA error) ...
[  377.877995] b43-phy0 debug: Wireless interface stopped
[  377.878536] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  377.878762] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  377.880270] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  377.882294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  377.884294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  377.886294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  378.032460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  378.034851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  379.417478] b43-phy0 debug: Chip initialized
[  379.417632] b43-phy0 debug: 64-bit DMA initialized
[  379.426546] Registered led device: b43-phy0::tx
[  379.427028] Registered led device: b43-phy0::rx
[  379.427510] Registered led device: b43-phy0::radio
[  379.428003] b43-phy0 debug: Wireless interface started
[  379.428032] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  379.428097] b43-phy0 debug: Wireless interface stopped
[  379.428839] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.429066] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.431297] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.433295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.435293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.437294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  379.583449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  379.585837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  380.968476] b43-phy0 debug: Chip initialized
[  380.968628] b43-phy0 debug: 64-bit DMA initialized
[  380.977208] Registered led device: b43-phy0::tx
[  380.977230] Registered led device: b43-phy0::rx
[  380.978340] Registered led device: b43-phy0::radio
[  380.978600] b43-phy0 debug: Wireless interface started
[  380.978604] __ratelimit: 4 callbacks suppressed
[  380.978606] b43-phy0: Controller restarted
[  380.978636] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  380.978642] b43-phy0: Controller RESET (DMA error) ...
[  380.978676] b43-phy0 debug: Wireless interface stopped
[  380.978785] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  380.979015] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  380.981509] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  380.983306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  380.985297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  380.987295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  381.133447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  381.135833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  382.518465] b43-phy0 debug: Chip initialized
[  382.518618] b43-phy0 debug: 64-bit DMA initialized
[  382.527505] Registered led device: b43-phy0::tx
[  382.527986] Registered led device: b43-phy0::rx
[  382.528486] Registered led device: b43-phy0::radio
[  382.528746] b43-phy0 debug: Wireless interface started
[  382.528751] b43-phy0: Controller restarted
[  382.528786] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  382.528791] b43-phy0: Controller RESET (DMA error) ...
[  382.528825] b43-phy0 debug: Wireless interface stopped
[  382.530384] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.530609] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.532291] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.534294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.536295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.538295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  382.684449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  382.686835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  384.069476] b43-phy0 debug: Chip initialized
[  384.069627] b43-phy0 debug: 64-bit DMA initialized
[  384.078507] Registered led device: b43-phy0::tx
[  384.078981] Registered led device: b43-phy0::rx
[  384.079837] Registered led device: b43-phy0::radio
[  384.080098] b43-phy0 debug: Wireless interface started
[  384.080129] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  384.080133] b43-phy0: Controller RESET (DMA error) ...
[  384.080136] b43-phy0: Controller restarted
[  384.080170] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  384.080210] b43-phy0 debug: Wireless interface stopped
[  384.080785] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.081013] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.082281] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.084293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.086294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.088294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  384.234448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  384.236836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  385.619466] b43-phy0 debug: Chip initialized
[  385.619633] b43-phy0 debug: 64-bit DMA initialized
[  385.628594] Registered led device: b43-phy0::tx
[  385.629455] Registered led device: b43-phy0::rx
[  385.629670] Registered led device: b43-phy0::radio
[  385.629740] b43-phy0 debug: Wireless interface started
[  385.629778] b43-phy0 debug: Wireless interface stopped
[  385.629882] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.630110] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.631273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.633291] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.635297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.637294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  385.784461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  385.786850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  387.169474] b43-phy0 debug: Chip initialized
[  387.169631] b43-phy0 debug: 64-bit DMA initialized
[  387.178521] Registered led device: b43-phy0::tx
[  387.179001] Registered led device: b43-phy0::rx
[  387.179479] Registered led device: b43-phy0::radio
[  387.179971] b43-phy0 debug: Wireless interface started
[  387.179975] __ratelimit: 2 callbacks suppressed
[  387.179977] b43-phy0: Controller restarted
[  387.180011] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  387.180017] b43-phy0: Controller RESET (DMA error) ...
[  387.180056] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  387.180061] b43-phy0: Controller RESET (DMA error) ...
[  387.180102] b43-phy0 debug: Wireless interface stopped
[  387.181024] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.181270] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.183296] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.185294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.187293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.189293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  387.335462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  387.337851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  388.720477] b43-phy0 debug: Chip initialized
[  388.720628] b43-phy0 debug: 64-bit DMA initialized
[  388.729208] Registered led device: b43-phy0::tx
[  388.729230] Registered led device: b43-phy0::rx
[  388.730342] Registered led device: b43-phy0::radio
[  388.730603] b43-phy0 debug: Wireless interface started
[  388.730606] b43-phy0: Controller restarted
[  388.730633] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  388.730639] b43-phy0: Controller RESET (DMA error) ...
[  388.730672] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  388.730677] b43-phy0: Controller RESET (DMA error) ...
[  388.730716] b43-phy0 debug: Wireless interface stopped
[  388.730825] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.731051] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.733311] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.735296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.737294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.739294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  388.885445] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  388.887833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  390.270478] b43-phy0 debug: Chip initialized
[  390.270632] b43-phy0 debug: 64-bit DMA initialized
[  390.279510] Registered led device: b43-phy0::tx
[  390.279991] Registered led device: b43-phy0::rx
[  390.280492] Registered led device: b43-phy0::radio
[  390.280751] b43-phy0 debug: Wireless interface started
[  390.280865] b43-phy0 debug: Wireless interface stopped
[  390.282966] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.283199] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.284295] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.286299] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.288295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.290293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  390.436448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  390.438834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  391.821477] b43-phy0 debug: Chip initialized
[  391.821629] b43-phy0 debug: 64-bit DMA initialized
[  391.830528] Registered led device: b43-phy0::tx
[  391.831032] Registered led device: b43-phy0::rx
[  391.831488] Registered led device: b43-phy0::radio
[  391.831980] b43-phy0 debug: Wireless interface started
[  391.832074] b43-phy0 debug: Wireless interface stopped
[  391.833563] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.833791] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.835296] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.837296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.839295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.841293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  391.987459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  391.989846] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  393.372476] b43-phy0 debug: Chip initialized
[  393.372627] b43-phy0 debug: 64-bit DMA initialized
[  393.381521] Registered led device: b43-phy0::tx
[  393.382012] Registered led device: b43-phy0::rx
[  393.382485] Registered led device: b43-phy0::radio
[  393.382977] b43-phy0 debug: Wireless interface started
[  393.382981] __ratelimit: 10 callbacks suppressed
[  393.382983] b43-phy0: Controller restarted
[  393.383022] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  393.383027] b43-phy0: Controller RESET (DMA error) ...
[  393.383061] b43-phy0 debug: Wireless interface stopped
[  393.383172] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.383410] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.385497] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.387296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.389293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.391293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  393.537448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  393.539836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  394.927477] b43-phy0 debug: Chip initialized
[  394.927642] b43-phy0 debug: 64-bit DMA initialized
[  394.936558] Registered led device: b43-phy0::tx
[  394.937404] Registered led device: b43-phy0::rx
[  394.937619] Registered led device: b43-phy0::radio
[  394.937691] b43-phy0 debug: Wireless interface started
[  394.937694] b43-phy0: Controller restarted
[  394.937733] b43-phy0 debug: Wireless interface stopped
[  394.937836] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  394.938063] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  394.939273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  394.941283] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  394.943296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  394.945295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  395.091463] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  395.093852] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  396.476465] b43-phy0 debug: Chip initialized
[  396.476631] b43-phy0 debug: 64-bit DMA initialized
[  396.485580] Registered led device: b43-phy0::tx
[  396.486449] Registered led device: b43-phy0::rx
[  396.486664] Registered led device: b43-phy0::radio
[  396.486734] b43-phy0 debug: Wireless interface started
[  396.486739] b43-phy0: Controller restarted
[  396.486783] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  396.486788] b43-phy0: Controller RESET (DMA error) ...
[  396.486826] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  396.486831] b43-phy0: Controller RESET (DMA error) ...
[  396.486876] b43-phy0 debug: Wireless interface stopped
[  396.486988] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.487214] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.489288] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.491295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.493297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.495295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  396.641447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  396.643852] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  397.749038] CE: hpet increasing min_delta_ns to 15000 nsec
[  398.026475] b43-phy0 debug: Chip initialized
[  398.026641] b43-phy0 debug: 64-bit DMA initialized
[  398.035558] Registered led device: b43-phy0::tx
[  398.036350] Registered led device: b43-phy0::rx
[  398.036566] Registered led device: b43-phy0::radio
[  398.036637] b43-phy0 debug: Wireless interface started
[  398.036640] b43-phy0: Controller restarted
[  398.036748] b43-phy0 debug: Wireless interface stopped
[  398.036861] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.037099] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.040246] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.041331] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.044209] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.045308] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  398.194441] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  398.196830] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  399.579455] b43-phy0 debug: Chip initialized
[  399.579614] b43-phy0 debug: 64-bit DMA initialized
[  399.588238] Registered led device: b43-phy0::tx
[  399.588263] Registered led device: b43-phy0::rx
[  399.588286] Registered led device: b43-phy0::radio
[  399.588357] b43-phy0 debug: Wireless interface started
[  399.588360] __ratelimit: 4 callbacks suppressed
[  399.588362] b43-phy0: Controller restarted
[  399.588400] b43-phy0 debug: Wireless interface stopped
[  399.588485] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.588515] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.590017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.592023] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.594222] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.596221] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  399.743442] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  399.745826] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  401.128468] b43-phy0 debug: Chip initialized
[  401.128632] b43-phy0 debug: 64-bit DMA initialized
[  401.137559] Registered led device: b43-phy0::tx
[  401.137920] Registered led device: b43-phy0::rx
[  401.138420] Registered led device: b43-phy0::radio
[  401.138911] b43-phy0 debug: Wireless interface started
[  401.138915] b43-phy0: 
[  401.138947] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  401.138952] b43-phy0: Controller RESET (DMA error) ...
[  401.138955] Controller restarted
[  401.138983] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  401.138988] b43-phy0: Controller RESET (DMA error) ...
[  401.139040] b43-phy0 debug: Wireless interface stopped
[  401.139775] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.140018] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.142216] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.144218] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.146211] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.148213] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  401.294442] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  401.296828] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  402.680458] b43-phy0 debug: Chip initialized
[  402.680612] b43-phy0 debug: 64-bit DMA initialized
[  402.689231] Registered led device: b43-phy0::tx
[  402.689256] Registered led device: b43-phy0::rx
[  402.689280] Registered led device: b43-phy0::radio
[  402.689349] b43-phy0 debug: Wireless interface started
[  402.689353] b43-phy0: Controller restarted
[  402.689401] b43-phy0 debug: Wireless interface stopped
[  402.689486] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.689517] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.691017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.693024] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.695224] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.697215] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  402.844452] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  402.846841] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  404.229458] b43-phy0 debug: Chip initialized
[  404.229613] b43-phy0 debug: 64-bit DMA initialized
[  404.238521] Registered led device: b43-phy0::tx
[  404.238919] Registered led device: b43-phy0::rx
[  404.239767] Registered led device: b43-phy0::radio
[  404.240039] b43-phy0 debug: Wireless interface started
[  404.240042] b43-phy0: Controller restarted
[  404.240087] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  404.240093] b43-phy0: Controller RESET (DMA error) ...
[  404.240507] b43-phy0 debug: Wireless interface stopped
[  404.240615] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.240838] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.242016] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.244219] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.246213] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.248211] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  404.395454] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  404.397842] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  405.780456] b43-phy0 debug: Chip initialized
[  405.780606] b43-phy0 debug: 64-bit DMA initialized
[  405.789517] Registered led device: b43-phy0::tx
[  405.789910] Registered led device: b43-phy0::rx
[  405.790754] Registered led device: b43-phy0::radio
[  405.791027] b43-phy0 debug: Wireless interface started
[  405.791187] b43-phy0 debug: Wireless interface stopped
[  405.791294] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.791518] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.793019] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.795223] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.797217] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.799213] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  405.946453] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  405.948834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  407.332460] b43-phy0 debug: Chip initialized
[  407.332627] b43-phy0 debug: 64-bit DMA initialized
[  407.341604] Registered led device: b43-phy0::tx
[  407.342458] Registered led device: b43-phy0::rx
[  407.342673] Registered led device: b43-phy0::radio
[  407.342745] b43-phy0 debug: Wireless interface started
[  407.342748] __ratelimit: 7 callbacks suppressed
[  407.342750] b43-phy0: Controller restarted
[  407.342793] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  407.342799] b43-phy0: Controller RESET (DMA error) ...
[  407.342837] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  407.342842] b43-phy0: Controller RESET (DMA error) ...
[  407.342877] b43-phy0 debug: Wireless interface stopped
[  407.342989] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.343215] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.345271] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.347293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.349292] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.351292] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  407.497460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  407.499846] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  408.882476] b43-phy0 debug: Chip initialized
[  408.882633] b43-phy0 debug: 64-bit DMA initialized
[  408.891215] Registered led device: b43-phy0::tx
[  408.891238] Registered led device: b43-phy0::rx
[  408.891776] Registered led device: b43-phy0::radio
[  408.892041] b43-phy0 debug: Wireless interface started
[  408.892046] b43-phy0: Controller restarted
[  408.892078] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  408.892083] b43-phy0: Controller RESET (DMA error) ...
[  408.892117] b43-phy0 debug: Wireless interface stopped
[  408.892211] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  408.892447] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  408.895481] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  408.897295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  408.899293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  408.901294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  409.047453] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  409.049841] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  410.432477] b43-phy0 debug: Chip initialized
[  410.432634] b43-phy0 debug: 64-bit DMA initialized
[  410.441217] Registered led device: b43-phy0::tx
[  410.441240] Registered led device: b43-phy0::rx
[  410.441781] Registered led device: b43-phy0::radio
[  410.442045] b43-phy0 debug: Wireless interface started
[  410.442050] b43-phy0: Controller restarted
[  410.442081] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  410.442118] b43-phy0 debug: Wireless interface stopped
[  410.442214] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.442448] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.445475] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.447295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.449293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.451293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  410.597446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  410.599833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  411.982463] b43-phy0 debug: Chip initialized
[  411.982624] b43-phy0 debug: 64-bit DMA initialized
[  411.991223] Registered led device: b43-phy0::tx
[  411.991245] Registered led device: b43-phy0::rx
[  411.991369] Registered led device: b43-phy0::radio
[  411.991628] b43-phy0 debug: Wireless interface started
[  411.991724] b43-phy0 debug: Wireless interface stopped
[  411.991817] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  411.991886] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  411.993269] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  411.995496] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  411.997301] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  411.999294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  412.145447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  412.147871] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  413.535476] b43-phy0 debug: Chip initialized
[  413.535643] b43-phy0 debug: 64-bit DMA initialized
[  413.544231] Registered led device: b43-phy0::tx
[  413.544321] Registered led device: b43-phy0::rx
[  413.544535] Registered led device: b43-phy0::radio
[  413.544607] b43-phy0 debug: Wireless interface started
[  413.544610] __ratelimit: 6 callbacks suppressed
[  413.544641] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  413.544646] b43-phy0: Controller RESET (DMA error) ...
[  413.544649] b43-phy0: Controller restarted
[  413.544683] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  413.544688] b43-phy0: Controller RESET (DMA error) ...
[  413.544723] b43-phy0 debug: Wireless interface stopped
[  413.544818] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.544887] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.546276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.548469] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.550295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.552294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  413.698446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  413.700835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  415.083475] b43-phy0 debug: Chip initialized
[  415.083631] b43-phy0 debug: 64-bit DMA initialized
[  415.092220] Registered led device: b43-phy0::tx
[  415.092242] Registered led device: b43-phy0::rx
[  415.092365] Registered led device: b43-phy0::radio
[  415.092624] b43-phy0 debug: Wireless interface started
[  415.092627] b43-phy0: Controller restarted
[  415.092654] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  415.092659] b43-phy0: Controller RESET (DMA error) ...
[  415.092696] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  415.092701] b43-phy0: Controller RESET (DMA error) ...
[  415.092736] b43-phy0 debug: Wireless interface stopped
[  415.092832] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.092901] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.094276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.096297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.098295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.100294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  415.246446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  415.248835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  416.631477] b43-phy0 debug: Chip initialized
[  416.631634] b43-phy0 debug: 64-bit DMA initialized
[  416.640219] Registered led device: b43-phy0::tx
[  416.640242] Registered led device: b43-phy0::rx
[  416.640365] Registered led device: b43-phy0::radio
[  416.640624] b43-phy0 debug: Wireless interface started
[  416.640688] b43-phy0 debug: Wireless interface stopped
[  416.640781] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.640850] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.642275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.644284] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.646295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.648293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  416.794460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  416.796845] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  418.179467] b43-phy0 debug: Chip initialized
[  418.179634] b43-phy0 debug: 64-bit DMA initialized
[  418.188230] Registered led device: b43-phy0::tx
[  418.188261] Registered led device: b43-phy0::rx
[  418.188375] Registered led device: b43-phy0::radio
[  418.188636] b43-phy0 debug: Wireless interface started
[  418.188732] b43-phy0 debug: Wireless interface stopped
[  418.188829] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.189054] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.191275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.193296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.195293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.197293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  418.343459] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  418.345848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  419.733475] b43-phy0 debug: Chip initialized
[  419.733641] b43-phy0 debug: 64-bit DMA initialized
[  419.742228] Registered led device: b43-phy0::tx
[  419.742317] Registered led device: b43-phy0::rx
[  419.742531] Registered led device: b43-phy0::radio
[  419.742603] b43-phy0 debug: Wireless interface started
[  419.742606] __ratelimit: 8 callbacks suppressed
[  419.742636] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  419.742641] b43-phy0: Controller RESET (DMA error) ...
[  419.742644] b43-phy0: Controller restarted
[  419.742678] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  419.742684] b43-phy0: Controller RESET (DMA error) ...
[  419.742718] b43-phy0 debug: Wireless interface stopped
[  419.742812] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.742881] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.744276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.746463] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.748295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.750293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  419.897461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  419.899848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  421.282462] b43-phy0 debug: Chip initialized
[  421.282620] b43-phy0 debug: 64-bit DMA initialized
[  421.291219] Registered led device: b43-phy0::tx
[  421.291242] Registered led device: b43-phy0::rx
[  421.291367] Registered led device: b43-phy0::radio
[  421.291626] b43-phy0 debug: Wireless interface started
[  421.291629] b43-phy0: Controller restarted
[  421.291659] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  421.291664] b43-phy0: Controller RESET (DMA error) ...
[  421.291701] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  421.291706] b43-phy0: Controller RESET (DMA error) ...
[  421.291741] b43-phy0 debug: Wireless interface stopped
[  421.291836] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.291904] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.293276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.295298] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.297295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.299294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  421.445461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  421.447848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  422.830475] b43-phy0 debug: Chip initialized
[  422.830640] b43-phy0 debug: 64-bit DMA initialized
[  422.839230] Registered led device: b43-phy0::tx
[  422.839319] Registered led device: b43-phy0::rx
[  422.839533] Registered led device: b43-phy0::radio
[  422.839604] b43-phy0 debug: Wireless interface started
[  422.839668] b43-phy0 debug: Wireless interface stopped
[  422.839762] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.839829] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.841285] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.843495] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.845295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.847294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  422.993447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  422.995834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  424.378466] b43-phy0 debug: Chip initialized
[  424.378620] b43-phy0 debug: 64-bit DMA initialized
[  424.387237] Registered led device: b43-phy0::tx
[  424.387329] Registered led device: b43-phy0::rx
[  424.387542] Registered led device: b43-phy0::radio
[  424.387612] b43-phy0 debug: Wireless interface started
[  424.387680] b43-phy0 debug: Wireless interface stopped
[  424.388560] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.388784] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.390266] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.392302] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.394295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.396293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  424.542448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  424.544836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  425.927463] b43-phy0 debug: Chip initialized
[  425.927629] b43-phy0 debug: 64-bit DMA initialized
[  425.936228] Registered led device: b43-phy0::tx
[  425.936341] Registered led device: b43-phy0::rx
[  425.936556] Registered led device: b43-phy0::radio
[  425.936627] b43-phy0 debug: Wireless interface started
[  425.936631] __ratelimit: 6 callbacks suppressed
[  425.936661] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  425.936665] b43-phy0: Controller RESET (DMA error) ...
[  425.936669] b43-phy0: Controller restarted
[  425.936702] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  425.936708] b43-phy0: Controller RESET (DMA error) ...
[  425.936742] b43-phy0 debug: Wireless interface stopped
[  425.936837] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  425.936905] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  425.938277] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  425.940463] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  425.942295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  425.944293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  426.090448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  426.092835] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  427.475466] b43-phy0 debug: Chip initialized
[  427.475623] b43-phy0 debug: 64-bit DMA initialized
[  427.484220] Registered led device: b43-phy0::tx
[  427.484242] Registered led device: b43-phy0::rx
[  427.484366] Registered led device: b43-phy0::radio
[  427.484626] b43-phy0 debug: Wireless interface started
[  427.484629] b43-phy0: 
[  427.484655] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  427.484660] b43-phy0: Controller RESET (DMA error) ...
[  427.484663] Controller restarted
[  427.484697] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  427.484702] b43-phy0: Controller RESET (DMA error) ...
[  427.484737] b43-phy0 debug: Wireless interface stopped
[  427.484833] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.485056] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.487273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.489295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.491294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.493293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  427.639448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  427.641833] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  429.024462] b43-phy0 debug: Chip initialized
[  429.024619] b43-phy0 debug: 64-bit DMA initialized
[  429.033223] Registered led device: b43-phy0::tx
[  429.033244] Registered led device: b43-phy0::rx
[  429.033368] Registered led device: b43-phy0::radio
[  429.033627] b43-phy0 debug: Wireless interface started
[  429.033691] b43-phy0 debug: Wireless interface stopped
[  429.033787] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.033855] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.035277] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.037298] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.039295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.041294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  429.187461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  429.189853] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  430.572480] b43-phy0 debug: Chip initialized
[  430.572647] b43-phy0 debug: 64-bit DMA initialized
[  430.581230] Registered led device: b43-phy0::tx
[  430.581319] Registered led device: b43-phy0::rx
[  430.581533] Registered led device: b43-phy0::radio
[  430.581604] b43-phy0 debug: Wireless interface started
[  430.581703] b43-phy0 debug: Wireless interface stopped
[  430.581802] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.582027] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.584266] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.586296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.588294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.590293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  430.736461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  430.738849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  432.121466] b43-phy0 debug: Chip initialized
[  432.121623] b43-phy0 debug: 64-bit DMA initialized
[  432.130222] Registered led device: b43-phy0::tx
[  432.130245] Registered led device: b43-phy0::rx
[  432.130368] Registered led device: b43-phy0::radio
[  432.130628] b43-phy0 debug: Wireless interface started
[  432.130631] __ratelimit: 8 callbacks suppressed
[  432.130661] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  432.130665] b43-phy0: Controller RESET (DMA error) ...
[  432.130669] b43-phy0: Controller restarted
[  432.130702] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  432.130708] b43-phy0: Controller RESET (DMA error) ...
[  432.130742] b43-phy0 debug: Wireless interface stopped
[  432.130836] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.130905] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.132276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.134497] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.136294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.138293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  432.284448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  432.286837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  433.669478] b43-phy0 debug: Chip initialized
[  433.669642] b43-phy0 debug: 64-bit DMA initialized
[  433.678227] Registered led device: b43-phy0::tx
[  433.678260] Registered led device: b43-phy0::rx
[  433.678375] Registered led device: b43-phy0::radio
[  433.678636] b43-phy0 debug: Wireless interface started
[  433.678639] b43-phy0: 
[  433.678668] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  433.678673] b43-phy0: Controller RESET (DMA error) ...
[  433.678676] Controller restarted
[  433.678710] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  433.678715] b43-phy0: Controller RESET (DMA error) ...
[  433.678750] b43-phy0 debug: Wireless interface stopped
[  433.678847] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.679069] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.681275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.683296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.685294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.687294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  433.833448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  433.835836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  435.218479] b43-phy0 debug: Chip initialized
[  435.218632] b43-phy0 debug: 64-bit DMA initialized
[  435.227216] Registered led device: b43-phy0::tx
[  435.227238] Registered led device: b43-phy0::rx
[  435.227361] Registered led device: b43-phy0::radio
[  435.227620] b43-phy0 debug: Wireless interface started
[  435.227684] b43-phy0 debug: Wireless interface stopped
[  435.227781] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.228003] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.229275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.231496] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.233298] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.235294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  435.381460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  435.383846] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  436.766466] b43-phy0 debug: Chip initialized
[  436.766622] b43-phy0 debug: 64-bit DMA initialized
[  436.775222] Registered led device: b43-phy0::tx
[  436.775244] Registered led device: b43-phy0::rx
[  436.775368] Registered led device: b43-phy0::radio
[  436.775627] b43-phy0 debug: Wireless interface started
[  436.775726] b43-phy0 debug: Wireless interface stopped
[  436.775816] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.775849] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.777266] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.779288] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.781294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.783293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  436.930448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  436.932836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  438.315478] b43-phy0 debug: Chip initialized
[  438.315644] b43-phy0 debug: 64-bit DMA initialized
[  438.324226] Registered led device: b43-phy0::tx
[  438.324249] Registered led device: b43-phy0::rx
[  438.324375] Registered led device: b43-phy0::radio
[  438.324635] b43-phy0 debug: Wireless interface started
[  438.324638] __ratelimit: 8 callbacks suppressed
[  438.324669] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  438.324674] b43-phy0: Controller RESET (DMA error) ...
[  438.324677] b43-phy0: Controller restarted
[  438.324710] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  438.324716] b43-phy0: Controller RESET (DMA error) ...
[  438.324750] b43-phy0 debug: Wireless interface stopped
[  438.324847] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.325070] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.327267] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.329284] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.331294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.333293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  438.479460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  438.481850] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  439.864475] b43-phy0 debug: Chip initialized
[  439.864630] b43-phy0 debug: 64-bit DMA initialized
[  439.873219] Registered led device: b43-phy0::tx
[  439.873241] Registered led device: b43-phy0::rx
[  439.873365] Registered led device: b43-phy0::radio
[  439.873624] b43-phy0 debug: Wireless interface started
[  439.873627] b43-phy0: 
[  439.873654] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  439.873658] b43-phy0: Controller RESET (DMA error) ...
[  439.873661] Controller restarted
[  439.873695] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  439.873700] b43-phy0: Controller RESET (DMA error) ...
[  439.873735] b43-phy0 debug: Wireless interface stopped
[  439.873831] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  439.873901] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  439.875277] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  439.877496] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  439.879294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  439.881293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  440.027468] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  440.029857] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  441.412466] b43-phy0 debug: Chip initialized
[  441.412636] b43-phy0 debug: 64-bit DMA initialized
[  441.421231] Registered led device: b43-phy0::tx
[  441.421322] Registered led device: b43-phy0::rx
[  441.421536] Registered led device: b43-phy0::radio
[  441.421607] b43-phy0 debug: Wireless interface started
[  441.421670] b43-phy0 debug: Wireless interface stopped
[  441.421767] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.421990] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.423274] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.425499] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.427295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.429294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  441.575448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  441.577837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  442.960478] b43-phy0 debug: Chip initialized
[  442.960632] b43-phy0 debug: 64-bit DMA initialized
[  442.969218] Registered led device: b43-phy0::tx
[  442.969240] Registered led device: b43-phy0::rx
[  442.969364] Registered led device: b43-phy0::radio
[  442.969625] b43-phy0 debug: Wireless interface started
[  442.969721] b43-phy0 debug: Wireless interface stopped
[  442.969809] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  442.969842] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  442.971275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  442.973285] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  442.975294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  442.977293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  443.123448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  443.125832] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  444.508478] b43-phy0 debug: Chip initialized
[  444.508642] b43-phy0 debug: 64-bit DMA initialized
[  444.517040] Registered led device: b43-phy0::tx
[  444.517063] Registered led device: b43-phy0::rx
[  444.517085] Registered led device: b43-phy0::radio
[  444.517156] b43-phy0 debug: Wireless interface started
[  444.517160] __ratelimit: 8 callbacks suppressed
[  444.517190] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  444.517194] b43-phy0: Controller RESET (DMA error) ...
[  444.517198] b43-phy0: Controller restarted
[  444.517232] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  444.517237] b43-phy0: Controller RESET (DMA error) ...
[  444.517284] b43-phy0 debug: Wireless interface stopped
[  444.517969] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.518192] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.520285] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.522297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.524297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.526293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  444.672447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  444.674837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  446.057465] b43-phy0 debug: Chip initialized
[  446.057620] b43-phy0 debug: 64-bit DMA initialized
[  446.066216] Registered led device: b43-phy0::tx
[  446.066238] Registered led device: b43-phy0::rx
[  446.066362] Registered led device: b43-phy0::radio
[  446.066621] b43-phy0 debug: Wireless interface started
[  446.066624] b43-phy0: 
[  446.066651] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  446.066655] b43-phy0: Controller RESET (DMA error) ...
[  446.066658] Controller restarted
[  446.066692] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  446.066698] b43-phy0: Controller RESET (DMA error) ...
[  446.066732] b43-phy0 debug: Wireless interface stopped
[  446.066827] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.066895] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.068276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.070297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.072295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.074293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  446.220447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  446.222832] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  447.605478] b43-phy0 debug: Chip initialized
[  447.605636] b43-phy0 debug: 64-bit DMA initialized
[  447.614220] Registered led device: b43-phy0::tx
[  447.614240] Registered led device: b43-phy0::rx
[  447.614362] Registered led device: b43-phy0::radio
[  447.614621] b43-phy0 debug: Wireless interface started
[  447.614685] b43-phy0 debug: Wireless interface stopped
[  447.614780] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.614847] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.616275] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.618470] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.620294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.622293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  447.768462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  447.770847] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  449.153464] b43-phy0 debug: Chip initialized
[  449.153619] b43-phy0 debug: 64-bit DMA initialized
[  449.162215] Registered led device: b43-phy0::tx
[  449.162237] Registered led device: b43-phy0::rx
[  449.162359] Registered led device: b43-phy0::radio
[  449.162618] b43-phy0 debug: Wireless interface started
[  449.162714] b43-phy0 debug: Wireless interface stopped
[  449.162803] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.162834] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.164265] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.166471] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.168298] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.170293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  449.316449] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  449.318839] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  450.701476] b43-phy0 debug: Chip initialized
[  450.701631] b43-phy0 debug: 64-bit DMA initialized
[  450.710215] Registered led device: b43-phy0::tx
[  450.710237] Registered led device: b43-phy0::rx
[  450.710360] Registered led device: b43-phy0::radio
[  450.710619] b43-phy0 debug: Wireless interface started
[  450.710622] __ratelimit: 8 callbacks suppressed
[  450.710652] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  450.710656] b43-phy0: Controller RESET (DMA error) ...
[  450.710659] b43-phy0: Controller restarted
[  450.710693] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  450.710699] b43-phy0: Controller RESET (DMA error) ...
[  450.710733] b43-phy0 debug: Wireless interface stopped
[  450.710824] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.710892] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.712276] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.714498] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.716293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.718293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  450.864461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  450.866849] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  452.432273] b43-phy0 debug: Chip initialized
[  452.432448] b43-phy0 debug: 64-bit DMA initialized
[  452.442906] Registered led device: b43-phy0::tx
[  452.442929] Registered led device: b43-phy0::rx
[  452.442953] Registered led device: b43-phy0::radio
[  452.443043] b43-phy0 debug: Wireless interface started
[  452.443046] b43-phy0: 
[  452.443079] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  452.443083] b43-phy0: Controller RESET (DMA error) ...
[  452.443085] Controller restarted
[  452.443119] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  452.443123] b43-phy0: Controller RESET (DMA error) ...
[  452.443158] b43-phy0 debug: Wireless interface stopped
[  452.443256] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.443480] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.446018] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.448049] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.450054] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.452039] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  452.600454] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  452.602842] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  453.985455] b43-phy0 debug: Chip initialized
[  453.985615] b43-phy0 debug: 64-bit DMA initialized
[  453.994538] Registered led device: b43-phy0::tx
[  453.995380] Registered led device: b43-phy0::rx
[  453.995597] Registered led device: b43-phy0::radio
[  453.995668] b43-phy0 debug: Wireless interface started
[  453.995705] b43-phy0 debug: Wireless interface stopped
[  453.995810] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  453.996047] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  453.998017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  454.000230] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  454.002220] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  454.004214] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  454.151441] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  454.153826] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  455.536470] b43-phy0 debug: Chip initialized
[  455.536627] b43-phy0 debug: 64-bit DMA initialized
[  455.545511] Registered led device: b43-phy0::tx
[  455.545906] Registered led device: b43-phy0::rx
[  455.546749] Registered led device: b43-phy0::radio
[  455.547023] b43-phy0 debug: Wireless interface started
[  455.547397] b43-phy0 debug: Wireless interface stopped
[  455.547509] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.547735] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.549017] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.551221] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.553221] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.555212] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  455.702454] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  455.704840] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  457.087455] b43-phy0 debug: Chip initialized
[  457.087612] b43-phy0 debug: 64-bit DMA initialized
[  457.096515] Registered led device: b43-phy0::tx
[  457.096997] Registered led device: b43-phy0::rx
[  457.097482] Registered led device: b43-phy0::radio
[  457.097971] b43-phy0 debug: Wireless interface started
[  457.097975] __ratelimit: 6 callbacks suppressed
[  457.097977] b43-phy0: Controller restarted
[  457.098004] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  457.098010] b43-phy0: Controller RESET (DMA error) ...
[  457.098043] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  457.098050] b43-phy0: Controller RESET (DMA error) ...
[  457.098622] b43-phy0 debug: Wireless interface stopped
[  457.098741] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.098966] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.101250] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.103218] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.105212] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.107213] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  457.253439] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  457.255828] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  458.639470] b43-phy0 debug: Chip initialized
[  458.639622] b43-phy0 debug: 64-bit DMA initialized
[  458.648219] Registered led device: b43-phy0::tx
[  458.648279] Registered led device: b43-phy0::rx
[  458.648301] Registered led device: b43-phy0::radio
[  458.648371] b43-phy0 debug: Wireless interface started
[  458.648373] b43-phy0: Controller restarted
[  458.648401] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  458.648405] b43-phy0: Controller RESET (DMA error) ...
[  458.648445] b43-phy0 debug: Wireless interface stopped
[  458.648530] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.648560] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.650015] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.652018] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.654221] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.656220] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  458.803452] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  458.805838] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  460.188458] b43-phy0 debug: Chip initialized
[  460.188610] b43-phy0 debug: 64-bit DMA initialized
[  460.197520] Registered led device: b43-phy0::tx
[  460.197913] Registered led device: b43-phy0::rx
[  460.198755] Registered led device: b43-phy0::radio
[  460.199028] b43-phy0 debug: Wireless interface started
[  460.199031] b43-phy0: Controller restarted
[  460.199076] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  460.199460] b43-phy0 debug: Wireless interface stopped
[  460.199568] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.199794] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.201016] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.203219] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.205222] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.207212] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  460.354454] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  460.356844] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  461.739469] b43-phy0 debug: Chip initialized
[  461.739620] b43-phy0 debug: 64-bit DMA initialized
[  461.748505] Registered led device: b43-phy0::tx
[  461.748901] Registered led device: b43-phy0::rx
[  461.749741] Registered led device: b43-phy0::radio
[  461.750013] b43-phy0 debug: Wireless interface started
[  461.750221] b43-phy0 debug: Wireless interface stopped
[  461.750332] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.750555] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.752018] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.754224] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.756216] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.758214] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  461.905440] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  461.907825] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  463.290459] b43-phy0 debug: Chip initialized
[  463.290626] b43-phy0 debug: 64-bit DMA initialized
[  463.299598] Registered led device: b43-phy0::tx
[  463.300440] Registered led device: b43-phy0::rx
[  463.300655] Registered led device: b43-phy0::radio
[  463.300726] b43-phy0 debug: Wireless interface started
[  463.300729] __ratelimit: 8 callbacks suppressed
[  463.300731] b43-phy0: Controller restarted
[  463.300774] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  463.300780] b43-phy0: Controller RESET (DMA error) ...
[  463.300818] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  463.300823] b43-phy0: Controller RESET (DMA error) ...
[  463.300859] b43-phy0 debug: Wireless interface stopped
[  463.300972] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.301199] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.303270] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.305292] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.307293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.309293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  463.455460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  463.457848] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  464.840476] b43-phy0 debug: Chip initialized
[  464.840632] b43-phy0 debug: 64-bit DMA initialized
[  464.849216] Registered led device: b43-phy0::tx
[  464.849239] Registered led device: b43-phy0::rx
[  464.849776] Registered led device: b43-phy0::radio
[  464.850041] b43-phy0 debug: Wireless interface started
[  464.850044] b43-phy0: Controller restarted
[  464.850077] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  464.850082] b43-phy0: Controller RESET (DMA error) ...
[  464.850116] b43-phy0 debug: Wireless interface stopped
[  464.850212] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  464.850448] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  464.853508] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  464.855306] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  464.857297] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  464.859296] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  465.005456] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  465.007841] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  466.390477] b43-phy0 debug: Chip initialized
[  466.390632] b43-phy0 debug: 64-bit DMA initialized
[  466.399514] Registered led device: b43-phy0::tx
[  466.399992] Registered led device: b43-phy0::rx
[  466.400489] Registered led device: b43-phy0::radio
[  466.400749] b43-phy0 debug: Wireless interface started
[  466.400752] b43-phy0: Controller restarted
[  466.400785] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  466.400822] b43-phy0 debug: Wireless interface stopped
[  466.402349] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.402573] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.404293] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.406293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.408293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.410293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  466.556447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  466.558836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  467.941475] b43-phy0 debug: Chip initialized
[  467.941628] b43-phy0 debug: 64-bit DMA initialized
[  467.950503] Registered led device: b43-phy0::tx
[  467.950979] Registered led device: b43-phy0::rx
[  467.951831] Registered led device: b43-phy0::radio
[  467.952093] b43-phy0 debug: Wireless interface started
[  467.952188] b43-phy0 debug: Wireless interface stopped
[  467.952620] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  467.952844] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  467.954272] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  467.956295] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  467.958294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  467.960294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  468.106450] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  468.108837] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  469.491465] b43-phy0 debug: Chip initialized
[  469.491618] b43-phy0 debug: 64-bit DMA initialized
[  469.500520] Registered led device: b43-phy0::tx
[  469.500997] Registered led device: b43-phy0::rx
[  469.501501] Registered led device: b43-phy0::radio
[  469.501761] b43-phy0 debug: Wireless interface started
[  469.501765] __ratelimit: 6 callbacks suppressed
[  469.501767] b43-phy0: Controller restarted
[  469.501800] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  469.501806] b43-phy0: Controller RESET (DMA error) ...
[  469.501841] b43-phy0 debug: Wireless interface stopped
[  469.503436] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.503662] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.505290] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.507293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.509295] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.511295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  469.657447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  469.659836] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  471.042476] b43-phy0 debug: Chip initialized
[  471.042630] b43-phy0 debug: 64-bit DMA initialized
[  471.051516] Registered led device: b43-phy0::tx
[  471.051995] Registered led device: b43-phy0::rx
[  471.052497] Registered led device: b43-phy0::radio
[  471.052757] b43-phy0 debug: Wireless interface started
[  471.052760] b43-phy0: Controller restarted
[  471.052793] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  471.052799] b43-phy0: Controller RESET (DMA error) ...
[  471.052829] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  471.052833] b43-phy0: Controller RESET (DMA error) ...
[  471.052868] b43-phy0 debug: Wireless interface stopped
[  471.054298] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.054525] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.056302] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.058293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.060296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.062295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  471.208446] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  471.210830] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  472.593477] b43-phy0 debug: Chip initialized
[  472.593634] b43-phy0 debug: 64-bit DMA initialized
[  472.602530] Registered led device: b43-phy0::tx
[  472.603011] Registered led device: b43-phy0::rx
[  472.603483] Registered led device: b43-phy0::radio
[  472.603976] b43-phy0 debug: Wireless interface started
[  472.603979] b43-phy0: Controller restarted
[  472.604020] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  472.604084] b43-phy0 debug: Wireless interface stopped
[  472.604844] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.605073] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.607283] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.609294] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.611294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.613293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  472.759460] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  472.761846] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  474.144466] b43-phy0 debug: Chip initialized
[  474.144632] b43-phy0 debug: 64-bit DMA initialized
[  474.153040] Registered led device: b43-phy0::tx
[  474.153063] Registered led device: b43-phy0::rx
[  474.153085] Registered led device: b43-phy0::radio
[  474.153156] b43-phy0 debug: Wireless interface started
[  474.153262] b43-phy0 debug: Wireless interface stopped
[  474.154888] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.155121] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.157278] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.159281] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.161289] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.163303] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  474.309279] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  474.311671] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  475.694465] b43-phy0 debug: Chip initialized
[  475.694628] b43-phy0 debug: 64-bit DMA initialized
[  475.703543] Registered led device: b43-phy0::tx
[  475.704384] Registered led device: b43-phy0::rx
[  475.704599] Registered led device: b43-phy0::radio
[  475.704668] b43-phy0 debug: Wireless interface started
[  475.704671] __ratelimit: 8 callbacks suppressed
[  475.704673] b43-phy0: Controller restarted
[  475.704711] b43-phy0 debug: Wireless interface stopped
[  475.704815] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.705041] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.706273] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.708297] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.710296] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.712297] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  475.858447] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  475.860834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  477.243477] b43-phy0 debug: Chip initialized
[  477.243631] b43-phy0 debug: 64-bit DMA initialized
[  477.252518] Registered led device: b43-phy0::tx
[  477.253000] Registered led device: b43-phy0::rx
[  477.253496] Registered led device: b43-phy0::radio
[  477.253988] b43-phy0 debug: Wireless interface started
[  477.253992] b43-phy0: Controller restarted
[  477.254031] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  477.254037] b43-phy0: Controller RESET (DMA error) ...
[  477.254075] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  477.254080] b43-phy0: Controller RESET (DMA error) ...
[  477.254121] b43-phy0 debug: Wireless interface stopped
[  477.254966] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.255194] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.257295] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.259293] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.261294] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.263293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  477.409462] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  477.411851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  478.794475] b43-phy0 debug: Chip initialized
[  478.794627] b43-phy0 debug: 64-bit DMA initialized
[  478.803212] Registered led device: b43-phy0::tx
[  478.803233] Registered led device: b43-phy0::rx
[  478.803775] Registered led device: b43-phy0::radio
[  478.804041] b43-phy0 debug: Wireless interface started
[  478.804043] b43-phy0: Controller restarted
[  478.804071] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  478.804077] b43-phy0: Controller RESET (DMA error) ...
[  478.804109] b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
[  478.805130] b43-phy0 debug: Wireless interface stopped
[  478.805495] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.805719] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.807284] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.809302] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.811298] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.813293] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  478.960461] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  478.962851] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  480.345480] b43-phy0 debug: Chip initialized
[  480.345646] b43-phy0 debug: 64-bit DMA initialized
[  480.354590] Registered led device: b43-phy0::tx
[  480.355450] Registered led device: b43-phy0::rx
[  480.355665] Registered led device: b43-phy0::radio
[  480.355736] b43-phy0 debug: Wireless interface started
[  480.355857] b43-phy0 debug: Wireless interface stopped
[  480.355966] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.356193] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.357268] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.359284] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.361300] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.363295] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  480.509448] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
[  480.511834] b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
[  481.894474] b43-phy0 debug: Chip initialized
[  481.894634] b43-phy0 debug: 64-bit DMA initialized
[  481.903521] Registered led device: b43-phy0::tx
[  481.904015] Registered led device: b43-phy0::rx
[  481.904490] Registered led device: b43-phy0::radio
[  481.904983] b43-phy0 debug: Wireless interface started
[  481.905105] b43-phy0 debug: Wireless interface stopped
[  481.905777] b43-phy0 debug: DMA-64 rx_ring: Used slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
[  481.906004] b43-phy0 debug: DMA-64 tx_ring_AC_BK: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  481.907498] b43-phy0 debug: DMA-64 tx_ring_AC_BE: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  481.909296] b43-phy0 debug: DMA-64 tx_ring_AC_VI: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  481.911293] b43-phy0 debug: DMA-64 tx_ring_AC_VO: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00
[  481.913294] b43-phy0 debug: DMA-64 tx_ring_mcast: Used slots 0/256, Failed frames 0/0 = 0.0%, Average tries 0.00


From netrolller.3d at gmail.com  Tue Sep  8 16:08:06 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 8 Sep 2009 16:08:06 +0200
Subject: b43 dma error
In-Reply-To: <20090908134732.GA1936@darkstar>
References: <20090908134732.GA1936@darkstar>
Message-ID: <69e28c910909080708n5233a6cfue555bfce170eb145@mail.gmail.com>

Do you have the threaded-IRQ patches applied? Also, what card is this?
(BCM4312?) Try upgrading your firmare (use v478 or the new v5xx one).


From mb at bu3sch.de  Tue Sep  8 16:38:35 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 8 Sep 2009 16:38:35 +0200
Subject: b43 dma error
In-Reply-To: <20090908134732.GA1936@darkstar>
References: <20090908134732.GA1936@darkstar>
Message-ID: <200909081638.36897.mb@bu3sch.de>

On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
> I tested wireless-testing b43 driver, but got "Fatal DMA error"
> then the controller keep restarting...
> 
> Please tell what I can provide or test, Thanks.

Is this a regression? If so, please bisect.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Sep  8 16:54:01 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 08 Sep 2009 09:54:01 -0500
Subject: b43 dma error
In-Reply-To: <200909081638.36897.mb@bu3sch.de>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
Message-ID: <4AA67009.4020400@lwfinger.net>

Michael Buesch wrote:
> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>> then the controller keep restarting...
>>
>> Please tell what I can provide or test, Thanks.
> 
> Is this a regression? If so, please bisect.

It is something specific to his system as I don't see anything like
this. In addition, there are some users on the openSUSE forums that
have implemented the latest compat-wireless and switched away from
Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
them.

Please reboot so that we see the ssb output as well. Use the command

dmesg | egrep "ssb|b43"

That way we will be able to see exactly what kind of device you have
and what revisions are in it. AFAIK, the testing to date has been
limited to Rev 1 PHYs and Rev 2 radios.

Larry




From mb at bu3sch.de  Tue Sep  8 19:30:12 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 8 Sep 2009 19:30:12 +0200
Subject: [PATCH] ssb: Implement SDIO host bus support
Message-ID: <200909081930.12806.mb@bu3sch.de>

From: Albert Herranz <albert_herranz at yahoo.es>

Add support for communicating with a Sonics Silicon Backplane through a
SDIO interface, as found in the Nintendo Wii WLAN daughter card.

The Nintendo Wii WLAN card includes a custom Broadcom 4318 chip with
a SDIO host interface.

Signed-off-by: Albert Herranz <albert_herranz at yahoo.es>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

---
 drivers/ssb/Kconfig       |   14 +
 drivers/ssb/Makefile      |    1 +
 drivers/ssb/main.c        |   58 +++++-
 drivers/ssb/scan.c        |   11 +
 drivers/ssb/sdio.c        |  611 +++++++++++++++++++++++++++++++++++++++++++++
 drivers/ssb/ssb_private.h |   40 +++
 include/linux/ssb/ssb.h   |   32 +++
 7 files changed, 766 insertions(+), 1 deletions(-)
 create mode 100644 drivers/ssb/sdio.c

Index: wireless-testing/drivers/ssb/Kconfig
===================================================================
--- wireless-testing.orig/drivers/ssb/Kconfig	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/drivers/ssb/Kconfig	2009-09-08 19:14:13.000000000 +0200
@@ -66,6 +66,20 @@ config SSB_PCMCIAHOST
 
 	  If unsure, say N
 
+config SSB_SDIOHOST_POSSIBLE
+	bool
+	depends on SSB && (MMC = y || MMC = SSB)
+	default y
+
+config SSB_SDIOHOST
+	bool "Support for SSB on SDIO-bus host"
+	depends on SSB_SDIOHOST_POSSIBLE
+	help
+	  Support for a Sonics Silicon Backplane on top
+	  of a SDIO device.
+
+	  If unsure, say N
+
 config SSB_SILENT
 	bool "No SSB kernel messages"
 	depends on SSB && EMBEDDED
Index: wireless-testing/drivers/ssb/Makefile
===================================================================
--- wireless-testing.orig/drivers/ssb/Makefile	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/drivers/ssb/Makefile	2009-09-08 19:14:13.000000000 +0200
@@ -6,6 +6,7 @@ ssb-$(CONFIG_SSB_SPROM)			+= sprom.o
 # host support
 ssb-$(CONFIG_SSB_PCIHOST)		+= pci.o pcihost_wrapper.o
 ssb-$(CONFIG_SSB_PCMCIAHOST)		+= pcmcia.o
+ssb-$(CONFIG_SSB_SDIOHOST)		+= sdio.o
 
 # built-in drivers
 ssb-y					+= driver_chipcommon.o
Index: wireless-testing/drivers/ssb/main.c
===================================================================
--- wireless-testing.orig/drivers/ssb/main.c	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/drivers/ssb/main.c	2009-09-08 19:14:13.000000000 +0200
@@ -17,6 +17,7 @@
 #include <linux/ssb/ssb_driver_gige.h>
 #include <linux/dma-mapping.h>
 #include <linux/pci.h>
+#include <linux/mmc/sdio_func.h>
 
 #include <pcmcia/cs_types.h>
 #include <pcmcia/cs.h>
@@ -88,6 +89,25 @@ found:
 }
 #endif /* CONFIG_SSB_PCMCIAHOST */
 
+#ifdef CONFIG_SSB_SDIOHOST
+struct ssb_bus *ssb_sdio_func_to_bus(struct sdio_func *func)
+{
+	struct ssb_bus *bus;
+
+	ssb_buses_lock();
+	list_for_each_entry(bus, &buses, list) {
+		if (bus->bustype == SSB_BUSTYPE_SDIO &&
+		    bus->host_sdio == func)
+			goto found;
+	}
+	bus = NULL;
+found:
+	ssb_buses_unlock();
+
+	return bus;
+}
+#endif /* CONFIG_SSB_SDIOHOST */
+
 int ssb_for_each_bus_call(unsigned long data,
 			  int (*func)(struct ssb_bus *bus, unsigned long data))
 {
@@ -469,6 +489,12 @@ static int ssb_devices_register(struct s
 			dev->parent = &bus->host_pcmcia->dev;
 #endif
 			break;
+		case SSB_BUSTYPE_SDIO:
+#ifdef CONFIG_SSB_SDIO
+			sdev->irq = bus->host_sdio->dev.irq;
+			dev->parent = &bus->host_sdio->dev;
+#endif
+			break;
 		case SSB_BUSTYPE_SSB:
 			dev->dma_mask = &dev->coherent_dma_mask;
 			break;
@@ -724,12 +750,18 @@ static int ssb_bus_register(struct ssb_b
 	err = ssb_pci_xtal(bus, SSB_GPIO_XTAL | SSB_GPIO_PLL, 1);
 	if (err)
 		goto out;
+
+	/* Init SDIO-host device (if any), before the scan */
+	err = ssb_sdio_init(bus);
+	if (err)
+		goto err_disable_xtal;
+
 	ssb_buses_lock();
 	bus->busnumber = next_busnumber;
 	/* Scan for devices (cores) */
 	err = ssb_bus_scan(bus, baseaddr);
 	if (err)
-		goto err_disable_xtal;
+		goto err_sdio_exit;
 
 	/* Init PCI-host device (if any) */
 	err = ssb_pci_init(bus);
@@ -776,6 +808,8 @@ err_pci_exit:
 	ssb_pci_exit(bus);
 err_unmap:
 	ssb_iounmap(bus);
+err_sdio_exit:
+	ssb_sdio_exit(bus);
 err_disable_xtal:
 	ssb_buses_unlock();
 	ssb_pci_xtal(bus, SSB_GPIO_XTAL | SSB_GPIO_PLL, 0);
@@ -825,6 +859,28 @@ int ssb_bus_pcmciabus_register(struct ss
 EXPORT_SYMBOL(ssb_bus_pcmciabus_register);
 #endif /* CONFIG_SSB_PCMCIAHOST */
 
+#ifdef CONFIG_SSB_SDIOHOST
+int ssb_bus_sdiobus_register(struct ssb_bus *bus, struct sdio_func *func,
+			     unsigned int quirks)
+{
+	int err;
+
+	bus->bustype = SSB_BUSTYPE_SDIO;
+	bus->host_sdio = func;
+	bus->ops = &ssb_sdio_ops;
+	bus->quirks = quirks;
+
+	err = ssb_bus_register(bus, ssb_sdio_get_invariants, ~0);
+	if (!err) {
+		ssb_printk(KERN_INFO PFX "Sonics Silicon Backplane found on "
+			   "SDIO device %s\n", sdio_func_id(func));
+	}
+
+	return err;
+}
+EXPORT_SYMBOL(ssb_bus_sdiobus_register);
+#endif /* CONFIG_SSB_PCMCIAHOST */
+
 int ssb_bus_ssbbus_register(struct ssb_bus *bus,
 			    unsigned long baseaddr,
 			    ssb_invariants_func_t get_invariants)
Index: wireless-testing/drivers/ssb/scan.c
===================================================================
--- wireless-testing.orig/drivers/ssb/scan.c	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/drivers/ssb/scan.c	2009-09-08 19:14:13.000000000 +0200
@@ -175,6 +175,9 @@ static u32 scan_read32(struct ssb_bus *b
 		} else
 			ssb_pcmcia_switch_segment(bus, 0);
 		break;
+	case SSB_BUSTYPE_SDIO:
+		offset += current_coreidx * SSB_CORE_SIZE;
+		return ssb_sdio_scan_read32(bus, offset);
 	}
 	return readl(bus->mmio + offset);
 }
@@ -188,6 +191,8 @@ static int scan_switchcore(struct ssb_bu
 		return ssb_pci_switch_coreidx(bus, coreidx);
 	case SSB_BUSTYPE_PCMCIA:
 		return ssb_pcmcia_switch_coreidx(bus, coreidx);
+	case SSB_BUSTYPE_SDIO:
+		return ssb_sdio_scan_switch_coreidx(bus, coreidx);
 	}
 	return 0;
 }
@@ -206,6 +211,8 @@ void ssb_iounmap(struct ssb_bus *bus)
 		SSB_BUG_ON(1); /* Can't reach this code. */
 #endif
 		break;
+	case SSB_BUSTYPE_SDIO:
+		break;
 	}
 	bus->mmio = NULL;
 	bus->mapped_device = NULL;
@@ -230,6 +237,10 @@ static void __iomem *ssb_ioremap(struct 
 		SSB_BUG_ON(1); /* Can't reach this code. */
 #endif
 		break;
+	case SSB_BUSTYPE_SDIO:
+		/* Nothing to ioremap in the SDIO case, just fake it */
+		mmio = (void __iomem *)baseaddr;
+		break;
 	}
 
 	return mmio;
Index: wireless-testing/drivers/ssb/sdio.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/ssb/sdio.c	2009-09-08 19:14:13.000000000 +0200
@@ -0,0 +1,610 @@
+/*
+ * Sonics Silicon Backplane
+ * SDIO-Hostbus related functions
+ *
+ * Copyright 2009 Albert Herranz <albert_herranz at yahoo.es>
+ *
+ * Based on drivers/ssb/pcmcia.c
+ * Copyright 2006 Johannes Berg <johannes at sipsolutions.net>
+ * Copyright 2007-2008 Michael Buesch <mb at bu3sch.de>
+ *
+ * Licensed under the GNU/GPL. See COPYING for details.
+ *
+ */
+
+#include <linux/ssb/ssb.h>
+#include <linux/delay.h>
+#include <linux/io.h>
+#include <linux/etherdevice.h>
+#include <linux/mmc/sdio_func.h>
+
+#include "ssb_private.h"
+
+/* Define the following to 1 to enable a printk on each coreswitch. */
+#define SSB_VERBOSE_SDIOCORESWITCH_DEBUG		1
+
+
+/* Hardware invariants CIS tuples */
+#define SSB_SDIO_CIS			0x80
+#define  SSB_SDIO_CIS_SROMREV		0x00
+#define  SSB_SDIO_CIS_ID		0x01
+#define  SSB_SDIO_CIS_BOARDREV		0x02
+#define  SSB_SDIO_CIS_PA		0x03
+#define   SSB_SDIO_CIS_PA_PA0B0_LO	0
+#define   SSB_SDIO_CIS_PA_PA0B0_HI	1
+#define   SSB_SDIO_CIS_PA_PA0B1_LO	2
+#define   SSB_SDIO_CIS_PA_PA0B1_HI	3
+#define   SSB_SDIO_CIS_PA_PA0B2_LO	4
+#define   SSB_SDIO_CIS_PA_PA0B2_HI	5
+#define   SSB_SDIO_CIS_PA_ITSSI		6
+#define   SSB_SDIO_CIS_PA_MAXPOW	7
+#define  SSB_SDIO_CIS_OEMNAME		0x04
+#define  SSB_SDIO_CIS_CCODE		0x05
+#define  SSB_SDIO_CIS_ANTENNA		0x06
+#define  SSB_SDIO_CIS_ANTGAIN		0x07
+#define  SSB_SDIO_CIS_BFLAGS		0x08
+#define  SSB_SDIO_CIS_LEDS		0x09
+
+#define CISTPL_FUNCE_LAN_NODE_ID        0x04	/* same as in PCMCIA */
+
+
+/*
+ * Function 1 miscellaneous registers.
+ *
+ * Definitions match src/include/sbsdio.h from the
+ * Android Open Source Project
+ * http://android.git.kernel.org/?p=platform/system/wlan/broadcom.git
+ *
+ */
+#define SBSDIO_FUNC1_SBADDRLOW	0x1000a	/* SB Address window Low (b15) */
+#define SBSDIO_FUNC1_SBADDRMID	0x1000b	/* SB Address window Mid (b23-b16) */
+#define SBSDIO_FUNC1_SBADDRHIGH	0x1000c	/* SB Address window High (b24-b31) */
+
+/* valid bits in SBSDIO_FUNC1_SBADDRxxx regs */
+#define SBSDIO_SBADDRLOW_MASK	0x80	/* Valid address bits in SBADDRLOW */
+#define SBSDIO_SBADDRMID_MASK	0xff	/* Valid address bits in SBADDRMID */
+#define SBSDIO_SBADDRHIGH_MASK	0xff	/* Valid address bits in SBADDRHIGH */
+
+#define SBSDIO_SB_OFT_ADDR_MASK	0x7FFF	/* sb offset addr is <= 15 bits, 32k */
+
+/* REVISIT: this flag doesn't seem to matter */
+#define SBSDIO_SB_ACCESS_2_4B_FLAG	0x8000	/* forces 32-bit SB access */
+
+
+/*
+ * Address map within the SDIO function address space (128K).
+ *
+ *   Start   End     Description
+ *   ------- ------- ------------------------------------------
+ *   0x00000 0x0ffff selected backplane address window (64K)
+ *   0x10000 0x1ffff backplane control registers (max 64K)
+ *
+ * The current address window is configured by writing to registers
+ * SBADDRLOW, SBADDRMID and SBADDRHIGH.
+ *
+ * In order to access the contents of a 32-bit Silicon Backplane address
+ * the backplane address window must be first loaded with the highest
+ * 16 bits of the target address. Then, an access must be done to the
+ * SDIO function address space using the lower 15 bits of the address.
+ * Bit 15 of the address must be set when doing 32 bit accesses.
+ *
+ * 10987654321098765432109876543210
+ * WWWWWWWWWWWWWWWWW                 SB Address Window
+ *                 OOOOOOOOOOOOOOOO  Offset within SB Address Window
+ *                 a                 32-bit access flag
+ */
+
+
+/*
+ * SSB I/O via SDIO.
+ *
+ * NOTE: SDIO address @addr is 17 bits long (SDIO address space is 128K).
+ */
+
+static inline struct device *ssb_sdio_dev(struct ssb_bus *bus)
+{
+	return &bus->host_sdio->dev;
+}
+
+/* host claimed */
+static int ssb_sdio_writeb(struct ssb_bus *bus, unsigned int addr, u8 val)
+{
+	int error = 0;
+
+	sdio_writeb(bus->host_sdio, val, addr, &error);
+	if (unlikely(error)) {
+		dev_dbg(ssb_sdio_dev(bus), "%08X <- %02x, error %d\n",
+			addr, val, error);
+	}
+
+	return error;
+}
+
+#if 0
+static u8 ssb_sdio_readb(struct ssb_bus *bus, unsigned int addr)
+{
+	u8 val;
+	int error = 0;
+
+	val = sdio_readb(bus->host_sdio, addr, &error);
+	if (unlikely(error)) {
+		dev_dbg(ssb_sdio_dev(bus), "%08X -> %02x, error %d\n",
+			addr, val, error);
+	}
+
+	return val;
+}
+#endif
+
+/* host claimed */
+static int ssb_sdio_set_sbaddr_window(struct ssb_bus *bus, u32 address)
+{
+	int error;
+
+	error = ssb_sdio_writeb(bus, SBSDIO_FUNC1_SBADDRLOW,
+				(address >> 8) & SBSDIO_SBADDRLOW_MASK);
+	if (error)
+		goto out;
+	error = ssb_sdio_writeb(bus, SBSDIO_FUNC1_SBADDRMID,
+				(address >> 16) & SBSDIO_SBADDRMID_MASK);
+	if (error)
+		goto out;
+	error = ssb_sdio_writeb(bus, SBSDIO_FUNC1_SBADDRHIGH,
+				(address >> 24) & SBSDIO_SBADDRHIGH_MASK);
+	if (error)
+		goto out;
+	bus->sdio_sbaddr = address;
+out:
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "failed to set address window"
+			" to 0x%08x, error %d\n", address, error);
+	}
+
+	return error;
+}
+
+/* for enumeration use only */
+u32 ssb_sdio_scan_read32(struct ssb_bus *bus, u16 offset)
+{
+	u32 val;
+	int error;
+
+	sdio_claim_host(bus->host_sdio);
+	val = sdio_readl(bus->host_sdio, offset, &error);
+	sdio_release_host(bus->host_sdio);
+	if (unlikely(error)) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X > %08x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+
+	return val;
+}
+
+/* for enumeration use only */
+int ssb_sdio_scan_switch_coreidx(struct ssb_bus *bus, u8 coreidx)
+{
+	u32 sbaddr;
+	int error;
+
+	sbaddr = (coreidx * SSB_CORE_SIZE) + SSB_ENUM_BASE;
+	sdio_claim_host(bus->host_sdio);
+	error = ssb_sdio_set_sbaddr_window(bus, sbaddr);
+	sdio_release_host(bus->host_sdio);
+	if (error) {
+		dev_err(ssb_sdio_dev(bus), "failed to switch to core %u,"
+			" error %d\n", coreidx, error);
+		goto out;
+	}
+out:
+	return error;
+}
+
+/* host must be already claimed */
+int ssb_sdio_switch_core(struct ssb_bus *bus, struct ssb_device *dev)
+{
+	u8 coreidx = dev->core_index;
+	u32 sbaddr;
+	int error = 0;
+
+	sbaddr = (coreidx * SSB_CORE_SIZE) + SSB_ENUM_BASE;
+	if (unlikely(bus->sdio_sbaddr != sbaddr)) {
+#if SSB_VERBOSE_SDIOCORESWITCH_DEBUG
+		dev_info(ssb_sdio_dev(bus),
+			   "switching to %s core, index %d\n",
+			   ssb_core_name(dev->id.coreid), coreidx);
+#endif
+		error = ssb_sdio_set_sbaddr_window(bus, sbaddr);
+		if (error) {
+			dev_dbg(ssb_sdio_dev(bus), "failed to switch to"
+				" core %u, error %d\n", coreidx, error);
+			goto out;
+		}
+		bus->mapped_device = dev;
+	}
+
+out:
+	return error;
+}
+
+static u8 ssb_sdio_read8(struct ssb_device *dev, u16 offset)
+{
+	struct ssb_bus *bus = dev->bus;
+	u8 val = 0xff;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	val = sdio_readb(bus->host_sdio, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X > %02x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+out:
+	sdio_release_host(bus->host_sdio);
+
+	return val;
+}
+
+static u16 ssb_sdio_read16(struct ssb_device *dev, u16 offset)
+{
+	struct ssb_bus *bus = dev->bus;
+	u16 val = 0xffff;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	val = sdio_readw(bus->host_sdio, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X > %04x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+out:
+	sdio_release_host(bus->host_sdio);
+
+	return val;
+}
+
+static u32 ssb_sdio_read32(struct ssb_device *dev, u16 offset)
+{
+	struct ssb_bus *bus = dev->bus;
+	u32 val = 0xffffffff;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	offset |= SBSDIO_SB_ACCESS_2_4B_FLAG;	/* 32 bit data access */
+	val = sdio_readl(bus->host_sdio, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X > %08x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+out:
+	sdio_release_host(bus->host_sdio);
+
+	return val;
+}
+
+#ifdef CONFIG_SSB_BLOCKIO
+static void ssb_sdio_block_read(struct ssb_device *dev, void *buffer,
+				  size_t count, u16 offset, u8 reg_width)
+{
+	size_t saved_count = count;
+	struct ssb_bus *bus = dev->bus;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev))) {
+		error = -EIO;
+		memset(buffer, 0xff, count);
+		goto err_out;
+	}
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+
+	switch (reg_width) {
+	case sizeof(u8): {
+		error = sdio_readsb(bus->host_sdio, buffer, offset, count);
+		break;
+	}
+	case sizeof(u16): {
+		SSB_WARN_ON(count & 1);
+		error = sdio_readsb(bus->host_sdio, buffer, offset, count);
+		break;
+	}
+	case sizeof(u32): {
+		SSB_WARN_ON(count & 3);
+		offset |= SBSDIO_SB_ACCESS_2_4B_FLAG;	/* 32 bit data access */
+		error = sdio_readsb(bus->host_sdio, buffer, offset, count);
+		break;
+	}
+	default:
+		SSB_WARN_ON(1);
+	}
+	if (!error)
+		goto out;
+
+err_out:
+	dev_dbg(ssb_sdio_dev(bus), "%04X:%04X (width=%u, len=%u), error %d\n",
+		bus->sdio_sbaddr >> 16, offset, reg_width, saved_count, error);
+out:
+	sdio_release_host(bus->host_sdio);
+}
+#endif /* CONFIG_SSB_BLOCKIO */
+
+static void ssb_sdio_write8(struct ssb_device *dev, u16 offset, u8 val)
+{
+	struct ssb_bus *bus = dev->bus;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	sdio_writeb(bus->host_sdio, val, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X < %02x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+out:
+	sdio_release_host(bus->host_sdio);
+}
+
+static void ssb_sdio_write16(struct ssb_device *dev, u16 offset, u16 val)
+{
+	struct ssb_bus *bus = dev->bus;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	sdio_writew(bus->host_sdio, val, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X < %04x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+out:
+	sdio_release_host(bus->host_sdio);
+}
+
+static void ssb_sdio_write32(struct ssb_device *dev, u16 offset, u32 val)
+{
+	struct ssb_bus *bus = dev->bus;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev)))
+		goto out;
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+	offset |= SBSDIO_SB_ACCESS_2_4B_FLAG;	/* 32 bit data access */
+	sdio_writel(bus->host_sdio, val, offset, &error);
+	if (error) {
+		dev_dbg(ssb_sdio_dev(bus), "%04X:%04X < %08x, error %d\n",
+			bus->sdio_sbaddr >> 16, offset, val, error);
+	}
+	if (bus->quirks & SSB_QUIRK_SDIO_READ_AFTER_WRITE32)
+		sdio_readl(bus->host_sdio, 0, &error);
+out:
+	sdio_release_host(bus->host_sdio);
+}
+
+#ifdef CONFIG_SSB_BLOCKIO
+static void ssb_sdio_block_write(struct ssb_device *dev, const void *buffer,
+				   size_t count, u16 offset, u8 reg_width)
+{
+	size_t saved_count = count;
+	struct ssb_bus *bus = dev->bus;
+	int error = 0;
+
+	sdio_claim_host(bus->host_sdio);
+	if (unlikely(ssb_sdio_switch_core(bus, dev))) {
+		error = -EIO;
+		memset((void *)buffer, 0xff, count);
+		goto err_out;
+	}
+	offset |= bus->sdio_sbaddr & 0xffff;
+	offset &= SBSDIO_SB_OFT_ADDR_MASK;
+
+	switch (reg_width) {
+	case sizeof(u8):
+		error = sdio_writesb(bus->host_sdio, offset,
+				     (void *)buffer, count);
+		break;
+	case sizeof(u16):
+		SSB_WARN_ON(count & 1);
+		error = sdio_writesb(bus->host_sdio, offset,
+				     (void *)buffer, count);
+		break;
+	case sizeof(u32):
+		SSB_WARN_ON(count & 3);
+		offset |= SBSDIO_SB_ACCESS_2_4B_FLAG;	/* 32 bit data access */
+		error = sdio_writesb(bus->host_sdio, offset,
+				     (void *)buffer, count);
+		break;
+	default:
+		SSB_WARN_ON(1);
+	}
+	if (!error)
+		goto out;
+
+err_out:
+	dev_dbg(ssb_sdio_dev(bus), "%04X:%04X (width=%u, len=%u), error %d\n",
+		bus->sdio_sbaddr >> 16, offset, reg_width, saved_count, error);
+out:
+	sdio_release_host(bus->host_sdio);
+}
+
+#endif /* CONFIG_SSB_BLOCKIO */
+
+/* Not "static", as it's used in main.c */
+const struct ssb_bus_ops ssb_sdio_ops = {
+	.read8		= ssb_sdio_read8,
+	.read16		= ssb_sdio_read16,
+	.read32		= ssb_sdio_read32,
+	.write8		= ssb_sdio_write8,
+	.write16	= ssb_sdio_write16,
+	.write32	= ssb_sdio_write32,
+#ifdef CONFIG_SSB_BLOCKIO
+	.block_read	= ssb_sdio_block_read,
+	.block_write	= ssb_sdio_block_write,
+#endif
+};
+
+#define GOTO_ERROR_ON(condition, description) do {	\
+	if (unlikely(condition)) {			\
+		error_description = description;	\
+		goto error;				\
+	}						\
+  } while (0)
+
+int ssb_sdio_get_invariants(struct ssb_bus *bus,
+			    struct ssb_init_invariants *iv)
+{
+	struct ssb_sprom *sprom = &iv->sprom;
+	struct ssb_boardinfo *bi = &iv->boardinfo;
+	const char *error_description = "none";
+	struct sdio_func_tuple *tuple;
+	void *mac;
+
+	memset(sprom, 0xFF, sizeof(*sprom));
+	sprom->boardflags_lo = 0;
+	sprom->boardflags_hi = 0;
+
+	tuple = bus->host_sdio->tuples;
+	while (tuple) {
+		switch (tuple->code) {
+		case 0x22: /* extended function */
+			switch (tuple->data[0]) {
+			case CISTPL_FUNCE_LAN_NODE_ID:
+				GOTO_ERROR_ON((tuple->size != 7) &&
+					      (tuple->data[1] != 6),
+					      "mac tpl size");
+				/* fetch the MAC address. */
+				mac = tuple->data + 2;
+				memcpy(sprom->il0mac, mac, ETH_ALEN);
+				memcpy(sprom->et1mac, mac, ETH_ALEN);
+				break;
+			default:
+				break;
+			}
+			break;
+		case 0x80: /* vendor specific tuple */
+			switch (tuple->data[0]) {
+			case SSB_SDIO_CIS_SROMREV:
+				GOTO_ERROR_ON(tuple->size != 2,
+					      "sromrev tpl size");
+				sprom->revision = tuple->data[1];
+				break;
+			case SSB_SDIO_CIS_ID:
+				GOTO_ERROR_ON((tuple->size != 5) &&
+					      (tuple->size != 7),
+					      "id tpl size");
+				bi->vendor = tuple->data[1] |
+					     (tuple->data[2]<<8);
+				break;
+			case SSB_SDIO_CIS_BOARDREV:
+				GOTO_ERROR_ON(tuple->size != 2,
+					      "boardrev tpl size");
+				sprom->board_rev = tuple->data[1];
+				break;
+			case SSB_SDIO_CIS_PA:
+				GOTO_ERROR_ON((tuple->size != 9) &&
+					      (tuple->size != 10),
+					      "pa tpl size");
+				sprom->pa0b0 = tuple->data[1] |
+					 ((u16)tuple->data[2] << 8);
+				sprom->pa0b1 = tuple->data[3] |
+					 ((u16)tuple->data[4] << 8);
+				sprom->pa0b2 = tuple->data[5] |
+					 ((u16)tuple->data[6] << 8);
+				sprom->itssi_a = tuple->data[7];
+				sprom->itssi_bg = tuple->data[7];
+				sprom->maxpwr_a = tuple->data[8];
+				sprom->maxpwr_bg = tuple->data[8];
+				break;
+			case SSB_SDIO_CIS_OEMNAME:
+				/* Not present */
+				break;
+			case SSB_SDIO_CIS_CCODE:
+				GOTO_ERROR_ON(tuple->size != 2,
+					      "ccode tpl size");
+				sprom->country_code = tuple->data[1];
+				break;
+			case SSB_SDIO_CIS_ANTENNA:
+				GOTO_ERROR_ON(tuple->size != 2,
+					      "ant tpl size");
+				sprom->ant_available_a = tuple->data[1];
+				sprom->ant_available_bg = tuple->data[1];
+				break;
+			case SSB_SDIO_CIS_ANTGAIN:
+				GOTO_ERROR_ON(tuple->size != 2,
+					      "antg tpl size");
+				sprom->antenna_gain.ghz24.a0 = tuple->data[1];
+				sprom->antenna_gain.ghz24.a1 = tuple->data[1];
+				sprom->antenna_gain.ghz24.a2 = tuple->data[1];
+				sprom->antenna_gain.ghz24.a3 = tuple->data[1];
+				sprom->antenna_gain.ghz5.a0 = tuple->data[1];
+				sprom->antenna_gain.ghz5.a1 = tuple->data[1];
+				sprom->antenna_gain.ghz5.a2 = tuple->data[1];
+				sprom->antenna_gain.ghz5.a3 = tuple->data[1];
+				break;
+			case SSB_SDIO_CIS_BFLAGS:
+				GOTO_ERROR_ON((tuple->size != 3) &&
+					      (tuple->size != 5),
+					      "bfl tpl size");
+				sprom->boardflags_lo = tuple->data[1] |
+						 ((u16)tuple->data[2] << 8);
+				break;
+			case SSB_SDIO_CIS_LEDS:
+				GOTO_ERROR_ON(tuple->size != 5,
+					      "leds tpl size");
+				sprom->gpio0 = tuple->data[1];
+				sprom->gpio1 = tuple->data[2];
+				sprom->gpio2 = tuple->data[3];
+				sprom->gpio3 = tuple->data[4];
+				break;
+			default:
+				break;
+			}
+			break;
+		default:
+			break;
+		}
+		tuple = tuple->next;
+	}
+
+	return 0;
+error:
+	dev_err(ssb_sdio_dev(bus), "failed to fetch device invariants: %s\n",
+		error_description);
+	return -ENODEV;
+}
+
+void ssb_sdio_exit(struct ssb_bus *bus)
+{
+	if (bus->bustype != SSB_BUSTYPE_SDIO)
+		return;
+	/* Nothing to do here. */
+}
+
+int ssb_sdio_init(struct ssb_bus *bus)
+{
+	if (bus->bustype != SSB_BUSTYPE_SDIO)
+		return 0;
+
+	bus->sdio_sbaddr = ~0;
+
+	return 0;
+}
Index: wireless-testing/drivers/ssb/ssb_private.h
===================================================================
--- wireless-testing.orig/drivers/ssb/ssb_private.h	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/drivers/ssb/ssb_private.h	2009-09-08 19:14:13.000000000 +0200
@@ -114,6 +114,46 @@ static inline int ssb_pcmcia_init(struct
 }
 #endif /* CONFIG_SSB_PCMCIAHOST */
 
+/* sdio.c */
+#ifdef CONFIG_SSB_SDIOHOST
+extern int ssb_sdio_get_invariants(struct ssb_bus *bus,
+				     struct ssb_init_invariants *iv);
+
+extern u32 ssb_sdio_scan_read32(struct ssb_bus *bus, u16 offset);
+extern int ssb_sdio_switch_core(struct ssb_bus *bus, struct ssb_device *dev);
+extern int ssb_sdio_scan_switch_coreidx(struct ssb_bus *bus, u8 coreidx);
+extern int ssb_sdio_hardware_setup(struct ssb_bus *bus);
+extern void ssb_sdio_exit(struct ssb_bus *bus);
+extern int ssb_sdio_init(struct ssb_bus *bus);
+
+extern const struct ssb_bus_ops ssb_sdio_ops;
+#else /* CONFIG_SSB_SDIOHOST */
+static inline u32 ssb_sdio_scan_read32(struct ssb_bus *bus, u16 offset)
+{
+	return 0;
+}
+static inline int ssb_sdio_switch_core(struct ssb_bus *bus,
+					 struct ssb_device *dev)
+{
+	return 0;
+}
+static inline int ssb_sdio_scan_switch_coreidx(struct ssb_bus *bus, u8 coreidx)
+{
+	return 0;
+}
+static inline int ssb_sdio_hardware_setup(struct ssb_bus *bus)
+{
+	return 0;
+}
+static inline void ssb_sdio_exit(struct ssb_bus *bus)
+{
+}
+static inline int ssb_sdio_init(struct ssb_bus *bus)
+{
+	return 0;
+}
+#endif /* CONFIG_SSB_SDIOHOST */
+
 
 /* scan.c */
 extern const char *ssb_core_name(u16 coreid);
Index: wireless-testing/include/linux/ssb/ssb.h
===================================================================
--- wireless-testing.orig/include/linux/ssb/ssb.h	2009-09-08 19:13:49.000000000 +0200
+++ wireless-testing/include/linux/ssb/ssb.h	2009-09-08 19:14:13.000000000 +0200
@@ -238,6 +238,7 @@ enum ssb_bustype {
 	SSB_BUSTYPE_SSB,	/* This SSB bus is the system bus */
 	SSB_BUSTYPE_PCI,	/* SSB is connected to PCI bus */
 	SSB_BUSTYPE_PCMCIA,	/* SSB is connected to PCMCIA bus */
+	SSB_BUSTYPE_SDIO,	/* SSB is connected to SDIO bus */
 };
 
 /* board_vendor */
@@ -270,8 +271,12 @@ struct ssb_bus {
 
 	/* The core in the basic address register window. (PCI bus only) */
 	struct ssb_device *mapped_device;
-	/* Currently mapped PCMCIA segment. (bustype == SSB_BUSTYPE_PCMCIA only) */
-	u8 mapped_pcmcia_seg;
+	union {
+		/* Currently mapped PCMCIA segment. (bustype == SSB_BUSTYPE_PCMCIA only) */
+		u8 mapped_pcmcia_seg;
+		/* Current SSB base address window for SDIO. */
+		u32 sdio_sbaddr;
+	};
 	/* Lock for core and segment switching.
 	 * On PCMCIA-host busses this is used to protect the whole MMIO access. */
 	spinlock_t bar_lock;
@@ -282,6 +287,11 @@ struct ssb_bus {
 	struct pci_dev *host_pci;
 	/* Pointer to the PCMCIA device (only if bustype == SSB_BUSTYPE_PCMCIA). */
 	struct pcmcia_device *host_pcmcia;
+	/* Pointer to the SDIO device (only if bustype == SSB_BUSTYPE_SDIO). */
+	struct sdio_func *host_sdio;
+
+	/* See enum ssb_quirks */
+	unsigned int quirks;
 
 #ifdef CONFIG_SSB_SPROM
 	/* Mutex to protect the SPROM writing. */
@@ -336,6 +346,11 @@ struct ssb_bus {
 #endif /* DEBUG */
 };
 
+enum ssb_quirks {
+	/* SDIO connected card requires performing a read after writing a 32-bit value */
+	SSB_QUIRK_SDIO_READ_AFTER_WRITE32	= (1 << 0),
+};
+
 /* The initialization-invariants. */
 struct ssb_init_invariants {
 	/* Versioning information about the PCB. */
@@ -366,6 +381,12 @@ extern int ssb_bus_pcmciabus_register(st
 				      struct pcmcia_device *pcmcia_dev,
 				      unsigned long baseaddr);
 #endif /* CONFIG_SSB_PCMCIAHOST */
+#ifdef CONFIG_SSB_SDIOHOST
+extern int ssb_bus_sdiobus_register(struct ssb_bus *bus,
+				    struct sdio_func *sdio_func,
+				    unsigned int quirks);
+#endif /* CONFIG_SSB_SDIOHOST */
+
 
 extern void ssb_bus_unregister(struct ssb_bus *bus);
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Tue Sep  8 19:33:31 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 8 Sep 2009 19:33:31 +0200
Subject: [PATCH] b44/b43/b43legacy: Fix switch warnings introduced by SSB-SDIO
Message-ID: <200909081933.31981.mb@bu3sch.de>

This fixes some gcc warnings for switch statements.

Signed-off-by: Michael Buesch <mb at bu3sch.de>


Index: wireless-testing/drivers/net/b44.c
===================================================================
--- wireless-testing.orig/drivers/net/b44.c	2009-09-08 19:21:34.000000000 +0200
+++ wireless-testing/drivers/net/b44.c	2009-09-08 19:21:37.000000000 +0200
@@ -1302,10 +1302,13 @@ static void b44_chip_reset(struct b44 *b
 		     & MDIO_CTRL_MAXF_MASK)));
 		break;
 	case SSB_BUSTYPE_PCI:
-	case SSB_BUSTYPE_PCMCIA:
 		bw32(bp, B44_MDIO_CTRL, (MDIO_CTRL_PREAMBLE |
 		     (0x0d & MDIO_CTRL_MAXF_MASK)));
 		break;
+	case SSB_BUSTYPE_PCMCIA:
+	case SSB_BUSTYPE_SDIO:
+		WARN_ON(1); /* A device with this bus does not exist. */
+		break;
 	}
 
 	br32(bp, B44_MDIO_CTRL);
@@ -1763,10 +1766,13 @@ static void b44_get_drvinfo (struct net_
 	case SSB_BUSTYPE_PCI:
 		strncpy(info->bus_info, pci_name(bus->host_pci), sizeof(info->bus_info));
 		break;
-	case SSB_BUSTYPE_PCMCIA:
 	case SSB_BUSTYPE_SSB:
 		strncpy(info->bus_info, "SSB", sizeof(info->bus_info));
 		break;
+	case SSB_BUSTYPE_PCMCIA:
+	case SSB_BUSTYPE_SDIO:
+		WARN_ON(1); /* A device with this bus does not exist. */
+		break;
 	}
 }
 
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-08 19:19:01.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-08 19:25:30.000000000 +0200
@@ -4099,16 +4099,20 @@ static void b43_imcfglo_timeouts_workaro
 	    bus->pcicore.dev->id.revision <= 5) {
 		/* IMCFGLO timeouts workaround. */
 		tmp = ssb_read32(dev->dev, SSB_IMCFGLO);
-		tmp &= ~SSB_IMCFGLO_REQTO;
-		tmp &= ~SSB_IMCFGLO_SERTO;
 		switch (bus->bustype) {
 		case SSB_BUSTYPE_PCI:
 		case SSB_BUSTYPE_PCMCIA:
+			tmp &= ~SSB_IMCFGLO_REQTO;
+			tmp &= ~SSB_IMCFGLO_SERTO;
 			tmp |= 0x32;
 			break;
 		case SSB_BUSTYPE_SSB:
+			tmp &= ~SSB_IMCFGLO_REQTO;
+			tmp &= ~SSB_IMCFGLO_SERTO;
 			tmp |= 0x53;
 			break;
+		default:
+			break;
 		}
 		ssb_write32(dev->dev, SSB_IMCFGLO, tmp);
 	}
Index: wireless-testing/drivers/net/wireless/b43legacy/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43legacy/main.c	2009-08-23 00:06:40.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43legacy/main.c	2009-09-08 19:26:03.000000000 +0200
@@ -3106,16 +3106,20 @@ static void b43legacy_imcfglo_timeouts_w
 	    bus->pcicore.dev->id.revision <= 5) {
 		/* IMCFGLO timeouts workaround. */
 		tmp = ssb_read32(dev->dev, SSB_IMCFGLO);
-		tmp &= ~SSB_IMCFGLO_REQTO;
-		tmp &= ~SSB_IMCFGLO_SERTO;
 		switch (bus->bustype) {
 		case SSB_BUSTYPE_PCI:
 		case SSB_BUSTYPE_PCMCIA:
+			tmp &= ~SSB_IMCFGLO_REQTO;
+			tmp &= ~SSB_IMCFGLO_SERTO;
 			tmp |= 0x32;
 			break;
 		case SSB_BUSTYPE_SSB:
+			tmp &= ~SSB_IMCFGLO_REQTO;
+			tmp &= ~SSB_IMCFGLO_SERTO;
 			tmp |= 0x53;
 			break;
+		default:
+			break;
 		}
 		ssb_write32(dev->dev, SSB_IMCFGLO, tmp);
 	}

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Tue Sep  8 20:06:49 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 8 Sep 2009 20:06:49 +0200
Subject: b43 dma error
In-Reply-To: <4AA69961.9010808@gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
Message-ID: <69e28c910909081106p413b70d8u83a48a63943f123e@mail.gmail.com>

On Tue, Sep 8, 2009 at 7:50 PM, John Daiker<daikerjohn at gmail.com> wrote:
> On 09/08/2009 07:54 AM, Larry Finger wrote:
>>
>> Michael Buesch wrote:
>>>
>>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>>>>
>>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>>>> then the controller keep restarting...
>>>>
>>>> Please tell what I can provide or test, Thanks.
>>>
>>> Is this a regression? If so, please bisect.
>>
>> It is something specific to his system as I don't see anything like
>> this. In addition, there are some users on the openSUSE forums that
>> have implemented the latest compat-wireless and switched away from
>> Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
>> them.
>>
>> Please reboot so that we see the ssb output as well. Use the command
>>
>> dmesg | egrep "ssb|b43"
>>
>> That way we will be able to see exactly what kind of device you have
>> and what revisions are in it. AFAIK, the testing to date has been
>> limited to Rev 1 PHYs and Rev 2 radios.
>>
>> Larry
>>
>
> I can confirm the same issue. ?I have a HP Mini 1116NR with a Broadcom 4312.
> ?Looks to be a PHY 1, Radio 2:
>
> --snip--
> [ ?456.165296] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
> [ ?456.165364] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062,
> Revision 2
> --snip--
>
> I've attached the output of 'dmesg | egrep "ssb|b43"', my kernel config, and
> lspci -vv and lspci -nn
>
> Note: With the dmesg output, I had unloaded the b43 module previous
> 'modprobe -r b43' and then loaded it again with debug output: 'modprobe b43
> verbose=3'
>
> John Daiker
>

Again, please test with v478 or v5xx firmware.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Tue Sep  8 20:13:39 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 8 Sep 2009 20:13:39 +0200
Subject: b43 dma error
In-Reply-To: <4AA69961.9010808@gmail.com>
References: <20090908134732.GA1936@darkstar> <4AA67009.4020400@lwfinger.net>
	<4AA69961.9010808@gmail.com>
Message-ID: <200909082013.41929.mb@bu3sch.de>

On Tuesday 08 September 2009 19:50:25 John Daiker wrote:
> On 09/08/2009 07:54 AM, Larry Finger wrote:
> > Michael Buesch wrote:
> >> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
> >>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
> >>> then the controller keep restarting...
> >>>
> >>> Please tell what I can provide or test, Thanks.
> >>
> >> Is this a regression? If so, please bisect.
> >
> > It is something specific to his system as I don't see anything like
> > this. In addition, there are some users on the openSUSE forums that
> > have implemented the latest compat-wireless and switched away from
> > Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
> > them.
> >
> > Please reboot so that we see the ssb output as well. Use the command
> >
> > dmesg | egrep "ssb|b43"
> >
> > That way we will be able to see exactly what kind of device you have
> > and what revisions are in it. AFAIK, the testing to date has been
> > limited to Rev 1 PHYs and Rev 2 radios.
> >
> > Larry
> >
> 
> I can confirm the same issue.  I have a HP Mini 1116NR with a Broadcom 4312.  Looks to be a PHY 1, Radio 2:
> 
> --snip--
> [  456.165296] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
> [  456.165364] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, Revision 2
> --snip--
> 
> I've attached the output of 'dmesg | egrep "ssb|b43"', my kernel config, and lspci -vv and lspci -nn
> 
> Note: With the dmesg output, I had unloaded the b43 module previous 'modprobe -r b43' and then loaded it again with debug output: 'modprobe b43 verbose=3'
> 
> John Daiker
> 

To ask the question once again: Is this a regression?
This is a critical question to track down the bug.

-- 
Greetings, Michael.


From mb at bu3sch.de  Tue Sep  8 20:15:16 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 8 Sep 2009 20:15:16 +0200
Subject: b43 dma error
In-Reply-To: <69e28c910909081106p413b70d8u83a48a63943f123e@mail.gmail.com>
References: <20090908134732.GA1936@darkstar> <4AA69961.9010808@gmail.com>
	<69e28c910909081106p413b70d8u83a48a63943f123e@mail.gmail.com>
Message-ID: <200909082015.17943.mb@bu3sch.de>

On Tuesday 08 September 2009 20:06:49 G?bor Stefanik wrote:
> On Tue, Sep 8, 2009 at 7:50 PM, John Daiker<daikerjohn at gmail.com> wrote:
> > On 09/08/2009 07:54 AM, Larry Finger wrote:
> >>
> >> Michael Buesch wrote:
> >>>
> >>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
> >>>>
> >>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
> >>>> then the controller keep restarting...
> >>>>
> >>>> Please tell what I can provide or test, Thanks.
> >>>
> >>> Is this a regression? If so, please bisect.
> >>
> >> It is something specific to his system as I don't see anything like
> >> this. In addition, there are some users on the openSUSE forums that
> >> have implemented the latest compat-wireless and switched away from
> >> Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
> >> them.
> >>
> >> Please reboot so that we see the ssb output as well. Use the command
> >>
> >> dmesg | egrep "ssb|b43"
> >>
> >> That way we will be able to see exactly what kind of device you have
> >> and what revisions are in it. AFAIK, the testing to date has been
> >> limited to Rev 1 PHYs and Rev 2 radios.
> >>
> >> Larry
> >>
> >
> > I can confirm the same issue. ?I have a HP Mini 1116NR with a Broadcom 4312.
> > ?Looks to be a PHY 1, Radio 2:
> >
> > --snip--
> > [ ?456.165296] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
> > [ ?456.165364] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062,
> > Revision 2
> > --snip--
> >
> > I've attached the output of 'dmesg | egrep "ssb|b43"', my kernel config, and
> > lspci -vv and lspci -nn
> >
> > Note: With the dmesg output, I had unloaded the b43 module previous
> > 'modprobe -r b43' and then loaded it again with debug output: 'modprobe b43
> > verbose=3'
> >
> > John Daiker
> >
> 
> Again, please test with v478 or v5xx firmware.
> 

This won't help. The DMA engine reports a descriptor error. That means the device
was unable to fetch the control data via DMA. Most of the time this indicates
a bug/failure/quirk in the platform DMA implementation.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Sep  8 20:16:01 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 08 Sep 2009 13:16:01 -0500
Subject: b43 dma error
In-Reply-To: <4AA69961.9010808@gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
Message-ID: <4AA69F61.2040300@lwfinger.net>

John Daiker wrote:
> On 09/08/2009 07:54 AM, Larry Finger wrote:
>> Michael Buesch wrote:
>>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>>>> then the controller keep restarting...
>>>>
>>>> Please tell what I can provide or test, Thanks.
>>>
>>> Is this a regression? If so, please bisect.
>>
>> It is something specific to his system as I don't see anything like
>> this. In addition, there are some users on the openSUSE forums that
>> have implemented the latest compat-wireless and switched away from
>> Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
>> them.
>>
>> Please reboot so that we see the ssb output as well. Use the command
>>
>> dmesg | egrep "ssb|b43"
>>
>> That way we will be able to see exactly what kind of device you have
>> and what revisions are in it. AFAIK, the testing to date has been
>> limited to Rev 1 PHYs and Rev 2 radios.
>>
>> Larry
>>
> 
> I can confirm the same issue.  I have a HP Mini 1116NR with a Broadcom
> 4312.  Looks to be a PHY 1, Radio 2:
> 
> --snip--
> [  456.165296] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
> [  456.165364] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062,
> Revision 2
> --snip--
> 
> I've attached the output of 'dmesg | egrep "ssb|b43"', my kernel config,
> and lspci -vv and lspci -nn
> 
> Note: With the dmesg output, I had unloaded the b43 module previous
> 'modprobe -r b43' and then loaded it again with debug output: 'modprobe
 b43 verbose=3'

Your PHY and your radio are the same as mine. In fact, the one thing I
noticed is that you are using i386 architecture, whereas mine is
x86_64. I have not tested with i386.

Has anyone run the LP PHY modifications with 32-bit architecture?

Larry


From netrolller.3d at gmail.com  Tue Sep  8 20:24:26 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 8 Sep 2009 20:24:26 +0200
Subject: b43 dma error
In-Reply-To: <4AA69F61.2040300@lwfinger.net>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com> 
	<4AA69F61.2040300@lwfinger.net>
Message-ID: <69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>

On Tue, Sep 8, 2009 at 8:16 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
> John Daiker wrote:
>> On 09/08/2009 07:54 AM, Larry Finger wrote:
>>> Michael Buesch wrote:
>>>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>>>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>>>>> then the controller keep restarting...
>>>>>
>>>>> Please tell what I can provide or test, Thanks.
>>>>
>>>> Is this a regression? If so, please bisect.
>>>
>>> It is something specific to his system as I don't see anything like
>>> this. In addition, there are some users on the openSUSE forums that
>>> have implemented the latest compat-wireless and switched away from
>>> Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
>>> them.
>>>
>>> Please reboot so that we see the ssb output as well. Use the command
>>>
>>> dmesg | egrep "ssb|b43"
>>>
>>> That way we will be able to see exactly what kind of device you have
>>> and what revisions are in it. AFAIK, the testing to date has been
>>> limited to Rev 1 PHYs and Rev 2 radios.
>>>
>>> Larry
>>>
>>
>> I can confirm the same issue. ?I have a HP Mini 1116NR with a Broadcom
>> 4312. ?Looks to be a PHY 1, Radio 2:
>>
>> --snip--
>> [ ?456.165296] b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
>> [ ?456.165364] b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062,
>> Revision 2
>> --snip--
>>
>> I've attached the output of 'dmesg | egrep "ssb|b43"', my kernel config,
>> and lspci -vv and lspci -nn
>>
>> Note: With the dmesg output, I had unloaded the b43 module previous
>> 'modprobe -r b43' and then loaded it again with debug output: 'modprobe
> ?b43 verbose=3'
>
> Your PHY and your radio are the same as mine. In fact, the one thing I
> noticed is that you are using i386 architecture, whereas mine is
> x86_64. I have not tested with i386.
>
> Has anyone run the LP PHY modifications with 32-bit architecture?

Yes, me. (With the exact same card as John.)

>
> Larry
> --
> To unsubscribe from this list: send the line "unsubscribe linux-wireless" in
> the body of a message to majordomo at vger.kernel.org
> More majordomo info at ?http://vger.kernel.org/majordomo-info.html
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Tue Sep  8 20:26:59 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 08 Sep 2009 13:26:59 -0500
Subject: b43 dma error
In-Reply-To: <200909082015.17943.mb@bu3sch.de>
References: <20090908134732.GA1936@darkstar> <4AA69961.9010808@gmail.com>
	<69e28c910909081106p413b70d8u83a48a63943f123e@mail.gmail.com>
	<200909082015.17943.mb@bu3sch.de>
Message-ID: <4AA6A1F3.4070202@lwfinger.net>

Michael Buesch wrote:
> 
> This won't help. The DMA engine reports a descriptor error. That means the device
> was unable to fetch the control data via DMA. Most of the time this indicates
> a bug/failure/quirk in the platform DMA implementation.

I can confirm that mine still works on x86_64 with firmware 410.

I have a spare partition that I will use to load an i386 version of
openSUSE 11.2 M6. That comes with a 2.6.31 kernel and it will be easy
to implement compat-wireless.

Larry





From Larry.Finger at lwfinger.net  Tue Sep  8 20:30:11 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 08 Sep 2009 13:30:11 -0500
Subject: b43 dma error
In-Reply-To: <69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
	<4AA69F61.2040300@lwfinger.net>
	<69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>
Message-ID: <4AA6A2B3.2010300@lwfinger.net>

G?bor Stefanik wrote:
> On Tue, Sep 8, 2009 at 8:16 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
>> Your PHY and your radio are the same as mine. In fact, the one thing I
>> noticed is that you are using i386 architecture, whereas mine is
>> x86_64. I have not tested with i386.
>>
>> Has anyone run the LP PHY modifications with 32-bit architecture?
> 
> Yes, me. (With the exact same card as John.)

Is it a maximum memory issue? How much for you?

John and Dave: Same question.

Larry


From netrolller.3d at gmail.com  Tue Sep  8 20:32:13 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 8 Sep 2009 20:32:13 +0200
Subject: b43 dma error
In-Reply-To: <4AA6A2B3.2010300@lwfinger.net>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com> 
	<4AA69F61.2040300@lwfinger.net>
	<69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com> 
	<4AA6A2B3.2010300@lwfinger.net>
Message-ID: <69e28c910909081132l464c2effq31665b22365de1c2@mail.gmail.com>

2009/9/8 Larry Finger <Larry.Finger at lwfinger.net>:
> G?bor Stefanik wrote:
>> On Tue, Sep 8, 2009 at 8:16 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
>>> Your PHY and your radio are the same as mine. In fact, the one thing I
>>> noticed is that you are using i386 architecture, whereas mine is
>>> x86_64. I have not tested with i386.
>>>
>>> Has anyone run the LP PHY modifications with 32-bit architecture?
>>
>> Yes, me. (With the exact same card as John.)
>
> Is it a maximum memory issue? How much for you?
>
> John and Dave: Same question.
>
> Larry
>

2GB here.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Tue Sep  8 20:54:17 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 8 Sep 2009 13:54:17 -0500
Subject: b43 dma error
In-Reply-To: <69e28c910909081132l464c2effq31665b22365de1c2@mail.gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
	<4AA69F61.2040300@lwfinger.net>
	<69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>
	<4AA6A2B3.2010300@lwfinger.net>
	<69e28c910909081132l464c2effq31665b22365de1c2@mail.gmail.com>
Message-ID: <791046240909081154ga3daa8avf2842d01e87db60d@mail.gmail.com>

2009/9/8 G?bor Stefanik <netrolller.3d at gmail.com>

> 2009/9/8 Larry Finger <Larry.Finger at lwfinger.net>:
> > G?bor Stefanik wrote:
> >> On Tue, Sep 8, 2009 at 8:16 PM, Larry Finger<Larry.Finger at lwfinger.net>
> wrote:
> >>> Your PHY and your radio are the same as mine. In fact, the one thing I
> >>> noticed is that you are using i386 architecture, whereas mine is
> >>> x86_64. I have not tested with i386.
> >>>
> >>> Has anyone run the LP PHY modifications with 32-bit architecture?
> >>
> >> Yes, me. (With the exact same card as John.)
> >
> > Is it a maximum memory issue? How much for you?
> >
> > John and Dave: Same question.
> >
> > Larry
> >
>
> 2GB here.
>

Having 1 or 2 GB shouldn't be a problem.  My trial will be with 3 - right on
the pae kernel boundary.

Larry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090908/5895d6f2/attachment.html>

From Larry.Finger at lwfinger.net  Wed Sep  9 04:07:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 08 Sep 2009 21:07:18 -0500
Subject: b43 dma error
In-Reply-To: <69e28c910909081132l464c2effq31665b22365de1c2@mail.gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
	<4AA69F61.2040300@lwfinger.net>
	<69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>
	<4AA6A2B3.2010300@lwfinger.net>
	<69e28c910909081132l464c2effq31665b22365de1c2@mail.gmail.com>
Message-ID: <4AA70DD6.8040905@lwfinger.net>

After some tests with the 32-bit architecture, I'm now thoroughly
confused. I tried different memory models including PAE - everything
worked. I even generated a 2.6.31-rc9-wl kernel with John's config and
it worked. Whatever is happening is not related to his configuration.
I'm not sure what the problem is.

I'm going to be offline for a few days - I hope the solution will be
in my mailbox by the weekend.

Larry



From hidave.darkstar at gmail.com  Wed Sep  9 10:02:39 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Wed, 9 Sep 2009 16:02:39 +0800
Subject: b43 dma error
In-Reply-To: <4AA67009.4020400@lwfinger.net>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net>
Message-ID: <a8e1da0909090102t1d6f3380y94683a188c09db06@mail.gmail.com>

On Tue, Sep 8, 2009 at 10:54 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
> Michael Buesch wrote:
>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>>> then the controller keep restarting...
>>>
>>> Please tell what I can provide or test, Thanks.
>>
>> Is this a regression? If so, please bisect.
>
> It is something specific to his system as I don't see anything like
> this. In addition, there are some users on the openSUSE forums that
> have implemented the latest compat-wireless and switched away from
> Broadcom wl to b43 on their LP PHY devices. So far, no complaints from
> them.
>
> Please reboot so that we see the ssb output as well. Use the command
>
> dmesg | egrep "ssb|b43"
>
> That way we will be able to see exactly what kind of device you have
> and what revisions are in it. AFAIK, the testing to date has been
> limited to Rev 1 PHYs and Rev 2 radios.

I use a public pc and I have no lan access for my laptop, so just hand
copy something:

b43-pci-bridge 0000:0c:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
b43-pci-bridge 0000:0c:00.0: setting latency timer to 64
ssb SInics Silicon Backplane found on PCI device 0000:0c:00.0
b43-phy0: Broadcom 4312 WLAN found (core revision 15)
b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, Revision 2

>
> Larry
>
>
>



-- 
Regards
dave


From hidave.darkstar at gmail.com  Wed Sep  9 09:54:59 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Wed, 9 Sep 2009 15:54:59 +0800
Subject: b43 dma error
In-Reply-To: <69e28c910909080708n5233a6cfue555bfce170eb145@mail.gmail.com>
References: <20090908134732.GA1936@darkstar>
	<69e28c910909080708n5233a6cfue555bfce170eb145@mail.gmail.com>
Message-ID: <a8e1da0909090054o15068c06waaa028124ffdddc3@mail.gmail.com>

2009/9/8 G?bor Stefanik <netrolller.3d at gmail.com>:
> Do you have the threaded-IRQ patches applied?
Could you point the url? where can I get them?

> Also, what card is this?
> (BCM4312?) Try upgrading your firmare (use v478 or the new v5xx one).
>

Yes, BCM4312, I use the firmware according to the guide in
linux-wireless web page, where is the v5xx, could you tell more?

-- 
Regards
dave


From hidave.darkstar at gmail.com  Wed Sep  9 09:56:57 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Wed, 9 Sep 2009 15:56:57 +0800
Subject: b43 dma error
In-Reply-To: <200909081638.36897.mb@bu3sch.de>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
Message-ID: <a8e1da0909090056q722057d8m4b5da8afbcb7d975@mail.gmail.com>

On Tue, Sep 8, 2009 at 10:38 PM, Michael Buesch<mb at bu3sch.de> wrote:
> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>> then the controller keep restarting...
>>
>> Please tell what I can provide or test, Thanks.
>
> Is this a regression? If so, please bisect.

Not sure, It's the first time for me to use b43 with the lp-phy
because I happend to know it is supported now.

If it's a regression I can do bisection.

>
> --
> Greetings, Michael.
>



-- 
Regards
dave


From hidave.darkstar at gmail.com  Wed Sep  9 10:05:50 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Wed, 9 Sep 2009 16:05:50 +0800
Subject: b43 dma error
In-Reply-To: <4AA6A2B3.2010300@lwfinger.net>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<4AA67009.4020400@lwfinger.net> <4AA69961.9010808@gmail.com>
	<4AA69F61.2040300@lwfinger.net>
	<69e28c910909081124v71e6fa1cy815a2366385051e6@mail.gmail.com>
	<4AA6A2B3.2010300@lwfinger.net>
Message-ID: <a8e1da0909090105l5848480cgc0aba1c3f6ced6e4@mail.gmail.com>

2009/9/9 Larry Finger <Larry.Finger at lwfinger.net>:
> G?bor Stefanik wrote:
>> On Tue, Sep 8, 2009 at 8:16 PM, Larry Finger<Larry.Finger at lwfinger.net> wrote:
>>> Your PHY and your radio are the same as mine. In fact, the one thing I
>>> noticed is that you are using i386 architecture, whereas mine is
>>> x86_64. I have not tested with i386.
>>>
>>> Has anyone run the LP PHY modifications with 32-bit architecture?
>>
>> Yes, me. (With the exact same card as John.)
>
> Is it a maximum memory issue? How much for you?

1G memory for me.

>
> John and Dave: Same question.
>
> Larry
>



-- 
Regards
dave


From hidave.darkstar at gmail.com  Thu Sep 10 03:28:51 2009
From: hidave.darkstar at gmail.com (Dave Young)
Date: Thu, 10 Sep 2009 09:28:51 +0800
Subject: b43 dma error
In-Reply-To: <a8e1da0909090056q722057d8m4b5da8afbcb7d975@mail.gmail.com>
References: <20090908134732.GA1936@darkstar> <200909081638.36897.mb@bu3sch.de>
	<a8e1da0909090056q722057d8m4b5da8afbcb7d975@mail.gmail.com>
Message-ID: <a8e1da0909091828u20b0eadasc471093036a312ad@mail.gmail.com>

On Wed, Sep 9, 2009 at 3:56 PM, Dave Young<hidave.darkstar at gmail.com> wrote:
> On Tue, Sep 8, 2009 at 10:38 PM, Michael Buesch<mb at bu3sch.de> wrote:
>> On Tuesday 08 September 2009 15:47:32 Dave Young wrote:
>>> I tested wireless-testing b43 driver, but got "Fatal DMA error"
>>> then the controller keep restarting...
>>>
>>> Please tell what I can provide or test, Thanks.
>>
>> Is this a regression? If so, please bisect.
>
> Not sure, It's the first time for me to use b43 with the lp-phy
> because I happend to know it is supported now.
>
> If it's a regression I can do bisection.

Add larry/john/Markus to cc-list

News:

With following config option set to y, b43 works happily now.
CONFIG_B43_FORCE_PIO=y

>
>>
>> --
>> Greetings, Michael.
>>
>
>
>
> --
> Regards
> dave
>



-- 
Regards
dave


From mb at bu3sch.de  Thu Sep 10 19:34:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 10 Sep 2009 19:34:49 +0200
Subject: [PATCH] b43: Add Soft-MAC SDIO device support
Message-ID: <200909101934.50283.mb@bu3sch.de>

From: Albert Herranz <albert_herranz at yahoo.es>

This adds support for Soft-MAC SDIO devices to b43.
The driver still lacks some fixes for SDIO devices, so it's currently
marked as BROKEN.

Signed-off-by: Albert Herranz <albert_herranz at yahoo.es>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Depends on the SSB SDIO patch.


Index: wireless-testing/drivers/net/wireless/b43/Kconfig
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Kconfig	2009-09-10 19:23:09.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Kconfig	2009-09-10 19:33:24.000000000 +0200
@@ -61,11 +61,28 @@ config B43_PCMCIA
 
 	  If unsure, say N.
 
+config B43_SDIO
+	bool "Broadcom 43xx SDIO device support (EXPERIMENTAL)"
+	depends on B43 && SSB_SDIOHOST_POSSIBLE && EXPERIMENTAL && BROKEN
+	select SSB_SDIOHOST
+	---help---
+	  Broadcom 43xx device support for Soft-MAC SDIO devices.
+
+	  With this config option you can drive Soft-MAC b43 cards with a
+	  Secure Digital I/O interface.
+	  This includes the WLAN daughter card found on the Nintendo Wii
+	  video game console.
+	  Note that this does not support Broadcom 43xx Full-MAC devices.
+
+	  It's safe to select Y here, even if you don't have a B43 SDIO device.
+
+	  If unsure, say N.
+
 # Data transfers to the device via PIO
-# This is only needed on PCMCIA devices. All others can do DMA properly.
+# This is only needed on PCMCIA and SDIO devices. All others can do DMA properly.
 config B43_PIO
 	bool
-	depends on B43 && (B43_PCMCIA || B43_FORCE_PIO)
+	depends on B43 && (B43_SDIO || B43_PCMCIA || B43_FORCE_PIO)
 	select SSB_BLOCKIO
 	default y
 
Index: wireless-testing/drivers/net/wireless/b43/Makefile
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Makefile	2009-09-10 19:23:09.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Makefile	2009-09-10 19:23:20.000000000 +0200
@@ -16,6 +16,7 @@ b43-$(CONFIG_B43_PIO)		+= pio.o
 b43-y				+= rfkill.o
 b43-$(CONFIG_B43_LEDS)		+= leds.o
 b43-$(CONFIG_B43_PCMCIA)	+= pcmcia.o
+b43-$(CONFIG_B43_SDIO)		+= sdio.o
 b43-$(CONFIG_B43_DEBUG)		+= debugfs.o
 
 obj-$(CONFIG_B43)		+= b43.o
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-10 19:23:09.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-10 19:23:20.000000000 +0200
@@ -8,6 +8,9 @@
   Copyright (c) 2005 Danny van Dyk <kugelfang at gentoo.org>
   Copyright (c) 2005 Andreas Jaggi <andreas.jaggi at waterwave.ch>
 
+  SDIO support
+  Copyright (c) 2009 Albert Herranz <albert_herranz at yahoo.es>
+
   Some parts of the code in this file are derived from the ipw2200
   driver  Copyright(c) 2003 - 2004 Intel Corporation.
 
@@ -53,6 +56,8 @@
 #include "xmit.h"
 #include "lo.h"
 #include "pcmcia.h"
+#include "sdio.h"
+#include <linux/mmc/sdio_func.h>
 
 MODULE_DESCRIPTION("Broadcom B43 wireless driver");
 MODULE_AUTHOR("Martin Langer");
@@ -1587,7 +1592,7 @@ static void b43_beacon_update_trigger_wo
 	mutex_lock(&wl->mutex);
 	dev = wl->current_dev;
 	if (likely(dev && (b43_status(dev) >= B43_STAT_INITIALIZED))) {
-		if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
+		if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
 			/* wl->mutex is enough. */
 			b43_do_beacon_update_trigger_work(dev);
 			mmiowb();
@@ -1905,6 +1910,27 @@ static irqreturn_t b43_interrupt_handler
 	return ret;
 }
 
+/* SDIO interrupt handler. This runs in process context. */
+static void b43_sdio_interrupt_handler(struct b43_wldev *dev)
+{
+	struct b43_wl *wl = dev->wl;
+	struct sdio_func *func = dev->dev->bus->host_sdio;
+	irqreturn_t ret;
+
+	if (unlikely(b43_status(dev) < B43_STAT_STARTED))
+		return;
+
+	mutex_lock(&wl->mutex);
+	sdio_release_host(func);
+
+	ret = b43_do_interrupt(dev);
+	if (ret == IRQ_WAKE_THREAD)
+		b43_do_interrupt_thread(dev);
+
+	sdio_claim_host(func);
+	mutex_unlock(&wl->mutex);
+}
+
 void b43_do_release_fw(struct b43_firmware_file *fw)
 {
 	release_firmware(fw->data);
@@ -3828,7 +3854,7 @@ redo:
 
 	/* Disable interrupts on the device. */
 	b43_set_status(dev, B43_STAT_INITIALIZED);
-	if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
+	if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
 		/* wl->mutex is locked. That is enough. */
 		b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
 		b43_read32(dev, B43_MMIO_GEN_IRQ_MASK);	/* Flush */
@@ -3858,7 +3884,10 @@ redo:
 		dev_kfree_skb(skb_dequeue(&wl->tx_queue));
 
 	b43_mac_suspend(dev);
-	free_irq(dev->dev->irq, dev);
+	if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO)
+		b43_sdio_free_irq(dev);
+	else
+		free_irq(dev->dev->irq, dev);
 	b43_leds_exit(dev);
 	b43dbg(wl, "Wireless interface stopped\n");
 
@@ -3873,12 +3902,20 @@ static int b43_wireless_core_start(struc
 	B43_WARN_ON(b43_status(dev) != B43_STAT_INITIALIZED);
 
 	drain_txstatus_queue(dev);
-	err = request_threaded_irq(dev->dev->irq, b43_interrupt_handler,
-				   b43_interrupt_thread_handler,
-				   IRQF_SHARED, KBUILD_MODNAME, dev);
-	if (err) {
-		b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq);
-		goto out;
+	if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
+		err = b43_sdio_request_irq(dev, b43_sdio_interrupt_handler);
+		if (err) {
+			b43err(dev->wl, "Cannot request SDIO IRQ\n");
+			goto out;
+		}
+	} else {
+		err = request_threaded_irq(dev->dev->irq, b43_interrupt_handler,
+					   b43_interrupt_thread_handler,
+					   IRQF_SHARED, KBUILD_MODNAME, dev);
+		if (err) {
+			b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq);
+			goto out;
+		}
 	}
 
 	/* We are ready to run. */
@@ -4270,7 +4307,9 @@ static int b43_wireless_core_init(struct
 	/* Maximum Contention Window */
 	b43_shm_write16(dev, B43_SHM_SCRATCH, B43_SHM_SC_MAXCONT, 0x3FF);
 
-	if ((dev->dev->bus->bustype == SSB_BUSTYPE_PCMCIA) || B43_FORCE_PIO) {
+	if ((dev->dev->bus->bustype == SSB_BUSTYPE_PCMCIA) ||
+	    (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) ||
+	    B43_FORCE_PIO) {
 		dev->__using_pio_transfers = 1;
 		err = b43_pio_init(dev);
 	} else {
@@ -4944,7 +4983,7 @@ static struct ssb_driver b43_ssb_driver 
 static void b43_print_driverinfo(void)
 {
 	const char *feat_pci = "", *feat_pcmcia = "", *feat_nphy = "",
-		   *feat_leds = "";
+		   *feat_leds = "", *feat_sdio = "";
 
 #ifdef CONFIG_B43_PCI_AUTOSELECT
 	feat_pci = "P";
@@ -4958,11 +4997,14 @@ static void b43_print_driverinfo(void)
 #ifdef CONFIG_B43_LEDS
 	feat_leds = "L";
 #endif
+#ifdef CONFIG_B43_SDIO
+	feat_sdio = "S";
+#endif
 	printk(KERN_INFO "Broadcom 43xx driver loaded "
-	       "[ Features: %s%s%s%s, Firmware-ID: "
+	       "[ Features: %s%s%s%s%s, Firmware-ID: "
 	       B43_SUPPORTED_FIRMWARE_ID " ]\n",
 	       feat_pci, feat_pcmcia, feat_nphy,
-	       feat_leds);
+	       feat_leds, feat_sdio);
 }
 
 static int __init b43_init(void)
@@ -4973,13 +5015,18 @@ static int __init b43_init(void)
 	err = b43_pcmcia_init();
 	if (err)
 		goto err_dfs_exit;
-	err = ssb_driver_register(&b43_ssb_driver);
+	err = b43_sdio_init();
 	if (err)
 		goto err_pcmcia_exit;
+	err = ssb_driver_register(&b43_ssb_driver);
+	if (err)
+		goto err_sdio_exit;
 	b43_print_driverinfo();
 
 	return err;
 
+err_sdio_exit:
+	b43_sdio_exit();
 err_pcmcia_exit:
 	b43_pcmcia_exit();
 err_dfs_exit:
@@ -4990,6 +5037,7 @@ err_dfs_exit:
 static void __exit b43_exit(void)
 {
 	ssb_driver_unregister(&b43_ssb_driver);
+	b43_sdio_exit();
 	b43_pcmcia_exit();
 	b43_debugfs_exit();
 }
Index: wireless-testing/drivers/net/wireless/b43/sdio.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/sdio.c	2009-09-10 19:23:20.000000000 +0200
@@ -0,0 +1,197 @@
+/*
+ * Broadcom B43 wireless driver
+ *
+ * SDIO over Sonics Silicon Backplane bus glue for b43.
+ *
+ * Copyright (C) 2009 Albert Herranz
+ * Copyright (C) 2009 Michael Buesch <mb at bu3sch.de>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or (at
+ * your option) any later version.
+ */
+
+#include <linux/kernel.h>
+#include <linux/mmc/card.h>
+#include <linux/mmc/sdio_func.h>
+#include <linux/mmc/sdio_ids.h>
+#include <linux/ssb/ssb.h>
+
+#include "sdio.h"
+#include "b43.h"
+
+
+#define HNBU_CHIPID		0x01	/* vendor & device id */
+
+#define B43_SDIO_BLOCK_SIZE	64	/* rx fifo max size in bytes */
+
+
+static const struct b43_sdio_quirk {
+	u16 vendor;
+	u16 device;
+	unsigned int quirks;
+} b43_sdio_quirks[] = {
+	{ 0x14E4, 0x4318, SSB_QUIRK_SDIO_READ_AFTER_WRITE32, },
+	{ },
+};
+
+
+static unsigned int b43_sdio_get_quirks(u16 vendor, u16 device)
+{
+	const struct b43_sdio_quirk *q;
+
+	for (q = b43_sdio_quirks; q->quirks; q++) {
+		if (vendor == q->vendor && device == q->device)
+			return q->quirks;
+	}
+
+	return 0;
+}
+
+static void b43_sdio_interrupt_dispatcher(struct sdio_func *func)
+{
+	struct b43_sdio *sdio = sdio_get_drvdata(func);
+	struct b43_wldev *dev = sdio->irq_handler_opaque;
+
+	sdio->irq_handler(dev);
+}
+
+int b43_sdio_request_irq(struct b43_wldev *dev,
+			 void (*handler)(struct b43_wldev *dev))
+{
+	struct ssb_bus *bus = dev->dev->bus;
+	struct sdio_func *func = bus->host_sdio;
+	struct b43_sdio *sdio = sdio_get_drvdata(func);
+	int err;
+
+	sdio->irq_handler_opaque = dev;
+	sdio->irq_handler = handler;
+	sdio_claim_host(func);
+	err = sdio_claim_irq(func, b43_sdio_interrupt_dispatcher);
+	sdio_release_host(func);
+
+	return err;
+}
+
+void b43_sdio_free_irq(struct b43_wldev *dev)
+{
+	struct ssb_bus *bus = dev->dev->bus;
+	struct sdio_func *func = bus->host_sdio;
+	struct b43_sdio *sdio = sdio_get_drvdata(func);
+
+	sdio_claim_host(func);
+	sdio_release_irq(func);
+	sdio_release_host(func);
+	sdio->irq_handler_opaque = NULL;
+	sdio->irq_handler = NULL;
+}
+
+static int b43_sdio_probe(struct sdio_func *func,
+			  const struct sdio_device_id *id)
+{
+	struct b43_sdio *sdio;
+	struct sdio_func_tuple *tuple;
+	u16 vendor = 0, device = 0;
+	int error;
+
+	/* Look for the card chip identifier. */
+	tuple = func->tuples;
+	while (tuple) {
+		switch (tuple->code) {
+		case 0x80:
+			switch (tuple->data[0]) {
+			case HNBU_CHIPID:
+				if (tuple->size != 5)
+					break;
+				vendor = tuple->data[1] | (tuple->data[2]<<8);
+				device = tuple->data[3] | (tuple->data[4]<<8);
+				dev_info(&func->dev, "Chip ID %04x:%04x\n",
+					 vendor, device);
+				break;
+			default:
+				break;
+			}
+			break;
+		default:
+			break;
+		}
+		tuple = tuple->next;
+	}
+	if (!vendor || !device) {
+		error = -ENODEV;
+		goto out;
+	}
+
+	sdio_claim_host(func);
+	error = sdio_set_block_size(func, B43_SDIO_BLOCK_SIZE);
+	if (error) {
+		dev_err(&func->dev, "failed to set block size to %u bytes,"
+			" error %d\n", B43_SDIO_BLOCK_SIZE, error);
+		goto err_release_host;
+	}
+	error = sdio_enable_func(func);
+	if (error) {
+		dev_err(&func->dev, "failed to enable func, error %d\n", error);
+		goto err_release_host;
+	}
+	sdio_release_host(func);
+
+	sdio = kzalloc(sizeof(*sdio), GFP_KERNEL);
+	if (!sdio) {
+		error = -ENOMEM;
+		dev_err(&func->dev, "failed to allocate ssb bus\n");
+		goto err_disable_func;
+	}
+	error = ssb_bus_sdiobus_register(&sdio->ssb, func,
+					 b43_sdio_get_quirks(vendor, device));
+	if (error) {
+		dev_err(&func->dev, "failed to register ssb sdio bus,"
+			" error %d\n", error);
+		goto err_free_ssb;
+	}
+	sdio_set_drvdata(func, sdio);
+
+	return 0;
+
+err_free_ssb:
+	kfree(sdio);
+err_disable_func:
+	sdio_disable_func(func);
+err_release_host:
+	sdio_release_host(func);
+out:
+	return error;
+}
+
+static void b43_sdio_remove(struct sdio_func *func)
+{
+	struct b43_sdio *sdio = sdio_get_drvdata(func);
+
+	ssb_bus_unregister(&sdio->ssb);
+	sdio_disable_func(func);
+	kfree(sdio);
+	sdio_set_drvdata(func, NULL);
+}
+
+static const struct sdio_device_id b43_sdio_ids[] = {
+	{ SDIO_DEVICE(0x02d0, 0x044b) }, /* Nintendo Wii WLAN daughter card */
+	{ },
+};
+
+static struct sdio_driver b43_sdio_driver = {
+	.name		= "b43-sdio",
+	.id_table	= b43_sdio_ids,
+	.probe		= b43_sdio_probe,
+	.remove		= b43_sdio_remove,
+};
+
+int b43_sdio_init(void)
+{
+	return sdio_register_driver(&b43_sdio_driver);
+}
+
+void b43_sdio_exit(void)
+{
+	sdio_unregister_driver(&b43_sdio_driver);
+}
Index: wireless-testing/drivers/net/wireless/b43/sdio.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/sdio.h	2009-09-10 19:23:20.000000000 +0200
@@ -0,0 +1,45 @@
+#ifndef B43_SDIO_H_
+#define B43_SDIO_H_
+
+#include <linux/ssb/ssb.h>
+
+struct b43_wldev;
+
+
+#ifdef CONFIG_B43_SDIO
+
+struct b43_sdio {
+	struct ssb_bus ssb;
+	void *irq_handler_opaque;
+	void (*irq_handler)(struct b43_wldev *dev);
+};
+
+int b43_sdio_request_irq(struct b43_wldev *dev,
+			 void (*handler)(struct b43_wldev *dev));
+void b43_sdio_free_irq(struct b43_wldev *dev);
+
+int b43_sdio_init(void);
+void b43_sdio_exit(void);
+
+
+#else /* CONFIG_B43_SDIO */
+
+
+int b43_sdio_request_irq(struct b43_wldev *dev,
+			 void (*handler)(struct b43_wldev *dev))
+{
+	return -ENODEV;
+}
+void b43_sdio_free_irq(struct b43_wldev *dev)
+{
+}
+static inline int b43_sdio_init(void)
+{
+	return 0;
+}
+static inline void b43_sdio_exit(void)
+{
+}
+
+#endif /* CONFIG_B43_SDIO */
+#endif /* B43_SDIO_H_ */


-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Sep 10 20:22:02 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 10 Sep 2009 20:22:02 +0200
Subject: [PATCH] b43: Do not use _irqsafe callbacks
Message-ID: <200909102022.02987.mb@bu3sch.de>

We don't need to call the irqsafe callbacks.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Apply on top the other patches.

Index: wireless-testing/drivers/net/wireless/b43/dma.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/dma.c	2009-09-05 12:31:01.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/dma.c	2009-09-10 20:14:25.000000000 +0200
@@ -1428,9 +1428,9 @@ void b43_dma_handle_txstatus(struct b43_
 				ring->nr_failed_tx_packets++;
 			ring->nr_total_packet_tries += status->frame_count;
 #endif /* DEBUG */
-			ieee80211_tx_status_irqsafe(dev->wl->hw, meta->skb);
+			ieee80211_tx_status(dev->wl->hw, meta->skb);
 
-			/* skb is freed by ieee80211_tx_status_irqsafe() */
+			/* skb is freed by ieee80211_tx_status() */
 			meta->skb = NULL;
 		} else {
 			/* No need to call free_descriptor_buffer here, as
Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-09-05 12:31:02.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-09-10 20:14:37.000000000 +0200
@@ -574,7 +574,7 @@ void b43_pio_handle_txstatus(struct b43_
 	q->buffer_used -= total_len;
 	q->free_packet_slots += 1;
 
-	ieee80211_tx_status_irqsafe(dev->wl->hw, pack->skb);
+	ieee80211_tx_status(dev->wl->hw, pack->skb);
 	pack->skb = NULL;
 	list_add(&pack->list, &q->packets_list);
 
Index: wireless-testing/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/xmit.c	2009-09-06 16:17:08.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/xmit.c	2009-09-10 20:13:29.000000000 +0200
@@ -690,7 +690,7 @@ void b43_rx(struct b43_wldev *dev, struc
 	}
 
 	memcpy(IEEE80211_SKB_RXCB(skb), &status, sizeof(status));
-	ieee80211_rx_irqsafe(dev->wl->hw, skb);
+	ieee80211_rx(dev->wl->hw, skb);
 
 	return;
 drop:

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Sep 10 20:31:46 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 10 Sep 2009 20:31:46 +0200
Subject: [PATCH] b43: Force-wake queues on init
Message-ID: <200909102031.47103.mb@bu3sch.de>

Force wake the mac80211 queues on init.
Under rare circumstances they may be stopped, if a DMA error or
something else causes a device reset while a queue was stopped.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-10 20:13:54.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-10 20:26:43.000000000 +0200
@@ -4326,6 +4326,8 @@ static int b43_wireless_core_init(struct
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
 
+	ieee80211_wake_queues(dev->wl->hw);
+
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
 out:

-- 
Greetings, Michael.


From mcgrof at gmail.com  Thu Sep 10 20:34:36 2009
From: mcgrof at gmail.com (Luis R. Rodriguez)
Date: Thu, 10 Sep 2009 11:34:36 -0700
Subject: [PATCH] b43: Force-wake queues on init
In-Reply-To: <200909102031.47103.mb@bu3sch.de>
References: <200909102031.47103.mb@bu3sch.de>
Message-ID: <43e72e890909101134j64bf22eai1c282cc1738cd968@mail.gmail.com>

On Thu, Sep 10, 2009 at 11:31 AM, Michael Buesch <mb at bu3sch.de> wrote:
> Force wake the mac80211 queues on init.
> Under rare circumstances they may be stopped, if a DMA error or
> something else causes a device reset while a queue was stopped.

So this is a work around for some unknown issue on the driver?

  Luis


From mb at bu3sch.de  Thu Sep 10 20:38:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 10 Sep 2009 20:38:15 +0200
Subject: [PATCH] b43: Force-wake queues on init
In-Reply-To: <43e72e890909101134j64bf22eai1c282cc1738cd968@mail.gmail.com>
References: <200909102031.47103.mb@bu3sch.de>
	<43e72e890909101134j64bf22eai1c282cc1738cd968@mail.gmail.com>
Message-ID: <200909102038.17930.mb@bu3sch.de>

On Thursday 10 September 2009 20:34:36 Luis R. Rodriguez wrote:
> On Thu, Sep 10, 2009 at 11:31 AM, Michael Buesch <mb at bu3sch.de> wrote:
> > Force wake the mac80211 queues on init.
> > Under rare circumstances they may be stopped, if a DMA error or
> > something else causes a device reset while a queue was stopped.
> 
> So this is a work around for some unknown issue on the driver?

No, it's a fix for a bug that should not trigger in practice very often.

-- 
Greetings, Michael.


From daniel at schmitt-united.de  Thu Sep 10 20:43:47 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Thu, 10 Sep 2009 20:43:47 +0200
Subject: bcm4306 rev2 kernel segfault and reboot
Message-ID: <4AA948E3.2060109@schmitt-united.de>

Hello bcm43xx developers,

I have problems using a bcm4306 rev 2 minipci card. I got the card out of 
Microsoft mn700. I also have 2 atheros cards. They work.

Here is output of
uname -a: Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown

lspci -vvn|grep 43 -A7:
00:02.0 0280: 14e4:4325 (rev 02)
         Subsystem: 1414:0004
         Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+ 
Stepping- SERR+ FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- 
<MAbort- >SERR- <PERR- INTx-
         Interrupt: pin A routed to IRQ 27
         Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled] 
[size=8K]

00:03.0 0200: 168c:001b (rev 01)
--
00:04.0 0280: 14e4:4325 (rev 02)
         Subsystem: 1414:0004
         Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+ 
Stepping- SERR+ FastB2B- DisINTx-
         Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- 
<MAbort- >SERR- <PERR- INTx-
         Interrupt: pin A routed to IRQ 25
         Region 0: Memory at 48022000 (32-bit, non-prefetchable) [disabled] 
[size=8K]


When I use latest trunk openwrt on my Compes WP188 ipx4xx board with latest 
compat-wireless 2009-09-09 and with the ssb.ko inside the compat-wireless I get 
the following kernel panic:

root at OpenWrt:/lib/modules/2.6.28.10# insmod ssb.ko
PCI: enabling device 0000:00:02.0 (0140 -> 0142)
Bad mode in data abort handler detected
Internal error: Oops - bad mode: 0 [#1]
Modules linked in: ssb(+)
CPU: 0    Not tainted  (2.6.28.10 #2)
pc : [<ffff01fc>]    lr : [<bf002d94>]    psr: a0000092
sp : c392bb5c  ip : 00000001  fp : c392bbcc
r10: c0230184  r9 : bf009000  r8 : 0000ffff
r7 : c3ad4248  r6 : c393b000  r5 : 00000025  r4 : 00000000
r3 : c48c9048  r2 : c392bba4  r1 : 00000001  r0 : 90480000
Flags: NzCv  IRQs off  FIQs on  Mode IRQ_32  ISA ARM  Segment user
Control: 000039ff  Table: 03968000  DAC: 00000015
Process insmod (pid: 1508, stack limit = 0xc392a260)
Stack: (0xc392bb5c to 0xc392c000)
bb40:                                                                90480000
bb60: 00000001 c392bba4 c48c9048 00000000 00000025 c393b000 c3ad4248 0000ffff
bb80: bf009000 c0230184 c392bbcc 00000001 c392bb5c bf002d94 ffff01fc a0000092
bba0: ffffffff c392bbb0 ffffffb9 c392bbfc c3ad4200 c393b000 c392bbf4 bf0067c0
bbc0: c392bbf0 c392bbd0 bf002d94 bf002624 c392bbf4 c393b000 c393b31c 00000000
bbe0: bf002bdc c392bc98 c392bbf4 bf000eb0 bf002be8 00000000 00000000 00000000
bc00: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
bc20: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
bc40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
bc60: 00000000 00000000 00000000 00000000 00000000 c3811400 00000000 c393b000
bc80: 00000000 c02409cc c0228a60 c392bca8 c392bc9c bf000fd8 bf000ddc c392bcc4
bca0: c392bcac bf003dfc bf000fb8 bf006634 c3811400 00000000 c392bce4 c392bcc8
bcc0: c0115d30 bf003d70 c3811458 bf006668 bf006668 c012ef64 c392bd08 c392bce8
bce0: c012ee60 c0115cd4 c3811458 bf006668 c3811504 c012ef64 c39532a0 c392bd24
bd00: c392bd0c c012eff0 c012edc4 00000000 c392bd28 bf006668 c392bd4c c392bd28
bd20: c012e498 c012ef70 c382d598 c38114a0 00000000 bf006668 bf006668 00000000
bd40: c392bd5c c392bd50 c012ecc8 c012e44c c392bd88 c392bd60 c012e950 c012ecb4
bd60: bf006328 bf006634 bf006668 bf006668 00000000 c392a000 befe9e98 c392bdac
bd80: c392bd8c c012f198 c012e8b0 bf006634 00000000 bf006668 00000000 c392a000
bda0: c392bdc8 c392bdb0 c0115fa4 c012f150 00000000 bf0066a0 00075028 c392bdd8
bdc0: c392bdcc bf003d10 c0115f64 c392bde8 c392bddc bf009080 bf003ce8 c392bdfc
bde0: c392bdec bf00905c bf009078 00000000 c392bf80 c392be00 c00212b0 bf00900c
be00: c0033640 00000000 00000000 c38f5c00 c392be5c c392be20 c017de80 c0033620
be20: 00000000 00000000 00000001 00000000 00000000 00000010 c3a3ec20 00000004
be40: 00000000 c02b5700 c022f280 c022f268 c392be80 c392be60 c0067940 c006618c
be60: 00000000 00000009 c48b9000 00000001 bf0066a0 c392be90 c392be84 c0067a44
be80: c0067840 c392bea4 c392be94 c3a16ec0 0000000a c48b9000 c392bec4 c392bea8
bea0: c007b774 c008466c 00000000 00000000 00000000 c392a000 c392bed4 c392bec8
bec0: c007b844 c007b6e8 c392bf80 c392bed8 c005d188 c007b820 00000000 c392bf50
bee0: c392bf48 c392bef0 bf0066ac c48bff50 00000000 c48bfca8 c48bfbd0 c3a16ca0
bf00: c48c0c68 00000016 00000017 0000000d 00000000 000000c0 000000c0 c48c0068
bf20: c48c0c58 c012e64c c48c0040 c48c0068 bf006338 00000017 00000000 00000000
bf40: 00000000 00000000 00009980 bf0066a0 00075028 00000000 00009980 bf0066a0
bf60: 00075028 00000000 c0021f84 c392a000 befe9e98 c392bfa4 c392bf84 c005d4c4
bf80: c0021284 c00864d8 00009980 00075028 00000002 00000080 00000000 c392bfa8
bfa0: c0021de0 c005d440 00009980 00075028 00075028 00009980 00075018 00075028
bfc0: 00009980 00075028 00000002 befe9f63 befe9bec 00000002 befe9e98 0000c8c0
bfe0: 40051a94 befe8bcc 0001181c 40051aa0 20000010 00075028 00000000 00000000
Backtrace:
Function entered at [<bf002618>] from [<bf002d94>]
Function entered at [<bf002bdc>] from [<bf000eb0>]
  r8:bf002bdc r7:00000000 r6:c393b31c r5:c393b000 r4:c392bbf4
Function entered at [<bf000dd0>] from [<bf000fd8>]
Function entered at [<bf000fac>] from [<bf003dfc>]
Function entered at [<bf003d64>] from [<c0115d30>]
  r6:00000000 r5:c3811400 r4:bf006634
Function entered at [<c0115cc8>] from [<c012ee60>]
  r7:c012ef64 r6:bf006668 r5:bf006668 r4:c3811458
Function entered at [<c012edb8>] from [<c012eff0>]
  r8:c39532a0 r7:c012ef64 r6:c3811504 r5:bf006668 r4:c3811458
Function entered at [<c012ef64>] from [<c012e498>]
  r6:bf006668 r5:c392bd28 r4:00000000
Function entered at [<c012e440>] from [<c012ecc8>]
  r7:00000000 r6:bf006668 r5:bf006668 r4:00000000
Function entered at [<c012eca8>] from [<c012e950>]
Function entered at [<c012e8a4>] from [<c012f198>]
Function entered at [<c012f144>] from [<c0115fa4>]
  r8:c392a000 r7:00000000 r6:bf006668 r5:00000000 r4:bf006634
Function entered at [<c0115f58>] from [<bf003d10>]
  r6:00075028 r5:bf0066a0 r4:00000000
Function entered at [<bf003cdc>] from [<bf009080>]
Function entered at [<bf00906c>] from [<bf00905c>]
Function entered at [<bf009000>] from [<c00212b0>]
  r4:00000000
Function entered at [<c0021278>] from [<c005d4c4>]
Function entered at [<c005d434>] from [<c0021de0>]
  r7:00000080 r6:00000002 r5:00075028 r4:00009980
Code: 00000000 00000000 00000000 00000000 (00000000)
---[ end trace 9e4f8312b96f9129 ]---
Segmentation fault

using b43legacy out of this release with ssb.ko from kernel 2.6.28.10 results in 
the following:
PCI: enabling device 0000:00:02.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: SPROM revision 251 detected.
ssb: Unsupported SPROM revision 251 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
PCI: enabling device 0000:00:04.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: SPROM revision 251 detected.
ssb: Unsupported SPROM revision 251 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: US
         (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
         (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
         (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
cfg80211: Calling CRDA for country: US
b43legacy-phy0: Broadcom 4306 WLAN found
phy0: Failed to initialize wep: -2
b43legacy: probe of ssb0:0 failed with error -2
b43legacy-phy1: Broadcom 4306 WLAN found
phy1: Failed to initialize wep: -2
b43legacy: probe of ssb1:0 failed with error -2
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]

Only if I use ssb.ko from kernel and b43legacy from compat-wireless 2009-08-15 I 
managed one time to get wlan0 and wlan1 device.
But then they don't have a valid MAC address.
If I set if manually I get wlan0 running. Even in master mode. But if I want to 
get up wlan1 the same way, machine reboots.

What's up with my broadcom cards?

Thanks for your help,
Daniel


From mb at bu3sch.de  Thu Sep 10 21:08:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 10 Sep 2009 21:08:29 +0200
Subject: [PATCH RFC] b43: Always use block-I/O for PIO data register
Message-ID: <200909102108.29857.mb@bu3sch.de>

I think this should fix the issue with the swapped PIO data register.
I think the engineers somehow hardwired the register to the platform
architecture (That's also why setting the MACCTL BE bit fails).
So we simply always use block-I/O on those registers. That should fix the
issue, as block-I/O doesn't do host-endianness-conversion.


Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-09-10 20:14:37.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-09-10 21:08:11.000000000 +0200
@@ -340,10 +340,15 @@ static u16 tx_write_2byte_queue(struct b
 			q->mmio_base + B43_PIO_TXDATA,
 			sizeof(u16));
 	if (data_len & 1) {
+		u8 tail[2] = { 0, };
+
 		/* Write the last byte. */
 		ctl &= ~B43_PIO_TXCTL_WRITEHI;
 		b43_piotx_write16(q, B43_PIO_TXCTL, ctl);
-		b43_piotx_write16(q, B43_PIO_TXDATA, data[data_len - 1]);
+		tail[0] = data[data_len - 1];
+		ssb_block_write(dev->dev, tail, 2,
+				q->mmio_base + B43_PIO_TXDATA,
+				sizeof(u16));
 	}
 
 	return ctl;
@@ -386,26 +391,31 @@ static u32 tx_write_4byte_queue(struct b
 			q->mmio_base + B43_PIO8_TXDATA,
 			sizeof(u32));
 	if (data_len & 3) {
-		u32 value = 0;
+		u8 tail[4] = { 0, };
 
 		/* Write the last few bytes. */
 		ctl &= ~(B43_PIO8_TXCTL_8_15 | B43_PIO8_TXCTL_16_23 |
 			 B43_PIO8_TXCTL_24_31);
-		data = &(data[data_len - 1]);
 		switch (data_len & 3) {
 		case 3:
-			ctl |= B43_PIO8_TXCTL_16_23;
-			value |= (u32)(*data) << 16;
-			data--;
+			ctl |= B43_PIO8_TXCTL_16_23 | B43_PIO8_TXCTL_8_15;
+			tail[0] = data[data_len - 3];
+			tail[1] = data[data_len - 2];
+			tail[2] = data[data_len - 1];
+			break;
 		case 2:
 			ctl |= B43_PIO8_TXCTL_8_15;
-			value |= (u32)(*data) << 8;
-			data--;
+			tail[0] = data[data_len - 2];
+			tail[1] = data[data_len - 1];
+			break;
 		case 1:
-			value |= (u32)(*data);
+			tail[0] = data[data_len - 1];
+			break;
 		}
 		b43_piotx_write32(q, B43_PIO8_TXCTL, ctl);
-		b43_piotx_write32(q, B43_PIO8_TXDATA, value);
+		ssb_block_write(dev->dev, tail, 4,
+				q->mmio_base + B43_PIO8_TXDATA,
+				sizeof(u32));
 	}
 
 	return ctl;
@@ -693,21 +703,25 @@ data_ready:
 			       q->mmio_base + B43_PIO8_RXDATA,
 			       sizeof(u32));
 		if (len & 3) {
-			u32 value;
-			char *data;
+			u8 tail[4] = { 0, };
 
 			/* Read the last few bytes. */
-			value = b43_piorx_read32(q, B43_PIO8_RXDATA);
-			data = &(skb->data[len + padding - 1]);
+			ssb_block_read(dev->dev, tail, 4,
+				       q->mmio_base + B43_PIO8_RXDATA,
+				       sizeof(u32));
 			switch (len & 3) {
 			case 3:
-				*data = (value >> 16);
-				data--;
+				skb->data[len + padding - 3] = tail[0];
+				skb->data[len + padding - 2] = tail[1];
+				skb->data[len + padding - 1] = tail[2];
+				break;
 			case 2:
-				*data = (value >> 8);
-				data--;
+				skb->data[len + padding - 2] = tail[0];
+				skb->data[len + padding - 1] = tail[1];
+				break;
 			case 1:
-				*data = value;
+				skb->data[len + padding - 1] = tail[0];
+				break;
 			}
 		}
 	} else {
@@ -715,11 +729,13 @@ data_ready:
 			       q->mmio_base + B43_PIO_RXDATA,
 			       sizeof(u16));
 		if (len & 1) {
-			u16 value;
+			u8 tail[2] = { 0, };
 
 			/* Read the last byte. */
-			value = b43_piorx_read16(q, B43_PIO_RXDATA);
-			skb->data[len + padding - 1] = value;
+			ssb_block_read(dev->dev, tail, 2,
+				       q->mmio_base + B43_PIO_RXDATA,
+				       sizeof(u16));
+			skb->data[len + padding - 1] = tail[0];
 		}
 	}
 


-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Thu Sep 10 23:21:35 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 10 Sep 2009 23:21:35 +0200
Subject: bcm4306 rev2 kernel segfault and reboot
In-Reply-To: <4AA948E3.2060109@schmitt-united.de>
References: <4AA948E3.2060109@schmitt-united.de>
Message-ID: <69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>

On Thu, Sep 10, 2009 at 8:43 PM, Daniel Schmitt
<daniel at schmitt-united.de> wrote:
> Hello bcm43xx developers,
>
> I have problems using a bcm4306 rev 2 minipci card. I got the card out of
> Microsoft mn700. I also have 2 atheros cards. They work.
>
> Here is output of
> uname -a: Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
>
> lspci -vvn|grep 43 -A7:
> 00:02.0 0280: 14e4:4325 (rev 02)
> ? ? ? ? Subsystem: 1414:0004
> ? ? ? ? Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
> Stepping- SERR+ FastB2B- DisINTx-
> ? ? ? ? Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
> <MAbort- >SERR- <PERR- INTx-
> ? ? ? ? Interrupt: pin A routed to IRQ 27
> ? ? ? ? Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
> [size=8K]
>
> 00:03.0 0200: 168c:001b (rev 01)
> --
> 00:04.0 0280: 14e4:4325 (rev 02)
> ? ? ? ? Subsystem: 1414:0004
> ? ? ? ? Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
> Stepping- SERR+ FastB2B- DisINTx-
> ? ? ? ? Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
> <MAbort- >SERR- <PERR- INTx-
> ? ? ? ? Interrupt: pin A routed to IRQ 25
> ? ? ? ? Region 0: Memory at 48022000 (32-bit, non-prefetchable) [disabled]
> [size=8K]
>
>
> When I use latest trunk openwrt on my Compes WP188 ipx4xx board with latest
> compat-wireless 2009-09-09 and with the ssb.ko inside the compat-wireless I get
> the following kernel panic:
>
> root at OpenWrt:/lib/modules/2.6.28.10# insmod ssb.ko
> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
> Bad mode in data abort handler detected
> Internal error: Oops - bad mode: 0 [#1]
> Modules linked in: ssb(+)
> CPU: 0 ? ?Not tainted ?(2.6.28.10 #2)
> pc : [<ffff01fc>] ? ?lr : [<bf002d94>] ? ?psr: a0000092
> sp : c392bb5c ?ip : 00000001 ?fp : c392bbcc
> r10: c0230184 ?r9 : bf009000 ?r8 : 0000ffff
> r7 : c3ad4248 ?r6 : c393b000 ?r5 : 00000025 ?r4 : 00000000
> r3 : c48c9048 ?r2 : c392bba4 ?r1 : 00000001 ?r0 : 90480000
> Flags: NzCv ?IRQs off ?FIQs on ?Mode IRQ_32 ?ISA ARM ?Segment user
> Control: 000039ff ?Table: 03968000 ?DAC: 00000015
> Process insmod (pid: 1508, stack limit = 0xc392a260)
> Stack: (0xc392bb5c to 0xc392c000)
> bb40: ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?90480000
> bb60: 00000001 c392bba4 c48c9048 00000000 00000025 c393b000 c3ad4248 0000ffff
> bb80: bf009000 c0230184 c392bbcc 00000001 c392bb5c bf002d94 ffff01fc a0000092
> bba0: ffffffff c392bbb0 ffffffb9 c392bbfc c3ad4200 c393b000 c392bbf4 bf0067c0
> bbc0: c392bbf0 c392bbd0 bf002d94 bf002624 c392bbf4 c393b000 c393b31c 00000000
> bbe0: bf002bdc c392bc98 c392bbf4 bf000eb0 bf002be8 00000000 00000000 00000000
> bc00: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
> bc20: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
> bc40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
> bc60: 00000000 00000000 00000000 00000000 00000000 c3811400 00000000 c393b000
> bc80: 00000000 c02409cc c0228a60 c392bca8 c392bc9c bf000fd8 bf000ddc c392bcc4
> bca0: c392bcac bf003dfc bf000fb8 bf006634 c3811400 00000000 c392bce4 c392bcc8
> bcc0: c0115d30 bf003d70 c3811458 bf006668 bf006668 c012ef64 c392bd08 c392bce8
> bce0: c012ee60 c0115cd4 c3811458 bf006668 c3811504 c012ef64 c39532a0 c392bd24
> bd00: c392bd0c c012eff0 c012edc4 00000000 c392bd28 bf006668 c392bd4c c392bd28
> bd20: c012e498 c012ef70 c382d598 c38114a0 00000000 bf006668 bf006668 00000000
> bd40: c392bd5c c392bd50 c012ecc8 c012e44c c392bd88 c392bd60 c012e950 c012ecb4
> bd60: bf006328 bf006634 bf006668 bf006668 00000000 c392a000 befe9e98 c392bdac
> bd80: c392bd8c c012f198 c012e8b0 bf006634 00000000 bf006668 00000000 c392a000
> bda0: c392bdc8 c392bdb0 c0115fa4 c012f150 00000000 bf0066a0 00075028 c392bdd8
> bdc0: c392bdcc bf003d10 c0115f64 c392bde8 c392bddc bf009080 bf003ce8 c392bdfc
> bde0: c392bdec bf00905c bf009078 00000000 c392bf80 c392be00 c00212b0 bf00900c
> be00: c0033640 00000000 00000000 c38f5c00 c392be5c c392be20 c017de80 c0033620
> be20: 00000000 00000000 00000001 00000000 00000000 00000010 c3a3ec20 00000004
> be40: 00000000 c02b5700 c022f280 c022f268 c392be80 c392be60 c0067940 c006618c
> be60: 00000000 00000009 c48b9000 00000001 bf0066a0 c392be90 c392be84 c0067a44
> be80: c0067840 c392bea4 c392be94 c3a16ec0 0000000a c48b9000 c392bec4 c392bea8
> bea0: c007b774 c008466c 00000000 00000000 00000000 c392a000 c392bed4 c392bec8
> bec0: c007b844 c007b6e8 c392bf80 c392bed8 c005d188 c007b820 00000000 c392bf50
> bee0: c392bf48 c392bef0 bf0066ac c48bff50 00000000 c48bfca8 c48bfbd0 c3a16ca0
> bf00: c48c0c68 00000016 00000017 0000000d 00000000 000000c0 000000c0 c48c0068
> bf20: c48c0c58 c012e64c c48c0040 c48c0068 bf006338 00000017 00000000 00000000
> bf40: 00000000 00000000 00009980 bf0066a0 00075028 00000000 00009980 bf0066a0
> bf60: 00075028 00000000 c0021f84 c392a000 befe9e98 c392bfa4 c392bf84 c005d4c4
> bf80: c0021284 c00864d8 00009980 00075028 00000002 00000080 00000000 c392bfa8
> bfa0: c0021de0 c005d440 00009980 00075028 00075028 00009980 00075018 00075028
> bfc0: 00009980 00075028 00000002 befe9f63 befe9bec 00000002 befe9e98 0000c8c0
> bfe0: 40051a94 befe8bcc 0001181c 40051aa0 20000010 00075028 00000000 00000000
> Backtrace:
> Function entered at [<bf002618>] from [<bf002d94>]
> Function entered at [<bf002bdc>] from [<bf000eb0>]
> ?r8:bf002bdc r7:00000000 r6:c393b31c r5:c393b000 r4:c392bbf4
> Function entered at [<bf000dd0>] from [<bf000fd8>]
> Function entered at [<bf000fac>] from [<bf003dfc>]
> Function entered at [<bf003d64>] from [<c0115d30>]
> ?r6:00000000 r5:c3811400 r4:bf006634
> Function entered at [<c0115cc8>] from [<c012ee60>]
> ?r7:c012ef64 r6:bf006668 r5:bf006668 r4:c3811458
> Function entered at [<c012edb8>] from [<c012eff0>]
> ?r8:c39532a0 r7:c012ef64 r6:c3811504 r5:bf006668 r4:c3811458
> Function entered at [<c012ef64>] from [<c012e498>]
> ?r6:bf006668 r5:c392bd28 r4:00000000
> Function entered at [<c012e440>] from [<c012ecc8>]
> ?r7:00000000 r6:bf006668 r5:bf006668 r4:00000000
> Function entered at [<c012eca8>] from [<c012e950>]
> Function entered at [<c012e8a4>] from [<c012f198>]
> Function entered at [<c012f144>] from [<c0115fa4>]
> ?r8:c392a000 r7:00000000 r6:bf006668 r5:00000000 r4:bf006634
> Function entered at [<c0115f58>] from [<bf003d10>]
> ?r6:00075028 r5:bf0066a0 r4:00000000
> Function entered at [<bf003cdc>] from [<bf009080>]
> Function entered at [<bf00906c>] from [<bf00905c>]
> Function entered at [<bf009000>] from [<c00212b0>]
> ?r4:00000000
> Function entered at [<c0021278>] from [<c005d4c4>]
> Function entered at [<c005d434>] from [<c0021de0>]
> ?r7:00000080 r6:00000002 r5:00075028 r4:00009980
> Code: 00000000 00000000 00000000 00000000 (00000000)
> ---[ end trace 9e4f8312b96f9129 ]---
> Segmentation fault

Please enable CONFIG_KALLSYMS. This trace is useless without symbol information.

>
> using b43legacy out of this release with ssb.ko from kernel 2.6.28.10 results in
> the following:
> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 251 detected.
> ssb: Unsupported SPROM revision 251 detected. Will extract v1
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
> PCI: enabling device 0000:00:04.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 251 detected.
> ssb: Unsupported SPROM revision 251 detected. Will extract v1
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
> cfg80211: Using static regulatory domain info
> cfg80211: Regulatory domain: US
> ? ? ? ? (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> ? ? ? ? (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
> ? ? ? ? (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
> cfg80211: Calling CRDA for country: US
> b43legacy-phy0: Broadcom 4306 WLAN found
> phy0: Failed to initialize wep: -2
> b43legacy: probe of ssb0:0 failed with error -2
> b43legacy-phy1: Broadcom 4306 WLAN found
> phy1: Failed to initialize wep: -2
> b43legacy: probe of ssb1:0 failed with error -2
> Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
>
> Only if I use ssb.ko from kernel and b43legacy from compat-wireless 2009-08-15 I
> managed one time to get wlan0 and wlan1 device.
> But then they don't have a valid MAC address.
> If I set if manually I get wlan0 running. Even in master mode. But if I want to
> get up wlan1 the same way, machine reboots.
>
> What's up with my broadcom cards?
>
> Thanks for your help,
> Daniel
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Thu Sep 10 23:23:19 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 10 Sep 2009 23:23:19 +0200
Subject: [PATCH] b43: Add Soft-MAC SDIO device support
In-Reply-To: <200909101934.50283.mb@bu3sch.de>
References: <200909101934.50283.mb@bu3sch.de>
Message-ID: <69e28c910909101423j535c9cffq5b1be1cb00877645@mail.gmail.com>

On Thu, Sep 10, 2009 at 7:34 PM, Michael Buesch <mb at bu3sch.de> wrote:
> From: Albert Herranz <albert_herranz at yahoo.es>
>
> This adds support for Soft-MAC SDIO devices to b43.
> The driver still lacks some fixes for SDIO devices, so it's currently
> marked as BROKEN.

Is it actually completely broken; or already testable, just incomplete?

>
> Signed-off-by: Albert Herranz <albert_herranz at yahoo.es>
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
>
> ---
>
> Depends on the SSB SDIO patch.
>
>
> Index: wireless-testing/drivers/net/wireless/b43/Kconfig
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/Kconfig ? ? ?2009-09-10 19:23:09.000000000 +0200
> +++ wireless-testing/drivers/net/wireless/b43/Kconfig ? 2009-09-10 19:33:24.000000000 +0200
> @@ -61,11 +61,28 @@ config B43_PCMCIA
>
> ? ? ? ? ?If unsure, say N.
>
> +config B43_SDIO
> + ? ? ? bool "Broadcom 43xx SDIO device support (EXPERIMENTAL)"
> + ? ? ? depends on B43 && SSB_SDIOHOST_POSSIBLE && EXPERIMENTAL && BROKEN
> + ? ? ? select SSB_SDIOHOST
> + ? ? ? ---help---
> + ? ? ? ? Broadcom 43xx device support for Soft-MAC SDIO devices.
> +
> + ? ? ? ? With this config option you can drive Soft-MAC b43 cards with a
> + ? ? ? ? Secure Digital I/O interface.
> + ? ? ? ? This includes the WLAN daughter card found on the Nintendo Wii
> + ? ? ? ? video game console.
> + ? ? ? ? Note that this does not support Broadcom 43xx Full-MAC devices.
> +
> + ? ? ? ? It's safe to select Y here, even if you don't have a B43 SDIO device.
> +
> + ? ? ? ? If unsure, say N.
> +
> ?# Data transfers to the device via PIO
> -# This is only needed on PCMCIA devices. All others can do DMA properly.
> +# This is only needed on PCMCIA and SDIO devices. All others can do DMA properly.
> ?config B43_PIO
> ? ? ? ?bool
> - ? ? ? depends on B43 && (B43_PCMCIA || B43_FORCE_PIO)
> + ? ? ? depends on B43 && (B43_SDIO || B43_PCMCIA || B43_FORCE_PIO)
> ? ? ? ?select SSB_BLOCKIO
> ? ? ? ?default y
>
> Index: wireless-testing/drivers/net/wireless/b43/Makefile
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/Makefile ? ? 2009-09-10 19:23:09.000000000 +0200
> +++ wireless-testing/drivers/net/wireless/b43/Makefile ?2009-09-10 19:23:20.000000000 +0200
> @@ -16,6 +16,7 @@ b43-$(CONFIG_B43_PIO) ? ? ? ? += pio.o
> ?b43-y ? ? ? ? ? ? ? ? ? ? ? ? ?+= rfkill.o
> ?b43-$(CONFIG_B43_LEDS) ? ? ? ? += leds.o
> ?b43-$(CONFIG_B43_PCMCIA) ? ? ? += pcmcia.o
> +b43-$(CONFIG_B43_SDIO) ? ? ? ? += sdio.o
> ?b43-$(CONFIG_B43_DEBUG) ? ? ? ? ? ? ? ?+= debugfs.o
>
> ?obj-$(CONFIG_B43) ? ? ? ? ? ? ?+= b43.o
> Index: wireless-testing/drivers/net/wireless/b43/main.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/main.c ? ? ? 2009-09-10 19:23:09.000000000 +0200
> +++ wireless-testing/drivers/net/wireless/b43/main.c ? ?2009-09-10 19:23:20.000000000 +0200
> @@ -8,6 +8,9 @@
> ? Copyright (c) 2005 Danny van Dyk <kugelfang at gentoo.org>
> ? Copyright (c) 2005 Andreas Jaggi <andreas.jaggi at waterwave.ch>
>
> + ?SDIO support
> + ?Copyright (c) 2009 Albert Herranz <albert_herranz at yahoo.es>
> +
> ? Some parts of the code in this file are derived from the ipw2200
> ? driver ?Copyright(c) 2003 - 2004 Intel Corporation.
>
> @@ -53,6 +56,8 @@
> ?#include "xmit.h"
> ?#include "lo.h"
> ?#include "pcmcia.h"
> +#include "sdio.h"
> +#include <linux/mmc/sdio_func.h>
>
> ?MODULE_DESCRIPTION("Broadcom B43 wireless driver");
> ?MODULE_AUTHOR("Martin Langer");
> @@ -1587,7 +1592,7 @@ static void b43_beacon_update_trigger_wo
> ? ? ? ?mutex_lock(&wl->mutex);
> ? ? ? ?dev = wl->current_dev;
> ? ? ? ?if (likely(dev && (b43_status(dev) >= B43_STAT_INITIALIZED))) {
> - ? ? ? ? ? ? ? if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
> + ? ? ? ? ? ? ? if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
> ? ? ? ? ? ? ? ? ? ? ? ?/* wl->mutex is enough. */
> ? ? ? ? ? ? ? ? ? ? ? ?b43_do_beacon_update_trigger_work(dev);
> ? ? ? ? ? ? ? ? ? ? ? ?mmiowb();
> @@ -1905,6 +1910,27 @@ static irqreturn_t b43_interrupt_handler
> ? ? ? ?return ret;
> ?}
>
> +/* SDIO interrupt handler. This runs in process context. */
> +static void b43_sdio_interrupt_handler(struct b43_wldev *dev)
> +{
> + ? ? ? struct b43_wl *wl = dev->wl;
> + ? ? ? struct sdio_func *func = dev->dev->bus->host_sdio;
> + ? ? ? irqreturn_t ret;
> +
> + ? ? ? if (unlikely(b43_status(dev) < B43_STAT_STARTED))
> + ? ? ? ? ? ? ? return;
> +
> + ? ? ? mutex_lock(&wl->mutex);
> + ? ? ? sdio_release_host(func);
> +
> + ? ? ? ret = b43_do_interrupt(dev);
> + ? ? ? if (ret == IRQ_WAKE_THREAD)
> + ? ? ? ? ? ? ? b43_do_interrupt_thread(dev);
> +
> + ? ? ? sdio_claim_host(func);
> + ? ? ? mutex_unlock(&wl->mutex);
> +}
> +
> ?void b43_do_release_fw(struct b43_firmware_file *fw)
> ?{
> ? ? ? ?release_firmware(fw->data);
> @@ -3828,7 +3854,7 @@ redo:
>
> ? ? ? ?/* Disable interrupts on the device. */
> ? ? ? ?b43_set_status(dev, B43_STAT_INITIALIZED);
> - ? ? ? if (0 /*FIXME dev->dev->bus->bustype == SSB_BUSTYPE_SDIO*/) {
> + ? ? ? if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
> ? ? ? ? ? ? ? ?/* wl->mutex is locked. That is enough. */
> ? ? ? ? ? ? ? ?b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, 0);
> ? ? ? ? ? ? ? ?b43_read32(dev, B43_MMIO_GEN_IRQ_MASK); /* Flush */
> @@ -3858,7 +3884,10 @@ redo:
> ? ? ? ? ? ? ? ?dev_kfree_skb(skb_dequeue(&wl->tx_queue));
>
> ? ? ? ?b43_mac_suspend(dev);
> - ? ? ? free_irq(dev->dev->irq, dev);
> + ? ? ? if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO)
> + ? ? ? ? ? ? ? b43_sdio_free_irq(dev);
> + ? ? ? else
> + ? ? ? ? ? ? ? free_irq(dev->dev->irq, dev);
> ? ? ? ?b43_leds_exit(dev);
> ? ? ? ?b43dbg(wl, "Wireless interface stopped\n");
>
> @@ -3873,12 +3902,20 @@ static int b43_wireless_core_start(struc
> ? ? ? ?B43_WARN_ON(b43_status(dev) != B43_STAT_INITIALIZED);
>
> ? ? ? ?drain_txstatus_queue(dev);
> - ? ? ? err = request_threaded_irq(dev->dev->irq, b43_interrupt_handler,
> - ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?b43_interrupt_thread_handler,
> - ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?IRQF_SHARED, KBUILD_MODNAME, dev);
> - ? ? ? if (err) {
> - ? ? ? ? ? ? ? b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq);
> - ? ? ? ? ? ? ? goto out;
> + ? ? ? if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
> + ? ? ? ? ? ? ? err = b43_sdio_request_irq(dev, b43_sdio_interrupt_handler);
> + ? ? ? ? ? ? ? if (err) {
> + ? ? ? ? ? ? ? ? ? ? ? b43err(dev->wl, "Cannot request SDIO IRQ\n");
> + ? ? ? ? ? ? ? ? ? ? ? goto out;
> + ? ? ? ? ? ? ? }
> + ? ? ? } else {
> + ? ? ? ? ? ? ? err = request_threaded_irq(dev->dev->irq, b43_interrupt_handler,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?b43_interrupt_thread_handler,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?IRQF_SHARED, KBUILD_MODNAME, dev);
> + ? ? ? ? ? ? ? if (err) {
> + ? ? ? ? ? ? ? ? ? ? ? b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq);
> + ? ? ? ? ? ? ? ? ? ? ? goto out;
> + ? ? ? ? ? ? ? }
> ? ? ? ?}
>
> ? ? ? ?/* We are ready to run. */
> @@ -4270,7 +4307,9 @@ static int b43_wireless_core_init(struct
> ? ? ? ?/* Maximum Contention Window */
> ? ? ? ?b43_shm_write16(dev, B43_SHM_SCRATCH, B43_SHM_SC_MAXCONT, 0x3FF);
>
> - ? ? ? if ((dev->dev->bus->bustype == SSB_BUSTYPE_PCMCIA) || B43_FORCE_PIO) {
> + ? ? ? if ((dev->dev->bus->bustype == SSB_BUSTYPE_PCMCIA) ||
> + ? ? ? ? ? (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) ||
> + ? ? ? ? ? B43_FORCE_PIO) {
> ? ? ? ? ? ? ? ?dev->__using_pio_transfers = 1;
> ? ? ? ? ? ? ? ?err = b43_pio_init(dev);
> ? ? ? ?} else {
> @@ -4944,7 +4983,7 @@ static struct ssb_driver b43_ssb_driver
> ?static void b43_print_driverinfo(void)
> ?{
> ? ? ? ?const char *feat_pci = "", *feat_pcmcia = "", *feat_nphy = "",
> - ? ? ? ? ? ? ? ? ?*feat_leds = "";
> + ? ? ? ? ? ? ? ? ?*feat_leds = "", *feat_sdio = "";
>
> ?#ifdef CONFIG_B43_PCI_AUTOSELECT
> ? ? ? ?feat_pci = "P";
> @@ -4958,11 +4997,14 @@ static void b43_print_driverinfo(void)
> ?#ifdef CONFIG_B43_LEDS
> ? ? ? ?feat_leds = "L";
> ?#endif
> +#ifdef CONFIG_B43_SDIO
> + ? ? ? feat_sdio = "S";
> +#endif
> ? ? ? ?printk(KERN_INFO "Broadcom 43xx driver loaded "
> - ? ? ? ? ? ? ?"[ Features: %s%s%s%s, Firmware-ID: "
> + ? ? ? ? ? ? ?"[ Features: %s%s%s%s%s, Firmware-ID: "
> ? ? ? ? ? ? ? B43_SUPPORTED_FIRMWARE_ID " ]\n",
> ? ? ? ? ? ? ? feat_pci, feat_pcmcia, feat_nphy,
> - ? ? ? ? ? ? ?feat_leds);
> + ? ? ? ? ? ? ?feat_leds, feat_sdio);
> ?}
>
> ?static int __init b43_init(void)
> @@ -4973,13 +5015,18 @@ static int __init b43_init(void)
> ? ? ? ?err = b43_pcmcia_init();
> ? ? ? ?if (err)
> ? ? ? ? ? ? ? ?goto err_dfs_exit;
> - ? ? ? err = ssb_driver_register(&b43_ssb_driver);
> + ? ? ? err = b43_sdio_init();
> ? ? ? ?if (err)
> ? ? ? ? ? ? ? ?goto err_pcmcia_exit;
> + ? ? ? err = ssb_driver_register(&b43_ssb_driver);
> + ? ? ? if (err)
> + ? ? ? ? ? ? ? goto err_sdio_exit;
> ? ? ? ?b43_print_driverinfo();
>
> ? ? ? ?return err;
>
> +err_sdio_exit:
> + ? ? ? b43_sdio_exit();
> ?err_pcmcia_exit:
> ? ? ? ?b43_pcmcia_exit();
> ?err_dfs_exit:
> @@ -4990,6 +5037,7 @@ err_dfs_exit:
> ?static void __exit b43_exit(void)
> ?{
> ? ? ? ?ssb_driver_unregister(&b43_ssb_driver);
> + ? ? ? b43_sdio_exit();
> ? ? ? ?b43_pcmcia_exit();
> ? ? ? ?b43_debugfs_exit();
> ?}
> Index: wireless-testing/drivers/net/wireless/b43/sdio.c
> ===================================================================
> --- /dev/null ? 1970-01-01 00:00:00.000000000 +0000
> +++ wireless-testing/drivers/net/wireless/b43/sdio.c ? ?2009-09-10 19:23:20.000000000 +0200
> @@ -0,0 +1,197 @@
> +/*
> + * Broadcom B43 wireless driver
> + *
> + * SDIO over Sonics Silicon Backplane bus glue for b43.
> + *
> + * Copyright (C) 2009 Albert Herranz
> + * Copyright (C) 2009 Michael Buesch <mb at bu3sch.de>
> + *
> + * This program is free software; you can redistribute it and/or modify
> + * it under the terms of the GNU General Public License as published by
> + * the Free Software Foundation; either version 2 of the License, or (at
> + * your option) any later version.
> + */
> +
> +#include <linux/kernel.h>
> +#include <linux/mmc/card.h>
> +#include <linux/mmc/sdio_func.h>
> +#include <linux/mmc/sdio_ids.h>
> +#include <linux/ssb/ssb.h>
> +
> +#include "sdio.h"
> +#include "b43.h"
> +
> +
> +#define HNBU_CHIPID ? ? ? ? ? ?0x01 ? ?/* vendor & device id */
> +
> +#define B43_SDIO_BLOCK_SIZE ? ?64 ? ? ?/* rx fifo max size in bytes */
> +
> +
> +static const struct b43_sdio_quirk {
> + ? ? ? u16 vendor;
> + ? ? ? u16 device;
> + ? ? ? unsigned int quirks;
> +} b43_sdio_quirks[] = {
> + ? ? ? { 0x14E4, 0x4318, SSB_QUIRK_SDIO_READ_AFTER_WRITE32, },
> + ? ? ? { },
> +};
> +
> +
> +static unsigned int b43_sdio_get_quirks(u16 vendor, u16 device)
> +{
> + ? ? ? const struct b43_sdio_quirk *q;
> +
> + ? ? ? for (q = b43_sdio_quirks; q->quirks; q++) {
> + ? ? ? ? ? ? ? if (vendor == q->vendor && device == q->device)
> + ? ? ? ? ? ? ? ? ? ? ? return q->quirks;
> + ? ? ? }
> +
> + ? ? ? return 0;
> +}
> +
> +static void b43_sdio_interrupt_dispatcher(struct sdio_func *func)
> +{
> + ? ? ? struct b43_sdio *sdio = sdio_get_drvdata(func);
> + ? ? ? struct b43_wldev *dev = sdio->irq_handler_opaque;
> +
> + ? ? ? sdio->irq_handler(dev);
> +}
> +
> +int b43_sdio_request_irq(struct b43_wldev *dev,
> + ? ? ? ? ? ? ? ? ? ? ? ?void (*handler)(struct b43_wldev *dev))
> +{
> + ? ? ? struct ssb_bus *bus = dev->dev->bus;
> + ? ? ? struct sdio_func *func = bus->host_sdio;
> + ? ? ? struct b43_sdio *sdio = sdio_get_drvdata(func);
> + ? ? ? int err;
> +
> + ? ? ? sdio->irq_handler_opaque = dev;
> + ? ? ? sdio->irq_handler = handler;
> + ? ? ? sdio_claim_host(func);
> + ? ? ? err = sdio_claim_irq(func, b43_sdio_interrupt_dispatcher);
> + ? ? ? sdio_release_host(func);
> +
> + ? ? ? return err;
> +}
> +
> +void b43_sdio_free_irq(struct b43_wldev *dev)
> +{
> + ? ? ? struct ssb_bus *bus = dev->dev->bus;
> + ? ? ? struct sdio_func *func = bus->host_sdio;
> + ? ? ? struct b43_sdio *sdio = sdio_get_drvdata(func);
> +
> + ? ? ? sdio_claim_host(func);
> + ? ? ? sdio_release_irq(func);
> + ? ? ? sdio_release_host(func);
> + ? ? ? sdio->irq_handler_opaque = NULL;
> + ? ? ? sdio->irq_handler = NULL;
> +}
> +
> +static int b43_sdio_probe(struct sdio_func *func,
> + ? ? ? ? ? ? ? ? ? ? ? ? const struct sdio_device_id *id)
> +{
> + ? ? ? struct b43_sdio *sdio;
> + ? ? ? struct sdio_func_tuple *tuple;
> + ? ? ? u16 vendor = 0, device = 0;
> + ? ? ? int error;
> +
> + ? ? ? /* Look for the card chip identifier. */
> + ? ? ? tuple = func->tuples;
> + ? ? ? while (tuple) {
> + ? ? ? ? ? ? ? switch (tuple->code) {
> + ? ? ? ? ? ? ? case 0x80:
> + ? ? ? ? ? ? ? ? ? ? ? switch (tuple->data[0]) {
> + ? ? ? ? ? ? ? ? ? ? ? case HNBU_CHIPID:
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (tuple->size != 5)
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? break;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? vendor = tuple->data[1] | (tuple->data[2]<<8);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? device = tuple->data[3] | (tuple->data[4]<<8);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? dev_info(&func->dev, "Chip ID %04x:%04x\n",
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?vendor, device);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? break;
> + ? ? ? ? ? ? ? ? ? ? ? default:
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? break;
> + ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? break;
> + ? ? ? ? ? ? ? default:
> + ? ? ? ? ? ? ? ? ? ? ? break;
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? tuple = tuple->next;
> + ? ? ? }
> + ? ? ? if (!vendor || !device) {
> + ? ? ? ? ? ? ? error = -ENODEV;
> + ? ? ? ? ? ? ? goto out;
> + ? ? ? }
> +
> + ? ? ? sdio_claim_host(func);
> + ? ? ? error = sdio_set_block_size(func, B43_SDIO_BLOCK_SIZE);
> + ? ? ? if (error) {
> + ? ? ? ? ? ? ? dev_err(&func->dev, "failed to set block size to %u bytes,"
> + ? ? ? ? ? ? ? ? ? ? ? " error %d\n", B43_SDIO_BLOCK_SIZE, error);
> + ? ? ? ? ? ? ? goto err_release_host;
> + ? ? ? }
> + ? ? ? error = sdio_enable_func(func);
> + ? ? ? if (error) {
> + ? ? ? ? ? ? ? dev_err(&func->dev, "failed to enable func, error %d\n", error);
> + ? ? ? ? ? ? ? goto err_release_host;
> + ? ? ? }
> + ? ? ? sdio_release_host(func);
> +
> + ? ? ? sdio = kzalloc(sizeof(*sdio), GFP_KERNEL);
> + ? ? ? if (!sdio) {
> + ? ? ? ? ? ? ? error = -ENOMEM;
> + ? ? ? ? ? ? ? dev_err(&func->dev, "failed to allocate ssb bus\n");
> + ? ? ? ? ? ? ? goto err_disable_func;
> + ? ? ? }
> + ? ? ? error = ssb_bus_sdiobus_register(&sdio->ssb, func,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?b43_sdio_get_quirks(vendor, device));
> + ? ? ? if (error) {
> + ? ? ? ? ? ? ? dev_err(&func->dev, "failed to register ssb sdio bus,"
> + ? ? ? ? ? ? ? ? ? ? ? " error %d\n", error);
> + ? ? ? ? ? ? ? goto err_free_ssb;
> + ? ? ? }
> + ? ? ? sdio_set_drvdata(func, sdio);
> +
> + ? ? ? return 0;
> +
> +err_free_ssb:
> + ? ? ? kfree(sdio);
> +err_disable_func:
> + ? ? ? sdio_disable_func(func);
> +err_release_host:
> + ? ? ? sdio_release_host(func);
> +out:
> + ? ? ? return error;
> +}
> +
> +static void b43_sdio_remove(struct sdio_func *func)
> +{
> + ? ? ? struct b43_sdio *sdio = sdio_get_drvdata(func);
> +
> + ? ? ? ssb_bus_unregister(&sdio->ssb);
> + ? ? ? sdio_disable_func(func);
> + ? ? ? kfree(sdio);
> + ? ? ? sdio_set_drvdata(func, NULL);
> +}
> +
> +static const struct sdio_device_id b43_sdio_ids[] = {
> + ? ? ? { SDIO_DEVICE(0x02d0, 0x044b) }, /* Nintendo Wii WLAN daughter card */
> + ? ? ? { },
> +};
> +
> +static struct sdio_driver b43_sdio_driver = {
> + ? ? ? .name ? ? ? ? ? = "b43-sdio",
> + ? ? ? .id_table ? ? ? = b43_sdio_ids,
> + ? ? ? .probe ? ? ? ? ?= b43_sdio_probe,
> + ? ? ? .remove ? ? ? ? = b43_sdio_remove,
> +};
> +
> +int b43_sdio_init(void)
> +{
> + ? ? ? return sdio_register_driver(&b43_sdio_driver);
> +}
> +
> +void b43_sdio_exit(void)
> +{
> + ? ? ? sdio_unregister_driver(&b43_sdio_driver);
> +}
> Index: wireless-testing/drivers/net/wireless/b43/sdio.h
> ===================================================================
> --- /dev/null ? 1970-01-01 00:00:00.000000000 +0000
> +++ wireless-testing/drivers/net/wireless/b43/sdio.h ? ?2009-09-10 19:23:20.000000000 +0200
> @@ -0,0 +1,45 @@
> +#ifndef B43_SDIO_H_
> +#define B43_SDIO_H_
> +
> +#include <linux/ssb/ssb.h>
> +
> +struct b43_wldev;
> +
> +
> +#ifdef CONFIG_B43_SDIO
> +
> +struct b43_sdio {
> + ? ? ? struct ssb_bus ssb;
> + ? ? ? void *irq_handler_opaque;
> + ? ? ? void (*irq_handler)(struct b43_wldev *dev);
> +};
> +
> +int b43_sdio_request_irq(struct b43_wldev *dev,
> + ? ? ? ? ? ? ? ? ? ? ? ?void (*handler)(struct b43_wldev *dev));
> +void b43_sdio_free_irq(struct b43_wldev *dev);
> +
> +int b43_sdio_init(void);
> +void b43_sdio_exit(void);
> +
> +
> +#else /* CONFIG_B43_SDIO */
> +
> +
> +int b43_sdio_request_irq(struct b43_wldev *dev,
> + ? ? ? ? ? ? ? ? ? ? ? ?void (*handler)(struct b43_wldev *dev))
> +{
> + ? ? ? return -ENODEV;
> +}
> +void b43_sdio_free_irq(struct b43_wldev *dev)
> +{
> +}
> +static inline int b43_sdio_init(void)
> +{
> + ? ? ? return 0;
> +}
> +static inline void b43_sdio_exit(void)
> +{
> +}
> +
> +#endif /* CONFIG_B43_SDIO */
> +#endif /* B43_SDIO_H_ */
>
>
> --
> Greetings, Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Fri Sep 11 15:44:11 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 15:44:11 +0200
Subject: [PATCH] b43: Add Soft-MAC SDIO device support
In-Reply-To: <69e28c910909101423j535c9cffq5b1be1cb00877645@mail.gmail.com>
References: <200909101934.50283.mb@bu3sch.de>
	<69e28c910909101423j535c9cffq5b1be1cb00877645@mail.gmail.com>
Message-ID: <200909111544.12902.mb@bu3sch.de>

On Thursday 10 September 2009 23:23:19 G?bor Stefanik wrote:
> On Thu, Sep 10, 2009 at 7:34 PM, Michael Buesch <mb at bu3sch.de> wrote:
> > From: Albert Herranz <albert_herranz at yahoo.es>
> >
> > This adds support for Soft-MAC SDIO devices to b43.
> > The driver still lacks some fixes for SDIO devices, so it's currently
> > marked as BROKEN.
> 
> Is it actually completely broken; or already testable, just incomplete?

incomplete

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep 11 16:00:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 16:00:19 +0200
Subject: [PATCH] b43: Fix SDIO interrupt handler deadlock
Message-ID: <200909111600.20786.mb@bu3sch.de>

We need to release the SDIO host before locking the driver mutex.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-10 20:26:43.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-11 15:55:19.000000000 +0200
@@ -1914,20 +1914,14 @@ static irqreturn_t b43_interrupt_handler
 static void b43_sdio_interrupt_handler(struct b43_wldev *dev)
 {
 	struct b43_wl *wl = dev->wl;
-	struct sdio_func *func = dev->dev->bus->host_sdio;
 	irqreturn_t ret;
 
-	if (unlikely(b43_status(dev) < B43_STAT_STARTED))
-		return;
-
 	mutex_lock(&wl->mutex);
-	sdio_release_host(func);
 
 	ret = b43_do_interrupt(dev);
 	if (ret == IRQ_WAKE_THREAD)
 		b43_do_interrupt_thread(dev);
 
-	sdio_claim_host(func);
 	mutex_unlock(&wl->mutex);
 }
 
Index: wireless-testing/drivers/net/wireless/b43/sdio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/sdio.c	2009-09-10 19:23:20.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/sdio.c	2009-09-11 15:54:05.000000000 +0200
@@ -54,7 +54,12 @@ static void b43_sdio_interrupt_dispatche
 	struct b43_sdio *sdio = sdio_get_drvdata(func);
 	struct b43_wldev *dev = sdio->irq_handler_opaque;
 
+	if (unlikely(b43_status(dev) < B43_STAT_STARTED))
+		return;
+
+	sdio_release_host(func);
 	sdio->irq_handler(dev);
+	sdio_claim_host(func);
 }
 
 int b43_sdio_request_irq(struct b43_wldev *dev,

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep 11 16:08:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 16:08:06 +0200
Subject: [PATCH] ssb: Disable verbose SDIO coreswitch
Message-ID: <200909111608.07077.mb@bu3sch.de>

Disable SDIO coreswitch debugging.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/ssb/sdio.c
===================================================================
--- wireless-testing.orig/drivers/ssb/sdio.c	2009-09-08 19:29:16.000000000 +0200
+++ wireless-testing/drivers/ssb/sdio.c	2009-09-11 16:05:25.000000000 +0200
@@ -21,7 +21,7 @@
 #include "ssb_private.h"
 
 /* Define the following to 1 to enable a printk on each coreswitch. */
-#define SSB_VERBOSE_SDIOCORESWITCH_DEBUG		1
+#define SSB_VERBOSE_SDIOCORESWITCH_DEBUG		0
 
 
 /* Hardware invariants CIS tuples */

-- 
Greetings, Michael.


From daniel at schmitt-united.de  Fri Sep 11 16:47:34 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Fri, 11 Sep 2009 16:47:34 +0200
Subject: bcm4306 rev2 kernel segfault and reboot
In-Reply-To: <69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>
References: <4AA948E3.2060109@schmitt-united.de>
	<69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>
Message-ID: <4AAA6306.1000607@schmitt-united.de>

G?bor Stefanik wrote:
> Please enable CONFIG_KALLSYMS. This trace is useless without symbol information.
Sorry, I forgot.

I figured out that there is a problem with reading SPROM of my bcm4306.
I initialized a fallback SPROM at beginning of modinit of ssb.ko. I used this 
struct:

static struct ssb_sprom bcm63xx2_sprom = {
	.revision		= 0x01,
	.board_rev		= 0x00,
	.country_code		= 0xff,
	.ant_available_bg 	= 0xff,
	.pa0b0			= 0xffff,
	.pa0b1			= 0xffff,
	.pa0b2			= 0xffff,
	.pa1b0			= 0xffff,
	.pa1b1			= 0xffff,
	.pa1b2			= 0xffff,
	.gpio0			= 0xff,
	.gpio1			= 0xff,
	.gpio2			= 0xff,
	.gpio3			= 0xff,
	.maxpwr_bg		= 0x004c,
	.itssi_bg		= 0x00,
	.boardflags_lo		= 0x2848,
	.boardflags_hi		= 0x0000,
};

Before registering the fallback SPROM I initialized an MAC-Address:

	bcm63xx2_sprom.il0mac[0] = 0x00;
	bcm63xx2_sprom.il0mac[1] = 0x80;
	bcm63xx2_sprom.il0mac[2] = 0x23;
	bcm63xx2_sprom.il0mac[3] = 0xFE;
	bcm63xx2_sprom.il0mac[4] = 0xCD;
	bcm63xx2_sprom.il0mac[5] = 0x13;


It works that I have a fallback SPROM. here the dmesg:
DANIEL: fallback SRPM registeredPCI: enabling device 0000:00:02.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
PCI: enabling device 0000:00:04.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0

But if I do a "cat /sys/devices/pci0000:00/0000:00:02.0/ssb_sprom" I get

Bad mode in data abort handler detected
Internal error: Oops - bad mode: 0 [#1]
Modules linked in: ssb
CPU: 0    Not tainted  (2.6.28.10 #9)
PC is at 0xffff01fc
LR is at ssb_attr_sprom_show+0x7c/0x124 [ssb]
pc : [<ffff01fc>]    lr : [<bf002704>]    psr: a0000092
sp : c3aa3e5c  ip : 00000001  fp : c3aa3ecc
r10: c026e1e4  r9 : 00000000  r8 : 0000ffff
r7 : c3a30ebe  r6 : c3a24c00  r5 : 00000060  r4 : 00000002
r3 : c48c90be  r2 : c3aa3ea4  r1 : 00000003  r0 : 90be0000
Flags: NzCv  IRQs off  FIQs on  Mode IRQ_32  ISA ARM  Segment user
Control: 000039ff  Table: 03a40000  DAC: 00000015
Process cat (pid: 1461, stack limit = 0xc3aa2260)
Stack: (0xc3aa3e5c to 0xc3aa4000)
3e40:                                                                90be0000
3e60: 00000003 c3aa3ea4 c48c90be 00000002 00000060 c3a24c00 c3a30ebe 0000ffff
3e80: 00000000 c026e1e4 c3aa3ecc 00000001 c3aa3e5c bf002704 ffff01fc a0000092
3ea0: ffffffff c3aa3eb0 c3a24c00 000000dc bf002850 c3a30e00 c3a24c1c c3acb000
3ec0: c3aa3ef8 c3aa3ed0 bf002704 bf00285c c3acb000 fffffffb c39f1ab4 00000fff
3ee0: c0267420 c396c8f4 c3aa3f80 c3aa3f0c c3aa3efc bf002cc4 bf002694 bf008730
3f00: c3aa3f24 c3aa3f10 c012e43c bf002ca0 c396c8e0 c38114c0 c3aa3f5c c3aa3f28
3f20: c00c7548 c012e420 00000003 00001000 beb23d90 c3869340 00001000 beb23d90
3f40: c3aa3f80 c0021f84 c3aa2000 00000001 c3aa3f7c c3aa3f60 c008ac1c c00c74b0
3f60: c3869340 00000000 00000000 00000003 c3aa3fa4 c3aa3f80 c008af0c c008ab78
3f80: 00000000 00000000 00000000 00001000 4009c614 beb23d90 00000000 c3aa3fa8
3fa0: c0021de0 c008aecc 00001000 4009c614 00000003 beb23d90 00001000 00074b70
3fc0: 00001000 4009c614 beb23d90 00000003 00000000 00000001 00000001 00000003
3fe0: 40052660 beb23d74 0000db54 40052668 20000010 00000003 00000000 00000000
Backtrace:
[<bf002850>] (sprom_do_read+0x0/0xf0 [ssb]) from [<bf002704>] 
(ssb_attr_sprom_show+0x7c/0x124 [ssb])
[<bf002688>] (ssb_attr_sprom_show+0x0/0x124 [ssb]) from [<bf002cc4>] 
(ssb_pci_attr_sprom_show+0x30/0x40 [ssb])
[<bf002c94>] (ssb_pci_attr_sprom_show+0x0/0x40 [ssb]) from [<c012e43c>] 
(dev_attr_show+0x28/0x54)
  r4:bf008730
[<c012e414>] (dev_attr_show+0x0/0x54) from [<c00c7548>] (sysfs_read_file+0xa4/0x138)
  r5:c38114c0 r4:c396c8e0
[<c00c74a4>] (sysfs_read_file+0x0/0x138) from [<c008ac1c>] (vfs_read+0xb0/0xfc)
[<c008ab6c>] (vfs_read+0x0/0xfc) from [<c008af0c>] (sys_read+0x4c/0x84)
  r7:00000003 r6:00000000 r5:00000000 r4:c3869340
[<c008aec0>] (sys_read+0x0/0x84) from [<c0021de0>] (ret_fast_syscall+0x0/0x2c)
  r6:beb23d90 r5:4009c614 r4:00001000
Code: 00000000 00000000 00000000 00000000 (00000000)
---[ end trace dffef674132f720b ]---

So I decided to return the same data in sprom_do_read as in my fallback image.
This works now:
root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# cat /sys/devices/pci0000:00/0000:0
0:02.0/ssb_sprom
00012380CDFE00130000000000000000000000000000000000FF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00004C0000004828000000000000000000000000000000000000000000
root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#

But when I now try to load b43legacy it crashed again :(
root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# insmod b43legacy.ko
b43legacy-phy0: Broadcom 4306 WLAN found
b43legacy: probe of ssb0:0 failed with error -2
b43legacy-phy1: Broadcom 4306 WLAN found
b43legacy: probe of ssb1:0 failed with error -2
Unable to handle kernel NULL pointer dereference at virtual address 00000000
pgd = c3860000
[00000000] *pgd=0313a031, *pte=00000000, *ppte=00000000
Internal error: Oops: 817 [#1]
Modules linked in: b43legacy(+) mac80211 cfg80211 ssb
CPU: 0    Not tainted  (2.6.28.10 #9)
PC is at sysfs_create_file+0x34/0x40
LR is at driver_create_file+0x20/0x2c
pc : [<c00c78ac>]    lr : [<c0131758>]    psr: 60000013
sp : c30efd60  ip : c30efd70  fp : c30efd6c
r10: bf008644  r9 : bf08c000  r8 : c398f5a0
r7 : 00000000  r6 : 00075030  r5 : bf088bb8  r4 : 00000000
r3 : 00000000  r2 : 00000020  r1 : c02674b0  r0 : 00000000
Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
Control: 000039ff  Table: 03860000  DAC: 00000015
Process insmod (pid: 1508, stack limit = 0xc30ee260)
Stack: (0xc30efd60 to 0xc30f0000)
fd60: c30efd7c c30efd70 c0131758 c00c7884 c30efda8 c30efd80 c0130d88 c0131744
fd80: bf0838a8 00000000 bf088bb8 00075030 00000000 c30ee000 be842e98 c30efdcc
fda0: c30efdac c01315a0 c0130cb8 00000000 bf088f00 00075030 00000000 c30ee000
fdc0: c30efddc c30efdd0 bf0010c0 c0131558 c30efdfc c30efde0 bf08c01c bf0010a4
fde0: 00000001 00000000 00000000 bf088f00 c30eff80 c30efe00 c00212b0 bf08c00c
fe00: c026d2d8 00000000 c30efe14 c0069438 c0067fe8 00000000 c026d2fc 00000003
fe20: c026d2d8 00000001 00000000 00000003 c02f7b20 c026d2f0 c026d2d8 40000013
fe40: 00000000 00000018 c313ee20 c30efe7c c30efe5c c0069804 c0069388 00000000
fe60: 00000020 c4936000 00000001 c4936000 c30efe8c c30efe80 c00698a0 c006969c
fe80: c30efea0 c30efe90 c393e780 00000021 c4936000 c30efec0 c30efea4 c007d634
fea0: c008652c c396cb60 bf088f00 00000001 00000001 c30efed0 c30efec4 c007d704
fec0: c007d5a8 c30eff80 c30efed4 c005e888 c007d6e0 00000000 c30eff50 c30eff48
fee0: bf067818 bf088f0c c494e41c c494e304 c494e3f4 bf084718 c494e084 c494dfb6
ff00: c393e760 c4954fdc 00000016 0000000b 00000000 00000245 00000245 bf084754
ff20: bf086b94 bf0429dc 00000018 c494e444 00000000 00000000 00000000 00000000
ff40: 00000000 00000000 00020fd1 bf088f00 00075030 00000000 00020fd1 bf088f00
ff60: 00075030 00000000 c0021f84 c30ee000 be842e98 c30effa4 c30eff84 c005e974
ff80: c0021284 c0088398 00020fd1 00075030 00000002 00000080 00000000 c30effa8
ffa0: c0021de0 c005e8f0 00020fd1 00075030 00075030 00020fd1 00075020 00075030
ffc0: 00020fd1 00075030 00000002 be842f5d be842bec 00000002 be842e98 0000c8c0
ffe0: 40051a94 be841bcc 0001181c 40051aa0 20000010 00075030 00305021 00305421
Backtrace:
[<c00c7878>] (sysfs_create_file+0x0/0x40) from [<c0131758>] 
(driver_create_file+0x20/0x2c)
[<c0131738>] (driver_create_file+0x0/0x2c) from [<c0130d88>] 
(bus_add_driver+0xdc/0x22c)
[<c0130cac>] (bus_add_driver+0x0/0x22c) from [<c01315a0>] 
(driver_register+0x54/0x130)
[<c013154c>] (driver_register+0x0/0x130) from [<bf0010c0>] 
(__ssb_driver_register+0x28/0x30 [ssb])
  r8:c30ee000 r7:00000000 r6:00075030 r5:bf088f00 r4:00000000
[<bf001098>] (__ssb_driver_register+0x0/0x30 [ssb]) from [<bf08c01c>] 
(b43legacy_init+0x1c/0x74 [b43legacy])
[<bf08c000>] (b43legacy_init+0x0/0x74 [b43legacy]) from [<c00212b0>] 
(do_one_initcall+0x38/0x1b0)
  r5:bf088f00 r4:00000000
[<c0021278>] (do_one_initcall+0x0/0x1b0) from [<c005e974>] 
(sys_init_module+0x90/0x18c)
[<c005e8e4>] (sys_init_module+0x0/0x18c) from [<c0021de0>] 
(ret_fast_syscall+0x0/0x2c)
  r7:00000080 r6:00000002 r5:00075030 r4:00020fd1
Code: e3a02002 ebffffee e89da800 e3a03000 (e5833000)
---[ end trace dffef674132f720b ]---
Segmentation fault
root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#

this happens with b43legacy driver from compat-wireless_2009-08-20.

I will try to use 2009-08-15 I trink it worked for one time.

Daniel


From mb at bu3sch.de  Fri Sep 11 18:31:32 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 18:31:32 +0200
Subject: [PATCH] b43: Fix resume failure
Message-ID: <200909111831.33136.mb@bu3sch.de>

This fixes a resume failure where a signal is pending on resume
so the firmware upload fails.
This removes the interruptible sleep, because we don't really need it.
In the worst case (with broken firmware) the sleep loop will take 1 second.
In the common case (working firmware), it will only take a few milliseconds.
So we don't really need to be interruptible.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-11 18:24:59.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-11 18:25:13.000000000 +0200
@@ -2309,11 +2309,7 @@ static int b43_upload_microcode(struct b
 			err = -ENODEV;
 			goto error;
 		}
-		msleep_interruptible(50);
-		if (signal_pending(current)) {
-			err = -EINTR;
-			goto error;
-		}
+		msleep(50);
 	}
 	b43_read32(dev, B43_MMIO_GEN_IRQ_REASON);	/* dummy read */
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Sep 11 21:44:05 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 21:44:05 +0200
Subject: [PATCH] b43: Rewrite suspend/resume code
Message-ID: <200909112144.05347.mb@bu3sch.de>

This removes most of the b43 suspend/resume code (it's handled by mac80211)
and moves the registration of devices to the attachment phase. This is
required, because we must not register/unregister devices on suspend/resume.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Nobody replied to my RFT request, so I guess it's OK.

John, this patch needs to be applied in front of some other patches
that I already sent. See this series file, if you have problems applying
the patches: http://bu3sch.de/patches/wireless-testing/20090911-2143/patches/series


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-11 21:29:20.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-11 21:29:22.000000000 +0200
@@ -3006,14 +3006,18 @@ static void b43_security_init(struct b43
 static int b43_rng_read(struct hwrng *rng, u32 *data)
 {
 	struct b43_wl *wl = (struct b43_wl *)rng->priv;
+	struct b43_wldev *dev;
+	int count = -ENODEV;
 
-	/* FIXME: We need to take wl->mutex here to make sure the device
-	 * is not going away from under our ass. However it could deadlock
-	 * with hwrng internal locking. */
-
-	*data = b43_read16(wl->current_dev, B43_MMIO_RNG);
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (likely(dev && b43_status(dev) >= B43_STAT_INITIALIZED)) {
+		*data = b43_read16(dev, B43_MMIO_RNG);
+		count = sizeof(u16);
+	}
+	mutex_unlock(&wl->mutex);
 
-	return (sizeof(u16));
+	return count;
 }
 #endif /* CONFIG_B43_HWRNG */
 
@@ -3855,6 +3859,7 @@ redo:
 
 	b43_mac_suspend(dev);
 	free_irq(dev->dev->irq, dev);
+	b43_leds_exit(dev);
 	b43dbg(wl, "Wireless interface stopped\n");
 
 	return dev;
@@ -3886,8 +3891,10 @@ static int b43_wireless_core_start(struc
 	/* Start maintainance work */
 	b43_periodic_tasks_setup(dev);
 
+	b43_leds_init(dev);
+
 	b43dbg(dev->wl, "Wireless interface started\n");
-      out:
+out:
 	return err;
 }
 
@@ -4164,10 +4171,6 @@ static void b43_wireless_core_exit(struc
 	macctl |= B43_MACCTL_PSM_JMP0;
 	b43_write32(dev, B43_MMIO_MACCTL, macctl);
 
-	if (!dev->suspend_in_progress) {
-		b43_leds_exit(dev);
-		b43_rng_exit(dev->wl);
-	}
 	b43_dma_free(dev);
 	b43_pio_free(dev);
 	b43_chip_exit(dev);
@@ -4184,7 +4187,6 @@ static void b43_wireless_core_exit(struc
 /* Initialize a wireless core */
 static int b43_wireless_core_init(struct b43_wldev *dev)
 {
-	struct b43_wl *wl = dev->wl;
 	struct ssb_bus *bus = dev->dev->bus;
 	struct ssb_sprom *sprom = &bus->sprom;
 	struct b43_phy *phy = &dev->phy;
@@ -4284,13 +4286,9 @@ static int b43_wireless_core_init(struct
 	ssb_bus_powerup(bus, !(sprom->boardflags_lo & B43_BFL_XTAL_NOSLOW));
 	b43_upload_card_macaddress(dev);
 	b43_security_init(dev);
-	if (!dev->suspend_in_progress)
-		b43_rng_init(wl);
 
 	b43_set_status(dev, B43_STAT_INITIALIZED);
 
-	if (!dev->suspend_in_progress)
-		b43_leds_init(dev);
 out:
 	return err;
 
@@ -4839,7 +4837,6 @@ static int b43_wireless_init(struct ssb_
 
 	/* Initialize struct b43_wl */
 	wl->hw = hw;
-	spin_lock_init(&wl->leds_lock);
 	mutex_init(&wl->mutex);
 	spin_lock_init(&wl->hardirq_lock);
 	INIT_LIST_HEAD(&wl->devlist);
@@ -4880,6 +4877,8 @@ static int b43_probe(struct ssb_device *
 		err = ieee80211_register_hw(wl->hw);
 		if (err)
 			goto err_one_core_detach;
+		b43_leds_register(wl->current_dev);
+		b43_rng_init(wl);
 	}
 
       out:
@@ -4908,12 +4907,16 @@ static void b43_remove(struct ssb_device
 		 * might have modified it. Restoring is important, so the networking
 		 * stack can properly free resources. */
 		wl->hw->queues = wl->mac80211_initially_registered_queues;
+		wl->current_dev = NULL;
+		cancel_work_sync(&wl->leds.work);
 		ieee80211_unregister_hw(wl->hw);
 	}
 
 	b43_one_core_detach(dev);
 
 	if (list_empty(&wl->devlist)) {
+		b43_rng_exit(wl);
+		b43_leds_unregister(wldev);
 		/* Last core on the chip unregistered.
 		 * We can destroy common struct b43_wl.
 		 */
@@ -4931,74 +4934,11 @@ void b43_controller_restart(struct b43_w
 	ieee80211_queue_work(dev->wl->hw, &dev->restart_work);
 }
 
-#ifdef CONFIG_PM
-
-static int b43_suspend(struct ssb_device *dev, pm_message_t state)
-{
-	struct b43_wldev *wldev = ssb_get_drvdata(dev);
-	struct b43_wl *wl = wldev->wl;
-
-	b43dbg(wl, "Suspending...\n");
-
-	mutex_lock(&wl->mutex);
-	wldev->suspend_in_progress = true;
-	wldev->suspend_init_status = b43_status(wldev);
-	if (wldev->suspend_init_status >= B43_STAT_STARTED)
-		wldev = b43_wireless_core_stop(wldev);
-	if (wldev && wldev->suspend_init_status >= B43_STAT_INITIALIZED)
-		b43_wireless_core_exit(wldev);
-	mutex_unlock(&wl->mutex);
-
-	b43dbg(wl, "Device suspended.\n");
-
-	return 0;
-}
-
-static int b43_resume(struct ssb_device *dev)
-{
-	struct b43_wldev *wldev = ssb_get_drvdata(dev);
-	struct b43_wl *wl = wldev->wl;
-	int err = 0;
-
-	b43dbg(wl, "Resuming...\n");
-
-	mutex_lock(&wl->mutex);
-	if (wldev->suspend_init_status >= B43_STAT_INITIALIZED) {
-		err = b43_wireless_core_init(wldev);
-		if (err) {
-			b43err(wl, "Resume failed at core init\n");
-			goto out;
-		}
-	}
-	if (wldev->suspend_init_status >= B43_STAT_STARTED) {
-		err = b43_wireless_core_start(wldev);
-		if (err) {
-			b43_leds_exit(wldev);
-			b43_rng_exit(wldev->wl);
-			b43_wireless_core_exit(wldev);
-			b43err(wl, "Resume failed at core start\n");
-			goto out;
-		}
-	}
-	b43dbg(wl, "Device resumed.\n");
- out:
-	wldev->suspend_in_progress = false;
-	mutex_unlock(&wl->mutex);
-	return err;
-}
-
-#else /* CONFIG_PM */
-# define b43_suspend	NULL
-# define b43_resume	NULL
-#endif /* CONFIG_PM */
-
 static struct ssb_driver b43_ssb_driver = {
 	.name		= KBUILD_MODNAME,
 	.id_table	= b43_ssb_tbl,
 	.probe		= b43_probe,
 	.remove		= b43_remove,
-	.suspend	= b43_suspend,
-	.resume		= b43_resume,
 };
 
 static void b43_print_driverinfo(void)
Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-11 21:29:20.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-11 21:29:22.000000000 +0200
@@ -629,13 +629,6 @@ struct b43_wl {
 	 * from the mac80211 subsystem. */
 	u16 mac80211_initially_registered_queues;
 
-	/* R/W lock for data transmission.
-	 * Transmissions on 2+ queues can run concurrently, but somebody else
-	 * might sync with TX by write_lock_irqsave()'ing. */
-	rwlock_t tx_lock;
-	/* Lock for LEDs access. */
-	spinlock_t leds_lock;
-
 	/* We can only have one operating interface (802.11 core)
 	 * at a time. General information about this interface follows.
 	 */
@@ -686,6 +679,9 @@ struct b43_wl {
 	struct work_struct tx_work;
 	/* Queue of packets to be transmitted. */
 	struct sk_buff_head tx_queue;
+
+	/* The device LEDs. */
+	struct b43_leds leds;
 };
 
 /* The type of the firmware file. */
@@ -768,13 +764,10 @@ struct b43_wldev {
 	/* The device initialization status.
 	 * Use b43_status() to query. */
 	atomic_t __init_status;
-	/* Saved init status for handling suspend. */
-	int suspend_init_status;
 
 	bool bad_frames_preempt;	/* Use "Bad Frames Preemption" (default off) */
 	bool dfq_valid;		/* Directed frame queue valid (IBSS PS mode, ATIM) */
 	bool radio_hw_enable;	/* saved state of radio hardware enabled state */
-	bool suspend_in_progress;	/* TRUE, if we are in a suspend/resume cycle */
 	bool qos_enabled;		/* TRUE, if QoS is used. */
 	bool hwcrypto_enabled;		/* TRUE, if HW crypto acceleration is enabled. */
 
@@ -794,12 +787,6 @@ struct b43_wldev {
 	/* Various statistics about the physical device. */
 	struct b43_stats stats;
 
-	/* The device LEDs. */
-	struct b43_led led_tx;
-	struct b43_led led_rx;
-	struct b43_led led_assoc;
-	struct b43_led led_radio;
-
 	/* Reason code of the last interrupt. */
 	u32 irq_reason;
 	u32 dma_reason[6];
Index: wireless-testing/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.c	2009-09-11 21:29:20.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.c	2009-09-11 21:29:22.000000000 +0200
@@ -34,57 +34,91 @@
 static void b43_led_turn_on(struct b43_wldev *dev, u8 led_index,
 			    bool activelow)
 {
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
 	u16 ctl;
 
-	spin_lock_irqsave(&wl->leds_lock, flags);
 	ctl = b43_read16(dev, B43_MMIO_GPIO_CONTROL);
 	if (activelow)
 		ctl &= ~(1 << led_index);
 	else
 		ctl |= (1 << led_index);
 	b43_write16(dev, B43_MMIO_GPIO_CONTROL, ctl);
-	spin_unlock_irqrestore(&wl->leds_lock, flags);
 }
 
 static void b43_led_turn_off(struct b43_wldev *dev, u8 led_index,
 			     bool activelow)
 {
-	struct b43_wl *wl = dev->wl;
-	unsigned long flags;
 	u16 ctl;
 
-	spin_lock_irqsave(&wl->leds_lock, flags);
 	ctl = b43_read16(dev, B43_MMIO_GPIO_CONTROL);
 	if (activelow)
 		ctl |= (1 << led_index);
 	else
 		ctl &= ~(1 << led_index);
 	b43_write16(dev, B43_MMIO_GPIO_CONTROL, ctl);
-	spin_unlock_irqrestore(&wl->leds_lock, flags);
 }
 
-/* Callback from the LED subsystem. */
-static void b43_led_brightness_set(struct led_classdev *led_dev,
-				   enum led_brightness brightness)
+static void b43_led_update(struct b43_wldev *dev,
+			   struct b43_led *led)
 {
-	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
-	struct b43_wldev *dev = led->dev;
 	bool radio_enabled;
+	bool turn_on;
 
-	if (unlikely(b43_status(dev) < B43_STAT_INITIALIZED))
+	if (!led->wl)
 		return;
 
-	/* Checking the radio-enabled status here is slightly racy,
-	 * but we want to avoid the locking overhead and we don't care
-	 * whether the LED has the wrong state for a second. */
 	radio_enabled = (dev->phy.radio_on && dev->radio_hw_enable);
 
-	if (brightness == LED_OFF || !radio_enabled)
-		b43_led_turn_off(dev, led->index, led->activelow);
+	/* The led->state read is racy, but we don't care. In case we raced
+	 * with the brightness_set handler, we will be called again soon
+	 * to fixup our state. */
+	if (radio_enabled)
+		turn_on = atomic_read(&led->state) != LED_OFF;
 	else
+		turn_on = 0;
+	if (turn_on == led->hw_state)
+		return;
+	led->hw_state = turn_on;
+
+	if (turn_on)
 		b43_led_turn_on(dev, led->index, led->activelow);
+	else
+		b43_led_turn_off(dev, led->index, led->activelow);
+}
+
+static void b43_leds_work(struct work_struct *work)
+{
+	struct b43_leds *leds = container_of(work, struct b43_leds, work);
+	struct b43_wl *wl = container_of(leds, struct b43_wl, leds);
+	struct b43_wldev *dev;
+
+	mutex_lock(&wl->mutex);
+	dev = wl->current_dev;
+	if (unlikely(!dev || b43_status(dev) < B43_STAT_STARTED))
+		goto out_unlock;
+
+	b43_led_update(dev, &wl->leds.led_tx);
+	b43_led_update(dev, &wl->leds.led_rx);
+	b43_led_update(dev, &wl->leds.led_radio);
+	b43_led_update(dev, &wl->leds.led_assoc);
+
+out_unlock:
+	mutex_unlock(&wl->mutex);
+}
+
+/* Callback from the LED subsystem. */
+static void b43_led_brightness_set(struct led_classdev *led_dev,
+				   enum led_brightness brightness)
+{
+	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
+	struct b43_wl *wl = led->wl;
+
+	/* The check for current_dev is only needed while unregistering,
+	 * so it is sequencial and does not race. But we must not dereference
+	 * current_dev here. */
+	if (likely(wl->current_dev)) {
+		atomic_set(&led->state, brightness);
+		ieee80211_queue_work(wl->hw, &wl->leds.work);
+	}
 }
 
 static int b43_register_led(struct b43_wldev *dev, struct b43_led *led,
@@ -93,15 +127,15 @@ static int b43_register_led(struct b43_w
 {
 	int err;
 
-	b43_led_turn_off(dev, led_index, activelow);
-	if (led->dev)
+	if (led->wl)
 		return -EEXIST;
 	if (!default_trigger)
 		return -EINVAL;
-	led->dev = dev;
+	led->wl = dev->wl;
 	led->index = led_index;
 	led->activelow = activelow;
 	strncpy(led->name, name, sizeof(led->name));
+	atomic_set(&led->state, 0);
 
 	led->led_dev.name = led->name;
 	led->led_dev.default_trigger = default_trigger;
@@ -110,19 +144,19 @@ static int b43_register_led(struct b43_w
 	err = led_classdev_register(dev->dev->dev, &led->led_dev);
 	if (err) {
 		b43warn(dev->wl, "LEDs: Failed to register %s\n", name);
-		led->dev = NULL;
+		led->wl = NULL;
 		return err;
 	}
+
 	return 0;
 }
 
 static void b43_unregister_led(struct b43_led *led)
 {
-	if (!led->dev)
+	if (!led->wl)
 		return;
 	led_classdev_unregister(&led->led_dev);
-	b43_led_turn_off(led->dev, led->index, led->activelow);
-	led->dev = NULL;
+	led->wl = NULL;
 }
 
 static void b43_map_led(struct b43_wldev *dev,
@@ -137,24 +171,20 @@ static void b43_map_led(struct b43_wldev
 	 * generic LED triggers. */
 	switch (behaviour) {
 	case B43_LED_INACTIVE:
-		break;
 	case B43_LED_OFF:
-		b43_led_turn_off(dev, led_index, activelow);
-		break;
 	case B43_LED_ON:
-		b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_ACTIVITY:
 	case B43_LED_TRANSFER:
 	case B43_LED_APTRANSFER:
 		snprintf(name, sizeof(name),
 			 "b43-%s::tx", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_tx, name,
+		b43_register_led(dev, &dev->wl->leds.led_tx, name,
 				 ieee80211_get_tx_led_name(hw),
 				 led_index, activelow);
 		snprintf(name, sizeof(name),
 			 "b43-%s::rx", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_rx, name,
+		b43_register_led(dev, &dev->wl->leds.led_rx, name,
 				 ieee80211_get_rx_led_name(hw),
 				 led_index, activelow);
 		break;
@@ -164,18 +194,15 @@ static void b43_map_led(struct b43_wldev
 	case B43_LED_MODE_BG:
 		snprintf(name, sizeof(name),
 			 "b43-%s::radio", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_radio, name,
+		b43_register_led(dev, &dev->wl->leds.led_radio, name,
 				 ieee80211_get_radio_led_name(hw),
 				 led_index, activelow);
-		/* Sync the RF-kill LED state with radio and switch states. */
-		if (dev->phy.radio_on && b43_is_hw_radio_enabled(dev))
-			b43_led_turn_on(dev, led_index, activelow);
 		break;
 	case B43_LED_WEIRD:
 	case B43_LED_ASSOC:
 		snprintf(name, sizeof(name),
 			 "b43-%s::assoc", wiphy_name(hw->wiphy));
-		b43_register_led(dev, &dev->led_assoc, name,
+		b43_register_led(dev, &dev->wl->leds.led_assoc, name,
 				 ieee80211_get_assoc_led_name(hw),
 				 led_index, activelow);
 		break;
@@ -186,58 +213,140 @@ static void b43_map_led(struct b43_wldev
 	}
 }
 
-void b43_leds_init(struct b43_wldev *dev)
+static void b43_led_get_sprominfo(struct b43_wldev *dev,
+				  unsigned int led_index,
+				  enum b43_led_behaviour *behaviour,
+				  bool *activelow)
 {
 	struct ssb_bus *bus = dev->dev->bus;
 	u8 sprom[4];
-	int i;
-	enum b43_led_behaviour behaviour;
-	bool activelow;
 
 	sprom[0] = bus->sprom.gpio0;
 	sprom[1] = bus->sprom.gpio1;
 	sprom[2] = bus->sprom.gpio2;
 	sprom[3] = bus->sprom.gpio3;
 
-	for (i = 0; i < 4; i++) {
-		if (sprom[i] == 0xFF) {
-			/* There is no LED information in the SPROM
-			 * for this LED. Hardcode it here. */
-			activelow = 0;
-			switch (i) {
-			case 0:
-				behaviour = B43_LED_ACTIVITY;
-				activelow = 1;
-				if (bus->boardinfo.vendor == PCI_VENDOR_ID_COMPAQ)
-					behaviour = B43_LED_RADIO_ALL;
-				break;
-			case 1:
-				behaviour = B43_LED_RADIO_B;
-				if (bus->boardinfo.vendor == PCI_VENDOR_ID_ASUSTEK)
-					behaviour = B43_LED_ASSOC;
-				break;
-			case 2:
-				behaviour = B43_LED_RADIO_A;
-				break;
-			case 3:
-				behaviour = B43_LED_OFF;
-				break;
-			default:
-				B43_WARN_ON(1);
-				return;
-			}
+	if (sprom[led_index] == 0xFF) {
+		/* There is no LED information in the SPROM
+		 * for this LED. Hardcode it here. */
+		*activelow = 0;
+		switch (led_index) {
+		case 0:
+			*behaviour = B43_LED_ACTIVITY;
+			*activelow = 1;
+			if (bus->boardinfo.vendor == PCI_VENDOR_ID_COMPAQ)
+				*behaviour = B43_LED_RADIO_ALL;
+			break;
+		case 1:
+			*behaviour = B43_LED_RADIO_B;
+			if (bus->boardinfo.vendor == PCI_VENDOR_ID_ASUSTEK)
+				*behaviour = B43_LED_ASSOC;
+			break;
+		case 2:
+			*behaviour = B43_LED_RADIO_A;
+			break;
+		case 3:
+			*behaviour = B43_LED_OFF;
+			break;
+		default:
+			B43_WARN_ON(1);
+			return;
+		}
+	} else {
+		*behaviour = sprom[led_index] & B43_LED_BEHAVIOUR;
+		*activelow = !!(sprom[led_index] & B43_LED_ACTIVELOW);
+	}
+}
+
+void b43_leds_init(struct b43_wldev *dev)
+{
+	struct b43_led *led;
+	unsigned int i;
+	enum b43_led_behaviour behaviour;
+	bool activelow;
+
+	/* Sync the RF-kill LED state (if we have one) with radio and switch states. */
+	led = &dev->wl->leds.led_radio;
+	if (led->wl) {
+		if (dev->phy.radio_on && b43_is_hw_radio_enabled(dev)) {
+			b43_led_turn_on(dev, led->index, led->activelow);
+			led->hw_state = 1;
+			atomic_set(&led->state, 1);
 		} else {
-			behaviour = sprom[i] & B43_LED_BEHAVIOUR;
-			activelow = !!(sprom[i] & B43_LED_ACTIVELOW);
+			b43_led_turn_off(dev, led->index, led->activelow);
+			led->hw_state = 0;
+			atomic_set(&led->state, 0);
+		}
+	}
+
+	/* Initialize TX/RX/ASSOC leds */
+	led = &dev->wl->leds.led_tx;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+	led = &dev->wl->leds.led_rx;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+	led = &dev->wl->leds.led_assoc;
+	if (led->wl) {
+		b43_led_turn_off(dev, led->index, led->activelow);
+		led->hw_state = 0;
+		atomic_set(&led->state, 0);
+	}
+
+	/* Initialize other LED states. */
+	for (i = 0; i < B43_MAX_NR_LEDS; i++) {
+		b43_led_get_sprominfo(dev, i, &behaviour, &activelow);
+		switch (behaviour) {
+		case B43_LED_OFF:
+			b43_led_turn_off(dev, i, activelow);
+			break;
+		case B43_LED_ON:
+			b43_led_turn_on(dev, i, activelow);
+			break;
+		default:
+			/* Leave others as-is. */
+			break;
 		}
-		b43_map_led(dev, i, behaviour, activelow);
 	}
 }
 
 void b43_leds_exit(struct b43_wldev *dev)
 {
-	b43_unregister_led(&dev->led_tx);
-	b43_unregister_led(&dev->led_rx);
-	b43_unregister_led(&dev->led_assoc);
-	b43_unregister_led(&dev->led_radio);
+	struct b43_leds *leds = &dev->wl->leds;
+
+	b43_led_turn_off(dev, leds->led_tx.index, leds->led_tx.activelow);
+	b43_led_turn_off(dev, leds->led_rx.index, leds->led_rx.activelow);
+	b43_led_turn_off(dev, leds->led_assoc.index, leds->led_assoc.activelow);
+	b43_led_turn_off(dev, leds->led_radio.index, leds->led_radio.activelow);
+}
+
+void b43_leds_register(struct b43_wldev *dev)
+{
+	unsigned int i;
+	enum b43_led_behaviour behaviour;
+	bool activelow;
+
+	INIT_WORK(&dev->wl->leds.work, b43_leds_work);
+
+	/* Register the LEDs to the LED subsystem. */
+	for (i = 0; i < B43_MAX_NR_LEDS; i++) {
+		b43_led_get_sprominfo(dev, i, &behaviour, &activelow);
+		b43_map_led(dev, i, behaviour, activelow);
+	}
+}
+
+void b43_leds_unregister(struct b43_wldev *dev)
+{
+	struct b43_leds *leds = &dev->wl->leds;
+
+	b43_unregister_led(&leds->led_tx);
+	b43_unregister_led(&leds->led_rx);
+	b43_unregister_led(&leds->led_assoc);
+	b43_unregister_led(&leds->led_radio);
 }
Index: wireless-testing/drivers/net/wireless/b43/leds.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.h	2009-09-11 21:29:20.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.h	2009-09-11 21:29:22.000000000 +0200
@@ -7,12 +7,13 @@ struct b43_wldev;
 
 #include <linux/types.h>
 #include <linux/leds.h>
+#include <linux/workqueue.h>
 
 
 #define B43_LED_MAX_NAME_LEN	31
 
 struct b43_led {
-	struct b43_wldev *dev;
+	struct b43_wl *wl;
 	/* The LED class device */
 	struct led_classdev led_dev;
 	/* The index number of the LED. */
@@ -22,8 +23,23 @@ struct b43_led {
 	bool activelow;
 	/* The unique name string for this LED device. */
 	char name[B43_LED_MAX_NAME_LEN + 1];
+	/* The current status of the LED. This is updated locklessly. */
+	atomic_t state;
+	/* The active state in hardware. */
+	bool hw_state;
 };
 
+struct b43_leds {
+	struct b43_led led_tx;
+	struct b43_led led_rx;
+	struct b43_led led_radio;
+	struct b43_led led_assoc;
+
+	struct work_struct work;
+};
+
+#define B43_MAX_NR_LEDS			4
+
 #define B43_LED_BEHAVIOUR		0x7F
 #define B43_LED_ACTIVELOW		0x80
 /* LED behaviour values */
@@ -42,6 +58,8 @@ enum b43_led_behaviour {
 	B43_LED_INACTIVE,
 };
 
+void b43_leds_register(struct b43_wldev *dev);
+void b43_leds_unregister(struct b43_wldev *dev);
 void b43_leds_init(struct b43_wldev *dev);
 void b43_leds_exit(struct b43_wldev *dev);
 
@@ -49,10 +67,16 @@ void b43_leds_exit(struct b43_wldev *dev
 #else /* CONFIG_B43_LEDS */
 /* LED support disabled */
 
-struct b43_led {
+struct b43_leds {
 	/* empty */
 };
 
+static inline void b43_leds_register(struct b43_wldev *dev)
+{
+}
+static inline void b43_leds_unregister(struct b43_wldev *dev)
+{
+}
 static inline void b43_leds_init(struct b43_wldev *dev)
 {
 }

-- 
Greetings, Michael.


From illth at gmx.de  Fri Sep 11 22:54:57 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Fri, 11 Sep 2009 22:54:57 +0200
Subject: 5354 + B43 = Instant Crash
Message-ID: <1252702497.20674.16.camel@note>

Hi List,

I installed the latest version of OpenWRT on a ASUS WL-520GU.
I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
compatible with compat wireless.

Than I patched OpenWRT to build compat-wireless-09-02

As said, It yields an instant crash:

cfg80211: World regulatory domain updated:
	(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
	(2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
	(2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
	(2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
	(5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
	(5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
b43-phy0: Broadcom 5354 WLAN found (core revision 13)
Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
port

FWIW, I add the patches for the kernel.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 901-ssb-hdrs-update.patch
Type: text/x-patch
Size: 10840 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090911/cdc3358f/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 902-ssb-add-pmu-funcs.patch
Type: text/x-patch
Size: 2463 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090911/cdc3358f/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 903-ssb-additional_sprom_vars_from_cfe.patch
Type: text/x-patch
Size: 1122 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090911/cdc3358f/attachment-0002.bin>

From mb at bu3sch.de  Fri Sep 11 23:04:04 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 11 Sep 2009 23:04:04 +0200
Subject: [PATCH] b43: Fix IRQ sync for SDIO
Message-ID: <200909112304.04810.mb@bu3sch.de>

synchronize_irq is meaningless for SDIO. sdio_release_irq will
sync the IRQ thread for us.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-11 22:50:17.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-11 22:52:25.000000000 +0200
@@ -3854,10 +3854,15 @@ redo:
 		b43_read32(dev, B43_MMIO_GEN_IRQ_MASK);	/* Flush */
 		spin_unlock_irq(&wl->hardirq_lock);
 	}
-	/* Synchronize the interrupt handlers. Unlock to avoid deadlocks. */
+	/* Synchronize and free the interrupt handlers. Unlock to avoid deadlocks. */
 	orig_dev = dev;
 	mutex_unlock(&wl->mutex);
-	synchronize_irq(dev->dev->irq);
+	if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO) {
+		b43_sdio_free_irq(dev);
+	} else {
+		synchronize_irq(dev->dev->irq);
+		free_irq(dev->dev->irq, dev);
+	}
 	mutex_lock(&wl->mutex);
 	dev = wl->current_dev;
 	if (!dev)
@@ -3874,10 +3879,6 @@ redo:
 		dev_kfree_skb(skb_dequeue(&wl->tx_queue));
 
 	b43_mac_suspend(dev);
-	if (dev->dev->bus->bustype == SSB_BUSTYPE_SDIO)
-		b43_sdio_free_irq(dev);
-	else
-		free_irq(dev->dev->irq, dev);
 	b43_leds_exit(dev);
 	b43dbg(wl, "Wireless interface stopped\n");
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Sep 12 00:48:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 12 Sep 2009 00:48:03 +0200
Subject: [PATCH] b43: Add optional verbose runtime statistics
Message-ID: <200909120048.03982.mb@bu3sch.de>

This adds support for verbose runtime statistics.
It defaults to off and must be enabled in debugfs, if desired.
The first measurement may be incorrect, because statistics are not cleared
after they got enabled through debugfs.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-09-12 00:31:32.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-09-12 00:31:44.000000000 +0200
@@ -817,6 +817,10 @@ struct b43_wldev {
 	/* Debugging stuff follows. */
 #ifdef CONFIG_B43_DEBUG
 	struct b43_dfsentry *dfsentry;
+	unsigned int irq_count;
+	unsigned int irq_bit_count[32];
+	unsigned int tx_count;
+	unsigned int rx_count;
 #endif
 };
 
Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2009-09-12 00:31:31.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2009-09-12 00:31:44.000000000 +0200
@@ -689,6 +689,7 @@ static void b43_add_dynamic_debug(struct
 	add_dyn_dbg("debug_lo", B43_DBG_LO, 0);
 	add_dyn_dbg("debug_firmware", B43_DBG_FIRMWARE, 0);
 	add_dyn_dbg("debug_keys", B43_DBG_KEYS, 0);
+	add_dyn_dbg("debug_verbose_stats", B43_DBG_VERBOSESTATS, 0);
 
 #undef add_dyn_dbg
 }
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2009-09-12 00:31:31.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2009-09-12 00:31:44.000000000 +0200
@@ -13,6 +13,7 @@ enum b43_dyndbg {		/* Dynamic debugging 
 	B43_DBG_LO,
 	B43_DBG_FIRMWARE,
 	B43_DBG_KEYS,
+	B43_DBG_VERBOSESTATS,
 	__B43_NR_DYNDBG,
 };
 
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-12 00:31:32.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-12 00:31:44.000000000 +0200
@@ -1830,6 +1830,16 @@ static void b43_do_interrupt_thread(stru
 
 	/* Re-enable interrupts on the device by restoring the current interrupt mask. */
 	b43_write32(dev, B43_MMIO_GEN_IRQ_MASK, dev->irq_mask);
+
+#if B43_DEBUG
+	if (b43_debug(dev, B43_DBG_VERBOSESTATS)) {
+		dev->irq_count++;
+		for (i = 0; i < ARRAY_SIZE(dev->irq_bit_count); i++) {
+			if (reason & (1 << i))
+				dev->irq_bit_count[i]++;
+		}
+	}
+#endif
 }
 
 /* Interrupt thread handler. Handles device interrupts in thread context. */
@@ -2893,6 +2903,27 @@ static void b43_periodic_every15sec(stru
 
 	atomic_set(&phy->txerr_cnt, B43_PHY_TX_BADNESS_LIMIT);
 	wmb();
+
+#if B43_DEBUG
+	if (b43_debug(dev, B43_DBG_VERBOSESTATS)) {
+		unsigned int i;
+
+		b43dbg(dev->wl, "Stats: %7u IRQs/sec, %7u TX/sec, %7u RX/sec\n",
+		       dev->irq_count / 15,
+		       dev->tx_count / 15,
+		       dev->rx_count / 15);
+		dev->irq_count = 0;
+		dev->tx_count = 0;
+		dev->rx_count = 0;
+		for (i = 0; i < ARRAY_SIZE(dev->irq_bit_count); i++) {
+			if (dev->irq_bit_count[i]) {
+				b43dbg(dev->wl, "Stats: %7u IRQ-%02u/sec (0x%08X)\n",
+				       dev->irq_bit_count[i] / 15, i, (1 << i));
+				dev->irq_bit_count[i] = 0;
+			}
+		}
+	}
+#endif
 }
 
 static void do_periodic_work(struct b43_wldev *dev)
@@ -3092,6 +3123,9 @@ static void b43_tx_work(struct work_stru
 			dev_kfree_skb(skb); /* Drop it */
 	}
 
+#if B43_DEBUG
+	dev->tx_count++;
+#endif
 	mutex_unlock(&wl->mutex);
 }
 
Index: wireless-testing/drivers/net/wireless/b43/xmit.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/xmit.c	2009-09-12 00:31:31.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/xmit.c	2009-09-12 00:31:44.000000000 +0200
@@ -692,6 +692,9 @@ void b43_rx(struct b43_wldev *dev, struc
 	memcpy(IEEE80211_SKB_RXCB(skb), &status, sizeof(status));
 	ieee80211_rx(dev->wl->hw, skb);
 
+#if B43_DEBUG
+	dev->rx_count++;
+#endif
 	return;
 drop:
 	b43dbg(dev->wl, "RX: Packet dropped\n");

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Sep 12 00:52:48 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 12 Sep 2009 00:52:48 +0200
Subject: [PATCH] b43: Disable PMQ mechanism
Message-ID: <200909120052.48395.mb@bu3sch.de>

This reduces IRQ pressure by about one third on a saturated link
by disabling the PMQ mechanism. We currently don't use that mechanism.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

If we implement PMQ in the future, we need to re-enable it, but only
for AP mode. See the comment in the sourcecode.


Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-12 00:31:44.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-12 00:41:27.000000000 +0200
@@ -2675,6 +2675,20 @@ static void b43_adjust_opmode(struct b43
 			cfp_pretbtt = 50;
 	}
 	b43_write16(dev, 0x612, cfp_pretbtt);
+
+	/* FIXME: We don't currently implement the PMQ mechanism,
+	 *        so always disable it. If we want to implement PMQ,
+	 *        we need to enable it here (clear DISCPMQ) in AP mode.
+	 */
+	if (0  /* ctl & B43_MACCTL_AP */) {
+		b43_write32(dev, B43_MMIO_MACCTL,
+			    b43_read32(dev, B43_MMIO_MACCTL)
+			    & ~B43_MACCTL_DISCPMQ);
+	} else {
+		b43_write32(dev, B43_MMIO_MACCTL,
+			    b43_read32(dev, B43_MMIO_MACCTL)
+			    | B43_MACCTL_DISCPMQ);
+	}
 }
 
 static void b43_rate_memory_write(struct b43_wldev *dev, u16 rate, int is_ofdm)

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Sat Sep 12 00:55:40 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sat, 12 Sep 2009 00:55:40 +0200
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <1252702497.20674.16.camel@note>
References: <1252702497.20674.16.camel@note>
Message-ID: <69e28c910909111555v460a742etcd1004d37553deec@mail.gmail.com>

On Fri, Sep 11, 2009 at 10:54 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> Hi List,
>
> I installed the latest version of OpenWRT on a ASUS WL-520GU.
> I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
> compatible with compat wireless.
>
> Than I patched OpenWRT to build compat-wireless-09-02
>
> As said, It yields an instant crash:
>
> cfg80211: World regulatory domain updated:
> ? ? ? ?(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> ? ? ? ?(2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> ? ? ? ?(2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> ? ? ? ?(2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> ? ? ? ?(5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> ? ? ? ?(5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> b43-phy0: Broadcom 5354 WLAN found (core revision 13)
> Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
> port
>
> FWIW, I add the patches for the kernel.

These patches are probably not enough - there were more changes to the
ssb module since 2.6.28. You will probably need to compile a new
kernel from wireless-testing or net-next-2.6 (linux-next & linux-2.6
may also work). (God luck doing that in the OpenWRT build system...)

>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Sat Sep 12 00:56:09 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sat, 12 Sep 2009 00:56:09 +0200
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <69e28c910909111555v460a742etcd1004d37553deec@mail.gmail.com>
References: <1252702497.20674.16.camel@note>
	<69e28c910909111555v460a742etcd1004d37553deec@mail.gmail.com>
Message-ID: <69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>

2009/9/12 G?bor Stefanik <netrolller.3d at gmail.com>:
> On Fri, Sep 11, 2009 at 10:54 PM, Thomas Ilnseher <illth at gmx.de> wrote:
>> Hi List,
>>
>> I installed the latest version of OpenWRT on a ASUS WL-520GU.
>> I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
>> compatible with compat wireless.
>>
>> Than I patched OpenWRT to build compat-wireless-09-02
>>
>> As said, It yields an instant crash:
>>
>> cfg80211: World regulatory domain updated:
>> ? ? ? ?(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
>> ? ? ? ?(2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
>> ? ? ? ?(2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
>> ? ? ? ?(2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
>> ? ? ? ?(5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
>> ? ? ? ?(5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
>> b43-phy0: Broadcom 5354 WLAN found (core revision 13)
>> Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
>> port
>>
>> FWIW, I add the patches for the kernel.
>
> These patches are probably not enough - there were more changes to the
> ssb module since 2.6.28. You will probably need to compile a new
> kernel from wireless-testing or net-next-2.6 (linux-next & linux-2.6
> may also work). (God luck doing that in the OpenWRT build system...)

Oops... that was Good's hand. :)

>
>>
>>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>
>>
>
>
>
> --
> Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From illth at gmx.de  Sat Sep 12 02:32:55 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Sat, 12 Sep 2009 02:32:55 +0200
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>
References: <1252702497.20674.16.camel@note>
	<69e28c910909111555v460a742etcd1004d37553deec@mail.gmail.com>
	<69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>
Message-ID: <1252715575.4046.9.camel@luzifer.localnet>

On Sa, 2009-09-12 at 00:56 +0200, G?bor Stefanik wrote:
> 2009/9/12 G?bor Stefanik <netrolller.3d at gmail.com>:
> > On Fri, Sep 11, 2009 at 10:54 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> >> Hi List,
> >>
> >> I installed the latest version of OpenWRT on a ASUS WL-520GU.
> >> I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
> >> compatible with compat wireless.
> >>
> >> Than I patched OpenWRT to build compat-wireless-09-02
> >>
> >> As said, It yields an instant crash:
> >>
> >> cfg80211: World regulatory domain updated:
> >>        (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> >>        (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> >>        (2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> >>        (2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> >>        (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> >>        (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> >> b43-phy0: Broadcom 5354 WLAN found (core revision 13)
> >> Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
> >> port
> >>
> >> FWIW, I add the patches for the kernel.
> >
> > These patches are probably not enough - there were more changes to the
> > ssb module since 2.6.28. You will probably need to compile a new
> > kernel from wireless-testing or net-next-2.6 (linux-next & linux-2.6
> > may also work). (God luck doing that in the OpenWRT build system...)
I will try to copy all ssb files from compat-wireless to the 2.6.28.10
kernel, and create a patch. 

I assume the kernel will crash on boot then, cause I'd need some changes
in /arch/mips/....

I can probably hack the build system to support a newer kernel, but the
problem remains that there are a gazillion patches that need porting :/

So I think the next thing to do is a diff of that ssb stuff, and see
what's changed.

The main Issue is that I can't get any usefull information what's going
on- I see only the single line above. 

As far as I understand the code (that I've read so far) It should printk
some driver message BEFORE this message.

I've seen some verbosity parameter, I will play with that.


> 
> Oops... that was Good's hand. :)
> 
> >
> >>
> >>
> >> _______________________________________________
> >> Bcm43xx-dev mailing list
> >> Bcm43xx-dev at lists.berlios.de
> >> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >>
> >>
> >
> >
> >
> > --
> > Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)
> >
> 
> 
> 



From mb at bu3sch.de  Sat Sep 12 12:38:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 12 Sep 2009 12:38:19 +0200
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <1252715575.4046.9.camel@luzifer.localnet>
References: <1252702497.20674.16.camel@note>
	<69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>
	<1252715575.4046.9.camel@luzifer.localnet>
Message-ID: <200909121238.21095.mb@bu3sch.de>

On Saturday 12 September 2009 02:32:55 Thomas Ilnseher wrote:
> On Sa, 2009-09-12 at 00:56 +0200, G?bor Stefanik wrote:
> > 2009/9/12 G?bor Stefanik <netrolller.3d at gmail.com>:
> > > On Fri, Sep 11, 2009 at 10:54 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> > >> Hi List,
> > >>
> > >> I installed the latest version of OpenWRT on a ASUS WL-520GU.
> > >> I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
> > >> compatible with compat wireless.
> > >>
> > >> Than I patched OpenWRT to build compat-wireless-09-02
> > >>
> > >> As said, It yields an instant crash:
> > >>
> > >> cfg80211: World regulatory domain updated:
> > >>        (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> > >>        (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > >>        (2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> > >>        (2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> > >>        (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > >>        (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > >> b43-phy0: Broadcom 5354 WLAN found (core revision 13)
> > >> Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
> > >> port
> > >>
> > >> FWIW, I add the patches for the kernel.
> > >
> > > These patches are probably not enough - there were more changes to the
> > > ssb module since 2.6.28. You will probably need to compile a new
> > > kernel from wireless-testing or net-next-2.6 (linux-next & linux-2.6
> > > may also work). (God luck doing that in the OpenWRT build system...)
> I will try to copy all ssb files from compat-wireless to the 2.6.28.10
> kernel, and create a patch. 
> 
> I assume the kernel will crash on boot then, cause I'd need some changes
> in /arch/mips/....
> 
> I can probably hack the build system to support a newer kernel, but the
> problem remains that there are a gazillion patches that need porting :/

The buildsystem already supports 2.6.30.5. Just change version in the target makefile.

I'd suggest you just wait for us to port the stuff. ;)

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Sep 13 06:18:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 12 Sep 2009 23:18:23 -0500
Subject: bcm4306 rev2 kernel segfault and reboot
In-Reply-To: <4AAA6306.1000607@schmitt-united.de>
References: <4AA948E3.2060109@schmitt-united.de>	<69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>
	<4AAA6306.1000607@schmitt-united.de>
Message-ID: <4AAC728F.3080303@lwfinger.net>

Daniel Schmitt wrote:
> G?bor Stefanik wrote:
>> Please enable CONFIG_KALLSYMS. This trace is useless without symbol information.
> Sorry, I forgot.
> 
> I figured out that there is a problem with reading SPROM of my bcm4306.
> I initialized a fallback SPROM at beginning of modinit of ssb.ko. I used this 
> struct:
> 
> static struct ssb_sprom bcm63xx2_sprom = {
> 	.revision		= 0x01,
> 	.board_rev		= 0x00,
> 	.country_code		= 0xff,
> 	.ant_available_bg 	= 0xff,
> 	.pa0b0			= 0xffff,
> 	.pa0b1			= 0xffff,
> 	.pa0b2			= 0xffff,
> 	.pa1b0			= 0xffff,
> 	.pa1b1			= 0xffff,
> 	.pa1b2			= 0xffff,
> 	.gpio0			= 0xff,
> 	.gpio1			= 0xff,
> 	.gpio2			= 0xff,
> 	.gpio3			= 0xff,
> 	.maxpwr_bg		= 0x004c,
> 	.itssi_bg		= 0x00,
> 	.boardflags_lo		= 0x2848,
> 	.boardflags_hi		= 0x0000,
> };
> 
> Before registering the fallback SPROM I initialized an MAC-Address:
> 
> 	bcm63xx2_sprom.il0mac[0] = 0x00;
> 	bcm63xx2_sprom.il0mac[1] = 0x80;
> 	bcm63xx2_sprom.il0mac[2] = 0x23;
> 	bcm63xx2_sprom.il0mac[3] = 0xFE;
> 	bcm63xx2_sprom.il0mac[4] = 0xCD;
> 	bcm63xx2_sprom.il0mac[5] = 0x13;
> 
> 
> It works that I have a fallback SPROM. here the dmesg:
> DANIEL: fallback SRPM registeredPCI: enabling device 0000:00:02.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
> PCI: enabling device 0000:00:04.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
> 
> But if I do a "cat /sys/devices/pci0000:00/0000:00:02.0/ssb_sprom" I get
> 
> Bad mode in data abort handler detected
> Internal error: Oops - bad mode: 0 [#1]
> Modules linked in: ssb
> CPU: 0    Not tainted  (2.6.28.10 #9)
> PC is at 0xffff01fc
> LR is at ssb_attr_sprom_show+0x7c/0x124 [ssb]
> pc : [<ffff01fc>]    lr : [<bf002704>]    psr: a0000092
> sp : c3aa3e5c  ip : 00000001  fp : c3aa3ecc
> r10: c026e1e4  r9 : 00000000  r8 : 0000ffff
> r7 : c3a30ebe  r6 : c3a24c00  r5 : 00000060  r4 : 00000002
> r3 : c48c90be  r2 : c3aa3ea4  r1 : 00000003  r0 : 90be0000
> Flags: NzCv  IRQs off  FIQs on  Mode IRQ_32  ISA ARM  Segment user
> Control: 000039ff  Table: 03a40000  DAC: 00000015
> Process cat (pid: 1461, stack limit = 0xc3aa2260)
> Stack: (0xc3aa3e5c to 0xc3aa4000)
> 3e40:                                                                90be0000
> 3e60: 00000003 c3aa3ea4 c48c90be 00000002 00000060 c3a24c00 c3a30ebe 0000ffff
> 3e80: 00000000 c026e1e4 c3aa3ecc 00000001 c3aa3e5c bf002704 ffff01fc a0000092
> 3ea0: ffffffff c3aa3eb0 c3a24c00 000000dc bf002850 c3a30e00 c3a24c1c c3acb000
> 3ec0: c3aa3ef8 c3aa3ed0 bf002704 bf00285c c3acb000 fffffffb c39f1ab4 00000fff
> 3ee0: c0267420 c396c8f4 c3aa3f80 c3aa3f0c c3aa3efc bf002cc4 bf002694 bf008730
> 3f00: c3aa3f24 c3aa3f10 c012e43c bf002ca0 c396c8e0 c38114c0 c3aa3f5c c3aa3f28
> 3f20: c00c7548 c012e420 00000003 00001000 beb23d90 c3869340 00001000 beb23d90
> 3f40: c3aa3f80 c0021f84 c3aa2000 00000001 c3aa3f7c c3aa3f60 c008ac1c c00c74b0
> 3f60: c3869340 00000000 00000000 00000003 c3aa3fa4 c3aa3f80 c008af0c c008ab78
> 3f80: 00000000 00000000 00000000 00001000 4009c614 beb23d90 00000000 c3aa3fa8
> 3fa0: c0021de0 c008aecc 00001000 4009c614 00000003 beb23d90 00001000 00074b70
> 3fc0: 00001000 4009c614 beb23d90 00000003 00000000 00000001 00000001 00000003
> 3fe0: 40052660 beb23d74 0000db54 40052668 20000010 00000003 00000000 00000000
> Backtrace:
> [<bf002850>] (sprom_do_read+0x0/0xf0 [ssb]) from [<bf002704>] 
> (ssb_attr_sprom_show+0x7c/0x124 [ssb])
> [<bf002688>] (ssb_attr_sprom_show+0x0/0x124 [ssb]) from [<bf002cc4>] 
> (ssb_pci_attr_sprom_show+0x30/0x40 [ssb])
> [<bf002c94>] (ssb_pci_attr_sprom_show+0x0/0x40 [ssb]) from [<c012e43c>] 
> (dev_attr_show+0x28/0x54)
>   r4:bf008730
> [<c012e414>] (dev_attr_show+0x0/0x54) from [<c00c7548>] (sysfs_read_file+0xa4/0x138)
>   r5:c38114c0 r4:c396c8e0
> [<c00c74a4>] (sysfs_read_file+0x0/0x138) from [<c008ac1c>] (vfs_read+0xb0/0xfc)
> [<c008ab6c>] (vfs_read+0x0/0xfc) from [<c008af0c>] (sys_read+0x4c/0x84)
>   r7:00000003 r6:00000000 r5:00000000 r4:c3869340
> [<c008aec0>] (sys_read+0x0/0x84) from [<c0021de0>] (ret_fast_syscall+0x0/0x2c)
>   r6:beb23d90 r5:4009c614 r4:00001000
> Code: 00000000 00000000 00000000 00000000 (00000000)
> ---[ end trace dffef674132f720b ]---
> 
> So I decided to return the same data in sprom_do_read as in my fallback image.
> This works now:
> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# cat /sys/devices/pci0000:00/0000:0
> 0:02.0/ssb_sprom
> 00012380CDFE00130000000000000000000000000000000000FF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00004C0000004828000000000000000000000000000000000000000000
> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#
> 
> But when I now try to load b43legacy it crashed again :(
> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# insmod b43legacy.ko
> b43legacy-phy0: Broadcom 4306 WLAN found
> b43legacy: probe of ssb0:0 failed with error -2
> b43legacy-phy1: Broadcom 4306 WLAN found
> b43legacy: probe of ssb1:0 failed with error -2
> Unable to handle kernel NULL pointer dereference at virtual address 00000000
> pgd = c3860000
> [00000000] *pgd=0313a031, *pte=00000000, *ppte=00000000
> Internal error: Oops: 817 [#1]
> Modules linked in: b43legacy(+) mac80211 cfg80211 ssb
> CPU: 0    Not tainted  (2.6.28.10 #9)
> PC is at sysfs_create_file+0x34/0x40
> LR is at driver_create_file+0x20/0x2c
> pc : [<c00c78ac>]    lr : [<c0131758>]    psr: 60000013
> sp : c30efd60  ip : c30efd70  fp : c30efd6c
> r10: bf008644  r9 : bf08c000  r8 : c398f5a0
> r7 : 00000000  r6 : 00075030  r5 : bf088bb8  r4 : 00000000
> r3 : 00000000  r2 : 00000020  r1 : c02674b0  r0 : 00000000
> Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
> Control: 000039ff  Table: 03860000  DAC: 00000015
> Process insmod (pid: 1508, stack limit = 0xc30ee260)
> Stack: (0xc30efd60 to 0xc30f0000)
> fd60: c30efd7c c30efd70 c0131758 c00c7884 c30efda8 c30efd80 c0130d88 c0131744
> fd80: bf0838a8 00000000 bf088bb8 00075030 00000000 c30ee000 be842e98 c30efdcc
> fda0: c30efdac c01315a0 c0130cb8 00000000 bf088f00 00075030 00000000 c30ee000
> fdc0: c30efddc c30efdd0 bf0010c0 c0131558 c30efdfc c30efde0 bf08c01c bf0010a4
> fde0: 00000001 00000000 00000000 bf088f00 c30eff80 c30efe00 c00212b0 bf08c00c
> fe00: c026d2d8 00000000 c30efe14 c0069438 c0067fe8 00000000 c026d2fc 00000003
> fe20: c026d2d8 00000001 00000000 00000003 c02f7b20 c026d2f0 c026d2d8 40000013
> fe40: 00000000 00000018 c313ee20 c30efe7c c30efe5c c0069804 c0069388 00000000
> fe60: 00000020 c4936000 00000001 c4936000 c30efe8c c30efe80 c00698a0 c006969c
> fe80: c30efea0 c30efe90 c393e780 00000021 c4936000 c30efec0 c30efea4 c007d634
> fea0: c008652c c396cb60 bf088f00 00000001 00000001 c30efed0 c30efec4 c007d704
> fec0: c007d5a8 c30eff80 c30efed4 c005e888 c007d6e0 00000000 c30eff50 c30eff48
> fee0: bf067818 bf088f0c c494e41c c494e304 c494e3f4 bf084718 c494e084 c494dfb6
> ff00: c393e760 c4954fdc 00000016 0000000b 00000000 00000245 00000245 bf084754
> ff20: bf086b94 bf0429dc 00000018 c494e444 00000000 00000000 00000000 00000000
> ff40: 00000000 00000000 00020fd1 bf088f00 00075030 00000000 00020fd1 bf088f00
> ff60: 00075030 00000000 c0021f84 c30ee000 be842e98 c30effa4 c30eff84 c005e974
> ff80: c0021284 c0088398 00020fd1 00075030 00000002 00000080 00000000 c30effa8
> ffa0: c0021de0 c005e8f0 00020fd1 00075030 00075030 00020fd1 00075020 00075030
> ffc0: 00020fd1 00075030 00000002 be842f5d be842bec 00000002 be842e98 0000c8c0
> ffe0: 40051a94 be841bcc 0001181c 40051aa0 20000010 00075030 00305021 00305421
> Backtrace:
> [<c00c7878>] (sysfs_create_file+0x0/0x40) from [<c0131758>] 
> (driver_create_file+0x20/0x2c)
> [<c0131738>] (driver_create_file+0x0/0x2c) from [<c0130d88>] 
> (bus_add_driver+0xdc/0x22c)
> [<c0130cac>] (bus_add_driver+0x0/0x22c) from [<c01315a0>] 
> (driver_register+0x54/0x130)
> [<c013154c>] (driver_register+0x0/0x130) from [<bf0010c0>] 
> (__ssb_driver_register+0x28/0x30 [ssb])
>   r8:c30ee000 r7:00000000 r6:00075030 r5:bf088f00 r4:00000000
> [<bf001098>] (__ssb_driver_register+0x0/0x30 [ssb]) from [<bf08c01c>] 
> (b43legacy_init+0x1c/0x74 [b43legacy])
> [<bf08c000>] (b43legacy_init+0x0/0x74 [b43legacy]) from [<c00212b0>] 
> (do_one_initcall+0x38/0x1b0)
>   r5:bf088f00 r4:00000000
> [<c0021278>] (do_one_initcall+0x0/0x1b0) from [<c005e974>] 
> (sys_init_module+0x90/0x18c)
> [<c005e8e4>] (sys_init_module+0x0/0x18c) from [<c0021de0>] 
> (ret_fast_syscall+0x0/0x2c)
>   r7:00000080 r6:00000002 r5:00075030 r4:00020fd1
> Code: e3a02002 ebffffee e89da800 e3a03000 (e5833000)
> ---[ end trace dffef674132f720b ]---
> Segmentation fault
> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#
> 
> this happens with b43legacy driver from compat-wireless_2009-08-20.
> 
> I will try to use 2009-08-15 I trink it worked for one time.

I think you may have a hardware problem. I just tested b43legacy with
my Cardbus device using the 2.6.31-wl kernel with no problems.

Larry


From daniel at schmitt-united.de  Sun Sep 13 15:35:25 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Sun, 13 Sep 2009 15:35:25 +0200
Subject: bcm4306 rev2 kernel segfault and reboot
In-Reply-To: <4AAC728F.3080303@lwfinger.net>
References: <4AA948E3.2060109@schmitt-united.de>	<69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>
	<4AAA6306.1000607@schmitt-united.de>
	<4AAC728F.3080303@lwfinger.net>
Message-ID: <4AACF51D.8040800@schmitt-united.de>

Larry Finger wrote:
> Daniel Schmitt wrote:
>> G?bor Stefanik wrote:
>>> Please enable CONFIG_KALLSYMS. This trace is useless without symbol information.
>> Sorry, I forgot.
>>
>> I figured out that there is a problem with reading SPROM of my bcm4306.
>> I initialized a fallback SPROM at beginning of modinit of ssb.ko. I used this 
>> struct:
>>
>> static struct ssb_sprom bcm63xx2_sprom = {
>> 	.revision		= 0x01,
>> 	.board_rev		= 0x00,
>> 	.country_code		= 0xff,
>> 	.ant_available_bg 	= 0xff,
>> 	.pa0b0			= 0xffff,
>> 	.pa0b1			= 0xffff,
>> 	.pa0b2			= 0xffff,
>> 	.pa1b0			= 0xffff,
>> 	.pa1b1			= 0xffff,
>> 	.pa1b2			= 0xffff,
>> 	.gpio0			= 0xff,
>> 	.gpio1			= 0xff,
>> 	.gpio2			= 0xff,
>> 	.gpio3			= 0xff,
>> 	.maxpwr_bg		= 0x004c,
>> 	.itssi_bg		= 0x00,
>> 	.boardflags_lo		= 0x2848,
>> 	.boardflags_hi		= 0x0000,
>> };
>>
>> Before registering the fallback SPROM I initialized an MAC-Address:
>>
>> 	bcm63xx2_sprom.il0mac[0] = 0x00;
>> 	bcm63xx2_sprom.il0mac[1] = 0x80;
>> 	bcm63xx2_sprom.il0mac[2] = 0x23;
>> 	bcm63xx2_sprom.il0mac[3] = 0xFE;
>> 	bcm63xx2_sprom.il0mac[4] = 0xCD;
>> 	bcm63xx2_sprom.il0mac[5] = 0x13;
>>
>>
>> It works that I have a fallback SPROM. here the dmesg:
>> DANIEL: fallback SRPM registeredPCI: enabling device 0000:00:02.0 (0140 -> 0142)
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
>> PCI: enabling device 0000:00:04.0 (0140 -> 0142)
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
>>
>> But if I do a "cat /sys/devices/pci0000:00/0000:00:02.0/ssb_sprom" I get
>>
>> Bad mode in data abort handler detected
>> Internal error: Oops - bad mode: 0 [#1]
>> Modules linked in: ssb
>> CPU: 0    Not tainted  (2.6.28.10 #9)
>> PC is at 0xffff01fc
>> LR is at ssb_attr_sprom_show+0x7c/0x124 [ssb]
>> pc : [<ffff01fc>]    lr : [<bf002704>]    psr: a0000092
>> sp : c3aa3e5c  ip : 00000001  fp : c3aa3ecc
>> r10: c026e1e4  r9 : 00000000  r8 : 0000ffff
>> r7 : c3a30ebe  r6 : c3a24c00  r5 : 00000060  r4 : 00000002
>> r3 : c48c90be  r2 : c3aa3ea4  r1 : 00000003  r0 : 90be0000
>> Flags: NzCv  IRQs off  FIQs on  Mode IRQ_32  ISA ARM  Segment user
>> Control: 000039ff  Table: 03a40000  DAC: 00000015
>> Process cat (pid: 1461, stack limit = 0xc3aa2260)
>> Stack: (0xc3aa3e5c to 0xc3aa4000)
>> 3e40:                                                                90be0000
>> 3e60: 00000003 c3aa3ea4 c48c90be 00000002 00000060 c3a24c00 c3a30ebe 0000ffff
>> 3e80: 00000000 c026e1e4 c3aa3ecc 00000001 c3aa3e5c bf002704 ffff01fc a0000092
>> 3ea0: ffffffff c3aa3eb0 c3a24c00 000000dc bf002850 c3a30e00 c3a24c1c c3acb000
>> 3ec0: c3aa3ef8 c3aa3ed0 bf002704 bf00285c c3acb000 fffffffb c39f1ab4 00000fff
>> 3ee0: c0267420 c396c8f4 c3aa3f80 c3aa3f0c c3aa3efc bf002cc4 bf002694 bf008730
>> 3f00: c3aa3f24 c3aa3f10 c012e43c bf002ca0 c396c8e0 c38114c0 c3aa3f5c c3aa3f28
>> 3f20: c00c7548 c012e420 00000003 00001000 beb23d90 c3869340 00001000 beb23d90
>> 3f40: c3aa3f80 c0021f84 c3aa2000 00000001 c3aa3f7c c3aa3f60 c008ac1c c00c74b0
>> 3f60: c3869340 00000000 00000000 00000003 c3aa3fa4 c3aa3f80 c008af0c c008ab78
>> 3f80: 00000000 00000000 00000000 00001000 4009c614 beb23d90 00000000 c3aa3fa8
>> 3fa0: c0021de0 c008aecc 00001000 4009c614 00000003 beb23d90 00001000 00074b70
>> 3fc0: 00001000 4009c614 beb23d90 00000003 00000000 00000001 00000001 00000003
>> 3fe0: 40052660 beb23d74 0000db54 40052668 20000010 00000003 00000000 00000000
>> Backtrace:
>> [<bf002850>] (sprom_do_read+0x0/0xf0 [ssb]) from [<bf002704>] 
>> (ssb_attr_sprom_show+0x7c/0x124 [ssb])
>> [<bf002688>] (ssb_attr_sprom_show+0x0/0x124 [ssb]) from [<bf002cc4>] 
>> (ssb_pci_attr_sprom_show+0x30/0x40 [ssb])
>> [<bf002c94>] (ssb_pci_attr_sprom_show+0x0/0x40 [ssb]) from [<c012e43c>] 
>> (dev_attr_show+0x28/0x54)
>>   r4:bf008730
>> [<c012e414>] (dev_attr_show+0x0/0x54) from [<c00c7548>] (sysfs_read_file+0xa4/0x138)
>>   r5:c38114c0 r4:c396c8e0
>> [<c00c74a4>] (sysfs_read_file+0x0/0x138) from [<c008ac1c>] (vfs_read+0xb0/0xfc)
>> [<c008ab6c>] (vfs_read+0x0/0xfc) from [<c008af0c>] (sys_read+0x4c/0x84)
>>   r7:00000003 r6:00000000 r5:00000000 r4:c3869340
>> [<c008aec0>] (sys_read+0x0/0x84) from [<c0021de0>] (ret_fast_syscall+0x0/0x2c)
>>   r6:beb23d90 r5:4009c614 r4:00001000
>> Code: 00000000 00000000 00000000 00000000 (00000000)
>> ---[ end trace dffef674132f720b ]---
>>
>> So I decided to return the same data in sprom_do_read as in my fallback image.
>> This works now:
>> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# cat /sys/devices/pci0000:00/0000:0
>> 0:02.0/ssb_sprom
>> 00012380CDFE00130000000000000000000000000000000000FF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00004C0000004828000000000000000000000000000000000000000000
>> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#
>>
>> But when I now try to load b43legacy it crashed again :(
>> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10# insmod b43legacy.ko
>> b43legacy-phy0: Broadcom 4306 WLAN found
>> b43legacy: probe of ssb0:0 failed with error -2
>> b43legacy-phy1: Broadcom 4306 WLAN found
>> b43legacy: probe of ssb1:0 failed with error -2
>> Unable to handle kernel NULL pointer dereference at virtual address 00000000
>> pgd = c3860000
>> [00000000] *pgd=0313a031, *pte=00000000, *ppte=00000000
>> Internal error: Oops: 817 [#1]
>> Modules linked in: b43legacy(+) mac80211 cfg80211 ssb
>> CPU: 0    Not tainted  (2.6.28.10 #9)
>> PC is at sysfs_create_file+0x34/0x40
>> LR is at driver_create_file+0x20/0x2c
>> pc : [<c00c78ac>]    lr : [<c0131758>]    psr: 60000013
>> sp : c30efd60  ip : c30efd70  fp : c30efd6c
>> r10: bf008644  r9 : bf08c000  r8 : c398f5a0
>> r7 : 00000000  r6 : 00075030  r5 : bf088bb8  r4 : 00000000
>> r3 : 00000000  r2 : 00000020  r1 : c02674b0  r0 : 00000000
>> Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
>> Control: 000039ff  Table: 03860000  DAC: 00000015
>> Process insmod (pid: 1508, stack limit = 0xc30ee260)
>> Stack: (0xc30efd60 to 0xc30f0000)
>> fd60: c30efd7c c30efd70 c0131758 c00c7884 c30efda8 c30efd80 c0130d88 c0131744
>> fd80: bf0838a8 00000000 bf088bb8 00075030 00000000 c30ee000 be842e98 c30efdcc
>> fda0: c30efdac c01315a0 c0130cb8 00000000 bf088f00 00075030 00000000 c30ee000
>> fdc0: c30efddc c30efdd0 bf0010c0 c0131558 c30efdfc c30efde0 bf08c01c bf0010a4
>> fde0: 00000001 00000000 00000000 bf088f00 c30eff80 c30efe00 c00212b0 bf08c00c
>> fe00: c026d2d8 00000000 c30efe14 c0069438 c0067fe8 00000000 c026d2fc 00000003
>> fe20: c026d2d8 00000001 00000000 00000003 c02f7b20 c026d2f0 c026d2d8 40000013
>> fe40: 00000000 00000018 c313ee20 c30efe7c c30efe5c c0069804 c0069388 00000000
>> fe60: 00000020 c4936000 00000001 c4936000 c30efe8c c30efe80 c00698a0 c006969c
>> fe80: c30efea0 c30efe90 c393e780 00000021 c4936000 c30efec0 c30efea4 c007d634
>> fea0: c008652c c396cb60 bf088f00 00000001 00000001 c30efed0 c30efec4 c007d704
>> fec0: c007d5a8 c30eff80 c30efed4 c005e888 c007d6e0 00000000 c30eff50 c30eff48
>> fee0: bf067818 bf088f0c c494e41c c494e304 c494e3f4 bf084718 c494e084 c494dfb6
>> ff00: c393e760 c4954fdc 00000016 0000000b 00000000 00000245 00000245 bf084754
>> ff20: bf086b94 bf0429dc 00000018 c494e444 00000000 00000000 00000000 00000000
>> ff40: 00000000 00000000 00020fd1 bf088f00 00075030 00000000 00020fd1 bf088f00
>> ff60: 00075030 00000000 c0021f84 c30ee000 be842e98 c30effa4 c30eff84 c005e974
>> ff80: c0021284 c0088398 00020fd1 00075030 00000002 00000080 00000000 c30effa8
>> ffa0: c0021de0 c005e8f0 00020fd1 00075030 00075030 00020fd1 00075020 00075030
>> ffc0: 00020fd1 00075030 00000002 be842f5d be842bec 00000002 be842e98 0000c8c0
>> ffe0: 40051a94 be841bcc 0001181c 40051aa0 20000010 00075030 00305021 00305421
>> Backtrace:
>> [<c00c7878>] (sysfs_create_file+0x0/0x40) from [<c0131758>] 
>> (driver_create_file+0x20/0x2c)
>> [<c0131738>] (driver_create_file+0x0/0x2c) from [<c0130d88>] 
>> (bus_add_driver+0xdc/0x22c)
>> [<c0130cac>] (bus_add_driver+0x0/0x22c) from [<c01315a0>] 
>> (driver_register+0x54/0x130)
>> [<c013154c>] (driver_register+0x0/0x130) from [<bf0010c0>] 
>> (__ssb_driver_register+0x28/0x30 [ssb])
>>   r8:c30ee000 r7:00000000 r6:00075030 r5:bf088f00 r4:00000000
>> [<bf001098>] (__ssb_driver_register+0x0/0x30 [ssb]) from [<bf08c01c>] 
>> (b43legacy_init+0x1c/0x74 [b43legacy])
>> [<bf08c000>] (b43legacy_init+0x0/0x74 [b43legacy]) from [<c00212b0>] 
>> (do_one_initcall+0x38/0x1b0)
>>   r5:bf088f00 r4:00000000
>> [<c0021278>] (do_one_initcall+0x0/0x1b0) from [<c005e974>] 
>> (sys_init_module+0x90/0x18c)
>> [<c005e8e4>] (sys_init_module+0x0/0x18c) from [<c0021de0>] 
>> (ret_fast_syscall+0x0/0x2c)
>>   r7:00000080 r6:00000002 r5:00075030 r4:00020fd1
>> Code: e3a02002 ebffffee e89da800 e3a03000 (e5833000)
>> ---[ end trace dffef674132f720b ]---
>> Segmentation fault
>> root at OpenWrt:/tmp/root/lib/modules/2.6.28.10#
>>
>> this happens with b43legacy driver from compat-wireless_2009-08-20.
>>
>> I will try to use 2009-08-15 I trink it worked for one time.
> 
> I think you may have a hardware problem. I just tested b43legacy with
> my Cardbus device using the 2.6.31-wl kernel with no problems.


Well, I already tried 4 different WLAN miniPci cards on two different WP188 
boards. Same behaviour.
I think the WLAN cards are something special. They don't have SPROM on ssb. Who 
knows what there is missing, too?
Sometimes I manage it to get them working as AP for half an hour. I can 
associate, transfer data and so on.
The WLAN cards are from mn700 Microsoft Router. The broadcom chip is labeled:
BCM4306KFB
HS0350 P20
710355 M
The card is labeled
(C)2003 BROADCOM CORP
BCM94306MPMN REV 2.1

Daniel


From Larry.Finger at lwfinger.net  Sun Sep 13 17:28:07 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 13 Sep 2009 10:28:07 -0500
Subject: bcm4306 rev2 kernel segfault and reboot
In-Reply-To: <4AACF51D.8040800@schmitt-united.de>
References: <4AA948E3.2060109@schmitt-united.de>	<69e28c910909101421p16d4a358vde48df828145ca43@mail.gmail.com>	<4AAA6306.1000607@schmitt-united.de>	<4AAC728F.3080303@lwfinger.net>
	<4AACF51D.8040800@schmitt-united.de>
Message-ID: <4AAD0F87.6020804@lwfinger.net>

Daniel Schmitt wrote:
> Well, I already tried 4 different WLAN miniPci cards on two different WP188 
> boards. Same behaviour.
> I think the WLAN cards are something special. They don't have SPROM on ssb. Who 
> knows what there is missing, too?
> Sometimes I manage it to get them working as AP for half an hour. I can 
> associate, transfer data and so on.
> The WLAN cards are from mn700 Microsoft Router. The broadcom chip is labeled:
> BCM4306KFB
> HS0350 P20
> 710355 M
> The card is labeled
> (C)2003 BROADCOM CORP
> BCM94306MPMN REV 2.1

First of all, is this a regression? I didn't think it was, but when I
reread an earlier post of yours, it appears that you can make it work
by using ssb from 2.6.28 and b43legacy from compat-wireless. If I read
that correctly, then there is a regression in ssb. Please confirm that.

If it is a regression, the recent changes in the PCI code for ssb are
as follows:

2009-08-10: Read/write macro changes and some SPROM 8 stuff for LP PHY
2009-02-27: Implement fallback SPROM
2008-12-25: Add SPROM Rev 8 extraction
2008-08-20: Add SPROM 4-5 extraction

None of these seem to be a likely source of a regression; however,
anything resembling a bisection would be helpful.

Larry


From daniel at schmitt-united.de  Sun Sep 13 19:05:45 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Sun, 13 Sep 2009 19:05:45 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
Message-ID: <4AAD2669.8070501@schmitt-united.de>

Hello Group,

I posted a few days ago my problems with this WLAN minipci card:

Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
00:02.0 0280: 14e4:4325 (rev 02)
          Subsystem: 1414:0004
          Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
Stepping- SERR+ FastB2B- DisINTx-
          Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
<MAbort- >SERR- <PERR- INTx-
          Interrupt: pin A routed to IRQ 27
          Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
[size=8K]

If I use them (2 pieces) in a WP188 from compex, I don't get ssb.ko running. 
Here is the dmesg if I try to load ssb.ko and b43legacy.ko
PCI: enabling device 0000:00:02.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: SPROM revision 251 detected.
ssb: Unsupported SPROM revision 251 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
PCI: enabling device 0000:00:04.0 (0140 -> 0142)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: SPROM revision 251 detected.
ssb: Unsupported SPROM revision 251 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: US
          (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
          (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
          (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
          (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
          (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
          (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
          (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
cfg80211: Calling CRDA for country: US
b43legacy-phy0: Broadcom 4306 WLAN found
phy0: Failed to initialize wep: -2
b43legacy: probe of ssb0:0 failed with error -2
b43legacy-phy1: Broadcom 4306 WLAN found
phy1: Failed to initialize wep: -2
b43legacy: probe of ssb1:0 failed with error -2
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]

One time I managed it to run for half an hour.
I think it is a PCI problem of IPX4XX?

Because running the same cards in my ALIX works without problems!
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: US
         (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
         (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
         (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
         (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
cfg80211: Calling CRDA for country: US
b43-pci-bridge 0000:00:0c.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:00:0c.0
b43-pci-bridge 0000:00:0e.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:00:0e.0
b43legacy-phy0: Broadcom 4306 WLAN found
phy0: Selected rate control algorithm 'minstrel'
b43legacy-phy1: Broadcom 4306 WLAN found
phy1: Selected rate control algorithm 'minstrel'
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
ip_tables: (C) 2000-2006 Netfilter Core Team
nf_conntrack version 0.5.0 (4096 buckets, 16384 max)
Registered led device: alix:1
Registered led device: alix:2
Registered led device: alix:3
via-rhine.c:v1.10-LK1.4.3 2007-03-06 Written by Donald Becker
via-rhine 0000:00:09.0: setting latency timer to 64
eth0: VIA Rhine III (Management Adapter) at 0xe0000000, 00:0d:b9:12:83:b8, IRQ 10.
eth0: MII PHY found at address 1, status 0x7849 advertising 05e1 Link 0000.
eth0: link down
device eth0 entered promiscuous mode
b43legacy ssb0:0: firmware: requesting b43legacy/ucode4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/pcm4.fw
b43legacy ssb0:0: firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy0: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
Registered led device: b43legacy-phy0::tx
Registered led device: b43legacy-phy0::rx
Registered led device: b43legacy-phy0::radio
b43legacy ssb1:0: firmware: requesting b43legacy/ucode4.fw
b43legacy ssb1:0: firmware: requesting b43legacy/pcm4.fw
b43legacy ssb1:0: firmware: requesting b43legacy/b0g0initvals2.fw
b43legacy-phy1: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
Registered led device: b43legacy-phy1::tx
Registered led device: b43legacy-phy1::rx
Registered led device: b43legacy-phy1::radio

Even the SPROM is readable on the SSB:
root at OpenWrt:/# cat /sys/devices/pci0000:00/0000:00:0c.0/ssb_sprom
014000000400141425430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D00713A0DF9
FFFFFFFFFFFFFFFFFFFFFFFFFFFF2130B01198FB4FFE88030B0B3C000000000000003E000F00FF
FF0000000000000000014D
root at OpenWrt:/#

Does anybody know what I can change in OpenWRT relating to PCI options for WP188?

Thanks for any help,
Daniel


From netrolller.3d at gmail.com  Sun Sep 13 20:04:26 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sun, 13 Sep 2009 20:04:26 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAD2669.8070501@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
Message-ID: <69e28c910909131104o7406920ds50674e663326c49e@mail.gmail.com>

On Sun, Sep 13, 2009 at 7:05 PM, Daniel Schmitt
<daniel at schmitt-united.de> wrote:
> Hello Group,
>
> I posted a few days ago my problems with this WLAN minipci card:
>
> Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
> 00:02.0 0280: 14e4:4325 (rev 02)
> ? ? ? ? ?Subsystem: 1414:0004
> ? ? ? ? ?Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
> Stepping- SERR+ FastB2B- DisINTx-
> ? ? ? ? ?Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
> <MAbort- >SERR- <PERR- INTx-
> ? ? ? ? ?Interrupt: pin A routed to IRQ 27
> ? ? ? ? ?Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
> [size=8K]
>
> If I use them (2 pieces) in a WP188 from compex, I don't get ssb.ko running.
> Here is the dmesg if I try to load ssb.ko and b43legacy.ko
> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 251 detected.
> ssb: Unsupported SPROM revision 251 detected. Will extract v1
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
> PCI: enabling device 0000:00:04.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 251 detected.
> ssb: Unsupported SPROM revision 251 detected. Will extract v1

What endianness is the IXP4xx?

> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
> cfg80211: Using static regulatory domain info
> cfg80211: Regulatory domain: US
> ? ? ? ? ?(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> ? ? ? ? ?(2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
> ? ? ? ? ?(5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? ?(5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? ?(5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? ?(5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? ?(5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
> cfg80211: Calling CRDA for country: US
> b43legacy-phy0: Broadcom 4306 WLAN found
> phy0: Failed to initialize wep: -2
> b43legacy: probe of ssb0:0 failed with error -2

-2 is "No such file or directory" - maybe some crypto options are
disabled? Does the ARC4 module get built?

> b43legacy-phy1: Broadcom 4306 WLAN found
> phy1: Failed to initialize wep: -2
> b43legacy: probe of ssb1:0 failed with error -2
> Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
>
> One time I managed it to run for half an hour.
> I think it is a PCI problem of IPX4XX?
>
> Because running the same cards in my ALIX works without problems!
> cfg80211: Using static regulatory domain info
> cfg80211: Regulatory domain: US
> ? ? ? ? (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> ? ? ? ? (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2700 mBm)
> ? ? ? ? (5170000 KHz - 5190000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5190000 KHz - 5210000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5210000 KHz - 5230000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5230000 KHz - 5330000 KHz @ 40000 KHz), (600 mBi, 2300 mBm)
> ? ? ? ? (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 3000 mBm)
> cfg80211: Calling CRDA for country: US
> b43-pci-bridge 0000:00:0c.0: setting latency timer to 64
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:0c.0
> b43-pci-bridge 0000:00:0e.0: setting latency timer to 64
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:0e.0

Please enable SSB & B43 debugging on this platform, too.

> b43legacy-phy0: Broadcom 4306 WLAN found
> phy0: Selected rate control algorithm 'minstrel'
> b43legacy-phy1: Broadcom 4306 WLAN found
> phy1: Selected rate control algorithm 'minstrel'
> Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]
> ip_tables: (C) 2000-2006 Netfilter Core Team
> nf_conntrack version 0.5.0 (4096 buckets, 16384 max)
> Registered led device: alix:1
> Registered led device: alix:2
> Registered led device: alix:3
> via-rhine.c:v1.10-LK1.4.3 2007-03-06 Written by Donald Becker
> via-rhine 0000:00:09.0: setting latency timer to 64
> eth0: VIA Rhine III (Management Adapter) at 0xe0000000, 00:0d:b9:12:83:b8, IRQ 10.
> eth0: MII PHY found at address 1, status 0x7849 advertising 05e1 Link 0000.
> eth0: link down
> device eth0 entered promiscuous mode
> b43legacy ssb0:0: firmware: requesting b43legacy/ucode4.fw
> b43legacy ssb0:0: firmware: requesting b43legacy/pcm4.fw
> b43legacy ssb0:0: firmware: requesting b43legacy/b0g0initvals2.fw
> b43legacy-phy0: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
> Registered led device: b43legacy-phy0::tx
> Registered led device: b43legacy-phy0::rx
> Registered led device: b43legacy-phy0::radio
> b43legacy ssb1:0: firmware: requesting b43legacy/ucode4.fw
> b43legacy ssb1:0: firmware: requesting b43legacy/pcm4.fw
> b43legacy ssb1:0: firmware: requesting b43legacy/b0g0initvals2.fw
> b43legacy-phy1: Loading firmware version 0x127, patch level 14 (2005-04-18 02:36:27)
> Registered led device: b43legacy-phy1::tx
> Registered led device: b43legacy-phy1::rx
> Registered led device: b43legacy-phy1::radio
>
> Even the SPROM is readable on the SSB:
> root at OpenWrt:/# cat /sys/devices/pci0000:00/0000:00:0c.0/ssb_sprom
> 014000000400141425430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D00713A0DF9
> FFFFFFFFFFFFFFFFFFFFFFFFFFFF2130B01198FB4FFE88030B0B3C000000000000003E000F00FF
> FF0000000000000000014D
> root at OpenWrt:/#
>
> Does anybody know what I can change in OpenWRT relating to PCI options for WP188?
>
> Thanks for any help,
> Daniel
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From illth at gmx.de  Sun Sep 13 22:43:05 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Sun, 13 Sep 2009 22:43:05 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAD2669.8070501@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
Message-ID: <1252874585.4593.14.camel@luzifer.localnet>

On So, 2009-09-13 at 19:05 +0200, Daniel Schmitt wrote:

> 
> Does anybody know what I can change in OpenWRT relating to PCI options for WP188?
That maybe totally off topic, but:
I fiddled a bit with getting wireless running on an ASUS WL-520GU
router. I noticed the following:

OpenWRT's mac80211 package does _delete_
wireless-compat's /include/linux/ssb directory, forcing compaqt-wireless
to use the kernel's ssb headers.

This is absolutely necessary for broadcom devices (like mine).

I dunno if it also uses the kernel's ssb modules, for my broadcom
device, all this ssb stuff is built into the kernel.

You can extract the compat wireless package somewhere, and diff it
against the kernel headers.

 To be honest, I do NOT think this makes the problems - I tried to
upgrade to compat-wireless-2009-09-02, and it did not even compile
against the kernel headers. Then I created a small patch, only upgrading
the in-kernel headers and some ssb functionality, and now it works
(albeit a bit slow).


> 
> Thanks for any help,
> Daniel
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From Larry.Finger at lwfinger.net  Sun Sep 13 22:55:13 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 13 Sep 2009 15:55:13 -0500
Subject: [PATCH] ssb: Fix error when V1 SPROM extraction is forced
Message-ID: <4aad5c31.srwXPPe8xnrC+Gcy%Larry.Finger@lwfinger.net>

When an SPROM revision is not recognized, the code falls back to a V1
SPROM; however, that revision is not forced in the appropriate structure.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---


Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -600,6 +600,7 @@ static int sprom_extract(struct ssb_bus
 			ssb_printk(KERN_WARNING PFX "Unsupported SPROM"
 				   "  revision %d detected. Will extract"
 				   " v1\n", out->revision);
+			out->revision = 1;
 			sprom_extract_r123(out, in);
 		}
 	}


From illth at gmx.de  Sun Sep 13 22:55:17 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Sun, 13 Sep 2009 22:55:17 +0200
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <200909121238.21095.mb@bu3sch.de>
References: <1252702497.20674.16.camel@note>
	<69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>
	<1252715575.4046.9.camel@luzifer.localnet>
	<200909121238.21095.mb@bu3sch.de>
Message-ID: <1252875317.4593.26.camel@luzifer.localnet>

Ah, I can reply to the list again!

Petr Kubin knew what the problem was (citing his mail:)


> try this:
> in phy_common.c (next-to-last line), in
b43_phyop_switch_analog_generic,
> comment out ``b43_write16(dev, B43_MMIO_PHY0, on ? 0 : 0xF4);''

Now it works!!

Great work, Stefanik, Michael, Larry (and all the others).

Here is the proof (iwconfig):
wlan0     IEEE 802.11bg  ESSID:"tommy"  
          Mode:Managed  Frequency:2.412 GHz  Access Point: XX:XX:XX.... 
          Bit Rate=18 Mb/s   Tx-Power=20 dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=70/70  Signal level=10 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0


The Bitrate could be a bit higher ... my notebook (with iwlagn) does
>100Mit/s on the same place,  but it's ok as a wireless scanner.

Here is the dmesg output (I got it over ssh over wlan!):

root at OpenWrt:~# dmesg 
Linux version 2.6.28.10 (tom at note) (gcc version 4.1.2) #5 Sat Sep 12
12:57:21 CEST 2009
CPU revision is: 00029029 (Broadcom BCM3302)
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x14, vendor 0x4243)
ssb: Core 1 found: Fast Ethernet (cc 0x806, rev 0x09, vendor 0x4243)
ssb: Core 2 found: MIPS 3302 (cc 0x816, rev 0x08, vendor 0x4243)
ssb: Core 3 found: USB 2.0 Host (cc 0x819, rev 0x02, vendor 0x4243)
ssb: Core 4 found: MEMC SDRAM (cc 0x80F, rev 0x04, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x0D, vendor 0x4243)
ssb: Core 6 found: Roboswitch (cc 0x81C, rev 0x02, vendor 0x4243)
ssb: Found rev 0 PMU (capabilities 0x04A63400)
ssb: Initializing MIPS core...
ssb: core 0x0800, irq : 2(S)  3* 4  5  6  D  I 
ssb: core 0x0806, irq : 2(S)  3  4* 5  6  D  I 
ssb: core 0x0816, irq : 2(S)  3  4  5* 6  D  I 
ssb: core 0x0819, irq : 2(S)  3  4  5  6* D  I 
ssb: core 0x080f, irq : 2(S)  3  4  5  6  D  I*
ssb: core 0x0812, irq : 2(S)* 3  4  5  6  D  I 
ssb: core 0x081c, irq : 2(S)  3  4  5  6  D  I*
ssb: set_irq: core 0x0806, irq 4 => 4
ssb: set_irq: core 0x0816, irq 5 => 2
ssb: set_irq: core 0x0812, irq 2 => 5
ssb: after irq reconfiguration
ssb: core 0x0800, irq : 2(S)  3* 4  5  6  D  I 
ssb: core 0x0806, irq : 2(S)  3  4* 5  6  D  I 
ssb: core 0x0816, irq : 2(S)* 3  4  5  6  D  I 
ssb: core 0x0819, irq : 2(S)  3  4  5  6* D  I 
ssb: core 0x080f, irq : 2(S)  3  4  5  6  D  I*
ssb: core 0x0812, irq : 2(S)  3  4  5* 6  D  I 
ssb: core 0x081c, irq : 2(S)  3  4  5  6  D  I*
ssb: Sonics Silicon Backplane found at address 0x18000000
Serial init done.
Determined physical RAM map:
 memory: 01000000 @ 00000000 (usable)
Initrd not found or empty - disabling initrd
Zone PFN ranges:
  Normal   0x00000000 -> 0x00001000
Movable zone start PFN for each node
early_node_map[1] active PFN ranges
    0: 0x00000000 -> 0x00001000
On node 0 totalpages: 4096
free_area_init_node: node 0, pgdat 80268a00, node_mem_map 802b0000
  Normal zone: 32 pages used for memmap
  Normal zone: 0 pages reserved
  Normal zone: 4064 pages, LIFO batch:0
  Movable zone: 0 pages used for memmap
Built 1 zonelists in Zone order, mobility grouping off.  Total pages:
4064
Kernel command line: root=/dev/mtdblock2 rootfstype=squashfs,jffs2
noinitrd console=ttyS0,115200
Primary instruction cache 16kB, VIPT, 4-way, linesize 16 bytes.
Primary data cache 16kB, 2-way, VIPT, cache aliases, linesize 16 bytes
PID hash table entries: 64 (order: 6, 256 bytes)
console [ttyS0] enabled
Dentry cache hash table entries: 2048 (order: 1, 8192 bytes)
Inode-cache hash table entries: 1024 (order: 0, 4096 bytes)
Memory: 13488k/16384k available (2157k kernel code, 2896k reserved, 308k
data, 136k init, 0k highmem)
Calibrating delay loop... 239.61 BogoMIPS (lpj=479232)
Mount-cache hash table entries: 512
net_namespace: 480 bytes
NET: Registered protocol family 16
Switched to high resolution mode on CPU 0
NET: Registered protocol family 2
IP route cache hash table entries: 1024 (order: 0, 4096 bytes)
TCP established hash table entries: 512 (order: 0, 4096 bytes)
TCP bind hash table entries: 512 (order: -1, 2048 bytes)
TCP: Hash tables configured (established 512 bind 512)
TCP reno registered
NET: Registered protocol family 1
detected lzma initramfs
initramfs: LZMA lc=1,lp=2,pb=2,origSize=512
squashfs: version 3.0 (2006/03/15) Phillip Lougher
Registering mini_fo version $Id$
JFFS2 version 2.2. (NAND) (SUMMARY)  ? 2001-2006 Red Hat, Inc.
msgmni has been set to 26
io scheduler noop registered
io scheduler deadline registered (default)
Serial: 8250/16550 driver2 ports, IRQ sharing enabled
serial8250: ttyS0 at MMIO 0xb8000300 (irq = 3) is a 16550A
serial8250: ttyS1 at MMIO 0xb8000400 (irq = 3) is a 16550A
serial8250.0: ttyS0 at MMIO 0xb8000300 (irq = 3) is a 16550A
serial8250.0: ttyS1 at MMIO 0xb8000400 (irq = 3) is a 16550A
b44.c:v2.0
eth0: Broadcom 44xx/47xx 10/100BaseT Ethernet 00:1f:c6:7d:91:31
flash init: 0x1c000000 0x02000000
Physically mapped flash: Found 1 x16 devices at 0x0 in 16-bit bank
Physically mapped flash: Found an alias at 0x400000 for the chip at 0x0
Physically mapped flash: Found an alias at 0x800000 for the chip at 0x0
Physically mapped flash: Found an alias at 0xc00000 for the chip at 0x0
Physically mapped flash: Found an alias at 0x1000000 for the chip at 0x0
Physically mapped flash: Found an alias at 0x1400000 for the chip at 0x0
Physically mapped flash: Found an alias at 0x1800000 for the chip at 0x0
Physically mapped flash: Found an alias at 0x1c00000 for the chip at 0x0
 Amd/Fujitsu Extended Query Table at 0x0040
number of CFI chips: 1
cfi_cmdset_0002: Disabling erase-suspend-program due to code brokenness.
Flash device: 0x400000 at 0x1fc00000
bootloader size: 131072
Creating 4 MTD partitions on "Physically mapped flash":
0x00000000-0x00020000 : "cfe"
0x00020000-0x003f0000 : "linux"
0x000edc00-0x003f0000 : "rootfs"
mtd: partition "rootfs" doesn't start on an erase block boundary --
force read-only
mtd: partition "rootfs" set to be root filesystem
mtd: partition "rootfs_data" created automatically, ofs=280000,
len=170000 
0x00280000-0x003f0000 : "rootfs_data"
0x003f0000-0x00400000 : "nvram"
BCM47xx Watchdog Timer enabled (30 seconds, nowayout)
TCP westwood registered
NET: Registered protocol family 17
802.1Q VLAN Support v1.8 Ben Greear <greearb at candelatech.com>
All bugs added by David S. Miller <davem at redhat.com>
VFS: Mounted root (squashfs filesystem) readonly.
Freeing unused kernel memory: 136k freed
Please be patient, while OpenWrt loads ...
diag: Detected 'ASUS WL-520gU'
b44: eth0: Link is up at 100 Mbps, full duplex.
b44: eth0: Flow control is off for TX and off for RX.
roboswitch: Probing device eth0: found!
b44: eth0: powering down PHY
mini_fo: using base directory: /
mini_fo: using storage directory: /jffs
b44: eth0: Link is up at 100 Mbps, full duplex.
b44: eth0: Flow control is off for TX and off for RX.
cfg80211: Calling CRDA to update world regulatory domain
cfg80211: World regulatory domain updated:
	(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
	(2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
	(2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
	(2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
	(5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
	(5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
b43-phy0: Broadcom 5354 WLAN found (core revision 13)
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]
ip_tables: (C) 2000-2006 Netfilter Core Team
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
nf_conntrack version 0.5.0 (256 buckets, 1024 max)
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
ohci_hcd ssb0:1: SSB OHCI Controller
ohci_hcd ssb0:1: new USB bus registered, assigned bus number 1
ohci_hcd ssb0:1: irq 6, io mem 0x18003000
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 2 ports detected
ohci_hcd ssb0:1: SSB EHCI Controller
ohci_hcd ssb0:1: new USB bus registered, assigned bus number 2
ohci_hcd ssb0:1: irq 6, io mem 0x18003800
ohci_hcd ssb0:1: USB 0.0 started, EHCI 1.00
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 2 ports detected
hub 2-0:1.0: unable to enumerate USB device on port 1
usb 1-1: new full speed USB device using ohci_hcd and address 2
usb 1-1: configuration #1 chosen from 1 choice
b43 ssb0:3: firmware: requesting b43/ucode13.fw
b43 ssb0:3: firmware: requesting b43/lp0initvals13.fw
b43 ssb0:3: firmware: requesting b43/lp0bsinitvals13.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
wlan0: direct probe to AP 8047522c (try 1)
wlan0 direct probe responded
wlan0: authenticate with AP 8047522c (try 1)
wlan0: authenticated
wlan0: associate with AP 8047522c (try 1)
wlan0: RX AssocResp from 804a906e (capab=0x431 status=0 aid=1)
wlan0: associated
cfg80211: Calling CRDA for country: DE
cfg80211: Current regulatory domain updated by AP to: DE
	(start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
	(2402000 KHz - 2483500 KHz @ 40000 KHz), (N/A, 2000 mBm)
usb 1-1: usbfs: interface 0 claimed by usbfs while 'saned' sets config
#1


On Sa, 2009-09-12 at 12:38 +0200, Michael Buesch wrote:
> On Saturday 12 September 2009 02:32:55 Thomas Ilnseher wrote:
> > On Sa, 2009-09-12 at 00:56 +0200, G?bor Stefanik wrote:
> > > 2009/9/12 G?bor Stefanik <netrolller.3d at gmail.com>:
> > > > On Fri, Sep 11, 2009 at 10:54 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> > > >> Hi List,
> > > >>
> > > >> I installed the latest version of OpenWRT on a ASUS WL-520GU.
> > > >> I compiles a few kernel patches to make the OpenWRT kernel (2.6.28.10)
> > > >> compatible with compat wireless.
> > > >>
> > > >> Than I patched OpenWRT to build compat-wireless-09-02
> > > >>
> > > >> As said, It yields an instant crash:
> > > >>
> > > >> cfg80211: World regulatory domain updated:
> > > >>        (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
> > > >>        (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > > >>        (2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> > > >>        (2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
> > > >>        (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > > >>        (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
> > > >> b43-phy0: Broadcom 5354 WLAN found (core revision 13)
> > > >> Decompressing..........done <== CFE Again, no usefull stuff on teh RS232
> > > >> port
> > > >>
> > > >> FWIW, I add the patches for the kernel.
> > > >
> > > > These patches are probably not enough - there were more changes to the
> > > > ssb module since 2.6.28. You will probably need to compile a new
> > > > kernel from wireless-testing or net-next-2.6 (linux-next & linux-2.6
> > > > may also work). (God luck doing that in the OpenWRT build system...)
> > I will try to copy all ssb files from compat-wireless to the 2.6.28.10
> > kernel, and create a patch. 
> > 
> > I assume the kernel will crash on boot then, cause I'd need some changes
> > in /arch/mips/....
> > 
> > I can probably hack the build system to support a newer kernel, but the
> > problem remains that there are a gazillion patches that need porting :/
> 
> The buildsystem already supports 2.6.30.5. Just change version in the target makefile.
> 
> I'd suggest you just wait for us to port the stuff. ;)
> 



From Larry.Finger at lwfinger.net  Sun Sep 13 22:53:36 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 13 Sep 2009 15:53:36 -0500
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAD2669.8070501@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
Message-ID: <4AAD5BD0.5060406@lwfinger.net>

Daniel Schmitt wrote:
> Hello Group,
> 
> I posted a few days ago my problems with this WLAN minipci card:
> 
> Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
> 00:02.0 0280: 14e4:4325 (rev 02)
>           Subsystem: 1414:0004
>           Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
> Stepping- SERR+ FastB2B- DisINTx-
>           Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
> <MAbort- >SERR- <PERR- INTx-
>           Interrupt: pin A routed to IRQ 27
>           Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
> [size=8K]
> 
> If I use them (2 pieces) in a WP188 from compex, I don't get ssb.ko running. 
> Here is the dmesg if I try to load ssb.ko and b43legacy.ko
> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 251 detected.
> ssb: Unsupported SPROM revision 251 detected. Will extract v1

Despite this error, the program is almost doing the right thing. I do
not understand why this happens. There will be a patch coming that
forces the correct extraction.

> Even the SPROM is readable on the SSB:
> root at OpenWrt:/# cat /sys/devices/pci0000:00/0000:00:0c.0/ssb_sprom
> 014000000400141425430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D00713A0DF9
> FFFFFFFFFFFFFFFFFFFFFFFFFFFF2130B01198FB4FFE88030B0B3C000000000000003E000F00FF
                                        ==
This byte is what it is selecting as the version. The nibble offset is
195-196 instead of 253-254.

> FF0000000000000000014D

Larry



From mb at bu3sch.de  Sun Sep 13 23:09:04 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 13 Sep 2009 23:09:04 +0200
Subject: [PATCH] ssb: Fix error when V1 SPROM extraction is forced
In-Reply-To: <4aad5c31.srwXPPe8xnrC+Gcy%Larry.Finger@lwfinger.net>
References: <4aad5c31.srwXPPe8xnrC+Gcy%Larry.Finger@lwfinger.net>
Message-ID: <200909132309.06708.mb@bu3sch.de>

On Sunday 13 September 2009 22:55:13 Larry Finger wrote:
> When an SPROM revision is not recognized, the code falls back to a V1
> SPROM; however, that revision is not forced in the appropriate structure.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> 
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -600,6 +600,7 @@ static int sprom_extract(struct ssb_bus
>  			ssb_printk(KERN_WARNING PFX "Unsupported SPROM"
>  				   "  revision %d detected. Will extract"
>  				   " v1\n", out->revision);
> +			out->revision = 1;
>  			sprom_extract_r123(out, in);

ack


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sun Sep 13 23:48:20 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 13 Sep 2009 16:48:20 -0500
Subject: 5354 + B43 = Instant Crash
In-Reply-To: <1252875317.4593.26.camel@luzifer.localnet>
References: <1252702497.20674.16.camel@note>	<69e28c910909111556nf13f9f5o6fe84dbd8d5e305b@mail.gmail.com>	<1252715575.4046.9.camel@luzifer.localnet>	<200909121238.21095.mb@bu3sch.de>
	<1252875317.4593.26.camel@luzifer.localnet>
Message-ID: <4AAD68A4.1070005@lwfinger.net>

Thomas Ilnseher wrote:
> Ah, I can reply to the list again!
> 
> Petr Kubin knew what the problem was (citing his mail:)
> 
> 
>> try this:
>> in phy_common.c (next-to-last line), in
> b43_phyop_switch_analog_generic,
>> comment out ``b43_write16(dev, B43_MMIO_PHY0, on ? 0 : 0xF4);''
> 
> Now it works!!

There was a code change for this routine on 08/13 in
http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore. It was missed and
has not yet been coded. Thanks to you and Petr for this tip. BTW,
where is his E-mail posted? I don't seem to have it in my mailbox.

Larry



From daniel at schmitt-united.de  Mon Sep 14 16:39:00 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 14 Sep 2009 16:39:00 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAD5BD0.5060406@lwfinger.net>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAD5BD0.5060406@lwfinger.net>
Message-ID: <4AAE5584.7030409@schmitt-united.de>

Larry, I don't think that sprom_do_read is able to read _ANY_ valid data because 
if I do it today it results it

root at OpenWrt:/# insmod ssb
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: Unsupported SPROM revision 155 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:01.0
root at OpenWrt:/#

reading the byte 155 (0x9b). I cannot find this byte in the SPROM which is
014000000400141425430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D002C3A8E7F
FFFFFFFFFFFFFFFFFFFFFFFFFFFF2130B01198FB4FFE88030B0B3C000000000000003E000F00FF
FF000000000000000001EF

this was read out using x86 ALIX board and the same WLAN device.
If I try to get SPROM on IPX4XX machine, I get:

root at OpenWrt:/# cat /sys/devices/pci0000\:00/0000\:00\:01.0/ssb_sprom
Bad mode in data abort handler detected
Internal error: Oops - bad mode: 0 [#1]
Modules linked in: ssb [last unloaded: ssb]
CPU: 0    Not tainted  (2.6.28.10 #10)
PC is at 0xffff01fc
LR is at ssb_attr_sprom_show+0x7c/0x124 [ssb]
pc : [<ffff01fc>]    lr : [<bf010704>]    psr: a0000092
sp : c3a79e5c  ip : 00000001  fp : c3a79ecc
r10: c026e1e4  r9 : 00000000  r8 : 0000ffff
r7 : c3a9e6c8  r6 : c3a9a000  r5 : 00000065  r4 : 00000000
r3 : c48dd0c8  r2 : c3a79ea4  r1 : 00000001  r0 : d0c80000
Flags: NzCv  IRQs off  FIQs on  Mode IRQ_32  ISA ARM  Segment user
Control: 000039ff  Table: 03a18000  DAC: 00000015
Process cat (pid: 1466, stack limit = 0xc3a78260)
Stack: (0xc3a79e5c to 0xc3a7a000)
9e40:                                                                d0c80000
9e60: 00000001 c3a79ea4 c48dd0c8 00000000 00000065 c3a9a000 c3a9e6c8 0000ffff
9e80: 00000000 c026e1e4 c3a79ecc 00000001 c3a79e5c bf010704 ffff01fc a0000092
9ea0: ffffffff c3a79eb0 c3a9a000 000000dc bf010850 c3a9e600 c3a9a01c c30f4000
9ec0: c3a79ef8 c3a79ed0 bf010704 bf01085c c30f4000 fffffffb c3a11e24 00000fff
9ee0: c0267420 c3af18f4 c3a79f80 c3a79f0c c3a79efc bf010cc4 bf010694 bf016678
9f00: c3a79f24 c3a79f10 c012e43c bf010ca0 c3af18e0 c38118c0 c3a79f5c c3a79f28
9f20: c00c7548 c012e420 00000003 00001000 bea6ddb0 c3a758e0 00001000 bea6ddb0
9f40: c3a79f80 c0021f84 c3a78000 00000001 c3a79f7c c3a79f60 c008ac1c c00c74b0
9f60: c3a758e0 00000000 00000000 00000003 c3a79fa4 c3a79f80 c008af0c c008ab78
9f80: 00000000 00000000 00000000 00001000 4009c614 bea6ddb0 00000000 c3a79fa8
9fa0: c0021de0 c008aecc 00001000 4009c614 00000003 bea6ddb0 00001000 00074b70
9fc0: 00001000 4009c614 bea6ddb0 00000003 00000000 00000001 00000001 00000003
9fe0: 40052660 bea6dd94 0000db54 40052668 20000010 00000003 00000000 00000000
Backtrace:
[<bf010850>] (sprom_do_read+0x0/0xf0 [ssb]) from [<bf010704>] 
(ssb_attr_sprom_show+0x7c/0x124 [ssb])
[<bf010688>] (ssb_attr_sprom_show+0x0/0x124 [ssb]) from [<bf010cc4>] 
(ssb_pci_attr_sprom_show+0x30/0x40 [ssb])
[<bf010c94>] (ssb_pci_attr_sprom_show+0x0/0x40 [ssb]) from [<c012e43c>] 
(dev_attr_show+0x28/0x54)
  r4:bf016678
[<c012e414>] (dev_attr_show+0x0/0x54) from [<c00c7548>] (sysfs_read_file+0xa4/0x138)
  r5:c38118c0 r4:c3af18e0
[<c00c74a4>] (sysfs_read_file+0x0/0x138) from [<c008ac1c>] (vfs_read+0xb0/0xfc)
[<c008ab6c>] (vfs_read+0x0/0xfc) from [<c008af0c>] (sys_read+0x4c/0x84)
  r7:00000003 r6:00000000 r5:00000000 r4:c3a758e0
[<c008aec0>] (sys_read+0x0/0x84) from [<c0021de0>] (ret_fast_syscall+0x0/0x2c)
  r6:bea6ddb0 r5:4009c614 r4:00001000
Code: 00000000 00000000 00000000 00000000 (00000000)
---[ end trace b2171b3eec29f300 ]---
Segmentation fault
root at OpenWrt:/#

Daniel

Larry Finger wrote:
> Daniel Schmitt wrote:
>> Hello Group,
>>
>> I posted a few days ago my problems with this WLAN minipci card:
>>
>> Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
>> 00:02.0 0280: 14e4:4325 (rev 02)
>>           Subsystem: 1414:0004
>>           Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
>> Stepping- SERR+ FastB2B- DisINTx-
>>           Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
>> <MAbort- >SERR- <PERR- INTx-
>>           Interrupt: pin A routed to IRQ 27
>>           Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
>> [size=8K]
>>
>> If I use them (2 pieces) in a WP188 from compex, I don't get ssb.ko running. 
>> Here is the dmesg if I try to load ssb.ko and b43legacy.ko
>> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>> ssb: SPROM revision 251 detected.
>> ssb: Unsupported SPROM revision 251 detected. Will extract v1
> 
> Despite this error, the program is almost doing the right thing. I do
> not understand why this happens. There will be a patch coming that
> forces the correct extraction.
> 
>> Even the SPROM is readable on the SSB:
>> root at OpenWrt:/# cat /sys/devices/pci0000:00/0000:00:0c.0/ssb_sprom
>> 014000000400141425430080020002000010001800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>> FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D00713A0DF9
>> FFFFFFFFFFFFFFFFFFFFFFFFFFFF2130B01198FB4FFE88030B0B3C000000000000003E000F00FF
>                                         ==
> This byte is what it is selecting as the version. The nibble offset is
> 195-196 instead of 253-254.
> 
>> FF0000000000000000014D
> 
> Larry
> 
> 



From daniel at schmitt-united.de  Mon Sep 14 17:12:22 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 14 Sep 2009 17:12:22 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <69e28c910909131104o7406920ds50674e663326c49e@mail.gmail.com>
References: <4AAD2669.8070501@schmitt-united.de>
	<69e28c910909131104o7406920ds50674e663326c49e@mail.gmail.com>
Message-ID: <4AAE5D56.5000502@schmitt-united.de>

G?bor Stefanik wrote:
> On Sun, Sep 13, 2009 at 7:05 PM, Daniel Schmitt
> <daniel at schmitt-united.de> wrote:
>> Hello Group,
>>
>> I posted a few days ago my problems with this WLAN minipci card:
>>
>> Linux OpenWrt 2.6.28.10 #5 Thu Sep 10 20:36:33 CEST 2009 armv5teb unknown
>> 00:02.0 0280: 14e4:4325 (rev 02)
>>          Subsystem: 1414:0004
>>          Control: I/O- Mem- BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr+
>> Stepping- SERR+ FastB2B- DisINTx-
>>          Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort-
>> <MAbort- >SERR- <PERR- INTx-
>>          Interrupt: pin A routed to IRQ 27
>>          Region 0: Memory at 48020000 (32-bit, non-prefetchable) [disabled]
>> [size=8K]
>>
>> If I use them (2 pieces) in a WP188 from compex, I don't get ssb.ko running.
>> Here is the dmesg if I try to load ssb.ko and b43legacy.ko
>> PCI: enabling device 0000:00:02.0 (0140 -> 0142)
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>> ssb: SPROM revision 251 detected.
>> ssb: Unsupported SPROM revision 251 detected. Will extract v1
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
>> PCI: enabling device 0000:00:04.0 (0140 -> 0142)
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>> ssb: SPROM revision 251 detected.
>> ssb: Unsupported SPROM revision 251 detected. Will extract v1
> 
> What endianness is the IXP4xx?

I think it is big endianess (armeb).

> Please enable SSB & B43 debugging on this platform, too.

I only managed to turn debugging on for SSB. b43legacy has problems building 
debugfs.o.
This is dmesg output on x86 ALIX platform:

b43-pci-bridge 0000:00:0c.0: setting latency timer to 64
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: SPROM revision 1 detected.
ssb: Sonics Silicon Backplane found on PCI device 0000:00:0c.0
b43legacy-phy0: Broadcom 4306 WLAN found
Clocksource tsc unstable (delta = 69995458 ns)
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx-legacy driver loaded [ Features: PLID, Firmware-ID: FW10 ]

Daniel



From Larry.Finger at lwfinger.net  Mon Sep 14 17:19:46 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 14 Sep 2009 10:19:46 -0500
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAE5584.7030409@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAD5BD0.5060406@lwfinger.net>
	<4AAE5584.7030409@schmitt-united.de>
Message-ID: <4AAE5F12.9020705@lwfinger.net>

Daniel Schmitt wrote:
> Larry, I don't think that sprom_do_read is able to read _ANY_ valid data
> because if I do it today it results it

Is there any reason to suspect a timing issue? I'm not familiar with
your platform. If that is the issue, perhaps might try (my mailer will
mangle this, but you get the idea):

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -246,8 +246,10 @@ static int sprom_do_read(struct ssb_bus
 {
        int i;

-       for (i = 0; i < bus->sprom_size; i++)
+       for (i = 0; i < bus->sprom_size; i++) {
                sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
+               udelay(5);
+       }

        return 0;
 }




From daniel at schmitt-united.de  Mon Sep 14 18:56:08 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 14 Sep 2009 18:56:08 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAE5F12.9020705@lwfinger.net>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAD5BD0.5060406@lwfinger.net>
	<4AAE5584.7030409@schmitt-united.de>
	<4AAE5F12.9020705@lwfinger.net>
Message-ID: <4AAE75A8.2060505@schmitt-united.de>

well, same issue:
ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
ssb: Ignoring additional 802.11 core
ssb: Using different timing for ioread 16. udelay(10)
ssb: Using different timing for ioread 16. udelay(10)
ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
ssb: SPROM revision 91 detected.
ssb: Unsupported SPROM revision 91 detected. Will extract v1
ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0

I tried udelay(5) and udelay(10).

Something strange happens there that ssb isn't able to access SPROM ...

Larry Finger wrote:
> Daniel Schmitt wrote:
>> Larry, I don't think that sprom_do_read is able to read _ANY_ valid data
>> because if I do it today it results it
> 
> Is there any reason to suspect a timing issue? I'm not familiar with
> your platform. If that is the issue, perhaps might try (my mailer will
> mangle this, but you get the idea):
> 
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -246,8 +246,10 @@ static int sprom_do_read(struct ssb_bus
>  {
>         int i;
> 
> -       for (i = 0; i < bus->sprom_size; i++)
> +       for (i = 0; i < bus->sprom_size; i++) {
>                 sprom[i] = ioread16(bus->mmio + SSB_SPROM_BASE + (i * 2));
> +               udelay(5);
> +       }
> 
>         return 0;
>  }
> 
> 
> 



From mb at bu3sch.de  Mon Sep 14 19:42:52 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 19:42:52 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAE75A8.2060505@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAE5F12.9020705@lwfinger.net>
	<4AAE75A8.2060505@schmitt-united.de>
Message-ID: <200909141942.54108.mb@bu3sch.de>

On Monday 14 September 2009 18:56:08 Daniel Schmitt wrote:
> well, same issue:
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> ssb: Ignoring additional 802.11 core
> ssb: Using different timing for ioread 16. udelay(10)
> ssb: Using different timing for ioread 16. udelay(10)
> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> ssb: SPROM revision 91 detected.
> ssb: Unsupported SPROM revision 91 detected. Will extract v1
> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
> 
> I tried udelay(5) and udelay(10).
> 
> Something strange happens there that ssb isn't able to access SPROM ...

well, are you sure that there actually is an sprom on the card?

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Mon Sep 14 19:56:09 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Mon, 14 Sep 2009 19:56:09 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <200909141942.54108.mb@bu3sch.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAE5F12.9020705@lwfinger.net> 
	<4AAE75A8.2060505@schmitt-united.de> <200909141942.54108.mb@bu3sch.de>
Message-ID: <69e28c910909141056p4fa4c17aide35e834317ef384@mail.gmail.com>

On Mon, Sep 14, 2009 at 7:42 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Monday 14 September 2009 18:56:08 Daniel Schmitt wrote:
>> well, same issue:
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: Using different timing for ioread 16. udelay(10)
>> ssb: Using different timing for ioread 16. udelay(10)
>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>> ssb: SPROM revision 91 detected.
>> ssb: Unsupported SPROM revision 91 detected. Will extract v1
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
>>
>> I tried udelay(5) and udelay(10).
>>
>> Something strange happens there that ssb isn't able to access SPROM ...
>
> well, are you sure that there actually is an sprom on the card?

Probably, since it is read out perfectly on an x86 machine.

>
> --
> Greetings, Michael.
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From daniel at schmitt-united.de  Mon Sep 14 20:35:42 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 14 Sep 2009 20:35:42 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <200909141942.54108.mb@bu3sch.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<4AAE5F12.9020705@lwfinger.net>
	<4AAE75A8.2060505@schmitt-united.de>
	<200909141942.54108.mb@bu3sch.de>
Message-ID: <4AAE8CFE.1060405@schmitt-united.de>

Michael Buesch schrieb:
> On Monday 14 September 2009 18:56:08 Daniel Schmitt wrote:
>> well, same issue:
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>> ssb: Ignoring additional 802.11 core
>> ssb: Using different timing for ioread 16. udelay(10)
>> ssb: Using different timing for ioread 16. udelay(10)
>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>> ssb: SPROM revision 91 detected.
>> ssb: Unsupported SPROM revision 91 detected. Will extract v1
>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
>>
>> I tried udelay(5) and udelay(10).
>>
>> Something strange happens there that ssb isn't able to access SPROM ...
> 
> well, are you sure that there actually is an sprom on the card?
> 
it has one.
Inserting the same card in x86 ALIX board, there everything works. SPROM reading 
works, too. The card has a SPROM.
I think at the beginning of my posting I mentioned it.

Daniel


From mb at bu3sch.de  Mon Sep 14 20:37:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 20:37:03 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <4AAE8CFE.1060405@schmitt-united.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<200909141942.54108.mb@bu3sch.de>
	<4AAE8CFE.1060405@schmitt-united.de>
Message-ID: <200909142037.05297.mb@bu3sch.de>

On Monday 14 September 2009 20:35:42 Daniel Schmitt wrote:
> Michael Buesch schrieb:
> > On Monday 14 September 2009 18:56:08 Daniel Schmitt wrote:
> >> well, same issue:
> >> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
> >> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
> >> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> >> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
> >> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
> >> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
> >> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
> >> ssb: Ignoring additional 802.11 core
> >> ssb: Using different timing for ioread 16. udelay(10)
> >> ssb: Using different timing for ioread 16. udelay(10)
> >> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
> >> ssb: SPROM revision 91 detected.
> >> ssb: Unsupported SPROM revision 91 detected. Will extract v1
> >> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
> >>
> >> I tried udelay(5) and udelay(10).
> >>
> >> Something strange happens there that ssb isn't able to access SPROM ...
> > 
> > well, are you sure that there actually is an sprom on the card?
> > 
> it has one.
> Inserting the same card in x86 ALIX board, there everything works. SPROM reading 
> works, too. The card has a SPROM.
> I think at the beginning of my posting I mentioned it.

So did you try putting another card into the IPX board where the b43 card does not work?
I guess it simply has serious PCI bus problems.


-- 
Greetings, Michael.


From daniel at schmitt-united.de  Mon Sep 14 20:43:52 2009
From: daniel at schmitt-united.de (Daniel Schmitt)
Date: Mon, 14 Sep 2009 20:43:52 +0200
Subject: bcm4306 crashes on IPX4XX and works on x86 ?!?
In-Reply-To: <200909142037.05297.mb@bu3sch.de>
References: <4AAD2669.8070501@schmitt-united.de>
	<200909141942.54108.mb@bu3sch.de>
	<4AAE8CFE.1060405@schmitt-united.de>
	<200909142037.05297.mb@bu3sch.de>
Message-ID: <4AAE8EE8.8000307@schmitt-united.de>

Michael Buesch schrieb:
> On Monday 14 September 2009 20:35:42 Daniel Schmitt wrote:
>> Michael Buesch schrieb:
>>> On Monday 14 September 2009 18:56:08 Daniel Schmitt wrote:
>>>> well, same issue:
>>>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:02.0
>>>> ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x02, vendor 0x4243)
>>>> ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>>>> ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x01, vendor 0x4243)
>>>> ssb: Core 3 found: V90 (cc 0x807, rev 0x01, vendor 0x4243)
>>>> ssb: Core 4 found: PCI (cc 0x804, rev 0x07, vendor 0x4243)
>>>> ssb: Core 5 found: IEEE 802.11 (cc 0x812, rev 0x04, vendor 0x4243)
>>>> ssb: Ignoring additional 802.11 core
>>>> ssb: Using different timing for ioread 16. udelay(10)
>>>> ssb: Using different timing for ioread 16. udelay(10)
>>>> ssb: WARNING: Invalid SPROM CRC (corrupt SPROM)
>>>> ssb: SPROM revision 91 detected.
>>>> ssb: Unsupported SPROM revision 91 detected. Will extract v1
>>>> ssb: Sonics Silicon Backplane found on PCI device 0000:00:04.0
>>>>
>>>> I tried udelay(5) and udelay(10).
>>>>
>>>> Something strange happens there that ssb isn't able to access SPROM ...
>>> well, are you sure that there actually is an sprom on the card?
>>>
>> it has one.
>> Inserting the same card in x86 ALIX board, there everything works. SPROM reading 
>> works, too. The card has a SPROM.
>> I think at the beginning of my posting I mentioned it.
> 
> So did you try putting another card into the IPX board where the b43 card does not work?
> I guess it simply has serious PCI bus problems.
> 

I have 5 b43legacy cards. None of them works there. Always differekt SPROM 
revisions get extracted. After a reboot another version is displayed with the 
same card.
Madwifi Atheros cards work perfectly on the IPX board. I testes WMIA123 and 
Mikrotik R52 successfully.

Daniel



From illth at gmx.de  Mon Sep 14 20:44:54 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 20:44:54 +0200
Subject: [PATCH] Add analog switching support for LP PHY based chips
Message-ID: <1252953894.4696.0.camel@luzifer.localnet>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: lpphy_add_analog_switch.patch
Type: text/x-patch
Size: 4150 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090914/5000478c/attachment.bin>

From mb at bu3sch.de  Mon Sep 14 20:51:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 20:51:19 +0200
Subject: [PATCH] Add analog switching support for LP PHY based chips
In-Reply-To: <1252953894.4696.0.camel@luzifer.localnet>
References: <1252953894.4696.0.camel@luzifer.localnet>
Message-ID: <200909142051.21176.mb@bu3sch.de>

On Monday 14 September 2009 20:44:54 Thomas Ilnseher wrote:
> 
> 

*) Please inline the patch
*) Why do you rename b43_phyop_switch_analog_generic? It's "generic", because
   it works on the generic PHY0 MMIO register shadow.
*) Please use b43_phy_mask and b43_phy_set.

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Mon Sep 14 21:10:04 2009
From: netrolller.3d at gmail.com (=?UTF-8?B?R8OhYm9yIFN0ZWZhbmlr?=)
Date: Mon, 14 Sep 2009 21:10:04 +0200
Subject: [PATCH] b43: LP-PHY: Fix analog core switching
Message-ID: <4AAE950C.2050704@gmail.com>

The generic analog switch routine is not correct for LP-PHY according
to the latest specs. Implement the proper analog core switch routine.

Signed-off-by: G?bor Stefanik <netrolller.3d at gmail.com>
---
diff --git a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
index 80da9c7..b0e127a 100644
--- a/drivers/net/wireless/b43/phy_lp.c
+++ b/drivers/net/wireless/b43/phy_lp.c
@@ -2160,6 +2160,16 @@ static int lpphy_b2063_tune(struct b43_w
 	return 0;
 }
 
+static void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
+{
+	if (on) {
+		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x7);
+		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x7);
+	} else {
+		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xFFF8);
+	}
+}
+
 static int b43_lpphy_op_switch_channel(struct b43_wldev *dev,
 				       unsigned int new_channel)
 {
@@ -2239,7 +2249,7 @@ const struct b43_phy_operations b43_phyo
 	.radio_read		= b43_lpphy_op_radio_read,
 	.radio_write		= b43_lpphy_op_radio_write,
 	.software_rfkill	= b43_lpphy_op_software_rfkill,
-	.switch_analog		= b43_phyop_switch_analog_generic,
+	.switch_analog		= b43_lpphy_op_switch_analog,
 	.switch_channel		= b43_lpphy_op_switch_channel,
 	.get_default_chan	= b43_lpphy_op_get_default_chan,
 	.set_rx_antenna		= b43_lpphy_op_set_rx_antenna,



From illth at gmx.de  Mon Sep 14 21:10:32 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 21:10:32 +0200
Subject: [PATCH] - try2 Add analog switching support for LP PHY based chips
In-Reply-To: <200909142051.21176.mb@bu3sch.de>
References: <1252953894.4696.0.camel@luzifer.localnet>
	<200909142051.21176.mb@bu3sch.de>
Message-ID: <1252955432.4696.17.camel@luzifer.localnet>

On Mo, 2009-09-14 at 20:51 +0200, Michael Buesch wrote:
> On Monday 14 September 2009 20:44:54 Thomas Ilnseher wrote:
> > 
> > 
> 
> *) Please inline the patch
> *) Why do you rename b43_phyop_switch_analog_generic? It's "generic", because
>    it works on the generic PHY0 MMIO register shadow.
It's renamed to b43_phyop_switch_analog_ag. I reverted that change.
> *) Please use b43_phy_mask and b43_phy_set.
didn't know these functions, they come in handy.

diff -uNr b/drivers/net/wireless/b43/phy_lp.c a/drivers/net/wireless/b43/phy_lp.c
--- b/drivers/net/wireless/b43/phy_lp.c	2009-09-14 06:14:18.000000000 +0200
+++ a/drivers/net/wireless/b43/phy_lp.c	2009-09-14 21:03:15.158507573 +0200
@@ -2228,6 +2228,16 @@
 	return B43_TXPWR_RES_DONE;
 }
 
+void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
+{
+	if (on) {
+		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
+	} else {
+		b43_phy_maskset(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
+		b43_phy_maskset(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
+	}
+}
+
 const struct b43_phy_operations b43_phyops_lp = {
 	.allocate		= b43_lpphy_op_allocate,
 	.free			= b43_lpphy_op_free,
@@ -2239,7 +2249,7 @@
 	.radio_read		= b43_lpphy_op_radio_read,
 	.radio_write		= b43_lpphy_op_radio_write,
 	.software_rfkill	= b43_lpphy_op_software_rfkill,
-	.switch_analog		= b43_phyop_switch_analog_generic,
+	.switch_analog		= b43_lpphy_op_switch_analog,
 	.switch_channel		= b43_lpphy_op_switch_channel,
 	.get_default_chan	= b43_lpphy_op_get_default_chan,
 	.set_rx_antenna		= b43_lpphy_op_set_rx_antenna,



From illth at gmx.de  Mon Sep 14 21:24:40 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 21:24:40 +0200
Subject: [PATCH] b43: LP-PHY: Fix analog core switching
In-Reply-To: <4AAE950C.2050704@gmail.com>
References: <4AAE950C.2050704@gmail.com>
Message-ID: <1252956280.4696.19.camel@luzifer.localnet>

On Mo, 2009-09-14 at 21:10 +0200, G?bor Stefanik wrote:
> The generic analog switch routine is not correct for LP-PHY according
> to the latest specs. Implement the proper analog core switch routine.
> 
> Signed-off-by: G?bor Stefanik <netrolller.3d at gmail.com>
> ---
> diff --git a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
> index 80da9c7..b0e127a 100644
> --- a/drivers/net/wireless/b43/phy_lp.c
> +++ b/drivers/net/wireless/b43/phy_lp.c
> @@ -2160,6 +2160,16 @@ static int lpphy_b2063_tune(struct b43_w
>  	return 0;
>  }
>  
> +static void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
The spec says:
Else if this in an LP PHY 
     a. If argument "on" is zero 
             1. OR PHY Register 0x43C with 7 
                
             2. OR PHY Register 0x43B with 7 
                
> +	if (on) {
This stuff is executed when on is true (ie. anything else than zero)
> +		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x7);
> +		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x7);
> +	} else {
> +		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xFFF8);
> +	}
> +}
> +
>  static int b43_lpphy_op_switch_channel(struct b43_wldev *dev,
>  				       unsigned int new_channel)
>  {
> @@ -2239,7 +2249,7 @@ const struct b43_phy_operations b43_phyo
>  	.radio_read		= b43_lpphy_op_radio_read,
>  	.radio_write		= b43_lpphy_op_radio_write,
>  	.software_rfkill	= b43_lpphy_op_software_rfkill,
> -	.switch_analog		= b43_phyop_switch_analog_generic,
> +	.switch_analog		= b43_lpphy_op_switch_analog,
>  	.switch_channel		= b43_lpphy_op_switch_channel,
>  	.get_default_chan	= b43_lpphy_op_get_default_chan,
>  	.set_rx_antenna		= b43_lpphy_op_set_rx_antenna,
> 
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From illth at gmx.de  Mon Sep 14 21:35:34 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 21:35:34 +0200
Subject: [PATCH3]Add analog switch support
Message-ID: <1252956934.4696.23.camel@luzifer.localnet>

As I've seen G?bor's patch, I noticed that my previous patch was
bullshit. This patch should work:

Signed-off-by: Thomas Ilnseher <illth at gmx.de>

diff -uNr b/drivers/net/wireless/b43/phy_lp.c a/drivers/net/wireless/b43/phy_lp.c
--- b/drivers/net/wireless/b43/phy_lp.c	2009-09-14 06:14:18.000000000 +0200
+++ a/drivers/net/wireless/b43/phy_lp.c	2009-09-14 21:03:15.158507573 +0200
@@ -2228,6 +2228,16 @@
 	return B43_TXPWR_RES_DONE;
 }
 
+void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
+{
+	if (on) {
+		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
+	} else {
+		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
+		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
+	}
+}
+
 const struct b43_phy_operations b43_phyops_lp = {
 	.allocate		= b43_lpphy_op_allocate,
 	.free			= b43_lpphy_op_free,
@@ -2239,7 +2249,7 @@
 	.radio_read		= b43_lpphy_op_radio_read,
 	.radio_write		= b43_lpphy_op_radio_write,
 	.software_rfkill	= b43_lpphy_op_software_rfkill,
-	.switch_analog		= b43_phyop_switch_analog_generic,
+	.switch_analog		= b43_lpphy_op_switch_analog,
 	.switch_channel		= b43_lpphy_op_switch_channel,
 	.get_default_chan	= b43_lpphy_op_get_default_chan,
 	.set_rx_antenna		= b43_lpphy_op_set_rx_antenna,




From mb at bu3sch.de  Mon Sep 14 21:40:16 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 21:40:16 +0200
Subject: [PATCH] b43: LP-PHY: Fix analog core switching
In-Reply-To: <4AAE950C.2050704@gmail.com>
References: <4AAE950C.2050704@gmail.com>
Message-ID: <200909142140.18118.mb@bu3sch.de>

On Monday 14 September 2009 21:10:04 G?bor Stefanik wrote:
> The generic analog switch routine is not correct for LP-PHY according
> to the latest specs. Implement the proper analog core switch routine.
> 
> Signed-off-by: G?bor Stefanik <netrolller.3d at gmail.com>
> ---
> diff --git a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
> index 80da9c7..b0e127a 100644
> --- a/drivers/net/wireless/b43/phy_lp.c
> +++ b/drivers/net/wireless/b43/phy_lp.c
> @@ -2160,6 +2160,16 @@ static int lpphy_b2063_tune(struct b43_w
>  	return 0;
>  }
>  
> +static void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
> +	if (on) {
> +		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x7);
> +		b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x7);
> +	} else {
> +		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xFFF8);
> +	}
> +}

You have the if branches swapped. (Don't add a ! in front of the on. Swap the branches).

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Sep 14 21:43:43 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 21:43:43 +0200
Subject: [PATCH] - try2 Add analog switching support for LP PHY based chips
In-Reply-To: <1252955432.4696.17.camel@luzifer.localnet>
References: <1252953894.4696.0.camel@luzifer.localnet>
	<200909142051.21176.mb@bu3sch.de>
	<1252955432.4696.17.camel@luzifer.localnet>
Message-ID: <200909142143.44538.mb@bu3sch.de>

On Monday 14 September 2009 21:10:32 Thomas Ilnseher wrote:
> On Mo, 2009-09-14 at 20:51 +0200, Michael Buesch wrote:
> > On Monday 14 September 2009 20:44:54 Thomas Ilnseher wrote:
> > > 
> > > 
> > 
> > *) Please inline the patch
> > *) Why do you rename b43_phyop_switch_analog_generic? It's "generic", because
> >    it works on the generic PHY0 MMIO register shadow.
> It's renamed to b43_phyop_switch_analog_ag. I reverted that change.
> > *) Please use b43_phy_mask and b43_phy_set.
> didn't know these functions, they come in handy.
> 
> diff -uNr b/drivers/net/wireless/b43/phy_lp.c a/drivers/net/wireless/b43/phy_lp.c
> --- b/drivers/net/wireless/b43/phy_lp.c	2009-09-14 06:14:18.000000000 +0200
> +++ a/drivers/net/wireless/b43/phy_lp.c	2009-09-14 21:03:15.158507573 +0200
> @@ -2228,6 +2228,16 @@
>  	return B43_TXPWR_RES_DONE;
>  }
>  
> +void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
> +	if (on) {
> +		b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
> +	} else {
> +		b43_phy_maskset(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
> +		b43_phy_maskset(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);

Does this even compile??

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Mon Sep 14 21:43:49 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Mon, 14 Sep 2009 21:43:49 +0200
Subject: [PATCH3]Add analog switch support
In-Reply-To: <1252956934.4696.23.camel@luzifer.localnet>
References: <1252956934.4696.23.camel@luzifer.localnet>
Message-ID: <69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>

Always send patches to John Linville, and CC linux-wireless.

On Mon, Sep 14, 2009 at 9:35 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> As I've seen G?bor's patch, I noticed that my previous patch was
> bullshit. This patch should work:
>
> Signed-off-by: Thomas Ilnseher <illth at gmx.de>
>
> diff -uNr b/drivers/net/wireless/b43/phy_lp.c a/drivers/net/wireless/b43/phy_lp.c
> --- b/drivers/net/wireless/b43/phy_lp.c 2009-09-14 06:14:18.000000000 +0200
> +++ a/drivers/net/wireless/b43/phy_lp.c 2009-09-14 21:03:15.158507573 +0200
> @@ -2228,6 +2228,16 @@
> ? ? ? ?return B43_TXPWR_RES_DONE;
> ?}
>
> +void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
> + ? ? ? if (on) {
> + ? ? ? ? ? ? ? b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
> + ? ? ? } else {
> + ? ? ? ? ? ? ? b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
> + ? ? ? ? ? ? ? b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
> + ? ? ? }
> +}
> +
> ?const struct b43_phy_operations b43_phyops_lp = {
> ? ? ? ?.allocate ? ? ? ? ? ? ? = b43_lpphy_op_allocate,
> ? ? ? ?.free ? ? ? ? ? ? ? ? ? = b43_lpphy_op_free,
> @@ -2239,7 +2249,7 @@
> ? ? ? ?.radio_read ? ? ? ? ? ? = b43_lpphy_op_radio_read,
> ? ? ? ?.radio_write ? ? ? ? ? ?= b43_lpphy_op_radio_write,
> ? ? ? ?.software_rfkill ? ? ? ?= b43_lpphy_op_software_rfkill,
> - ? ? ? .switch_analog ? ? ? ? ?= b43_phyop_switch_analog_generic,
> + ? ? ? .switch_analog ? ? ? ? ?= b43_lpphy_op_switch_analog,
> ? ? ? ?.switch_channel ? ? ? ? = b43_lpphy_op_switch_channel,
> ? ? ? ?.get_default_chan ? ? ? = b43_lpphy_op_get_default_chan,
> ? ? ? ?.set_rx_antenna ? ? ? ? = b43_lpphy_op_set_rx_antenna,
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From illth at gmx.de  Mon Sep 14 21:56:23 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 21:56:23 +0200
Subject: [PATCH3]Add analog switch support
In-Reply-To: <69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>
References: <1252956934.4696.23.camel@luzifer.localnet>
	<69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>
Message-ID: <1252958183.4696.25.camel@luzifer.localnet>

On Mo, 2009-09-14 at 21:43 +0200, G?bor Stefanik wrote:
> Always send patches to John Linville, and CC linux-wireless.
Ok, the last try ...

As I've seen G?bor's patch, I noticed that my previous patch was
bullshit. This patch should work:

(see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore)

Signed-off-by: Thomas Ilnseher <illth at gmx.de>

diff -uNr b/drivers/net/wireless/b43/phy_lp.c
a/drivers/net/wireless/b43/phy_lp.c
--- b/drivers/net/wireless/b43/phy_lp.c 2009-09-14 06:14:18.000000000
+0200
+++ a/drivers/net/wireless/b43/phy_lp.c 2009-09-14 21:03:15.158507573
+0200
@@ -2228,6 +2228,16 @@
        return B43_TXPWR_RES_DONE;
 }
 
+void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
+{
+       if (on) {
+               b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
+       } else {
+               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
+               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
+       }
+}
+
 const struct b43_phy_operations b43_phyops_lp = {
        .allocate               = b43_lpphy_op_allocate,
        .free                   = b43_lpphy_op_free,
@@ -2239,7 +2249,7 @@
        .radio_read             = b43_lpphy_op_radio_read,
        .radio_write            = b43_lpphy_op_radio_write,
        .software_rfkill        = b43_lpphy_op_software_rfkill,
-       .switch_analog          = b43_phyop_switch_analog_generic,
+       .switch_analog          = b43_lpphy_op_switch_analog,
        .switch_channel         = b43_lpphy_op_switch_channel,
        .get_default_chan       = b43_lpphy_op_get_default_chan,
        .set_rx_antenna         = b43_lpphy_op_set_rx_antenna,





From Larry.Finger at lwfinger.net  Mon Sep 14 22:18:24 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 14 Sep 2009 15:18:24 -0500
Subject: [PATCH3]Add analog switch support
In-Reply-To: <1252958183.4696.25.camel@luzifer.localnet>
References: <1252956934.4696.23.camel@luzifer.localnet>	
	<69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>
	<1252958183.4696.25.camel@luzifer.localnet>
Message-ID: <4AAEA510.5060606@lwfinger.net>

Thomas Ilnseher wrote:
> On Mo, 2009-09-14 at 21:43 +0200, G?bor Stefanik wrote:
>> Always send patches to John Linville, and CC linux-wireless.
> Ok, the last try ...
> 
> As I've seen G?bor's patch, I noticed that my previous patch was
> bullshit. This patch should work:
> 
> (see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore)
> 
> Signed-off-by: Thomas Ilnseher <illth at gmx.de>
> 

A few points about patch formatting.

The subject of the submittal message should be of the form "[PATCH]
component: Description". For this one, something like "[PATCH] b43:
Add LP PHY analog switch support" would be appropriate. If multiple
versions are needed, indicate that a previous one is superceded by
[PATCH V2] ..., etc.

There should be a line containing --- after the last signed-off-by line.

Anything between the beginning of the e-mail and the --- line becomes
part of the permanent record if the patch is accepted. Usually quoted
material and words like bullshit are avoided. Not always, but usually.

Between the --- line and the start of the patch, you can place
instructions to Linville regarding the circumstances of the patch and
its priority. Such directions are useful to distinguish an improvement
that should wait for the next merge period from a bug fix that should
be sent upstream ASAP. In this case, the patch fixes a system crash on
some platforms and should be applied now.

Larry


From illth at gmx.de  Mon Sep 14 22:22:57 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 22:22:57 +0200
Subject: [PATCH3]Add analog switch support
In-Reply-To: <1252958183.4696.25.camel@luzifer.localnet>
References: <1252956934.4696.23.camel@luzifer.localnet>
	<69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>
	<1252958183.4696.25.camel@luzifer.localnet>
Message-ID: <1252959777.4696.29.camel@luzifer.localnet>

I can now confirm that the patch below DOES compile, and even works.

Here is the dmesg output on my router:

root at OpenWrt:/tmp# dmesg 
b43-phy1: Broadcom 5354 WLAN found (core revision 13)
b43-phy1 debug: Found PHY: Analog 6, Type 5, Revision 0
b43-phy1 debug: Found Radio: Manuf 0x17F, Version 0x2062, Revision 1
phy1: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]
b43 ssb0:3: firmware: requesting b43/ucode13.fw
b43 ssb0:3: firmware: requesting b43/lp0initvals13.fw
b43 ssb0:3: firmware: requesting b43/lp0bsinitvals13.fw
b43-phy1: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy1 debug: b2062: Using crystal tab entry 19200 kHz.
b43-phy1 debug: Chip initialized
b43-phy1 debug: 64-bit DMA initialized
Registered led device: b43-phy1::tx
Registered led device: b43-phy1::rx
b43-phy1 debug: Wireless interface started
b43-phy1 debug: Adding Interface type 2
wlan0: direct probe to AP XXXXXXXX (try 1)
wlan0 direct probe responded
wlan0: authenticate with AP XXXXXXXX (try 1)
wlan0: authenticated
wlan0: associate with AP XXXXXXXX (try 1)
wlan0: RX AssocResp from XXXXXXXX (capab=0x431 status=0 aid=1)
wlan0: associated
b43-phy1 debug: Using hardware based encryption for keyidx: 0, mac: XXXXXXXX


root at OpenWrt:/tmp# iwconfig 2> /dev/null
wlan0     IEEE 802.11bg  ESSID:"tommy"  
          Mode:Managed  Frequency:2.412 GHz  Access Point: XX:XX:XX:XX:XX:XX   
          Bit Rate=11 Mb/s   Tx-Power=20 dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=70/70  Signal level=3 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0





On Mo, 2009-09-14 at 21:56 +0200, Thomas Ilnseher wrote:
> On Mo, 2009-09-14 at 21:43 +0200, G?bor Stefanik wrote:
> > Always send patches to John Linville, and CC linux-wireless.
> Ok, the last try ...
> 
> As I've seen G?bor's patch, I noticed that my previous patch was
> bullshit. This patch should work:
> 
> (see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore)
> 
> Signed-off-by: Thomas Ilnseher <illth at gmx.de>
> 
> diff -uNr b/drivers/net/wireless/b43/phy_lp.c
> a/drivers/net/wireless/b43/phy_lp.c
> --- b/drivers/net/wireless/b43/phy_lp.c 2009-09-14 06:14:18.000000000
> +0200
> +++ a/drivers/net/wireless/b43/phy_lp.c 2009-09-14 21:03:15.158507573
> +0200
> @@ -2228,6 +2228,16 @@
>         return B43_TXPWR_RES_DONE;
>  }
>  
> +void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
> +       if (on) {
> +               b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
> +       } else {
> +               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
> +               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
> +       }
> +}
> +
>  const struct b43_phy_operations b43_phyops_lp = {
>         .allocate               = b43_lpphy_op_allocate,
>         .free                   = b43_lpphy_op_free,
> @@ -2239,7 +2249,7 @@
>         .radio_read             = b43_lpphy_op_radio_read,
>         .radio_write            = b43_lpphy_op_radio_write,
>         .software_rfkill        = b43_lpphy_op_software_rfkill,
> -       .switch_analog          = b43_phyop_switch_analog_generic,
> +       .switch_analog          = b43_lpphy_op_switch_analog,
>         .switch_channel         = b43_lpphy_op_switch_channel,
>         .get_default_chan       = b43_lpphy_op_get_default_chan,
>         .set_rx_antenna         = b43_lpphy_op_set_rx_antenna,
> 
> 
> 



From mb at bu3sch.de  Mon Sep 14 22:47:33 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 22:47:33 +0200
Subject: [PATCH3]Add analog switch support
In-Reply-To: <1252959777.4696.29.camel@luzifer.localnet>
References: <1252956934.4696.23.camel@luzifer.localnet>
	<1252958183.4696.25.camel@luzifer.localnet>
	<1252959777.4696.29.camel@luzifer.localnet>
Message-ID: <200909142247.35562.mb@bu3sch.de>

On Monday 14 September 2009 22:22:57 Thomas Ilnseher wrote:
> I can now confirm that the patch below DOES compile, and even works.

So can you send a version which conforms to our patch submission standards as larry explained?

-- 
Greetings, Michael.


From illth at gmx.de  Mon Sep 14 23:01:33 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Mon, 14 Sep 2009 23:01:33 +0200
Subject: [PATCH] b43: Add LP PHY Analog Switch Support
Message-ID: <1252962093.4696.45.camel@luzifer.localnet>

The current verison of b43 uses "b43_phyop_switch_analog_generic" for A,
G and LP phys.

According to the spec, this is the wrong behaviour for the LP PHY
(see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore )

While no problems on the x86 plattform where seen, this leads to a crash
on the BCM5354 SoC (MIPS 32 LE plattform).
This patch implements the analog switch for LP PHYs according to the
specs. It fixes the crash

signed-off-by: Thomas Ilnseher <illth at gmx.de>
---
diff -uNr b/drivers/net/wireless/b43/phy_lp.c
a/drivers/net/wireless/b43/phy_lp.c
--- b/drivers/net/wireless/b43/phy_lp.c 2009-09-14 06:14:18.000000000 +0200
+++ a/drivers/net/wireless/b43/phy_lp.c 2009-09-14 21:03:15.158507573 +0200
@@ -2228,6 +2228,16 @@
        return B43_TXPWR_RES_DONE;
 }
 
+void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
+{
+       if (on) {
+               b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
+       } else {
+               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
+               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
+       }
+}
+
 const struct b43_phy_operations b43_phyops_lp = {
        .allocate               = b43_lpphy_op_allocate,
        .free                   = b43_lpphy_op_free,
@@ -2239,7 +2249,7 @@
        .radio_read             = b43_lpphy_op_radio_read,
        .radio_write            = b43_lpphy_op_radio_write,
        .software_rfkill        = b43_lpphy_op_software_rfkill,
-       .switch_analog          = b43_phyop_switch_analog_generic,
+       .switch_analog          = b43_lpphy_op_switch_analog,
        .switch_channel         = b43_lpphy_op_switch_channel,
        .get_default_chan       = b43_lpphy_op_get_default_chan,
        .set_rx_antenna         = b43_lpphy_op_set_rx_antenna,



From mb at bu3sch.de  Mon Sep 14 23:07:04 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 23:07:04 +0200
Subject: [PATCH] b43: Add LP PHY Analog Switch Support
In-Reply-To: <1252962093.4696.45.camel@luzifer.localnet>
References: <1252962093.4696.45.camel@luzifer.localnet>
Message-ID: <200909142307.05860.mb@bu3sch.de>

On Monday 14 September 2009 23:01:33 Thomas Ilnseher wrote:
> The current verison of b43 uses "b43_phyop_switch_analog_generic" for A,
> G and LP phys.
> 
> According to the spec, this is the wrong behaviour for the LP PHY
> (see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore )
> 
> While no problems on the x86 plattform where seen, this leads to a crash
> on the BCM5354 SoC (MIPS 32 LE plattform).
> This patch implements the analog switch for LP PHYs according to the
> specs. It fixes the crash
> 
> signed-off-by: Thomas Ilnseher <illth at gmx.de>
> ---
> diff -uNr b/drivers/net/wireless/b43/phy_lp.c
> a/drivers/net/wireless/b43/phy_lp.c
> --- b/drivers/net/wireless/b43/phy_lp.c 2009-09-14 06:14:18.000000000 +0200
> +++ a/drivers/net/wireless/b43/phy_lp.c 2009-09-14 21:03:15.158507573 +0200
> @@ -2228,6 +2228,16 @@
>         return B43_TXPWR_RES_DONE;
>  }
>  
> +void b43_lpphy_op_switch_analog(struct b43_wldev *dev, bool on)
> +{
> +       if (on) {
> +               b43_phy_mask(dev, B43_LPPHY_AFE_CTL_OVR, 0xfff8);
> +       } else {
> +               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0x0007);
> +               b43_phy_set(dev, B43_LPPHY_AFE_CTL_OVR, 0x0007);
> +       }
> +}
> +
>  const struct b43_phy_operations b43_phyops_lp = {
>         .allocate               = b43_lpphy_op_allocate,
>         .free                   = b43_lpphy_op_free,
> @@ -2239,7 +2249,7 @@
>         .radio_read             = b43_lpphy_op_radio_read,
>         .radio_write            = b43_lpphy_op_radio_write,
>         .software_rfkill        = b43_lpphy_op_software_rfkill,
> -       .switch_analog          = b43_phyop_switch_analog_generic,
> +       .switch_analog          = b43_lpphy_op_switch_analog,
>         .switch_channel         = b43_lpphy_op_switch_channel,
>         .get_default_chan       = b43_lpphy_op_get_default_chan,
>         .set_rx_antenna         = b43_lpphy_op_set_rx_antenna,
> 

ack

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Sep 14 23:22:08 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 14 Sep 2009 23:22:08 +0200
Subject: [PATCH] b43: Don't abuse wl->current_dev in the led work
Message-ID: <200909142322.09152.mb@bu3sch.de>

Don't abuse wl->current_dev in the LED work for checking whether we're
going down. Add an explicit variable.
This fixes a crash on rmmod dereferencing the wl->current_dev NULL pointer
in various other places of the driver.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Note to self: Don't try to safe a byte of memory :)


Index: wireless-testing/drivers/net/wireless/b43/leds.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.c	2009-09-14 22:42:05.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.c	2009-09-14 23:15:39.000000000 +0200
@@ -112,10 +112,7 @@ static void b43_led_brightness_set(struc
 	struct b43_led *led = container_of(led_dev, struct b43_led, led_dev);
 	struct b43_wl *wl = led->wl;
 
-	/* The check for current_dev is only needed while unregistering,
-	 * so it is sequencial and does not race. But we must not dereference
-	 * current_dev here. */
-	if (likely(wl->current_dev)) {
+	if (likely(!wl->leds.stop)) {
 		atomic_set(&led->state, brightness);
 		ieee80211_queue_work(wl->hw, &wl->leds.work);
 	}
@@ -314,6 +311,8 @@ void b43_leds_init(struct b43_wldev *dev
 			break;
 		}
 	}
+
+	dev->wl->leds.stop = 0;
 }
 
 void b43_leds_exit(struct b43_wldev *dev)
Index: wireless-testing/drivers/net/wireless/b43/leds.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/leds.h	2009-09-14 22:42:05.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/leds.h	2009-09-14 23:13:38.000000000 +0200
@@ -35,6 +35,7 @@ struct b43_leds {
 	struct b43_led led_radio;
 	struct b43_led led_assoc;
 
+	bool stop;
 	struct work_struct work;
 };
 
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-09-14 23:11:17.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-09-14 23:14:39.000000000 +0200
@@ -4987,7 +4987,7 @@ static void b43_remove(struct ssb_device
 		 * might have modified it. Restoring is important, so the networking
 		 * stack can properly free resources. */
 		wl->hw->queues = wl->mac80211_initially_registered_queues;
-		wl->current_dev = NULL;
+		wl->leds.stop = 1;
 		cancel_work_sync(&wl->leds.work);
 		ieee80211_unregister_hw(wl->hw);
 	}

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Sep 15 00:58:18 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 14 Sep 2009 17:58:18 -0500
Subject: [PATCH] b43: Don't abuse wl->current_dev in the led work
In-Reply-To: <200909142322.09152.mb@bu3sch.de>
References: <200909142322.09152.mb@bu3sch.de>
Message-ID: <4AAECA8A.1060200@lwfinger.net>

Michael Buesch wrote:
> Don't abuse wl->current_dev in the LED work for checking whether we're
> going down. Add an explicit variable.
> This fixes a crash on rmmod dereferencing the wl->current_dev NULL pointer
> in various other places of the driver.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>

This patch does not apply. What other patches should I have beyond the
current state of wireless-testing?

Larry


From dlenski at gmail.com  Tue Sep 15 02:45:38 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Mon, 14 Sep 2009 20:45:38 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and 
	508.102)
In-Reply-To: <1252013129.6667.84.camel@basashi>
References: <1252010952.6667.74.camel@basashi> <4AA03181.3060702@lwfinger.net>
	<1252013129.6667.84.camel@basashi>
Message-ID: <53e1ea310909141745v7d276d70u89edd3eae9e276b4@mail.gmail.com>

On Thu, Sep 3, 2009 at 5:25 PM, Daniel Lenski <dlenski at gmail.com> wrote:
> I have not found any other source of these, unfortunately. ?I am happy
> to send the extracted firmware to developers off-list if desired.
> Linksys's less-than-helpful GPL source code page gives no indication of
> the age or date of the various files, so it's hard for me to tell which
> might be newer without downloading many Gb and extracting many
> firmwares. ?I have half a mind to write a Python script...

Hi all,

Since starting this thread, I've search around more to find b43
firmware.  I wrote a script to automatically download, unpack, and
scour each and every one of the Linksys GPL packages
(http://www.linksysbycisco.com/US/en/supportgplcode) for firmware.

I found some interesting things in the process, including several new
firmware versions.  Perhaps most interestingly, I found  Broadcom WL
drivers built for a 2.6.x kernel.  If you grab the file
WAG54GX2_A_v1009_UK_GPL.tgz from Linksys, there's a file
src.GPL/driver/2.6.8.1/extra/wl.ko containing firmware.  Very
intriguing.

Also, I wrote a pure-Python version of b43-fwcutter (attached) to
facilitate this automated firmware extraction, based on mklist.py.
Just point it at a binary containing firmware, and it will (a) find
the firmware in the manner of mklist.py, and (b) extract it in the
manner of b43-fwcutter.c.  It produces identical firmware files as the
C version of b43-fwcutter, and may be useful if experimenting with
different firmware versions.

In the process of writing the Python code, I think I found an
endian-related bug in b43-fwcutter.c.  It mangles the byte order of
firmware instructions and as a result the analyse_ucode() routine
doesn't find the firmware version information on little-endian hosts.
I can submit a patch for that as well, if interested.  But the bug is
fixed in my Python implementation, which you can try out.

Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: b43_fwcutter.py
Type: application/octet-stream
Size: 9860 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090914/c00102ef/attachment.obj>

From Larry.Finger at lwfinger.net  Tue Sep 15 05:01:33 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 14 Sep 2009 22:01:33 -0500
Subject: b43-fwcutter patch for new firmware versions (508.1107 and
	508.102)
In-Reply-To: <53e1ea310909141745v7d276d70u89edd3eae9e276b4@mail.gmail.com>
References: <1252010952.6667.74.camel@basashi>
	<4AA03181.3060702@lwfinger.net>	<1252013129.6667.84.camel@basashi>
	<53e1ea310909141745v7d276d70u89edd3eae9e276b4@mail.gmail.com>
Message-ID: <4AAF038D.1050808@lwfinger.net>

Daniel Lenski wrote:
> On Thu, Sep 3, 2009 at 5:25 PM, Daniel Lenski <dlenski at gmail.com> wrote:
>> I have not found any other source of these, unfortunately.  I am happy
>> to send the extracted firmware to developers off-list if desired.
>> Linksys's less-than-helpful GPL source code page gives no indication of
>> the age or date of the various files, so it's hard for me to tell which
>> might be newer without downloading many Gb and extracting many
>> firmwares.  I have half a mind to write a Python script...
> 
> Hi all,
> 
> Since starting this thread, I've search around more to find b43
> firmware.  I wrote a script to automatically download, unpack, and
> scour each and every one of the Linksys GPL packages
> (http://www.linksysbycisco.com/US/en/supportgplcode) for firmware.
> 
> I found some interesting things in the process, including several new
> firmware versions.  Perhaps most interestingly, I found  Broadcom WL
> drivers built for a 2.6.x kernel.  If you grab the file
> WAG54GX2_A_v1009_UK_GPL.tgz from Linksys, there's a file
> src.GPL/driver/2.6.8.1/extra/wl.ko containing firmware.  Very
> intriguing.
> 
> Also, I wrote a pure-Python version of b43-fwcutter (attached) to
> facilitate this automated firmware extraction, based on mklist.py.
> Just point it at a binary containing firmware, and it will (a) find
> the firmware in the manner of mklist.py, and (b) extract it in the
> manner of b43-fwcutter.c.  It produces identical firmware files as the
> C version of b43-fwcutter, and may be useful if experimenting with
> different firmware versions.
> 
> In the process of writing the Python code, I think I found an
> endian-related bug in b43-fwcutter.c.  It mangles the byte order of
> firmware instructions and as a result the analyse_ucode() routine
> doesn't find the firmware version information on little-endian hosts.
> I can submit a patch for that as well, if interested.  But the bug is
> fixed in my Python implementation, which you can try out.

I tried it on the file above and got the following:

finger at larrylap:~/WAG54GX2> ~/sprom/b43_fwcutter.py
src.GPL/driver/2.6.8.1/extra/wl.ko
Firmware md5sum is 4f1218df93c23b4e27c83cb208031a1d...
Extracting a0g0bsinitvals2 of length 0x10 from offset 0x52A4C...
Traceback (most recent call last):
  File "/home/finger/sprom/b43_fwcutter.py", line 267, in <module>
    extract_firmware(fd, extract, options.endian, outfn)
  File "/home/finger/sprom/b43_fwcutter.py", line 197, in extract_firmware
    buf, n = build_ivs(buf, endian)
  File "/home/finger/sprom/b43_fwcutter.py", line 169, in build_ivs
    assert biv.size in (2,4)
AssertionError




From dlenski at gmail.com  Tue Sep 15 05:20:25 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Mon, 14 Sep 2009 23:20:25 -0400
Subject: b43-fwcutter patch for new firmware versions (508.1107 and 
	508.102)
In-Reply-To: <4AAF038D.1050808@lwfinger.net>
References: <1252010952.6667.74.camel@basashi>
	<4AA03181.3060702@lwfinger.net>	<1252013129.6667.84.camel@basashi>
	<53e1ea310909141745v7d276d70u89edd3eae9e276b4@mail.gmail.com>
	<4AAF038D.1050808@lwfinger.net>
Message-ID: <1252984825.9538.6.camel@dlenski-laptop>

On Mon, 2009-09-14 at 22:01 -0500, Larry Finger wrote:
> I tried it on the file above and got the following:
> 
> finger at larrylap:~/WAG54GX2> ~/sprom/b43_fwcutter.py
> src.GPL/driver/2.6.8.1/extra/wl.ko
> Firmware md5sum is 4f1218df93c23b4e27c83cb208031a1d...
> Extracting a0g0bsinitvals2 of length 0x10 from offset 0x52A4C...
> Traceback (most recent call last):
>   File "/home/finger/sprom/b43_fwcutter.py", line 267, in <module>
>     extract_firmware(fd, extract, options.endian, outfn)
>   File "/home/finger/sprom/b43_fwcutter.py", line 197, in extract_firmware
>     buf, n = build_ivs(buf, endian)
>   File "/home/finger/sprom/b43_fwcutter.py", line 169, in build_ivs
>     assert biv.size in (2,4)
> AssertionError
> 

Oh, sorry... run it with the -b option to indicate that the binary is
big-endian.

You can see the command-line options with --help.  Also, I've attached
my script to downloads and inspect /all/ the firmware from the Linksys
site.  (Warning: ugly, hackish code to handle ugly, ridiculously
organized archives.)

Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: b43_fwfinder.py
Type: text/x-python
Size: 6063 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090914/5c6514a6/attachment.py>

From mb at bu3sch.de  Tue Sep 15 11:49:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 15 Sep 2009 11:49:19 +0200
Subject: [PATCH] b43: Don't abuse wl->current_dev in the led work
In-Reply-To: <4AAECA8A.1060200@lwfinger.net>
References: <200909142322.09152.mb@bu3sch.de> <4AAECA8A.1060200@lwfinger.net>
Message-ID: <200909151149.22565.mb@bu3sch.de>

On Tuesday 15 September 2009 00:58:18 Larry Finger wrote:
> Michael Buesch wrote:
> > Don't abuse wl->current_dev in the LED work for checking whether we're
> > going down. Add an explicit variable.
> > This fixes a crash on rmmod dereferencing the wl->current_dev NULL pointer
> > in various other places of the driver.
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> This patch does not apply. What other patches should I have beyond the
> current state of wireless-testing?

All patches that are currently queued up.


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Sep 15 15:27:37 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 15 Sep 2009 08:27:37 -0500
Subject: [PATCH] b43: Don't abuse wl->current_dev in the led work
In-Reply-To: <200909151149.22565.mb@bu3sch.de>
References: <200909142322.09152.mb@bu3sch.de> <4AAECA8A.1060200@lwfinger.net>
	<200909151149.22565.mb@bu3sch.de>
Message-ID: <4AAF9649.4080409@lwfinger.net>

Michael Buesch wrote:
> On Tuesday 15 September 2009 00:58:18 Larry Finger wrote:
>> Michael Buesch wrote:
>>> Don't abuse wl->current_dev in the LED work for checking whether we're
>>> going down. Add an explicit variable.
>>> This fixes a crash on rmmod dereferencing the wl->current_dev NULL pointer
>>> in various other places of the driver.
>>>
>>> Signed-off-by: Michael Buesch <mb at bu3sch.de>
>> This patch does not apply. What other patches should I have beyond the
>> current state of wireless-testing?
> 
> All patches that are currently queued up.

I found the ones I needed in my mailboxes.

The patch cured my problem. Thanks and ack.

Larry


From linville at tuxdriver.com  Tue Sep 15 14:57:35 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Tue, 15 Sep 2009 08:57:35 -0400
Subject: [PATCH3]Add analog switch support
In-Reply-To: <4AAEA510.5060606@lwfinger.net>
References: <1252956934.4696.23.camel@luzifer.localnet>
	<69e28c910909141243i5551c87bsfd0c9e767cfa254@mail.gmail.com>
	<1252958183.4696.25.camel@luzifer.localnet>
	<4AAEA510.5060606@lwfinger.net>
Message-ID: <20090915125734.GA2651@tuxdriver.com>

On Mon, Sep 14, 2009 at 03:18:24PM -0500, Larry Finger wrote:
> Thomas Ilnseher wrote:
> > On Mo, 2009-09-14 at 21:43 +0200, G?bor Stefanik wrote:
> >> Always send patches to John Linville, and CC linux-wireless.
> > Ok, the last try ...
> > 
> > As I've seen G?bor's patch, I noticed that my previous patch was
> > bullshit. This patch should work:
> > 
> > (see: http://bcm-v4.sipsolutions.net/802.11/PHY/Anacore)
> > 
> > Signed-off-by: Thomas Ilnseher <illth at gmx.de>
> > 
> 
> A few points about patch formatting.
> 
> The subject of the submittal message should be of the form "[PATCH]
> component: Description". For this one, something like "[PATCH] b43:
> Add LP PHY analog switch support" would be appropriate. If multiple
> versions are needed, indicate that a previous one is superceded by
> [PATCH V2] ..., etc.
> 
> There should be a line containing --- after the last signed-off-by line.
> 
> Anything between the beginning of the e-mail and the --- line becomes
> part of the permanent record if the patch is accepted. Usually quoted
> material and words like bullshit are avoided. Not always, but usually.
> 
> Between the --- line and the start of the patch, you can place
> instructions to Linville regarding the circumstances of the patch and
> its priority. Such directions are useful to distinguish an improvement
> that should wait for the next merge period from a bug fix that should
> be sent upstream ASAP. In this case, the patch fixes a system crash on
> some platforms and should be applied now.

Above is a good summary.  I usually refer people here (which has
mostly the same information):

	http://linux.yyz.us/patch-format.html

Hth!

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From dlenski at gmail.com  Tue Sep 15 20:51:22 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Tue, 15 Sep 2009 14:51:22 -0400
Subject: [PATCH] b43-fwcutter: endian bug prevents ucode_analyse from
	working properly on LE hosts
Message-ID: <1253040682.5493.49.camel@basashi>

I mentioned this bug previously.  Here's the basic explanation of what's
wrong with the current code in fwcutter.c:

     1. Consider a little-endian binary containing ucode firmware.  Each
        8-byte instruction is stored with byte order 01234567 (with 0
        being the least significant byte.)
     2. In extract_or_identify(), the byte order is
        reversed /32-bit-wise/ since the b43 driver expects big-endian
        32-bit integers.  After this transformation, the instructions
        are stored with byte order 32107654.
     3. In disasm_ucode_1(),  disasm_ucode_2(), disasm_ucode_3(), the
        upper and lower halves of the instruction are swapped.  Now the
        instruction's byte order is 76543210.
     4. These routines treat the instruction as a *NATIVE* 64-bit
        integer, and break it down into bitfields.  The byte order is
        correct on big-endian hosts, but completely reversed for
        little-endians hosts.

The source is quite confusing because it manipulates the ucode as 4-byte
quantities for purposes of output endianness, but then tries to analyze
them as 8-byte instructions.  This is presumably the source of the bug.

My patch avoids reordering the ucode endianness until after running
analyse_ucode() to extract version information.  It passes the firmware
flags to analyse_ucode() so that it can correctly convert each
instruction to a native-endian 64-bit integer.

TO TEST THIS PATCH: try extracting firmware FW13 on a little-endian
host.  The unpatched b43-fwcutter will not identify ucode
version/revision/date/time, but with this patch it will.

Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: fwcutter.c.patch
Type: text/x-patch
Size: 3335 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090915/2d254cb4/attachment.bin>

From dlenski at gmail.com  Tue Sep 15 20:59:03 2009
From: dlenski at gmail.com (Daniel Lenski)
Date: Tue, 15 Sep 2009 14:59:03 -0400
Subject: [PATCH] b43-fwcutter: endian bug prevents ucode_analyse from
	working properly on LE hosts
In-Reply-To: <1253040682.5493.49.camel@basashi>
References: <1253040682.5493.49.camel@basashi>
Message-ID: <1253041143.5493.54.camel@basashi>

I should mention that the patch also doubles the seconds field of the
firmware build time reported by ucode_analyse().

I did this because only 5 bits are used for this field.  I think that
the time format is the standard MS-DOS file modification time format in
which the time is reported in 2 second granularity to fit it into a
16-bit quantity (5 bits for the hour, 6 bits for the minute, 5 bits for
the seconds **DIVIDED BY 2**).

Dan



From illth at gmx.de  Wed Sep 16 00:07:55 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 00:07:55 +0200
Subject: [PATCH - RFC] Add lpphy_update_tx_power_npt for LP PHY
Message-ID: <1253052475.4657.4.camel@luzifer.localnet>

Hello Michael, G?bor & Larry,

I tried to implement the lpphy_update_tx_power_npt function according to
the specs. Please review this patch (I don't want to annoy Linville with
100 different versions of this patch).

Please note: I can verify it compiles, but it is UNTESTED (right now,
lack of time. Will do that tomorrow)

SPECS: http://bcm-v4.sipsolutions.net/802.11/PHY/LP/ClearTXPowerOffsets

---
diff -uNr compat-wireless-2009-09-15/drivers/net/wireless/b43/b43.h compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/b43.h
--- compat-wireless-2009-09-15/drivers/net/wireless/b43/b43.h	2009-09-15 06:13:53.000000000 +0200
+++ compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/b43.h	2009-09-15 23:35:02.651859159 +0200
@@ -255,7 +255,10 @@
 #define B43_SHM_SH_MAXBFRAMES		0x0080	/* Maximum number of frames in a burst */
 #define B43_SHM_SH_SPUWKUP		0x0094	/* pre-wakeup for synth PU in us */
 #define B43_SHM_SH_PRETBTT		0x0096	/* pre-TBTT in us */
-
+/* MAC Statistics */
+#define B43_SHM_SH_TX_FRAMES_SENT	0x00E0	/* # TX Frames sent */
+#define B43_SHM_SH_TX_RTS		0x00E2	/* # TX RTS */
+#define B43_SHM_SH_TX_CTS		0x00E4	/* # TX CTS */
 /* SHM_SCRATCH offsets */
 #define B43_SHM_SC_MINCONT		0x0003	/* Minimum contention window */
 #define B43_SHM_SC_MAXCONT		0x0004	/* Maximum contention window */
diff -uNr compat-wireless-2009-09-15/drivers/net/wireless/b43/phy_lp.c compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/phy_lp.c
--- compat-wireless-2009-09-15/drivers/net/wireless/b43/phy_lp.c	2009-09-15 06:13:53.000000000 +0200
+++ compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/phy_lp.c	2009-09-16 00:00:20.712857949 +0200
@@ -1103,6 +1103,28 @@
 			(u16)~B43_LPPHY_TX_PWR_CTL_CMD_MODE, ctl);
 }
 
+static void lpphy_update_tx_power_npt(struct b43_wldev *dev)
+{
+	u16 tx_cnt;
+	u16 npt;
+	u16 s3;
+
+	s3 = b43_shm_read16(dev, B43_SHM_SHARED, B43_SHM_SH_TX_FRAMES_SENT);
+	tx_cnt = s3 - dev->phy.lp->tssi_tx_count;
+	npt = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_NNUM) & 0x700) >> 8;
+
+	if ((1 << (npt & 0x1F)) >= tx_cnt)
+		return;
+	/* NB: Spec says do the stuff if xxx < tx_cnt, so return on xxx > txcnt */
+	dev->phy.lp->tssi_tx_count = s3;
+	if (npt < 7) {
+		npt++;
+		b43_phy_maskset(dev, B43_LPPHY_TX_PWR_CTL_NNUM, 0xF8FF, (npt << 8));
+	}
+	dev->phy.lp->tssi_npt = npt;
+	dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
+}
+
 static void lpphy_set_tx_power_control(struct b43_wldev *dev,
 				       enum b43_lpphy_txpctl_mode mode)
 {
@@ -1116,7 +1138,7 @@
 	lpphy->txpctl_mode = mode;
 
 	if (oldmode == B43_LPPHY_TXPCTL_HW) {
-		//TODO Update TX Power NPT
+		lpphy_update_tx_power_npt(dev);
 		//TODO Clear all TX Power offsets
 	} else {
 		if (mode == B43_LPPHY_TXPCTL_HW) {





From mb at bu3sch.de  Wed Sep 16 00:24:12 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 16 Sep 2009 00:24:12 +0200
Subject: [PATCH] b43: fix build error if !CONFIG_B43_LEDS
In-Reply-To: <1253046774-14416-1-git-send-email-albert_herranz@yahoo.es>
References: <1253046774-14416-1-git-send-email-albert_herranz@yahoo.es>
Message-ID: <200909160024.15475.mb@bu3sch.de>

On Tuesday 15 September 2009 22:32:54 Albert Herranz wrote:
> Fix the following build error when CONFIG_B43_LEDS is not selected:
> 
> drivers/net/wireless/b43/main.c: In function 'b43_remove':
> drivers/net/wireless/b43/main.c:4990: error: 'struct b43_leds' has no member named 'stop'
> drivers/net/wireless/b43/main.c:4991: error: 'struct b43_leds' has no member named 'work'
> make[4]: *** [drivers/net/wireless/b43/main.o] Error 1
> 
> Signed-off-by: Albert Herranz <albert_herranz at yahoo.es>
> ---
>  drivers/net/wireless/b43/leds.c |    8 ++++++++
>  drivers/net/wireless/b43/leds.h |    4 ++++
>  drivers/net/wireless/b43/main.c |    3 +--
>  3 files changed, 13 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/net/wireless/b43/leds.c b/drivers/net/wireless/b43/leds.c
> index fbe31e0..fbe3d4f 100644
> --- a/drivers/net/wireless/b43/leds.c
> +++ b/drivers/net/wireless/b43/leds.c
> @@ -325,6 +325,14 @@ void b43_leds_exit(struct b43_wldev *dev)
>  	b43_led_turn_off(dev, leds->led_radio.index, leds->led_radio.activelow);
>  }
>  
> +void b43_leds_stop(struct b43_wldev *dev)
> +{
> +	struct b43_leds *leds = &dev->wl->leds;
> +
> +	leds->stop = 1;
> +	cancel_work_sync(&leds->work);
> +}
> +
>  void b43_leds_register(struct b43_wldev *dev)
>  {
>  	unsigned int i;
> diff --git a/drivers/net/wireless/b43/leds.h b/drivers/net/wireless/b43/leds.h
> index 49d3da5..9592e4c 100644
> --- a/drivers/net/wireless/b43/leds.h
> +++ b/drivers/net/wireless/b43/leds.h
> @@ -63,6 +63,7 @@ void b43_leds_register(struct b43_wldev *dev);
>  void b43_leds_unregister(struct b43_wldev *dev);
>  void b43_leds_init(struct b43_wldev *dev);
>  void b43_leds_exit(struct b43_wldev *dev);
> +void b43_leds_stop(struct b43_wldev *dev);
>  
>  
>  #else /* CONFIG_B43_LEDS */
> @@ -84,6 +85,9 @@ static inline void b43_leds_init(struct b43_wldev *dev)
>  static inline void b43_leds_exit(struct b43_wldev *dev)
>  {
>  }
> +static inline void b43_leds_stop(struct b43_wldev *dev)
> +{
> +}
>  #endif /* CONFIG_B43_LEDS */
>  
>  #endif /* B43_LEDS_H_ */
> diff --git a/drivers/net/wireless/b43/main.c b/drivers/net/wireless/b43/main.c
> index a8840ef..6c0ea21 100644
> --- a/drivers/net/wireless/b43/main.c
> +++ b/drivers/net/wireless/b43/main.c
> @@ -4987,8 +4987,7 @@ static void b43_remove(struct ssb_device *dev)
>  		 * might have modified it. Restoring is important, so the networking
>  		 * stack can properly free resources. */
>  		wl->hw->queues = wl->mac80211_initially_registered_queues;
> -		wl->leds.stop = 1;
> -		cancel_work_sync(&wl->leds.work);
> +		b43_leds_stop(wldev);
>  		ieee80211_unregister_hw(wl->hw);
>  	}
>  

ACK

-- 
Greetings, Michael.


From mb at bu3sch.de  Wed Sep 16 00:26:19 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 16 Sep 2009 00:26:19 +0200
Subject: [PATCH] b43: fix build error if !CONFIG_B43_LEDS
Message-ID: <200909160026.21404.mb@bu3sch.de>

From: Albert Herranz <albert_herranz at yahoo.es>

Fix the following build error when CONFIG_B43_LEDS is not selected:

drivers/net/wireless/b43/main.c: In function 'b43_remove':
drivers/net/wireless/b43/main.c:4990: error: 'struct b43_leds' has no member named 'stop'
drivers/net/wireless/b43/main.c:4991: error: 'struct b43_leds' has no member named 'work'
make[4]: *** [drivers/net/wireless/b43/main.o] Error 1

Signed-off-by: Albert Herranz <albert_herranz at yahoo.es>
Signed-off-by: Michael Buesch <mb at bu3sch.de>

---
 drivers/net/wireless/b43/leds.c |    8 ++++++++
 drivers/net/wireless/b43/leds.h |    4 ++++
 drivers/net/wireless/b43/main.c |    3 +--
 3 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/b43/leds.c b/drivers/net/wireless/b43/leds.c
index fbe31e0..fbe3d4f 100644
--- a/drivers/net/wireless/b43/leds.c
+++ b/drivers/net/wireless/b43/leds.c
@@ -325,6 +325,14 @@ void b43_leds_exit(struct b43_wldev *dev)
 	b43_led_turn_off(dev, leds->led_radio.index, leds->led_radio.activelow);
 }
 
+void b43_leds_stop(struct b43_wldev *dev)
+{
+	struct b43_leds *leds = &dev->wl->leds;
+
+	leds->stop = 1;
+	cancel_work_sync(&leds->work);
+}
+
 void b43_leds_register(struct b43_wldev *dev)
 {
 	unsigned int i;
diff --git a/drivers/net/wireless/b43/leds.h b/drivers/net/wireless/b43/leds.h
index 49d3da5..9592e4c 100644
--- a/drivers/net/wireless/b43/leds.h
+++ b/drivers/net/wireless/b43/leds.h
@@ -63,6 +63,7 @@ void b43_leds_register(struct b43_wldev *dev);
 void b43_leds_unregister(struct b43_wldev *dev);
 void b43_leds_init(struct b43_wldev *dev);
 void b43_leds_exit(struct b43_wldev *dev);
+void b43_leds_stop(struct b43_wldev *dev);
 
 
 #else /* CONFIG_B43_LEDS */
@@ -84,6 +85,9 @@ static inline void b43_leds_init(struct b43_wldev *dev)
 static inline void b43_leds_exit(struct b43_wldev *dev)
 {
 }
+static inline void b43_leds_stop(struct b43_wldev *dev)
+{
+}
 #endif /* CONFIG_B43_LEDS */
 
 #endif /* B43_LEDS_H_ */
diff --git a/drivers/net/wireless/b43/main.c b/drivers/net/wireless/b43/main.c
index a8840ef..6c0ea21 100644
--- a/drivers/net/wireless/b43/main.c
+++ b/drivers/net/wireless/b43/main.c
@@ -4987,8 +4987,7 @@ static void b43_remove(struct ssb_device *dev)
 		 * might have modified it. Restoring is important, so the networking
 		 * stack can properly free resources. */
 		wl->hw->queues = wl->mac80211_initially_registered_queues;
-		wl->leds.stop = 1;
-		cancel_work_sync(&wl->leds.work);
+		b43_leds_stop(wldev);
 		ieee80211_unregister_hw(wl->hw);
 	}
 

-- 
Greetings, Michael.


From mb at bu3sch.de  Wed Sep 16 01:13:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 16 Sep 2009 01:13:57 +0200
Subject: [PATCH] b43: Remove BROKEN attribute from SDIO
Message-ID: <200909160113.57539.mb@bu3sch.de>

SDIO works (more or less), so remove the BROKEN dependency and
let people test it.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

This patch depends on all other patches that I already sent but are not applied, yet.


Index: wireless-testing/drivers/net/wireless/b43/Kconfig
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Kconfig	2009-09-16 01:09:48.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/Kconfig	2009-09-16 01:10:02.000000000 +0200
@@ -63,7 +63,7 @@ config B43_PCMCIA
 
 config B43_SDIO
 	bool "Broadcom 43xx SDIO device support (EXPERIMENTAL)"
-	depends on B43 && SSB_SDIOHOST_POSSIBLE && EXPERIMENTAL && BROKEN
+	depends on B43 && SSB_SDIOHOST_POSSIBLE && EXPERIMENTAL
 	select SSB_SDIOHOST
 	---help---
 	  Broadcom 43xx device support for Soft-MAC SDIO devices.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Wed Sep 16 05:02:29 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 15 Sep 2009 22:02:29 -0500
Subject: [PATCH - RFC] Add lpphy_update_tx_power_npt for LP PHY
In-Reply-To: <1253052475.4657.4.camel@luzifer.localnet>
References: <1253052475.4657.4.camel@luzifer.localnet>
Message-ID: <4AB05545.7030900@lwfinger.net>

Thomas Ilnseher wrote:
> Hello Michael, G?bor & Larry,
> 
> I tried to implement the lpphy_update_tx_power_npt function according to
> the specs. Please review this patch (I don't want to annoy Linville with
> 100 different versions of this patch).
> 
> Please note: I can verify it compiles, but it is UNTESTED (right now,
> lack of time. Will do that tomorrow)
> 
> SPECS: http://bcm-v4.sipsolutions.net/802.11/PHY/LP/ClearTXPowerOffsets

I think you want to reference
http://bcm-v4.sipsolutions.net/802.11/PHY/LP/TXPwrUpdateNpt

Your mailer mangled the patches - it ended up as stuff like this:

SGVsbG8gTWljaGFlbCwgR8OhYm9yICYgTGFycnksCgpJIHRyaWVkIHRvIGltcGxlbWVudCB0aGUg
bHBwaHlfdXBkYXRlX3R4X3Bvd2VyX25wdCBmdW5jdGlvbiBhY2NvcmRpbmcgdG8KdGhlIHNwZWNz
LiBQbGVhc2UgcmV2aWV3IHRoaXMgcGF0Y2ggKEkgZG9uJ3Qgd2FudCB0byBhbm5veSBMaW52aWxs
ZSB3aXRoCjEwMCBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhpcyBwYXRjaCkuCgpQbGVhc2Ugbm90

Be certain that your mailer is sending plain text.

The routine matches the spec. It doesn't help the speed of
transmission, but it does no harm.

Larry



From illth at gmx.de  Wed Sep 16 21:25:58 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 21:25:58 +0200
Subject: [PATCH 0/2] b43: improve TX power handling for LP PHYs
Message-ID: <1253129158.2989.34.camel@note>

I implemented the functions:
"lpphy_update_tx_power_npt"
and
"lpphy_set_tx_power_control",

and together, both improve the bitrate of my device:


wlan0     IEEE 802.11bg  ESSID:"tommy"  
          Mode:Managed  Frequency:2.412 GHz  Access Point: XXX 
          Bit Rate=54 Mb/s   Tx-Power=20 dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=70/70  Signal level=10 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

without these patches, I maxed out at about 24 Mbit/s.





From illth at gmx.de  Wed Sep 16 21:27:16 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 21:27:16 +0200
Subject: [PATCH 1/2] b43: Add lpphy_update_tx_power_npt function to improve
	TX power handling on LP PHYs
Message-ID: <1253129236.2989.37.camel@note>

The lpphy_update_tx_power_npt routine is currently missing in the code.

I added the routine according to the specs.

Signed-off-by: Thomas Ilnseher <illth at gmx.de>
---
diff -uNr compat-wireless-2009-09-15/drivers/net/wireless/b43/b43.h compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/b43.h
--- compat-wireless-2009-09-15/drivers/net/wireless/b43/b43.h	2009-09-15 06:13:53.000000000 +0200
+++ compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/b43.h	2009-09-15 23:35:02.651859159 +0200
@@ -255,7 +255,10 @@
 #define B43_SHM_SH_MAXBFRAMES		0x0080	/* Maximum number of frames in a burst */
 #define B43_SHM_SH_SPUWKUP		0x0094	/* pre-wakeup for synth PU in us */
 #define B43_SHM_SH_PRETBTT		0x0096	/* pre-TBTT in us */
-
+/* MAC Statistics */
+#define B43_SHM_SH_TX_FRAMES_SENT	0x00E0	/* # TX Frames sent */
+#define B43_SHM_SH_TX_RTS		0x00E2	/* # TX RTS */
+#define B43_SHM_SH_TX_CTS		0x00E4	/* # TX CTS */
 /* SHM_SCRATCH offsets */
 #define B43_SHM_SC_MINCONT		0x0003	/* Minimum contention window */
 #define B43_SHM_SC_MAXCONT		0x0004	/* Maximum contention window */
diff -uNr compat-wireless-2009-09-15/drivers/net/wireless/b43/phy_lp.c compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/phy_lp.c
--- compat-wireless-2009-09-15/drivers/net/wireless/b43/phy_lp.c	2009-09-15 06:13:53.000000000 +0200
+++ compat-wireless-2009-09-15.mod/drivers/net/wireless/b43/phy_lp.c	2009-09-16 00:00:20.712857949 +0200
@@ -1103,6 +1103,28 @@
 			(u16)~B43_LPPHY_TX_PWR_CTL_CMD_MODE, ctl);
 }
 
+static void lpphy_update_tx_power_npt(struct b43_wldev *dev)
+{
+	u16 tx_cnt;
+	u16 npt;
+	u16 s3;
+
+	s3 = b43_shm_read16(dev, B43_SHM_SHARED, B43_SHM_SH_TX_FRAMES_SENT);
+	tx_cnt = s3 - dev->phy.lp->tssi_tx_count;
+	npt = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_NNUM) & 0x700) >> 8;
+
+	if ((1 << (npt & 0x1F)) >= tx_cnt)
+		return;
+	/* NB: Spec says do the stuff if xxx < tx_cnt, so return on xxx > txcnt */
+	dev->phy.lp->tssi_tx_count = s3;
+	if (npt < 7) {
+		npt++;
+		b43_phy_maskset(dev, B43_LPPHY_TX_PWR_CTL_NNUM, 0xF8FF, (npt << 8));
+	}
+	dev->phy.lp->tssi_npt = npt;
+	dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
+}
+
 static void lpphy_set_tx_power_control(struct b43_wldev *dev,
 				       enum b43_lpphy_txpctl_mode mode)
 {
@@ -1116,7 +1138,7 @@
 	lpphy->txpctl_mode = mode;
 
 	if (oldmode == B43_LPPHY_TXPCTL_HW) {
-		//TODO Update TX Power NPT
+		lpphy_update_tx_power_npt(dev);
 		//TODO Clear all TX Power offsets
 	} else {
 		if (mode == B43_LPPHY_TXPCTL_HW) {




From illth at gmx.de  Wed Sep 16 21:37:59 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 21:37:59 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve TX
	Power handling
Message-ID: <1253129879.2989.48.camel@note>

This patch adds the lpphy_clear_tx_power_offsets to b43.

Signed-off-by: Thomas Ilnseher <illth at gmx.de>

---
diff -uNr a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
--- a/drivers/net/wireless/b43/phy_lp.c	2009-09-16 20:52:17.501318374 +0200
+++ b/drivers/net/wireless/b43/phy_lp.c	2009-09-16 20:53:36.593319452 +0200
@@ -1125,6 +1125,18 @@
 	dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
 }
 
+static void lpphy_clear_tx_power_offsets(struct b43_wldev *dev)
+{
+	int i;
+	int id = 7;
+	if (dev->phy.rev < 2)
+		id = 10;
+	for (i = 0; i < 12; i++)
+		b43_lptab_write(dev, B43_LPTAB32(id, 0x40 + i), 0);
+	for (i = 0; i < 64; i++)
+		b43_lptab_write(dev, B43_LPTAB32(id, 0x80 + i), 0);
+}
+
 static void lpphy_set_tx_power_control(struct b43_wldev *dev,
 				       enum b43_lpphy_txpctl_mode mode)
 {
@@ -1139,7 +1151,7 @@
 
 	if (oldmode == B43_LPPHY_TXPCTL_HW) {
 		lpphy_update_tx_power_npt(dev);
-		//TODO Clear all TX Power offsets
+		lpphy_clear_tx_power_offsets(dev);
 	} else {
 		if (mode == B43_LPPHY_TXPCTL_HW) {
 			//TODO Recalculate target TX power



From netrolller.3d at gmail.com  Wed Sep 16 21:40:52 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Wed, 16 Sep 2009 21:40:52 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve TX 
	Power handling
In-Reply-To: <1253129879.2989.48.camel@note>
References: <1253129879.2989.48.camel@note>
Message-ID: <69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com>

You are essentially implementing dead code at this point - this will
only ever be called if hardware-accelerated TX power control is
enabled - and HW TX power control is unsupported, even for G-PHYs.

On Wed, Sep 16, 2009 at 9:37 PM, Thomas Ilnseher <illth at gmx.de> wrote:
> This patch adds the lpphy_clear_tx_power_offsets to b43.
>
> Signed-off-by: Thomas Ilnseher <illth at gmx.de>
>
> ---
> diff -uNr a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
> --- a/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:52:17.501318374 +0200
> +++ b/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:53:36.593319452 +0200
> @@ -1125,6 +1125,18 @@
> ? ? ? ?dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
> ?}
>
> +static void lpphy_clear_tx_power_offsets(struct b43_wldev *dev)
> +{
> + ? ? ? int i;
> + ? ? ? int id = 7;
> + ? ? ? if (dev->phy.rev < 2)
> + ? ? ? ? ? ? ? id = 10;
> + ? ? ? for (i = 0; i < 12; i++)
> + ? ? ? ? ? ? ? b43_lptab_write(dev, B43_LPTAB32(id, 0x40 + i), 0);
> + ? ? ? for (i = 0; i < 64; i++)
> + ? ? ? ? ? ? ? b43_lptab_write(dev, B43_LPTAB32(id, 0x80 + i), 0);
> +}
> +
> ?static void lpphy_set_tx_power_control(struct b43_wldev *dev,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? enum b43_lpphy_txpctl_mode mode)
> ?{
> @@ -1139,7 +1151,7 @@
>
> ? ? ? ?if (oldmode == B43_LPPHY_TXPCTL_HW) {
> ? ? ? ? ? ? ? ?lpphy_update_tx_power_npt(dev);
> - ? ? ? ? ? ? ? //TODO Clear all TX Power offsets
> + ? ? ? ? ? ? ? lpphy_clear_tx_power_offsets(dev);
> ? ? ? ?} else {
> ? ? ? ? ? ? ? ?if (mode == B43_LPPHY_TXPCTL_HW) {
> ? ? ? ? ? ? ? ? ? ? ? ?//TODO Recalculate target TX power
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From illth at gmx.de  Wed Sep 16 22:17:55 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 22:17:55 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve
	TX Power handling
In-Reply-To: <69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com>
References: <1253129879.2989.48.camel@note>
	<69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com>
Message-ID: <1253132275.2989.75.camel@note>

Am Mittwoch, den 16.09.2009, 21:40 +0200 schrieb G?bor Stefanik:
> You are essentially implementing dead code at this point - this will
> only ever be called if hardware-accelerated TX power control is
> enabled - and HW TX power control is unsupported, even for G-PHYs.
Then the question remains, why this brings my device to 54 MBit/s ?

I did double check again with the old driver:

wlan0     IEEE 802.11bg  ESSID:"tommy"  
          Mode:Managed  Frequency:2.412 GHz  Access Point:    
          Bit Rate=9 Mb/s   Tx-Power=20 dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=70/70  Signal level=5 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0

Patched driver:

wlan0     IEEE 802.11bg  ESSID:"tommy"  
          Mode:Managed  Frequency:2.412 GHz  Access Point: XXX 
          Bit Rate=54 Mb/s   Tx-Power=20 dBm   
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Encryption key:off
          Power Management:off
          Link Quality=70/70  Signal level=10 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0



> > Signed-off-by: Thomas Ilnseher <illth at gmx.de>
> >
> > ---
> > diff -uNr a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
> > --- a/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:52:17.501318374 +0200
> > +++ b/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:53:36.593319452 +0200
> > @@ -1125,6 +1125,18 @@
> >        dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
> >  }
> >
> > +static void lpphy_clear_tx_power_offsets(struct b43_wldev *dev)
> > +{
> > +       int i;
> > +       int id = 7;
> > +       if (dev->phy.rev < 2)
> > +               id = 10;
> > +       for (i = 0; i < 12; i++)
> > +               b43_lptab_write(dev, B43_LPTAB32(id, 0x40 + i), 0);
> > +       for (i = 0; i < 64; i++)
> > +               b43_lptab_write(dev, B43_LPTAB32(id, 0x80 + i), 0);
> > +}
> > +
> >  static void lpphy_set_tx_power_control(struct b43_wldev *dev,
> >                                       enum b43_lpphy_txpctl_mode mode)
> >  {
> > @@ -1139,7 +1151,7 @@
> >
> >        if (oldmode == B43_LPPHY_TXPCTL_HW) {
> >                lpphy_update_tx_power_npt(dev);
> > -               //TODO Clear all TX Power offsets
> > +               lpphy_clear_tx_power_offsets(dev);
> >        } else {
> >                if (mode == B43_LPPHY_TXPCTL_HW) {
> >                        //TODO Recalculate target TX power
> >
> >
> 
> 
> 



From netrolller.3d at gmail.com  Wed Sep 16 22:44:31 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Wed, 16 Sep 2009 22:44:31 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve TX 
	Power handling
In-Reply-To: <1253132275.2989.75.camel@note>
References: <1253129879.2989.48.camel@note>
	<69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com> 
	<1253132275.2989.75.camel@note>
Message-ID: <69e28c910909161344h511bcddeqcdc82b2e8a734dbb@mail.gmail.com>

2009/9/16 Thomas Ilnseher <illth at gmx.de>:
> Am Mittwoch, den 16.09.2009, 21:40 +0200 schrieb G?bor Stefanik:
>> You are essentially implementing dead code at this point - this will
>> only ever be called if hardware-accelerated TX power control is
>> enabled - and HW TX power control is unsupported, even for G-PHYs.
> Then the question remains, why this brings my device to 54 MBit/s ?
>
> I did double check again with the old driver:
>
> wlan0 ? ? IEEE 802.11bg ?ESSID:"tommy"
> ? ? ? ? ?Mode:Managed ?Frequency:2.412 GHz ?Access Point:
> ? ? ? ? ?Bit Rate=9 Mb/s ? Tx-Power=20 dBm
> ? ? ? ? ?Retry ?long limit:7 ? RTS thr:off ? Fragment thr:off
> ? ? ? ? ?Encryption key:off
> ? ? ? ? ?Power Management:off
> ? ? ? ? ?Link Quality=70/70 ?Signal level=5 dBm
> ? ? ? ? ?Rx invalid nwid:0 ?Rx invalid crypt:0 ?Rx invalid frag:0
> ? ? ? ? ?Tx excessive retries:0 ?Invalid misc:0 ? Missed beacon:0
>
> Patched driver:
>
> wlan0 ? ? IEEE 802.11bg ?ESSID:"tommy"
> ? ? ? ? ?Mode:Managed ?Frequency:2.412 GHz ?Access Point: XXX
> ? ? ? ? ?Bit Rate=54 Mb/s ? Tx-Power=20 dBm
> ? ? ? ? ?Retry ?long limit:7 ? RTS thr:off ? Fragment thr:off
> ? ? ? ? ?Encryption key:off
> ? ? ? ? ?Power Management:off
> ? ? ? ? ?Link Quality=70/70 ?Signal level=10 dBm
> ? ? ? ? ?Rx invalid nwid:0 ?Rx invalid crypt:0 ?Rx invalid frag:0
> ? ? ? ? ?Tx excessive retries:0 ?Invalid misc:0 ? Missed beacon:0
>
>
>
>> > Signed-off-by: Thomas Ilnseher <illth at gmx.de>
>> >
>> > ---
>> > diff -uNr a/drivers/net/wireless/b43/phy_lp.c b/drivers/net/wireless/b43/phy_lp.c
>> > --- a/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:52:17.501318374 +0200
>> > +++ b/drivers/net/wireless/b43/phy_lp.c 2009-09-16 20:53:36.593319452 +0200
>> > @@ -1125,6 +1125,18 @@
>> > ? ? ? ?dev->phy.lp->tssi_idx = (b43_phy_read(dev, B43_LPPHY_TX_PWR_CTL_STAT) & 0x7F00) >> 8;
>> > ?}
>> >
>> > +static void lpphy_clear_tx_power_offsets(struct b43_wldev *dev)
>> > +{
>> > + ? ? ? int i;
>> > + ? ? ? int id = 7;
>> > + ? ? ? if (dev->phy.rev < 2)
>> > + ? ? ? ? ? ? ? id = 10;
>> > + ? ? ? for (i = 0; i < 12; i++)
>> > + ? ? ? ? ? ? ? b43_lptab_write(dev, B43_LPTAB32(id, 0x40 + i), 0);
>> > + ? ? ? for (i = 0; i < 64; i++)
>> > + ? ? ? ? ? ? ? b43_lptab_write(dev, B43_LPTAB32(id, 0x80 + i), 0);
>> > +}
>> > +
>> > ?static void lpphy_set_tx_power_control(struct b43_wldev *dev,
>> > ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? enum b43_lpphy_txpctl_mode mode)
>> > ?{
>> > @@ -1139,7 +1151,7 @@
>> >
>> > ? ? ? ?if (oldmode == B43_LPPHY_TXPCTL_HW) {
>> > ? ? ? ? ? ? ? ?lpphy_update_tx_power_npt(dev);
>> > - ? ? ? ? ? ? ? //TODO Clear all TX Power offsets
>> > + ? ? ? ? ? ? ? lpphy_clear_tx_power_offsets(dev);

Put a printk here to see if this branch is getting hit.

(BTW, are you loading b43 with the "hwpctl" modparam? That enables
experimental HW TX power control support, which might explain what you
were seeing.)

>> > ? ? ? ?} else {
>> > ? ? ? ? ? ? ? ?if (mode == B43_LPPHY_TXPCTL_HW) {
>> > ? ? ? ? ? ? ? ? ? ? ? ?//TODO Recalculate target TX power
>> >
>> >
>>
>>
>>
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Wed Sep 16 23:00:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 16 Sep 2009 23:00:03 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve TX
	Power handling
In-Reply-To: <1253132275.2989.75.camel@note>
References: <1253129879.2989.48.camel@note>
	<69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com>
	<1253132275.2989.75.camel@note>
Message-ID: <200909162300.07342.mb@bu3sch.de>

On Wednesday 16 September 2009 22:17:55 Thomas Ilnseher wrote:
> Am Mittwoch, den 16.09.2009, 21:40 +0200 schrieb G?bor Stefanik:
> > You are essentially implementing dead code at this point - this will
> > only ever be called if hardware-accelerated TX power control is
> > enabled - and HW TX power control is unsupported, even for G-PHYs.
> Then the question remains, why this brings my device to 54 MBit/s ?
> 
> I did double check again with the old driver:
> 
> wlan0     IEEE 802.11bg  ESSID:"tommy"  
>           Mode:Managed  Frequency:2.412 GHz  Access Point:    
>           Bit Rate=9 Mb/s   Tx-Power=20 dBm   
>           Retry  long limit:7   RTS thr:off   Fragment thr:off
>           Encryption key:off
>           Power Management:off
>           Link Quality=70/70  Signal level=5 dBm  
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0
> 
> Patched driver:
> 
> wlan0     IEEE 802.11bg  ESSID:"tommy"  
>           Mode:Managed  Frequency:2.412 GHz  Access Point: XXX 
>           Bit Rate=54 Mb/s   Tx-Power=20 dBm   
>           Retry  long limit:7   RTS thr:off   Fragment thr:off
>           Encryption key:off
>           Power Management:off
>           Link Quality=70/70  Signal level=10 dBm  
>           Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
>           Tx excessive retries:0  Invalid misc:0   Missed beacon:0

The iwconfig output doesn't tell you anything about the actual net TX rate.
Please benchmark it with iperf.

-- 
Greetings, Michael.


From illth at gmx.de  Wed Sep 16 23:00:17 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Wed, 16 Sep 2009 23:00:17 +0200
Subject: [PATCH 2/2] b43: Add lpphy_clear_tx_power_offsets to improve
	TX Power handling
In-Reply-To: <69e28c910909161344h511bcddeqcdc82b2e8a734dbb@mail.gmail.com>
References: <1253129879.2989.48.camel@note>
	<69e28c910909161240p7739edebi653b5d402a792856@mail.gmail.com>
	<1253132275.2989.75.camel@note>
	<69e28c910909161344h511bcddeqcdc82b2e8a734dbb@mail.gmail.com>
Message-ID: <1253134817.3015.2.camel@note>


> 
> Put a printk here to see if this branch is getting hit.
> 
> (BTW, are you loading b43 with the "hwpctl" modparam? That enables
> experimental HW TX power control support, which might explain what you
> were seeing.)
Hi Gabor,

I'm stupid.

I applied 3 Patches, the analog switch patch, and the other two patches.
The analog switch patch did it.



> >>
> >>
> >
> >
> 
> 
> 



From cuse at users.sf.net  Thu Sep 17 13:32:30 2009
From: cuse at users.sf.net (Christian Schoenebeck)
Date: Thu, 17 Sep 2009 13:32:30 +0200 (CEST)
Subject: BCM4322 development status
Message-ID: <52841.91.18.241.111.1253187150.squirrel@mail.software-engineering.org>

Hi!

What is the current development status for the BCM4322 chip? Is it working
in the meantime?

If not, I can also try to hack the b43 driver for supporting it, at least
if I get the necessary informations.

CU
Christian



From netrolller.3d at gmail.com  Thu Sep 17 14:37:07 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 17 Sep 2009 14:37:07 +0200
Subject: BCM4322 development status
In-Reply-To: <52841.91.18.241.111.1253187150.squirrel@mail.software-engineering.org>
References: <52841.91.18.241.111.1253187150.squirrel@mail.software-engineering.org>
Message-ID: <69e28c910909170537g23bb62cay91b15051d5adabea@mail.gmail.com>

On Thu, Sep 17, 2009 at 1:32 PM, Christian Schoenebeck
<cuse at users.sf.net> wrote:
> Hi!
>
> What is the current development status for the BCM4322 chip? Is it working
> in the meantime?
>
> If not, I can also try to hack the b43 driver for supporting it, at least
> if I get the necessary informations.
>
> CU
> Christian
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

It is completely unsupported - not even specs are available for it.
(The reverse-engineering team has set a requirement for working LP-PHY
code before they start working on N-PHY cards like 4322; and we have
only gotten LP-PHY to work a few weeks ago.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Thu Sep 17 14:42:55 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 17 Sep 2009 07:42:55 -0500
Subject: BCM4322 development status
In-Reply-To: <52841.91.18.241.111.1253187150.squirrel@mail.software-engineering.org>
References: <52841.91.18.241.111.1253187150.squirrel@mail.software-engineering.org>
Message-ID: <4AB22ECF.4080701@lwfinger.net>

Christian Schoenebeck wrote:
> Hi!
> 
> What is the current development status for the BCM4322 chip? Is it working
> in the meantime?
> 
> If not, I can also try to hack the b43 driver for supporting it, at least
> if I get the necessary informations.

If I remember correctly, the 4322 has an N PHY. If that is so, the
reverse engineering for N PHYs is not complete. Until that is done,
there can be no hacking of the driver. I'm working on the RE now, but
as you can imagine, one can only work a few hours of the day when
decompiling MIPS binary code.

Larry


From zajec5polish at gmail.com  Thu Sep 17 18:02:19 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Thu, 17 Sep 2009 18:02:19 +0200
Subject: LP-PHY status?
Message-ID: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com>

Hi,

I would like to ask about status of LP-PHY status. Could you explain
to simple end-user what is missing in current implementation? Is this
just calibration for performance, or something more? Did someone make
some tests for AP mode? Or is this /stupid/ idea without calibration
done?

Stefanik is there change you find some time to finish calibration part
before .32 merge window? Don't want to rush you, you already have done
great work, just would like to know.

-- 
Rafa?


From peter at stuge.se  Thu Sep 17 18:31:40 2009
From: peter at stuge.se (Peter Stuge)
Date: Thu, 17 Sep 2009 18:31:40 +0200
Subject: LP-PHY status?
In-Reply-To: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com>
References: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com>
Message-ID: <20090917163140.9268.qmail@stuge.se>

Rafa? Mi?ecki wrote:
> Stefanik is there change you find some time to finish calibration
> part before .32 merge window? Don't want to rush you, you already
> have done great work, just would like to know.

Developers can (and they should) react very badly to questions like
this. Many times I do, I have no idea about Stefanik.

Asking for progress like this is, in fact, precisely trying to rush
development. You would like this work to be finished already, and if
you have to wait, ok, but you want it as soon as possible, because
you want to use it. At the very least you want to know when it will
be finished.

Remember that there is NO WARRANTY, no guarantees for delivery dates,
no nothing. The code is not even guaranteed to work! If it does work,
it's really a success. I think you know this.

In the open source world, when someone needs something, they help
create it, and it is done when it is done. Not everyone can help with
programming, but there are other tasks as well. And donations always
help of course! I think you know this too.

Just a friendly reminder.


Kind regards

//Peter


From illth at gmx.de  Thu Sep 17 19:06:21 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Thu, 17 Sep 2009 19:06:21 +0200
Subject: LP-PHY status?
In-Reply-To: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com>
References: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com>
Message-ID: <1253207181.13983.44.camel@pcmik05.zmk.uni-kl.de>

Am Donnerstag, den 17.09.2009, 18:02 +0200 schrieb Rafa? Mi?ecki:
> Hi,
> 
> I would like to ask about status of LP-PHY status. Could you explain
> to simple end-user what is missing in current implementation? Is this
> just calibration for performance, or something more? Did someone make
> some tests for AP mode? Or is this /stupid/ idea without calibration
> done?

The LP PHY code works for me since compat-wireless-02-09-09. I can't use
newer versions because of some IRQ_THREAD stuff.

Maybe my device crashes here & then, but hat could be due to other stuff
as well (It's an embedded system, ASUS WL-520gU)

I have written a (very small) patch that implements proper analog switch
support for the LP PHY, and that seems to improve throughput on my
device.
> 
> Stefanik is there change you find some time to finish calibration part
> before .32 merge window? Don't want to rush you, you already have done
> great work, just would like to know.

I don't know how difficult this calibration stuff is. If it's as simple
as the analog switch patch (or the other two useless patches I wrote),
You (Stefanik) can drop me a note that I should do it.

If you think my patches are crap, and I'm only wasting your time, just
inform me.
> 



From netrolller.3d at gmail.com  Thu Sep 17 23:23:43 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 17 Sep 2009 23:23:43 +0200
Subject: LP-PHY status?
In-Reply-To: <1253207181.13983.44.camel@pcmik05.zmk.uni-kl.de>
References: <14b026160909170902r584b4452rb268cff66c5648d2@mail.gmail.com> 
	<1253207181.13983.44.camel@pcmik05.zmk.uni-kl.de>
Message-ID: <69e28c910909171423l5244a0d6s56025fdaff05d5b1@mail.gmail.com>

2009/9/17 Thomas Ilnseher <illth at gmx.de>:
> Am Donnerstag, den 17.09.2009, 18:02 +0200 schrieb Rafa? Mi?ecki:
>> Hi,
>>
>> I would like to ask about status of LP-PHY status. Could you explain
>> to simple end-user what is missing in current implementation? Is this
>> just calibration for performance, or something more? Did someone make
>> some tests for AP mode? Or is this /stupid/ idea without calibration
>> done?
>
> The LP PHY code works for me since compat-wireless-02-09-09. I can't use
> newer versions because of some IRQ_THREAD stuff.
>
> Maybe my device crashes here & then, but hat could be due to other stuff
> as well (It's an embedded system, ASUS WL-520gU)
>
> I have written a (very small) patch that implements proper analog switch
> support for the LP PHY, and that seems to improve throughput on my
> device.
>>
>> Stefanik is there change you find some time to finish calibration part
>> before .32 merge window? Don't want to rush you, you already have done
>> great work, just would like to know.
>
> I don't know how difficult this calibration stuff is. If it's as simple
> as the analog switch patch (or the other two useless patches I wrote),
> You (Stefanik) can drop me a note that I should do it.
>
> If you think my patches are crap, and I'm only wasting your time, just
> inform me.
>>
>

Calibration is quite hard to do; but I have already posted an
incomplete patch about it on the list, which was rejected due to a
huge error, and my VMware installation died next day before I could
fix the patch up. Fixing the remaining issues on that should be easy -
you need to implement PHY reset (and use it instead of
put_phy_into_reset, which should actually be called disable_phy) and
replace the inline implementation of "PHY anacore" with a proper call
to the switch_analog op. (When I wrote the code, I didn't realize that
"PHY anacore" actually means "switch analog core".) Note that my patch
doesn't contain all 3 calibration routines, only one of them.

BTW your "useless" patches will probably become useful when writing calibration.

> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Tue Sep 22 00:59:27 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 21 Sep 2009 17:59:27 -0500
Subject: [PATCH] b43: Implement RFKILL status for LP PHY
Message-ID: <4AB8054F.7080600@lwfinger.net>

The LP (and probably N) PHY has the same radio disabled bit as
the higher-revision A and G PHYs.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

Submission of this change for 2.6.32 would be nice, but not necessary.

Larry
---

Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
+++ wireless-testing/drivers/net/wireless/b43/rfkill.c
@@ -28,7 +28,7 @@
 /* Returns TRUE, if the radio is enabled in hardware. */
 bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
 {
-	if (dev->phy.rev >= 3) {
+	if (dev->phy.rev >= 3 || dev->phy.type == B43_PHYTYPE_LP) {
 		if (!(b43_read32(dev, B43_MMIO_RADIO_HWENABLED_HI)
 		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
 			return 1;




From mb at bu3sch.de  Tue Sep 22 14:51:40 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 22 Sep 2009 14:51:40 +0200
Subject: [PATCH] b43: Implement RFKILL status for LP PHY
In-Reply-To: <4AB8054F.7080600@lwfinger.net>
References: <4AB8054F.7080600@lwfinger.net>
Message-ID: <200909221451.42134.mb@bu3sch.de>

On Tuesday 22 September 2009 00:59:27 Larry Finger wrote:
> The LP (and probably N) PHY has the same radio disabled bit as
> the higher-revision A and G PHYs.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

ack

> ---
> 
> John,
> 
> Submission of this change for 2.6.32 would be nice, but not necessary.
> 
> Larry
> ---
> 
> Index: wireless-testing/drivers/net/wireless/b43/rfkill.c
> ===================================================================
> --- wireless-testing.orig/drivers/net/wireless/b43/rfkill.c
> +++ wireless-testing/drivers/net/wireless/b43/rfkill.c
> @@ -28,7 +28,7 @@
>  /* Returns TRUE, if the radio is enabled in hardware. */
>  bool b43_is_hw_radio_enabled(struct b43_wldev *dev)
>  {
> -	if (dev->phy.rev >= 3) {
> +	if (dev->phy.rev >= 3 || dev->phy.type == B43_PHYTYPE_LP) {
>  		if (!(b43_read32(dev, B43_MMIO_RADIO_HWENABLED_HI)
>  		      & B43_MMIO_RADIO_HWENABLED_HI_MASK))
>  			return 1;
> 
> 
> 
> 



-- 
Greetings, Michael.


From aelmahmoudy at users.sourceforge.net  Tue Sep 22 08:26:53 2009
From: aelmahmoudy at users.sourceforge.net (=?utf-8?B?2KPYrdmF2K8g2KfZhNmF2K3ZhdmI2K/Zig==?=)
Date: Tue, 22 Sep 2009 08:26:53 +0200
Subject: Link for 14e4:4315
Message-ID: <20090922062653.GA4058@ants.dhis.net>

Hello,

  I read in the archives that there is an available driver for Broadcom 
  wireless (PCI Id 14e4:4315), where can I find the source code for this 
  driver ?

-- 
 ????? ???????? (Ahmed El-Mahmoudy)
  Digital design engineer
 GPG KeyID: 0xEDDDA1B7 (@ subkeys.pgp.net)
 GPG Fingerprint: 8206 A196 2084 7E6D 0DF8  B176 BC19 6A94 EDDD A1B7


From zajec5polish at gmail.com  Wed Sep 23 11:01:13 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Wed, 23 Sep 2009 11:01:13 +0200
Subject: Link for 14e4:4315
In-Reply-To: <20090922062653.GA4058@ants.dhis.net>
References: <20090922062653.GA4058@ants.dhis.net>
Message-ID: <14b026160909230201m11bb9ca7m2b87b4c7862b2a52@mail.gmail.com>

2009/9/22 ???? ???????? <aelmahmoudy at users.sourceforge.net>:
> ?I read in the archives that there is an available driver for Broadcom
> ?wireless (PCI Id 14e4:4315), where can I find the source code for this
> ?driver ?

http://wireless.kernel.org/en/users/Drivers/b43

Your card is LP-PHY, support is currently in wireless-testing and
should hit 2.6.32-rc1. You won't get high speeds yet, as calibration
is missing, but it should connect and work stable.

-- 
Rafa? Mi?ecki


From didomauro at tiscali.it  Wed Sep 23 15:11:57 2009
From: didomauro at tiscali.it (Mauro Di Domenico)
Date: Wed, 23 Sep 2009 15:11:57 +0200
Subject: Link for 14e4:4315
Message-ID: <1253711517.3769.10.camel@pc3.dido>

2009/9/22 ???? ???????? <aelmahmoudy at users.sourceforge.net>:
>  I read in the archives that there is an available driver for Broadcom
>  wireless (PCI Id 14e4:4315), where can I find the source code for this
>  driver ?

I found the source code at this link:

http://wireless.kernel.org/download/compat-wireless-2.6/

There you can download the last compat-wireless tarball.

--
Mauro Di Domenico



From mb at bu3sch.de  Wed Sep 23 18:51:21 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 23 Sep 2009 18:51:21 +0200
Subject: [PATCH] b43: Always use block-I/O for the PIO data registers
Message-ID: <200909231851.22110.mb@bu3sch.de>

On SDIO the PIO data register seems to be hardwired to LE. So
the MACCTL bit has no effect on the endianness.
So also use block-I/O for the last word of the packet. block-I/O is always LE.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---


Index: wireless-testing/drivers/net/wireless/b43/pio.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/pio.c	2009-09-10 20:14:37.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/pio.c	2009-09-10 21:08:11.000000000 +0200
@@ -340,10 +340,15 @@ static u16 tx_write_2byte_queue(struct b
 			q->mmio_base + B43_PIO_TXDATA,
 			sizeof(u16));
 	if (data_len & 1) {
+		u8 tail[2] = { 0, };
+
 		/* Write the last byte. */
 		ctl &= ~B43_PIO_TXCTL_WRITEHI;
 		b43_piotx_write16(q, B43_PIO_TXCTL, ctl);
-		b43_piotx_write16(q, B43_PIO_TXDATA, data[data_len - 1]);
+		tail[0] = data[data_len - 1];
+		ssb_block_write(dev->dev, tail, 2,
+				q->mmio_base + B43_PIO_TXDATA,
+				sizeof(u16));
 	}
 
 	return ctl;
@@ -386,26 +391,31 @@ static u32 tx_write_4byte_queue(struct b
 			q->mmio_base + B43_PIO8_TXDATA,
 			sizeof(u32));
 	if (data_len & 3) {
-		u32 value = 0;
+		u8 tail[4] = { 0, };
 
 		/* Write the last few bytes. */
 		ctl &= ~(B43_PIO8_TXCTL_8_15 | B43_PIO8_TXCTL_16_23 |
 			 B43_PIO8_TXCTL_24_31);
-		data = &(data[data_len - 1]);
 		switch (data_len & 3) {
 		case 3:
-			ctl |= B43_PIO8_TXCTL_16_23;
-			value |= (u32)(*data) << 16;
-			data--;
+			ctl |= B43_PIO8_TXCTL_16_23 | B43_PIO8_TXCTL_8_15;
+			tail[0] = data[data_len - 3];
+			tail[1] = data[data_len - 2];
+			tail[2] = data[data_len - 1];
+			break;
 		case 2:
 			ctl |= B43_PIO8_TXCTL_8_15;
-			value |= (u32)(*data) << 8;
-			data--;
+			tail[0] = data[data_len - 2];
+			tail[1] = data[data_len - 1];
+			break;
 		case 1:
-			value |= (u32)(*data);
+			tail[0] = data[data_len - 1];
+			break;
 		}
 		b43_piotx_write32(q, B43_PIO8_TXCTL, ctl);
-		b43_piotx_write32(q, B43_PIO8_TXDATA, value);
+		ssb_block_write(dev->dev, tail, 4,
+				q->mmio_base + B43_PIO8_TXDATA,
+				sizeof(u32));
 	}
 
 	return ctl;
@@ -693,21 +703,25 @@ data_ready:
 			       q->mmio_base + B43_PIO8_RXDATA,
 			       sizeof(u32));
 		if (len & 3) {
-			u32 value;
-			char *data;
+			u8 tail[4] = { 0, };
 
 			/* Read the last few bytes. */
-			value = b43_piorx_read32(q, B43_PIO8_RXDATA);
-			data = &(skb->data[len + padding - 1]);
+			ssb_block_read(dev->dev, tail, 4,
+				       q->mmio_base + B43_PIO8_RXDATA,
+				       sizeof(u32));
 			switch (len & 3) {
 			case 3:
-				*data = (value >> 16);
-				data--;
+				skb->data[len + padding - 3] = tail[0];
+				skb->data[len + padding - 2] = tail[1];
+				skb->data[len + padding - 1] = tail[2];
+				break;
 			case 2:
-				*data = (value >> 8);
-				data--;
+				skb->data[len + padding - 2] = tail[0];
+				skb->data[len + padding - 1] = tail[1];
+				break;
 			case 1:
-				*data = value;
+				skb->data[len + padding - 1] = tail[0];
+				break;
 			}
 		}
 	} else {
@@ -715,11 +729,13 @@ data_ready:
 			       q->mmio_base + B43_PIO_RXDATA,
 			       sizeof(u16));
 		if (len & 1) {
-			u16 value;
+			u8 tail[2] = { 0, };
 
 			/* Read the last byte. */
-			value = b43_piorx_read16(q, B43_PIO_RXDATA);
-			skb->data[len + padding - 1] = value;
+			ssb_block_read(dev->dev, tail, 2,
+				       q->mmio_base + B43_PIO_RXDATA,
+				       sizeof(u16));
+			skb->data[len + padding - 1] = tail[0];
 		}
 	}
 

-- 
Greetings, Michael.


From didomauro at tiscali.it  Thu Sep 24 18:59:19 2009
From: didomauro at tiscali.it (Mauro Di Domenico)
Date: Thu, 24 Sep 2009 18:59:19 +0200
Subject: A problem loading ssb module
Message-ID: <1253811559.4579.44.camel@pc3.dido>

Hi,
I'm testing new b43 modules for my 14e4:4315 broadcom card.
I've compiled and installed compat-wireless-2009-09-16 in a debian
machine with kernel version 2.6.30-6.

During the boot I experience this problem:

$ dmesg|egrep "b43|ssb"

[    2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
low) -> IRQ 17
[    2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
[    2.544344] ssb: Sonics Silicon Backplane found on PCI device
0000:06:00.0
[    6.968981] b43: disagrees about version of symbol
ssb_device_is_enabled
[    6.968986] b43: Unknown symbol ssb_device_is_enabled
[    6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
[    6.969407] b43: disagrees about version of symbol
ssb_pcicore_dev_irqvecs_enable
[    6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
.....
....
...

It seems it loads the old ssb module (by seeing the size):

$ lsmod|grep ssb
ssb                    37692  0 
pcmcia                 24280  1 ssb
pcmcia_core            31212  2 ssb,pcmcia

I resolve in this way:
# rmmod b43
# rmmod ssb
# modprobe b43

after that it's loaded the new ssb module:

$ lsmod|grep ssb
ssb                    38976  1 b43
pcmcia                 24280  2 b43,ssb
pcmcia_core            31212  3 b43,ssb,pcmcia

It all remains the same if I overwrite the old ssb.ko with the new (and
reboot):

$ cp updates/drivers/ssb/ssb.ko kernel/drivers/ssb/ssb.ko

What's wrong?
What's happened?
Where's the old module? (I overwrote it!)

It's not a problem unloading and loading few modules by hands (or by
scripts), but I'm interested in knowing what's wrong, and if this is a
bug I hope this message can be useful someway.

Bye.
--
Mauro Di Domenico



From bryan.wu at canonical.com  Thu Sep 24 19:24:23 2009
From: bryan.wu at canonical.com (Bryan Wu)
Date: Thu, 24 Sep 2009 10:24:23 -0700
Subject: A problem loading ssb module
In-Reply-To: <1253811559.4579.44.camel@pc3.dido>
References: <1253811559.4579.44.camel@pc3.dido>
Message-ID: <4ABBAB47.8040300@canonical.com>

Mauro Di Domenico wrote:
> Hi,
> I'm testing new b43 modules for my 14e4:4315 broadcom card.
> I've compiled and installed compat-wireless-2009-09-16 in a debian
> machine with kernel version 2.6.30-6.
> 
> During the boot I experience this problem:
> 
> $ dmesg|egrep "b43|ssb"
> 
> [    2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
> low) -> IRQ 17
> [    2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
> [    2.544344] ssb: Sonics Silicon Backplane found on PCI device
> 0000:06:00.0
> [    6.968981] b43: disagrees about version of symbol
> ssb_device_is_enabled
> [    6.968986] b43: Unknown symbol ssb_device_is_enabled
> [    6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
> [    6.969407] b43: disagrees about version of symbol
> ssb_pcicore_dev_irqvecs_enable
> [    6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
> .....
> ....
> ...
> 

I faced the exactly same issue as Mauro did. +1 from me, but currently have
no time to take a deeper look.

Thanks
---
Bryan Wu <bryan.wu at canonical.com>
Kernel Developer    +86.138-1617-6545 Mobile
Ubuntu Kernel Team | Hardware Enablement Team
Canonical Ltd.      www.canonical.com
Ubuntu - Linux for human beings | www.ubuntu.com 


From hauke at hauke-m.de  Thu Sep 24 20:33:48 2009
From: hauke at hauke-m.de (Hauke Mehrtens)
Date: Thu, 24 Sep 2009 20:33:48 +0200
Subject: A problem loading ssb module
In-Reply-To: <4ABBAB47.8040300@canonical.com>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com>
Message-ID: <4ABBBB8C.8080401@hauke-m.de>

Bryan Wu wrote:
> Mauro Di Domenico wrote:
>> Hi,
>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>> machine with kernel version 2.6.30-6.
>>
>> During the boot I experience this problem:
>>
>> $ dmesg|egrep "b43|ssb"
>>
>> [    2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>> low) -> IRQ 17
>> [    2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>> [    2.544344] ssb: Sonics Silicon Backplane found on PCI device
>> 0000:06:00.0
>> [    6.968981] b43: disagrees about version of symbol
>> ssb_device_is_enabled
>> [    6.968986] b43: Unknown symbol ssb_device_is_enabled
>> [    6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>> [    6.969407] b43: disagrees about version of symbol
>> ssb_pcicore_dev_irqvecs_enable
>> [    6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>> .....
>> ....
>> ...
>>
> 
> I faced the exactly same issue as Mauro did. +1 from me, but currently have
> no time to take a deeper look.
> 
> Thanks
Hi,

I had the same problem with the ssb module and compat-wireless in ubuntu
9.04. The problem is that the ssb module is integrated into the
initramfs image. The version out of the initramfs image is loaded on
startup and not the version of compat-wireless. Running "sudo
update-initramfs -u" after installing compat-wireless and restaing the
system fixes the problem for me. Either Debian/Ubuntu should remove ssb
form default initramfs image or compat-wireless should update the image
with the install command. At least the compat-wireless documentation
needs an update.

Hauke

(adding Luis and linux-wireless list)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 898 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090924/bf8116e4/attachment.pgp>

From lrodriguez at atheros.com  Thu Sep 24 20:37:17 2009
From: lrodriguez at atheros.com (Luis R. Rodriguez)
Date: Thu, 24 Sep 2009 11:37:17 -0700
Subject: A problem loading ssb module
In-Reply-To: <4ABBBB8C.8080401@hauke-m.de>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
Message-ID: <43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com>

On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de> wrote:
> Bryan Wu wrote:
>> Mauro Di Domenico wrote:
>>> Hi,
>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>> machine with kernel version 2.6.30-6.
>>>
>>> During the boot I experience this problem:
>>>
>>> $ dmesg|egrep "b43|ssb"
>>>
>>> [ ? ?2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>>> low) -> IRQ 17
>>> [ ? ?2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>>> [ ? ?2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>> 0000:06:00.0
>>> [ ? ?6.968981] b43: disagrees about version of symbol
>>> ssb_device_is_enabled
>>> [ ? ?6.968986] b43: Unknown symbol ssb_device_is_enabled
>>> [ ? ?6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>> [ ? ?6.969407] b43: disagrees about version of symbol
>>> ssb_pcicore_dev_irqvecs_enable
>>> [ ? ?6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>> .....
>>> ....
>>> ...
>>>
>>
>> I faced the exactly same issue as Mauro did. +1 from me, but currently have
>> no time to take a deeper look.
>>
>> Thanks
> Hi,
>
> I had the same problem with the ssb module and compat-wireless in ubuntu
> 9.04. The problem is that the ssb module is integrated into the
> initramfs image. The version out of the initramfs image is loaded on
> startup and not the version of compat-wireless. Running "sudo
> update-initramfs -u" after installing compat-wireless and restaing the
> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
> form default initramfs image or compat-wireless should update the image
> with the install command. At least the compat-wireless documentation
> needs an update.
>
> Hauke
>
> (adding Luis and linux-wireless list)

Tim, do you guys update the initramfs upon installation of lbm? If a
user does not use lbm and uses compat-wireless I suppose we need to do
something similar.

  Luis


From lrodriguez at atheros.com  Fri Sep 25 02:53:35 2009
From: lrodriguez at atheros.com (Luis R. Rodriguez)
Date: Thu, 24 Sep 2009 17:53:35 -0700
Subject: A problem loading ssb module
In-Reply-To: <4ABC0B60.5070909@canonical.com>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com> 
	<4ABC08FA.8030104@canonical.com>
	<43e72e890909241708v55af30baia5f6fca8eb5d9d59@mail.gmail.com> 
	<4ABC0B60.5070909@canonical.com>
Message-ID: <43e72e890909241753y4803d508u3641708a7a9a2d74@mail.gmail.com>

On Thu, Sep 24, 2009 at 5:14 PM, Tim Gardner <tim.gardner at canonical.com> wrote:
> Luis R. Rodriguez wrote:
>>
>> On Thu, Sep 24, 2009 at 5:04 PM, Tim Gardner <tim.gardner at canonical.com>
>> wrote:
>>>
>>> Luis R. Rodriguez wrote:
>>>>
>>>> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de>
>>>> wrote:
>>>>>
>>>>> Bryan Wu wrote:
>>>>>>
>>>>>> Mauro Di Domenico wrote:
>>>>>>>
>>>>>>> Hi,
>>>>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>>>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>>>>>> machine with kernel version 2.6.30-6.
>>>>>>>
>>>>>>> During the boot I experience this problem:
>>>>>>>
>>>>>>> $ dmesg|egrep "b43|ssb"
>>>>>>>
>>>>>>> [ ? ?2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17
>>>>>>> (level,
>>>>>>> low) -> IRQ 17
>>>>>>> [ ? ?2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to
>>>>>>> 64
>>>>>>> [ ? ?2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>>>>>> 0000:06:00.0
>>>>>>> [ ? ?6.968981] b43: disagrees about version of symbol
>>>>>>> ssb_device_is_enabled
>>>>>>> [ ? ?6.968986] b43: Unknown symbol ssb_device_is_enabled
>>>>>>> [ ? ?6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>>>>>> [ ? ?6.969407] b43: disagrees about version of symbol
>>>>>>> ssb_pcicore_dev_irqvecs_enable
>>>>>>> [ ? ?6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>>>>>> .....
>>>>>>> ....
>>>>>>> ...
>>>>>>>
>>>>>> I faced the exactly same issue as Mauro did. +1 from me, but currently
>>>>>> have
>>>>>> no time to take a deeper look.
>>>>>>
>>>>>> Thanks
>>>>>
>>>>> Hi,
>>>>>
>>>>> I had the same problem with the ssb module and compat-wireless in
>>>>> ubuntu
>>>>> 9.04. The problem is that the ssb module is integrated into the
>>>>> initramfs image. The version out of the initramfs image is loaded on
>>>>> startup and not the version of compat-wireless. Running "sudo
>>>>> update-initramfs -u" after installing compat-wireless and restaing the
>>>>> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
>>>>> form default initramfs image or compat-wireless should update the image
>>>>> with the install command. At least the compat-wireless documentation
>>>>> needs an update.
>>>>>
>>>>> Hauke
>>>>>
>>>>> (adding Luis and linux-wireless list)
>>>>
>>>> Tim, do you guys update the initramfs upon installation of lbm? If a
>>>> user does not use lbm and uses compat-wireless I suppose we need to do
>>>> something similar.
>>>>
>>>> ?Luis
>>>
>>> No, initramfs is not updated when LBM is installed. I think maybe its a
>>> bug
>>> that ssb is in the initramfs modules list since AFAIK its not a boot
>>> essential device. Even in the netboot case, ssb/b44 should be in a udeb.
>>
>> That would make life much easier.
>>
>> ?Luis
>>
>
> I'm looking at the Karmic initramfs-tools package and am not seeing _any_
> reference to ssb or b44.

Seems like a Debian 2.6.30-6 bug then.

  Luis


From lrodriguez at atheros.com  Fri Sep 25 02:08:50 2009
From: lrodriguez at atheros.com (Luis R. Rodriguez)
Date: Thu, 24 Sep 2009 17:08:50 -0700
Subject: A problem loading ssb module
In-Reply-To: <4ABC08FA.8030104@canonical.com>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com> 
	<4ABC08FA.8030104@canonical.com>
Message-ID: <43e72e890909241708v55af30baia5f6fca8eb5d9d59@mail.gmail.com>

On Thu, Sep 24, 2009 at 5:04 PM, Tim Gardner <tim.gardner at canonical.com> wrote:
> Luis R. Rodriguez wrote:
>>
>> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de> wrote:
>>>
>>> Bryan Wu wrote:
>>>>
>>>> Mauro Di Domenico wrote:
>>>>>
>>>>> Hi,
>>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>>>> machine with kernel version 2.6.30-6.
>>>>>
>>>>> During the boot I experience this problem:
>>>>>
>>>>> $ dmesg|egrep "b43|ssb"
>>>>>
>>>>> [ ? ?2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>>>>> low) -> IRQ 17
>>>>> [ ? ?2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>>>>> [ ? ?2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>>>> 0000:06:00.0
>>>>> [ ? ?6.968981] b43: disagrees about version of symbol
>>>>> ssb_device_is_enabled
>>>>> [ ? ?6.968986] b43: Unknown symbol ssb_device_is_enabled
>>>>> [ ? ?6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>>>> [ ? ?6.969407] b43: disagrees about version of symbol
>>>>> ssb_pcicore_dev_irqvecs_enable
>>>>> [ ? ?6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>>>> .....
>>>>> ....
>>>>> ...
>>>>>
>>>> I faced the exactly same issue as Mauro did. +1 from me, but currently
>>>> have
>>>> no time to take a deeper look.
>>>>
>>>> Thanks
>>>
>>> Hi,
>>>
>>> I had the same problem with the ssb module and compat-wireless in ubuntu
>>> 9.04. The problem is that the ssb module is integrated into the
>>> initramfs image. The version out of the initramfs image is loaded on
>>> startup and not the version of compat-wireless. Running "sudo
>>> update-initramfs -u" after installing compat-wireless and restaing the
>>> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
>>> form default initramfs image or compat-wireless should update the image
>>> with the install command. At least the compat-wireless documentation
>>> needs an update.
>>>
>>> Hauke
>>>
>>> (adding Luis and linux-wireless list)
>>
>> Tim, do you guys update the initramfs upon installation of lbm? If a
>> user does not use lbm and uses compat-wireless I suppose we need to do
>> something similar.
>>
>> ?Luis
>
> No, initramfs is not updated when LBM is installed. I think maybe its a bug
> that ssb is in the initramfs modules list since AFAIK its not a boot
> essential device. Even in the netboot case, ssb/b44 should be in a udeb.

That would make life much easier.

  Luis


From hauke at hauke-m.de  Sat Sep 26 17:15:47 2009
From: hauke at hauke-m.de (Hauke Mehrtens)
Date: Sat, 26 Sep 2009 17:15:47 +0200
Subject: A problem loading ssb module
In-Reply-To: <4ABC0B60.5070909@canonical.com>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com>
	<4ABC08FA.8030104@canonical.com>
	<43e72e890909241708v55af30baia5f6fca8eb5d9d59@mail.gmail.com>
	<4ABC0B60.5070909@canonical.com>
Message-ID: <4ABE3023.3020006@hauke-m.de>

Tim Gardner wrote:
> Luis R. Rodriguez wrote:
>> On Thu, Sep 24, 2009 at 5:04 PM, Tim Gardner
>> <tim.gardner at canonical.com> wrote:
>>> Luis R. Rodriguez wrote:
>>>> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de>
>>>> wrote:
>>>>> Bryan Wu wrote:
>>>>>> Mauro Di Domenico wrote:
>>>>>>> Hi,
>>>>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>>>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>>>>>> machine with kernel version 2.6.30-6.
>>>>>>>
>>>>>>> During the boot I experience this problem:
>>>>>>>
>>>>>>> $ dmesg|egrep "b43|ssb"
>>>>>>>
>>>>>>> [    2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17
>>>>>>> (level,
>>>>>>> low) -> IRQ 17
>>>>>>> [    2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer
>>>>>>> to 64
>>>>>>> [    2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>>>>>> 0000:06:00.0
>>>>>>> [    6.968981] b43: disagrees about version of symbol
>>>>>>> ssb_device_is_enabled
>>>>>>> [    6.968986] b43: Unknown symbol ssb_device_is_enabled
>>>>>>> [    6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>>>>>> [    6.969407] b43: disagrees about version of symbol
>>>>>>> ssb_pcicore_dev_irqvecs_enable
>>>>>>> [    6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>>>>>> .....
>>>>>>> ....
>>>>>>> ...
>>>>>>>
>>>>>> I faced the exactly same issue as Mauro did. +1 from me, but
>>>>>> currently
>>>>>> have
>>>>>> no time to take a deeper look.
>>>>>>
>>>>>> Thanks
>>>>> Hi,
>>>>>
>>>>> I had the same problem with the ssb module and compat-wireless in
>>>>> ubuntu
>>>>> 9.04. The problem is that the ssb module is integrated into the
>>>>> initramfs image. The version out of the initramfs image is loaded on
>>>>> startup and not the version of compat-wireless. Running "sudo
>>>>> update-initramfs -u" after installing compat-wireless and restaing the
>>>>> system fixes the problem for me. Either Debian/Ubuntu should remove
>>>>> ssb
>>>>> form default initramfs image or compat-wireless should update the
>>>>> image
>>>>> with the install command. At least the compat-wireless documentation
>>>>> needs an update.
>>>>>
>>>>> Hauke
>>>>>
>>>>> (adding Luis and linux-wireless list)
>>>> Tim, do you guys update the initramfs upon installation of lbm? If a
>>>> user does not use lbm and uses compat-wireless I suppose we need to do
>>>> something similar.
>>>>
>>>>  Luis
>>> No, initramfs is not updated when LBM is installed. I think maybe its
>>> a bug
>>> that ssb is in the initramfs modules list since AFAIK its not a boot
>>> essential device. Even in the netboot case, ssb/b44 should be in a udeb.
>>
>> That would make life much easier.
>>
>>   Luis
>>
> 
> I'm looking at the Karmic initramfs-tools package and am not seeing
> _any_ reference to ssb or b44.
> 
Hi Tim,

I have decompressed initrd.img-2.6.31-11-generic from karmic and
initrd.img-2.6.28-15-generic form jaunty. In both packages I found the
ssb.ko and b44.ko module.

Hauke

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 898 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090926/8256e107/attachment.pgp>

From ccmcphe at verizon.net  Sun Sep 27 17:15:16 2009
From: ccmcphe at verizon.net (Clyde McPherson)
Date: Sun, 27 Sep 2009 11:15:16 -0400
Subject: A problem loading ssb module
In-Reply-To: <43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com>
Message-ID: <4ABF8184.9060904@verizon.net>



> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de> wrote:
>   
>> Bryan Wu wrote:
>>     
>>> Mauro Di Domenico wrote:
>>>       
>>>> Hi,
>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>>> machine with kernel version 2.6.30-6.
>>>>
>>>> During the boot I experience this problem:
>>>>
>>>> $ dmesg|egrep "b43|ssb"
>>>>
>>>> [    2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>>>> low) -> IRQ 17
>>>> [    2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>>>> [    2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>>> 0000:06:00.0
>>>> [    6.968981] b43: disagrees about version of symbol
>>>> ssb_device_is_enabled
>>>> [    6.968986] b43: Unknown symbol ssb_device_is_enabled
>>>> [    6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>>> [    6.969407] b43: disagrees about version of symbol
>>>> ssb_pcicore_dev_irqvecs_enable
>>>> [    6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>>> .....
>>>> ....
>>>> ...
>>>>
>>>>         
>>> I faced the exactly same issue as Mauro did. +1 from me, but currently have
>>> no time to take a deeper look.
>>>
>>> Thanks
>>>       
>> Hi,
>>
>> I had the same problem with the ssb module and compat-wireless in ubuntu
>> 9.04. The problem is that the ssb module is integrated into the
>> initramfs image. The version out of the initramfs image is loaded on
>> startup and not the version of compat-wireless. Running "sudo
>> update-initramfs -u" after installing compat-wireless and restaing the
>> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
>> form default initramfs image or compat-wireless should update the image
>> with the install command. At least the compat-wireless documentation
>> needs an update.
>>
>> Hauke
>>
>> (adding Luis and linux-wireless list)
>>     
>
> Tim, do you guys update the initramfs upon installation of lbm? If a
> user does not use lbm and uses compat-wireless I suppose we need to do
> something similar.
>
>   Luis
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   

All:
I have a large group that uses the ssb module along with the Broadcom 
4318, in a CF form factor. If the CF card is inserted before boot, and 
the ssb module is not in the initrd process, the laptops lock up and do 
not become operational. The solution to this problem is/was adding the 
ssb.ko to the initrd process. So I agree with Luis on this, the ssb 
module will have to be added/updated to the initrd process. As for PCI 
operations, I don't know, but for PCMCIA operations ssb.ko has to be 
added and/or updated. Anytime I am testing new releases of b43, I run 
"update-initramfs -u" to update the ssb module. (Sometimes you can do a 
rmmod ssb and rmmod b43, and then modprobe them back in. - This saves a 
reboot)

Thanks
-Tex


From lrodriguez at atheros.com  Sun Sep 27 21:50:19 2009
From: lrodriguez at atheros.com (Luis R. Rodriguez)
Date: Sun, 27 Sep 2009 12:50:19 -0700
Subject: A problem loading ssb module
In-Reply-To: <4ABF8184.9060904@verizon.net>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com> 
	<4ABF8184.9060904@verizon.net>
Message-ID: <43e72e890909271250g2936947fj314aad65e10d9788@mail.gmail.com>

On Sun, Sep 27, 2009 at 8:15 AM, Clyde McPherson <ccmcphe at verizon.net> wrote:
>
>
>> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de> wrote:
>>
>>>
>>> Bryan Wu wrote:
>>>
>>>>
>>>> Mauro Di Domenico wrote:
>>>>
>>>>>
>>>>> Hi,
>>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>>>>> machine with kernel version 2.6.30-6.
>>>>>
>>>>> During the boot I experience this problem:
>>>>>
>>>>> $ dmesg|egrep "b43|ssb"
>>>>>
>>>>> [ ? ?2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>>>>> low) -> IRQ 17
>>>>> [ ? ?2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>>>>> [ ? ?2.544344] ssb: Sonics Silicon Backplane found on PCI device
>>>>> 0000:06:00.0
>>>>> [ ? ?6.968981] b43: disagrees about version of symbol
>>>>> ssb_device_is_enabled
>>>>> [ ? ?6.968986] b43: Unknown symbol ssb_device_is_enabled
>>>>> [ ? ?6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>>>>> [ ? ?6.969407] b43: disagrees about version of symbol
>>>>> ssb_pcicore_dev_irqvecs_enable
>>>>> [ ? ?6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>>>>> .....
>>>>> ....
>>>>> ...
>>>>>
>>>>>
>>>>
>>>> I faced the exactly same issue as Mauro did. +1 from me, but currently
>>>> have
>>>> no time to take a deeper look.
>>>>
>>>> Thanks
>>>>
>>>
>>> Hi,
>>>
>>> I had the same problem with the ssb module and compat-wireless in ubuntu
>>> 9.04. The problem is that the ssb module is integrated into the
>>> initramfs image. The version out of the initramfs image is loaded on
>>> startup and not the version of compat-wireless. Running "sudo
>>> update-initramfs -u" after installing compat-wireless and restaing the
>>> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
>>> form default initramfs image or compat-wireless should update the image
>>> with the install command. At least the compat-wireless documentation
>>> needs an update.
>>>
>>> Hauke
>>>
>>> (adding Luis and linux-wireless list)
>>>
>>
>> Tim, do you guys update the initramfs upon installation of lbm? If a
>> user does not use lbm and uses compat-wireless I suppose we need to do
>> something similar.
>>
>> ?Luis
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>
>
> All:
> I have a large group that uses the ssb module along with the Broadcom 4318,
> in a CF form factor. If the CF card is inserted before boot, and the ssb
> module is not in the initrd process, the laptops lock up and do not become
> operational. The solution to this problem is/was adding the ssb.ko to the
> initrd process. So I agree with Luis on this, the ssb module will have to be
> added/updated to the initrd process. As for PCI operations, I don't know,
> but for PCMCIA operations ssb.ko has to be added and/or updated. Anytime I
> am testing new releases of b43, I run "update-initramfs -u" to update the
> ssb module. (Sometimes you can do a rmmod ssb and rmmod b43, and then
> modprobe them back in. - This saves a reboot)

But why is ssb, b43, b44 needed upon early boot?

  Luis


From lrodriguez at atheros.com  Mon Sep 28 21:55:09 2009
From: lrodriguez at atheros.com (Luis R. Rodriguez)
Date: Mon, 28 Sep 2009 12:55:09 -0700
Subject: A problem loading ssb module
In-Reply-To: <20090927210252.GA31472@bombadil.infradead.org>
References: <1253811559.4579.44.camel@pc3.dido>
	<4ABBAB47.8040300@canonical.com> <4ABBBB8C.8080401@hauke-m.de>
	<43e72e890909241137o7e853edfxb9e159df34927d7b@mail.gmail.com> 
	<4ABF8184.9060904@verizon.net>
	<43e72e890909271250g2936947fj314aad65e10d9788@mail.gmail.com> 
	<20090927210252.GA31472@bombadil.infradead.org>
Message-ID: <43e72e890909281255n1cca5b84q871365259077a1bc@mail.gmail.com>

On Sun, Sep 27, 2009 at 2:02 PM, Luis R. Rodriguez
<mcgrof at bombadil.infradead.org> wrote:
> On Sun, Sep 27, 2009 at 12:50:19PM -0700, Luis R. Rodriguez wrote:
>> On Sun, Sep 27, 2009 at 8:15 AM, Clyde McPherson <ccmcphe at verizon.net> wrote:
>> >
>> >
>> >> On Thu, Sep 24, 2009 at 11:33 AM, Hauke Mehrtens <hauke at hauke-m.de> wrote:
>> >>
>> >>>
>> >>> Bryan Wu wrote:
>> >>>
>> >>>>
>> >>>> Mauro Di Domenico wrote:
>> >>>>
>> >>>>>
>> >>>>> Hi,
>> >>>>> I'm testing new b43 modules for my 14e4:4315 broadcom card.
>> >>>>> I've compiled and installed compat-wireless-2009-09-16 in a debian
>> >>>>> machine with kernel version 2.6.30-6.
>> >>>>>
>> >>>>> During the boot I experience this problem:
>> >>>>>
>> >>>>> $ dmesg|egrep "b43|ssb"
>> >>>>>
>> >>>>> [ ? ?2.384463] b43-pci-bridge 0000:06:00.0: PCI INT A -> GSI 17 (level,
>> >>>>> low) -> IRQ 17
>> >>>>> [ ? ?2.384477] b43-pci-bridge 0000:06:00.0: setting latency timer to 64
>> >>>>> [ ? ?2.544344] ssb: Sonics Silicon Backplane found on PCI device
>> >>>>> 0000:06:00.0
>> >>>>> [ ? ?6.968981] b43: disagrees about version of symbol
>> >>>>> ssb_device_is_enabled
>> >>>>> [ ? ?6.968986] b43: Unknown symbol ssb_device_is_enabled
>> >>>>> [ ? ?6.969280] b43: Unknown symbol ssb_pmu_set_ldo_paref
>> >>>>> [ ? ?6.969407] b43: disagrees about version of symbol
>> >>>>> ssb_pcicore_dev_irqvecs_enable
>> >>>>> [ ? ?6.969410] b43: Unknown symbol ssb_pcicore_dev_irqvecs_enable
>> >>>>> .....
>> >>>>> ....
>> >>>>> ...
>> >>>>>
>> >>>>>
>> >>>>
>> >>>> I faced the exactly same issue as Mauro did. +1 from me, but currently
>> >>>> have
>> >>>> no time to take a deeper look.
>> >>>>
>> >>>> Thanks
>> >>>>
>> >>>
>> >>> Hi,
>> >>>
>> >>> I had the same problem with the ssb module and compat-wireless in ubuntu
>> >>> 9.04. The problem is that the ssb module is integrated into the
>> >>> initramfs image. The version out of the initramfs image is loaded on
>> >>> startup and not the version of compat-wireless. Running "sudo
>> >>> update-initramfs -u" after installing compat-wireless and restaing the
>> >>> system fixes the problem for me. Either Debian/Ubuntu should remove ssb
>> >>> form default initramfs image or compat-wireless should update the image
>> >>> with the install command. At least the compat-wireless documentation
>> >>> needs an update.
>> >>>
>> >>> Hauke
>> >>>
>> >>> (adding Luis and linux-wireless list)
>> >>>
>> >>
>> >> Tim, do you guys update the initramfs upon installation of lbm? If a
>> >> user does not use lbm and uses compat-wireless I suppose we need to do
>> >> something similar.
>> >>
>> >> ?Luis
>> >> _______________________________________________
>> >> Bcm43xx-dev mailing list
>> >> Bcm43xx-dev at lists.berlios.de
>> >> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>> >>
>> >
>> > All:
>> > I have a large group that uses the ssb module along with the Broadcom 4318,
>> > in a CF form factor. If the CF card is inserted before boot, and the ssb
>> > module is not in the initrd process, the laptops lock up and do not become
>> > operational. The solution to this problem is/was adding the ssb.ko to the
>> > initrd process. So I agree with Luis on this, the ssb module will have to be
>> > added/updated to the initrd process. As for PCI operations, I don't know,
>> > but for PCMCIA operations ssb.ko has to be added and/or updated. Anytime I
>> > am testing new releases of b43, I run "update-initramfs -u" to update the
>> > ssb module. (Sometimes you can do a rmmod ssb and rmmod b43, and then
>> > modprobe them back in. - This saves a reboot)
>>
>> But why is ssb, b43, b44 needed upon early boot?
>
> OK the reason seems to be netboot. Yeah the only fix for distros who want
> this on the initramfs is to update it after a compat-wireless package is
> installed. I suppose we can add a hook to compat-wireless for each distro.
> I'm only familiar with Ubuntu way of doing this so if people are interested
> in other distros you'll need to point/test how to do this on there.
>
> Please try this patch against compat-wireless: (also attached)
>
> From 99af88246c2de71aa799de2b63f9d9ccac41634f Mon Sep 17 00:00:00 2001
> From: Luis R. Rodriguez <lrodriguez at atheros.com>
> Date: Sun, 27 Sep 2009 13:58:22 -0700
> Subject: [PATCH] Add scripts/update-initramfs and use it
>
> Some distributions may ship b44 and ssb on the initramfs for
> netboot. To help with this we need to update the initrafms
> for those distributions.
>
> Signed-off-by: Luis R. Rodriguez <lrodriguez at atheros.com>

I didn't see much feedback but I'm going to merge this in so that it
gets out with the 2.6.32-rc1 stable compat-wireless release.

  Luis


From netrolller.3d at gmail.com  Tue Sep 29 20:43:30 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 29 Sep 2009 20:43:30 +0200
Subject: b43 LP PHY status
In-Reply-To: <d27902c30909291140n7f7782bdv6e6bbbfccfcf10f3@mail.gmail.com>
References: <d27902c30909291140n7f7782bdv6e6bbbfccfcf10f3@mail.gmail.com>
Message-ID: <69e28c910909291143x4cc2214nde049fa19034f905@mail.gmail.com>

2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
> what is current LP PHY status?
>

Working in 2.6.32-rc1, though no calibration yet; so performance is
probably not on par with wl_hybrid or ndiswrapper.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Tue Sep 29 20:58:43 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 29 Sep 2009 20:58:43 +0200
Subject: b43 LP PHY status
In-Reply-To: <d27902c30909291152m11892ea6vd1f360c941f2a3d7@mail.gmail.com>
References: <d27902c30909291140n7f7782bdv6e6bbbfccfcf10f3@mail.gmail.com> 
	<69e28c910909291143x4cc2214nde049fa19034f905@mail.gmail.com> 
	<d27902c30909291152m11892ea6vd1f360c941f2a3d7@mail.gmail.com>
Message-ID: <69e28c910909291158v18705574q7ce9947426d30d8b@mail.gmail.com>

2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
> 2009/9/29 G?bor Stefanik <netrolller.3d at gmail.com>:
>> 2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
>>> what is current LP PHY status?
>>>
>>
>> Working in 2.6.32-rc1, though no calibration yet; so performance is
>> probably not on par with wl_hybrid or ndiswrapper.
>
> i will use it on bcm5354 (mips cpu + b43), so i cannot use ndiswrapper.

BCM5354 might need some extra fixes from wireless-testing - not sure
if they made into 2.6.32.

> I know nothing about wl_hybrid, it is close-source too?

It's semi-closed-source. (There is an open-source part that handles
the card as if it were a fullmac, while the actual code controlling
the HW is closed-source.)

>
> now i use 2.4 kernel on my dlink dir-320 (with binary drivers from broadcom).
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Tue Sep 29 21:16:12 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 29 Sep 2009 21:16:12 +0200
Subject: b43 LP PHY status
In-Reply-To: <d27902c30909291201o2b6f3d86md790096ed385474b@mail.gmail.com>
References: <d27902c30909291140n7f7782bdv6e6bbbfccfcf10f3@mail.gmail.com> 
	<69e28c910909291143x4cc2214nde049fa19034f905@mail.gmail.com> 
	<d27902c30909291152m11892ea6vd1f360c941f2a3d7@mail.gmail.com> 
	<69e28c910909291158v18705574q7ce9947426d30d8b@mail.gmail.com> 
	<d27902c30909291201o2b6f3d86md790096ed385474b@mail.gmail.com>
Message-ID: <69e28c910909291216ybdec79agdfe39a8c796223c8@mail.gmail.com>

2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
> 2009/9/29 G?bor Stefanik <netrolller.3d at gmail.com>:
>> 2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
>>> 2009/9/29 G?bor Stefanik <netrolller.3d at gmail.com>:
>>>> 2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
>>>>> what is current LP PHY status?
>>>>>
>>>>
>>>> Working in 2.6.32-rc1, though no calibration yet; so performance is
>>>> probably not on par with wl_hybrid or ndiswrapper.
>>>
>>> i will use it on bcm5354 (mips cpu + b43), so i cannot use ndiswrapper.
>>
>> BCM5354 might need some extra fixes from wireless-testing - not sure
>> if they made into 2.6.32.
>
> did you need help with testing on bcm5354?
>

Yes; it's still a WIP.

(BTW, please keep the CC to Broadcom-Wireless.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Tue Sep 29 23:30:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 29 Sep 2009 16:30:23 -0500
Subject: b43 LP PHY status
In-Reply-To: <69e28c910909291158v18705574q7ce9947426d30d8b@mail.gmail.com>
References: <d27902c30909291140n7f7782bdv6e6bbbfccfcf10f3@mail.gmail.com>
	<69e28c910909291143x4cc2214nde049fa19034f905@mail.gmail.com>
	<d27902c30909291152m11892ea6vd1f360c941f2a3d7@mail.gmail.com>
	<69e28c910909291158v18705574q7ce9947426d30d8b@mail.gmail.com>
Message-ID: <4AC27C6F.9030604@lwfinger.net>

G?bor Stefanik wrote:
> 2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
>> 2009/9/29 G?bor Stefanik <netrolller.3d at gmail.com>:
>>> 2009/9/29 Ed Spiridonov <edo.rus at gmail.com>:
>>>> what is current LP PHY status?
>>>>
>>> Working in 2.6.32-rc1, though no calibration yet; so performance is
>>> probably not on par with wl_hybrid or ndiswrapper.
>> i will use it on bcm5354 (mips cpu + b43), so i cannot use ndiswrapper.
> 
> BCM5354 might need some extra fixes from wireless-testing - not sure
> if they made into 2.6.32.
> 
>> I know nothing about wl_hybrid, it is close-source too?
> 
> It's semi-closed-source. (There is an open-source part that handles
> the card as if it were a fullmac, while the actual code controlling
> the HW is closed-source.)

It is only available for i386 and x86_64 architectures - not for MIPS.

Larry


