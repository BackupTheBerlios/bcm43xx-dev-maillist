From netrolller.3d at gmail.com  Mon Mar  1 00:03:05 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Mon, 1 Mar 2010 00:03:05 +0100
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <a221c0101002281419t5401a571rcd60e6f87edbb6c@mail.gmail.com>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com> 
	<4B8942D5.5020502@lwfinger.net> <201002271708.29817.mb@bu3sch.de> 
	<4B894A61.1070302@lwfinger.net>
	<69e28c911002271145s590df31en9d2f8b2c47932451@mail.gmail.com> 
	<4B899DA3.4030100@lwfinger.net>
	<a221c0101002271703p3f344ec4t78d5c8b77c6d1290@mail.gmail.com> 
	<a221c0101002271828ye265d72y774320c08a4a15da@mail.gmail.com> 
	<69e28c911002280814v56f2f553x847c8bae94e6aaab@mail.gmail.com> 
	<a221c0101002281419t5401a571rcd60e6f87edbb6c@mail.gmail.com>
Message-ID: <69e28c911002281503l7259c897hafa26171adeaf0b1@mail.gmail.com>

2010/2/28 Nathan Schulte <reklipz at gmail.com>:
> 2010/2/28 G?bor Stefanik <netrolller.3d at gmail.com>:
>> OK, this dump shows the 0x280a write happening with core 3, i.e. PCIE,
>> active. So, it is indeed probably the "PCIE misc configuration"
>> routine. Why it's 0x280a is still a mystery to me, it should be 0x100a
>> according to the specs.
> Unless I'm reading the logs wrong, isn't wl setting bit 0x8000 when
> core 1 is mapped (0 indexed cores, 0x18001000 mapped to space 0)?
> And b43 appears to do it when core 0 is mapped (0x18000000 mapped to
> space 0). ?b43 also reads from 0x100a after writing to 0x280a, and it
> reads as 0x8000 not set (while the 0x280a check show it is set).
>
> This is when comparing the wl_cold and b43_cold logs.
>
> -Nate
>

The latest patch, which is a partial success according to some
testers, writes to core 1 (PCI-E) instead of core 0 (ChipCommon).

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Mon Mar  1 01:22:50 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 1 Mar 2010 01:22:50 +0100
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<69e28c911002281503l7259c897hafa26171adeaf0b1@mail.gmail.com>
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
Message-ID: <201003010122.51341.mb@bu3sch.de>

On Monday 01 March 2010 00:38:16 Nathan Schulte wrote:
> 2010/2/28 G?bor Stefanik <netrolller.3d at gmail.com>:
> > The latest patch, which is a partial success according to some
> > testers, writes to core 1 (PCI-E) instead of core 0 (ChipCommon).
> Then either I am misinterpreting the logs, or the last patch in this
> thread is not the patch you are referring to.
> 
> A successful write/read to PCI config register 0x80 indicates that any
> following MMIO read/writes will be done on that core, correct?
> 
> With the lpphy-test.patch you posted earlier, I see the following
> output from b43:
> Wrote 0x18003000 to pos 0x80
> Read 0x18003000 from pos 0x80
> MAP 1 0xf4000000 0xffffc900225b8000 0x4000 0x0 0
> [snip some mmio read/writes and some PCI config read/writes]
> Wrote 0x18000000 to pos 0x80
> Read 0x18000000 from pos 0x80
> R 4 1 0xf400280a 0x6dbe 0x0 0
> W 4 1 0xf400280a 0xedbe 0x0 0
> 
> This first maps core 3, does some read/writes with it, then maps core
> 0, and sets bit 0x8000, correct?
> 
> Also, is the address space limited to the 4k range?  wl maps core 1,
> but sets bit 0x8000 at address 0x280a, which when added to 0x18001000
> is 0x1800380a, right in the PCIE cores address space (for address
> 0x100a).

Well, you are confusing address spaces here.

On a PCI based SSB device all host-side MMIO transfers go into
the PCI device's address space first. The core-switching moves the window of
the SSB address space that is mapped into 0-0xFFF of the PCI address space.
So if you write to anything above 0xFFF on the PCI device, the write will
not (directly) map to the SSB bus or any device on it.
On the PCI device there is more stuff mapped on top of the SSB sliding
window. For example the SPROM is mapped right on top of it.

So it might be the case that on a PCI-E device the PCI-E-core's registers
are permanently mapped into 0x2000 of the PCI address apace. This is to
avoid sliding the SSB address space window when accessing the PCI-E core.
This can have several reasons: For one speed (unlikely) and for another
to avoid concurrency and ugly races when we need to access the PCI-E core
while the wireless core is already running and generating interrupts.
Note that this is a GUESS, but it would make sense to me.
It would be cool if somebody could compare more registers of the PCI-E
core using the sliding window and the 0x2000 + reg method to check my theory.

-- 
Greetings, Michael.


From mb at bu3sch.de  Tue Mar  2 22:57:51 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 2 Mar 2010 22:57:51 +0100
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <201003010122.51341.mb@bu3sch.de>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
	<201003010122.51341.mb@bu3sch.de>
Message-ID: <201003022257.51878.mb@bu3sch.de>

On Monday 01 March 2010 01:22:50 Michael Buesch wrote:
> Well, you are confusing address spaces here.
>
> On a PCI based SSB device all host-side MMIO transfers go into
> the PCI device's address space first. The core-switching moves the window of
> the SSB address space that is mapped into 0-0xFFF of the PCI address space.
> So if you write to anything above 0xFFF on the PCI device, the write will
> not (directly) map to the SSB bus or any device on it.
> On the PCI device there is more stuff mapped on top of the SSB sliding
> window. For example the SPROM is mapped right on top of it.
> 
> So it might be the case that on a PCI-E device the PCI-E-core's registers
> are permanently mapped into 0x2000 of the PCI address apace. This is to
> avoid sliding the SSB address space window when accessing the PCI-E core.
> This can have several reasons: For one speed (unlikely) and for another
> to avoid concurrency and ugly races when we need to access the PCI-E core
> while the wireless core is already running and generating interrupts.
> Note that this is a GUESS, but it would make sense to me.
> It would be cool if somebody could compare more registers of the PCI-E
> core using the sliding window and the 0x2000 + reg method to check my theory.
> 

So what's the status on this? I think the fact that the testing patch showed some
improvement is a clear indicator that something in the PCI-E core init is wrong.
It's also not surprising that something is going wrong there. The whole PCI-E core
code basically is undebugged. I wrote most of it long time ago, but I still
don't have a device that tests it (and probably won't get one anytime soon).
So I'm really not surprised that there are bugs. There also are missing parts.

A bug in the PCI-E core code is able to show such behavior, because all memory
transfers (MMIO and DMA) from the PCI device to the wireless core are translated
by the PCI-E core.
I think the whole PCI-E core code has to be audited (also the specs, probably).

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Mar  2 23:11:04 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 02 Mar 2010 16:11:04 -0600
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <201003022257.51878.mb@bu3sch.de>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
	<201003010122.51341.mb@bu3sch.de> <201003022257.51878.mb@bu3sch.de>
Message-ID: <4B8D8CF8.8030003@lwfinger.net>

On 03/02/2010 03:57 PM, Michael Buesch wrote:
> 
> So what's the status on this? I think the fact that the testing patch showed some
> improvement is a clear indicator that something in the PCI-E core init is wrong.
> It's also not surprising that something is going wrong there. The whole PCI-E core
> code basically is undebugged. I wrote most of it long time ago, but I still
> don't have a device that tests it (and probably won't get one anytime soon).
> So I'm really not surprised that there are bugs. There also are missing parts.
> 
> A bug in the PCI-E core code is able to show such behavior, because all memory
> transfers (MMIO and DMA) from the PCI device to the wireless core are translated
> by the PCI-E core.
> I think the whole PCI-E core code has to be audited (also the specs, probably).

You are right about the audit of the PCIe code and specs. Some of the MMIO
sequences found for wl and missing in b43 come from the code described in
http://bcm-v4.sipsolutions.net/PCI-E; however, that code needs to be checked as
at least one routine is missing, I have not yet had a chance to go through it,
but I hope to soon.

Larry


From mb at bu3sch.de  Tue Mar  2 23:29:58 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 2 Mar 2010 23:29:58 +0100
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <4B8D906C.9020102@polymtl.ca>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<201003022257.51878.mb@bu3sch.de> <4B8D906C.9020102@polymtl.ca>
Message-ID: <201003022329.58627.mb@bu3sch.de>

On Tuesday 02 March 2010 23:25:48 William Bourque wrote:
> So if I get this right, this code is responsible of handling the b43
> devices, as well as several other PCI-E devices, correct?

Nah, this is a broadcom specific thing of the on-chip SSB bus.

> 
> Because now that you mention this, the wired network card (Marvel Yukon,
> with sky2 drivers) on this netbook also have a tons of issue (doesn't
> show in lspci on a clean boot, oops the kernel if network cable is
> unplugged while in use, fails to load if the module is ever unloaded, ... )
> I thought it was unrelated but from your comment, I feel like this could
> be linked to the same PCI-E bugs as well.

Uh, well. Are you sure your hardware is OK then?

-- 
Greetings, Michael.


From william.bourque at polymtl.ca  Tue Mar  2 23:25:48 2010
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 02 Mar 2010 17:25:48 -0500
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <201003022257.51878.mb@bu3sch.de>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>	<201003010122.51341.mb@bu3sch.de>
	<201003022257.51878.mb@bu3sch.de>
Message-ID: <4B8D906C.9020102@polymtl.ca>


Michael Buesch wrote:
> On Monday 01 March 2010 01:22:50 Michael Buesch wrote:
>> Well, you are confusing address spaces here.
>>
>> On a PCI based SSB device all host-side MMIO transfers go into
>> the PCI device's address space first. The core-switching moves the window of
>> the SSB address space that is mapped into 0-0xFFF of the PCI address space.
>> So if you write to anything above 0xFFF on the PCI device, the write will
>> not (directly) map to the SSB bus or any device on it.
>> On the PCI device there is more stuff mapped on top of the SSB sliding
>> window. For example the SPROM is mapped right on top of it.
>>
>> So it might be the case that on a PCI-E device the PCI-E-core's registers
>> are permanently mapped into 0x2000 of the PCI address apace. This is to
>> avoid sliding the SSB address space window when accessing the PCI-E core.
>> This can have several reasons: For one speed (unlikely) and for another
>> to avoid concurrency and ugly races when we need to access the PCI-E core
>> while the wireless core is already running and generating interrupts.
>> Note that this is a GUESS, but it would make sense to me.
>> It would be cool if somebody could compare more registers of the PCI-E
>> core using the sliding window and the 0x2000 + reg method to check my theory.
>>
> 
> So what's the status on this? I think the fact that the testing patch showed some
> improvement is a clear indicator that something in the PCI-E core init is wrong.
> It's also not surprising that something is going wrong there. The whole PCI-E core
> code basically is undebugged. I wrote most of it long time ago, but I still
> don't have a device that tests it (and probably won't get one anytime soon).
> So I'm really not surprised that there are bugs. There also are missing parts.
> 
> A bug in the PCI-E core code is able to show such behavior, because all memory
> transfers (MMIO and DMA) from the PCI device to the wireless core are translated
> by the PCI-E core.
> I think the whole PCI-E core code has to be audited (also the specs, probably).
> 

So if I get this right, this code is responsible of handling the b43
devices, as well as several other PCI-E devices, correct?

Because now that you mention this, the wired network card (Marvel Yukon,
with sky2 drivers) on this netbook also have a tons of issue (doesn't
show in lspci on a clean boot, oops the kernel if network cable is
unplugged while in use, fails to load if the module is ever unloaded, ... )
I thought it was unrelated but from your comment, I feel like this could
be linked to the same PCI-E bugs as well.

- William


From william.bourque at polymtl.ca  Tue Mar  2 23:50:49 2010
From: william.bourque at polymtl.ca (William Bourque)
Date: Tue, 02 Mar 2010 17:50:49 -0500
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <201003022329.58627.mb@bu3sch.de>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<201003022257.51878.mb@bu3sch.de> <4B8D906C.9020102@polymtl.ca>
	<201003022329.58627.mb@bu3sch.de>
Message-ID: <4B8D9649.8020907@polymtl.ca>


Michael Buesch wrote:
> On Tuesday 02 March 2010 23:25:48 William Bourque wrote:
>> So if I get this right, this code is responsible of handling the b43
>> devices, as well as several other PCI-E devices, correct?
> 
> Nah, this is a broadcom specific thing of the on-chip SSB bus.
> 
Ok, sorry then :)

>> Because now that you mention this, the wired network card (Marvel Yukon,
>> with sky2 drivers) on this netbook also have a tons of issue (doesn't
>> show in lspci on a clean boot, oops the kernel if network cable is
>> unplugged while in use, fails to load if the module is ever unloaded, ... )
>> I thought it was unrelated but from your comment, I feel like this could
>> be linked to the same PCI-E bugs as well.
> 
> Uh, well. Are you sure your hardware is OK then?
> 
I sure hope so. The laptop is very new and I never had trouble with it,
but to tell the truth, it is a refurbished model so can't say for sure.

I think the hardware is fine but there is _very weird_ stuff about the
laptop... I feel like their ACPI implemention is nowhere near standard
and that might cause the problems. It's like everything on this laptop
is under a very agressive power management that bypass the OS and
confuse drivers. But again, it's just a feeling, I don't really have
much facts that back up this theory ;)

- William


From netrolller.3d at gmail.com  Thu Mar  4 01:47:15 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Thu, 4 Mar 2010 01:47:15 +0100
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <4B8EFF26.6040005@lwfinger.net>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com> 
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com> 
	<201003010122.51341.mb@bu3sch.de> <201003022257.51878.mb@bu3sch.de> 
	<4B8EFF26.6040005@lwfinger.net>
Message-ID: <69e28c911003031647o23cf5638xb0d29fb1b73aee64@mail.gmail.com>

On Thu, Mar 4, 2010 at 1:30 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 03/02/2010 03:57 PM, Michael Buesch wrote:
>
>> A bug in the PCI-E core code is able to show such behavior, because all memory
>> transfers (MMIO and DMA) from the PCI device to the wireless core are translated
>> by the PCI-E core.
>> I think the whole PCI-E core code has to be audited (also the specs, probably).
>
> I have nearly finished the update on the code section of the specs page at
> http://bcm-v4.sipsolutions.net/PCI-E. The part that is not done involves the
> sections that read an address from the SPROM and perform operations on that address.
>
> I found that the chip common registers

Do you mean the ChipCommon registers or the Backplane common registers?

> are mapped at 12K for newer cores on
> PCIe. This explains the 0x3XXX addresses. Similarly, the PCIe registers are
> mapped at 8K - the 0x2XXX addresses. The SPROM is shadowed at 4K or 0x1XXX.
>
> Larry
>
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Thu Mar  4 02:32:38 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 03 Mar 2010 19:32:38 -0600
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <69e28c911003031647o23cf5638xb0d29fb1b73aee64@mail.gmail.com>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
	<201003010122.51341.mb@bu3sch.de> <201003022257.51878.mb@bu3sch.de>
	<4B8EFF26.6040005@lwfinger.net>
	<69e28c911003031647o23cf5638xb0d29fb1b73aee64@mail.gmail.com>
Message-ID: <4B8F0DB6.5090209@lwfinger.net>

On 03/03/2010 06:47 PM, G?bor Stefanik wrote:
> On Thu, Mar 4, 2010 at 1:30 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
>> On 03/02/2010 03:57 PM, Michael Buesch wrote:
>>
>>> A bug in the PCI-E core code is able to show such behavior, because all memory
>>> transfers (MMIO and DMA) from the PCI device to the wireless core are translated
>>> by the PCI-E core.
>>> I think the whole PCI-E core code has to be audited (also the specs, probably).
>>
>> I have nearly finished the update on the code section of the specs page at
>> http://bcm-v4.sipsolutions.net/PCI-E. The part that is not done involves the
>> sections that read an address from the SPROM and perform operations on that address.
>>
>> I found that the chip common registers
> 
> Do you mean the ChipCommon registers or the Backplane common registers?

Definitely, it is the chipcommon registers.


From Larry.Finger at lwfinger.net  Thu Mar  4 01:30:30 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 03 Mar 2010 18:30:30 -0600
Subject: LP-PHY Fatal DMA error 0x00000800 on non-ULV Core 2 Duo?!?!!??!
In-Reply-To: <201003022257.51878.mb@bu3sch.de>
References: <69e28c911002260708g45d3c0f7u6abf13b1babe549f@mail.gmail.com>
	<a221c0101002281538p717a3b5v16b14d251cdcc1dc@mail.gmail.com>
	<201003010122.51341.mb@bu3sch.de> <201003022257.51878.mb@bu3sch.de>
Message-ID: <4B8EFF26.6040005@lwfinger.net>

On 03/02/2010 03:57 PM, Michael Buesch wrote:

> A bug in the PCI-E core code is able to show such behavior, because all memory
> transfers (MMIO and DMA) from the PCI device to the wireless core are translated
> by the PCI-E core.
> I think the whole PCI-E core code has to be audited (also the specs, probably).

I have nearly finished the update on the code section of the specs page at
http://bcm-v4.sipsolutions.net/PCI-E. The part that is not done involves the
sections that read an address from the SPROM and perform operations on that address.

I found that the chip common registers are mapped at 12K for newer cores on
PCIe. This explains the 0x3XXX addresses. Similarly, the PCIe registers are
mapped at 8K - the 0x2XXX addresses. The SPROM is shadowed at 4K or 0x1XXX.

Larry



From mh+bcm43xx-dev at zugschlus.de  Thu Mar  4 18:54:23 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Thu, 4 Mar 2010 18:54:23 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with  2.6.33
Message-ID: <20100304175423.GC2775@torres.zugschlus.de>

Hi,

when the broadcom-sta driver didn't compile with 2.6.33 I decided to
give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
with LP Phy (14e4:4315). I am using Debian unstable.

When I load the module, a new interface wlan0 appears, but iwlist scan
says "Interface doesn't support scanning". Looks like the device isn't
properly initialized.

Here is the information you may need:

$ uname -a
Linux feather 2.6.33-zgws1 #1 SMP PREEMPT Mon Mar 1 14:03:59 CET 2010 i686 GNU/Linux


dmesg:
[  968.505870] cfg80211: Calling CRDA to update world regulatory domain
[  968.587053] b43-pci-bridge 0000:03:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
[  968.587088] b43-pci-bridge 0000:03:00.0: setting latency timer to 64
[  968.605361] ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
[  968.605441] ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
[  968.605480] ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
[  968.605517] ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
[  968.652612] ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0
[  968.687313] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[  968.753997] phy0: Selected rate control algorithm 'minstrel'
[  968.758644] Registered led device: b43-phy0::tx
[  968.758774] Registered led device: b43-phy0::rx
[  968.758925] Registered led device: b43-phy0::radio
[  968.759244] Broadcom 43xx driver loaded [ Features: PL, Firmware-ID: FW13 ]

lspci -nn | grep 14e4
02:00.0 Ethernet controller [0200]: Broadcom Corporation NetLink BCM5906M Fast Ethernet PCI Express [14e4:1713] (rev 02)
03:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g [14e4:4315] (rev 01)

$ lspci -vvn | grep 43 -a7
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 30
        Region 0: Memory at f6000000 (64-bit, non-prefetchable) [size=64K]
        Expansion ROM at <ignored> [disabled]
        Capabilities: <access denied>
        Kernel driver in use: tg3

03:00.0 0280: 14e4:4315 (rev 01)
        Subsystem: 14e4:04b5
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 0, Cache Line Size: 64 bytes
        Interrupt: pin A routed to IRQ 17
        Region 0: Memory at f8000000 (64-bit, non-prefetchable) [size=16K]
        Capabilities: <access denied>
        Kernel driver in use: b43-pci-bridge


$ sudo md5sum /lib/firmware/b43/*
c353ac2ea53c8b4052bf0aec13221389  /lib/firmware/b43/a0g0bsinitvals5.fw
8a2ec225f53b9695384a4a68d49e87f8  /lib/firmware/b43/a0g0bsinitvals9.fw
d16b6a6816d5592679b070260c265e30  /lib/firmware/b43/a0g0initvals5.fw
c20c4e7a6cc8692e11ad56ae11c1c154  /lib/firmware/b43/a0g0initvals9.fw
04bf80feb2714ac60cb631a91cc16bd5  /lib/firmware/b43/a0g1bsinitvals13.fw
17624ccf4d597b3bab5a260b0a8b6ac8  /lib/firmware/b43/a0g1bsinitvals5.fw
d9abf2903c8e560adedfd064cf6e9d87  /lib/firmware/b43/a0g1bsinitvals9.fw
50c3a7f6430ced6e77ddd13483600571  /lib/firmware/b43/a0g1initvals13.fw
5d9c5ae3fcf38676ce46ad11e4a54f31  /lib/firmware/b43/a0g1initvals5.fw
e91ad68e6e96d07b101924cb9865246c  /lib/firmware/b43/a0g1initvals9.fw
f6c7f29e58b565cd300eeb0a2a7c24df  /lib/firmware/b43/b0g0bsinitvals13.fw
ade6281fd890c67dbb12606779711d47  /lib/firmware/b43/b0g0bsinitvals5.fw
617e1d52a9335a9a08c4830cc7817bb5  /lib/firmware/b43/b0g0bsinitvals9.fw
0653eb1c6e54d649c0120caf9bea219f  /lib/firmware/b43/b0g0initvals13.fw
2ecbcd815df74c71919ce66182ef9afc  /lib/firmware/b43/b0g0initvals5.fw
83def668d326676df551adc93dbda796  /lib/firmware/b43/b0g0initvals9.fw
43b33858d9bf005884d76785621a177d  /lib/firmware/b43/lp0bsinitvals13.fw
43b33858d9bf005884d76785621a177d  /lib/firmware/b43/lp0bsinitvals14.fw
6e7819ec87bac6ec88e2711331939221  /lib/firmware/b43/lp0bsinitvals15.fw
c9c2d92c8e1d1631b1f1d008508d5e42  /lib/firmware/b43/lp0bsinitvals16.fw
b2a0ca2199846c38fe91f17cdc20d0ae  /lib/firmware/b43/lp0initvals13.fw
cf455d90c3a7d3d1facb967622631a92  /lib/firmware/b43/lp0initvals14.fw
922ae38b5c76ece039b4033f8c8f4165  /lib/firmware/b43/lp0initvals15.fw
7a0760bd162eb6dad3a9033496c4d5c9  /lib/firmware/b43/lp0initvals16.fw
29f8d0d951b69cd7113e0777b6f1cb3c  /lib/firmware/b43/n0absinitvals11.fw
6e6557bab9765b0a1c41479c3c41f784  /lib/firmware/b43/n0bsinitvals11.fw
e59317310883c96513450a1f6e949074  /lib/firmware/b43/n0bsinitvals16.fw
871c61ec9dd7fe4eeea156784670bdc3  /lib/firmware/b43/n0initvals11.fw
f1969502a89c95078faa2363a76a87ee  /lib/firmware/b43/n0initvals16.fw
52c23becb937e692088baf750a40c15f  /lib/firmware/b43/pcm5.fw
7659690605c99f0368155614bc678ca6  /lib/firmware/b43/sslpn0bsinitvals16.fw
7659690605c99f0368155614bc678ca6  /lib/firmware/b43/sslpn0initvals16.fw
b09dfd961c6b1a3875578a2052b7d29d  /lib/firmware/b43/ucode11.fw
97f6663eb2514f2c04df4ce6aca0e826  /lib/firmware/b43/ucode13.fw
dd9fb74c21e93e0c34e67bc7d4803379  /lib/firmware/b43/ucode14.fw
497ff63f043c60f9fcf27fbdc5b505cf  /lib/firmware/b43/ucode15.fw
c4d210bd80aba0bfd713a84894cf9457  /lib/firmware/b43/ucode16.fw
623192f4423ffae06674301a7539cfef  /lib/firmware/b43/ucode5.fw
dcb911acaa60ed6fbe5bed88419db0ce  /lib/firmware/b43/ucode9.fw
$

What is this CRDA business? May I be missing something?

Any hints will be appreciated.

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From william.bourque at polymtl.ca  Thu Mar  4 19:49:14 2010
From: william.bourque at polymtl.ca (William Bourque)
Date: Thu, 04 Mar 2010 13:49:14 -0500
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304175423.GC2775@torres.zugschlus.de>
References: <20100304175423.GC2775@torres.zugschlus.de>
Message-ID: <4B9000AA.5060507@polymtl.ca>


Hello

Marc Haber wrote:
> Hi,
> 
> when the broadcom-sta driver didn't compile with 2.6.33 I decided to
> give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
> with LP Phy (14e4:4315). I am using Debian unstable.
> 
> When I load the module, a new interface wlan0 appears, but iwlist scan
> says "Interface doesn't support scanning". Looks like the device isn't
> properly initialized.
> 
Silly question, but did you try to "up" (ifconfig wlan0 up) the
interface before scanning?
My b43 won't allow scanning either unless it is upped. i don't know if
this behavior is intended (poke to the list) but it's not quite a problem.

- William


From Larry.Finger at lwfinger.net  Thu Mar  4 20:16:26 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 04 Mar 2010 13:16:26 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304175423.GC2775@torres.zugschlus.de>
References: <20100304175423.GC2775@torres.zugschlus.de>
Message-ID: <4B90070A.3040401@lwfinger.net>

On 03/04/2010 11:54 AM, Marc Haber wrote:
> 
> What is this CRDA business? May I be missing something?

CRDA is the user-space implementation of the regulatory database.

You should see the allowed frequencies in this form:

cfg80211: Calling CRDA to update world regulatory domain
cfg80211: World regulatory domain updated:
     (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
     (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
     (2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
     (2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
     (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
     (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)

If not, then you need to install the crda package, or whatever Debian calls it.

Of course, for the BCM4312, you only need the 2.4 GHz band.

I had not tested it for a while, but the wl driver built for me on 2.6.33. There
were some warnings, but nothing serious.

Larry


From Larry.Finger at lwfinger.net  Thu Mar  4 20:58:09 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 04 Mar 2010 13:58:09 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B9000AA.5060507@polymtl.ca>
References: <20100304175423.GC2775@torres.zugschlus.de>
	<4B9000AA.5060507@polymtl.ca>
Message-ID: <4B9010D1.1000702@lwfinger.net>

On 03/04/2010 12:49 PM, William Bourque wrote:
> 
> Hello
> 
> Marc Haber wrote:
>> Hi,
>>
>> when the broadcom-sta driver didn't compile with 2.6.33 I decided to
>> give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
>> with LP Phy (14e4:4315). I am using Debian unstable.
>>
>> When I load the module, a new interface wlan0 appears, but iwlist scan
>> says "Interface doesn't support scanning". Looks like the device isn't
>> properly initialized.
>>
> Silly question, but did you try to "up" (ifconfig wlan0 up) the
> interface before scanning?
> My b43 won't allow scanning either unless it is upped. i don't know if
> this behavior is intended (poke to the list) but it's not quite a problem.

If you control the device with NetworkManager, it will bring it up. If you are
controlling it manually, then either an explicit ifup is required, or it is set
implicitly in the control file. That is distro dependent. For openSUSE, that
file is /etc/sysconfig/network/ifcfg-wlan0 where there is a line that says

STARTMODE='XXXXXX', where XXXXXX is auto, ifplugd, manual, or off.

Larry


From mh+bcm43xx-dev at zugschlus.de  Thu Mar  4 22:46:10 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Thu, 4 Mar 2010 22:46:10 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B90070A.3040401@lwfinger.net>
References: <4B90070A.3040401@lwfinger.net>
Message-ID: <20100304214610.GC8414@torres.zugschlus.de>

On Thu, Mar 04, 2010 at 01:16:26PM -0600, Larry Finger wrote:
> CRDA is the user-space implementation of the regulatory database.

What will the b43 driver do without a CRDA user-space daemon? It's not
yet in Debian (see
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=536502).

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From mh+bcm43xx-dev at zugschlus.de  Thu Mar  4 23:36:31 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Thu, 4 Mar 2010 23:36:31 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B9000AA.5060507@polymtl.ca>
References: <20100304175423.GC2775@torres.zugschlus.de>
	<4B9000AA.5060507@polymtl.ca>
Message-ID: <20100304223631.GA12145@torres.zugschlus.de>

On Thu, Mar 04, 2010 at 01:49:14PM -0500, William Bourque wrote:
> Silly question, but did you try to "up" (ifconfig wlan0 up) the
> interface before scanning?

I tried ip link set dev wlan0 up, which gave me a few more dmesg lines:
b43 ssb0:0: firmware: requesting b43/ucode15.fw
b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
b43-phy0: Loading firmware version 478.108 (2008-07-01 00.50:23)
ADDRCONF(NETDEV_UP): wlan0: link is not ready

iwlist scan wlan0 still says 'doesn't support scanning"

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From Larry.Finger at lwfinger.net  Thu Mar  4 23:48:21 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 04 Mar 2010 16:48:21 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with	2.6.33
In-Reply-To: <20100304214610.GC8414@torres.zugschlus.de>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
Message-ID: <4B9038B5.3070103@lwfinger.net>

On 03/04/2010 03:46 PM, Marc Haber wrote:
> On Thu, Mar 04, 2010 at 01:16:26PM -0600, Larry Finger wrote:
>> CRDA is the user-space implementation of the regulatory database.
> 
> What will the b43 driver do without a CRDA user-space daemon? It's not
> yet in Debian (see
> http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=536502).

I'm not an expert on the regulatory stuff, but if you do not have a list of
allowed frequencies listed as I posted, then I think that none are allowed.

There was compatibility code kept in the kernel for several cycles so that even
the slowest distros could get prepared. Perhaps the devs underestimated Debian.

Your best approach is to go to
http://linuxwireless.org/en/developers/Regulatory/CRDA, get and build a copy.

Larry


From celejar at gmail.com  Thu Mar  4 23:53:10 2010
From: celejar at gmail.com (Celejar)
Date: Thu, 4 Mar 2010 17:53:10 -0500
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304214610.GC8414@torres.zugschlus.de>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
Message-ID: <20100304175310.1299096d.celejar@gmail.com>

On Thu, 4 Mar 2010 22:46:10 +0100
Marc Haber <mh+bcm43xx-dev at zugschlus.de> wrote:

> On Thu, Mar 04, 2010 at 01:16:26PM -0600, Larry Finger wrote:
> > CRDA is the user-space implementation of the regulatory database.
> 
> What will the b43 driver do without a CRDA user-space daemon? It's not
> yet in Debian (see
> http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=536502).

b43 works perfectly fine with my 4318 on my Debian Sid system, without
CRDA installed.

Celejar
-- 
foffl.sourceforge.net - Feeds OFFLine, an offline RSS/Atom aggregator
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From Larry.Finger at lwfinger.net  Fri Mar  5 00:11:06 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 04 Mar 2010 17:11:06 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304175310.1299096d.celejar@gmail.com>
References: <4B90070A.3040401@lwfinger.net>	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
Message-ID: <4B903E0A.1060307@lwfinger.net>

On 03/04/2010 04:53 PM, Celejar wrote:
> 
> b43 works perfectly fine with my 4318 on my Debian Sid system, without
> CRDA installed.

What kernel version is in Sid?

Larry


From celejar at gmail.com  Fri Mar  5 00:33:46 2010
From: celejar at gmail.com (Celejar)
Date: Thu, 4 Mar 2010 18:33:46 -0500
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B903E0A.1060307@lwfinger.net>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
Message-ID: <20100304183346.bf096b96.celejar@gmail.com>

On Thu, 04 Mar 2010 17:11:06 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> On 03/04/2010 04:53 PM, Celejar wrote:
> > 
> > b43 works perfectly fine with my 4318 on my Debian Sid system, without
> > CRDA installed.
> 
> What kernel version is in Sid?

Currently some version of 2.6.32.  I should have noted that I actually
usually run self-built vanilla ones (from upstream mainline), but I'm
pretty sure that b43 works even when I use the Debian packaged ones
from the repos.

Celejar
-- 
foffl.sourceforge.net - Feeds OFFLine, an offline RSS/Atom aggregator
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From netrolller.3d at gmail.com  Fri Mar  5 00:50:43 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Fri, 5 Mar 2010 00:50:43 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304223631.GA12145@torres.zugschlus.de>
References: <20100304175423.GC2775@torres.zugschlus.de>
	<4B9000AA.5060507@polymtl.ca> 
	<20100304223631.GA12145@torres.zugschlus.de>
Message-ID: <69e28c911003041550n2d9d477dobdf992ab710ad42f@mail.gmail.com>

On Thu, Mar 4, 2010 at 11:36 PM, Marc Haber <mh+bcm43xx-dev at zugschlus.de> wrote:
> On Thu, Mar 04, 2010 at 01:49:14PM -0500, William Bourque wrote:
>> Silly question, but did you try to "up" (ifconfig wlan0 up) the
>> interface before scanning?
>
> I tried ip link set dev wlan0 up, which gave me a few more dmesg lines:
> b43 ssb0:0: firmware: requesting b43/ucode15.fw
> b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
> b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
> b43-phy0: Loading firmware version 478.108 (2008-07-01 00.50:23)
> ADDRCONF(NETDEV_UP): wlan0: link is not ready
>
> iwlist scan wlan0 still says 'doesn't support scanning"

Is your kernel compiled with WEXT scanning support? AFAIK it is
deprecated in 2.6.33 in favor of nl80211 (i.e. "iw dev wlan0 scan"),
so it is not auto-selected.

>
> Greetings
> Marc
>
> --
> -----------------------------------------------------------------------------
> Marc Haber ? ? ? ? | "I don't trust Computers. They | Mailadresse im Header
> Mannheim, Germany ?| ?lose things." ? ?Winona Ryder | Fon: *49 621 72739834
> Nordisch by Nature | ?How to make an American Quilt | Fax: *49 3221 2323190
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Fri Mar  5 00:52:15 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 04 Mar 2010 17:52:15 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304183346.bf096b96.celejar@gmail.com>
References: <4B90070A.3040401@lwfinger.net>	<20100304214610.GC8414@torres.zugschlus.de>	<20100304175310.1299096d.celejar@gmail.com>	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
Message-ID: <4B9047AF.4080403@lwfinger.net>

On 03/04/2010 05:33 PM, Celejar wrote:
> 
> Currently some version of 2.6.32.  I should have noted that I actually
> usually run self-built vanilla ones (from upstream mainline), but I'm
> pretty sure that b43 works even when I use the Debian packaged ones
> from the repos.

It may fail with 2.6.33.


From celejar at gmail.com  Fri Mar  5 01:08:24 2010
From: celejar at gmail.com (Celejar)
Date: Thu, 4 Mar 2010 19:08:24 -0500
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B9047AF.4080403@lwfinger.net>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
	<4B9047AF.4080403@lwfinger.net>
Message-ID: <20100304190824.2c0ed295.celejar@gmail.com>

On Thu, 04 Mar 2010 17:52:15 -0600
Larry Finger <Larry.Finger at lwfinger.net> wrote:

> On 03/04/2010 05:33 PM, Celejar wrote:
> > 
> > Currently some version of 2.6.32.  I should have noted that I actually
> > usually run self-built vanilla ones (from upstream mainline), but I'm
> > pretty sure that b43 works even when I use the Debian packaged ones
> > from the repos.
> 
> It may fail with 2.6.33.

I'm currently using .33, and it works fine.

Celejar
-- 
foffl.sourceforge.net - Feeds OFFLine, an offline RSS/Atom aggregator
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From chris at cvine.freeserve.co.uk  Fri Mar  5 18:54:24 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Fri, 5 Mar 2010 17:54:24 +0000
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304190824.2c0ed295.celejar@gmail.com>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com>
Message-ID: <20100305175424.3f702daf@boulder.homenet>

On Thu, 4 Mar 2010 19:08:24 -0500
Celejar <celejar at gmail.com> wrote:
> On Thu, 04 Mar 2010 17:52:15 -0600
> Larry Finger <Larry.Finger at lwfinger.net> wrote:
> 
> > On 03/04/2010 05:33 PM, Celejar wrote:
> > > 
> > > Currently some version of 2.6.32.  I should have noted that I
> > > actually usually run self-built vanilla ones (from upstream
> > > mainline), but I'm pretty sure that b43 works even when I use the
> > > Debian packaged ones from the repos.
> > 
> > It may fail with 2.6.33.
> 
> I'm currently using .33, and it works fine.

The original OP seems to have been concerned with the Lenovo Ideapad
S12, which I have, and mine fails because of the DMA error bug.  As it
happens it also reports that wlan0 can't scan, but that is a side
effect of the DMA bug (and can be verified by looking at dmesg).

You can get the Ideapad to work by forcing use of the PIO however.

Chris




From mh+bcm43xx-dev at zugschlus.de  Sat Mar  6 11:07:22 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Sat, 6 Mar 2010 11:07:22 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100305175424.3f702daf@boulder.homenet>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com>
	<20100305175424.3f702daf@boulder.homenet>
Message-ID: <20100306100722.GC19544@torres.zugschlus.de>

Hi,

On Fri, Mar 05, 2010 at 05:54:24PM +0000, Chris Vine wrote:
> You can get the Ideapad to work by forcing use of the PIO however.

How exactly do I do this? I remember trying by adding some options to
/etc/modprobe.d/b43, but the module didn't seem to understand this. I
don't have the ideapad at hand at the moment, so I cannot look, but I
can try tonight.

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From Larry.Finger at lwfinger.net  Sat Mar  6 14:57:57 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 06 Mar 2010 07:57:57 -0600
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with	2.6.33
In-Reply-To: <20100306100722.GC19544@torres.zugschlus.de>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com>
	<20100305175424.3f702daf@boulder.homenet>
	<20100306100722.GC19544@torres.zugschlus.de>
Message-ID: <4B925F65.3080107@lwfinger.net>

On 03/06/2010 04:07 AM, Marc Haber wrote:
> Hi,
> 
> On Fri, Mar 05, 2010 at 05:54:24PM +0000, Chris Vine wrote:
>> You can get the Ideapad to work by forcing use of the PIO however.
> 
> How exactly do I do this? I remember trying by adding some options to
> /etc/modprobe.d/b43, but the module didn't seem to understand this. I
> don't have the ideapad at hand at the moment, so I cannot look, but I
> can try tonight.

Unless you are getting the DMA error, choosing PIO will not help. If you are
getting that error, it will say so in the dmesg output. In addition, it will
tell you exactly what to do. Note: In the 2.6.34 code, the interface will
automatically switch to PIO mode when a fatal DMA error occurs.

Larry


From mh+bcm43xx-dev at zugschlus.de  Mon Mar  8 11:28:41 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Mon, 8 Mar 2010 11:28:41 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B925F65.3080107@lwfinger.net>
References: <4B90070A.3040401@lwfinger.net>
	<20100304214610.GC8414@torres.zugschlus.de>
	<20100304175310.1299096d.celejar@gmail.com>
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com>
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com>
	<20100305175424.3f702daf@boulder.homenet>
	<20100306100722.GC19544@torres.zugschlus.de>
	<4B925F65.3080107@lwfinger.net>
Message-ID: <20100308102841.GE18640@torres.zugschlus.de>

Hi Larry,

On Sat, Mar 06, 2010 at 07:57:57AM -0600, Larry Finger wrote:
> On 03/06/2010 04:07 AM, Marc Haber wrote:
> > On Fri, Mar 05, 2010 at 05:54:24PM +0000, Chris Vine wrote:
> >> You can get the Ideapad to work by forcing use of the PIO however.
> > 
> > How exactly do I do this? I remember trying by adding some options to
> > /etc/modprobe.d/b43, but the module didn't seem to understand this. I
> > don't have the ideapad at hand at the moment, so I cannot look, but I
> > can try tonight.
> 
> Unless you are getting the DMA error, choosing PIO will not help. If you are
> getting that error, it will say so in the dmesg output.

I have looked again, and the fatal DMA error is indeed there. It
suggested setting CONFIG_B43_FORCE_PIO=y, which I did despite of the
very clear warnings given in the make menuconfig help.

However, the DMA error has vanished, but my B43 still says that the
interface doesn't support scanning.

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From netrolller.3d at gmail.com  Mon Mar  8 12:54:44 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Mon, 8 Mar 2010 12:54:44 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100308102841.GE18640@torres.zugschlus.de>
References: <4B90070A.3040401@lwfinger.net>
	<20100304175310.1299096d.celejar@gmail.com> 
	<4B903E0A.1060307@lwfinger.net>
	<20100304183346.bf096b96.celejar@gmail.com> 
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com> 
	<20100305175424.3f702daf@boulder.homenet>
	<20100306100722.GC19544@torres.zugschlus.de> 
	<4B925F65.3080107@lwfinger.net>
	<20100308102841.GE18640@torres.zugschlus.de>
Message-ID: <69e28c911003080354xb99f632p4618c507a78067c4@mail.gmail.com>

On Mon, Mar 8, 2010 at 11:28 AM, Marc Haber <mh+bcm43xx-dev at zugschlus.de> wrote:
> Hi Larry,
>
> On Sat, Mar 06, 2010 at 07:57:57AM -0600, Larry Finger wrote:
>> On 03/06/2010 04:07 AM, Marc Haber wrote:
>> > On Fri, Mar 05, 2010 at 05:54:24PM +0000, Chris Vine wrote:
>> >> You can get the Ideapad to work by forcing use of the PIO however.
>> >
>> > How exactly do I do this? I remember trying by adding some options to
>> > /etc/modprobe.d/b43, but the module didn't seem to understand this. I
>> > don't have the ideapad at hand at the moment, so I cannot look, but I
>> > can try tonight.
>>
>> Unless you are getting the DMA error, choosing PIO will not help. If you are
>> getting that error, it will say so in the dmesg output.
>
> I have looked again, and the fatal DMA error is indeed there. It
> suggested setting CONFIG_B43_FORCE_PIO=y, which I did despite of the
> very clear warnings given in the make menuconfig help.
>
> However, the DMA error has vanished, but my B43 still says that the
> interface doesn't support scanning.

That message sounds like you are using iwlist to scan - try iw instead.

>
> Greetings
> Marc
>
> --
> -----------------------------------------------------------------------------
> Marc Haber ? ? ? ? | "I don't trust Computers. They | Mailadresse im Header
> Mannheim, Germany ?| ?lose things." ? ?Winona Ryder | Fon: *49 621 72739834
> Nordisch by Nature | ?How to make an American Quilt | Fax: *49 3221 2323190
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Mon Mar  8 13:49:52 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Mon, 8 Mar 2010 13:49:52 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100308123601.GF18640@torres.zugschlus.de>
References: <20100304175310.1299096d.celejar@gmail.com>
	<20100304183346.bf096b96.celejar@gmail.com> 
	<4B9047AF.4080403@lwfinger.net>
	<20100304190824.2c0ed295.celejar@gmail.com> 
	<20100305175424.3f702daf@boulder.homenet>
	<20100306100722.GC19544@torres.zugschlus.de> 
	<4B925F65.3080107@lwfinger.net>
	<20100308102841.GE18640@torres.zugschlus.de> 
	<69e28c911003080354xb99f632p4618c507a78067c4@mail.gmail.com> 
	<20100308123601.GF18640@torres.zugschlus.de>
Message-ID: <69e28c911003080449x2d470077o3379c3db50b109c0@mail.gmail.com>

2010/3/8 Marc Haber <mh+bcm43xx-deev at zugschlus.de>:
> Hi,
>
> On Mon, Mar 08, 2010 at 12:54:44PM +0100, G?bor Stefanik wrote:
>> That message sounds like you are using iwlist to scan - try iw instead.
>
> Yes, I am using iwlist. Has this changed? Have the tools like wicd
> and/or network-manager already adapted to use the new tools/API?

AFAIK not, but iw gives more meaningful error messages in case of a failure.

>
> On the box that I am currently using (which has a ipw2200, oh
> wonderful old times), iw list returns "nl80211 not found". Which
> option is my kernel missing?

Probably nothing - rather, your libnl is too old (older than
1.0-pre8). However, you can't use iw with ipw2200 - it only supports
drivers that use cfg80211.

>
> Greetings
> Marc
>
> --
> -----------------------------------------------------------------------------
> Marc Haber ? ? ? ? | "I don't trust Computers. They | Mailadresse im Header
> Mannheim, Germany ?| ?lose things." ? ?Winona Ryder | Fon: *49 621 72739834
> Nordisch by Nature | ?How to make an American Quilt | Fax: *49 3221 2323190
>



-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From chris at cvine.freeserve.co.uk  Mon Mar  8 18:22:26 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Mon, 8 Mar 2010 17:22:26 +0000
Subject: Suspend/hibernate broken in 2.6.33
Message-ID: <20100308172226.67d32b9b@laptop.homenet>

I have noticed that although my BCM4312 802.11b/g [14e4:4315] wireless
device works using the PIO option in 2.6.33, it breaks after a suspend
or hibernate.  Attempts to bring up the wlan0 interface with
'ifconfig wlan0 up' after suspension or hibernation results in the
following message (although nothing is revealed by dmesg):

  SIOCSIFFLAGS: Unknown error 132

If I unload all wireless and related modules before suspending or
hibernating, and then reload them on resuming, I get more information
from dmesg, namely that it thinks that the wireless has been turned off
by the rfkill button, which it definitely has not:

*****

Restarting tasks ... done.
cfg80211: Using static regulatory domain info
cfg80211: Regulatory domain: 00
    (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
    (2402000 KHz - 2472000 KHz @ 40000 KHz), (600 mBi, 2000 mBm)
    (2457000 KHz - 2482000 KHz @ 20000 KHz), (600 mBi, 2000 mBm)
    (2474000 KHz - 2494000 KHz @ 20000 KHz), (600 mBi, 2000 mBm)
    (5170000 KHz - 5250000 KHz @ 40000 KHz), (600 mBi, 2000 mBm)
    (5735000 KHz - 5835000 KHz @ 40000 KHz), (600 mBi, 2000 mBm)
cfg80211: Calling CRDA to update world regulatory domain
b43-pci-bridge 0000:03:00.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
b43-pci-bridge 0000:03:00.0: setting latency timer to 64
ssb: Core 0 found: ChipCommon (cc 0x800, rev 0x16, vendor 0x4243)
ssb: Core 1 found: IEEE 802.11 (cc 0x812, rev 0x0F, vendor 0x4243)
ssb: Core 2 found: PCMCIA (cc 0x80D, rev 0x0A, vendor 0x4243)
ssb: Core 3 found: PCI-E (cc 0x820, rev 0x09, vendor 0x4243)
ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0
b43-phy0: Broadcom 4312 WLAN found (core revision 15)
b43-phy0 debug: Found PHY: Analog 6, Type 5, Revision 1
b43-phy0 debug: Found Radio: Manuf 0x17F, Version 0x2062, Revision 2
phy0: Selected rate control algorithm 'minstrel'
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
Broadcom 43xx driver loaded [ Features: PMLS, Firmware-ID: FW13 ]
b43 ssb0:0: firmware: requesting b43/ucode15.fw
b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
b43-phy0: Loading firmware version 478.104 (2008-07-01 00:50:23)
b43-phy0 debug: b2062: Using crystal tab entry 19200 kHz.
b43-phy0 debug: Chip initialized
b43-phy0 debug: PIO initialized
b43-phy0 debug: QoS enabled
b43-phy0 debug: Wireless interface started
b43-phy0 debug: Adding Interface type 2
b43-phy0: Radio hardware status changed to DISABLED
b43-phy0: Radio turned on by software
b43-phy0: The hardware RF-kill button still turns the radio physically
off. Press the button to turn it on. b43-phy0 debug: Removing Interface
type 2 b43-phy0 debug: Wireless interface stopped

*****

The first time this happened I got very alarmed because although a
reboot into 2.6.33 would work (until there was another suspension or
hibernation) rebooting into 2.6.32 or earlier kernels would not - it
thought that the radio had been switched off at the outset.  It appears
that suspension had done something nasty to my CMOS and I had to
restore all defaults in the BIOS to get it to come on again in 2.6.32
and less.  (I have not been able to reproduce this again since but
beware if testing this out.)

This does not seem to be b43 specific, as I get exactly the same effect
using the broadcom wl driver.  Suspension works in kernel 2.6.32 and
below, but not with kernel 2.6.33.

Chris


From Larry.Finger at lwfinger.net  Wed Mar 10 17:41:32 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 10 Mar 2010 10:41:32 -0600
Subject: [PATCH] ssb: Export ssb_chipco_gpio_control - needed by N PHY
 code
Message-ID: <4b97cbbc.nqHhscLOOd2KdAxL%Larry.Finger@lwfinger.net>

The latest changes in the N PHY core require the symbol
ssb_chipco_gpio_control to be exported.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

This fixes a build error in wireless-testing - "git describe" lists
it as v2.6.34-rc1-47014-g33b6b57.

Larry
---
 
Index: wireless-testing/drivers/ssb/driver_chipcommon.c
===================================================================
--- wireless-testing.orig/drivers/ssb/driver_chipcommon.c
+++ wireless-testing/drivers/ssb/driver_chipcommon.c
@@ -370,6 +370,7 @@ u32 ssb_chipco_gpio_control(struct ssb_c
 {
 	return chipco_write32_masked(cc, SSB_CHIPCO_GPIOCTL, mask, value);
 }
+EXPORT_SYMBOL(ssb_chipco_gpio_control);
 
 u32 ssb_chipco_gpio_intmask(struct ssb_chipcommon *cc, u32 mask, u32 value)
 {


From Larry.Finger at lwfinger.net  Sat Mar 13 05:36:39 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 12 Mar 2010 22:36:39 -0600
Subject: Even worse problems with BCM4312 on Netbooks
Message-ID: <4B9B1657.8050202@lwfinger.net>

A problem with BCM4312 on Netbooks that is worse than the DMA errors has shown
up in Fedora F12 systems on Acer One D250 Netbooks.
See https://bugzilla.redhat.com/show_bug.cgi?id=533746. In this case, the system
seems to freeze when ssb is loaded. So far, no one has managed to get any output
from the logging console, but it does not seem to be a kernel panic - flashing
CAP and NUM lock leds do not seem to happen.

One other thing - this freeze occurs even if the firmware is not available.

The kernel in question is 2.6.33, but there is also a report of problems with a
2.6.30 kernel. I'm not sure if that one has the LP PHY code backported, or not.
John might know.

Larry


From micacatt at gmail.com  Sat Mar 13 19:05:27 2010
From: micacatt at gmail.com (mic cat)
Date: Sat, 13 Mar 2010 19:05:27 +0100
Subject: BCM 43
Message-ID: <751671491003131005v42ea129cmd899f53ece9a9185@mail.gmail.com>

Hi all

i have 2 Broadcom network controller :
            BCM4312 802.11 B/G 14E4:4315
            bcm 43XX 1.0 14e4:432b

I know this one it is compatible with aircrack supporting injection
Thank you for your invaluable help ..
thank


From netrolller.3d at gmail.com  Sat Mar 13 19:38:01 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sat, 13 Mar 2010 19:38:01 +0100
Subject: BCM 43
In-Reply-To: <751671491003131005v42ea129cmd899f53ece9a9185@mail.gmail.com>
References: <751671491003131005v42ea129cmd899f53ece9a9185@mail.gmail.com>
Message-ID: <69e28c911003131038x267c3ccanee8b48e44c83536e@mail.gmail.com>

On Sat, Mar 13, 2010 at 7:05 PM, mic cat <micacatt at gmail.com> wrote:
> Hi all
>
> i have 2 Broadcom network controller :
> ? ? ? ? ? ?BCM4312 802.11 B/G 14E4:4315

This is supported in 2.6.32 and newer; though you may need to compile
with CONFIG_B43_FORCE_PIO if you have a netbook and/or a machine with
PhoenixBIOS. (The latest compat-wireless package handles DMA/PIO
selection automatically, no need to tinker with config options
anymore.)

Note that the kernel in BT4 is older than 2.6.32 - you need to compile
& install compat-wireless to gain support for this card. (Remember to
apply any mac80211 patches that were present in the kernel to
compat-wireless!)

> ? ? ? ? ? ?bcm 43XX 1.0 14e4:432b

This is a BCM4322 (N-PHY). Work on it is ongoing.

>
> I know this one it is compatible with aircrack supporting injection
> Thank you for your invaluable help ..
> thank
>

As a general rule, do not bug Michael with injection-related
questions; the only one in the team who cares about injection is me.
Exception: when an injection-related problem also affects hostapd,
feel free to contact Michael.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Sat Mar 13 20:06:10 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Sat, 13 Mar 2010 20:06:10 +0100
Subject: BCM 43
In-Reply-To: <201003131948.41401.mb@bu3sch.de>
References: <751671491003131005v42ea129cmd899f53ece9a9185@mail.gmail.com> 
	<69e28c911003131038x267c3ccanee8b48e44c83536e@mail.gmail.com> 
	<201003131948.41401.mb@bu3sch.de>
Message-ID: <69e28c911003131106l32c10c09je2daf2f568cf8c34@mail.gmail.com>

On Sat, Mar 13, 2010 at 7:48 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Saturday 13 March 2010 19:38:01 G?bor Stefanik wrote:
>> > I know this one it is compatible with aircrack supporting injection
>> > Thank you for your invaluable help ..
>> > thank
>> >
>>
>> As a general rule, do not bug Michael with injection-related
>> questions; the only one in the team who cares about injection is me.
>> Exception: when an injection-related problem also affects hostapd,
>> feel free to contact Michael.
>
> WTF?
> Injection is not my business at all. It doesn't have _anything_
> to do with the driver. It's purely a mac80211 stack feature.
> (So _any_ mac80211 based driver is supported by aircrack-ng, btw)
>
> So feel free to contact anybody but me, because I can't help you at all.
>
> --
> Greetings, Michael.
>

Well, it can definitely happen (and has happened in the past, though
not in b43) that a driver bug hindered injection. See iwlagn for an
example.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From mb at bu3sch.de  Sat Mar 13 19:48:41 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 13 Mar 2010 19:48:41 +0100
Subject: BCM 43
In-Reply-To: <69e28c911003131038x267c3ccanee8b48e44c83536e@mail.gmail.com>
References: <751671491003131005v42ea129cmd899f53ece9a9185@mail.gmail.com>
	<69e28c911003131038x267c3ccanee8b48e44c83536e@mail.gmail.com>
Message-ID: <201003131948.41401.mb@bu3sch.de>

On Saturday 13 March 2010 19:38:01 G?bor Stefanik wrote:
> > I know this one it is compatible with aircrack supporting injection
> > Thank you for your invaluable help ..
> > thank
> >
> 
> As a general rule, do not bug Michael with injection-related
> questions; the only one in the team who cares about injection is me.
> Exception: when an injection-related problem also affects hostapd,
> feel free to contact Michael.

WTF?
Injection is not my business at all. It doesn't have _anything_
to do with the driver. It's purely a mac80211 stack feature.
(So _any_ mac80211 based driver is supported by aircrack-ng, btw)

So feel free to contact anybody but me, because I can't help you at all.

-- 
Greetings, Michael.


From mh+bcm43xx-dev at zugschlus.de  Tue Mar 16 00:20:02 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Tue, 16 Mar 2010 00:20:02 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100304175423.GC2775@torres.zugschlus.de>
References: <20100304175423.GC2775@torres.zugschlus.de>
Message-ID: <20100315232002.GA2233@torres.zugschlus.de>

Hi,

On Thu, Mar 04, 2010 at 06:54:23PM +0100, Marc Haber wrote:
> when the broadcom-sta driver didn't compile with 2.6.33 I decided to
> give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
> with LP Phy (14e4:4315). I am using Debian unstable.
> 
> When I load the module, a new interface wlan0 appears, but iwlist scan
> says "Interface doesn't support scanning". Looks like the device isn't
> properly initialized.

The issue was that CRDA is not yet in Debian, and thus the kernel
needs to have CONFIG_WIRELESS_OLD_REGULATORY=y. With this setting, the
interface can scan. There should be a clearer error message about this.

However, the interface doesn't work. Most prominent error is:
Mar 15 18:27:12 feather kernel: [  505.012549] b43-phy0 ERROR: PHY transmission error
(this is with he chip forced to PIO).

Any ideas about this?

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From Larry.Finger at lwfinger.net  Tue Mar 16 01:41:02 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 15 Mar 2010 19:41:02 -0500
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <20100315232002.GA2233@torres.zugschlus.de>
References: <20100304175423.GC2775@torres.zugschlus.de>
	<20100315232002.GA2233@torres.zugschlus.de>
Message-ID: <4B9ED39E.7040505@lwfinger.net>

On 03/15/2010 06:20 PM, Marc Haber wrote:
> Hi,
> 
> On Thu, Mar 04, 2010 at 06:54:23PM +0100, Marc Haber wrote:
>> when the broadcom-sta driver didn't compile with 2.6.33 I decided to
>> give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
>> with LP Phy (14e4:4315). I am using Debian unstable.
>>
>> When I load the module, a new interface wlan0 appears, but iwlist scan
>> says "Interface doesn't support scanning". Looks like the device isn't
>> properly initialized.
> 
> The issue was that CRDA is not yet in Debian, and thus the kernel
> needs to have CONFIG_WIRELESS_OLD_REGULATORY=y. With this setting, the
> interface can scan. There should be a clearer error message about this.

I feel that Debian should get their act together. The old regulatory method was
left in the kernel for several cycles so that the distros could adapt. Only
Debian failed to do so.

> However, the interface doesn't work. Most prominent error is:
> Mar 15 18:27:12 feather kernel: [  505.012549] b43-phy0 ERROR: PHY transmission error
> (this is with he chip forced to PIO).

Are there lots of PHY Transmission errors, os just a few? We have never
understood why these errors occur in the firmware. What version are you using?

Larry


From mh+bcm43xx-dev at zugschlus.de  Tue Mar 16 13:27:00 2010
From: mh+bcm43xx-dev at zugschlus.de (Marc Haber)
Date: Tue, 16 Mar 2010 13:27:00 +0100
Subject: BCM4312 (14e4:4315) in Lenovo Ideapad S12 cannot scan with 2.6.33
In-Reply-To: <4B9ED39E.7040505@lwfinger.net>
References: <20100304175423.GC2775@torres.zugschlus.de>
	<20100315232002.GA2233@torres.zugschlus.de>
	<4B9ED39E.7040505@lwfinger.net>
Message-ID: <20100316122700.GB16781@torres.zugschlus.de>

Hi,

On Mon, Mar 15, 2010 at 07:41:02PM -0500, Larry Finger wrote:
> On 03/15/2010 06:20 PM, Marc Haber wrote:
> > On Thu, Mar 04, 2010 at 06:54:23PM +0100, Marc Haber wrote:
> >> when the broadcom-sta driver didn't compile with 2.6.33 I decided to
> >> give b43 a new try. I have a Lenovo Ideapad S12, which has a BCM4312
> >> with LP Phy (14e4:4315). I am using Debian unstable.
> >>
> >> When I load the module, a new interface wlan0 appears, but iwlist scan
> >> says "Interface doesn't support scanning". Looks like the device isn't
> >> properly initialized.
> > 
> > The issue was that CRDA is not yet in Debian, and thus the kernel
> > needs to have CONFIG_WIRELESS_OLD_REGULATORY=y. With this setting, the
> > interface can scan. There should be a clearer error message about this.
> 
> I feel that Debian should get their act together. The old regulatory method was
> left in the kernel for several cycles so that the distros could adapt. Only
> Debian failed to do so.

Debian has a severe manpower problem in many fields.

> > However, the interface doesn't work. Most prominent error is:
> > Mar 15 18:27:12 feather kernel: [  505.012549] b43-phy0 ERROR: PHY transmission error
> > (this is with he chip forced to PIO).
> 
> Are there lots of PHY Transmission errors, os just a few? We have never
> understood why these errors occur in the firmware.

grep "ERROR: PHY" syslog | wc -l
10

> What version are you using?

Mar 15 18:27:45 feather kernel: [  538.208462] b43-phy0: Loading firmware version 478.104 (2008-07-01 00:50:23)

I don't have the system in question at hand now and therefore cannot
check where the actual file is pulled from, but I clearly remember
building b43-firmwarecutter from the VCS and using it on the exact
version of the broadcom driver package mentioned in the instructions.

I'll check back later today, probably.

Greetings
Marc

-- 
-----------------------------------------------------------------------------
Marc Haber         | "I don't trust Computers. They | Mailadresse im Header
Mannheim, Germany  |  lose things."    Winona Ryder | Fon: *49 621 72739834
Nordisch by Nature |  How to make an American Quilt | Fax: *49 3221 2323190


From chris at cvine.freeserve.co.uk  Tue Mar 16 21:23:49 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 16 Mar 2010 20:23:49 +0000
Subject: Suspend/hibernate broken in 2.6.33
In-Reply-To: <20100308172226.67d32b9b@laptop.homenet>
References: <20100308172226.67d32b9b@laptop.homenet>
Message-ID: <20100316202349.259b9ff6@boulder.homenet>

On Mon, 8 Mar 2010 17:22:26 +0000
Chris Vine <chris at cvine.freeserve.co.uk> wrote:
> I have noticed that although my BCM4312 802.11b/g [14e4:4315] wireless
> device works using the PIO option in 2.6.33, it breaks after a suspend
> or hibernate.  Attempts to bring up the wlan0 interface with
> 'ifconfig wlan0 up' after suspension or hibernation results in the
> following message (although nothing is revealed by dmesg):
> 
>   SIOCSIFFLAGS: Unknown error 132
> 
> If I unload all wireless and related modules before suspending or
> hibernating, and then reload them on resuming, I get more information
> from dmesg, namely that it thinks that the wireless has been turned
> off by the rfkill button, which it definitely has not:

[snip]

I am still getting this with kernel-2.6.33.1 and I have also managed to
reproduce a suspension writing to CMOS in a way which permanently
disables my wireless unless I reset the BIOS to its defaults.

This may not be the write mailing list to report this true.  If so,
what would be the correct one - the acpi list?

Chris




From rjw at sisk.pl  Tue Mar 16 22:46:27 2010
From: rjw at sisk.pl (Rafael J. Wysocki)
Date: Tue, 16 Mar 2010 22:46:27 +0100
Subject: Suspend/hibernate broken in 2.6.33
In-Reply-To: <20100316202349.259b9ff6@boulder.homenet>
References: <20100308172226.67d32b9b@laptop.homenet>
	<20100316202349.259b9ff6@boulder.homenet>
Message-ID: <201003162246.27894.rjw@sisk.pl>

On Tuesday 16 March 2010, Chris Vine wrote:
> On Mon, 8 Mar 2010 17:22:26 +0000
> Chris Vine <chris at cvine.freeserve.co.uk> wrote:
> > I have noticed that although my BCM4312 802.11b/g [14e4:4315] wireless
> > device works using the PIO option in 2.6.33, it breaks after a suspend
> > or hibernate.  Attempts to bring up the wlan0 interface with
> > 'ifconfig wlan0 up' after suspension or hibernation results in the
> > following message (although nothing is revealed by dmesg):
> > 
> >   SIOCSIFFLAGS: Unknown error 132
> > 
> > If I unload all wireless and related modules before suspending or
> > hibernating, and then reload them on resuming, I get more information
> > from dmesg, namely that it thinks that the wireless has been turned
> > off by the rfkill button, which it definitely has not:
> 
> [snip]
> 
> I am still getting this with kernel-2.6.33.1 and I have also managed to
> reproduce a suspension writing to CMOS in a way which permanently
> disables my wireless unless I reset the BIOS to its defaults.
> 
> This may not be the write mailing list to report this true.  If so,
> what would be the correct one - the acpi list?

Please report it to linux-acpi/LKML.

Thanks,
Rafael


From vmiklos at frugalware.org  Wed Mar 17 20:09:41 2010
From: vmiklos at frugalware.org (Miklos Vajna)
Date: Wed, 17 Mar 2010 20:09:41 +0100
Subject: No probe response from AP <address> after 500ms, disconnecting.
In-Reply-To: <20100116044948.30936.qmail@stuge.se>
References: <20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100115035133.18257.qmail@stuge.se>
	<20100115131637.GZ29803@genesis.frugalware.org>
	<20100115133224.GB29803@genesis.frugalware.org>
	<20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100116044948.30936.qmail@stuge.se>
Message-ID: <20100317190941.GZ27414@genesis.frugalware.org>

Hi,

I recently upgraded to 2.6.33, then 2.6.34-rc1, but both have the same
bugs:

1) The earlier mentioned problem is still there, the b43 driver
disconnects if no WPA is used by the AP.

(This is not an issue with the binary broadcom 'wl' driver.)

2) The wireless card seems not to be functional after suspend to disk:

# iwlist eth0 scan
eth0      Failed to read scan data : Invalid argument

And this is with b43 and wl, 2.6.33 and 2.6.34-rc1. If I downgrade to
2.6.32, both work after hibernation.

Is this a known issue? Also, is there a bugtracker where I should report
these errors? Or should I simply use http://bugzilla.kernel.org?

Thanks!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20100317/c333098f/attachment.pgp>

From chris at cvine.freeserve.co.uk  Thu Mar 18 01:26:32 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Thu, 18 Mar 2010 00:26:32 +0000
Subject: No probe response from AP <address> after 500ms, disconnecting.
In-Reply-To: <20100317190941.GZ27414@genesis.frugalware.org>
References: <20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100115035133.18257.qmail@stuge.se>
	<20100115131637.GZ29803@genesis.frugalware.org>
	<20100115133224.GB29803@genesis.frugalware.org>
	<20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100116044948.30936.qmail@stuge.se>
	<20100317190941.GZ27414@genesis.frugalware.org>
Message-ID: <20100318002632.3738ab98@boulder.homenet>

On Wed, 17 Mar 2010 20:09:41 +0100
Miklos Vajna <vmiklos at frugalware.org> wrote:
> Hi,
> 
> I recently upgraded to 2.6.33, then 2.6.34-rc1, but both have the same
> bugs:
> 
> 1) The earlier mentioned problem is still there, the b43 driver
> disconnects if no WPA is used by the AP.
> 
> (This is not an issue with the binary broadcom 'wl' driver.)
> 
> 2) The wireless card seems not to be functional after suspend to disk:
> 
> # iwlist eth0 scan
> eth0      Failed to read scan data : Invalid argument
> 
> And this is with b43 and wl, 2.6.33 and 2.6.34-rc1. If I downgrade to
> 2.6.32, both work after hibernation.
> 
> Is this a known issue? Also, is there a bugtracker where I should
> report these errors? Or should I simply use
> http://bugzilla.kernel.org?

I suggest you add to this thread in linux-acpi (and lkml), that you can
reproduce the problem, and it might then get some attention:
http://marc.info/?l=linux-kernel&m=126879129905898&w=2 .

Out of interest, if you revert to 2.6.32 do you find your CMOS has been
reset so that the wireless is permanently off?  That happens to me
intermittently.

State your hardware when doing so (what is it?).

Chris




From chris at cvine.freeserve.co.uk  Thu Mar 18 01:29:42 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Thu, 18 Mar 2010 00:29:42 +0000
Subject: No probe response from AP <address> after 500ms, disconnecting.
In-Reply-To: <20100318002632.3738ab98@boulder.homenet>
References: <20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100115035133.18257.qmail@stuge.se>
	<20100115131637.GZ29803@genesis.frugalware.org>
	<20100115133224.GB29803@genesis.frugalware.org>
	<20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100116044948.30936.qmail@stuge.se>
	<20100317190941.GZ27414@genesis.frugalware.org>
	<20100318002632.3738ab98@boulder.homenet>
Message-ID: <20100318002942.5fbb1730@boulder.homenet>

On Thu, 18 Mar 2010 00:26:32 +0000
Chris Vine <chris at cvine.freeserve.co.uk> wrote:
[snip]

> I suggest you add to this thread in linux-acpi (and lkml), that you
> can reproduce the problem, and it might then get some attention:
> http://marc.info/?l=linux-kernel&m=126879129905898&w=2 .

Ah, I see you have already done so.

Chris




From vmiklos at frugalware.org  Thu Mar 18 11:05:32 2010
From: vmiklos at frugalware.org (Miklos Vajna)
Date: Thu, 18 Mar 2010 11:05:32 +0100
Subject: No probe response from AP <address> after 500ms, disconnecting.
In-Reply-To: <20100318002632.3738ab98@boulder.homenet>
References: <20100115030912.GW29803@genesis.frugalware.org>
	<20100115035133.18257.qmail@stuge.se>
	<20100115131637.GZ29803@genesis.frugalware.org>
	<20100115133224.GB29803@genesis.frugalware.org>
	<20100115011258.GS29803@genesis.frugalware.org>
	<20100115014619.31031.qmail@stuge.se>
	<20100115030912.GW29803@genesis.frugalware.org>
	<20100116044948.30936.qmail@stuge.se>
	<20100317190941.GZ27414@genesis.frugalware.org>
	<20100318002632.3738ab98@boulder.homenet>
Message-ID: <20100318100532.GG27414@genesis.frugalware.org>

On Thu, Mar 18, 2010 at 12:26:32AM +0000, Chris Vine <chris at cvine.freeserve.co.uk> wrote:
> I suggest you add to this thread in linux-acpi (and lkml), that you can
> reproduce the problem, and it might then get some attention:
> http://marc.info/?l=linux-kernel&m=126879129905898&w=2 .

Done.

> Out of interest, if you revert to 2.6.32 do you find your CMOS has been
> reset so that the wireless is permanently off?  That happens to me
> intermittently.

How do I check if there was a CMOS reset? I just see that once I did a
suspend to disk, ifconfig eth0 up / iwlist eth0 scan does not work with
the same error codes as yours.

Did you tried to bisect it? I did not have time to do it yesterday but I
might tonight.

> State your hardware when doing so (what is it?).

I mentioned it @ lkml, it's an S12 netbook as well.

Thanks.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20100318/777ecd48/attachment.pgp>

From Larry.Finger at lwfinger.net  Thu Mar 18 18:46:35 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 18 Mar 2010 12:46:35 -0500
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
Message-ID: <4BA266FB.1080507@lwfinger.net>

Michael,

I'm switching this discussion from the kernel Bugzilla to the lists.

As you know, but I'm restating for anyone that has not read our previous
discussions, the b43 driver needs to be changed to handle some of the newer
devices do not have an on-board SPROM. It would be trivial to incorporate the
data except for the need to have a unique, reproducible MAC.

I am proposing to solve this problem using the following steps:

(1) Modify b43-fwcutter to take data from an existing SPROM, modify the MAC by
replacing the last 3 octets with random numbers, and write the resulting file to
/lib/firmware/b43. Fortunately, all affected devices seem to have Revision 8
SPROMS, which makes preparation easier. All such devices will need to use the
calibration parameters of the device from which the prototype SPROM was copied,
but that should not be a serious problem. I have chosen to implement this in
fwcutter rather than ssb_sprom because the ordinary user will not have access to
ssb_sprom; however, they do have a version of fwcutter supplied by the distro.
Unconditionally writing an additional small file to the firmware directory when
extracting firmware is small overhead and it will be transparent to the user of
whatever mechanism the distro uses. The routines needed to calculate the CRC,
etc. have been copied into fwcutter from ssb_sprom. A version of this code is
already running.

(2) Use the steps in http://bcm-v4.sipsolutions.net/802.11/IsSpromAvailable to
determine if the device has an SPROM. If not, then use the kernel's firmware
loading mechanism to get the contents of the file prepared in step 1. This file
has an 8-bit CRC, thus the validity of the file can be tested even though the
test is not very robust.

It it reasonable to keep the vendor portion of the MAC and only replace the
"serial number", or would it be better to randomize all 6 octants?

Is there a better way to load a file into the kernel?

Thanks,

Larry


From mb at bu3sch.de  Thu Mar 18 20:31:24 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 18 Mar 2010 20:31:24 +0100
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <4BA266FB.1080507@lwfinger.net>
References: <4BA266FB.1080507@lwfinger.net>
Message-ID: <201003182031.25013.mb@bu3sch.de>

On Thursday 18 March 2010 18:46:35 Larry Finger wrote:
> (1) Modify b43-fwcutter to take data from an existing SPROM,

Why not extend the ssb-sprom tool? I don't think this has anything to do with
firmware, except that we (ab)use the firmware loading mechanism of the kernel
for loading the blob into the kernel.

> I have chosen to implement this in
> fwcutter rather than ssb_sprom because the ordinary user will not have access to
> ssb_sprom;

Huh? ssb-sprom is GPL software. I have no problem relicensing it under BSD or
even something more liberal. I don't see a problem for "ordinary users" here.

> however, they do have a version of fwcutter supplied by the distro.

Well, but that version won't do anything on the SPROM, too.

> It it reasonable to keep the vendor portion of the MAC and only replace the
> "serial number", or would it be better to randomize all 6 octants?

I think it doesn't really matter.

-- 
Greetings, Michael.


From nicolas.2p.debian at free.fr  Thu Mar 18 21:51:24 2010
From: nicolas.2p.debian at free.fr (=?ISO-8859-1?Q?Nicolas_de_Peslo=FCan?=)
Date: Thu, 18 Mar 2010 21:51:24 +0100
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <4BA266FB.1080507@lwfinger.net>
References: <4BA266FB.1080507@lwfinger.net>
Message-ID: <4BA2924C.7020905@free.fr>

Larry Finger wrote :
> Michael,
> 
> I'm switching this discussion from the kernel Bugzilla to the lists.
> 
> As you know, but I'm restating for anyone that has not read our previous
> discussions, the b43 driver needs to be changed to handle some of the newer
> devices do not have an on-board SPROM. It would be trivial to incorporate the
> data except for the need to have a unique, reproducible MAC.
> 
> I am proposing to solve this problem using the following steps:
> 
> (1) Modify b43-fwcutter to take data from an existing SPROM, modify the MAC by
> replacing the last 3 octets with random numbers, and write the resulting file to
> /lib/firmware/b43. Fortunately, all affected devices seem to have Revision 8
> SPROMS, which makes preparation easier. All such devices will need to use the
> calibration parameters of the device from which the prototype SPROM was copied,
> but that should not be a serious problem. I have chosen to implement this in
> fwcutter rather than ssb_sprom because the ordinary user will not have access to
> ssb_sprom; however, they do have a version of fwcutter supplied by the distro.
> Unconditionally writing an additional small file to the firmware directory when
> extracting firmware is small overhead and it will be transparent to the user of
> whatever mechanism the distro uses. The routines needed to calculate the CRC,
> etc. have been copied into fwcutter from ssb_sprom. A version of this code is
> already running.
> 
> (2) Use the steps in http://bcm-v4.sipsolutions.net/802.11/IsSpromAvailable to
> determine if the device has an SPROM. If not, then use the kernel's firmware
> loading mechanism to get the contents of the file prepared in step 1. This file
> has an 8-bit CRC, thus the validity of the file can be tested even though the
> test is not very robust.
> 
> It it reasonable to keep the vendor portion of the MAC and only replace the
> "serial number", or would it be better to randomize all 6 octants?

We know that there exist a risk (arguably low) for two devices in the same LAN to have the same 
random part of the MAC. The risk might be higher if, for any reason, the random number generator 
lack good entropy at the time fwcutter is run.

Also, keeping the same MAC prefix (one from Broadcom) will lead to a risk of having the same MAC for 
a randomly generated device and for a legitimate MAC from Broadcom.

To reduce the risk, we can chose two different ways :

1/ Using a "private" MAC (having bit 0x02 of the lowest byte of the MAC set to 1). This will provide 
a random area of 46 bits, far better than 24 bits if we keep the Broadcom prefix.
2/ Registering a public MAC prefix for this usage.

Anyway, I think we should add a duplicate MAC detection system, that would at least issue a warning 
if the NIC lacking an SPROM (and so knowing the MAC address was randomized) receive a packet with 
its MAC as the source MAC.

Of course, in some network topologies, several NIC may share the same MAC, leading to some of them 
receiving packets with their own MAC as source MAC. A bonding configuration is one such situation. 
For this reason, it might be also desirable to have the ability to report to an upper layer that the 
MAC is possibly "unsafe" (subject to a risk of duplicate MAC) and probably not suitable to become 
the shared MAC for a bonding configuration. That way, at the time such configuration are setup, the 
tool used to setup the configuration would have the ability to report the situation to the user.

Also, in order to keep the same MAC if one run fwcutter again, we should provide fwcutter with an 
option to decide whether we want to keep the previously randomized MAC or whether fwcutter should 
provide a new one (in particular if the current one hit a duplicate MAC).

	Nicolas.

> 
> Is there a better way to load a file into the kernel?
> 
> Thanks,
> 
> Larry
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> 



From johannes at sipsolutions.net  Thu Mar 18 21:53:00 2010
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 18 Mar 2010 13:53:00 -0700
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <4BA266FB.1080507@lwfinger.net>
References: <4BA266FB.1080507@lwfinger.net>
Message-ID: <1268945580.4005.15.camel@jlt3.sipsolutions.net>

On Thu, 2010-03-18 at 12:46 -0500, Larry Finger wrote:
> Michael,
> 
> I'm switching this discussion from the kernel Bugzilla to the lists.
> 
> As you know, but I'm restating for anyone that has not read our previous
> discussions, the b43 driver needs to be changed to handle some of the newer
> devices do not have an on-board SPROM. It would be trivial to incorporate the
> data except for the need to have a unique, reproducible MAC.

Where does the data usually come from in these devices?

johannes



From johannes at sipsolutions.net  Thu Mar 18 21:31:45 2010
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 18 Mar 2010 13:31:45 -0700
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <20100318202052.GD17357@tuxdriver.com>
References: <4BA266FB.1080507@lwfinger.net> <201003182031.25013.mb@bu3sch.de>
	<20100318202052.GD17357@tuxdriver.com>
Message-ID: <1268944305.4005.14.camel@jlt3.sipsolutions.net>

On Thu, 2010-03-18 at 16:20 -0400, John W. Linville wrote:
> On Thu, Mar 18, 2010 at 08:31:24PM +0100, Michael Buesch wrote:
> > On Thursday 18 March 2010 18:46:35 Larry Finger wrote:
> 
> > > It it reasonable to keep the vendor portion of the MAC and only replace the
> > > "serial number", or would it be better to randomize all 6 octants?
> > 
> > I think it doesn't really matter.
> 
> It might be a good idea to set the LAA bit...?

And clear the mcast bit :)

johannes



From Larry.Finger at lwfinger.net  Thu Mar 18 22:10:18 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 18 Mar 2010 16:10:18 -0500
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <1268945580.4005.15.camel@jlt3.sipsolutions.net>
References: <4BA266FB.1080507@lwfinger.net>
	<1268945580.4005.15.camel@jlt3.sipsolutions.net>
Message-ID: <4BA296BA.7000502@lwfinger.net>

On 03/18/2010 03:53 PM, Johannes Berg wrote:
> On Thu, 2010-03-18 at 12:46 -0500, Larry Finger wrote:
>> Michael,
>>
>> I'm switching this discussion from the kernel Bugzilla to the lists.
>>
>> As you know, but I'm restating for anyone that has not read our previous
>> discussions, the b43 driver needs to be changed to handle some of the newer
>> devices do not have an on-board SPROM. It would be trivial to incorporate the
>> data except for the need to have a unique, reproducible MAC.
> 
> Where does the data usually come from in these devices?

It comes from the SPROM, which is missing in the devices in question. Broadcrap
wanted to save a few pennies.

Larry


From johannes at sipsolutions.net  Thu Mar 18 22:20:48 2010
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 18 Mar 2010 14:20:48 -0700
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <4BA296BA.7000502@lwfinger.net>
References: <4BA266FB.1080507@lwfinger.net>
	<1268945580.4005.15.camel@jlt3.sipsolutions.net>
	<4BA296BA.7000502@lwfinger.net>
Message-ID: <1268947248.4005.16.camel@jlt3.sipsolutions.net>

On Thu, 2010-03-18 at 16:10 -0500, Larry Finger wrote:
> On 03/18/2010 03:53 PM, Johannes Berg wrote:
> > On Thu, 2010-03-18 at 12:46 -0500, Larry Finger wrote:
> >> Michael,
> >>
> >> I'm switching this discussion from the kernel Bugzilla to the lists.
> >>
> >> As you know, but I'm restating for anyone that has not read our previous
> >> discussions, the b43 driver needs to be changed to handle some of the newer
> >> devices do not have an on-board SPROM. It would be trivial to incorporate the
> >> data except for the need to have a unique, reproducible MAC.
> > 
> > Where does the data usually come from in these devices?
> 
> It comes from the SPROM, which is missing in the devices in question. Broadcrap
> wanted to save a few pennies.

Right, but they have to support getting the data somehow on for example
windows even if there's no sprom. Do we know where it comes from then?

johannes



From linville at tuxdriver.com  Thu Mar 18 21:20:52 2010
From: linville at tuxdriver.com (John W. Linville)
Date: Thu, 18 Mar 2010 16:20:52 -0400
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <201003182031.25013.mb@bu3sch.de>
References: <4BA266FB.1080507@lwfinger.net> <201003182031.25013.mb@bu3sch.de>
Message-ID: <20100318202052.GD17357@tuxdriver.com>

On Thu, Mar 18, 2010 at 08:31:24PM +0100, Michael Buesch wrote:
> On Thursday 18 March 2010 18:46:35 Larry Finger wrote:

> > It it reasonable to keep the vendor portion of the MAC and only replace the
> > "serial number", or would it be better to randomize all 6 octants?
> 
> I think it doesn't really matter.

It might be a good idea to set the LAA bit...?

-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From Larry.Finger at lwfinger.net  Thu Mar 18 22:38:17 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 18 Mar 2010 16:38:17 -0500
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <201003182031.25013.mb@bu3sch.de>
References: <4BA266FB.1080507@lwfinger.net> <201003182031.25013.mb@bu3sch.de>
Message-ID: <4BA29D49.80707@lwfinger.net>

On 03/18/2010 02:31 PM, Michael Buesch wrote:
> On Thursday 18 March 2010 18:46:35 Larry Finger wrote:
>> (1) Modify b43-fwcutter to take data from an existing SPROM,
> 
> Why not extend the ssb-sprom tool? I don't think this has anything to do with
> firmware, except that we (ab)use the firmware loading mechanism of the kernel
> for loading the blob into the kernel.

It has nothing to do with firmware, but the existing fwcutter has all the parts
to generate files in the firmware directory, which is a good place to put this
virtual SPROM.
> 
>> I have chosen to implement this in
>> fwcutter rather than ssb_sprom because the ordinary user will not have access to
>> ssb_sprom;
> 
> Huh? ssb-sprom is GPL software. I have no problem relicensing it under BSD or
> even something more liberal. I don't see a problem for "ordinary users" here.

It has nothing to do with the license. My distro, openSUSE, packages fwcutter
along with a script that uses wget to download the Broadcom drivers and extract
firmware for both b43 and b43legacy. The average user only has to execute that
script. Of course, the package could include both fwcutter and ssb_sprom
programs, but that would make a bigger change to the openSUSE package than just
a patch to fwcutter. I suspect that other distros use similar packages.

> Well, but that version won't do anything on the SPROM, too.

Yes, but if fwcutter were modified, it could write the virtual SPROM file.

Larry


From Larry.Finger at lwfinger.net  Thu Mar 18 22:47:04 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 18 Mar 2010 16:47:04 -0500
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <1268947248.4005.16.camel@jlt3.sipsolutions.net>
References: <4BA266FB.1080507@lwfinger.net>	
	<1268945580.4005.15.camel@jlt3.sipsolutions.net>	
	<4BA296BA.7000502@lwfinger.net>
	<1268947248.4005.16.camel@jlt3.sipsolutions.net>
Message-ID: <4BA29F58.7040101@lwfinger.net>

On 03/18/2010 04:20 PM, Johannes Berg wrote:
> On Thu, 2010-03-18 at 16:10 -0500, Larry Finger wrote:
>> On 03/18/2010 03:53 PM, Johannes Berg wrote:
>>> On Thu, 2010-03-18 at 12:46 -0500, Larry Finger wrote:
>>>> Michael,
>>>>
>>>> I'm switching this discussion from the kernel Bugzilla to the lists.
>>>>
>>>> As you know, but I'm restating for anyone that has not read our previous
>>>> discussions, the b43 driver needs to be changed to handle some of the newer
>>>> devices do not have an on-board SPROM. It would be trivial to incorporate the
>>>> data except for the need to have a unique, reproducible MAC.
>>>
>>> Where does the data usually come from in these devices?
>>
>> It comes from the SPROM, which is missing in the devices in question. Broadcrap
>> wanted to save a few pennies.
> 
> Right, but they have to support getting the data somehow on for example
> windows even if there's no sprom. Do we know where it comes from then?

In the Linux driver and likely in the Windows driver, the SPROM data is read
from the SPROM and encoded into a set of tagged strings. After that, the actual
SPROM is ignored. I have not completed the RE on this area, but it looks as if
they have a set of "canned" data that is copied into the area. How they handle a
MAC is not yet understood.

Larry


From mb at bu3sch.de  Fri Mar 19 08:36:58 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 19 Mar 2010 08:36:58 +0100
Subject: RFC: A workaround for BCM43XX devices with no on-board SPROM
In-Reply-To: <4BA29D49.80707@lwfinger.net>
References: <4BA266FB.1080507@lwfinger.net> <201003182031.25013.mb@bu3sch.de>
	<4BA29D49.80707@lwfinger.net>
Message-ID: <201003190836.58688.mb@bu3sch.de>

On Thursday 18 March 2010 22:38:17 Larry Finger wrote:
> On 03/18/2010 02:31 PM, Michael Buesch wrote:
> > On Thursday 18 March 2010 18:46:35 Larry Finger wrote:
> >> (1) Modify b43-fwcutter to take data from an existing SPROM,
> > 
> > Why not extend the ssb-sprom tool? I don't think this has anything to do with
> > firmware, except that we (ab)use the firmware loading mechanism of the kernel
> > for loading the blob into the kernel.
> 
> It has nothing to do with firmware, but the existing fwcutter has all the parts
> to generate files in the firmware directory,

Everything needed to "generate a file in the firmware directory" are the open()
write() and close() syscalls.

> > 
> >> I have chosen to implement this in
> >> fwcutter rather than ssb_sprom because the ordinary user will not have access to
> >> ssb_sprom;
> > 
> > Huh? ssb-sprom is GPL software. I have no problem relicensing it under BSD or
> > even something more liberal. I don't see a problem for "ordinary users" here.
> 
> It has nothing to do with the license. My distro, openSUSE, packages fwcutter
> along with a script that uses wget to download the Broadcom drivers and extract
> firmware for both b43 and b43legacy. The average user only has to execute that
> script. Of course, the package could include both fwcutter and ssb_sprom
> programs, but that would make a bigger change to the openSUSE package than just
> a patch to fwcutter. I suspect that other distros use similar packages.
> 
> > Well, but that version won't do anything on the SPROM, too.
> 
> Yes, but if fwcutter were modified, it could write the virtual SPROM file.

I think it really is abuse of fwcutter.
What if you don't want any proprietary firmware at all, but still want an SPROM image?
What about distros that do _not_ automatically use fwcutter to put proprietary fw in place
for legal reasons? (Which most likely is the majority of distributions).

Why create yet another dependency on fwcutter. I thought the long term plan was to get rid
of proprietary firmware and fwcutter?

Is it really such a big deal for a distribution to include yet another tiny opensource
package? If that really is a problem for a distribution, they should just completely
stop doing their distro.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Mar 20 21:15:58 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 20 Mar 2010 15:15:58 -0500
Subject: [RFC] b43-utilities: ssb-vsprom: Add program to create on-disk,
	virtual SPROM
Message-ID: <4ba52cfe.WVIpy0wWJxQ3cils%Larry.Finger@lwfinger.net>

Some of the new implementations of BCM43xx devices do not have a
physical SPROM on the device. The necessary data for such a device
could be embedded in the kernel; however, we have a need to supply
a unique and reproducible MAC address.

This patch implements a user-space utility that has an embedded
Rev. 8 SPROM taken from a BCM4315. A random number generator is used
to create a MAC address that should be unique. To make this address
reproducible, it is written to the firmware directory where the PCI
initialization portion of ssb can read it. This program checks for
an existing virtual SPROM, and will operwrite it only when the appropriate
switch is used when starting the program.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Index: sprom/vsprom/vsprom.c
===================================================================
--- /dev/null
+++ sprom/vsprom/vsprom.c
@@ -0,0 +1,344 @@
+/*
+ * virtual SPROM image writer for broadcom 43xx wireless devices
+ *
+ * This program creates an on-disk image of an SPROM for those BCM43xx
+ * devices that do not have a built-in SPROM. The image is created from
+ * one obtained from a BCM4315 with a random MAC address.
+ *
+ * Copyright (c) 2010 Larry Finger <Larry.Finger at lwfinger.net>
+ *
+ * Some routines copied from b43-fwcutter, which is
+ *
+ * Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
+ *               2005-2007 Michael Buesch <mb at bu3sch.de>
+ *		 2005 Alex Beregszaszi
+ *		 2007 Johannes Berg <johannes at sipsolutions.net>
+ *
+ * Other routines from ssb_sprom, which is
+ *
+ * Copyright (c) 2006-2008 Michael Buesch <mb at bu3sch.de>
+ * Copyright (c) 2008 Larry Finger <Larry.Finger at lwfinger.net>
+ *
+ *   Redistribution and use in source and binary forms, with or without
+ *   modification, are permitted provided that the following conditions
+ *   are met:
+ *
+ *     1. Redistributions of source code must retain the above copyright
+ *        notice, this list of conditions and the following disclaimer.
+ *     2. Redistributions in binary form must reproduce the above
+ *        copyright notice, this list of conditions and the following
+ *        disclaimer in the documentation and/or other materials provided
+ *        with the distribution.
+ *
+ *   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
+ *   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ *   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ *   DISCLAIMED. IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY
+ *   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
+ *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ *   OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ *   EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <time.h>
+#include <stdint.h>
+#include <errno.h>
+#include <errno.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+
+#include "vsprom.h"
+
+static struct cmdline_args cmdargs;
+
+uint8_t crc8(uint8_t crc, uint8_t data)
+{
+	static const uint8_t t[] = {
+		0x00, 0xF7, 0xB9, 0x4E, 0x25, 0xD2, 0x9C, 0x6B,
+		0x4A, 0xBD, 0xF3, 0x04, 0x6F, 0x98, 0xD6, 0x21,
+		0x94, 0x63, 0x2D, 0xDA, 0xB1, 0x46, 0x08, 0xFF,
+		0xDE, 0x29, 0x67, 0x90, 0xFB, 0x0C, 0x42, 0xB5,
+		0x7F, 0x88, 0xC6, 0x31, 0x5A, 0xAD, 0xE3, 0x14,
+		0x35, 0xC2, 0x8C, 0x7B, 0x10, 0xE7, 0xA9, 0x5E,
+		0xEB, 0x1C, 0x52, 0xA5, 0xCE, 0x39, 0x77, 0x80,
+		0xA1, 0x56, 0x18, 0xEF, 0x84, 0x73, 0x3D, 0xCA,
+		0xFE, 0x09, 0x47, 0xB0, 0xDB, 0x2C, 0x62, 0x95,
+		0xB4, 0x43, 0x0D, 0xFA, 0x91, 0x66, 0x28, 0xDF,
+		0x6A, 0x9D, 0xD3, 0x24, 0x4F, 0xB8, 0xF6, 0x01,
+		0x20, 0xD7, 0x99, 0x6E, 0x05, 0xF2, 0xBC, 0x4B,
+		0x81, 0x76, 0x38, 0xCF, 0xA4, 0x53, 0x1D, 0xEA,
+		0xCB, 0x3C, 0x72, 0x85, 0xEE, 0x19, 0x57, 0xA0,
+		0x15, 0xE2, 0xAC, 0x5B, 0x30, 0xC7, 0x89, 0x7E,
+		0x5F, 0xA8, 0xE6, 0x11, 0x7A, 0x8D, 0xC3, 0x34,
+		0xAB, 0x5C, 0x12, 0xE5, 0x8E, 0x79, 0x37, 0xC0,
+		0xE1, 0x16, 0x58, 0xAF, 0xC4, 0x33, 0x7D, 0x8A,
+		0x3F, 0xC8, 0x86, 0x71, 0x1A, 0xED, 0xA3, 0x54,
+		0x75, 0x82, 0xCC, 0x3B, 0x50, 0xA7, 0xE9, 0x1E,
+		0xD4, 0x23, 0x6D, 0x9A, 0xF1, 0x06, 0x48, 0xBF,
+		0x9E, 0x69, 0x27, 0xD0, 0xBB, 0x4C, 0x02, 0xF5,
+		0x40, 0xB7, 0xF9, 0x0E, 0x65, 0x92, 0xDC, 0x2B,
+		0x0A, 0xFD, 0xB3, 0x44, 0x2F, 0xD8, 0x96, 0x61,
+		0x55, 0xA2, 0xEC, 0x1B, 0x70, 0x87, 0xC9, 0x3E,
+		0x1F, 0xE8, 0xA6, 0x51, 0x3A, 0xCD, 0x83, 0x74,
+		0xC1, 0x36, 0x78, 0x8F, 0xE4, 0x13, 0x5D, 0xAA,
+		0x8B, 0x7C, 0x32, 0xC5, 0xAE, 0x59, 0x17, 0xE0,
+		0x2A, 0xDD, 0x93, 0x64, 0x0F, 0xF8, 0xB6, 0x41,
+		0x60, 0x97, 0xD9, 0x2E, 0x45, 0xB2, 0xFC, 0x0B,
+		0xBE, 0x49, 0x07, 0xF0, 0x9B, 0x6C, 0x22, 0xD5,
+		0xF4, 0x03, 0x4D, 0xBA, 0xD1, 0x26, 0x68, 0x9F,
+	};
+	return t[crc ^ data];
+}
+
+static uint8_t sprom_crc(uint8_t *sprom, int sprom_size)
+{
+	int i;
+	uint8_t crc = 0xFF;
+
+	for (i = 0; i < sprom_size - 1; i++)
+		crc = crc8(crc, sprom[i]);
+	crc ^= 0xFF;
+
+	return crc;
+}
+
+static int validate_input(uint8_t *sprom, int sprom_size)
+{
+	uint8_t crc, expected_crc;
+
+	crc = sprom_crc(sprom, sprom_size);
+	expected_crc = sprom[sprom_size - 1];
+	if (crc != expected_crc) {
+		fprintf(stderr, "Corrupt input data (crc: 0x%02X, expected: 0x%02X)\n",
+			crc, expected_crc);
+		return 1;
+	}
+	return 0;
+}
+
+static void output_sprom_image(void)
+{
+	char nbuf[1024];
+	FILE *fd;
+	int i, r;
+	int sprom_size;
+
+	/* Rev 8 SPROM data copied from a BCM4312 */
+	uint8_t sprom_data[] = {
+		0x01, 0x28, 0x00, 0x00, 0x7C, 0x13, 0x3C, 0x10, 0x78, 0x00,
+		0xBE, 0x6D, 0x00, 0x00, 0xC4, 0x2B, 0x64, 0x2A, 0x64, 0x29,
+		0x64, 0x2C, 0xE7, 0x3C, 0xFF, 0x46, 0x7F, 0x47, 0x00, 0x0C,
+		0x40, 0x78, 0xA0, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x15, 0x43, 0x00, 0x80,
+		0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00,
+		0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x72, 0x53,
+		0x11, 0x12, 0x01, 0x0A, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
+		0x1A, 0x00, 0xFE, 0x73, 0x64, 0xAD, 0x53, 0x55, 0x01, 0x00,
+		0xFF, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x02, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x6C, 0x00,
+		0xFF, 0xFF, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0x4A, 0x3E, 0x57, 0x1A, 0x8A, 0xF9, 0x91, 0xFE,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0x08, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x08, 0x5C
+	};
+
+	sprom_size = sizeof(sprom_data);
+	if (validate_input(sprom_data, sprom_size))
+		return;;
+	/* Initialize the random number generator */
+	srand(time(NULL));
+	/* generate a random MAC */
+	for (i = 0; i < 6; i++)
+		sprom_data[0x8C + i] = rand() % 64;
+	/* Adjust the random MAC to satisfy the following:
+	 * 1. Clear the multicast bit - lsb of first byte
+	 * 2. Set the LAA bit - bit 1 of first byte
+	 */
+	sprom_data[0x8C] = (sprom_data[0x8C] & ~1) | 2;
+	/* calculate the new CRC and store it */
+	sprom_data[sprom_size - 1] = sprom_crc(sprom_data, sprom_size);
+
+	r = snprintf(nbuf, sizeof(nbuf),
+		     "%s/ssb", cmdargs.target_dir);
+	if (r >= sizeof(nbuf)) {
+		fprintf(stderr, "name too long");
+		exit(2);
+	}
+
+	r = mkdir(nbuf, 0770);
+	if (r && errno != EEXIST) {
+		perror("failed to create output directory");
+		exit(2);
+	}
+
+	/* output the massaged SPROM image */
+	r = snprintf(nbuf, sizeof(nbuf), "%s/ssb/vsprom_image", cmdargs.target_dir);
+	if (r >= sizeof(nbuf)) {
+		fprintf(stderr, "name too long");
+		exit(2);
+	}
+	fd = fopen(nbuf, "r");
+	if (fd && !cmdargs.overwrite) {
+		printf("The virtual sprom already exists."
+			" To overwite, use the -O switch\n");
+		fclose(fd);
+		return;
+	}
+	fd = fopen(nbuf, "w");
+	if (!fd) {
+		printf("Failed to open SPROM image file\n");
+		return;
+	}
+	if (fwrite(sprom_data, sizeof(sprom_data), 1, fd) != 1)
+		printf("Error writing SPROM image file\n");
+	else
+		printf("Wrote virtual SPROM image at %s\n", nbuf);
+	fclose(fd);
+}
+
+static void print_usage(int argc, char *argv[])
+{
+	printf("\n%s\n", argv[0]);
+	printf("\nA tool to create an on-disk SPROM image for a Broadcom 43xx device\n");
+	printf("\nUsage: %s [OPTION]\n", argv[0]);
+	printf("  -O|--overwrite        "
+	       "Overwrite an existing image\n");
+	printf("  -w|--target-dir DIR   "
+	       "Write SPROM image to DIR (sub-directory /ssb is implicit)\n");
+	printf("  -h|--help             "
+	       "Print this help\n");
+	printf("\nExample: %s -w /lib/firmware\n"
+	       "         to store an SPROM image in /lib/firmware/ssb\n",
+	       argv[0]);
+}
+
+static int do_cmp_arg(char **argv, int *pos,
+		      const char *template,
+		      int allow_merged,
+		      char **param)
+{
+	char *arg;
+	char *next_arg;
+	size_t arg_len, template_len;
+
+	arg = argv[*pos];
+	next_arg = argv[*pos + 1];
+	arg_len = strlen(arg);
+	template_len = strlen(template);
+
+	if (param) {
+		/* Maybe we have a merged parameter here.
+		 * A merged parameter is "-pfoobar" for example.
+		 */
+		if (allow_merged && arg_len > template_len) {
+			if (memcmp(arg, template, template_len) == 0) {
+				*param = arg + template_len;
+				return ARG_MATCH;
+			}
+			return ARG_NOMATCH;
+		} else if (arg_len != template_len)
+			return ARG_NOMATCH;
+		*param = next_arg;
+	}
+	if (strcmp(arg, template) == 0) {
+		if (param) {
+			/* Skip the parameter on the next iteration. */
+			(*pos)++;
+			if (!*param) {
+				printf("%s needs a parameter\n", arg);
+				return ARG_ERROR;
+			}
+		}
+		return ARG_MATCH;
+	}
+
+	return ARG_NOMATCH;
+}
+
+/* Simple and lean command line argument parsing. */
+static int cmp_arg(char **argv, int *pos,
+		   const char *long_template,
+		   const char *short_template,
+		   char **param)
+{
+	int err;
+
+	if (long_template) {
+		err = do_cmp_arg(argv, pos, long_template, 0, param);
+		if (err == ARG_MATCH || err == ARG_ERROR)
+			return err;
+	}
+	err = ARG_NOMATCH;
+	if (short_template)
+		err = do_cmp_arg(argv, pos, short_template, 1, param);
+	return err;
+}
+
+int main(int argc, char **argv)
+{
+	int i, res;
+	char *param;
+
+	cmdargs.overwrite = 0;
+	cmdargs.target_dir = ".";
+	for (i = 0; i < argc; i++) {
+		res = cmp_arg(argv, &i, "--target-dir", "-w", &param);
+		if (res == ARG_MATCH) {
+			cmdargs.target_dir = param;
+			continue;
+		} else if (res == ARG_ERROR)
+			goto out;
+		res = cmp_arg(argv, &i, "--overwrite", "-O", NULL);
+		if (res == ARG_MATCH) {
+			cmdargs.overwrite = 1;
+			continue;
+		} else if (res == ARG_ERROR)
+			goto out;
+		res = cmp_arg(argv, &i, "--help", "-h", NULL);
+		if (res == ARG_MATCH) {
+			goto out;
+			return 0;
+		} else if (res == ARG_ERROR)
+			goto out;
+	}
+	output_sprom_image();
+	return 0;
+out:
+	print_usage(argc, argv);
+	return 1;
+}
Index: sprom/vsprom/Makefile
===================================================================
--- /dev/null
+++ sprom/vsprom/Makefile
@@ -0,0 +1,37 @@
+CC		= gcc
+
+PREFIX ?= /usr/local
+CFLAGS		?= -Os -fomit-frame-pointer
+CFLAGS		+= -std=c99 -Wall -pedantic -D_BSD_SOURCE
+LDFLAGS		?=
+
+SRCS = vsprom.c
+BIN	= ssb-vsprom
+
+.SUFFIXES:
+.PHONY: all install clean distclean
+.DEFAULT_GOAL := all
+.SILENT:
+
+OBJS = vsprom.o
+
+# Generate object files
+$(OBJS): $(SRCS) vsprom.h
+	echo Compiling $<
+	$(CC) -o $@ -c $(CFLAGS) $<
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	echo Linking $(BIN)
+	$(CC) $(CFLAGS) -o $(BIN) $(OBJS) $(LDFLAGS)
+
+install: all
+	install -d -o 0 -g 0 -m 755 $(PREFIX)/bin/
+	install -o 0 -g 0 -m 755 $(BIN) $(PREFIX)/bin/
+
+clean:
+	-rm -Rf obj dep *.orig *.rej *~
+
+distclean: clean
+	-rm -f *.fw $(BIN)
Index: sprom/vsprom/vsprom.h
===================================================================
--- /dev/null
+++ sprom/vsprom/vsprom.h
@@ -0,0 +1,13 @@
+#ifndef VSPROM_H
+#define VSPROM_H
+
+struct cmdline_args {
+	const char *target_dir;
+	int overwrite;
+};
+
+#define ARG_MATCH	0
+#define ARG_NOMATCH	1
+#define ARG_ERROR	-1
+
+#endif /* VSPROM_H */


From Larry.Finger at lwfinger.net  Sun Mar 21 01:14:51 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 20 Mar 2010 19:14:51 -0500
Subject: [PATCH] ssb: Implement virtual SPROM on disk
Message-ID: <4ba564fb.PfAZePu8tStyxs44%Larry.Finger@lwfinger.net>

Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
from the SPROM could be included in the kernel; however, this presents
a problem in the generation of a unique, reproducible MAC address. The
solution has been to create a utility that generates a virtual SPROM
image with a random MAC address. This image is stored in the firmware
area, and loaded using the asyncronous firmware load facility.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Michael,

I think this patch eliminates the need for the fallback sprom code; however,
I have not touched that facility yet.

Larry
---

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -19,6 +19,7 @@
 #include <linux/ssb/ssb_regs.h>
 #include <linux/pci.h>
 #include <linux/delay.h>
+#include <linux/firmware.h>
 
 #include "ssb_private.h"
 
@@ -613,6 +614,39 @@ static int sprom_extract(struct ssb_bus
 	return 0;
 }
 
+static int ssb_get_vsprom(struct device *dev, u16 *buf, size_t size)
+{
+	/* Use the firmware load facility to get the disk image of an SPROM */
+	const struct firmware *blob;
+	int err;
+	int i;
+
+	err = request_firmware(&blob, "ssb/vsprom_image", dev);
+	if (err) {
+		printk(KERN_ERR "ssb: The BCM43XX device does not have an "
+		       "SPROM built in, and the virtual SPROM file is not"
+		       " available.\n");
+		printk(KERN_ERR "ssb: Please go to "
+		       "http://wireless.kernel.org/en/users/Drivers/b43 "
+		       "and download the utility to create the file.\n");
+		return err;
+	}
+	if (blob->size != size * 2) {
+		printk(KERN_ERR "ssb: The virtual SPROM file has the wrong"
+		       " size\n");
+		return -ENOENT;
+	}
+	for (i = 0; i < size; i++)
+		buf[i] = blob->data[2 * i + 1] << 8 | blob->data[2 * i];
+	err = sprom_check_crc(buf, size);
+	if (err) {
+		printk(KERN_ERR "ssb: Invalid CRC for virtual SPROM\n");
+		return err;
+	}
+
+	return 0;
+}
+
 static int ssb_pci_sprom_get(struct ssb_bus *bus,
 			     struct ssb_sprom *sprom)
 {
@@ -620,8 +654,18 @@ static int ssb_pci_sprom_get(struct ssb_
 	int err = -ENOMEM;
 	u16 *buf;
 
-	if (!ssb_is_sprom_available(bus))
-		return -ENODEV;
+	if (!ssb_is_sprom_available(bus)) {
+		buf = kcalloc(SSB_SPROMSIZE_WORDS_R4, sizeof(u16),
+			      GFP_KERNEL);
+		if (!buf)
+			return -ENOMEM;
+		bus->sprom_size = SSB_SPROMSIZE_WORDS_R4;
+		if (ssb_get_vsprom(&bus->host_pci->dev, buf, bus->sprom_size)) {
+			err = -ENODEV;
+			goto out_free;
+		}
+		goto extract;
+	}
 
 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
 	if (!buf)
@@ -653,6 +697,7 @@ static int ssb_pci_sprom_get(struct ssb_
 				   " SPROM CRC (corrupt SPROM)\n");
 		}
 	}
+extract:
 	err = sprom_extract(bus, sprom, buf, bus->sprom_size);
 
 out_free:


From mb at bu3sch.de  Sun Mar 21 10:40:30 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 21 Mar 2010 10:40:30 +0100
Subject: [PATCH] ssb: Implement virtual SPROM on disk
In-Reply-To: <4ba564fb.PfAZePu8tStyxs44%Larry.Finger@lwfinger.net>
References: <4ba564fb.PfAZePu8tStyxs44%Larry.Finger@lwfinger.net>
Message-ID: <201003211040.31118.mb@bu3sch.de>

On Sunday 21 March 2010 01:14:51 Larry Finger wrote:
> Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
> from the SPROM could be included in the kernel; however, this presents
> a problem in the generation of a unique, reproducible MAC address. The
> solution has been to create a utility that generates a virtual SPROM
> image with a random MAC address. This image is stored in the firmware
> area, and loaded using the asyncronous firmware load facility.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> Michael,
> 
> I think this patch eliminates the need for the fallback sprom code; however,
> I have not touched that facility yet.
> 
> Larry
> ---
> 
> Index: wireless-testing/drivers/ssb/pci.c
> ===================================================================
> --- wireless-testing.orig/drivers/ssb/pci.c
> +++ wireless-testing/drivers/ssb/pci.c
> @@ -19,6 +19,7 @@
>  #include <linux/ssb/ssb_regs.h>
>  #include <linux/pci.h>
>  #include <linux/delay.h>
> +#include <linux/firmware.h>
>  
>  #include "ssb_private.h"
>  
> @@ -613,6 +614,39 @@ static int sprom_extract(struct ssb_bus
>  	return 0;
>  }
>  
> +static int ssb_get_vsprom(struct device *dev, u16 *buf, size_t size)
> +{
> +	/* Use the firmware load facility to get the disk image of an SPROM */
> +	const struct firmware *blob;
> +	int err;
> +	int i;
> +
> +	err = request_firmware(&blob, "ssb/vsprom_image", dev);

Well, this has the problem every synchronous firmware fetching mechanism has:
bootup with builtin module.
I think it should be done asynchronously.

> +	if (err) {
> +		printk(KERN_ERR "ssb: The BCM43XX device does not have an "
> +		       "SPROM built in, and the virtual SPROM file is not"
> +		       " available.\n");
> +		printk(KERN_ERR "ssb: Please go to "
> +		       "http://wireless.kernel.org/en/users/Drivers/b43 "
> +		       "and download the utility to create the file.\n");
> +		return err;
> +	}
> +	if (blob->size != size * 2) {
> +		printk(KERN_ERR "ssb: The virtual SPROM file has the wrong"
> +		       " size\n");
> +		return -ENOENT;
> +	}
> +	for (i = 0; i < size; i++)
> +		buf[i] = blob->data[2 * i + 1] << 8 | blob->data[2 * i];
> +	err = sprom_check_crc(buf, size);
> +	if (err) {
> +		printk(KERN_ERR "ssb: Invalid CRC for virtual SPROM\n");
> +		return err;
> +	}
> +
> +	return 0;
> +}
> +
>  static int ssb_pci_sprom_get(struct ssb_bus *bus,
>  			     struct ssb_sprom *sprom)
>  {
> @@ -620,8 +654,18 @@ static int ssb_pci_sprom_get(struct ssb_
>  	int err = -ENOMEM;
>  	u16 *buf;
>  
> -	if (!ssb_is_sprom_available(bus))
> -		return -ENODEV;
> +	if (!ssb_is_sprom_available(bus)) {
> +		buf = kcalloc(SSB_SPROMSIZE_WORDS_R4, sizeof(u16),
> +			      GFP_KERNEL);
> +		if (!buf)
> +			return -ENOMEM;
> +		bus->sprom_size = SSB_SPROMSIZE_WORDS_R4;
> +		if (ssb_get_vsprom(&bus->host_pci->dev, buf, bus->sprom_size)) {
> +			err = -ENODEV;
> +			goto out_free;
> +		}
> +		goto extract;
> +	}
>  
>  	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
>  	if (!buf)
> @@ -653,6 +697,7 @@ static int ssb_pci_sprom_get(struct ssb_
>  				   " SPROM CRC (corrupt SPROM)\n");
>  		}
>  	}
> +extract:
>  	err = sprom_extract(bus, sprom, buf, bus->sprom_size);
>  
>  out_free:
> 
> 

-- 
Greetings, Michael.


From pmjdebruijn at gmail.com  Sun Mar 21 12:32:36 2010
From: pmjdebruijn at gmail.com (Pascal de Bruijn)
Date: Sun, 21 Mar 2010 12:32:36 +0100
Subject: BCM4312 working great
Message-ID: <36121a671003210432u1fe5d587k289e2e87ead7be70@mail.gmail.com>

Hi,

I've just upgraded my laptop from Ubuntu Karmic to Ubuntu Lucid Beta1
(2.6.32 kernel), and the open source b43 driver is working wonderfully
for me:

02:00.0 Network controller: Broadcom Corporation BCM4312 802.11b/g (rev 01)
02:00.0 0280: 14e4:4315 (rev 01)

[    2.467699] b43-pci-bridge 0000:02:00.0: PCI INT A -> GSI 17
(level, low) -> IRQ 17
[    2.467719] b43-pci-bridge 0000:02:00.0: setting latency timer to 64
[    7.468178] b43-phy0: Broadcom 4312 WLAN found (core revision 15)
[    8.363926] Registered led device: b43-phy0::tx
[    8.363948] Registered led device: b43-phy0::rx
[    8.363970] Registered led device: b43-phy0::radio
[   12.600129] b43 ssb0:0: firmware: requesting b43/ucode15.fw
[   12.747889] b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
[   12.844387] b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
[   13.000136] b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)

I used to be stuck with Broadcom's own crappy binary wl driver... Free at last!

Thanks for the effort,
Pascal de Bruijn


From Larry.Finger at lwfinger.net  Mon Mar 22 00:22:45 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sun, 21 Mar 2010 18:22:45 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
Message-ID: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>

Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
from the SPROM could be included in the kernel; however, this presents
a problem in the generation of a unique, reproducible MAC address. The
solution has been to create a utility that generates a virtual SPROM
image with a random MAC address. This image is stored in the firmware
area, and loaded using the asyncronous firmware load facility.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

Michael,

I think this patch eliminates the need for the fallback sprom code; however,
I have not touched that facility yet.

Larry
---
V2 - make virstual SPROM loading asynchronous.

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -19,6 +19,7 @@
 #include <linux/ssb/ssb_regs.h>
 #include <linux/pci.h>
 #include <linux/delay.h>
+#include <linux/firmware.h>
 
 #include "ssb_private.h"
 
@@ -613,6 +614,53 @@ static int sprom_extract(struct ssb_bus
 	return 0;
 }
 
+static void ssb_vsprom_load_failed(void)
+{
+	printk(KERN_ERR "ssb: The BCM43XX device does not have an "
+	       "SPROM built in, and the virtual SPROM file is not"
+	       " available.\n");
+	printk(KERN_ERR "ssb: Please go to "
+	       "http://wireless.kernel.org/en/users/Drivers/b43 "
+	       "and download the utility to create the file.\n");
+}
+
+static void ssb_get_vsprom(const struct firmware *fw, void *context)
+{
+	/* Second part of asynchronous firmware load */
+	int i;
+	u16 *buf;
+	size_t size = SSB_SPROMSIZE_WORDS_R4;
+	struct ssb_bus *bus = context;
+
+	if (!fw) {
+		ssb_vsprom_load_failed();
+		return;
+	}
+	buf = kcalloc(size, sizeof(u16), GFP_KERNEL);
+	if (!buf) {
+		printk(KERN_ERR "ssb: no memory for virtual sprom\n");
+		goto out;
+	}
+	if (fw->size != size * 2) {
+		printk(KERN_ERR "ssb: The virtual SPROM file has the wrong"
+		       " size\n");
+		goto out_free;
+	}
+	for (i = 0; i < size; i++)
+		buf[i] = fw->data[2 * i + 1] << 8 | fw->data[2 * i];
+	if(sprom_check_crc(buf, size)) {
+		printk(KERN_ERR "ssb: Invalid CRC for virtual SPROM\n");
+		goto out_free;
+	}
+	sprom_extract(bus, &bus->sprom, buf, size);
+	printk(KERN_DEBUG "ssb: revision %d\n", bus->sprom.revision);
+
+out_free:
+	kfree(buf);
+out:
+	release_firmware(fw);
+}
+
 static int ssb_pci_sprom_get(struct ssb_bus *bus,
 			     struct ssb_sprom *sprom)
 {
@@ -620,8 +668,17 @@ static int ssb_pci_sprom_get(struct ssb_
 	int err = -ENOMEM;
 	u16 *buf;
 
-	if (!ssb_is_sprom_available(bus))
-		return -ENODEV;
+	if (!ssb_is_sprom_available(bus)) {
+		/* This device has no SPROM. Try for a virtual version */
+		err = request_firmware_nowait(THIS_MODULE,
+			FW_ACTION_HOTPLUG, "ssb/vsprom_image",
+			&bus->host_pci->dev, GFP_KERNEL, bus, ssb_get_vsprom);
+		if (err) {
+			ssb_vsprom_load_failed();
+			return err;
+		}
+		return 0;
+	}
 
 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
 	if (!buf)
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c
+++ wireless-testing/drivers/net/wireless/b43/main.c
@@ -4858,7 +4858,17 @@ static int b43_one_core_attach(struct ss
 static void b43_sprom_fixup(struct ssb_bus *bus)
 {
 	struct pci_dev *pdev;
+	int i;
 
+	/* The sprom contents may be loaded asynchronously. Check that the
+	 * revision is set before proceeding */
+	for (i = 0; i < 1000; i++) {
+		if (bus->sprom.revision)
+			break;
+		msleep(1);
+	}
+	if (i == 1000)
+		printk(KERN_INFO "b43: No sprom image loaded\n");
 	/* boardflags workarounds */
 	if (bus->boardinfo.vendor == SSB_BOARDVENDOR_DELL &&
 	    bus->chip_id == 0x4301 && bus->boardinfo.rev == 0x74)


From mb at bu3sch.de  Mon Mar 22 09:37:54 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 22 Mar 2010 09:37:54 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <1269239303.12836.17.camel@ayu>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu>
Message-ID: <201003220937.55133.mb@bu3sch.de>

On Monday 22 March 2010 07:28:23 Calvin Walton wrote:
> Hi,
> 
> On Sat, 2010-03-20 at 19:14 -0500, Larry Finger wrote:
> Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
> > from the SPROM could be included in the kernel; however, this presents
> > a problem in the generation of a unique, reproducible MAC address. The
> > solution has been to create a utility that generates a virtual SPROM
> > image with a random MAC address. This image is stored in the firmware
> > area, and loaded using the asyncronous firmware load facility.
> 
> I'm curious, how would this firmware-loading scheme deal with having
> multiple cards of this type installed? This seems like an unusual
> situation, but it looks like this patch will cause all of the cards to
> start up with the same MAC address due to the fixed filename.
> 
> Instead of using a firmware file to load in the MAC address, might it be
> possible to move the persistent MAC setting to a simple udev rule which
> generates a persistent MAC address, saves it, then sets it each boot
> using a command like "ip link set wlan0 address XX:XX:XX:XX:XX:XX" ?
> 
> This would remove the need to have this "fake" firmware file available
> at boot, provided that the driver can handle leaving the address
> unconfigured until userspace gets around to setting it. As well, it
> could be written to work with multiple cards easily, saving a different
> MAC for each.
> 
> Some thoughts for your consideration,
> 

I think this actually is a very good idea.
This way we could live without a user-supplied sprom image, which I would _really_
prefer. 

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Mon Mar 22 16:06:34 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 22 Mar 2010 10:06:34 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003220937.55133.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu> <201003220937.55133.mb@bu3sch.de>
Message-ID: <4BA7877A.5090703@lwfinger.net>

On 03/22/2010 03:37 AM, Michael Buesch wrote:
> On Monday 22 March 2010 07:28:23 Calvin Walton wrote:
>> Hi,
>>
>> On Sat, 2010-03-20 at 19:14 -0500, Larry Finger wrote:
>> Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
>>> from the SPROM could be included in the kernel; however, this presents
>>> a problem in the generation of a unique, reproducible MAC address. The
>>> solution has been to create a utility that generates a virtual SPROM
>>> image with a random MAC address. This image is stored in the firmware
>>> area, and loaded using the asyncronous firmware load facility.
>>
>> I'm curious, how would this firmware-loading scheme deal with having
>> multiple cards of this type installed? This seems like an unusual
>> situation, but it looks like this patch will cause all of the cards to
>> start up with the same MAC address due to the fixed filename.
>>
>> Instead of using a firmware file to load in the MAC address, might it be
>> possible to move the persistent MAC setting to a simple udev rule which
>> generates a persistent MAC address, saves it, then sets it each boot
>> using a command like "ip link set wlan0 address XX:XX:XX:XX:XX:XX" ?
>>
>> This would remove the need to have this "fake" firmware file available
>> at boot, provided that the driver can handle leaving the address
>> unconfigured until userspace gets around to setting it. As well, it
>> could be written to work with multiple cards easily, saving a different
>> MAC for each.
>>
>> Some thoughts for your consideration,
>>
> 
> I think this actually is a very good idea.
> This way we could live without a user-supplied sprom image, which I would _really_
> prefer. 

Avoiding the use of a new user-space program would be desirable, but I cannot
think of any way that a udev rule could distinguish one card from another. If we
had any unique features such as a serial number, then we wouldn't need user
space at all. Any suggestions?

Larry




From mb at bu3sch.de  Mon Mar 22 22:55:00 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 22 Mar 2010 22:55:00 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <4BA7877A.5090703@lwfinger.net>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<201003220937.55133.mb@bu3sch.de> <4BA7877A.5090703@lwfinger.net>
Message-ID: <201003222255.00366.mb@bu3sch.de>

On Monday 22 March 2010 16:06:34 Larry Finger wrote:
> Avoiding the use of a new user-space program would be desirable, but I cannot
> think of any way that a udev rule could distinguish one card from another. If we
> had any unique features such as a serial number, then we wouldn't need user
> space at all. Any suggestions?

I don't see a problem for udev to distinguish the cards. It can do it merely on
the bus-ID. That's unique. Yeah, it might change if you change the hardware.
But do we care? I say no, because you cannot actually change the hardware in real life
for any of these devices. And even if you could reorder the devices on the bus or whatever.
What would happen? The card would get a new MAC address. That's all. That's acceptable.

The kernel would (for example) just set the mac address to all-ones. Udev would
notice this (invalid) mac address and reassign a new persistent one to the device. It then
stores the address on the harddisk.

In fact, if we implement a mechanism in the kernel, we have _exactly_ the same problem.
However, currently Larry's patches just ignore that problem and assume that there's only
one card in the system anyway.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Mon Mar 22 22:56:44 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 22 Mar 2010 16:56:44 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <1269239303.12836.17.camel@ayu>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu>
Message-ID: <4BA7E79C.9070100@lwfinger.net>

On 03/22/2010 01:28 AM, Calvin Walton wrote:
> 
> I'm curious, how would this firmware-loading scheme deal with having
> multiple cards of this type installed? This seems like an unusual
> situation, but it looks like this patch will cause all of the cards to
> start up with the same MAC address due to the fixed filename.

I have a workaround for this problem based on the bus address of the device.

> Instead of using a firmware file to load in the MAC address, might it be
> possible to move the persistent MAC setting to a simple udev rule which
> generates a persistent MAC address, saves it, then sets it each boot
> using a command like "ip link set wlan0 address XX:XX:XX:XX:XX:XX" ?
> 
> This would remove the need to have this "fake" firmware file available
> at boot, provided that the driver can handle leaving the address
> unconfigured until userspace gets around to setting it. As well, it
> could be written to work with multiple cards easily, saving a different
> MAC for each.

Does anyone have any suggestions on what characteristic could be used to
generate a unique MAC address for a box in a udev rule? Unless someone proposes
a workable solution, I will push V3 of my patch with the bus address change
noted above.

Larry


From Larry.Finger at lwfinger.net  Mon Mar 22 23:19:54 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 22 Mar 2010 17:19:54 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003222255.00366.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<201003220937.55133.mb@bu3sch.de> <4BA7877A.5090703@lwfinger.net>
	<201003222255.00366.mb@bu3sch.de>
Message-ID: <4BA7ED0A.9060804@lwfinger.net>

On 03/22/2010 04:55 PM, Michael Buesch wrote:
> 
> I don't see a problem for udev to distinguish the cards. It can do it merely on
> the bus-ID. That's unique. Yeah, it might change if you change the hardware.
> But do we care? I say no, because you cannot actually change the hardware in real life
> for any of these devices. And even if you could reorder the devices on the bus or whatever.
> What would happen? The card would get a new MAC address. That's all. That's acceptable.
> 
> The kernel would (for example) just set the mac address to all-ones. Udev would
> notice this (invalid) mac address and reassign a new persistent one to the device. It then
> stores the address on the harddisk.

What ensures that this persistent name would be unique?

> In fact, if we implement a mechanism in the kernel, we have _exactly_ the same problem.
> However, currently Larry's patches just ignore that problem and assume that there's only
> one card in the system anyway.

As I said in a posting a few minutes ago, that problem is solved.

Larry


From mb at bu3sch.de  Mon Mar 22 23:25:35 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 22 Mar 2010 23:25:35 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <4BA7E79C.9070100@lwfinger.net>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu> <4BA7E79C.9070100@lwfinger.net>
Message-ID: <201003222325.35994.mb@bu3sch.de>

On Monday 22 March 2010 22:56:44 Larry Finger wrote:
> Does anyone have any suggestions on what characteristic could be used to
> generate a unique MAC address for a box in a udev rule?

/dev/urandom

Yeah, there's the chance of clashes. In practice there won't be any clashes,
however. If you think there's a real risk, you should start playing
the lottery tomorrow. You'll immediately win a million dollars so you don't have
to worry about those questions anymore. ;)

In fact, I think the risk for mac clashes is not really reduced by generating the mac
address from serial numbers, whatever, etc...

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Mar 22 23:28:40 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 22 Mar 2010 23:28:40 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <4BA7ED0A.9060804@lwfinger.net>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<201003222255.00366.mb@bu3sch.de> <4BA7ED0A.9060804@lwfinger.net>
Message-ID: <201003222328.40703.mb@bu3sch.de>

On Monday 22 March 2010 23:19:54 Larry Finger wrote:
> On 03/22/2010 04:55 PM, Michael Buesch wrote:
> > 
> > I don't see a problem for udev to distinguish the cards. It can do it merely on
> > the bus-ID. That's unique. Yeah, it might change if you change the hardware.
> > But do we care? I say no, because you cannot actually change the hardware in real life
> > for any of these devices. And even if you could reorder the devices on the bus or whatever.
> > What would happen? The card would get a new MAC address. That's all. That's acceptable.
> > 
> > The kernel would (for example) just set the mac address to all-ones. Udev would
> > notice this (invalid) mac address and reassign a new persistent one to the device. It then
> > stores the address on the harddisk.
> 
> What ensures that this persistent name would be unique?

The same mechanism that ensures that an UUID is unique: A good random number generator.

> > In fact, if we implement a mechanism in the kernel, we have _exactly_ the same problem.
> > However, currently Larry's patches just ignore that problem and assume that there's only
> > one card in the system anyway.
> 
> As I said in a posting a few minutes ago, that problem is solved.

Well. You distinguish by bus-ID, right? That's exactly the thing that udev does.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Mar 23 00:45:28 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 22 Mar 2010 18:45:28 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003222325.35994.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu> <4BA7E79C.9070100@lwfinger.net>
	<201003222325.35994.mb@bu3sch.de>
Message-ID: <4BA80118.1070801@lwfinger.net>

Michael,

Would the following be sufficient?

(1) The utility /bin/dbus-uuidgen is used to create a file
/lib/firmware/ssb/mac_address. The command to create this file if it does not
exist could be added to the scripts that use fwcutter.

(2) In drivers/ssb/pci.c, the firmware loading process reads the file, then
modifies it using the bus address.

I think this process would create a persistent MAC address that is unique within
the box, with a small probability of being duplicated on another machine.

Larry



From celejar at gmail.com  Tue Mar 23 01:54:14 2010
From: celejar at gmail.com (Celejar)
Date: Mon, 22 Mar 2010 20:54:14 -0400
Subject: Failure with monitor mode
Message-ID: <20100322205414.55e06b00.celejar@gmail.com>

Hi,

I have been using my 4318 successfully with b43 (thanks, Michael and
all devs / reverse engineers!) for many kernel revisions now, both as a
client, as well as in monitor mode (kismet, airodump).  With
2.6.34-rc1, I can't get monitor mode to work successfully - I get
errors like this:

setsockopt(PACKET_MR_PROMISC) failed: Invalid argument

Whatever I do, whether enabling monitor mode on the main interface, or
creating a separate one with iw, I keep getting 'setsockopt - invalid
argument' failures.

I really don't know if this is a b43 thing, or some other problem, or
misconfiguration on my part, but before I start bisecting, can anyone
point me in the direction of any likely problem / misconfiguration on
my part?

Celejar
-- 
foffl.sourceforge.net - Feeds OFFLine, an offline RSS/Atom aggregator
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From f.middleton at apogeect.com  Tue Mar 23 03:57:09 2010
From: f.middleton at apogeect.com (Frank Middleton)
Date: Mon, 22 Mar 2010 22:57:09 -0400
Subject: Works wonderfully except at Barnes and Nobles.
Message-ID: <4BA82E05.9010109@apogeect.com>

Had some really great experiences with your software recently, especially
using a public Wifi system with really weak/out of range signals. I could
still get emails even when Windows couldn't find any unencrypted APs,
and it worked like a champ even at one site where there were >14 APs.
FWIW it kept working flawlessly through dozens of suspend/resumes,
something the eth0 driver couldn't do. Thanks for a robust and useful
product!

I did notice that the system log had a very large number of entries like
the following that coincided with the out of range usage. This isn't a
question, just an observation that might perhaps be useful. It didn't
seem to be a problem (this on a very recent Fedora C10).

Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error
Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error
Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error

However, I do have a question - maybe this isn't the right list to ask, but
not sure which one would be. We tried a Barnes and Noble store which
had "free" WiFi access, but I couldn't get it to associate with the AP at
all. This is one of those setups where it forces your initial browser access
to an agreement page. I suppose this might have worked with Windows
and subsequently the B43 device might have been able to associate. Can
anyone explain why this didn't work, or a way to make it work?

Thanks



From mb at bu3sch.de  Tue Mar 23 09:52:56 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 23 Mar 2010 09:52:56 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <4BA80118.1070801@lwfinger.net>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<201003222325.35994.mb@bu3sch.de> <4BA80118.1070801@lwfinger.net>
Message-ID: <201003230952.56207.mb@bu3sch.de>

On Tuesday 23 March 2010 00:45:28 Larry Finger wrote:
> (2) In drivers/ssb/pci.c, the firmware loading process reads the file, then
> modifies it using the bus address.

No. You don't need firmware loading at all.
udev can just set the mac address through the standard ioctl calls.
Just like how ifconfig and ip can do.

-- 
Greetings, Michael.


From mb at bu3sch.de  Tue Mar 23 12:43:12 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 23 Mar 2010 12:43:12 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003230955.39871.florian@openwrt.org>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<4BA7E79C.9070100@lwfinger.net>
	<201003230955.39871.florian@openwrt.org>
Message-ID: <201003231243.13117.mb@bu3sch.de>

On Tuesday 23 March 2010 09:55:39 Florian Fainelli wrote:
> Why not use random_ether_addr and only use the digits that you are interested 
> in?

Because it's not constant across reboots.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Tue Mar 23 15:25:48 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 09:25:48 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003230952.56207.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<201003222325.35994.mb@bu3sch.de> <4BA80118.1070801@lwfinger.net>
	<201003230952.56207.mb@bu3sch.de>
Message-ID: <4BA8CF6C.2050701@lwfinger.net>

On 03/23/2010 03:52 AM, Michael Buesch wrote:
> On Tuesday 23 March 2010 00:45:28 Larry Finger wrote:
>> (2) In drivers/ssb/pci.c, the firmware loading process reads the file, then
>> modifies it using the bus address.
> 
> No. You don't need firmware loading at all.
> udev can just set the mac address through the standard ioctl calls.
> Just like how ifconfig and ip can do.

Will someone please write me udev rule(s) that do the following:

1. Detect a MAC address of FF:FF:FF:FF:FF:FF
2. If this is the first time for this bus address, then generate a random MAC
address with the bus address encoded in it.
3. Preserve the address for future reloads
4. Load the saved address into the device.
5. Do the above with only standard external commands - no new programs

My skills with udev are not up to the task.

I now have code running that uses the firmware load facility to read a
file created by /bin/dbus-uuidgen to create a MAC address that will satisfy the
requirements. If the file is needed but not available, then the user is prompted
with the commands needed to create it.

Larry


From Larry.Finger at lwfinger.net  Tue Mar 23 20:13:54 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 14:13:54 -0500
Subject: [PATCH V3] ssb: Implement virtual SPROM
Message-ID: <4ba912f2./S7YyAUZdz6Kx4tH%Larry.Finger@lwfinger.net>

Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
from the SPROM could be included in the kernel; however, this presents
a problem in the generation of a unique, reproducible MAC address. The
solution is to use a file in /lib/firmware/ssb, which has some "random"
information generated by /bin/dbus-uuidgen. This file is loaded using the
asynchronous firmware facility and a MAC address is generated from those
data. To prevent multiple devices in a single box from having the same
MAC address, the last two digits are replaced by the bus numbers of the
device.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

Unless someone comes up with a unique way to generate a MAC address using
only udev rules, I think this is ready.

I suspect it is a little to invasive for 2.6.34. In addition, it fixes
a bug, but not a regression.

Larry
---

V2 - make virtual SPROM loading asynchronous.
V3 - eliminate the need for a special external utility
   - set for unique MAC address even if a box has more than one of these
     devices

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -19,6 +19,7 @@
 #include <linux/ssb/ssb_regs.h>
 #include <linux/pci.h>
 #include <linux/delay.h>
+#include <linux/firmware.h>
 
 #include "ssb_private.h"
 
@@ -613,6 +614,120 @@ static int sprom_extract(struct ssb_bus
 	return 0;
 }
 
+static void ssb_vsprom_load_failed(void)
+{
+	printk(KERN_ERR "ssb: The BCM43XX device does not have an "
+		    "SPROM built in. Use the command\n");
+	printk(KERN_ERR "     'mkdir -p /lib/firmware/ssb ; /bin/dbus-uuidgen"
+		    " > /lib/firmware/ssb/mac_addr'\n");
+	printk(KERN_ERR "     to generate the required file.\n");
+}
+
+static inline u8 ascii_to_bin(u8 input)
+{
+	/* return the binary value of the ASCII char in the low nibble */
+	return (input <= 0x39) ? input & 0xF : (input - 0x27) & 0xF;
+}
+
+static void ssb_get_vsprom(const struct firmware *fw, void *context)
+{
+	/* Second part of asynchronous firmware load */
+	int i;
+	struct ssb_bus *bus = context;
+	struct ssb_sprom *sprom = &bus->sprom;
+	u8 buf2[8];
+	char *name;
+
+	if (!fw) {
+		ssb_vsprom_load_failed();
+		return;
+	}
+	/* Get values extracted from SPROM. If sprom_extract_r8() is changed,
+	 * this section must be changed as well. For any device with 5GHz
+	 * capability, some variables will have to be changed.
+	 */
+	sprom->revision = 8;
+	sprom->boardflags_lo = 0x0A01;
+	sprom->boardflags_hi = 0x0006;
+	sprom->boardflags2_lo = 0x0000;
+	sprom->boardflags2_hi = 0x0000;
+	sprom->ant_available_a = 0x00;
+	sprom->ant_available_bg = 0x03;
+	sprom->maxpwr_bg = 0x4A;
+	sprom->itssi_bg = 0x3E;
+	sprom->maxpwr_a = 0xFF;
+	sprom->itssi_a = 0xFF;
+	sprom->maxpwr_ah = 0xFF;
+	sprom->maxpwr_al = 0xFF;
+	sprom->gpio0 = 0x83;
+	sprom->gpio1 = 0xFF;
+	sprom->gpio2 = 0xFF;
+	sprom->gpio3 = 0xFF;
+	sprom->tri2g = 0x6C;
+	sprom->tri5g = 0x00;
+	sprom->tri5gl = 0xFF;
+	sprom->tri5gh = 0xFF;
+	sprom->rxpo2g = 0xFA;
+	sprom->rxpo5g = 0xFF;
+	sprom->rssismf2g = 0x0F;
+	sprom->rssismc2g = 0x00;
+	sprom->rssisav2g = 0x00;
+	sprom->bxa2g = 0x00;
+	sprom->rssismf5g = 0x0F;
+	sprom->rssismc5g = 0x0F;
+	sprom->rssisav5g = 0x07;
+	sprom->bxa5g = 0x03;
+	sprom->pa0b0 = 0x1a57;
+	sprom->pa0b1 = 0xF98A;
+	sprom->pa0b2 = 0xFE91;
+	sprom->pa1b0 = 0xFFFF;
+	sprom->pa1b1 = 0xFFFF;
+	sprom->pa1b2 = 0xFFFF;
+	sprom->pa1lob0 = 0xFFFF;
+	sprom->pa1lob1 = 0xFFFF;
+	sprom->pa1lob2 = 0xFFFF;
+	sprom->pa1hib0 = 0xFFFF;
+	sprom->pa1hib1 = 0xFFFF;
+	sprom->pa1hib2 = 0xFFFF;
+	sprom->cck2gpo = 0xFFFF;
+	sprom->ofdm2gpo = 0x00000002;
+	sprom->ofdm5glpo = 0xFFFFFFFF;
+	sprom->ofdm5gpo = 0xFFFFFFFF;
+	sprom->ofdm5ghpo = 0xFFFFFFFF;
+	memset(sprom->et0mac, 0xFF, 6);
+	memset(sprom->et1mac, 0xFF, 6);
+
+	if (fw->size != 33) {
+		printk(KERN_ERR "ssb: The MAC address file has the wrong"
+		       " size\n");
+		goto out;
+	}
+	/* Input MAC address data in ASCII - get low nibble in binary */
+	for (i = 0 ; i < 8; i++) {
+		u8 tmp = ascii_to_bin(fw->data[2 * i]);
+		u8 tmp1 = ascii_to_bin(fw->data[2 * i + 1]);
+		buf2[i] = tmp << 4 | tmp1;
+	}
+	/* make sure 2 least significant bits of first byte are clear
+	 * These bits are multicast address and LAA bit, and
+	 * copy the randomized MAC address to the sprom variables
+	 */
+	buf2[0] &= ~(3);
+	memcpy(sprom->il0mac, buf2, 4);
+
+	/* As there may be more than one such interface on a given box,
+	 * modify the random MAC address in the file with the
+	 * bus information as provided by dev_name(). This will be in
+	 * the form "nnnn:mm:oo.p". The last two digits of the MAC address
+	 * will be set to oo and mm.
+	 */
+	name = (char *)dev_name(&bus->host_pci->dev);
+	sprom->il0mac[5] = ascii_to_bin(name[5]) << 4 | ascii_to_bin(name[6]);
+	sprom->il0mac[4] = ascii_to_bin(name[8]) << 4 | ascii_to_bin(name[9]);
+out:
+	release_firmware(fw);
+}
+
 static int ssb_pci_sprom_get(struct ssb_bus *bus,
 			     struct ssb_sprom *sprom)
 {
@@ -620,8 +735,18 @@ static int ssb_pci_sprom_get(struct ssb_
 	int err = -ENOMEM;
 	u16 *buf;
 
-	if (!ssb_is_sprom_available(bus))
-		return -ENODEV;
+	if (!ssb_is_sprom_available(bus)) {
+		/* This device has no SPROM. Try for a random MAC address */
+		err = request_firmware_nowait(THIS_MODULE,
+			FW_ACTION_HOTPLUG, "ssb/mac_addr",
+			&bus->host_pci->dev, GFP_KERNEL, bus,
+			ssb_get_vsprom);
+		if (err) {
+			ssb_vsprom_load_failed();
+			return err;
+		}
+		return 0;
+	}
 
 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
 	if (!buf)
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.c
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c
@@ -107,7 +107,8 @@ static void lpphy_read_band_sprom(struct
 		 * opo == ofdm2gpo and we don't know any SSB with LP-PHY
 		 * and SPROM rev below 8.
 		 */
-		B43_WARN_ON(bus->sprom.revision < 8);
+		if (bus->sprom.revision < 8)
+			b43err(dev->wl, "Illegal SPROM Revision\n");
 		ofdmpo = bus->sprom.ofdm2gpo;
 		if (cckpo) {
 			for (i = 0; i < 4; i++) {


From Larry.Finger at lwfinger.net  Tue Mar 23 20:28:08 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 14:28:08 -0500
Subject: Works wonderfully except at Barnes and Nobles.
In-Reply-To: <4BA82E05.9010109@apogeect.com>
References: <4BA82E05.9010109@apogeect.com>
Message-ID: <4BA91648.7020001@lwfinger.net>

On 03/22/2010 09:57 PM, Frank Middleton wrote:
> Had some really great experiences with your software recently, especially
> using a public Wifi system with really weak/out of range signals. I could
> still get emails even when Windows couldn't find any unencrypted APs,
> and it worked like a champ even at one site where there were >14 APs.
> FWIW it kept working flawlessly through dozens of suspend/resumes,
> something the eth0 driver couldn't do. Thanks for a robust and useful
> product!

Good to hear.

> I did notice that the system log had a very large number of entries like
> the following that coincided with the out of range usage. This isn't a
> question, just an observation that might perhaps be useful. It didn't
> seem to be a problem (this on a very recent Fedora C10).
> 
> Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error
> Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error
> Mar  2 23:19:56 host10 kernel: b43-phy0 ERROR: PHY transmission error

We don't know why the firmware is generating these errors. In general, they are
harmless.

> However, I do have a question - maybe this isn't the right list to ask, but
> not sure which one would be. We tried a Barnes and Noble store which
> had "free" WiFi access, but I couldn't get it to associate with the AP at
> all. This is one of those setups where it forces your initial browser
> access
> to an agreement page. I suppose this might have worked with Windows
> and subsequently the B43 device might have been able to associate. Can
> anyone explain why this didn't work, or a way to make it work?

You don't say what distro you are using, nor what kernel. It has been a while
since I connected to an AP using that method, but it worked with openSUSE 11.2
and what was probably a 2.6.32 kernel. With the KDE flavor of NetworkManager's
applet, I created a connection to the AP, then used the applet to connect to it.
Once associated and an IP was obtained with DHCP, I launched the browser, and up
came the sign-in page. This was at a Starbucks where the service was not free,
so I did go any further. Internet access was not that important at the time.

Larry


From clopes at gmail.com  Tue Mar 23 20:30:41 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 02:30:41 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of b43 
	driver
Message-ID: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>

Hi,

I had a perfectly working Dell system running Windows Vista and using
version 5.60.188.1 of the Broadcom windows driver (distributed by
Dell) for what Windows calls the "Dell Wireless 1397 WLAN Mini-Card",
which is actually 14e4:4315.

I booted Parted Magic 4.9 from a USB flash drive, which uses the
2.6.32 linux kernel.
I started up networking in Parted Magic and asked it to configure the
wireless driver.

At first it found my normal SSID and I asked it to try to connect, but
it failed.  I thought this was just a transient issue specific to
Parted Magic and/or linux.

So I booted bank into Vista, only to see that although Vista reports
everything as being fine with the card, no wireless networks are ever
detected.  I have verified that the wireless networks that I expect
indeed exist and are in range (the machine has not moved).

Is it possible that the b43 driver somehow corrupted the firmware/ROM
of my card such that it does not function correctly?  Can I fix this?
There is a DMA error (also shown below in context): b43-phy0 ERROR:
Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000


Please help

I booted back into Parted Magic and got this info from uname, dmesg, and lspci:
uname:
Linux PartedMagic 2.6.32.9-pmagic #3 SMP Fri Mar 12 15:53:22 CST 2010
i686 GNU/Linux

lspci:
0c:00.0 Network controller [0280]: Broadcom Corporation BCM4312 802.11b/g [14e4
:4315] (rev 01)
	Subsystem: Dell Wireless 1397 WLAN Mini-Card [1028:000c]
	Flags: bus master, fast devsel, latency 0, IRQ 7
	Memory at f1ffc000 (64-bit, non-prefetchable) [size=16K]
	Capabilities: [40] Power Management version 3
	Capabilities: [58] Vendor Specific Information: Len=78 <?>
	Capabilities: [e8] MSI: Enable- Count=1/1 Maskable- 64bit+
	Capabilities: [d0] Express Endpoint, MSI 00
	Capabilities: [100] Advanced Error Reporting
	Capabilities: [13c] Virtual Channel
	Capabilities: [160] Device Serial Number 83-42-5f-ff-ff-53-00-22
	Capabilities: [16c] Power Budgeting <?>
	Kernel driver in use: b43-pci-bridge
	Kernel modules: ssb

dmesg:
b43-pci-bridge 0000:0c:00.0: PCI INT A -> Link[LNKB] -> GSI 7 (level,
low) -> IRQ 7
b43-pci-bridge 0000:0c:00.0: setting latency timer to 64
b43-phy0: Broadcom 4312 WLAN found (core revision 15)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43 ssb0:0: firmware: requesting b43/ucode15.fw
b43 ssb0:0: firmware: requesting b43/lp0initvals15.fw
b43 ssb0:0: firmware: requesting b43/lp0bsinitvals15.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0 ERROR: Fatal DMA error: 0x00000400, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000
b43-phy0: Controller RESET (DMA error) ...
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
b43-phy0: Controller restarted
(followed by repeated errors with the same messages)

Thanks


From Larry.Finger at lwfinger.net  Tue Mar 23 20:46:53 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 14:46:53 -0500
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of b43 	driver
In-Reply-To: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
Message-ID: <4BA91AAD.60007@lwfinger.net>

On 03/23/2010 02:30 PM, Chris Lopes wrote:
> Hi,
> 
> I had a perfectly working Dell system running Windows Vista and using
> version 5.60.188.1 of the Broadcom windows driver (distributed by
> Dell) for what Windows calls the "Dell Wireless 1397 WLAN Mini-Card",
> which is actually 14e4:4315.
> 
> I booted Parted Magic 4.9 from a USB flash drive, which uses the
> 2.6.32 linux kernel.
> I started up networking in Parted Magic and asked it to configure the
> wireless driver.
> 
> At first it found my normal SSID and I asked it to try to connect, but
> it failed.  I thought this was just a transient issue specific to
> Parted Magic and/or linux.
> 
> So I booted bank into Vista, only to see that although Vista reports
> everything as being fine with the card, no wireless networks are ever
> detected.  I have verified that the wireless networks that I expect
> indeed exist and are in range (the machine has not moved).
> 
> Is it possible that the b43 driver somehow corrupted the firmware/ROM
> of my card such that it does not function correctly?  Can I fix this?
> There is a DMA error (also shown below in context): b43-phy0 ERROR:
> Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000,
> 0x00000000, 0x00000000

No, b43 did not corrupt your firmware. The firmware is not contained in
non-volatile memory. With a power-down, it goes away. There is an EEPROM
containing some initial values, but changing that requires specific actions
through the sysfs, and does not happen accidentally. The wl and Windows drivers
have the firmware embedded in the driver. For copyright reasons, we cannot do
that, which is why there is external firmware.

Your DMA error is a known problem with 14e4:4315 devices with Netbooks and some
other systems with Intel processors and a Phoenix BIOS. Again, we have no fix.
With a 2.6.33 kernel, the system will seamlessly switch to PIO mode when the
fatal DMA error occurs.

Larry



From clopes at gmail.com  Tue Mar 23 20:53:00 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 02:53:00 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <4BA91AAD.60007@lwfinger.net>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
Message-ID: <11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>

Thanks for the quick reply.  So are you saying that it is impossible
that the b43 driver could have somehow made my wireless card unable to
detect any networks after a reboot (in either Windows or Linux)?

On Wed, Mar 24, 2010 at 2:46 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 03/23/2010 02:30 PM, Chris Lopes wrote:
>> Hi,
>>
>> I had a perfectly working Dell system running Windows Vista and using
>> version 5.60.188.1 of the Broadcom windows driver (distributed by
>> Dell) for what Windows calls the "Dell Wireless 1397 WLAN Mini-Card",
>> which is actually 14e4:4315.
>>
>> I booted Parted Magic 4.9 from a USB flash drive, which uses the
>> 2.6.32 linux kernel.
>> I started up networking in Parted Magic and asked it to configure the
>> wireless driver.
>>
>> At first it found my normal SSID and I asked it to try to connect, but
>> it failed. ?I thought this was just a transient issue specific to
>> Parted Magic and/or linux.
>>
>> So I booted bank into Vista, only to see that although Vista reports
>> everything as being fine with the card, no wireless networks are ever
>> detected. ?I have verified that the wireless networks that I expect
>> indeed exist and are in range (the machine has not moved).
>>
>> Is it possible that the b43 driver somehow corrupted the firmware/ROM
>> of my card such that it does not function correctly? ?Can I fix this?
>> There is a DMA error (also shown below in context): b43-phy0 ERROR:
>> Fatal DMA error: 0x00000400, 0x00000000, 0x00000000, 0x00000000,
>> 0x00000000, 0x00000000
>
> No, b43 did not corrupt your firmware. The firmware is not contained in
> non-volatile memory. With a power-down, it goes away. There is an EEPROM
> containing some initial values, but changing that requires specific actions
> through the sysfs, and does not happen accidentally. The wl and Windows drivers
> have the firmware embedded in the driver. For copyright reasons, we cannot do
> that, which is why there is external firmware.
>
> Your DMA error is a known problem with 14e4:4315 devices with Netbooks and some
> other systems with Intel processors and a Phoenix BIOS. Again, we have no fix.
> With a 2.6.33 kernel, the system will seamlessly switch to PIO mode when the
> fatal DMA error occurs.
>
> Larry
>
>


From Larry.Finger at lwfinger.net  Tue Mar 23 21:24:28 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 15:24:28 -0500
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of 	b43 driver
In-Reply-To: <11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>	
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
Message-ID: <4BA9237C.7060500@lwfinger.net>

On 03/23/2010 02:53 PM, Chris Lopes wrote:
> Thanks for the quick reply.  So are you saying that it is impossible
> that the b43 driver could have somehow made my wireless card unable to
> detect any networks after a reboot (in either Windows or Linux)?

I don't know of any way that b43 could have done that. A power-down including
removal of the battery should completely put the device in the original condition.

Larry


From clopes at gmail.com  Tue Mar 23 21:31:42 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 03:31:42 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <4BA9237C.7060500@lwfinger.net>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
	<4BA9237C.7060500@lwfinger.net>
Message-ID: <11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>

Ok.  I got my wireless card to detect networks again.  I also had a
theory and tried to reproduce the problem, and was successful in doing
so.  Here are my steps to reproduce:
1) Have Vista running and connected to a wireless network
2) Hibernate Vista
3) Boot Parted Magic from a USB drive
4) Start the network in Parted Magic, ask it to use wireless, and then
attempt to connect to my normal SSID, which at this point sees the
SSID, but cannot connect due to an apparent DHCP lease error
5) Start the network in Parted Magic again, which this time fails with
a generic error and does not show any SSID's (starting it a second
time is necessary to reproduce the problem)
6) Reboot
7) Resume Vista
8) At this point, Vista loses connectivity to the wireless network
9) Reboot Vista
10) Vista still cannot see any wireless networks
11) Shutdown
12) Remove power cord and battery and wait a bit
13) Boot Vista, and it now works and sees the network

As you just eluded to, it seems that the power-down and battery
removal is necessary
What do you think is the culprit here?

This laptop is a Dell Latitude E6400

On Wed, Mar 24, 2010 at 3:24 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
> On 03/23/2010 02:53 PM, Chris Lopes wrote:
>> Thanks for the quick reply. ?So are you saying that it is impossible
>> that the b43 driver could have somehow made my wireless card unable to
>> detect any networks after a reboot (in either Windows or Linux)?
>
> I don't know of any way that b43 could have done that. A power-down including
> removal of the battery should completely put the device in the original condition.
>
> Larry
>


From Larry.Finger at lwfinger.net  Tue Mar 23 22:07:35 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 23 Mar 2010 16:07:35 -0500
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of 	b43 driver
In-Reply-To: <11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>	
	<4BA91AAD.60007@lwfinger.net>	
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>	
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
Message-ID: <4BA92D97.20600@lwfinger.net>

On 03/23/2010 03:31 PM, Chris Lopes wrote:
> Ok.  I got my wireless card to detect networks again.  I also had a
> theory and tried to reproduce the problem, and was successful in doing
> so.  Here are my steps to reproduce:
> 1) Have Vista running and connected to a wireless network
> 2) Hibernate Vista
> 3) Boot Parted Magic from a USB drive
> 4) Start the network in Parted Magic, ask it to use wireless, and then
> attempt to connect to my normal SSID, which at this point sees the
> SSID, but cannot connect due to an apparent DHCP lease error
> 5) Start the network in Parted Magic again, which this time fails with
> a generic error and does not show any SSID's (starting it a second
> time is necessary to reproduce the problem)
> 6) Reboot
> 7) Resume Vista
> 8) At this point, Vista loses connectivity to the wireless network
> 9) Reboot Vista
> 10) Vista still cannot see any wireless networks
> 11) Shutdown
> 12) Remove power cord and battery and wait a bit
> 13) Boot Vista, and it now works and sees the network
> 
> As you just eluded to, it seems that the power-down and battery
> removal is necessary
> What do you think is the culprit here?

You should never hibernate one OS and run a different one. That is a
prescription for disaster. Although there is nothing in the BCM4312 that can be
changed, Vista could set a given state in the BIOS that is destroyed by booting
Linux. Fortunately, this info seems to be in volatile memory, thus the power off
and battery removal fixes it.

You might look at the BIOS settings to see if there is a "Wake On LAN" option
for the wireless. It should be off.

Larry


From clopes at gmail.com  Tue Mar 23 22:12:52 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 04:12:52 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <4BA92D97.20600@lwfinger.net>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
	<4BA92D97.20600@lwfinger.net>
Message-ID: <11801e291003231412w508ebe4ap1455f06474e03eff@mail.gmail.com>

What does (or might) "Wake On LAN" have to do with this problem, exactly?

2010/3/24 Larry Finger <Larry.Finger at lwfinger.net>:
> On 03/23/2010 03:31 PM, Chris Lopes wrote:
>> Ok. ?I got my wireless card to detect networks again. ?I also had a
>> theory and tried to reproduce the problem, and was successful in doing
>> so. ?Here are my steps to reproduce:
>> 1) Have Vista running and connected to a wireless network
>> 2) Hibernate Vista
>> 3) Boot Parted Magic from a USB drive
>> 4) Start the network in Parted Magic, ask it to use wireless, and then
>> attempt to connect to my normal SSID, which at this point sees the
>> SSID, but cannot connect due to an apparent DHCP lease error
>> 5) Start the network in Parted Magic again, which this time fails with
>> a generic error and does not show any SSID's (starting it a second
>> time is necessary to reproduce the problem)
>> 6) Reboot
>> 7) Resume Vista
>> 8) At this point, Vista loses connectivity to the wireless network
>> 9) Reboot Vista
>> 10) Vista still cannot see any wireless networks
>> 11) Shutdown
>> 12) Remove power cord and battery and wait a bit
>> 13) Boot Vista, and it now works and sees the network
>>
>> As you just eluded to, it seems that the power-down and battery
>> removal is necessary
>> What do you think is the culprit here?
>
> You should never hibernate one OS and run a different one. That is a
> prescription for disaster. Although there is nothing in the BCM4312 that can be
> changed, Vista could set a given state in the BIOS that is destroyed by booting
> Linux. Fortunately, this info seems to be in volatile memory, thus the power off
> and battery removal fixes it.
>
> You might look at the BIOS settings to see if there is a "Wake On LAN" option
> for the wireless. It should be off.
>
> Larry
>


From clopes at gmail.com  Tue Mar 23 22:16:17 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 04:16:17 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <30613451.1269378464687.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
References: <30613451.1269378464687.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
Message-ID: <11801e291003231416x2151fde5k76664dc52be18fe7@mail.gmail.com>

The wireless access point (AP), also sometimes called a router, is not
relevant to my problem.  It was not the cause and it did not need to
be rebooted.
My problem was not one of connectivity, per se.  My wireless card was
unable to see any SSID's (networks), including ones that are always
present but to which I have never connected.  Upon taking the steps I
described, this situation was remedied.


2010/3/24 ikorot <ikorot at earthlink.net>:
> Hi, Chris,
>
>
> -----Original Message-----
>>From: Chris Lopes <clopes at gmail.com>
>>Sent: Mar 23, 2010 4:31 PM
>>To: Larry Finger <Larry.Finger at lwfinger.net>
>>Cc: bcm43xx-dev at lists.berlios.de
>>Subject: Re: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of ?b43 driver
>>
>>Ok. ?I got my wireless card to detect networks again. ?I also had a
>>theory and tried to reproduce the problem, and was successful in doing
>>so. ?Here are my steps to reproduce:
>>1) Have Vista running and connected to a wireless network
>>2) Hibernate Vista
>>3) Boot Parted Magic from a USB drive
>>4) Start the network in Parted Magic, ask it to use wireless, and then
>>attempt to connect to my normal SSID, which at this point sees the
>>SSID, but cannot connect due to an apparent DHCP lease error
>>5) Start the network in Parted Magic again, which this time fails with
>>a generic error and does not show any SSID's (starting it a second
>>time is necessary to reproduce the problem)
>>6) Reboot
>>7) Resume Vista
>>8) At this point, Vista loses connectivity to the wireless network
>>9) Reboot Vista
>>10) Vista still cannot see any wireless networks
>>11) Shutdown
>>12) Remove power cord and battery and wait a bit
>>13) Boot Vista, and it now works and sees the network
>>
>>As you just eluded to, it seems that the power-down and battery
>>removal is necessary
>>What do you think is the culprit here?
>
> Unfortunately, that's how it works. I had the same problem myself.
> WHen you either hibernate or shutdown Windows you need to reset the
> power on you AP in order to successfully connect in Linux.
> The same goes to Linux -> Windows scheme.
>
> My guess is that this is how the AP/DHCP/router or whatever protocol
> is used in the router works. It connects the MAC address of the hardware
> to the leased IP address, and until you reboot the router this connection
> stays.
>
> Unfortunately this is far beyond the control of any wireless driver in
> WiFi network card... ;-)
>
> Thank you.
>
> P.S.: Please someone correct me if I'm wrong.
>
>>
>>This laptop is a Dell Latitude E6400
>>
>>On Wed, Mar 24, 2010 at 3:24 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
>>> On 03/23/2010 02:53 PM, Chris Lopes wrote:
>>>> Thanks for the quick reply. ?So are you saying that it is impossible
>>>> that the b43 driver could have somehow made my wireless card unable to
>>>> detect any networks after a reboot (in either Windows or Linux)?
>>>
>>> I don't know of any way that b43 could have done that. A power-down including
>>> removal of the battery should completely put the device in the original condition.
>>>
>>> Larry
>>>
>>_______________________________________________
>>Bcm43xx-dev mailing list
>>Bcm43xx-dev at lists.berlios.de
>>https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>


From ikorot at earthlink.net  Tue Mar 23 22:07:44 2010
From: ikorot at earthlink.net (ikorot at earthlink.net)
Date: Tue, 23 Mar 2010 17:07:44 -0400 (EDT)
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of 	b43 driver
Message-ID: <30613451.1269378464687.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>

Hi, Chris,


-----Original Message-----
>From: Chris Lopes <clopes at gmail.com>
>Sent: Mar 23, 2010 4:31 PM
>To: Larry Finger <Larry.Finger at lwfinger.net>
>Cc: bcm43xx-dev at lists.berlios.de
>Subject: Re: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 	b43 driver
>
>Ok.  I got my wireless card to detect networks again.  I also had a
>theory and tried to reproduce the problem, and was successful in doing
>so.  Here are my steps to reproduce:
>1) Have Vista running and connected to a wireless network
>2) Hibernate Vista
>3) Boot Parted Magic from a USB drive
>4) Start the network in Parted Magic, ask it to use wireless, and then
>attempt to connect to my normal SSID, which at this point sees the
>SSID, but cannot connect due to an apparent DHCP lease error
>5) Start the network in Parted Magic again, which this time fails with
>a generic error and does not show any SSID's (starting it a second
>time is necessary to reproduce the problem)
>6) Reboot
>7) Resume Vista
>8) At this point, Vista loses connectivity to the wireless network
>9) Reboot Vista
>10) Vista still cannot see any wireless networks
>11) Shutdown
>12) Remove power cord and battery and wait a bit
>13) Boot Vista, and it now works and sees the network
>
>As you just eluded to, it seems that the power-down and battery
>removal is necessary
>What do you think is the culprit here?

Unfortunately, that's how it works. I had the same problem myself.
WHen you either hibernate or shutdown Windows you need to reset the
power on you AP in order to successfully connect in Linux.
The same goes to Linux -> Windows scheme.

My guess is that this is how the AP/DHCP/router or whatever protocol
is used in the router works. It connects the MAC address of the hardware
to the leased IP address, and until you reboot the router this connection
stays.

Unfortunately this is far beyond the control of any wireless driver in
WiFi network card... ;-)

Thank you.

P.S.: Please someone correct me if I'm wrong.

>
>This laptop is a Dell Latitude E6400
>
>On Wed, Mar 24, 2010 at 3:24 AM, Larry Finger <Larry.Finger at lwfinger.net> wrote:
>> On 03/23/2010 02:53 PM, Chris Lopes wrote:
>>> Thanks for the quick reply. ?So are you saying that it is impossible
>>> that the b43 driver could have somehow made my wireless card unable to
>>> detect any networks after a reboot (in either Windows or Linux)?
>>
>> I don't know of any way that b43 could have done that. A power-down including
>> removal of the battery should completely put the device in the original condition.
>>
>> Larry
>>
>_______________________________________________
>Bcm43xx-dev mailing list
>Bcm43xx-dev at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From mb at bu3sch.de  Tue Mar 23 23:02:45 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 23 Mar 2010 23:02:45 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <1269377903.21181.8.camel@nayuki>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<4BA8CF6C.2050701@lwfinger.net> <1269377903.21181.8.camel@nayuki>
Message-ID: <201003232302.45875.mb@bu3sch.de>

On Tuesday 23 March 2010 21:58:22 Calvin Walton wrote:
> On Tue, 2010-03-23 at 09:25 -0500, Larry Finger wrote:
> > Will someone please write me udev rule(s) that do the following:
> > 
> > 1. Detect a MAC address of FF:FF:FF:FF:FF:FF
> > 2. If this is the first time for this bus address, then generate a random MAC
> > address with the bus address encoded in it.
> > 3. Preserve the address for future reloads
> > 4. Load the saved address into the device.
> > 5. Do the above with only standard external commands - no new programs
> > 
> > My skills with udev are not up to the task.
> 
> I will warn you that the following is rather untested, as I don't have
> any of the affected hardware (or any b43 devices at all, actually), but
> something along these lines should work. There's no syntax errors, at
> least :)
> 
> --- /lib/udev/rules.d/65-persistent-b43-mac-generator.rules
> 
> ACTION!="add" GOTO="persistent_b43_mac_generator_end"
> 
> SUBSYSTEM=="net", DRIVERS=="b43", ATTR{address}=="ff:ff:ff:ff:ff:ff", IMPORT{program}="write_persistent_b43_mac"
> 
> SUBSYSTEM=="net", ENV{MACADDRESS_NEW}=="?*", RUN+="ifconfig $env{INTERFACE} hw ether $env{MACADDRESS_NEW}"
> 
> LABEL="persistent_b43_mac_generator_end"
> 
> --- /lib/udev/write_persistent_b43_mac (chmod +x)
> 
> #!/bin/bash
> 
> # This mac address generation function could be replaced with something better
> MACADDRESS=$(dd if=/dev/urandom bs=1 count=6 2>/dev/null | od -tx1 | head -1 | cut -d' ' -f2- | awk '{ print $1":"$2":"$3":"$4":"$5":"$6 }')
> 
> RULES_FILE='/etc/udev/rules.d/60-persistent-b43-mac.rules'
> 
> . /lib64/udev/rule_generator.functions
> 
> lock_rules_file
> 
> choose_rules_file
> 
> echo "DEVPATH==\"$DEVPATH\", DRIVERS==\"b43\", ATTR{address}==\"ff:ff:ff:ff:ff:ff\", RUN+=\"ifconfig $INTERFACE hw ether $MACADDRESS\"" >> $RULES_FILE
> 
> echo "MACADDRESS_NEW=$MACADDRESS"
> 
> unlock_rules_file
> 
> ---
> 
> A new file "/etc/udev/rules.d/60-persistent-b43-mac.rules" will be
> created, which will contain the the saved mac address and bypass the
> generating script on future boots.
> 
> This should probably be run by the udev maintainers, but is a start,
> anyways.
> 
> 

Thanks a lot for this proof of concept. This looks very nice.

-- 
Greetings, Michael.


From chris at cvine.freeserve.co.uk  Tue Mar 23 23:03:45 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 23 Mar 2010 22:03:45 +0000
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of  b43 driver
In-Reply-To: <11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
Message-ID: <20100323220345.6d59c37d@boulder.homenet>

On Wed, 24 Mar 2010 03:31:42 +0700
Chris Lopes <clopes at gmail.com> wrote:
> Ok.  I got my wireless card to detect networks again.  I also had a
> theory and tried to reproduce the problem, and was successful in doing
> so.  Here are my steps to reproduce:
> 1) Have Vista running and connected to a wireless network
> 2) Hibernate Vista
> 3) Boot Parted Magic from a USB drive
> 4) Start the network in Parted Magic, ask it to use wireless, and then
> attempt to connect to my normal SSID, which at this point sees the
> SSID, but cannot connect due to an apparent DHCP lease error
> 5) Start the network in Parted Magic again, which this time fails with
> a generic error and does not show any SSID's (starting it a second
> time is necessary to reproduce the problem)
> 6) Reboot
> 7) Resume Vista
> 8) At this point, Vista loses connectivity to the wireless network
> 9) Reboot Vista
> 10) Vista still cannot see any wireless networks
> 11) Shutdown
> 12) Remove power cord and battery and wait a bit
> 13) Boot Vista, and it now works and sees the network
> 
> As you just eluded to, it seems that the power-down and battery
> removal is necessary
> What do you think is the culprit here?
 
I have never had to do anything with my netbook to recover the
wireless with the 2.6.32 kernel other than to shutdown the netbook down
and then switch the netbook on again.  It has never been necessary to
disconnect the battery.  A warm reboot however has never been
sufficient to recover the wireless.

I am not saying that your laptop might not be different, but if you do a
proper shutdown which actually switches the laptop off followed by a
switch on (cold boot), rather than a restart (warm boot), then if it
follows my experience then it should be OK.

Chris




From mb at bu3sch.de  Tue Mar 23 23:09:26 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 23 Mar 2010 23:09:26 +0100
Subject: [PATCH V3] ssb: Implement virtual SPROM
In-Reply-To: <4ba912f2./S7YyAUZdz6Kx4tH%Larry.Finger@lwfinger.net>
References: <4ba912f2./S7YyAUZdz6Kx4tH%Larry.Finger@lwfinger.net>
Message-ID: <201003232309.26527.mb@bu3sch.de>

On Tuesday 23 March 2010 20:13:54 Larry Finger wrote:
> Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
> from the SPROM could be included in the kernel; however, this presents
> a problem in the generation of a unique, reproducible MAC address. The
> solution is to use a file in /lib/firmware/ssb, which has some "random"
> information generated by /bin/dbus-uuidgen. This file is loaded using the
> asynchronous firmware facility and a MAC address is generated from those
> data. To prevent multiple devices in a single box from having the same
> MAC address, the last two digits are replaced by the bus numbers of the
> device.
> 
> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> ---
> 
> John,
> 
> Unless someone comes up with a unique way to generate a MAC address using
> only udev rules, I think this is ready.

Please take a look at Calvin Walton's RFC.
It would avoid the need for abusing the firmware loading mechanism.

> +	/* Input MAC address data in ASCII - get low nibble in binary */
> +	for (i = 0 ; i < 8; i++) {
> +		u8 tmp = ascii_to_bin(fw->data[2 * i]);
> +		u8 tmp1 = ascii_to_bin(fw->data[2 * i + 1]);
> +		buf2[i] = tmp << 4 | tmp1;
> +	}

You would basically initialize the mac address to FFFFFFFFFFFF here and
udev would take care of the rest.

>  static int ssb_pci_sprom_get(struct ssb_bus *bus,
>  			     struct ssb_sprom *sprom)
>  {
> @@ -620,8 +735,18 @@ static int ssb_pci_sprom_get(struct ssb_
>  	int err = -ENOMEM;
>  	u16 *buf;
>  
> -	if (!ssb_is_sprom_available(bus))
> -		return -ENODEV;
> +	if (!ssb_is_sprom_available(bus)) {
> +		/* This device has no SPROM. Try for a random MAC address */
> +		err = request_firmware_nowait(THIS_MODULE,
> +			FW_ACTION_HOTPLUG, "ssb/mac_addr",
> +			&bus->host_pci->dev, GFP_KERNEL, bus,
> +			ssb_get_vsprom);

Well, I'm not sure how this is supposed to work. What happens if a part of ssb
or b43 uses the SPROM data structure, but ssb_get_vsprom() didn't run, yet?

So: Get rid of the firmware fetching stuff completely and do it via udev.
It reduces the headache by a few magnitudes of headachenesses.

> +		if (err) {
> +			ssb_vsprom_load_failed();
> +			return err;
> +		}
> +		return 0;
> +	}
>  
>  	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
>  	if (!buf)
-- 
Greetings, Michael.


From clopes at gmail.com  Tue Mar 23 23:23:39 2010
From: clopes at gmail.com (Chris Lopes)
Date: Wed, 24 Mar 2010 05:23:39 +0700
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <20100323220345.6d59c37d@boulder.homenet>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
	<20100323220345.6d59c37d@boulder.homenet>
Message-ID: <11801e291003231523u5b785582h1b71e5fe32ec6e8f@mail.gmail.com>

I didn't try a "cold reboot" that did not involve the removal of
battery and power supply, so maybe it would work.

Honestly I am still perplexed (given modern hardware and software), as
to why/how:
1) Hibernate and un-hibernate, regardless of what happens in between
with the wireless card, could somehow result in it stopping working
2) Rebooting (warm), regardless of how the wireless card is messed up
in my situation does not fix the problem
3) Cold rebooting and warm rebooting are different in any way whatsoever

(all of the above involve zero changes on the hard disk during the
time when the OS is not running)

Is this behavior some sort of "feature" with unintuitive results, or
is it a bug?  And what is the buggy component, exactly?
It seems like something that would happen with early 1990's technology.

Also, are you saying that there is some sort of known problem that
results in you having to "recover the wireless" via a cold-reboot?
What is this problem and is it similar to my situation?

On Wed, Mar 24, 2010 at 5:03 AM, Chris Vine <chris at cvine.freeserve.co.uk> wrote:
> On Wed, 24 Mar 2010 03:31:42 +0700
> Chris Lopes <clopes at gmail.com> wrote:
>> Ok. ?I got my wireless card to detect networks again. ?I also had a
>> theory and tried to reproduce the problem, and was successful in doing
>> so. ?Here are my steps to reproduce:
>> 1) Have Vista running and connected to a wireless network
>> 2) Hibernate Vista
>> 3) Boot Parted Magic from a USB drive
>> 4) Start the network in Parted Magic, ask it to use wireless, and then
>> attempt to connect to my normal SSID, which at this point sees the
>> SSID, but cannot connect due to an apparent DHCP lease error
>> 5) Start the network in Parted Magic again, which this time fails with
>> a generic error and does not show any SSID's (starting it a second
>> time is necessary to reproduce the problem)
>> 6) Reboot
>> 7) Resume Vista
>> 8) At this point, Vista loses connectivity to the wireless network
>> 9) Reboot Vista
>> 10) Vista still cannot see any wireless networks
>> 11) Shutdown
>> 12) Remove power cord and battery and wait a bit
>> 13) Boot Vista, and it now works and sees the network
>>
>> As you just eluded to, it seems that the power-down and battery
>> removal is necessary
>> What do you think is the culprit here?
>
> I have never had to do anything with my netbook to recover the
> wireless with the 2.6.32 kernel other than to shutdown the netbook down
> and then switch the netbook on again. ?It has never been necessary to
> disconnect the battery. ?A warm reboot however has never been
> sufficient to recover the wireless.
>
> I am not saying that your laptop might not be different, but if you do a
> proper shutdown which actually switches the laptop off followed by a
> switch on (cold boot), rather than a restart (warm boot), then if it
> follows my experience then it should be OK.
>
> Chris
>
>
>


From netrolller.3d at gmail.com  Tue Mar 23 23:37:45 2010
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 23 Mar 2010 23:37:45 +0100
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use of 
	b43 driver
In-Reply-To: <11801e291003231523u5b785582h1b71e5fe32ec6e8f@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com> 
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com> 
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com> 
	<20100323220345.6d59c37d@boulder.homenet>
	<11801e291003231523u5b785582h1b71e5fe32ec6e8f@mail.gmail.com>
Message-ID: <69e28c911003231537k7b156112pe7db67ea41f13133@mail.gmail.com>

On Tue, Mar 23, 2010 at 11:23 PM, Chris Lopes <clopes at gmail.com> wrote:
> I didn't try a "cold reboot" that did not involve the removal of
> battery and power supply, so maybe it would work.
>
> Honestly I am still perplexed (given modern hardware and software), as
> to why/how:
> 1) Hibernate and un-hibernate, regardless of what happens in between
> with the wireless card, could somehow result in it stopping working
> 2) Rebooting (warm), regardless of how the wireless card is messed up
> in my situation does not fix the problem
> 3) Cold rebooting and warm rebooting are different in any way whatsoever
>
> (all of the above involve zero changes on the hard disk during the
> time when the OS is not running)
>
> Is this behavior some sort of "feature" with unintuitive results, or
> is it a bug? ?And what is the buggy component, exactly?
> It seems like something that would happen with early 1990's technology.
>
> Also, are you saying that there is some sort of known problem that
> results in you having to "recover the wireless" via a cold-reboot?
> What is this problem and is it similar to my situation?

Well, the following sequence can easily happen:
1. You boot Vista. The Broadcom official driver initializes the card
(writing a complete register setup) with the embedded firmware.
2. You hibernate Vista. The card is un-initialized and prepared for
restore upon return from hibernation. Some registers are left in the
state they were originally, to aid in quicker restore.
3. You boot Linux. b43 finds the Broadcom card, and, seeing that it is
un-initialized, quickly initializes it (again, overwriting all
registers, including the ones left intact by hibernation) with your
installed firmware. Due to a known bug, the driver misses some part of
the initialization routine; we are working on fixing this,.
4. With the card only partially initialized, DMA TX is broken. (On
2.6.33, b43 works around this by falling back to PIO.)
5. You leave Linux. b43 either doesn't uninitialize the card at all,
or does a full uninit, in preparation for a shutdown (as opposed to
hibernate)
6. You restore Vista. The Broadcom driver expects the card to be in
the state it left it during hibernation; but it is really either in
the (broken) init state produced by Linux, or completely
uninitialized. The driver does a resume routine, assuming the card is
prepared for it. The result of this operation is completely undefined;
as my college programming professor once said: "even if it becomes
self-aware and nukes the world, it is still operating correctly".
7. You scan for wireless networks. The card is in an undefined state,
so this obviously doesn't work!

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From chris at cvine.freeserve.co.uk  Wed Mar 24 00:20:06 2010
From: chris at cvine.freeserve.co.uk (Chris Vine)
Date: Tue, 23 Mar 2010 23:20:06 +0000
Subject: 14e4:4315 (Dell Wireless 1397) cannot find networks after use
	of  b43 driver
In-Reply-To: <69e28c911003231537k7b156112pe7db67ea41f13133@mail.gmail.com>
References: <11801e291003231230v2da3e02fo1ddcab7c0a78e107@mail.gmail.com>
	<4BA91AAD.60007@lwfinger.net>
	<11801e291003231253v1d48174ex6053a910ad4602a2@mail.gmail.com>
	<4BA9237C.7060500@lwfinger.net>
	<11801e291003231331h5079c5a5ra3426691561c6475@mail.gmail.com>
	<20100323220345.6d59c37d@boulder.homenet>
	<11801e291003231523u5b785582h1b71e5fe32ec6e8f@mail.gmail.com>
	<69e28c911003231537k7b156112pe7db67ea41f13133@mail.gmail.com>
Message-ID: <20100323232006.6a5c5e0a@boulder.homenet>

On Tue, 23 Mar 2010 23:37:45 +0100
G?bor Stefanik <netrolller.3d at gmail.com> wrote:
>(On 2.6.33, b43 works around this by falling back to PIO.)

I think it requires 2.6.34 for this (currently 2.6.34-rc2).

Chris




From celejar at gmail.com  Wed Mar 24 01:30:55 2010
From: celejar at gmail.com (Celejar)
Date: Tue, 23 Mar 2010 20:30:55 -0400
Subject: Failure with monitor mode
In-Reply-To: <20100322205414.55e06b00.celejar@gmail.com>
References: <20100322205414.55e06b00.celejar@gmail.com>
Message-ID: <20100323203055.574b4fb2.celejar@gmail.com>

On Mon, 22 Mar 2010 20:54:14 -0400
Celejar <celejar at gmail.com> wrote:

> Hi,
> 
> I have been using my 4318 successfully with b43 (thanks, Michael and
> all devs / reverse engineers!) for many kernel revisions now, both as a
> client, as well as in monitor mode (kismet, airodump).  With
> 2.6.34-rc1, I can't get monitor mode to work successfully - I get
> errors like this:
> 
> setsockopt(PACKET_MR_PROMISC) failed: Invalid argument

[Replying to my own mail.]

I rebuilt my kernel (using -rc2 sources), and while configuring, I
noticed that LIB80211 wasn't being built.  I enabled it, and monitor
mode now works.  Question: is this 'library of common routines used by
IEEEU802.11 wireless LAN drivers' indeed necessary for monitor mode to
function properly?  If so, shouldn't b43 select it by default, as per
the documentation that 'Drivers should select this themselves if
needed'?

Celejar
-- 
foffl.sourceforge.net - Feeds OFFLine, an offline RSS/Atom aggregator
mailmin.sourceforge.net - remote access via secure (OpenPGP) email
ssuds.sourceforge.net - A Simple Sudoku Solver and Generator



From gavron at wetwork.net  Wed Mar 24 02:25:02 2010
From: gavron at wetwork.net (Ehud Gavron)
Date: Tue, 23 Mar 2010 18:25:02 -0700
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003222325.35994.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269239303.12836.17.camel@ayu> <4BA7E79C.9070100@lwfinger.net>
	<201003222325.35994.mb@bu3sch.de>
Message-ID: <4BA969EE.8000809@wetwork.net>



Michael Buesch wrote:
> On Monday 22 March 2010 22:56:44 Larry Finger wrote:
>   
>> Does anyone have any suggestions on what characteristic could be used to
>> generate a unique MAC address for a box in a udev rule?
>>     
>
> /dev/urandom
>
> Yeah, there's the chance of clashes. In practice there won't be any clashes,
> however. If you think there's a real risk, you should start playing
> the lottery tomorrow. You'll immediately win a million dollars so you don't have
> to worry about those questions anymore. ;)
>
> In fact, I think the risk for mac clashes is not really reduced by generating the mac
> address from serial numbers, whatever, etc...
>
>   
DEC used the L3 address to encode a new MAC at the time the [L3] address was
set (DECnet v4).  The advantage was they didn't need to use the equivalent
of ARP.  Of course this is a violation of strict layer separation.

Octet1-Octet3 - Broadcom assigned MAC IDs.  I found the following:
00-05-B5
00-10-18
00-1B-E9
18-C0-86

Octet4-octet6 - Lowest three octets of the unixtime.


Advantages: for the local area network all TZ settings should be the same,
so the MAC addresses *will* be different.  Beyond the first router that 
won't
matter.  Also for the same machine different interfaces are GUARANTEED
to have different MAC addresses.

For two machines to have the same MAC they would have to be booted at
(same time x processing factor) such that the B43 initialization will 
result
in the same MAC address.  I'd like to think those odds are even lower than
your lottery.

A million dollars?  
http://www.active-domain.com/resources/million-dollar-domains.htm
Yeah got the t-shirt.


E

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5507 bytes
Desc: S/MIME Cryptographic Signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20100323/2c055473/attachment.bin>

From Larry.Finger at lwfinger.net  Wed Mar 24 15:16:03 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 24 Mar 2010 09:16:03 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <1269377903.21181.8.camel@nayuki>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>	
	<201003222325.35994.mb@bu3sch.de> <4BA80118.1070801@lwfinger.net>	
	<201003230952.56207.mb@bu3sch.de> <4BA8CF6C.2050701@lwfinger.net>
	<1269377903.21181.8.camel@nayuki>
Message-ID: <4BAA1EA3.9060803@lwfinger.net>

On 03/23/2010 03:58 PM, Calvin Walton wrote:
> 
> I will warn you that the following is rather untested, as I don't have
> any of the affected hardware (or any b43 devices at all, actually), but
> something along these lines should work. There's no syntax errors, at
> least :)
> 
> --- /lib/udev/rules.d/65-persistent-b43-mac-generator.rules
> 
> ACTION!="add" GOTO="persistent_b43_mac_generator_end"
> 
> SUBSYSTEM=="net", DRIVERS=="b43", ATTR{address}=="ff:ff:ff:ff:ff:ff", IMPORT{program}="write_persistent_b43_mac"
> 
> SUBSYSTEM=="net", ENV{MACADDRESS_NEW}=="?*", RUN+="ifconfig $env{INTERFACE} hw ether $env{MACADDRESS_NEW}"
> 
> LABEL="persistent_b43_mac_generator_end"
> 
> --- /lib/udev/write_persistent_b43_mac (chmod +x)
> 
> #!/bin/bash
> 
> # This mac address generation function could be replaced with something better
> MACADDRESS=$(dd if=/dev/urandom bs=1 count=6 2>/dev/null | od -tx1 | head -1 | cut -d' ' -f2- | awk '{ print $1":"$2":"$3":"$4":"$5":"$6 }')
> 
> RULES_FILE='/etc/udev/rules.d/60-persistent-b43-mac.rules'
> 
> . /lib64/udev/rule_generator.functions
> 
> lock_rules_file
> 
> choose_rules_file
> 
> echo "DEVPATH==\"$DEVPATH\", DRIVERS==\"b43\", ATTR{address}==\"ff:ff:ff:ff:ff:ff\", RUN+=\"ifconfig $INTERFACE hw ether $MACADDRESS\"" >> $RULES_FILE
> 
> echo "MACADDRESS_NEW=$MACADDRESS"
> 
> unlock_rules_file
> 
> ---
> 
> A new file "/etc/udev/rules.d/60-persistent-b43-mac.rules" will be
> created, which will contain the the saved mac address and bypass the
> generating script on future boots.
> 
> This should probably be run by the udev maintainers, but is a start,
> anyways.

Thanks for the really good start.

The above routines have a minor problem in that using a random value for the
first byte of the MAC address runs the risk of having the multicast bit set. By
fixing the first one to a multiple of 4, that problem is avoided.

A second minor problem is that the full path must be given for all standard
utilities, otherwise they are assumed to be in /lib/udev. Thus all references to
"ifconfig" were replaced by "/sbin/ifconfig". I hope all distros put ifconfig in
/sbin.

I have modified ssb to supply a MAC address of 80:80:80:80:80:80, rather than
FF:FF:FF:FF:FF:FF. This way the interface can come up even though the new udev
routines are not available. When b43 detects that address, it will log a message
describing why the udev routines are needed, and how to obtain them.

The one remaining problem is that the interface has already been renamed before
60-persistent-b43-mac.rules is processed. In my case, the interface is wlan13,
not wlan0. After I manually modified 60-..., then the new address is applied.
I'm still working on this problem.

Thanks again for the help.

Larry


From mb at bu3sch.de  Wed Mar 24 20:21:39 2010
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 24 Mar 2010 20:21:39 +0100
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <4BAA1EA3.9060803@lwfinger.net>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269377903.21181.8.camel@nayuki> <4BAA1EA3.9060803@lwfinger.net>
Message-ID: <201003242021.39502.mb@bu3sch.de>

On Wednesday 24 March 2010 15:16:03 Larry Finger wrote:
> I have modified ssb to supply a MAC address of 80:80:80:80:80:80, rather than

What about also setting the local-assignment bit for this temporary address?

> The one remaining problem is that the interface has already been renamed before
> 60-persistent-b43-mac.rules is processed. In my case, the interface is wlan13,
> not wlan0. After I manually modified 60-..., then the new address is applied.
> I'm still working on this problem.

Well, udev scripts are processed in alphabetical order. Can't you simply run
the persistent mac rules before the persistent ifname rules?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Mar 26 04:47:02 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 25 Mar 2010 22:47:02 -0500
Subject: [PATCH V2] ssb: Implement virtual SPROM on disk
In-Reply-To: <201003242021.39502.mb@bu3sch.de>
References: <4ba6aa45.z5Wso1NMth9eMeFG%Larry.Finger@lwfinger.net>
	<1269377903.21181.8.camel@nayuki> <4BAA1EA3.9060803@lwfinger.net>
	<201003242021.39502.mb@bu3sch.de>
Message-ID: <4BAC2E36.8000900@lwfinger.net>

On 03/24/2010 02:21 PM, Michael Buesch wrote:
> On Wednesday 24 March 2010 15:16:03 Larry Finger wrote:
>> I have modified ssb to supply a MAC address of 80:80:80:80:80:80, rather than
> 
> What about also setting the local-assignment bit for this temporary address?
> 
>> The one remaining problem is that the interface has already been renamed before
>> 60-persistent-b43-mac.rules is processed. In my case, the interface is wlan13,
>> not wlan0. After I manually modified 60-..., then the new address is applied.
>> I'm still working on this problem.
> 
> Well, udev scripts are processed in alphabetical order. Can't you simply run
> the persistent mac rules before the persistent ifname rules?

I finally figured out the problem I was having. The address attribute was not
being changed by the "ifconfig" call that changed the hardware address. The fix
is to create a new environment when the hardware address and lock out the rule
generation process when that value is detected. The new code for
/lib/udev/rules.d/65-persistent-b43-mac-generator.rules is as follows (Note:
These files are line-wrapped here.):

#=======================================
#
# Rules file to assign a unique, permanent address to BCM43XX devices without
# an SPROM.
#
# Copyright (c) 2010 by Calvin Walton <calvin.walton at gmail.com>
# Copyright (c) 2010 by Larry Finger <Larry.Finger at lwfinger.net>

# skip this code if action is not add, i.e. change or remove

ACTION!="add", GOTO="persistent_b43_mac_generator_end"

# Use the value of the MAC_CHANGED environment variable to see if the address
# has already been changed.

ENV{MAC_CHANGED}=="yes", GOTO="persistent_b43_mac_generator_end"

# Call script to get a random address - if this device previously encountered,
# the address will already have been changed.

SUBSYSTEM=="net", ATTR{address}=="82:82:82:82:82:82",
IMPORT{program}="write_persistent_b43_mac"

# Apply the new hardware address returned by the script

SUBSYSTEM=="net", ATTR{address}=="82:82:82:82:82:82", RUN+="/sbin/ifconfig
$env{INTERFACE} hw ether $env{MACADDRESS_NEW}"

LABEL="persistent_b43_mac_generator_end"
#=======================================

The code for /lib/udev/write_persistent_b43_mac is as follows:

#=======================================
#!/bin/bash

# Script to Generate a random MAC address for a BCM43XX device without
# an SPROM.
#
# Copyright (c) 2010 by Calvin Walton <calvin.walton at gmail.com>
# Copyright (c) 2010 by Larry Finger <Larry.Finger at lwfinger.net>

# Use /dev/urandom to generate the last 5 bytes of the address.
# Make the first byte 2 to avoid generating a multicast address and to set
#  the locally administered address bit.

MACADDRESS=$(/bin/dd if=/dev/urandom bs=1 count=5 2>/dev/null | /usr/bin/od -tx1
| /usr/bin/head -1 | \
/usr/bin/cut -d' ' -f2- | /usr/bin/awk '{ print "02:"$1":"$2":"$3":"$4":"$5 }')

# Define the output rules file
RULES_FILE='/etc/udev/rules.d/60-persistent-b43-mac.rules'

. /lib/udev/rule_generator.functions

# Prevent concurrent processes from modifying the file at the same time.
lock_rules_file

# Check if the rules file is writeable.
choose_rules_file

# The rule should apply for all wlan devices -s some other wireless driver might
# be loaded first - change wlanNN to wlan*
GEN_PATH=$(echo $DEVPATH | /usr/bin/sed s/wlan[0-9]*/wlan*/)

# Output new rule
echo "SUBSYSTEM==\"net\", DEVPATH==\"$GEN_PATH\",
ATTR{address}==\"82:82:82:82:82:82\", ENV{MAC_CHANGED}=\"yes\",
RUN+=\"/sbin/ifconfig \$env{INTERFACE} hw ether $MACADDRESS\"" >> $RULES_FILE

# Report the new address back to the caller who will set the address for this
new interface
echo "MACADDRESS_NEW=$MACADDRESS"

unlock_rules_file

exit 0
#=======================================

Is there a location to put a tar file containing the script and rules files?

Larry


From Larry.Finger at lwfinger.net  Fri Mar 26 06:39:08 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 26 Mar 2010 00:39:08 -0500
Subject: [PATCH V4] ssb: Implement virtual SPROM
Message-ID: <4bac487c.j3EXBzCzHYNAd+Ky%Larry.Finger@lwfinger.net>

Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
from the SPROM could be included in the kernel; however, this presents
a problem in the generation of a unique, reproducible MAC address. The
solution is to initialize the address to a known, workable value. Thus,
the device will work without any further code. For an address that is
preserved across reloads or reboots, a set of udev routines has been
prepared that detect the special address and assign a random value that
is preserved in a second udev rule file. The random address should be
unique except for the case where a given box has more than one of these
cards. This case is handles by adding the DEVPATH to the recognition rules.

Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
---

John,

It has been a long path, but this solution satisfies all the criticisms
that have been posted.

I suspect it is a little to invasive for 2.6.34. In addition, it fixes
a bug, but not a regression. As to introducing a regression, that could
only happen if ssb_is_sprom_available() returns false for some device
that does have an SPROM.

Larry
---

V2 - make virtual SPROM loading asynchronous.
V3 - eliminate the need for a special external utility
   - set for unique MAC address even if a box has more than one of these
     devices
V4 - handle the requirements without any "firmware" routines.

Index: wireless-testing/drivers/ssb/pci.c
===================================================================
--- wireless-testing.orig/drivers/ssb/pci.c
+++ wireless-testing/drivers/ssb/pci.c
@@ -613,6 +613,67 @@ static int sprom_extract(struct ssb_bus
 	return 0;
 }
 
+static void ssb_get_vsprom(struct ssb_sprom *sprom)
+{
+	/* Get values that would have been extracted from SPROM.
+	 * If sprom_extract_r8() is changed, this section must be
+	 * changed as well. For any device with 5GHz capability,
+	 * some variables will have to be changed.
+	 */
+	sprom->revision = 8;
+	sprom->boardflags_lo = 0x0A01;
+	sprom->boardflags_hi = 0x0006;
+	sprom->boardflags2_lo = 0x0000;
+	sprom->boardflags2_hi = 0x0000;
+	sprom->ant_available_a = 0x00;
+	sprom->ant_available_bg = 0x03;
+	sprom->maxpwr_bg = 0x4A;
+	sprom->itssi_bg = 0x3E;
+	sprom->maxpwr_a = 0xFF;
+	sprom->itssi_a = 0xFF;
+	sprom->maxpwr_ah = 0xFF;
+	sprom->maxpwr_al = 0xFF;
+	sprom->gpio0 = 0x83;
+	sprom->gpio1 = 0xFF;
+	sprom->gpio2 = 0xFF;
+	sprom->gpio3 = 0xFF;
+	sprom->tri2g = 0x6C;
+	sprom->tri5g = 0x00;
+	sprom->tri5gl = 0xFF;
+	sprom->tri5gh = 0xFF;
+	sprom->rxpo2g = 0xFA;
+	sprom->rxpo5g = 0xFF;
+	sprom->rssismf2g = 0x0F;
+	sprom->rssismc2g = 0x00;
+	sprom->rssisav2g = 0x00;
+	sprom->bxa2g = 0x00;
+	sprom->rssismf5g = 0x0F;
+	sprom->rssismc5g = 0x0F;
+	sprom->rssisav5g = 0x07;
+	sprom->bxa5g = 0x03;
+	sprom->pa0b0 = 0x1a57;
+	sprom->pa0b1 = 0xF98A;
+	sprom->pa0b2 = 0xFE91;
+	sprom->pa1b0 = 0xFFFF;
+	sprom->pa1b1 = 0xFFFF;
+	sprom->pa1b2 = 0xFFFF;
+	sprom->pa1lob0 = 0xFFFF;
+	sprom->pa1lob1 = 0xFFFF;
+	sprom->pa1lob2 = 0xFFFF;
+	sprom->pa1hib0 = 0xFFFF;
+	sprom->pa1hib1 = 0xFFFF;
+	sprom->pa1hib2 = 0xFFFF;
+	sprom->cck2gpo = 0xFFFF;
+	sprom->ofdm2gpo = 0x00000002;
+	sprom->ofdm5glpo = 0xFFFFFFFF;
+	sprom->ofdm5gpo = 0xFFFFFFFF;
+	sprom->ofdm5ghpo = 0xFFFFFFFF;
+	/* assign a dummy, but usable, MAC address */
+	memset(sprom->il0mac, 0x82, 6);
+	memset(sprom->et0mac, 0xFF, 6);
+	memset(sprom->et1mac, 0xFF, 6);
+}
+
 static int ssb_pci_sprom_get(struct ssb_bus *bus,
 			     struct ssb_sprom *sprom)
 {
@@ -621,8 +682,9 @@ static int ssb_pci_sprom_get(struct ssb_
 	u16 *buf;
 
 	if (!ssb_is_sprom_available(bus)) {
-		ssb_printk(KERN_ERR PFX "No SPROM available!\n");
-		return -ENODEV;
+		/* This device has no SPROM. Get values from a real SPROM */
+		ssb_get_vsprom(sprom);
+		return 0;
 	}
 
 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c
+++ wireless-testing/drivers/net/wireless/b43/main.c
@@ -4395,6 +4395,7 @@ static int b43_op_add_interface(struct i
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev;
 	int err = -EOPNOTSUPP;
+	u8 test_addr[] = {0x82, 0x82, 0x82, 0x82, 0x82, 0x82};
 
 	/* TODO: allow WDS/AP devices to coexist */
 
@@ -4417,6 +4418,19 @@ static int b43_op_add_interface(struct i
 	wl->if_type = vif->type;
 	memcpy(wl->mac_addr, vif->addr, ETH_ALEN);
 
+	/* Check if address given when device has no SPROM is still present */
+	if (compare_ether_addr(wl->mac_addr, test_addr) == 0) {
+		printk(KERN_INFO "b43: **************************\n");
+		printk(KERN_INFO "     The hardware address matches the one "
+				       "assigned for devices\n");
+		printk(KERN_INFO "     with no SPROM. To ensure that your address"
+				       " is unique go to\n");
+		printk(KERN_INFO "     http://wireless.kernel.org/en/users/"
+				       "Drivers/b43");
+		printk(KERN_INFO "     to download and install the necessary"
+				       " udev rules.\n");
+		printk(KERN_INFO "     **************************\n");
+	}
 	b43_adjust_opmode(dev);
 	b43_set_pretbtt(dev);
 	b43_set_synth_pu_delay(dev, 0);


From gene.heskett at verizon.net  Fri Mar 26 12:18:04 2010
From: gene.heskett at verizon.net (Gene Heskett)
Date: Fri, 26 Mar 2010 07:18:04 -0400
Subject: [PATCH V4] ssb: Implement virtual SPROM
In-Reply-To: <4bac487c.j3EXBzCzHYNAd+Ky%Larry.Finger@lwfinger.net>
References: <4bac487c.j3EXBzCzHYNAd+Ky%Larry.Finger@lwfinger.net>
Message-ID: <201003260718.04857.gene.heskett@verizon.net>

On Friday 26 March 2010, Larry Finger wrote:
>Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
>from the SPROM could be included in the kernel; however, this presents
>a problem in the generation of a unique, reproducible MAC address. The
>solution is to initialize the address to a known, workable value. Thus,
>the device will work without any further code. For an address that is
>preserved across reloads or reboots, a set of udev routines has been
>prepared that detect the special address and assign a random value that
>is preserved in a second udev rule file. The random address should be
>unique except for the case where a given box has more than one of these
>cards. This case is handles by adding the DEVPATH to the recognition
> rules.
>
>Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>

This I assume does not do anything for the idiot vendor who ships thousands 
of bt dongles all with 11:11:11:11:11:11 set as the mac address?  I got 
stung with 2 of those things.

>---
>
>John,
>
>It has been a long path, but this solution satisfies all the criticisms
>that have been posted.
>
>I suspect it is a little to invasive for 2.6.34. In addition, it fixes
>a bug, but not a regression. As to introducing a regression, that could
>only happen if ssb_is_sprom_available() returns false for some device
>that does have an SPROM.
>
>Larry
>---
>
>V2 - make virtual SPROM loading asynchronous.
>V3 - eliminate the need for a special external utility
>   - set for unique MAC address even if a box has more than one of these
>     devices
>V4 - handle the requirements without any "firmware" routines.
>
>Index: wireless-testing/drivers/ssb/pci.c
>===================================================================
>--- wireless-testing.orig/drivers/ssb/pci.c
>+++ wireless-testing/drivers/ssb/pci.c
>@@ -613,6 +613,67 @@ static int sprom_extract(struct ssb_bus
> 	return 0;
> }
>
>+static void ssb_get_vsprom(struct ssb_sprom *sprom)
>+{
>+	/* Get values that would have been extracted from SPROM.
>+	 * If sprom_extract_r8() is changed, this section must be
>+	 * changed as well. For any device with 5GHz capability,
>+	 * some variables will have to be changed.
>+	 */
>+	sprom->revision = 8;
>+	sprom->boardflags_lo = 0x0A01;
>+	sprom->boardflags_hi = 0x0006;
>+	sprom->boardflags2_lo = 0x0000;
>+	sprom->boardflags2_hi = 0x0000;
>+	sprom->ant_available_a = 0x00;
>+	sprom->ant_available_bg = 0x03;
>+	sprom->maxpwr_bg = 0x4A;
>+	sprom->itssi_bg = 0x3E;
>+	sprom->maxpwr_a = 0xFF;
>+	sprom->itssi_a = 0xFF;
>+	sprom->maxpwr_ah = 0xFF;
>+	sprom->maxpwr_al = 0xFF;
>+	sprom->gpio0 = 0x83;
>+	sprom->gpio1 = 0xFF;
>+	sprom->gpio2 = 0xFF;
>+	sprom->gpio3 = 0xFF;
>+	sprom->tri2g = 0x6C;
>+	sprom->tri5g = 0x00;
>+	sprom->tri5gl = 0xFF;
>+	sprom->tri5gh = 0xFF;
>+	sprom->rxpo2g = 0xFA;
>+	sprom->rxpo5g = 0xFF;
>+	sprom->rssismf2g = 0x0F;
>+	sprom->rssismc2g = 0x00;
>+	sprom->rssisav2g = 0x00;
>+	sprom->bxa2g = 0x00;
>+	sprom->rssismf5g = 0x0F;
>+	sprom->rssismc5g = 0x0F;
>+	sprom->rssisav5g = 0x07;
>+	sprom->bxa5g = 0x03;
>+	sprom->pa0b0 = 0x1a57;
>+	sprom->pa0b1 = 0xF98A;
>+	sprom->pa0b2 = 0xFE91;
>+	sprom->pa1b0 = 0xFFFF;
>+	sprom->pa1b1 = 0xFFFF;
>+	sprom->pa1b2 = 0xFFFF;
>+	sprom->pa1lob0 = 0xFFFF;
>+	sprom->pa1lob1 = 0xFFFF;
>+	sprom->pa1lob2 = 0xFFFF;
>+	sprom->pa1hib0 = 0xFFFF;
>+	sprom->pa1hib1 = 0xFFFF;
>+	sprom->pa1hib2 = 0xFFFF;
>+	sprom->cck2gpo = 0xFFFF;
>+	sprom->ofdm2gpo = 0x00000002;
>+	sprom->ofdm5glpo = 0xFFFFFFFF;
>+	sprom->ofdm5gpo = 0xFFFFFFFF;
>+	sprom->ofdm5ghpo = 0xFFFFFFFF;
>+	/* assign a dummy, but usable, MAC address */
>+	memset(sprom->il0mac, 0x82, 6);
>+	memset(sprom->et0mac, 0xFF, 6);
>+	memset(sprom->et1mac, 0xFF, 6);
>+}
>+
> static int ssb_pci_sprom_get(struct ssb_bus *bus,
> 			     struct ssb_sprom *sprom)
> {
>@@ -621,8 +682,9 @@ static int ssb_pci_sprom_get(struct ssb_
> 	u16 *buf;
>
> 	if (!ssb_is_sprom_available(bus)) {
>-		ssb_printk(KERN_ERR PFX "No SPROM available!\n");
>-		return -ENODEV;
>+		/* This device has no SPROM. Get values from a real SPROM */
>+		ssb_get_vsprom(sprom);
>+		return 0;
> 	}
>
> 	buf = kcalloc(SSB_SPROMSIZE_WORDS_R123, sizeof(u16), GFP_KERNEL);
>Index: wireless-testing/drivers/net/wireless/b43/main.c
>===================================================================
>--- wireless-testing.orig/drivers/net/wireless/b43/main.c
>+++ wireless-testing/drivers/net/wireless/b43/main.c
>@@ -4395,6 +4395,7 @@ static int b43_op_add_interface(struct i
> 	struct b43_wl *wl = hw_to_b43_wl(hw);
> 	struct b43_wldev *dev;
> 	int err = -EOPNOTSUPP;
>+	u8 test_addr[] = {0x82, 0x82, 0x82, 0x82, 0x82, 0x82};
>
> 	/* TODO: allow WDS/AP devices to coexist */
>
>@@ -4417,6 +4418,19 @@ static int b43_op_add_interface(struct i
> 	wl->if_type = vif->type;
> 	memcpy(wl->mac_addr, vif->addr, ETH_ALEN);
>
>+	/* Check if address given when device has no SPROM is still present */
>+	if (compare_ether_addr(wl->mac_addr, test_addr) == 0) {
>+		printk(KERN_INFO "b43: **************************\n");
>+		printk(KERN_INFO "     The hardware address matches the one "
>+				       "assigned for devices\n");
>+		printk(KERN_INFO "     with no SPROM. To ensure that your address"
>+				       " is unique go to\n");
>+		printk(KERN_INFO "     http://wireless.kernel.org/en/users/"
>+				       "Drivers/b43");
>+		printk(KERN_INFO "     to download and install the necessary"
>+				       " udev rules.\n");
>+		printk(KERN_INFO "     **************************\n");
>+	}
> 	b43_adjust_opmode(dev);
> 	b43_set_pretbtt(dev);
> 	b43_set_synth_pu_delay(dev, 0);
>_______________________________________________
>Bcm43xx-dev mailing list
>Bcm43xx-dev at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>


-- 
Cheers, Gene
"There are four boxes to be used in defense of liberty:
 soap, ballot, jury, and ammo. Please use in that order."
-Ed Howdershelt (Author)

If at first you do succeed, try to hide your astonishment.


From Larry.Finger at lwfinger.net  Fri Mar 26 13:31:31 2010
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 26 Mar 2010 07:31:31 -0500
Subject: [PATCH V4] ssb: Implement virtual SPROM
In-Reply-To: <201003260718.04857.gene.heskett@verizon.net>
References: <4bac487c.j3EXBzCzHYNAd+Ky%Larry.Finger@lwfinger.net>
	<201003260718.04857.gene.heskett@verizon.net>
Message-ID: <4BACA923.1020202@lwfinger.net>

On 03/26/2010 06:18 AM, Gene Heskett wrote:
> On Friday 26 March 2010, Larry Finger wrote:
>> Some recent BCM43XX devices lack an on-board SPROM. The pertinent data
>>from the SPROM could be included in the kernel; however, this presents
>> a problem in the generation of a unique, reproducible MAC address. The
>> solution is to initialize the address to a known, workable value. Thus,
>> the device will work without any further code. For an address that is
>> preserved across reloads or reboots, a set of udev routines has been
>> prepared that detect the special address and assign a random value that
>> is preserved in a second udev rule file. The random address should be
>> unique except for the case where a given box has more than one of these
>> cards. This case is handles by adding the DEVPATH to the recognition
>> rules.
>>
>> Signed-off-by: Larry Finger <Larry.Finger at lwfinger.net>
> 
> This I assume does not do anything for the idiot vendor who ships thousands 
> of bt dongles all with 11:11:11:11:11:11 set as the mac address?  I got 
> stung with 2 of those things.

Sending a duplicated address is bad enough, but making it be a broadcast address
is particularly bad. On the other hand, the udev technique used here could be
employed to do a unique MAC address assignment for these devices. Do you still
have them?

Larry



