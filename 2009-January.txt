From illth at gmx.de  Thu Jan  1 04:55:26 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Thu, 01 Jan 2009 04:55:26 +0100
Subject: happy new year
Message-ID: <1230782126.3674.0.camel@note.localnet>

Happy new year to all of You!

Cheers,
Thomas



From artem.v.antonov at gmail.com  Wed Jan  7 12:27:47 2009
From: artem.v.antonov at gmail.com (Artem Antonov)
Date: Wed, 7 Jan 2009 14:27:47 +0300
Subject: b43: Debugging PHY TX errors
In-Reply-To: <200807241330.15439.mb@bu3sch.de>
References: <200807241330.15439.mb@bu3sch.de>
Message-ID: <6bc534830901070327u70495982h51e2656317b98d18@mail.gmail.com>

btw, I've noticed that "PHY TX errors" happens only when my bcm4318 is
in g-mode (hw_mode=g in hostapd.conf).
There seems to be no errors when hw_mode=b.

maybe it can help with debugging theese TX erorrs.

Best regards.


From mb at bu3sch.de  Fri Jan  9 02:11:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 9 Jan 2009 02:11:03 +0100
Subject: Thoughts about the b43 RNG
Message-ID: <200901090211.03937.mb@bu3sch.de>

I was doing some random tests on the b43 hardware RNG.
These are the results.

I patched the firmware to not access the RNG register anymore.
The unpatched firmware does two things. It reads the RNG register to get random values
and it writes 0 to the register every now and then for whatever reason.
Both reads and writes were patched out during my test. So the driver was
the only one accessing the RNG.

This is the result of reading a few bytes from the RNG with the patched fw:

0000000 c4df 4bf4 4d68 d79a 1e5c af3d 7383 5818
0000010 1993 53cc 5ba6 c449 f188 f3c7 e1e6 110b
0000020 8115 f604 4a13 f695 d4db c7a8 0b8e 12e9
0000030 beb8 e4fa 8b37 4217 1c08 8ac6 dc15 148c
0000040 8643 3d91 de0b ea86 53d4 ffa6 2dfb 412b
0000050 f527 6c15 1cd9 d239 d0b4 1a42 9569 622b
0000060 15bf 99d4 5acb 4c4b 9b98 a036 6d41 2490
0000070 393c d7e7 62af a3c5 bdb9 9a0b 8c94 bf30
0000080 eb53 9352 c927 a34c 6847 5cd1 a9b8 5cad
0000090 58f3 53b1 1cb3 f3c7 88e6 4a22 036a bcf9
00000a0 82eb 4efa b8c6 7f8e fa01 47e8 c8e1 fe91
00000b0 9d78 fd74 cc08 d0cc 83a0 f206 23e4 5673
00000c0 d704 9bae ec6f 7726 06ef 04f2 14ee 4329
00000d0 74a0 24e8 19b6 4f67 c6c2 2918 20ad 8483
00000e0 7b00 d4ed 6256 3a77 a28b a945 8953 5827
00000f0 a758 77b0 53dc cd58 006b bafe b474 d6d1
0000100 bdb9 db7a 6f6c f2df 1e6b 6e3d acdc a5a6
0000110 ed60 9349 cf27 c33d 7487 af17 385e 6470
0000120 644b 806f fbfd 1bf6 4b24 d996 2b65 43a9
0000130 2557 48b4 e490 9a93 7634 ead9 e02a 4e04
0000140 fec0 5407 d7a8 9eaf 4a85 a36b 99b9 fbcd
0000150 b38e 2acd cd54 6d65 9191 2cdc 9158 b8bb
0000160 1a74 8fd2 dfe1 7382 46e6 53e7 9ab0 2394
0000170 9981 9232 6c4b d8b1 629c e53a 0369 ef06
0000180 f0c7 fe7d fc03 29f2 4aa7 3429 4697 9a73
0000190 bfd1 cb7f 3f2c 6780 189e 3e30 d583 8b56
00001a0 9579 aeaf 445c 2811 e35d d670 3252 abc8
00001b0 b8be 1e1d 6fc3 18de c69c d172 d8b8 cf9d
00001c0 0596 6df5 804b 5400 8d5c 2c1b e5a7 a26b
00001d0 116f 08bb a123 d0bd 8c43 1519 68a9 332e
00001e0 1ee4 8a79 b3eb ad9b 3d5b 3808 6f8f 6ade
00001f0 8f65 f2e0 5735 75af fad6 210a e542 e769
0000200 af79 2ca1 d959 edc8 ec25 28b1 df50 807c
0000210 83f4 d1f3 585c e19c 3a86 5915 cd4d 929b
0000220 d2de 12b6 8024 7700 0eba 4e1d 0b3a 4d16
0000230 7db4 4604 9b8d 7dc8 2ffb c0bf a403 b56f
0000240 557f f3ab 38e6 7b1e a508 0a94 a914 5d53
0000250 002b 5607 01ac fb06 67f6 fb60 22ee a48b
0000260 6a89 ba57 ed75 3fb4 4680 028d faf7 bff5
0000270 b9f8 b019 799e 791a ebf2 d8a7 16b1 61d2
0000280 fc8b 9bf9 f990 41f2 7182 e9e2 415b c0f8
0000290 1c83 43c7 b386 52cc 92b5 64b4 3f37 da02
00002a0 894f d8b4 8fb0 8ec2 bac4 13eb 7427 5316
00002b0 2703 1562 5ba9 9c49 6f72 4bdf 5f69 4e7d
00002c0 bc7a 4f78 ac60 8b9e fae8 29ea 0f52 55c3
00002d0 3761 65dc 9c96 b639 48b1 a16f 22bd 7289
00002e0 c1cf bb0e ba89 d3eb 0f58 0fc1 923c b1b4
00002f0 6ab0 3dd5 6d16 b7da 52dc faa5 a9eb ea59
0000300 435c 820c e004 8b3f 46a3 e18c d27a 185b
0000310 665f e99a f42c b617 3992 5b18 32b7 a1ca
0000320 1d80 8d76 51e5 b88d 10e2 82de 660a 2033
0000330 3d0a 280b 3d5e 9c08 cbc7 87d1 def1 730f

I'm not sure how random this is, but I expected it to look worse, because I think
the 0 writes in the firmware have an effect on the RNG seeding.
So I expected either all-same values or all-almost-sequencial values.
Didn't happen. That might be a good sign for the quality of the RNG.

So now I did a different test.
Instead of just reading the register I do the following:
- Disable IRQs, which makes the process atomic on this UP machine.
- Write 0 to the RNG
- Read the RNG
- Enable IRQs.
So the write0 -> read sequence should execute in about equal time for each.
This is what happens:

0000000 d547 29b0 ab6f c5bc 252e 9f2e ea07 c454
0000010 b5a2 7443 d358 f437 6fbf 2d0b 9dd8 70ef
0000020 41a5 89ed 766d 3267 f169 908a 4e01 c014
0000030 46c3 9734 7d76 c522 b4a1 b44c 585b 58c7
0000040 2389 6c3d 8636 2765 dac0 0928 4160 fced
0000050 f2ce f3d6 1fc6 5c07 79cc b6c8 089d 4683
0000060 167a ac6f a931 c964 576f 7fba ecf8 b93b
0000070 c157 3810 6fc3 8e0c 44ef 55b2 43ac 92e3
0000080 793e 3a60 7ea7 de18 9013 1a84 e82a 5278
0000090 fb6c 0cbf 0c66 6a3c ca59 dda5 0fdd 967f
00000a0 759e 21ac cf0b 1b7f 2cbd 10c0 d103 7ce9
00000b0 3d80 9411 6bb1 ceb8 fa18 d8a1 51c7 4c10
00000c0 3998 8968 2665 229e 43ef 3fc9 f1fa 1519
00000d0 1501 b452 1fb3 83fd 123f 092c 6bb1 3d48
00000e0 c0eb 7bff 2f4e 0204 c9d6 134d efc7 9ef3
00000f0 98e0 0f84 4100 7fe0 c6fe 5dca 37d1 a27b
0000100 0d75 3e68 b40b 04bc bcb8 7236 182e a92e
0000110 9f09 8a0b 05b1 6043 e2fc 3a2d 2159 7316
0000120 799a c697 ac62 1b3d 3bb9 f126 7f1a 0cfd
0000130 6cb3 9cc1 fb31 b4b3 3e43 130e e263 9e28
0000140 ff20 400b 1303 25c4 6553 2ed2 4e14 c31c
0000150 9857 4171 3bf7 99dd f498 4abd 5652 4e90
0000160 cbc7 d2a2 dfdc cdf1 c2de 7fdb 3903 586d
0000170 e3ba ff3e 3cfa 051d 8d5f b2d9 dadc b1a8
0000180 5f1b 981b 0176 9009 5a7f caa0 0f5e e0f1
0000190 dcfa 3233 dfde 07f3 f689 47b1 c982 4568
00001a0 7582 4e53 7214 e726 5077 7587 82a8 1cd2
00001b0 184b e773 987a a386 071c 3238 6f24 090b
00001c0 f97b 089c e681 0769 283a b577 3f5b b2f6
00001d0 17c9 a341 211b 7213 98dd cd8d c4d0 6122
00001e0 4def 4fd5 3106 eae6 c4ab 93db 4c30 edc0
00001f0 0eb3 e61e ed66 2a94 3fa6 1101 61ee 9018
0000200 2385 9bc9 50bc 9408 4440 5e27 3613 0b6c
0000210 f220 4c25 5d3c d2de 5094 daf2 d4ae 89b4
0000220 48fb de8c 27f0 1f84 eff4 f904 aa9c 6b51
0000230 cd89 aadc a4af 924b b1da d370 3463 c8bf
0000240 a06d 03fe 563f 72b1 8395 09c1 709b 3b09
0000250 151e 0e57 9710 8d85 d3d8 2338 aae7 7aa8
0000260 0a6f 3852 4280 82ea 86d1 b26e 76d9 766e
0000270 90de 7af9 f951 fdcf 3610 8167 41e8 8610
0000280 891e 314f 2d77 7bda 2d4d 0126 2d11 0c91
0000290 5c29 4834 178c e58f 22d0 b112 fc1e c339
00002a0 bd68 72d0 69d6 6e98 db8c 9ebd a3e6 dfc9
00002b0 935d 3963 086f 237f f333 8e3f 6c73 9736
00002c0 2199 2f0c 9cfa 85cd fe5b 64e7 8023 0af9
00002d0 2335 e9e1 0d4a acdb 0933 3f65 b90b fc35
00002e0 2b39 825b 3028 6006 9ff6 3c07 08e7 c6be
00002f0 2144 790f 93cc b0c5 c105 0610 089a 73b8
0000300 762a edb5 7928 ed97 92dc 33dd a364 dc39
0000310 4ff6 6209 a626 84cc f725 4b7f 1b49 7041
0000320 f434 b04f d17d 1be7 3db9 c62e 9898 13c1
0000330 3c32 7dc3 3827 e98d 80b7 6603 6494 1640

I'm not sure about this. There aren't any obvious patterns.
But maybe I'm just blind. Does somebody else see some pattern or
has some RNG test program to recognize such patterns?

So let's do another test. Let's modify the previous test to
write 0xFFFF instead of 0:

0000000 c538 4f9f c9f8 d8b2 b6c7 ff94 78fc ad8e
0000010 b88f 98e4 70c5 620a 012e 45e4 a357 ffff
0000020 e9c6 fc95 60c6 e8f9 1d86 ffff f846 f380
0000030 5bc3 ffff 57ad 5474 f24b 6edb c0ed 7704
0000040 8dce 2393 263d ec67 48c7 55fb 6a5e 1955
0000050 2e98 d4ed 194a d594 76a5 56b0 ee9e cbe3
0000060 8e47 551a afa5 987d d08b c40d 6cb8 5bcd
0000070 76cf 82b2 e8de da72 9a5d 46a8 9330 7e62
0000080 bb33 1543 acaf 0b63 f449 23b9 5e3e 5ce9
0000090 e8ab 2d70 2fdc ffff f4bf f9bd 8392 84c5
00000a0 1335 ffff 1534 95a9 f6af f166 af10 7982
00000b0 6d05 6723 b48a ffff 7a66 2a53 dbaf d2b7
00000c0 8c86 ffff fc5c 3539 8a59 8fa0 08fe ed44
00000d0 61fd c9eb b3b3 3e3e 8d1d a3d2 d136 ffff
00000e0 906b 11fd dbe9 894c bd93 ffff b0eb b601
00000f0 a338 c5c9 902d 0bff 49bd af92 45f3 0fa3
0000100 a794 ffff b31c e332 70c4 a9fa f66d 98b0
0000110 b28a 8769 af7d e7f1 8686 7390 5a61 7f2e
0000120 2ebf 8b19 2741 398a 5b31 15da 3daa 3d24
0000130 b568 b8af 0f76 b3f2 3c31 853e 4ad7 0654
0000140 2ac6 69a3 2a99 94a9 6746 ffff 89e3 b76f
0000150 6ab7 14ad 3440 16bc ffff c4e9 0a42 2d5b
0000160 f466 cfba e507 59ad e09e d902 406b 300d
0000170 6e5c d61c ec60 e298 f9d2 2860 b674 916a
0000180 47f0 7e8b ffff de13 98e8 0f76 2b09 d34d
0000190 afa3 28fe 1c8d 9e18 69e3 ffff 9cf8 213e
00001a0 ffff a624 cf65 9ffb cd02 32d0 7b69 adb9
00001b0 2f10 5906 3296 61dc 93f7 2730 1d7a 092d
00001c0 880b 0d72 e422 01bc ffff 62b3 8edf 3619
00001d0 620f 1428 c95b 1891 7983 4e6b 15ef ffff
00001e0 6ae9 ffff 7c0a d1c8 a8e3 f980 4468 1e26
00001f0 ce75 21e4 f0ec 820d 35d5 9556 c159 ea12
0000200 18df c47d 91b3 a089 630f a633 9560 72a6
0000210 9fcd 4ff6 ba05 16a2 4390 7b19 79b8 e19e
0000220 169a 936d 97c5 b3be f6c3 da96 2e57 c915
0000230 af86 8a7e 1ca6 e73b 0775 1c81 ffff ca58
0000240 5627 ffff 8f98 160d 6f67 87fa 758d 6a50
0000250 eef3 beef 2114 0eea dbe0 8a26 5451 f1bf
0000260 ff62 ffff f709 0388 07cf 1679 2867 ecbd
0000270 fecc c615 cd6b 4bde ffff 5689 1161 1a18
0000280 7cab a136 03e6 7634 3549 3fac 3206 e1d2
0000290 a9d3 be66 aaee 86ab 7064 ffff 3b52 7f48
00002a0 e162 2e19 ee1b ffff 4ac7 d9a9 0061 baf3
00002b0 0657 b19c 87e2 fa75 4bd6 8546 845f b8b7
00002c0 5db5 8cdb 1e3c d717 ffff e63b 9b92 dab9
00002d0 151e c5a4 ffff 6c63 3c39 fd33 a12d 6b16
00002e0 ffff c5c8 4357 663f 5c6f 893f 14b5 30b5
00002f0 9947 2990 ffff b8fa 3280 60d1 64ff 4a47
0000300 ffff 3a96 c552 d0a1 9ef9 911c 8e76 1819
0000310 736c 22c2 2aed 955f cf35 5809 aa7e 1c56
0000320 aa45 ab57 7ab4 b250 ffff 4f13 d3fd abc1
0000330 46eb bc62 2931 616c df0c 2a0d 09a4 d868

Now, that's interesting, isn't it? :)
Similiar stuff happens when writing other magic values.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Fri Jan  9 09:21:52 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 9 Jan 2009 09:21:52 +0100
Subject: opensource firmware
Message-ID: <1ED57B4C-BDB3-4D7F-BF80-EBE811FE239C@ing.unibs.it>

Hello folks,

we have been involved in the past few months in testing modifications  
to the standard 802.11 MAC for research purposes. During this time we  
did some tests with Broadcom 802.11b/g boards and we wrote down a  
simple 802.11 compliant firmware that we used as a starting point for  
the modified MAC algorithms.

Although the base firmware is not fully 802.11 compliant, e.g., it  
does not support RTS/CTS procedure or QoS, we believe that someone  
could be interested in testing it. The firmware does not require the  
kernel to be modified and it uses the same shared memory layout and  
global registers usage of the original stuff from broadcom to ease  
loading by the b43 driver (and ease our writing...). We wrote it to  
make the b43 driver recognize it as Broadcom version 5 firmware: it  
still uses the original initval files of that version of the  
Broadcom's firmware, we do not include them as usual users have to  
extract these files following the b43 installation instructions.

Lorenzo and I tested this firmware only on 4306 and 4318 hardware (pci  
and minipci, pc-card based architectures seem to have problems), and  
we did simple tests on the integrated board of a Linksys WRT54GL, so  
we are quite sure it runs on 4306, 4318 and 4320 cards. We did all the  
works on kernel 2.6.27-rc5-wl.

The firmware along with the instructions to build it from the assembly  
code using the tools developed by the b43 community can be found here

	http://www.ing.unibs.it/openfwwf

In the firmware website you can find more information about the fw  
algorithm, its interaction with Broadcom hardware and other  
information that we discovered as we were writing it.

We would like to underline that this work would have not been possible  
without the instruments already developed by the b43 community  
(assembler/disassembler), hardware specifications (sipsolution's  
website), the opensource test firmware written by Michael Buesch and  
useful talks with those guys (b43 developers), which we deeply  
acknowledge. As we used several definition files written by Michael  
for its firmware and we have prepared a source tar file that includes  
them, we kindly ask Michael if this could be a problem.

Finally we stress that this is a TEST firmware and some stuff needs to  
be fixed (e.g. RTS/CTS and QoS), we have been using it as a starting  
point to implement other MAC algorithms for research purposes: if  
someone is interested in this kind of work and would like to share  
ideas also on research topics, please let us know.

Cheers,
Francesco Gringoli
Lorenzo Nava


From mb at bu3sch.de  Fri Jan  9 11:15:22 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 9 Jan 2009 11:15:22 +0100
Subject: Thoughts about the b43 RNG
In-Reply-To: <1231464656.5715.33.camel@brick>
References: <200901090211.03937.mb@bu3sch.de> <1231464519.5715.32.camel@brick>
	<1231464656.5715.33.camel@brick>
Message-ID: <200901091115.22375.mb@bu3sch.de>

On Friday 09 January 2009 02:30:56 Harvey Harrison wrote:
> On Thu, 2009-01-08 at 17:28 -0800, Harvey Harrison wrote:
> > On Fri, 2009-01-09 at 02:11 +0100, Michael Buesch wrote:
> > > I was doing some random tests on the b43 hardware RNG.
> > > These are the results.
> > > 
> > > I patched the firmware to not access the RNG register anymore.
> > > The unpatched firmware does two things. It reads the RNG register to get random values
> > > and it writes 0 to the register every now and then for whatever reason.
> > > Both reads and writes were patched out during my test. So the driver was
> > > the only one accessing the RNG.
> > > 
> > > This is the result of reading a few bytes from the RNG with the patched fw:
> > 
> > > I'm not sure about this. There aren't any obvious patterns.
> > > But maybe I'm just blind. Does somebody else see some pattern or
> > > has some RNG test program to recognize such patterns?
> > > 
> > > So let's do another test. Let's modify the previous test to
> > > write 0xFFFF instead of 0:
> > > 
> > 
> > NIST has a pretty good test suite I think.
> 
> Packaged for debian as dieharder if you want the command-line version.

Thanks. I didn't know it was already packaged. So I'll certainly try it.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jan  9 11:25:15 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 9 Jan 2009 11:25:15 +0100
Subject: opensource firmware
In-Reply-To: <1ED57B4C-BDB3-4D7F-BF80-EBE811FE239C@ing.unibs.it>
References: <1ED57B4C-BDB3-4D7F-BF80-EBE811FE239C@ing.unibs.it>
Message-ID: <200901091125.15482.mb@bu3sch.de>

On Friday 09 January 2009 09:21:52 Francesco Gringoli wrote:
> We would like to underline that this work would have not been possible  
> without the instruments already developed by the b43 community  
> (assembler/disassembler), hardware specifications (sipsolution's  
> website), the opensource test firmware written by Michael Buesch and  
> useful talks with those guys (b43 developers), which we deeply  
> acknowledge. As we used several definition files written by Michael  
> for its firmware and we have prepared a source tar file that includes  
> them, we kindly ask Michael if this could be a problem.

Of course not.
Thanks for doing the hard work!

-- 
Greetings, Michael.


From hs4233 at mail.mn-solutions.de  Fri Jan  9 15:00:04 2009
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Fri, 9 Jan 2009 15:00:04 +0100
Subject: Thoughts about the b43 RNG
In-Reply-To: <200901090211.03937.mb@bu3sch.de>
References: <200901090211.03937.mb@bu3sch.de>
Message-ID: <200901091500.04173.hs4233@mail.mn-solutions.de>

> I was doing some random tests on the b43 hardware RNG.
> These are the results.

As you're german, you should get a look at the current c't 
2/2009. At page 172 it has a in-depth articel about randomness 
tests. They also have some tools to download, see

http://von-und-fuer-lau.de/random-tools.html

http://www.heise.de/ct/09/02/links/172.shtml



From linville at tuxdriver.com  Fri Jan  9 16:32:47 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Fri, 9 Jan 2009 10:32:47 -0500
Subject: opensource firmware
In-Reply-To: <1ED57B4C-BDB3-4D7F-BF80-EBE811FE239C@ing.unibs.it>
References: <1ED57B4C-BDB3-4D7F-BF80-EBE811FE239C@ing.unibs.it>
Message-ID: <20090109153246.GB3371@tuxdriver.com>

On Fri, Jan 09, 2009 at 09:21:52AM +0100, Francesco Gringoli wrote:

> we have been involved in the past few months in testing modifications  
> to the standard 802.11 MAC for research purposes. During this time we  
> did some tests with Broadcom 802.11b/g boards and we wrote down a  
> simple 802.11 compliant firmware that we used as a starting point for  
> the modified MAC algorithms.

<snip>

> The firmware along with the instructions to build it from the assembly  
> code using the tools developed by the b43 community can be found here
> 
> 	http://www.ing.unibs.it/openfwwf
> 
> In the firmware website you can find more information about the fw  
> algorithm, its interaction with Broadcom hardware and other  
> information that we discovered as we were writing it.

I hereby declare this to be Fully Awesome! (TM)

John
-- 
John W. Linville		Linux should be at the core
linville at tuxdriver.com			of your literate lifestyle.


From navalorenx at gmail.com  Sat Jan 10 18:37:43 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Sat, 10 Jan 2009 18:37:43 +0100
Subject: [b43] opensource firmware
In-Reply-To: <200901091206.09736.mb@bu3sch.de>
References: <200901091129.22708.mb@bu3sch.de> <200901091149.28683.mb@bu3sch.de>
	<9F70A0D3-6334-45FB-9DAF-263FE89C847E@ing.unibs.it>
	<200901091206.09736.mb@bu3sch.de>
Message-ID: <AE7A4FD8-1728-4CE2-8CC7-DCE699C3B6C9@gmail.com>

Hello everybody,

today I tried OpenFWWF with kernel 2.6.28 on a Siemens wifi device  
with Broadcom 4306 chipset:

BCM94306 802.11g (rev 03)
PHY: Analog 2, Type 2, Revision 2
Radio: Manuf 0x17F, Version 0x2050, Revision 2

I did some tests and everything seems to work fine.

I remember, once again, that OpenFWWF needs v480 initvals to work  
properly, and was tested on 2.6.27-rc5 kernel.

During firmware development we used these devices

Belkin PCMCIA 4306 card,
Siemens PCI 4306 card.
Belkin PCI 4306 card.
ASUSTeK PCI 4318 card.

and firmware seems to work fine. Everyone that is interested in  
testing OpenFWWF is welcome: please let us know if the firmware works  
correctly, and, if it doesn't, please report which kind of problems  
you had.

Michael please let us know which kind of problem you had with your  
device.

cheers

Lorenzo Nava.




From linville at tuxdriver.com  Mon Jan 12 16:39:49 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Mon, 12 Jan 2009 10:39:49 -0500
Subject: [b43] opensource firmware
In-Reply-To: <AE7A4FD8-1728-4CE2-8CC7-DCE699C3B6C9@gmail.com>
References: <200901091129.22708.mb@bu3sch.de> <200901091149.28683.mb@bu3sch.de>
	<9F70A0D3-6334-45FB-9DAF-263FE89C847E@ing.unibs.it>
	<200901091206.09736.mb@bu3sch.de>
	<AE7A4FD8-1728-4CE2-8CC7-DCE699C3B6C9@gmail.com>
Message-ID: <20090112153949.GC31525@tuxdriver.com>

On Sat, Jan 10, 2009 at 06:37:43PM +0100, Lorenzo Nava wrote:
> Hello everybody,
>
> today I tried OpenFWWF with kernel 2.6.28 on a Siemens wifi device with 
> Broadcom 4306 chipset:
>
> BCM94306 802.11g (rev 03)
> PHY: Analog 2, Type 2, Revision 2
> Radio: Manuf 0x17F, Version 0x2050, Revision 2
>
> I did some tests and everything seems to work fine.
>
> I remember, once again, that OpenFWWF needs v480 initvals to work  
> properly, and was tested on 2.6.27-rc5 kernel.

Any chance on getting a set of initvals packaged with the open source
firmware?  That would allow distros like Fedora to package this...

John
-- 
John W. Linville		Linux should be at the core
linville at tuxdriver.com			of your literate lifestyle.


From mb at bu3sch.de  Mon Jan 12 16:48:04 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 12 Jan 2009 16:48:04 +0100
Subject: [b43] opensource firmware
In-Reply-To: <20090112153949.GC31525@tuxdriver.com>
References: <200901091129.22708.mb@bu3sch.de>
	<AE7A4FD8-1728-4CE2-8CC7-DCE699C3B6C9@gmail.com>
	<20090112153949.GC31525@tuxdriver.com>
Message-ID: <200901121648.05069.mb@bu3sch.de>

On Monday 12 January 2009 16:39:49 John W. Linville wrote:
> On Sat, Jan 10, 2009 at 06:37:43PM +0100, Lorenzo Nava wrote:
> > Hello everybody,
> >
> > today I tried OpenFWWF with kernel 2.6.28 on a Siemens wifi device with 
> > Broadcom 4306 chipset:
> >
> > BCM94306 802.11g (rev 03)
> > PHY: Analog 2, Type 2, Revision 2
> > Radio: Manuf 0x17F, Version 0x2050, Revision 2
> >
> > I did some tests and everything seems to work fine.
> >
> > I remember, once again, that OpenFWWF needs v480 initvals to work  
> > properly, and was tested on 2.6.27-rc5 kernel.
> 
> Any chance on getting a set of initvals packaged with the open source
> firmware?  That would allow distros like Fedora to package this...

Did anybody try with the set of initvals from my git repository?
It includes the major parts. It just misses parts like the default-beacon-template
and stuff. But that's not really needed for now.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Mon Jan 12 16:48:48 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Mon, 12 Jan 2009 16:48:48 +0100
Subject: [b43] opensource firmware
In-Reply-To: <20090112153949.GC31525@tuxdriver.com>
References: <200901091129.22708.mb@bu3sch.de> <200901091149.28683.mb@bu3sch.de>
	<9F70A0D3-6334-45FB-9DAF-263FE89C847E@ing.unibs.it>
	<200901091206.09736.mb@bu3sch.de>
	<AE7A4FD8-1728-4CE2-8CC7-DCE699C3B6C9@gmail.com>
	<20090112153949.GC31525@tuxdriver.com>
Message-ID: <2CB1EEC3-40EB-41D4-9A4C-E240359F05AA@ing.unibs.it>

On Jan 12, 2009, at 4:39 PM, John W. Linville wrote:

> On Sat, Jan 10, 2009 at 06:37:43PM +0100, Lorenzo Nava wrote:
>> Hello everybody,
>>
>> today I tried OpenFWWF with kernel 2.6.28 on a Siemens wifi device  
>> with
>> Broadcom 4306 chipset:
>>
>> BCM94306 802.11g (rev 03)
>> PHY: Analog 2, Type 2, Revision 2
>> Radio: Manuf 0x17F, Version 0x2050, Revision 2
>>
>> I did some tests and everything seems to work fine.
>>
>> I remember, once again, that OpenFWWF needs v480 initvals to work
>> properly, and was tested on 2.6.27-rc5 kernel.
>
> Any chance on getting a set of initvals packaged with the open source
> firmware?  That would allow distros like Fedora to package this...
>
> John
> -- 
> John W. Linville		Linux should be at the core
> linville at tuxdriver.com			of your literate lifestyle.
Yes, we have it now. Still testing as several values can be cut out.  
Posting ASAP.
Cheers.
-FG


From paul at whotookspaz.org  Wed Jan 14 00:09:49 2009
From: paul at whotookspaz.org (Paul Harris)
Date: Tue, 13 Jan 2009 23:09:49 +0000
Subject: Dual-licensing potential?
Message-ID: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>

Hello there,

I was wondering if it would be at all possible for the developers of b43 to
consider dual licensing the drivers, so
that users of other UNIX systems could benefit from them (in particular as
part of the kernel). Obviously, as they're
not BSD-licensed, they can't be integrated into any BSD kernel, which is a
real shame, since this
makes wireless connectivity on a lot of machines impossible. At best, I'd
like to ask for the code to be released
under both licenses, but if this isn't a possibility I'd hope it would at
least be possible for special permission
to be given allowing the drivers to be BSD-licensed for integration into the
FreeBSD kernel only (the blue pill.)
Thanks for your consideration.

Regards,
Paul Harris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090113/f22761b8/attachment.html>

From david at identd.dyndns.org  Wed Jan 14 02:19:05 2009
From: david at identd.dyndns.org (David Ellingsworth)
Date: Tue, 13 Jan 2009 20:19:05 -0500
Subject: Dual-licensing potential?
In-Reply-To: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>
References: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>
Message-ID: <30353c3d0901131719p10c8e50fg9da9091159bda743@mail.gmail.com>

On Tue, Jan 13, 2009 at 6:09 PM, Paul Harris <paul at whotookspaz.org> wrote:
> Hello there,
>
> I was wondering if it would be at all possible for the developers of b43 to
> consider dual licensing the drivers, so
> that users of other UNIX systems could benefit from them (in particular as
> part of the kernel). Obviously, as they're
> not BSD-licensed, they can't be integrated into any BSD kernel, which is a
> real shame, since this
> makes wireless connectivity on a lot of machines impossible. At best, I'd
> like to ask for the code to be released
> under both licenses, but if this isn't a possibility I'd hope it would at
> least be possible for special permission
> to be given allowing the drivers to be BSD-licensed for integration into the
> FreeBSD kernel only (the blue pill.)
> Thanks for your consideration.

More than likely, this is not going to happen. Broadcom has made it
extremely difficult to develop these drivers and last I heard the
developers weren't too adamant about providing a path whereby Broadcom
could take advantage of their efforts without contributing back to the
community. If you search archives, you'll see there's plenty of
tension around licensing the code under a BSD style license. *cough*
bcm *cough*

Regards,

David Ellingsworth


From dreamfly281 at gmail.com  Wed Jan 14 08:15:37 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:15:37 +0800
Subject: [RFC 1/7]B43N: Update the initn process following the new specs.
Message-ID: <1197ff4c0901132315q67862e86xd0d4ec4a829fc8f5@mail.gmail.com>

diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
index 8bcfda5..0f7a9a6 100644
--- a/drivers/net/wireless/b43/phy_n.c
+++ b/drivers/net/wireless/b43/phy_n.c
@@ -28,7 +28,7 @@
 #include "b43.h"
 #include "phy_n.h"
 #include "tables_nphy.h"
-
+#include "main.h"

 void b43_nphy_set_rxantenna(struct b43_wldev *dev, int antenna)
 {//TODO
@@ -97,7 +97,7 @@ static int nphy_channel_switch(struct b43_wldev
*dev, unsigned int channel)
 		return -ESRCH;

 	//FIXME enable/disable band select upper20 in RXCTL
-	if (0 /*FIXME 5Ghz*/)
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_5GHZ)
 		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x20);
 	else
 		b43_radio_maskset(dev, B2055_MASTER1, 0xFF8F, 0x50);
@@ -107,7 +107,7 @@ static int nphy_channel_switch(struct b43_wldev
*dev, unsigned int channel)
 	b43_radio_write16(dev, B2055_VCO_CAL10, 45);
 	b43_radio_write16(dev, B2055_VCO_CAL10, 65);
 	udelay(300);
-	if (0 /*FIXME 5Ghz*/)
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_5GHZ)
 		b43_phy_set(dev, B43_NPHY_BANDCTL, B43_NPHY_BANDCTL_5GHZ);
 	else
 		b43_phy_mask(dev, B43_NPHY_BANDCTL, ~B43_NPHY_BANDCTL_5GHZ);
@@ -117,6 +117,7 @@ static int nphy_channel_switch(struct b43_wldev
*dev, unsigned int channel)
 	return 0;
 }

+
 static void b43_radio_init2055_pre(struct b43_wldev *dev)
 {
 	b43_phy_mask(dev, B43_NPHY_RFCTL_CMD,
@@ -234,6 +235,8 @@ static void b43_nphy_tables_init(struct b43_wldev *dev)
 	ntab_upload(dev, B43_NTAB_C1_IQLT, b43_ntab_iqlt1);
 	ntab_upload(dev, B43_NTAB_C0_LOFEEDTH, b43_ntab_loftlt0);
 	ntab_upload(dev, B43_NTAB_C1_LOFEEDTH, b43_ntab_loftlt1);
+
+	/* TODO for rev >= 3 */
 }

 static void b43_nphy_workarounds(struct b43_wldev *dev)
@@ -392,13 +395,17 @@ ok:
 		     ~(B43_NPHY_RFSEQMODE_CAOVER | B43_NPHY_RFSEQMODE_TROVER));
 }

+static void b43_nphy_mimo_config(struct b43_wldev *dev)
+{
+
+}
 static void b43_nphy_bphy_init(struct b43_wldev *dev)
 {
 	unsigned int i;
 	u16 val;

 	val = 0x1E1F;
-	for (i = 0; i < 14; i++) {
+	for (i = 0; i < 16; i++) {
 		b43_phy_write(dev, B43_PHY_N_BMODE(0x88 + i), val);
 		val -= 0x202;
 	}
@@ -410,6 +417,7 @@ static void b43_nphy_bphy_init(struct b43_wldev *dev)
 	b43_phy_write(dev, B43_PHY_N_BMODE(0x38), 0x668);
 }

+
 /* RSSI Calibration */
 static void b43_nphy_rssi_cal(struct b43_wldev *dev, u8 type)
 {
@@ -421,11 +429,16 @@ int b43_phy_initn(struct b43_wldev *dev)
 	struct b43_phy *phy = &dev->phy;
 	u16 tmp;

-	//TODO: Spectral management
 	b43_nphy_tables_init(dev);

-	/* Clear all overrides */
-	b43_phy_write(dev, B43_NPHY_RFCTL_OVER, 0);
+	if (phy->rev >= 3) {
+		b43_phy_write(dev, B43_NPHY_TXF_40CO_B1S1, 0);
+		b43_phy_write(dev, B43_NPHY_RFCTL_OVER, 0);
+		b43_phy_write(dev, B43_NPHY_TXF_40CO_B1S0, 0);
+		b43_phy_write(dev, B43_NPHY_TXF_40CO_B32S1, 0);
+	} else
+		b43_phy_write(dev, B43_NPHY_RFCTL_OVER, 0);
+
 	b43_phy_write(dev, B43_NPHY_RFCTL_INTC1, 0);
 	b43_phy_write(dev, B43_NPHY_RFCTL_INTC2, 0);
 	b43_phy_write(dev, B43_NPHY_RFCTL_INTC3, 0);
@@ -433,6 +446,9 @@ int b43_phy_initn(struct b43_wldev *dev)
 	b43_phy_mask(dev, B43_NPHY_RFSEQMODE,
 		     ~(B43_NPHY_RFSEQMODE_CAOVER |
 		       B43_NPHY_RFSEQMODE_TROVER));
+
+	if (phy->rev >= 3)
+		b43_phy_write(dev, B43_PHY_N(0x8F), 0);
 	b43_phy_write(dev, B43_NPHY_AFECTL_OVER, 0);

 	tmp = (phy->rev < 2) ? 64 : 59;
@@ -443,49 +459,75 @@ int b43_phy_initn(struct b43_wldev *dev)
 	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_20M, 0x20);
 	b43_phy_write(dev, B43_NPHY_AFESEQ_TX2RX_PUD_40M, 0x20);

+	/* Fixme for Apple board? */
 	b43_phy_write(dev, B43_NPHY_TXREALFD, 184);
-	b43_phy_write(dev, B43_NPHY_MIMO_CRSTXEXT, 200);
-	b43_phy_write(dev, B43_NPHY_PLOAD_CSENSE_EXTLEN, 80);
-	b43_phy_write(dev, B43_NPHY_C2_BCLIPBKOFF, 511);

-	//TODO MIMO-Config
+	b43_phy_write(dev, B43_NPHY_MIMO_CRSTXEXT, 0xC8);
+	b43_phy_write(dev, B43_NPHY_PLOAD_CSENSE_EXTLEN, 0x50);
+	b43_phy_write(dev, B43_NPHY_TXRIFS_FRDEL, 0x30);
+
+	/* Set to mix/auto mode */
+	b43_phy_set(dev, B43_NPHY_MIMOCFG, B43_NPHY_MIMOCFG_AUTO);
+	b43_phy_mask(dev, B43_NPHY_MIMOCFG, ~B43_NPHY_MIMOCFG_GF);
+
 	//TODO Update TX/RX chain

 	if (phy->rev < 2) {
 		b43_phy_write(dev, B43_NPHY_DUP40_GFBL, 0xAA8);
 		b43_phy_write(dev, B43_NPHY_DUP40_BL, 0x9A4);
 	}
+
 	b43_nphy_workarounds(dev);
 	b43_nphy_reset_cca(dev);

 	ssb_write32(dev->dev, SSB_TMSLOW,
 		    ssb_read32(dev->dev, SSB_TMSLOW) | B43_TMSLOW_MACPHYCLKEN);
-	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RX2TX);
-	b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RESET2RX);
-
-	b43_phy_read(dev, B43_NPHY_CLASSCTL); /* dummy read */
-	//TODO read core1/2 clip1 thres regs
-
-	if (1 /* FIXME Band is 2.4GHz */)
+	do {
+		u16 rfctl1, rfctl2;
+
+		/* turn off PA override */
+		rfctl1 = b43_phy_read(dev, B43_NPHY_RFCTL_INTC1);
+		rfctl2 = b43_phy_read(dev, B43_NPHY_RFCTL_INTC2);
+	       	tmp = (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)?
+			0x120 : 0x180;
+		/* Fixme b43_phy_set or b43_phy_write? */
+		b43_phy_set(dev, B43_NPHY_RFCTL_INTC1, tmp);
+		b43_phy_set(dev, B43_NPHY_RFCTL_INTC2, tmp);
+		
+		b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RX2TX);
+		b43_nphy_force_rf_sequence(dev, B43_RFSEQ_RESET2RX);
+
+		/* turn on PA override */
+		b43_phy_write(dev, B43_NPHY_RFCTL_INTC1, rfctl1);
+		b43_phy_write(dev, B43_NPHY_RFCTL_INTC2, rfctl2);
+	} while (0);
+
+	if ( b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ )
 		b43_nphy_bphy_init(dev);
-	//TODO disable TX power control
-	//TODO Fix the TX power settings
-	//TODO Init periodic calibration with reason 3
+
+	/* turning off power control */
+	b43_nphy_tx_power_type_set(dev, 0);
+	b43_nphy_tx_power_fix(dev);
+	/* TODO measure idle TSSI (tx power control)  */
+	/* TODO set up tx power control  */
+	/* TODO write the below table to the 32-bit table 26 and 27 at offset 192  */
+	b43_nphy_periodic_calibration_init(dev, B43_PHY_INIT);
 	b43_nphy_rssi_cal(dev, 2);
 	b43_nphy_rssi_cal(dev, 0);
 	b43_nphy_rssi_cal(dev, 1);
-	//TODO get TX gain
+	b43_nphy_tx_gain_get(dev);
 	//TODO init superswitch
-	//TODO calibrate LO
-	//TODO idle TSSI TX pctl
-	//TODO TX power control power setup
-	//TODO table writes
-	//TODO TX power control coefficients
-	//TODO enable TX power control
-	//TODO control antenna selection
-	//TODO init radar detection
-	//TODO reset channel if changed
-
+	/* 36. FIXME (already do periodic calibration) */
+	/*   37. set up TX power control coefficients */
+	/*   38. set TX power control type to the configured type */
+	/* 39. If antenna selection type is 2x3 or 2x4 */
+	/*          1. update antenna configuration  */
+	/*   40. init radar detection */
+	b43_phy_write(dev, B43_NPHY_TXMACIF_HOLDOFF, 0x15);
+	b43_phy_write(dev, B43_NPHY_TXMACDELAY, 0x320);
+	
+	/*     43. set TX LPF bandwidth */
+	/*     44. spur workaround  */
 	b43err(dev->wl, "IEEE 802.11n devices are not supported, yet.\n");
 	return 0;
 }
@@ -508,8 +550,8 @@ static void b43_nphy_op_prepare_structs(struct
b43_wldev *dev)
 	struct b43_phy_n *nphy = phy->n;

 	memset(nphy, 0, sizeof(*nphy));
-
-	//TODO init struct b43_phy_n
+	if (phy->rev == 3 || phy->rev == 4)
+		nphy->havoid = 1;
 }

 static void b43_nphy_op_free(struct b43_wldev *dev)


From brian at interlinx.bc.ca  Wed Jan 14 00:55:43 2009
From: brian at interlinx.bc.ca (Brian J. Murrell)
Date: Wed, 14 Jan 2009 07:55:43 +0800
Subject: Dual-licensing potential?
In-Reply-To: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>
References: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>
Message-ID: <1231890943.19017.16.camel@brian-laptop>

On Tue, 2009-01-13 at 23:09 +0000, Paul Harris wrote:
> Hello there,
> 
> I was wondering if it would be at all possible for the developers of
> b43 to consider dual licensing the drivers, so  
> that users of other UNIX systems could benefit from them (in
> particular as part of the kernel). Obviously, as they're
> not BSD-licensed, they can't be integrated into any BSD kernel, which
> is a real shame, since this 
> makes wireless connectivity on a lot of machines impossible. At best,
> I'd like to ask for the code to be released 
> under both licenses, but if this isn't a possibility I'd hope it would
> at least be possible for special permission 
> to be given allowing the drivers to be BSD-licensed for integration
> into the FreeBSD kernel only (the blue pill.) 

I would really dislike seeing that happen.  A BSD license would allow
others to take the great (but incomplete) work done here, expand upon it
and not give back, providing them with more (possibly closed)
functionality than the original authors have.  That completely
invalidates the spirit of FOSS IMHO.

b.




From dreamfly281 at gmail.com  Wed Jan 14 08:58:34 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:58:34 +0800
Subject: [RFC 2/7] B43N: Add some register mask and variables to store b43
	Nphy values
Message-ID: <1197ff4c0901132358r628f940j114f96eec421050b@mail.gmail.com>

This patch add some variables like havoid power_control to record  the
11n Phy's states.

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/phy_n.h |   20 ++++++++++++++++----
 1 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/b43/phy_n.h b/drivers/net/wireless/b43/phy_n.h
index 1749aef..466a317 100644
--- a/drivers/net/wireless/b43/phy_n.h
+++ b/drivers/net/wireless/b43/phy_n.h
@@ -33,6 +33,7 @@
 #define  B43_NPHY_C1_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
 #define B43_NPHY_C1_CCK_CGAINI			B43_PHY_N(0x01D) /* Core 1 CCK
compute gain info */
 #define  B43_NPHY_C1_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
+#define  B43_NPHY_C1_CCK_CGAINI_GAINBKOFF_SHIFT	0
 #define  B43_NPHY_C1_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip
gain backoff */
 #define B43_NPHY_C1_MINMAX_GAIN			B43_PHY_N(0x01E) /* Core 1 min/max gain */
 #define  B43_NPHY_C1_MINGAIN			0x00FF /* Minimum gain */
@@ -86,6 +87,7 @@
 #define  B43_NPHY_C2_CGAINI_CL2DETECT		0x2000 /* Clip 2 detect mask */
 #define B43_NPHY_C2_CCK_CGAINI			B43_PHY_N(0x033) /* Core 2 CCK
compute gain info */
 #define  B43_NPHY_C2_CCK_CGAINI_GAINBKOFF	0x001F /* Gain backoff */
+#define  B43_NPHY_C2_CCK_CGAINI_GAINBKOFF_SHIFT	0
 #define  B43_NPHY_C2_CCK_CGAINI_CLIPGBKOFF	0x01E0 /* CCK barely clip
gain backoff */
 #define B43_NPHY_C2_MINMAX_GAIN			B43_PHY_N(0x034) /* Core 2 min/max gain */
 #define  B43_NPHY_C2_MINGAIN			0x00FF /* Minimum gain */
@@ -361,8 +363,8 @@
 #define B43_NPHY_BIST_STAT3			B43_PHY_N(0x0EB) /* BIST status 3 */
 #define B43_NPHY_RFCTL_OVER			B43_PHY_N(0x0EC) /* RF control override */
 #define B43_NPHY_MIMOCFG			B43_PHY_N(0x0ED) /* MIMO config */
-#define  B43_NPHY_MIMOCFG_GFMIX			0x0004 /* Greenfield or mixed mode */
-#define  B43_NPHY_MIMOCFG_AUTO			0x0100 /* Greenfield/mixed mode auto */
+#define  B43_NPHY_MIMOCFG_GF			0x0004 /* Greenfield mode */
+#define  B43_NPHY_MIMOCFG_AUTO			0x0100 /* auto/mixed mode  */
 #define B43_NPHY_RADAR_BLNKCTL			B43_PHY_N(0x0EE) /* Radar blank control */
 #define B43_NPHY_A0RADAR_FIFOCTL		B43_PHY_N(0x0EF) /* Antenna 0 radar
FIFO control */
 #define B43_NPHY_A1RADAR_FIFOCTL		B43_PHY_N(0x0F0) /* Antenna 1 radar
FIFO control */
@@ -623,6 +625,7 @@
 #define  B43_NPHY_TXPCTL_CMD_COEFF		0x2000 /* Power control coefficients */
 #define  B43_NPHY_TXPCTL_CMD_HWPCTLEN		0x4000 /* Hardware TX power
control enable */
 #define  B43_NPHY_TXPCTL_CMD_PCTLEN		0x8000 /* TX power control enable */
+#define  B43_NPHY_TXPCTL_CMD_ERDN		0xe000 /* Enable Radio Disable
Notification (Airline Mode) */
 #define B43_NPHY_TXPCTL_N			B43_PHY_N(0x1E8) /* TX power control N num */
 #define  B43_NPHY_TXPCTL_N_TSSID		0x00FF /* N TSSI delay */
 #define  B43_NPHY_TXPCTL_N_TSSID_SHIFT		0
@@ -915,12 +918,21 @@
 #define B2055_C2_B0NB_RSSIVCM		0xDE /* Core 2 B0 narrow-band RSSI VCM */
 #define B2055_C2_GENSPARE2		0xE2 /* Core 2 GEN spare 2 */

-
-
 struct b43_wldev;

 struct b43_phy_n {
 	//TODO lots of missing stuff
+	int deaf_cnt;
+	u16 cctl;		/* register classifer control  */
+	u16 havoid;		/* PHY hang avoidance */
+	u16 tx_pwr;		/* TX power control */
+
+	u16 clip1_dtc;
+	u16 clip2_dtc;
+
+	u16 gain_c0;		/* gain of core 0 */
+	u16 gain_c1;		/* gain of core 1 */
+
 };


-- 
1.5.6.3


From dreamfly281 at gmail.com  Wed Jan 14 08:58:45 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:58:45 +0800
Subject: [RFC 3/7] B43N: Add the periodic calibration function
Message-ID: <1197ff4c0901132358g71b6aaaar6d2007c1a765e192@mail.gmail.com>

Add the periodic calibration function, but just a framework

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/phy_n.c |   27 +++++++++++++++++++++++++++
 1 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
index 0f7a9a6..586e774 100644
--- a/drivers/net/wireless/b43/phy_n.c
+++ b/drivers/net/wireless/b43/phy_n.c
@@ -424,6 +424,33 @@ static void b43_nphy_rssi_cal(struct b43_wldev
*dev, u8 type)
 	//TODO
 }

+/* periodic calibration events */
+enum b43_nphy_percal_event {
+	B43_DEIVER_UP = 1,
+	B43_WATCHDOG,
+	B43_PHY_INIT,
+	B43_BSS_JOIN,
+	B43_IBSS_JOIN,
+	B43_START_BSS,
+};
+
+static void b43_nphy_periodic_calibration_init(struct b43_wldev *dev,
+					       enum b43_nphy_percal_event event)
+{
+	switch (event) {
+	case B43_WATCHDOG:
+		break;
+	case B43_PHY_INIT:
+		break;
+	case B43_BSS_JOIN:
+	case B43_IBSS_JOIN:
+		break;
+	default:
+		;
+	}
+	/* TODO */
+}
+
 int b43_phy_initn(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
-- 
1.5.6.3


From dreamfly281 at gmail.com  Wed Jan 14 08:58:54 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:58:54 +0800
Subject: [RFC 4/7] B43N: Add TX power control and gain get function
Message-ID: <1197ff4c0901132358icebf1efwae543d2dd8fb06c7@mail.gmail.com>

Three functions about tx power control
 b43_nphy_tx_power_fix() b43_nphy_tx_power_coeff_set()
b43_nphy_tx_power_type_set()
but remain lots of TODO cause not very clearly understand the SPECS

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/phy_n.c |  195 +++++++++++++++++++++++++++++++++++++-
 1 files changed, 194 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
index 586e774..1330309 100644
--- a/drivers/net/wireless/b43/phy_n.c
+++ b/drivers/net/wireless/b43/phy_n.c
@@ -82,9 +82,183 @@ static void b43_chantab_phy_upload(struct b43_wldev *dev,
 	b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
 }

+enum b43_nphy_txpid {
+	B43_N_5G_MEDIUM_FREQ = 0,
+	B43_N_5G_LOW_FREQ,
+	B43_N_5G_HIGH_FREQ,
+	B43_N_2G_FREQ,
+	/* Attent: currently we just using 2 txpid */
+	B43_N_TXPID_MAX = 2,
+};
+
+enum  b43_nphy_txgain_type {
+	REV_LE2 = 0,		/* rev <= 2 */
+	REV_GE3_2G,		/* rev >= 3 (2.4 GHz) */
+	REV_E3_5G,		/* rev 3 (5 GHz) */
+	REV_GE4_5G,		/* rev >= 4 (5 GHz) */
+};
+
 static void b43_nphy_tx_power_fix(struct b43_wldev *dev)
 {
-	//TODO
+	struct b43_phy *phy = &dev->phy;
+	struct b43_phy_n *nphy = dev->phy.n;
+	struct ssb_sprom *sprom = &(dev->dev->bus->sprom);
+	u32 txpid[B43_N_TXPID_MAX];
+	int i;
+
+	if (nphy->havoid)
+		b43_nphy_stay_carrier_search_enable(dev);
+
+	if (sprom->revision < 4)
+		txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x48;
+	else {
+		/* TODO */
+/* 		if  (medium freq range, 5100..5499 mhz) */
+/* 			txpid[B43_N_5G_MEDIUM_FREQ] = ; */
+/* 			Use the txpid5ga values from the SPROM in the loop below; */
+/* 		if  (low freq range, 4900..5099 mhz) */
+/* 			txpid[B43_N_5G_LOW_FREQ] = ; */
+/* 			Use the txpid5gal values from the SPROM in the loop below; */
+/* 		if (high freq range, 5500.. mhz) */
+/* 			txpid[B43_N_5G_HIGH_FREQ] = ; */
+/* 			Use the txpid5gah values from the SPROM in the loop below; */
+/* 		if  (2.4 GHz) */
+/* 			txpid[B43_N_2G_FREQ] = ; */
+/* 			Use the txpid2g values from the SPROM in the loop below; */
+	}
+	if (phy->rev >= 3)
+		txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x28;
+
+	for (i = 0; i < B43_N_TXPID_MAX; i++) {
+		u32 tx_gain;
+		u16 reg;
+
+		if (phy->rev <= 2)
+			tx_gain = b43_ntab_txgain[REV_LE2][txpid[i]];
+		else if ((i == B43_N_2G_FREQ) && (phy->rev > 2))
+			tx_gain = b43_ntab_txgain[REV_GE3_2G][txpid[i]];
+		else if (phy->rev == 3)
+			tx_gain = b43_ntab_txgain[REV_E3_5G][txpid[i]];
+		else if (phy->rev > 3)
+			tx_gain = b43_ntab_txgain[REV_GE4_5G][txpid[i]];
+
+		/* Fixme depending on loop idx? */
+		if (phy->rev < 3)
+			b43_phy_set(dev, B43_NPHY_RFCTL_OVER, 0x100);
+		else if (i == 0)
+			b43_phy_set(dev, B43_PHY_N(0x8F), 0x100);
+		else
+			b43_phy_set(dev, B43_NPHY_RFCTL_OVER, 0x100);
+
+		if (i == 0)	/* for core 1 */
+			b43_phy_write(dev, B43_NPHY_AFECTL_DACGAIN1,
+				      (tx_gain >> 8) & 0x3f);
+		else 		/* for core 2 */
+			b43_phy_write(dev, B43_NPHY_AFECTL_DACGAIN2,
+				      (tx_gain >> 8) & 0x3f);
+
+		/* set the radio gain */
+		if (phy->rev < 3)
+			reg = (tx_gain >> 16) & 0x1fff;
+		else
+			reg = (tx_gain >> 16) & 0x1ffff;
+		b43_phy_write(dev, B43_NPHY_TABLE_ADDR, txpid[i] + 0x1d10);
+		b43_phy_write(dev, B43_NPHY_TABLE_DATALO, reg);
+		
+		/* set the BB multiplier to table */
+		b43_phy_write(dev, B43_NPHY_TABLE_ADDR, 0x3c57);
+		reg = b43_phy_read(dev, B43_NPHY_TABLE_DATALO);
+		if (i == 1)
+			reg |= ((tx_gain & 0xff) << 8);
+		else if (i == 2)
+			reg |= (tx_gain & 0xff);
+		b43_phy_write(dev, B43_NPHY_TABLE_ADDR, 0x3c57);
+		b43_phy_write(dev, B43_NPHY_TABLE_DATALO, reg);
+	}
+	b43_phy_mask(dev, B43_NPHY_BPHY_CTL2, ~B43_NPHY_BPHY_CTL2_LUT);
+	if (nphy->havoid)
+                b43_nphy_stay_carrier_search_disable(dev);
+}
+
+static void b43_nphy_tx_power_coeff_set(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy = dev->phy.n;
+
+	if (nphy->havoid)
+		b43_nphy_stay_carrier_search_enable(dev);
+
+/* 	# read 7 16-bit values from the table 15 from offset 80; */
+/* 	# for the table IDs 26 and 27; */
+/* 		1.   for table 26: calculate the I/Q compensation as the first
read value & 0x3ff shifted up by 10, and the second read value &
0x3ff; */
+/* 		2. for table 27: do a similar calculation with the third and
fourth read values; */
+/* 		3. write the table ID << 10 ored with 128 to PHY reg 0x72; */
+/* 		4. 128 times: write the higher 16 bits of the I/Q compensation
to PHY reg 0x74 and the lower 16 bits to 0x73  */
+
+/* 	# for the table IDs 26 and 27: */
+/* 			1. the LO compensation I/Q is the upper/lower 8 bits of the
fifth (table id 26) or sixth (27) read value */
+/* 			2. write the table ID << 10 ored with 448 to PHY reg 0x72 */
+/* 			3. 128 times: */
+/* 				1.for PHY rev < 3: calculate the new LO compensation I/Q
values according to the table by multiplying with the table value,
adding 128 and then shifting down by 8 (other PHY revs require no
calculation); */
+/* 				2. calculate I << 8 | Q and write zero to 0x74, that value to 0x73  */
+
+/* 					if (phy->rev < 2) */
+/* 						;#if the PHY rev is < 2, write 0xffff to SHM 0x708 and 0x70e; */
+/* 					if (nphy->havoid) */
+/* 						b43_nphy_stay_carrier_search_disable(dev); */
+	if (nphy->havoid)
+                b43_nphy_stay_carrier_search_disable(dev);
+}
+
+static void b43_nphy_tx_power_type_set(struct b43_wldev *dev,  u16 pwr_ctl)
+				
+{
+	struct b43_phy *phy = &dev->phy;
+	
+	dev->phy.n->tx_pwr = pwr_ctl;
+
+	if (pwr_ctl != 0) {
+ 		/* TODO  write the 84-entry adjusted power table (calculated during setup)
+		   to both 8-bit hardware tables 26 and 27 at offset 64 */
+		if (pwr_ctl == 1)
+			b43_phy_set(dev, B43_NPHY_TXPCTL_CMD,
+				    B43_NPHY_TXPCTL_CMD_COEFF |
+				    B43_NPHY_TXPCTL_CMD_HWPCTLEN);
+		else
+			b43_phy_mask(dev, B43_NPHY_TXPCTL_CMD,
+				     ~(B43_NPHY_TXPCTL_CMD_COEFF |
+				       B43_NPHY_TXPCTL_CMD_HWPCTLEN));
+		b43_phy_mask(dev, B43_NPHY_AFECTL_OVER, ~0x4000);
+		if (phy->rev < 2)
+			b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
+					~B43_NPHY_BPHY_CTL3_SCALE, 0x40);
+		else
+			b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
+					~B43_NPHY_BPHY_CTL3_SCALE, 0x3b);
+		/* TODO 6.if the PHY rev two or higher and the bandwidth is
+		   40 MHz, clear the 20 in 40 MHz I/Q workaround host flag; */
+	} else {
+		int i;
+
+		b43_phy_write(dev, B43_NPHY_TABLE_ADDR, 0x6840);
+		for (i = 0; i < 84; i++)
+			b43_phy_write(dev, B43_NPHY_TABLE_DATALO, 0);
+		b43_phy_write(dev, B43_NPHY_TABLE_ADDR, 0x6c40);
+		for (i = 0; i < 84; i++)
+			b43_phy_write(dev, B43_NPHY_TABLE_DATALO, 0);
+		b43_phy_mask(dev, B43_NPHY_TXPCTL_CMD,
+			     ~(B43_NPHY_TXPCTL_CMD_COEFF |
+			       B43_NPHY_TXPCTL_CMD_HWPCTLEN));
+		b43_phy_set(dev, B43_NPHY_AFECTL_OVER, 0x4000);
+		if (phy->rev < 2)
+			b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
+					~B43_NPHY_BPHY_CTL3_SCALE, 0x5a);
+		else
+			b43_phy_maskset(dev, B43_NPHY_BPHY_CTL3,
+					~B43_NPHY_BPHY_CTL3_SCALE, 0x53);
+
+		/* TODO if the PHY rev two or higher and the bandwidth is 40 MHz,
+		   set the 20 in 40 MHz I/Q workaround host flag ; */
+	}
 }

 /* Tune the hardware to a new channel. */
@@ -451,6 +625,25 @@ static void
b43_nphy_periodic_calibration_init(struct b43_wldev *dev,
 	/* TODO */
 }

+
+static void b43_nphy_tx_gain_get(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy  = dev->phy.n;
+
+	if (nphy->tx_pwr == 0) {
+		if (nphy->havoid)
+			b43_nphy_stay_carrier_search_enable(dev);
+		/* TODO read two 16-bit values from table 7 at offset 0x110, the
first is for core 0, the second for core 1; */
+		if (nphy->havoid)
+			b43_nphy_stay_carrier_search_disable(dev);
+	} else {
+		/* TODO read the base index from register 0x1ed (core 0) or 0x1ee
(core 1); */
+		/* TODO if the PHY rev is >= 3, use the lower 16 bits of the Init
tables at the base index offset, and treat it as above; */
+		/* TODO if the PHY rev is < 2, use the uppwer 16 bits of the Init
tables at the base index offset, and treat it as above ; */
+	}
+}
+
+
 int b43_phy_initn(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
-- 
1.5.6.3


From dreamfly281 at gmail.com  Wed Jan 14 08:59:02 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:59:02 +0800
Subject: [RFC 5/7] B43N: update the phyn workarounds
Message-ID: <1197ff4c0901132359i57ece7c7j5d75f474d8e5bab6@mail.gmail.com>

Update the phyn workaround following the new specs

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/phy_n.c |  211 ++++++++++++++++++++++----------------
 1 files changed, 121 insertions(+), 90 deletions(-)

diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
index 1330309..c1d9a5c 100644
--- a/drivers/net/wireless/b43/phy_n.c
+++ b/drivers/net/wireless/b43/phy_n.c
@@ -416,105 +416,136 @@ static void b43_nphy_tables_init(struct b43_wldev *dev)
 static void b43_nphy_workarounds(struct b43_wldev *dev)
 {
 	struct b43_phy *phy = &dev->phy;
-	unsigned int i;
+	struct b43_phy_n *nphy = dev->phy.n;

-	b43_phy_set(dev, B43_NPHY_IQFLIP,
-		    B43_NPHY_IQFLIP_ADC1 | B43_NPHY_IQFLIP_ADC2);
-	if (1 /* FIXME band is 2.4GHz */) {
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ) {
 		b43_phy_set(dev, B43_NPHY_CLASSCTL,
 			    B43_NPHY_CLASSCTL_CCKEN);
 	} else {
 		b43_phy_mask(dev, B43_NPHY_CLASSCTL,
 			     ~B43_NPHY_CLASSCTL_CCKEN);
 	}
-	b43_radio_set(dev, B2055_C1_TX_RF_SPARE, 0x8);
-	b43_phy_write(dev, B43_NPHY_TXFRAMEDELAY, 8);
-
-	/* Fixup some tables */
-	b43_ntab_write(dev, B43_NTAB16(8, 0x00), 0xA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x10), 0xA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x02), 0xCDAA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x12), 0xCDAA);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x08), 0);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x18), 0);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x07), 0x7AAB);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x17), 0x7AAB);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x06), 0x800);
-	b43_ntab_write(dev, B43_NTAB16(8, 0x16), 0x800);
-
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO1, 0x2D8);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP1, 0x301);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO2, 0x2D8);
-	b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP2, 0x301);
-
-	//TODO set RF sequence
-
-	/* Set narrowband clip threshold */
-	b43_phy_write(dev, B43_NPHY_C1_NBCLIPTHRES, 66);
-	b43_phy_write(dev, B43_NPHY_C2_NBCLIPTHRES, 66);
-
-	/* Set wideband clip 2 threshold */
-	b43_phy_maskset(dev, B43_NPHY_C1_CLIPWBTHRES,
-			~B43_NPHY_C1_CLIPWBTHRES_CLIP2,
-			21 << B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT);
-	b43_phy_maskset(dev, B43_NPHY_C2_CLIPWBTHRES,
-			~B43_NPHY_C2_CLIPWBTHRES_CLIP2,
-			21 << B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT);
-
-	/* Set Clip 2 detect */
-	b43_phy_set(dev, B43_NPHY_C1_CGAINI,
-		    B43_NPHY_C1_CGAINI_CL2DETECT);
-	b43_phy_set(dev, B43_NPHY_C2_CGAINI,
-		    B43_NPHY_C2_CGAINI_CL2DETECT);
-
-	if (0 /*FIXME*/) {
-		/* Set dwell lengths */
-		b43_phy_write(dev, B43_NPHY_CLIP1_NBDWELL_LEN, 43);
-		b43_phy_write(dev, B43_NPHY_CLIP2_NBDWELL_LEN, 43);
-		b43_phy_write(dev, B43_NPHY_W1CLIP1_DWELL_LEN, 9);
-		b43_phy_write(dev, B43_NPHY_W1CLIP2_DWELL_LEN, 9);
-
-		/* Set gain backoff */
-		b43_phy_maskset(dev, B43_NPHY_C1_CGAINI,
-				~B43_NPHY_C1_CGAINI_GAINBKOFF,
-				1 << B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT);
-		b43_phy_maskset(dev, B43_NPHY_C2_CGAINI,
-				~B43_NPHY_C2_CGAINI_GAINBKOFF,
-				1 << B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT);
-
-		/* Set HPVGA2 index */
-		b43_phy_maskset(dev, B43_NPHY_C1_INITGAIN,
-				~B43_NPHY_C1_INITGAIN_HPVGA2,
-				6 << B43_NPHY_C1_INITGAIN_HPVGA2_SHIFT);
-		b43_phy_maskset(dev, B43_NPHY_C2_INITGAIN,
-				~B43_NPHY_C2_INITGAIN_HPVGA2,
-				6 << B43_NPHY_C2_INITGAIN_HPVGA2_SHIFT);
-
-		//FIXME verify that the specs really mean to use autoinc here.
-		for (i = 0; i < 3; i++)
-			b43_ntab_write(dev, B43_NTAB16(7, 0x106) + i, 0x673);
-	}

-	/* Set minimum gain value */
-	b43_phy_maskset(dev, B43_NPHY_C1_MINMAX_GAIN,
-			~B43_NPHY_C1_MINGAIN,
-			23 << B43_NPHY_C1_MINGAIN_SHIFT);
-	b43_phy_maskset(dev, B43_NPHY_C2_MINMAX_GAIN,
-			~B43_NPHY_C2_MINGAIN,
-			23 << B43_NPHY_C2_MINGAIN_SHIFT);
+	if (nphy->havoid)
+		b43_nphy_stay_carrier_search_enable(dev);

-	if (phy->rev < 2) {
-		b43_phy_mask(dev, B43_NPHY_SCRAM_SIGCTL,
-			     ~B43_NPHY_SCRAM_SIGCTL_SCM);
-	}
+	if (phy->rev >= 3)
+		;		/* TODO */
+	else {
+		b43_radio_set(dev, B2055_C1_TX_RF_SPARE, 0x8);
+		b43_phy_write(dev, B43_NPHY_TXFRAMEDELAY, 0x8);
+
+		b43_ntab_write(dev, B43_NTAB16(8, 0x00), 0xA);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x10), 0xA);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x02), 0xCDAA);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x12), 0xCDAA);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x08), 0);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x18), 0);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x07), 0x7AAB);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x17), 0x7AAB);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x06), 0x800);
+		b43_ntab_write(dev, B43_NTAB16(8, 0x16), 0x800);
+
+		b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO1, 0x2D8);
+		b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP1, 0x301);
+		b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_LO2, 0x2D8);
+		b43_phy_write(dev, B43_NPHY_RFCTL_LUT_TRSW_UP2, 0x301);
+
+		//TODO set RF sequence
+
+		/* Start gain control workaround */
+		b43_phy_set(dev, B43_NPHY_C1_CGAINI,
+			    B43_NPHY_C1_CGAINI_CL2DETECT);
+		b43_phy_set(dev, B43_NPHY_C2_CGAINI,
+			    B43_NPHY_C2_CGAINI_CL2DETECT);
+
+		b43_phy_write(dev, B43_NPHY_C1_NBCLIPTHRES, 0x84);
+		b43_phy_write(dev, B43_NPHY_C2_NBCLIPTHRES, 0x84);
+
+		if (0 /*FIXME*/) {
+			/* Set dwell lengths */
+			b43_phy_write(dev, B43_NPHY_CLIP1_NBDWELL_LEN, 43);
+			b43_phy_write(dev, B43_NPHY_CLIP2_NBDWELL_LEN, 43);
+			b43_phy_write(dev, B43_NPHY_W1CLIP1_DWELL_LEN, 9);
+			b43_phy_write(dev, B43_NPHY_W1CLIP2_DWELL_LEN, 9);
+		}

-	/* Set phase track alpha and beta */
-	b43_phy_write(dev, B43_NPHY_PHASETR_A0, 0x125);
-	b43_phy_write(dev, B43_NPHY_PHASETR_A1, 0x1B3);
-	b43_phy_write(dev, B43_NPHY_PHASETR_A2, 0x105);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B0, 0x16E);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B1, 0xCD);
-	b43_phy_write(dev, B43_NPHY_PHASETR_B2, 0x20);
+		/* Set wideband clip 2 threshold */
+		b43_phy_maskset(dev, B43_NPHY_C1_CLIPWBTHRES,
+				~B43_NPHY_C1_CLIPWBTHRES_CLIP2,
+				21 << B43_NPHY_C1_CLIPWBTHRES_CLIP2_SHIFT);
+		b43_phy_maskset(dev, B43_NPHY_C2_CLIPWBTHRES,
+				~B43_NPHY_C2_CLIPWBTHRES_CLIP2,
+				21 << B43_NPHY_C2_CLIPWBTHRES_CLIP2_SHIFT);
+	
+		/* Set minimum gain value */
+		b43_phy_maskset(dev, B43_NPHY_C1_MINMAX_GAIN,
+				~B43_NPHY_C1_MINGAIN,
+				23 << B43_NPHY_C1_MINGAIN_SHIFT);
+		b43_phy_maskset(dev, B43_NPHY_C2_MINMAX_GAIN,
+				~B43_NPHY_C2_MINGAIN,
+				23 << B43_NPHY_C2_MINGAIN_SHIFT);
+		if (0 /*FIXME*/) {
+			/* Set gain backoff */
+			b43_phy_maskset(dev, B43_NPHY_C1_CGAINI,
+					~B43_NPHY_C1_CGAINI_GAINBKOFF,
+					1 << B43_NPHY_C1_CGAINI_GAINBKOFF_SHIFT);
+			b43_phy_maskset(dev, B43_NPHY_C2_CGAINI,
+					~B43_NPHY_C2_CGAINI_GAINBKOFF,
+					1 << B43_NPHY_C2_CGAINI_GAINBKOFF_SHIFT);
+			b43_phy_maskset(dev, B43_NPHY_C1_CCK_CGAINI,
+					~B43_NPHY_C1_CCK_CGAINI_GAINBKOFF,
+					1 << B43_NPHY_C1_CCK_CGAINI_GAINBKOFF_SHIFT);
+			b43_phy_maskset(dev, B43_NPHY_C2_CCK_CGAINI,
+					~B43_NPHY_C2_CCK_CGAINI_GAINBKOFF,
+					1 << B43_NPHY_C2_CCK_CGAINI_GAINBKOFF_SHIFT);
+		}
+
+		b43_phy_write(dev, B43_NPHY_CCK_SHIFTB_REF, 0x809c);
+		/* TODO: Set temp value depending on whether gain boost enabled and
current chanspec (?)  */
+		/* TODO: Set the bits in 0xf80 in PHY registers 0x20 and 0x36 to
the temp value  */
+		/* TODO: Write (temp value) << 8 | 0x7c to PHY Register 0x73, 3 times  */
+	
+		/* TODO */
+		/* # If gain boost is enabled
+		   1. FIXME, mod some tables
+		   # if ELNA gain config is enabled
+		   1. FIXME, lots of table writes
+		   # If the PHY revision is 2:
+		   1. FIXME, lots more table writes
+		   # set RF sequence (5)
+		   # set the upper 8 bits of PHY register 0x153 to 0x5a
+		   # If current band is 2.4 GHz
+		   1. Set the lower 7 bits of PHY reg 0xc5d to 4  */
+
+		/* End of gain control workaround */
+
+		if (phy->rev < 2) {
+			/* TODO read PHY register 0xa0 and, if bit 0x02 is set, set the ML
ADV workaround bit in the host flags */
+		} else if (phy->rev == 2) {
+			b43_phy_write(dev, B43_NPHY_CRSCHECK2, 0);
+			b43_phy_write(dev, B43_NPHY_CRSCHECK3, 0);
+		}
+		if (phy->rev < 2)
+			;/* TODO  clear the bit 0x80 in PHY register 0x90  */
+
+		/* Set phase track alpha and beta */
+		b43_phy_write(dev, B43_NPHY_PHASETR_A0, 0x125);
+		b43_phy_write(dev, B43_NPHY_PHASETR_A1, 0x1B3);
+		b43_phy_write(dev, B43_NPHY_PHASETR_A2, 0x105);
+		b43_phy_write(dev, B43_NPHY_PHASETR_B0, 0x16E);
+		b43_phy_write(dev, B43_NPHY_PHASETR_B1, 0xCD);
+		b43_phy_write(dev, B43_NPHY_PHASETR_B2, 0x20);
+		/* TODO Clear bits 0xF000 in PHY reg 0x142 */
+		b43_phy_set(dev, B43_NPHY_TXF_20CO_S2B1, 0xb5);
+		b43_phy_set(dev, B43_NPHY_TXF_20CO_S2B2, 0xa4);
+		b43_phy_set(dev, B43_NPHY_TXF_20CO_S2B3, 0);
+		if (phy->rev == 2)
+			b43_phy_set(dev, B43_NPHY_FINERX2_CGC,
+				    B43_NPHY_FINERX2_CGC_DECGC);
+	}
+	if (nphy->havoid)
+                b43_nphy_stay_carrier_search_disable(dev);
 }

 static void b43_nphy_reset_cca(struct b43_wldev *dev)
-- 
1.5.6.3


From dreamfly281 at gmail.com  Wed Jan 14 08:59:08 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:59:08 +0800
Subject: [RFC 6/7] B43N: Add the stay carrier search enable and disable
	functions.
Message-ID: <1197ff4c0901132359gc16720cg55b101acf58dfdfa@mail.gmail.com>

Implementation the functions  enable and disable stay carrier search

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/phy_n.c |   63 +++++++++++++++++++++++++++++--------
 1 files changed, 49 insertions(+), 14 deletions(-)

diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
index c1d9a5c..6dfa5c0 100644
--- a/drivers/net/wireless/b43/phy_n.c
+++ b/drivers/net/wireless/b43/phy_n.c
@@ -82,6 +82,55 @@ static void b43_chantab_phy_upload(struct b43_wldev *dev,
 	b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
 }

+static void b43_nphy_reset_cca(struct b43_wldev *dev)
+{
+	u16 bbcfg;
+
+	ssb_write32(dev->dev, SSB_TMSLOW,
+		    ssb_read32(dev->dev, SSB_TMSLOW) | SSB_TMSLOW_FGC);
+	bbcfg = b43_phy_read(dev, B43_NPHY_BBCFG);
+	b43_phy_set(dev, B43_NPHY_BBCFG, B43_NPHY_BBCFG_RSTCCA);
+	b43_phy_write(dev, B43_NPHY_BBCFG,
+		      bbcfg & ~B43_NPHY_BBCFG_RSTCCA);
+	ssb_write32(dev->dev, SSB_TMSLOW,
+		    ssb_read32(dev->dev, SSB_TMSLOW) & ~SSB_TMSLOW_FGC);
+}
+
+static void b43_nphy_stay_carrier_search_enable(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy = dev->phy.n;
+	
+	B43_WARN_ON(nphy->deaf_cnt < 0);
+
+	if (nphy->deaf_cnt == 0) {
+		if (dev->dev->id.revision == 16)
+			b43_mac_suspend(dev);
+		nphy->cctl = b43_phy_read(dev, B43_NPHY_RFCTL_INTC1);
+		b43_phy_mask(dev, B43_NPHY_CLASSCTL, ~0x7);
+		if (dev->dev->id.revision == 16)
+			b43_mac_enable(dev);
+		nphy->clip1_dtc = b43_phy_read(dev, B43_NPHY_CLIP1GAIN_SLEN);
+		nphy->clip2_dtc = b43_phy_read(dev, B43_NPHY_CLIP2GAIN_SLEN);
+		b43_phy_write(dev, B43_NPHY_CLIP1GAIN_SLEN, 0xffff);
+		b43_phy_write(dev, B43_NPHY_CLIP2GAIN_SLEN, 0xffff);
+	}
+	nphy->deaf_cnt++;
+	b43_nphy_reset_cca(dev);
+}
+
+static void b43_nphy_stay_carrier_search_disable(struct b43_wldev *dev)
+{
+	struct b43_phy_n *nphy = dev->phy.n;
+	
+	nphy->deaf_cnt--;
+	B43_WARN_ON(nphy->deaf_cnt < 0);
+	if (nphy->deaf_cnt == 0) {
+		b43_phy_write(dev, B43_NPHY_RFCTL_INTC1, nphy->cctl);
+		b43_phy_write(dev, B43_NPHY_CLIP1GAIN_SLEN, nphy->clip1_dtc);
+		b43_phy_write(dev, B43_NPHY_CLIP2GAIN_SLEN, nphy->clip1_dtc);
+	}
+}
+
 enum b43_nphy_txpid {
 	B43_N_5G_MEDIUM_FREQ = 0,
 	B43_N_5G_LOW_FREQ,
@@ -548,20 +597,6 @@ static void b43_nphy_workarounds(struct b43_wldev *dev)
                 b43_nphy_stay_carrier_search_disable(dev);
 }

-static void b43_nphy_reset_cca(struct b43_wldev *dev)
-{
-	u16 bbcfg;
-
-	ssb_write32(dev->dev, SSB_TMSLOW,
-		    ssb_read32(dev->dev, SSB_TMSLOW) | SSB_TMSLOW_FGC);
-	bbcfg = b43_phy_read(dev, B43_NPHY_BBCFG);
-	b43_phy_set(dev, B43_NPHY_BBCFG, B43_NPHY_BBCFG_RSTCCA);
-	b43_phy_write(dev, B43_NPHY_BBCFG,
-		      bbcfg & ~B43_NPHY_BBCFG_RSTCCA);
-	ssb_write32(dev->dev, SSB_TMSLOW,
-		    ssb_read32(dev->dev, SSB_TMSLOW) & ~SSB_TMSLOW_FGC);
-}
-
 enum b43_nphy_rf_sequence {
 	B43_RFSEQ_RX2TX,
 	B43_RFSEQ_TX2RX,
-- 
1.5.6.3


From dreamfly281 at gmail.com  Wed Jan 14 08:59:14 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Wed, 14 Jan 2009 15:59:14 +0800
Subject: [RFC 7/7] B43N: Add the tx gain table of different version.
Message-ID: <1197ff4c0901132359q216b60e4oa60ef2268667ae05@mail.gmail.com>

Add the tx gain table

Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
---
 drivers/net/wireless/b43/tables_nphy.c |  110 ++++++++++++++++++++++++++++++++
 drivers/net/wireless/b43/tables_nphy.h |    3 +-
 2 files changed, 112 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/b43/tables_nphy.c
b/drivers/net/wireless/b43/tables_nphy.c
index 4e23363..a6e3d2b 100644
--- a/drivers/net/wireless/b43/tables_nphy.c
+++ b/drivers/net/wireless/b43/tables_nphy.c
@@ -27,6 +27,116 @@
 #include "phy_common.h"
 #include "phy_n.h"

+const u32 b43_ntab_txgain[][B43_NPHY_TXGAIN] = {
+	{0x03cc2b44, 0x03cc2b42, 0x03cc2a44, 0x03cc2a42, 0x03cc2944,
+	 0x03c82b44, 0x03c82b42, 0x03c82a44, 0x03c82a42, 0x03c82944,
+	 0x03c82942, 0x03c82844, 0x03c82842, 0x03c42b44, 0x03c42b42,
+	 0x03c42a44, 0x03c42a42, 0x03c42944, 0x03c42942, 0x03c42844,
+	 0x03c42842, 0x03c42744, 0x03c42742, 0x03c42644, 0x03c42642,
+	 0x03c42544, 0x03c42542, 0x03c42444, 0x03c42442, 0x03c02b44,
+	 0x03c02b42, 0x03c02a44, 0x03c02a42, 0x03c02944, 0x03c02942,
+	 0x03c02844, 0x03c02842, 0x03c02744, 0x03c02742, 0x03b02b44,
+	 0x03b02b42, 0x03b02a44, 0x03b02a42, 0x03b02944, 0x03b02942,
+	 0x03b02844, 0x03b02842, 0x03b02744, 0x03b02742, 0x03b02644,
+	 0x03b02642, 0x03b02544, 0x03b02542, 0x03a02b44, 0x03a02b42,
+	 0x03a02a44, 0x03a02a42, 0x03a02944, 0x03a02942, 0x03a02844,
+	 0x03a02842, 0x03a02744, 0x03a02742, 0x03902b44, 0x03902b42,
+	 0x03902a44, 0x03902a42, 0x03902944, 0x03902942, 0x03902844,
+	 0x03902842, 0x03902744, 0x03902742, 0x03902644, 0x03902642,
+	 0x03902544, 0x03902542, 0x03802b44, 0x03802b42, 0x03802a44,
+	 0x03802a42, 0x03802944, 0x03802942, 0x03802844, 0x03802842,
+	 0x03802744, 0x03802742, 0x03802644, 0x03802642, 0x03802544,
+	 0x03802542, 0x03802444, 0x03802442, 0x03802344, 0x03802342,
+	 0x03802244, 0x03802242, 0x03802144, 0x03802142, 0x03802044,
+	 0x03802042, 0x03801f44, 0x03801f42, 0x03801e44, 0x03801e42,
+	 0x03801d44, 0x03801d42, 0x03801c44, 0x03801c42, 0x03801b44,
+	 0x03801b42, 0x03801a44, 0x03801a42, 0x03801944, 0x03801942,
+	 0x03801844, 0x03801842, 0x03801744, 0x03801742, 0x03801644,
+	 0x03801642, 0x03801544, 0x03801542, 0x03801444, 0x03801442,
+	 0x03801344, 0x03801342, 0x00002b00
+	}, /* rev <= 2 */
+	{0x1f410044, 0x1f410042, 0x1f410040, 0x1f41003e, 0x1f41003c,
+	 0x1f41003b, 0x1f410039, 0x1f410037, 0x1e410044, 0x1e410042,
+	 0x1e410040, 0x1e41003e, 0x1e41003c, 0x1e41003b, 0x1e410039,
+	 0x1e410037, 0x1d410044, 0x1d410042, 0x1d410040, 0x1d41003e,
+	 0x1d41003c, 0x1d41003b, 0x1d410039, 0x1d410037, 0x1c410044,
+	 0x1c410042, 0x1c410040, 0x1c41003e, 0x1c41003c, 0x1c41003b,
+	 0x1c410039, 0x1c410037, 0x1b410044, 0x1b410042, 0x1b410040,
+	 0x1b41003e, 0x1b41003c, 0x1b41003b, 0x1b410039, 0x1b410037,
+	 0x1a410044, 0x1a410042, 0x1a410040, 0x1a41003e, 0x1a41003c,
+	 0x1a41003b, 0x1a410039, 0x1a410037, 0x19410044, 0x19410042,
+	 0x19410040, 0x1941003e, 0x1941003c, 0x1941003b, 0x19410039,
+	 0x19410037, 0x18410044, 0x18410042, 0x18410040, 0x1841003e,
+	 0x1841003c, 0x1841003b, 0x18410039, 0x18410037, 0x17410044,
+	 0x17410042, 0x17410040, 0x1741003e, 0x1741003c, 0x1741003b,
+	 0x17410039, 0x17410037, 0x16410044, 0x16410042, 0x16410040,
+	 0x1641003e, 0x1641003c, 0x1641003b, 0x16410039, 0x16410037,
+	 0x15410044, 0x15410042, 0x15410040, 0x1541003e, 0x1541003c,
+	 0x1541003b, 0x15410039, 0x15410037, 0x14410044, 0x14410042,
+	 0x14410040, 0x1441003e, 0x1441003c, 0x1441003b, 0x14410039,
+	 0x14410037, 0x13410044, 0x13410042, 0x13410040, 0x1341003e,
+	 0x1341003c, 0x1341003b, 0x13410039, 0x13410037, 0x12410044,
+	 0x12410042, 0x12410040, 0x1241003e, 0x1241003c, 0x1241003b,
+	 0x12410039, 0x12410037, 0x11410044, 0x11410042, 0x11410040,
+	 0x1141003e, 0x1141003c, 0x1141003b, 0x11410039, 0x11410037,
+	 0x10410044, 0x10410042, 0x10410040, 0x1041003e, 0x1041003c,
+	 0x1041003b, 0x10410039, 0x10410037
+	}, /* rev >= 3 (2.4 GHz) */
+	{0xcff70044, 0xcff70042, 0xcff70040, 0xcff7003e, 0xcff7003c,
+	 0xcff7003b, 0xcff70039, 0xcff70037, 0xcef70044, 0xcef70042,
+	 0xcef70040, 0xcef7003e, 0xcef7003c, 0xcef7003b, 0xcef70039,
+	 0xcef70037, 0xcdf70044, 0xcdf70042, 0xcdf70040, 0xcdf7003e,
+	 0xcdf7003c, 0xcdf7003b, 0xcdf70039, 0xcdf70037, 0xccf70044,
+	 0xccf70042, 0xccf70040, 0xccf7003e, 0xccf7003c, 0xccf7003b,
+	 0xccf70039, 0xccf70037, 0xcbf70044, 0xcbf70042, 0xcbf70040,
+	 0xcbf7003e, 0xcbf7003c, 0xcbf7003b, 0xcbf70039, 0xcbf70037,
+	 0xcaf70044, 0xcaf70042, 0xcaf70040, 0xcaf7003e, 0xcaf7003c,
+	 0xcaf7003b, 0xcaf70039, 0xcaf70037, 0xc9f70044, 0xc9f70042,
+	 0xc9f70040, 0xc9f7003e, 0xc9f7003c, 0xc9f7003b, 0xc9f70039,
+	 0xc9f70037, 0xc8f70044, 0xc8f70042, 0xc8f70040, 0xc8f7003e,
+	 0xc8f7003c, 0xc8f7003b, 0xc8f70039, 0xc8f70037, 0xc7f70044,
+	 0xc7f70042, 0xc7f70040, 0xc7f7003e, 0xc7f7003c, 0xc7f7003b,
+	 0xc7f70039, 0xc7f70037, 0xc6f70044, 0xc6f70042, 0xc6f70040,
+	 0xc6f7003e, 0xc6f7003c, 0xc6f7003b, 0xc6f70039, 0xc6f70037,
+	 0xc5f70044, 0xc5f70042, 0xc5f70040, 0xc5f7003e, 0xc5f7003c,
+	 0xc5f7003b, 0xc5f70039, 0xc5f70037, 0xc4f70044, 0xc4f70042,
+	 0xc4f70040, 0xc4f7003e, 0xc4f7003c, 0xc4f7003b, 0xc4f70039,
+	 0xc4f70037, 0xc3f70044, 0xc3f70042, 0xc3f70040, 0xc3f7003e,
+	 0xc3f7003c, 0xc3f7003b, 0xc3f70039, 0xc3f70037, 0xc2f70044,
+	 0xc2f70042, 0xc2f70040, 0xc2f7003e, 0xc2f7003c, 0xc2f7003b,
+	 0xc2f70039, 0xc2f70037, 0xc1f70044, 0xc1f70042, 0xc1f70040,
+	 0xc1f7003e, 0xc1f7003c, 0xc1f7003b, 0xc1f70039, 0xc1f70037,
+	 0xc0f70044, 0xc0f70042, 0xc0f70040, 0xc0f7003e, 0xc0f7003c,
+	 0xc0f7003b, 0xc0f70039, 0xc0f70037
+	}, /* rev 3 (5 GHz) */
+	{0x2ff20044, 0x2ff20042, 0x2ff20040, 0x2ff2003e, 0x2ff2003c,
+	 0x2ff2003b, 0x2ff20039, 0x2ff20037, 0x2ef20044, 0x2ef20042,
+	 0x2ef20040, 0x2ef2003e, 0x2ef2003c, 0x2ef2003b, 0x2ef20039,
+	 0x2ef20037, 0x2df20044, 0x2df20042, 0x2df20040, 0x2df2003e,
+	 0x2df2003c, 0x2df2003b, 0x2df20039, 0x2df20037, 0x2cf20044,
+	 0x2cf20042, 0x2cf20040, 0x2cf2003e, 0x2cf2003c, 0x2cf2003b,
+	 0x2cf20039, 0x2cf20037, 0x2bf20044, 0x2bf20042, 0x2bf20040,
+	 0x2bf2003e, 0x2bf2003c, 0x2bf2003b, 0x2bf20039, 0x2bf20037,
+	 0x2af20044, 0x2af20042, 0x2af20040, 0x2af2003e, 0x2af2003c,
+	 0x2af2003b, 0x2af20039, 0x2af20037, 0x29f20044, 0x29f20042,
+	 0x29f20040, 0x29f2003e, 0x29f2003c, 0x29f2003b, 0x29f20039,
+	 0x29f20037, 0x28f20044, 0x28f20042, 0x28f20040, 0x28f2003e,
+	 0x28f2003c, 0x28f2003b, 0x28f20039, 0x28f20037, 0x27f20044,
+	 0x27f20042, 0x27f20040, 0x27f2003e, 0x27f2003c, 0x27f2003b,
+	 0x27f20039, 0x27f20037, 0x26f20044, 0x26f20042, 0x26f20040,
+	 0x26f2003e, 0x26f2003c, 0x26f2003b, 0x26f20039, 0x26f20037,
+	 0x25f20044, 0x25f20042, 0x25f20040, 0x25f2003e, 0x25f2003c,
+	 0x25f2003b, 0x25f20039, 0x25f20037, 0x24f20044, 0x24f20042,
+	 0x24f20040, 0x24f2003e, 0x24f2003c, 0x24f2003b, 0x24f20039,
+	 0x24f20038, 0x23f20041, 0x23f20040, 0x23f2003f, 0x23f2003e,
+	 0x23f2003c, 0x23f2003b, 0x23f20039, 0x23f20037, 0x22f20044,
+	 0x22f20042, 0x22f20040, 0x22f2003e, 0x22f2003c, 0x22f2003b,
+	 0x22f20039, 0x22f20037, 0x21f20044, 0x21f20042, 0x21f20040,
+	 0x21f2003e, 0x21f2003c, 0x21f2003b, 0x21f20039, 0x21f20037,
+	 0x20d20043, 0x20d20041, 0x20d2003e, 0x20d2003c, 0x20d2003a,
+	 0x20d20038, 0x20d20036, 0x20d20034
+	} /* rev >= 4 (5 GHz) */
+};

 struct b2055_inittab_entry {
 	/* Value to write if we use the 5GHz band. */
diff --git a/drivers/net/wireless/b43/tables_nphy.h
b/drivers/net/wireless/b43/tables_nphy.h
index 4d498b0..341d2f4 100644
--- a/drivers/net/wireless/b43/tables_nphy.h
+++ b/drivers/net/wireless/b43/tables_nphy.h
@@ -154,6 +154,7 @@ extern const u32 b43_ntab_tdi40a0[];
 extern const u32 b43_ntab_tdi40a1[];
 extern const u32 b43_ntab_tdtrn[];
 extern const u32 b43_ntab_tmap[];
-
+#define B43_NPHY_TXGAIN		128
+extern const u32 b43_ntab_txgain[][B43_NPHY_TXGAIN];

 #endif /* B43_TABLES_NPHY_H_ */
-- 
1.5.6.3


From johannes at sipsolutions.net  Wed Jan 14 11:30:38 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 14 Jan 2009 11:30:38 +0100
Subject: [RFC 7/7] B43N: Add the tx gain table of different version.
In-Reply-To: <1197ff4c0901132359q216b60e4oa60ef2268667ae05@mail.gmail.com>
	(sfid-20090114_085916_556426_80805D31)
References: <1197ff4c0901132359q216b60e4oa60ef2268667ae05@mail.gmail.com>
	(sfid-20090114_085916_556426_80805D31)
Message-ID: <1231929038.3730.10.camel@johannes>

On Wed, 2009-01-14 at 15:59 +0800, YanBo wrote:
> Add the tx gain table
> 
> Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
> ---
>  drivers/net/wireless/b43/tables_nphy.c |  110 ++++++++++++++++++++++++++++++++
>  drivers/net/wireless/b43/tables_nphy.h |    3 +-
>  2 files changed, 112 insertions(+), 1 deletions(-)
> 
> diff --git a/drivers/net/wireless/b43/tables_nphy.c
> b/drivers/net/wireless/b43/tables_nphy.c
> index 4e23363..a6e3d2b 100644
> --- a/drivers/net/wireless/b43/tables_nphy.c
> +++ b/drivers/net/wireless/b43/tables_nphy.c
> @@ -27,6 +27,116 @@
>  #include "phy_common.h"
>  #include "phy_n.h"
> 
> +const u32 b43_ntab_txgain[][B43_NPHY_TXGAIN] = {

> +	}, /* rev <= 2 */
> +	{

I think you should give these different names, rather than sub-indexing
in that array.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090114/f67a0d46/attachment.pgp>

From johannes at sipsolutions.net  Wed Jan 14 11:33:04 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 14 Jan 2009 11:33:04 +0100
Subject: [RFC 4/7] B43N: Add TX power control and gain get function
In-Reply-To: <1197ff4c0901132358icebf1efwae543d2dd8fb06c7@mail.gmail.com>
	(sfid-20090114_085856_303113_9C484BD0)
References: <1197ff4c0901132358icebf1efwae543d2dd8fb06c7@mail.gmail.com>
	(sfid-20090114_085856_303113_9C484BD0)
Message-ID: <1231929184.3730.14.camel@johannes>

On Wed, 2009-01-14 at 15:58 +0800, YanBo wrote:
> Three functions about tx power control
>  b43_nphy_tx_power_fix() b43_nphy_tx_power_coeff_set()
> b43_nphy_tx_power_type_set()
> but remain lots of TODO cause not very clearly understand the SPECS
> 
> Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
> ---
>  drivers/net/wireless/b43/phy_n.c |  195 +++++++++++++++++++++++++++++++++++++-
>  1 files changed, 194 insertions(+), 1 deletions(-)
> 
> diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
> index 586e774..1330309 100644
> --- a/drivers/net/wireless/b43/phy_n.c
> +++ b/drivers/net/wireless/b43/phy_n.c
> @@ -82,9 +82,183 @@ static void b43_chantab_phy_upload(struct b43_wldev *dev,
>  	b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
>  }
> 
> +enum b43_nphy_txpid {
> +	B43_N_5G_MEDIUM_FREQ = 0,
> +	B43_N_5G_LOW_FREQ,
> +	B43_N_5G_HIGH_FREQ,
> +	B43_N_2G_FREQ,
> +	/* Attent: currently we just using 2 txpid */
> +	B43_N_TXPID_MAX = 2,
> +};

> +	u32 txpid[B43_N_TXPID_MAX];
> +	int i;
> +
> +	if (nphy->havoid)
> +		b43_nphy_stay_carrier_search_enable(dev);
> +
> +	if (sprom->revision < 4)
> +		txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x48;

2, 3? This is a little odd. As I say on the wiki, "The txpid values are
two values, one for each radio core."

So you should do that B43_N_MAX_CORES == 2.

> +	else {
> +		/* TODO */
> +/* 		if  (medium freq range, 5100..5499 mhz) */
> +/* 			txpid[B43_N_5G_MEDIUM_FREQ] = ; */
> +/* 			Use the txpid5ga values from the SPROM in the loop below; */
> +/* 		if  (low freq range, 4900..5099 mhz) */
> +/* 			txpid[B43_N_5G_LOW_FREQ] = ; */
> +/* 			Use the txpid5gal values from the SPROM in the loop below; */
> +/* 		if (high freq range, 5500.. mhz) */
> +/* 			txpid[B43_N_5G_HIGH_FREQ] = ; */
> +/* 			Use the txpid5gah values from the SPROM in the loop below; */
> +/* 		if  (2.4 GHz) */
> +/* 			txpid[B43_N_2G_FREQ] = ; */
> +/* 			Use the txpid2g values from the SPROM in the loop below; */
> +	}
> +	if (phy->rev >= 3)
> +		txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x28;
> +
> +	for (i = 0; i < B43_N_TXPID_MAX; i++) {

So, this loop just sets up the tx power for each radio core.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090114/6c9002f1/attachment.pgp>

From navalorenx at gmail.com  Wed Jan 14 16:30:47 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Wed, 14 Jan 2009 16:30:47 +0100
Subject: [b43] opensource firmware
Message-ID: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>

Hello everybody,

we completed the 1st version of initvals. They are available at http://www.ing.unibs.it/openfwwf 
. Currently only binary version is available: don't worry, we will  
publish source code as soon as possible!! This first version is a  
"test version": please try it and let us know if everythink is ok...

Today we have also tested a new firmware version that works with WPA2- 
personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS) (tested  
on 4306 and 4318 PCI device). If anybody was interested please try new  
firmware with encryption and let us know if it works correctly, thanks!

Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf

Cheers

Lorenzo Nava
Francesco Gringoli




From mb at bu3sch.de  Wed Jan 14 16:40:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Jan 2009 16:40:49 +0100
Subject: [RFC 1/7]B43N: Update the initn process following the new specs.
In-Reply-To: <1197ff4c0901132315q67862e86xd0d4ec4a829fc8f5@mail.gmail.com>
References: <1197ff4c0901132315q67862e86xd0d4ec4a829fc8f5@mail.gmail.com>
Message-ID: <200901141640.49233.mb@bu3sch.de>

On Wednesday 14 January 2009 08:15:37 YanBo wrote:
[snip]

You can add
Acked-by: Michael Buesch <mb at bu3sch.de>
to all of these patches, after fixing the issues Johannes reported.
Please send them directly to John afterwards and CC me.

-- 
Greetings, Michael.


From linville at tuxdriver.com  Wed Jan 14 16:33:56 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 14 Jan 2009 10:33:56 -0500
Subject: [b43] opensource firmware
In-Reply-To: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
Message-ID: <20090114153355.GB3854@tuxdriver.com>

On Wed, Jan 14, 2009 at 04:30:47PM +0100, Lorenzo Nava wrote:
> Hello everybody,
> 
> we completed the 1st version of initvals. They are available at http://www.ing.unibs.it/openfwwf 
> . Currently only binary version is available: don't worry, we will  
> publish source code as soon as possible!! This first version is a  
> "test version": please try it and let us know if everythink is ok...
> 
> Today we have also tested a new firmware version that works with WPA2- 
> personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS) (tested  
> on 4306 and 4318 PCI device). If anybody was interested please try new  
> firmware with encryption and let us know if it works correctly, thanks!
> 
> Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf

Awesome...awesome...awesome!!!

-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From mb at bu3sch.de  Wed Jan 14 16:48:12 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Jan 2009 16:48:12 +0100
Subject: Dual-licensing potential?
In-Reply-To: <30353c3d0901131719p10c8e50fg9da9091159bda743@mail.gmail.com>
References: <e46241a90901131509y2d6250fficade2e726b469cad@mail.gmail.com>
	<30353c3d0901131719p10c8e50fg9da9091159bda743@mail.gmail.com>
Message-ID: <200901141648.13064.mb@bu3sch.de>

On Wednesday 14 January 2009 02:19:05 David Ellingsworth wrote:
> On Tue, Jan 13, 2009 at 6:09 PM, Paul Harris <paul at whotookspaz.org> wrote:
> > Hello there,
> >
> > I was wondering if it would be at all possible for the developers of b43 to
> > consider dual licensing the drivers, so
> > that users of other UNIX systems could benefit from them (in particular as
> > part of the kernel). Obviously, as they're
> > not BSD-licensed, they can't be integrated into any BSD kernel, which is a
> > real shame, since this
> > makes wireless connectivity on a lot of machines impossible. At best, I'd
> > like to ask for the code to be released
> > under both licenses, but if this isn't a possibility I'd hope it would at
> > least be possible for special permission
> > to be given allowing the drivers to be BSD-licensed for integration into the
> > FreeBSD kernel only (the blue pill.)
> > Thanks for your consideration.
> 
> More than likely, this is not going to happen. Broadcom has made it
> extremely difficult to develop these drivers and last I heard the
> developers weren't too adamant about providing a path whereby Broadcom
> could take advantage of their efforts without contributing back to the
> community. If you search archives, you'll see there's plenty of
> tension around licensing the code under a BSD style license. *cough*
> bcm *cough*

Please don't spread clearly incorrect statements like these.

I am willing to relicense parts of the driver on a per-case base. I said that
more than once. Please contact me and the other copyright holders _BEFORE_ you
take the code.
So you show me the lines you want, and we decide whether you get permission or not.

Everything I said in this thread:
http://marc.info/?l=linux-wireless&m=117571766928130&w=2
still applies.

Besides that, you might want to contact the DragonFly people, which are
developing a BSD licensed BCM driver from scratch.

-- 
Greetings, Michael.


From navalorenx at gmail.com  Wed Jan 14 17:06:08 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Wed, 14 Jan 2009 17:06:08 +0100
Subject: [b43] opensource firmware
In-Reply-To: <30c8a83c0901140757w5ee3c859wd0685d0b5f3a2e29@mail.gmail.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<30c8a83c0901140757w5ee3c859wd0685d0b5f3a2e29@mail.gmail.com>
Message-ID: <9B9048F0-7AA4-43AE-A2D8-72E0EAA55457@gmail.com>

Great!

Thank you very much for the help... qos=0 parameter was still needed,  
so it is correct.

cheers

Lorenzo Nava.

On Jan 14, 2009, at 4:57 PM, Buran Ayuthia wrote:

> My 4311 rev 01 card still works with the new initvals and firmware
> using WPA2-personal (both TKIP and CCMP) and without encyrption.  I am
> still loading the module using modprobe b43 qos=0.
>
> Buran Ayuthia
>
> On Wed, Jan 14, 2009 at 9:30 AM, Lorenzo Nava <navalorenx at gmail.com>  
> wrote:
>> Hello everybody,
>>
>> we completed the 1st version of initvals. They are available at http://www.ing.unibs.it/openfwwf
>> . Currently only binary version is available: don't worry, we will
>> publish source code as soon as possible!! This first version is a
>> "test version": please try it and let us know if everythink is ok...
>>
>> Today we have also tested a new firmware version that works with  
>> WPA2-
>> personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS) (tested
>> on 4306 and 4318 PCI device). If anybody was interested please try  
>> new
>> firmware with encryption and let us know if it works correctly,  
>> thanks!
>>
>> Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf
>>
>> Cheers
>>
>> Lorenzo Nava
>> Francesco Gringoli
>>
>>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>>



From Larry.Finger at lwfinger.net  Wed Jan 14 18:43:27 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Wed, 14 Jan 2009 11:43:27 -0600
Subject: [b43] opensource firmware
In-Reply-To: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
Message-ID: <496E243F.1080500@lwfinger.net>

Lorenzo Nava wrote:

> Today we have also tested a new firmware version that works with
> WPA2-personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS)
> (tested on 4306 and 4318 PCI device). If anybody was interested please
> try new firmware with encryption and let us know if it works correctly,
> thanks!

On my BCM4318 (Linksys WPC54G, Ver 3) in a Cardbus format in a
WPA2-personal encrypted network with AES algorithm, it nearly worked.
With your firmware, it can scan and authenticate. It even gets an
DHCP-supplied IP address; however, I get no data through the link. In
addition, I see lots of PHY TRANSMISSION ERRORS. When I disable
hardware encryption (nohwcrypt=1), then it works.

Great job.

Larry


From mb at bu3sch.de  Wed Jan 14 18:48:21 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 14 Jan 2009 18:48:21 +0100
Subject: [b43] opensource firmware
In-Reply-To: <496E243F.1080500@lwfinger.net>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496E243F.1080500@lwfinger.net>
Message-ID: <200901141848.21574.mb@bu3sch.de>

On Wednesday 14 January 2009 18:43:27 Larry Finger wrote:
> Lorenzo Nava wrote:
> 
> > Today we have also tested a new firmware version that works with
> > WPA2-personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS)
> > (tested on 4306 and 4318 PCI device). If anybody was interested please
> > try new firmware with encryption and let us know if it works correctly,
> > thanks!
> 
> On my BCM4318 (Linksys WPC54G, Ver 3) in a Cardbus format in a
> WPA2-personal encrypted network with AES algorithm, it nearly worked.
> With your firmware, it can scan and authenticate. It even gets an
> DHCP-supplied IP address; however, I get no data through the link. In
> addition, I see lots of PHY TRANSMISSION ERRORS. When I disable
> hardware encryption (nohwcrypt=1), then it works.

Support for hardware crypto would require to reverse engineer the PCM firmware, first.
So we can't support hw-crypto, except on new devices that don't have a PCM anymore.
But these are not rev5 cores :)

-- 
Greetings, Michael.


From johannes at sipsolutions.net  Wed Jan 14 21:45:22 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 14 Jan 2009 21:45:22 +0100
Subject: [b43] opensource firmware
In-Reply-To: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	(sfid-20090114_163057_845343_D172C897)
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	(sfid-20090114_163057_845343_D172C897)
Message-ID: <1231965922.20309.0.camel@johannes>


> Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf

I suggest that before this is packaged, we change it so b43 can
recognise it and automatically disable qos and hwcrypto.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090114/8f93e060/attachment.pgp>

From johannes at sipsolutions.net  Wed Jan 14 21:45:22 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 14 Jan 2009 21:45:22 +0100
Subject: [b43] opensource firmware
In-Reply-To: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	(sfid-20090114_163057_845343_D172C897)
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	(sfid-20090114_163057_845343_D172C897)
Message-ID: <1231965922.20309.0.camel@johannes>


> Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf

I suggest that before this is packaged, we change it so b43 can
recognise it and automatically disable qos and hwcrypto.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090114/8f93e060/attachment-0001.pgp>

From linville at tuxdriver.com  Wed Jan 14 22:09:02 2009
From: linville at tuxdriver.com (John W. Linville)
Date: Wed, 14 Jan 2009 16:09:02 -0500
Subject: [b43] opensource firmware
In-Reply-To: <1231965922.20309.0.camel@johannes>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<1231965922.20309.0.camel@johannes>
Message-ID: <20090114210902.GD3643@tuxdriver.com>

On Wed, Jan 14, 2009 at 09:45:22PM +0100, Johannes Berg wrote:
> 
> > Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf
> 
> I suggest that before this is packaged, we change it so b43 can
> recognise it and automatically disable qos and hwcrypto.

That's a good idea.  Is that simply a driver patch?

John
-- 
John W. Linville		Someday the world will need a hero, and you
linville at tuxdriver.com			might be all we have.  Be ready.


From johannes at sipsolutions.net  Wed Jan 14 22:20:50 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Wed, 14 Jan 2009 22:20:50 +0100
Subject: [b43] opensource firmware
In-Reply-To: <20090114210902.GD3643@tuxdriver.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<1231965922.20309.0.camel@johannes>
	<20090114210902.GD3643@tuxdriver.com>
Message-ID: <1231968050.21021.3.camel@johannes>

On Wed, 2009-01-14 at 16:09 -0500, John W. Linville wrote:
> On Wed, Jan 14, 2009 at 09:45:22PM +0100, Johannes Berg wrote:
> > 
> > > Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf
> > 
> > I suggest that before this is packaged, we change it so b43 can
> > recognise it and automatically disable qos and hwcrypto.
> 
> That's a good idea.  Is that simply a driver patch?

Should be fairly simple, yeah.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090114/fc33c325/attachment.pgp>

From s.L-H at gmx.de  Thu Jan 15 00:22:33 2009
From: s.L-H at gmx.de (Stefan Lippers-Hollmann)
Date: Thu, 15 Jan 2009 00:22:33 +0100
Subject: Support for 16 bit PCMCIA 0x02d0, 0x042d?
Message-ID: <200901150022.35501.s.L-H@gmx.de>

Hi

I recently got hold of an older 16 bit PCMCIA card, which is branded as 
"ADS Tech wireless PCMCIA Card 802.11g (581-150)" and doesn't seem to be 
claimed by b43/ b43legacy. 


$ /sbin/lspcmcia -vv
Socket 0 Bridge:        [yenta_cardbus]         (bus ID: 0000:02:03.0)
        Configuration:  state: on       ready: unknown
                        Voltage: 3.3V Vcc: 3.3V Vpp: 3.3V
--none--
--none--
Socket 0 Device 0:      [-- no driver --]       (bus ID: 0.0)
        Configuration:  state: on
        Product Name:   Broadcom 802.11g PCMCIA 4.3
        Identification: manf_id: 0x02d0 card_id: 0x042d
                        function: 6 (network)
                        prod_id(1): "Broadcom" (0x620c9840)
                        prod_id(2): "802.11g PCMCIA" (0x30f90a13)
                        prod_id(3): "4.3" (0x97b52576)
                        prod_id(4): --- (---)


The PCMCIA ID suggests that it might be a BCM4306 variant, trying to add
this ID to b43 (2.6.28)


--- a/drivers/net/wireless/b43/pcmcia.c
+++ b/drivers/net/wireless/b43/pcmcia.c
@@ -34,6 +34,7 @@
 
 
 static /*const */ struct pcmcia_device_id b43_pcmcia_tbl[] = {
+	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x42d),
 	PCMCIA_DEVICE_MANF_CARD(0x2D0, 0x448),
 	PCMCIA_DEVICE_NULL,
 };


doesn't seem to be sufficient/ succesful (did I eventually miss any 
required SSB addition?) and results in the following dmesg output:


[...]
yenta_cardbus 0000:02:03.0: pcmcia: parent PCI bridge I/O window: 0xa000 - 0xbfff
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xa000-0xbfff: clean.
yenta_cardbus 0000:02:03.0: pcmcia: parent PCI bridge Memory window: 0xd0000000 - 0xdfffffff
yenta_cardbus 0000:02:03.0: pcmcia: parent PCI bridge Memory window: 0x90000000 - 0x9fffffff
pcmcia_socket pcmcia_socket0: pccard: PCMCIA card inserted into slot 0
pcmcia_socket pcmcia_pcmcia 0.0: pcmcia: registering new device pcmcia0.0
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x100-0x3af: excluding 0x230-0x237
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x3e0-0x4ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x820-0x8ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xc00-0xcf7: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xa00-0xaff: clean.
socket0: cs: memory probe 0xd0000000-0xdfffffff: excluding 0xd0000000-0xd07fffff 0xd4000000-0xd7ffffff
[...]
ssb: Failed to switch to core 0
b43-pcmcia: Initialization failed (0, -110)
b43-pcmcia: probe of 0.0 failed with error -110
Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
ssb: Failed to switch to core 0
b43-pcmcia: Initialization failed (0, -110)
b43-pcmcia: probe of 0.0 failed with error -110
[...]


Is there a chance to add support for this kind of device?

Regards
	Stefan Lippers-Hollmann

-- 
I'm sorry if you receive this mail twice, I already sent this mail at the 
4th of january, but it didn't appear in the mailing list archive yet (most 
likely because I wasn't subscribed at that time).


From dreamfly281 at gmail.com  Thu Jan 15 02:48:08 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Thu, 15 Jan 2009 09:48:08 +0800
Subject: [RFC 7/7] B43N: Add the tx gain table of different version.
In-Reply-To: <1231929038.3730.10.camel@johannes>
References: <1197ff4c0901132359q216b60e4oa60ef2268667ae05@mail.gmail.com>
	<1231929038.3730.10.camel@johannes>
Message-ID: <1197ff4c0901141748p737f7d2cg8b23e060af3e2a7e@mail.gmail.com>

On Wed, Jan 14, 2009 at 6:30 PM, Johannes Berg
<johannes at sipsolutions.net> wrote:
> On Wed, 2009-01-14 at 15:59 +0800, YanBo wrote:
>> Add the tx gain table
>>
>> Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
>> ---
>>  drivers/net/wireless/b43/tables_nphy.c |  110 ++++++++++++++++++++++++++++++++
>>  drivers/net/wireless/b43/tables_nphy.h |    3 +-
>>  2 files changed, 112 insertions(+), 1 deletions(-)
>>
>> diff --git a/drivers/net/wireless/b43/tables_nphy.c
>> b/drivers/net/wireless/b43/tables_nphy.c
>> index 4e23363..a6e3d2b 100644
>> --- a/drivers/net/wireless/b43/tables_nphy.c
>> +++ b/drivers/net/wireless/b43/tables_nphy.c
>> @@ -27,6 +27,116 @@
>>  #include "phy_common.h"
>>  #include "phy_n.h"
>>
>> +const u32 b43_ntab_txgain[][B43_NPHY_TXGAIN] = {
>
>> +     }, /* rev <= 2 */
>> +     {
>
> I think you should give these different names, rather than sub-indexing
> in that array.
>

Yes, they has been assigned  difference names. like below
+enum  b43_nphy_txgain_type {
+       REV_LE2 = 0,            /* rev <= 2 */
+       REV_GE3_2G,             /* rev >= 3 (2.4 GHz) */
+       REV_E3_5G,              /* rev 3 (5 GHz) */
+       REV_GE4_5G,             /* rev >= 4 (5 GHz) */
+};
But above code was split into patch 4/7 by my mistake.


From dreamfly281 at gmail.com  Thu Jan 15 02:56:04 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Thu, 15 Jan 2009 09:56:04 +0800
Subject: [RFC 4/7] B43N: Add TX power control and gain get function
In-Reply-To: <1231929184.3730.14.camel@johannes>
References: <1197ff4c0901132358icebf1efwae543d2dd8fb06c7@mail.gmail.com>
	<1231929184.3730.14.camel@johannes>
Message-ID: <1197ff4c0901141756y65ce00devddc5ab5a0244cfad@mail.gmail.com>

On Wed, Jan 14, 2009 at 6:33 PM, Johannes Berg
<johannes at sipsolutions.net> wrote:
> On Wed, 2009-01-14 at 15:58 +0800, YanBo wrote:
>> Three functions about tx power control
>>  b43_nphy_tx_power_fix() b43_nphy_tx_power_coeff_set()
>> b43_nphy_tx_power_type_set()
>> but remain lots of TODO cause not very clearly understand the SPECS
>>
>> Signed-off-by: Li YanBo <dreamfly281 at gmail.com>
>> ---
>>  drivers/net/wireless/b43/phy_n.c |  195 +++++++++++++++++++++++++++++++++++++-
>>  1 files changed, 194 insertions(+), 1 deletions(-)
>>
>> diff --git a/drivers/net/wireless/b43/phy_n.c b/drivers/net/wireless/b43/phy_n.c
>> index 586e774..1330309 100644
>> --- a/drivers/net/wireless/b43/phy_n.c
>> +++ b/drivers/net/wireless/b43/phy_n.c
>> @@ -82,9 +82,183 @@ static void b43_chantab_phy_upload(struct b43_wldev *dev,
>>       b43_phy_write(dev, B43_NPHY_BW6, e->phy_bw6);
>>  }
>>
>> +enum b43_nphy_txpid {
>> +     B43_N_5G_MEDIUM_FREQ = 0,
>> +     B43_N_5G_LOW_FREQ,
>> +     B43_N_5G_HIGH_FREQ,
>> +     B43_N_2G_FREQ,
>> +     /* Attent: currently we just using 2 txpid */
>> +     B43_N_TXPID_MAX = 2,
>> +};
>
>> +     u32 txpid[B43_N_TXPID_MAX];
>> +     int i;
>> +
>> +     if (nphy->havoid)
>> +             b43_nphy_stay_carrier_search_enable(dev);
>> +
>> +     if (sprom->revision < 4)
>> +             txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x48;
>
> 2, 3? This is a little odd. As I say on the wiki, "The txpid values are
> two values, one for each radio core."
>
but why in the specs, it also mentioned txpid5ga, txpid5gl, txpid5gah
and txpid2g, is the three 5g value is just one value in fact? a bit
confuse?

> So you should do that B43_N_MAX_CORES == 2.
>
>> +     else {
>> +             /* TODO */
>> +/*           if  (medium freq range, 5100..5499 mhz) */
>> +/*                   txpid[B43_N_5G_MEDIUM_FREQ] = ; */
>> +/*                   Use the txpid5ga values from the SPROM in the loop below; */
>> +/*           if  (low freq range, 4900..5099 mhz) */
>> +/*                   txpid[B43_N_5G_LOW_FREQ] = ; */
>> +/*                   Use the txpid5gal values from the SPROM in the loop below; */
>> +/*           if (high freq range, 5500.. mhz) */
>> +/*                   txpid[B43_N_5G_HIGH_FREQ] = ; */
>> +/*                   Use the txpid5gah values from the SPROM in the loop below; */
>> +/*           if  (2.4 GHz) */
>> +/*                   txpid[B43_N_2G_FREQ] = ; */
>> +/*                   Use the txpid2g values from the SPROM in the loop below; */
>> +     }
>> +     if (phy->rev >= 3)
>> +             txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x28;
>> +
>> +     for (i = 0; i < B43_N_TXPID_MAX; i++) {
>
> So, this loop just sets up the tx power for each radio core.
>
Yanbo


From dreamfly281 at gmail.com  Thu Jan 15 02:59:57 2009
From: dreamfly281 at gmail.com (YanBo)
Date: Thu, 15 Jan 2009 09:59:57 +0800
Subject: [RFC 1/7]B43N: Update the initn process following the new specs.
In-Reply-To: <200901141640.49233.mb@bu3sch.de>
References: <1197ff4c0901132315q67862e86xd0d4ec4a829fc8f5@mail.gmail.com>
	<200901141640.49233.mb@bu3sch.de>
Message-ID: <1197ff4c0901141759w11b645e6o62ed088f0c8a717e@mail.gmail.com>

On Wed, Jan 14, 2009 at 11:40 PM, Michael Buesch <mb at bu3sch.de> wrote:
> On Wednesday 14 January 2009 08:15:37 YanBo wrote:
> [snip]
>
> You can add
> Acked-by: Michael Buesch <mb at bu3sch.de>
> to all of these patches, after fixing the issues Johannes reported.
> Please send them directly to John afterwards and CC me.
>
No problem :)

BR
Yanbo


From _vi at list.ru  Thu Jan 15 04:35:10 2009
From: _vi at list.ru (_vi at list.ru)
Date: Thu, 15 Jan 2009 05:35:10 +0200
Subject: LED on BCM4311 on Acer Extensa 5220
Message-ID: <496EAEEE.5090801@list.ru>

(Previous message failed)

The Wi-Fi status LED on Acer Extensa 5220 works incorrectly.
When using b43, it is turned on only if radio is disabled.
When using ndiswrapper, it is blinking when disconnected, on when
connected and rapidly flashes when information is being sent or received.

When "/sys/class/leds/b43-phy0::radio/brightness" is set to 0, the LED
is turned on. When it is 1 to 255, the LED is off.

vi-notebook:/sys/class/leds/b43-phy0::radio# cat trigger
none ide-disk rfkill0 ADP1-online BAT0-charging-or-full BAT0-charging
BAT0-full mmc0 phy0rx phy0tx phy0assoc phy0radio [rfkill4]

If I set "/sys/class/leds/b43-phy0::radio/trigger" to "phy0rx", LED will
be turned on and off on every received packet (brightness will
alternate: first 0, then 255, then 0 and so on)

There are also b43-phy0::rx and b43-phy0::tx, but they have no physical
implementation on my device.

Should LEDs be controlled from userspace script? How to receive that
"phy0rx" and "phy0tx" events from userspace?

The following one-liner will give LED flashing similar to original:
for((;;)) { sleep 0.1; ifconfig wlan0 | perl -ne '/TX packets:(\d+)/ and
print "$1\n"'; } | perl -e '$q=0; $|=1; while(<>){ print "255\n" and
(select(undef,undef,undef,0.05) or 1) and print "0\n" and $q=$_ if
$_>$q; }' > /sys/class/leds/b43-phy0\:\:radio/brightness





From navalorenx at gmail.com  Thu Jan 15 10:10:00 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Thu, 15 Jan 2009 10:10:00 +0100
Subject: [b43] opensource firmware
In-Reply-To: <496E243F.1080500@lwfinger.net>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496E243F.1080500@lwfinger.net>
Message-ID: <41960ccf0901150110l754e5b83sb85d03d43f2927b9@mail.gmail.com>

2009/1/14 Larry Finger <Larry.Finger at lwfinger.net>:
> Lorenzo Nava wrote:
>
>> Today we have also tested a new firmware version that works with
>> WPA2-personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS)
>> (tested on 4306 and 4318 PCI device). If anybody was interested please
>> try new firmware with encryption and let us know if it works correctly,
>> thanks!
>
> On my BCM4318 (Linksys WPC54G, Ver 3) in a Cardbus format in a
> WPA2-personal encrypted network with AES algorithm, it nearly worked.
> With your firmware, it can scan and authenticate. It even gets an
> DHCP-supplied IP address; however, I get no data through the link. In
> addition, I see lots of PHY TRANSMISSION ERRORS. When I disable
> hardware encryption (nohwcrypt=1), then it works.

Yes, you're right. Actually there are 2 ways to make firmware works:

1) Disable hw crypto with module parameter
2) Remove pcm5.fw from your /lib/firmware/b43 directory

When I run the firmware I never include pcm5.fw file. The only
initvals really necessary are b0g0bsinitvals.fw and b0g0bsinitvals.fw.

cheers

Lorenzo
>
> Great job.
>
> Larry
>


From johannes at sipsolutions.net  Thu Jan 15 10:37:00 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 15 Jan 2009 10:37:00 +0100
Subject: [RFC 4/7] B43N: Add TX power control and gain get function
In-Reply-To: <1197ff4c0901141756y65ce00devddc5ab5a0244cfad@mail.gmail.com>
	(sfid-20090115_025607_053923_5A0E8767)
References: <1197ff4c0901132358icebf1efwae543d2dd8fb06c7@mail.gmail.com>
	<1231929184.3730.14.camel@johannes>
	<1197ff4c0901141756y65ce00devddc5ab5a0244cfad@mail.gmail.com>
	(sfid-20090115_025607_053923_5A0E8767)
Message-ID: <1232012220.4007.3.camel@johannes>

On Thu, 2009-01-15 at 09:56 +0800, YanBo wrote:

> >> +     if (sprom->revision < 4)
> >> +             txpid[0] = txpid[1] = txpid[2] = txpid[3] = 0x48;
> >
> > 2, 3? This is a little odd. As I say on the wiki, "The txpid values are
> > two values, one for each radio core."
> >
> but why in the specs, it also mentioned txpid5ga, txpid5gl, txpid5gah
> and txpid2g, is the three 5g value is just one value in fact? a bit
> confuse?

No, each of those txpid5ga ... consists of _two_ values, one for each
core, that you are supposed to use in that case.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090115/df4c53e3/attachment.pgp>

From johannes at sipsolutions.net  Thu Jan 15 10:37:30 2009
From: johannes at sipsolutions.net (Johannes Berg)
Date: Thu, 15 Jan 2009 10:37:30 +0100
Subject: [RFC 7/7] B43N: Add the tx gain table of different version.
In-Reply-To: <1197ff4c0901141748p737f7d2cg8b23e060af3e2a7e@mail.gmail.com>
	(sfid-20090115_024810_839356_7691E13B)
References: <1197ff4c0901132359q216b60e4oa60ef2268667ae05@mail.gmail.com>
	<1231929038.3730.10.camel@johannes>
	<1197ff4c0901141748p737f7d2cg8b23e060af3e2a7e@mail.gmail.com>
	(sfid-20090115_024810_839356_7691E13B)
Message-ID: <1232012250.4007.5.camel@johannes>

On Thu, 2009-01-15 at 09:48 +0800, YanBo wrote:

> > I think you should give these different names, rather than sub-indexing
> > in that array.
> >
> 
> Yes, they has been assigned  difference names. like below
> +enum  b43_nphy_txgain_type {
> +       REV_LE2 = 0,            /* rev <= 2 */
> +       REV_GE3_2G,             /* rev >= 3 (2.4 GHz) */
> +       REV_E3_5G,              /* rev 3 (5 GHz) */
> +       REV_GE4_5G,             /* rev >= 4 (5 GHz) */
> +};
> But above code was split into patch 4/7 by my mistake.

Yes, but I think you should give them names, not just named array
indexes.

johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090115/a4114fb0/attachment.pgp>

From navalorenx at gmail.com  Thu Jan 15 11:20:17 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Thu, 15 Jan 2009 11:20:17 +0100
Subject: [b43] opensource firmware
In-Reply-To: <496F05D2.9000501@wetwork.net>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496E243F.1080500@lwfinger.net>
	<41960ccf0901150110l754e5b83sb85d03d43f2927b9@mail.gmail.com>
	<496F05D2.9000501@wetwork.net>
Message-ID: <41960ccf0901150220u383f3d3fr4981bf7efc3e18de@mail.gmail.com>

> Pardon me, but those filenames are identical and contain no numbers.  Did
> those get stripped off somewhere?
>>

I did a mistake. The correct name are b0g0bsinitvals5.fw and
b0g0initvals5.fw for revision 5.

Sorry

Cheers

Lorenzo


From gavron at wetwork.net  Thu Jan 15 10:45:54 2009
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Thu, 15 Jan 2009 02:45:54 -0700
Subject: [b43] opensource firmware
In-Reply-To: <41960ccf0901150110l754e5b83sb85d03d43f2927b9@mail.gmail.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496E243F.1080500@lwfinger.net>
	<41960ccf0901150110l754e5b83sb85d03d43f2927b9@mail.gmail.com>
Message-ID: <496F05D2.9000501@wetwork.net>



Lorenzo Nava wrote:
> Yes, you're right. Actually there are 2 ways to make firmware works:
> 1) Disable hw crypto with module parameter
> 2) Remove pcm5.fw from your /lib/firmware/b43 directory
>
> When I run the firmware I never include pcm5.fw file. The only
> initvals really necessary are b0g0bsinitvals.fw and b0g0bsinitvals.fw.
>   
Pardon me, but those filenames are identical and contain no numbers.  
Did those get stripped off somewhere?
> cheers
>
> Lorenzo
>   
Larry Finger had written:
>> Great job.
>>
>> Larry
>>
>>     
Absolutely!!!!!!!! 

Ehud

-- 
Legal Disclaimer that you are now contractually bound to under all laws with no recourse:
http://attrition.org/security/rants/z/disclaimers.html



From mb at bu3sch.de  Thu Jan 15 16:37:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Jan 2009 16:37:57 +0100
Subject: [b43] opensource firmware
In-Reply-To: <1231965922.20309.0.camel@johannes>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<1231965922.20309.0.camel@johannes>
Message-ID: <200901151637.58196.mb@bu3sch.de>

On Wednesday 14 January 2009 21:45:22 Johannes Berg wrote:
> 
> > Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf
> 
> I suggest that before this is packaged, we change it so b43 can
> recognise it and automatically disable qos and hwcrypto.

Yes, please introduce a feature-bitfield at some location in SHM that's unused
by the proprietary firmware. This bitfields would contain a bit for QoS and
a bit for hwcrypto.
Also change your firmware so the driver detects it as open-source firmware.
I think that's done by writing 0xFFFF to the date/time field in SHM. I don't
quite remember, but it's something like that.
Note that this might mean that the firmware watchdog in the driver will trigger,
as that's enabled by the open-source-firmware-flag. We might want to temporarly
disable the watchdog in the driver for the time being.

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Jan 15 16:39:48 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Jan 2009 16:39:48 +0100
Subject: Support for 16 bit PCMCIA 0x02d0, 0x042d?
In-Reply-To: <200901150022.35501.s.L-H@gmx.de>
References: <200901150022.35501.s.L-H@gmx.de>
Message-ID: <200901151639.48206.mb@bu3sch.de>

On Thursday 15 January 2009 00:22:33 Stefan Lippers-Hollmann wrote:
> Is there a chance to add support for this kind of device?

I think you're on your own. Nobody else does have such a device
and remote-debugging is basically impossible for this.

-- 
Greetings, Michael.


From mb at bu3sch.de  Thu Jan 15 16:44:13 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Jan 2009 16:44:13 +0100
Subject: [b43] opensource firmware
In-Reply-To: <200901151637.58196.mb@bu3sch.de>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<1231965922.20309.0.camel@johannes>
	<200901151637.58196.mb@bu3sch.de>
Message-ID: <200901151644.13606.mb@bu3sch.de>

On Thursday 15 January 2009 16:37:57 Michael Buesch wrote:
> On Wednesday 14 January 2009 21:45:22 Johannes Berg wrote:
> > 
> > > Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf
> > 
> > I suggest that before this is packaged, we change it so b43 can
> > recognise it and automatically disable qos and hwcrypto.
> 
> Yes, please introduce a feature-bitfield at some location in SHM that's unused
> by the proprietary firmware. This bitfields would contain a bit for QoS and
> a bit for hwcrypto.
> Also change your firmware so the driver detects it as open-source firmware.
> I think that's done by writing 0xFFFF to the date/time field in SHM. I don't
> quite remember, but it's something like that.
> Note that this might mean that the firmware watchdog in the driver will trigger,
> as that's enabled by the open-source-firmware-flag. We might want to temporarly
> disable the watchdog in the driver for the time being.
> 

Ah and also note that hwcrypto is already automagically disabled, if the driver
detects an opensource-firmware.
To make the driver detect the firmware as opensource, write 0xFFFF to SHM_UCODEDATE

You need to disable the watchdog in b43_periodic_every15sec(), if you don't implement
the watchdog mechanism in your firmware. But it's pretty easy to implement.
It just has to write 0 to some register in the MAC loop. Of course, the register has
to be unused in the rest of the code.

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Thu Jan 15 16:59:11 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 15 Jan 2009 09:59:11 -0600
Subject: [b43] opensource firmware
In-Reply-To: <200901151637.58196.mb@bu3sch.de>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>	<1231965922.20309.0.camel@johannes>
	<200901151637.58196.mb@bu3sch.de>
Message-ID: <496F5D4F.3020805@lwfinger.net>

Michael Buesch wrote:
> Yes, please introduce a feature-bitfield at some location in SHM that's unused
> by the proprietary firmware. This bitfields would contain a bit for QoS and
> a bit for hwcrypto.
> Also change your firmware so the driver detects it as open-source firmware.
> I think that's done by writing 0xFFFF to the date/time field in SHM. I don't
> quite remember, but it's something like that.
> Note that this might mean that the firmware watchdog in the driver will trigger,
> as that's enabled by the open-source-firmware-flag. We might want to temporarly
> disable the watchdog in the driver for the time being.

I like the idea of encoding the capabilities in the firmware as it
would be a self-documenting method as the firmware evolves.

Is using the Broadcom names for the firmware the best course of
action? What if the opensource firmware files were named something
like "os-ucode5.fw", etc. and b43 were coded to check for those files
first? It would then fall back to the standard firmware if the
opensource version is not found.

Larry



From mb at bu3sch.de  Thu Jan 15 17:09:49 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Jan 2009 17:09:49 +0100
Subject: [b43] opensource firmware
In-Reply-To: <496F5D4F.3020805@lwfinger.net>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<200901151637.58196.mb@bu3sch.de> <496F5D4F.3020805@lwfinger.net>
Message-ID: <200901151709.49811.mb@bu3sch.de>

On Thursday 15 January 2009 16:59:11 Larry Finger wrote:
> Michael Buesch wrote:
> > Yes, please introduce a feature-bitfield at some location in SHM that's unused
> > by the proprietary firmware. This bitfields would contain a bit for QoS and
> > a bit for hwcrypto.
> > Also change your firmware so the driver detects it as open-source firmware.
> > I think that's done by writing 0xFFFF to the date/time field in SHM. I don't
> > quite remember, but it's something like that.
> > Note that this might mean that the firmware watchdog in the driver will trigger,
> > as that's enabled by the open-source-firmware-flag. We might want to temporarly
> > disable the watchdog in the driver for the time being.
> 
> I like the idea of encoding the capabilities in the firmware as it
> would be a self-documenting method as the firmware evolves.
> 
> Is using the Broadcom names for the firmware the best course of
> action? What if the opensource firmware files were named something
> like "os-ucode5.fw", etc. and b43 were coded to check for those files
> first? It would then fall back to the standard firmware if the
> opensource version is not found.

Already implemented here:
http://bu3sch.de/patches/wireless-testing/20081227-1821/patches/008-b43-probe-open-fw.patch
I just need to fix a leak in an error path before pushing that upstream.

-- 
Greetings, Michael.


From s.L-H at gmx.de  Thu Jan 15 18:59:46 2009
From: s.L-H at gmx.de (Stefan Lippers-Hollmann)
Date: Thu, 15 Jan 2009 18:59:46 +0100
Subject: Support for 16 bit PCMCIA 0x02d0, 0x042d?
In-Reply-To: <200901151639.48206.mb@bu3sch.de>
References: <200901150022.35501.s.L-H@gmx.de> <200901151639.48206.mb@bu3sch.de>
Message-ID: <200901151859.48157.s.L-H@gmx.de>

Hi

On Donnerstag, 15. Januar 2009, Michael Buesch wrote:
> On Thursday 15 January 2009 00:22:33 Stefan Lippers-Hollmann wrote:
> > Is there a chance to add support for this kind of device?
> 
> I think you're on your own. Nobody else does have such a device
> and remote-debugging is basically impossible for this.

Thanks, I just hoped to have missed anything obvious in regards to the ID 
registration and ssb. I'll see what (or if) I can do (anything) about it.

Regards
	Stefan Lippers-Hollmann


From mb at bu3sch.de  Thu Jan 15 19:25:51 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 15 Jan 2009 19:25:51 +0100
Subject: Support for 16 bit PCMCIA 0x02d0, 0x042d?
In-Reply-To: <200901151859.48157.s.L-H@gmx.de>
References: <200901150022.35501.s.L-H@gmx.de> <200901151639.48206.mb@bu3sch.de>
	<200901151859.48157.s.L-H@gmx.de>
Message-ID: <200901151925.51805.mb@bu3sch.de>

On Thursday 15 January 2009 18:59:46 Stefan Lippers-Hollmann wrote:
> Hi
> 
> On Donnerstag, 15. Januar 2009, Michael Buesch wrote:
> > On Thursday 15 January 2009 00:22:33 Stefan Lippers-Hollmann wrote:
> > > Is there a chance to add support for this kind of device?
> > 
> > I think you're on your own. Nobody else does have such a device
> > and remote-debugging is basically impossible for this.
> 
> Thanks, I just hoped to have missed anything obvious in regards to the ID 
> registration and ssb.

Well, no. There's no known bug.
But the PCMCIA core API is just crap. I had to fight with all those undocumented
flags for a long time to get my card working. There might be some flag needed (or not)
by your card that we don't set/clear, yet.
SSB failing to switch the core indicates a very basic problem with the PCMCIA setup, because
the coreswitch is the most basic and very first operation we do on the device.
It's also done through PCMCIA config space registers, so it indicates your config space
is not accessible. Which is a core failure.
So I _guess_ it could probably be a bug somewhere in drivers/net/wireless/b43/pcmcia.c.
However, of course, it can be everywhere. This file is just where I had the major problems
to get the thing running.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Fri Jan 16 00:01:41 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 16 Jan 2009 00:01:41 +0100
Subject: [b43] opensource firmware
In-Reply-To: <496F5D4F.3020805@lwfinger.net>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>	<1231965922.20309.0.camel@johannes>
	<200901151637.58196.mb@bu3sch.de> <496F5D4F.3020805@lwfinger.net>
Message-ID: <65BB63A7-75ED-464D-AD81-E34F3AD560BE@ing.unibs.it>

On Jan 15, 2009, at 4:59 PM, Larry Finger wrote:

> Michael Buesch wrote:
>> Yes, please introduce a feature-bitfield at some location in SHM  
>> that's unused
>> by the proprietary firmware. This bitfields would contain a bit for  
>> QoS and
>> a bit for hwcrypto.
>> Also change your firmware so the driver detects it as open-source  
>> firmware.
>> I think that's done by writing 0xFFFF to the date/time field in  
>> SHM. I don't
>> quite remember, but it's something like that.
>> Note that this might mean that the firmware watchdog in the driver  
>> will trigger,
>> as that's enabled by the open-source-firmware-flag. We might want  
>> to temporarly
>> disable the watchdog in the driver for the time being.
>
> I like the idea of encoding the capabilities in the firmware as it
> would be a self-documenting method as the firmware evolves.
>
> Is using the Broadcom names for the firmware the best course of
> action? What if the opensource firmware files were named something
> like "os-ucode5.fw", etc. and b43 were coded to check for those files
> first? It would then fall back to the standard firmware if the
> opensource version is not found.
>
> Larry
It could be interesting to also not separate the initvalues in two  
different files, everything could be coded in a single file. Never  
understood why original init values are split in two files.

Michael: SHM(0x0014) (16bit) is not used by the open source firmware,  
I know the b43 reads core revision from SHM(0x0016). Normally  
SHM(0x0014) is set to zero. We can put fw capabilities here (0x0014),  
e.g.:

- bit 0: [0 state that encryption should be handled by b43]
- bit 1: [0 state that qos is not supported]

We can prepare a firmware image with such feature + watchdog. Posting  
ASAP with new initvals (less values).

A question: is the standard kernel aware that date set to FFFF  
indicates an opensource firmware or some define should be activated on  
compilation?

Cheers,
-FG


From francesco.gringoli at ing.unibs.it  Fri Jan 16 00:09:47 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 16 Jan 2009 00:09:47 +0100
Subject: LED on BCM4311 on Acer Extensa 5220
In-Reply-To: <496EAEEE.5090801@list.ru>
References: <496EAEEE.5090801@list.ru>
Message-ID: <511FC15D-EA22-4F10-BB65-93F0F9FBA521@ing.unibs.it>

On Jan 15, 2009, at 4:35 AM, _vi at list.ru wrote:

> (Previous message failed)
>
> The Wi-Fi status LED on Acer Extensa 5220 works incorrectly.
> When using b43, it is turned on only if radio is disabled.
> When using ndiswrapper, it is blinking when disconnected, on when
> connected and rapidly flashes when information is being sent or  
> received.
>
> When "/sys/class/leds/b43-phy0::radio/brightness" is set to 0, the LED
> is turned on. When it is 1 to 255, the LED is off.
>
> vi-notebook:/sys/class/leds/b43-phy0::radio# cat trigger
> none ide-disk rfkill0 ADP1-online BAT0-charging-or-full BAT0-charging
> BAT0-full mmc0 phy0rx phy0tx phy0assoc phy0radio [rfkill4]

> [cut]

I was wondering if offloading led handling to firmware could be a  
positive feature or it is better practice to handle blinking on the  
host side. Really I do not know: however if needed, the feature can be  
easily added.

Cheers,
-FG




From mb at bu3sch.de  Fri Jan 16 16:12:23 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 16 Jan 2009 16:12:23 +0100
Subject: [b43] opensource firmware
In-Reply-To: <65BB63A7-75ED-464D-AD81-E34F3AD560BE@ing.unibs.it>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496F5D4F.3020805@lwfinger.net>
	<65BB63A7-75ED-464D-AD81-E34F3AD560BE@ing.unibs.it>
Message-ID: <200901161612.24288.mb@bu3sch.de>

On Friday 16 January 2009 00:01:41 Francesco Gringoli wrote:
> On Jan 15, 2009, at 4:59 PM, Larry Finger wrote:
> 
> > Michael Buesch wrote:
> >> Yes, please introduce a feature-bitfield at some location in SHM  
> >> that's unused
> >> by the proprietary firmware. This bitfields would contain a bit for  
> >> QoS and
> >> a bit for hwcrypto.
> >> Also change your firmware so the driver detects it as open-source  
> >> firmware.
> >> I think that's done by writing 0xFFFF to the date/time field in  
> >> SHM. I don't
> >> quite remember, but it's something like that.
> >> Note that this might mean that the firmware watchdog in the driver  
> >> will trigger,
> >> as that's enabled by the open-source-firmware-flag. We might want  
> >> to temporarly
> >> disable the watchdog in the driver for the time being.
> >
> > I like the idea of encoding the capabilities in the firmware as it
> > would be a self-documenting method as the firmware evolves.
> >
> > Is using the Broadcom names for the firmware the best course of
> > action? What if the opensource firmware files were named something
> > like "os-ucode5.fw", etc. and b43 were coded to check for those files
> > first? It would then fall back to the standard firmware if the
> > opensource version is not found.
> >
> > Larry
> It could be interesting to also not separate the initvalues in two  
> different files, everything could be coded in a single file. Never  
> understood why original init values are split in two files.

The normal initvalues have to be uploaded at init and the bandswitch init
values have to be uploaded on bandswitch. That's a different thing.
We currently implement bandswitch by re-initing, but that doesn't matter. We could
easily change that in future.
So don't put the initvals into one file.

> Michael: SHM(0x0014) (16bit) is not used by the open source firmware,  

Eh no. You need to find an offset that's not used by the PROPRIETARY firmware.

> A question: is the standard kernel aware that date set to FFFF  
> indicates an opensource firmware 

Yes.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jan 16 16:15:42 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 16 Jan 2009 16:15:42 +0100
Subject: [b43] opensource firmware
In-Reply-To: <20090115231743.GC7488@bombadil.infradead.org>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<200901151709.49811.mb@bu3sch.de>
	<20090115231743.GC7488@bombadil.infradead.org>
Message-ID: <200901161615.42546.mb@bu3sch.de>

On Friday 16 January 2009 00:17:43 Kyle McMartin wrote:
> On Thu, Jan 15, 2009 at 05:09:49PM +0100, Michael Buesch wrote:
> > Already implemented here:
> > http://bu3sch.de/patches/wireless-testing/20081227-1821/patches/008-b43-probe-open-fw.patch
> > I just need to fix a leak in an error path before pushing that upstream.
> > 
> 
> Groovy, I had cooked a similar patch for Fedora but haven't gotten
> around to packaging up the fw yet. Will sub in yours.

I think we can actually push my patch upstream. The remaining FIXME is not relevant
for the common case and it only matters in rare circumstances (I think A-PHY only, which
isn't implemented anyway). So we can fix it later.
The patch should work properly as-is for G/N/LP-PHY.

It probably needs a rediff against a current b43, however.

-- 
Greetings, Michael.


From fourdan at gmail.com  Fri Jan 16 21:52:40 2009
From: fourdan at gmail.com (Olivier Fourdan)
Date: Fri, 16 Jan 2009 20:52:40 +0000
Subject: Very poor performances with bcm4306 rev. 3
In-Reply-To: <60f2b0dc0812220547x77fbba6fq1df5d0a2510c7f06@mail.gmail.com>
References: <60f2b0dc0812220547x77fbba6fq1df5d0a2510c7f06@mail.gmail.com>
Message-ID: <60f2b0dc0901161252t2413f41evb2d41f162d61e4e0@mail.gmail.com>

Hi,

It seems that I have not received any reply to my original post, so
I'm trying again ;-)

On Mon, Dec 22, 2008 at 1:47 PM, Olivier Fourdan <fourdan at gmail.com> wrote:
> I am experiencing very poor network performance using the b34 module
> with a Broadcom BCM4306 revision 3 (the system is a Compaq HP R3000
> laptop)
>
> The download transfer rate goes from a few bytes to 20Kb/s at max
> whereas it commonly reached 200Kb under Windows or on the other
> laptops in the hose (using Intel chipset under Linux, for example).
> The connection is so unstable that it's causing timeouts during wget
> downloads, and makes that system under Linux basically unusable...
>
> The problem is not exactly new and apparently been reported several
> times on various forums (mostly Ubuntu) though the problem is not
> distro specific (I switched from Ubuntu to Fedora, from x86_64 to i386
> and the problem remains). I checked in the archives and found some
> similar problems but no solution.
>
> The connection is using basic WEP encryption, wpa_supplicant involved.

It should read *no* wpa_supplicant involved

> The router is a Netgear WGR614 v7.
>
>  * uname -a
>  Linux r3000 2.6.27.7-134.fc10.i686 #1 SMP Mon Dec 1 22:42:50 EST
> 2008 i686 athlon i386 GNU/Linux
>
>  * lspci -vvn|grep 43 -A7
> 02:02.0 0280: 14e4:4320 (rev 03)
>       Subsystem: 103c:12fa
>       Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
> Stepping- SERR+ FastB2B- DisINTx-
>       Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort-
> <TAbort- <MAbort- >SERR- <PERR- INTx-
>       Latency: 64
>       Interrupt: pin A routed to IRQ 17
>       Region 0: Memory at e0104000 (32-bit, non-prefetchable) [size=8K]
>       Kernel driver in use: b43-pci-bridge
>       Kernel modules: ssb
>
> 02:04.0 0607: 104c:ac54 (rev 01)
>       Subsystem: 103c:006d
>       Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
> Stepping- SERR- FastB2B- DisINTx-
>       Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort-
> <TAbort- <MAbort- >SERR- <PERR- INTx-
>       Latency: 168, Cache Line Size: 128 bytes
>
>  * dmesg
>  (attached)

I should add that I can do testing as needed or report any missing information.

I've tried disabling various options (starting with qos) w/out any
noticeable improvement unfortunately.

Any idea?

Thanks in advance,
Olivier.


From francesco.gringoli at ing.unibs.it  Wed Jan 21 18:29:40 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Wed, 21 Jan 2009 18:29:40 +0100
Subject: [b43] opensource firmware
In-Reply-To: <200901161612.24288.mb@bu3sch.de>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<496F5D4F.3020805@lwfinger.net>
	<65BB63A7-75ED-464D-AD81-E34F3AD560BE@ing.unibs.it>
	<200901161612.24288.mb@bu3sch.de>
Message-ID: <FBC507F3-1CD3-4AD7-9A6D-4D61A5B63DF0@ing.unibs.it>

Hello everyone,

we just made available a new opensource firmware version, download at http://www.ing.unibs.it/openfwwf

New features:
- initvals source code added, initvals files are encoded by make process
- firmware is now recognized as opensource, though still as version  
351 (old format). Firmware's date switched to FFFF
- watchdog implemented

Tested with kernel 2.6.29-rc2-wl.

Cheers,
-FG


From mb at bu3sch.de  Wed Jan 21 18:36:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Wed, 21 Jan 2009 18:36:03 +0100
Subject: [b43] opensource firmware
In-Reply-To: <FBC507F3-1CD3-4AD7-9A6D-4D61A5B63DF0@ing.unibs.it>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
	<200901161612.24288.mb@bu3sch.de>
	<FBC507F3-1CD3-4AD7-9A6D-4D61A5B63DF0@ing.unibs.it>
Message-ID: <200901211836.04281.mb@bu3sch.de>

On Wednesday 21 January 2009 18:29:40 Francesco Gringoli wrote:
> Hello everyone,
> 
> we just made available a new opensource firmware version, download at http://www.ing.unibs.it/openfwwf
> 
> New features:
> - initvals source code added, initvals files are encoded by make process
> - firmware is now recognized as opensource, though still as version  
> 351 (old format). Firmware's date switched to FFFF
> - watchdog implemented

Note that the debug-IRQ feature is now also available to you.
It enables you to panic, dump SHM, dump regs and print a marker message
from within the firmware. See my openfw repository and handle_irq_ucode_debug() in b43 for details.
Note that the debug-IRQ is synchronous, so it will disturb MAC functionality.
But you only want to use it for debugging anyway. And for debugging it is _very_ convenient
to be able to issue printks and memory dumps from within the firmware code.

-- 
Greetings, Michael.


From nate.lally at gmail.com  Thu Jan 22 06:13:21 2009
From: nate.lally at gmail.com (Nate Lally)
Date: Thu, 22 Jan 2009 00:13:21 -0500
Subject: bcm4311 who likes to disassociate (yet associates just fine using
	knoppix)
Message-ID: <578ff7cb0901212113i73bc8113g36eb18116407ec81@mail.gmail.com>

Hello,
  I didn't actually subscribe to the bcm43 mailing list so I'm not
quite sure if anyone actually received the prior emails.  Nor am I
convinced it is actually the domain of those working on the b43
firmware considering the fact that the exact same kernel compile and
modprobe configs are being used on the non-working ubuntu distribution
yet associate just fine while booting knoppix under the below
circumstances.

Any help/direction would be appreciated.

-Nate Lally

On 1/8/09, Nate Lally <nate.lally at gmail.com> wrote:
> An inspiring new development.  I boot the laptop with knoppix 5.3.1
> utilizing kernel version 2.6.24.4, I mount the firmware for bcm43xx @ 2.6.24
> on /lib/firmware and discover not only can I associate, I can utilize wep
> and pull an ip.  From there I copy the /boot/config and compile a 2.6.24-4
> kernel with those options using gcc 4.2.4 (because of a reported bug with
> gcc 4.3 and time.h) only to find that now card does not report ready ie:
>
> input: b43-phy0 as /class/input/input9
> Registered led device: b43-phy0:tx
> Registered led device: b43-phy0:rx
> Registered led device: b43-phy0:radio
> ADDRCONF(NETDEV_UP): wlan0: link is not ready
> eth0: no IPv6 routers present
> wlan0: Initial auth_alg=0
> wlan0: authenticate with AP 00:16:b6:55:77:b3
> wlan0: authenticate with AP 00:16:b6:55:77:b3
> wlan0: authenticate with AP 00:16:b6:55:77:b3
> wlan0: authentication with AP 00:16:b6:55:77:b3 timed out
>
> any ideas/flames/help/suggestions would help from you guys
>
> thanks again
> -Nate Lally
>
> On Tue, Jan 6, 2009 at 1:11 AM, Nate Lally <nate.lally at gmail.com> wrote:
>
>> Hi All,
>>   I'm wondering where to get started debugging this issue, not a lot of
>> wifi experience... I have a laptop I inherited with no pcmcia slot and a
>> broadcom bcm4311 wifi chip.  Whenever I try to associate to an access
>> point
>> with no encryption, the card associates, then shortly thereafter
>> disassociates stating reason 3 (as you'll see in the following dmesg)...
>> I
>> still haven't tracked down the reason 3 from the call to
>> ieee80211_sta_disassociate   in mlme.c (I can't find what calls
>> ieee80211_ioctl_siwmlme).
>> but it seems to me that a ioctl call to disassociate must be stemming from
>> a state machine that decided something was wrong or missing that the
>> driver
>> should be providing/correcting..
>> any tips tricks ideas directions would be much appreciated...
>>
>>
>> root at aello:/usr/src/wireless-testing# uname -a
>> Linux aello 2.6.28 #2 Mon Jan 5 20:12:00 CST 2009 i686 GNU/Linux
>>
>> root at aello:/usr/src/wireless-testing# git describe
>> v2.6.28-10356-g738910c
>>
>> root at aello:/usr/src/wireless-testing# lspci -vvvn | grep 43 -A7
>> 06:00.0 0280: 14e4:4311 (rev 01)
>>     Subsystem: 103c:1363
>>     Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr-
>> Stepping- SERR+ FastB2B- DisINTx-
>>     Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort-
>> <TAbort-
>> <MAbort- >SERR- <PERR- INTx-
>>     Latency: 0, Cache Line Size: 64 bytes
>>     Interrupt: pin A routed to IRQ 18
>>     Region 0: Memory at 30000000 (32-bit, non-prefetchable) [size=16K]
>>     Capabilities: [40] Power Management version 2
>> --
>>     Kernel driver in use: b43-pci-bridge
>>     Kernel modules: ssb
>>
>>
>> dmesg output
>>
>> [11471.880103] b43-phy0: Loading firmware version 410.2160 (2007-05-26
>> 15:32:10)
>> [11471.940137] b43-phy0 debug: Chip initialized
>> [11471.940357] b43-phy0 debug: 32-bit DMA initialized
>> [11471.962122] Registered led device: b43-phy0::tx
>> [11471.962145] Registered led device: b43-phy0::rx
>> [11471.962175] Registered led device: b43-phy0::radio
>> [11471.962256] b43-phy0 debug: Wireless interface started
>> [11471.968608] b43-phy0 debug: Adding Interface type 2
>> [11471.980606] ADDRCONF(NETDEV_UP): wlan0: link is not ready
>> [11515.922066] wlan0: direct probe to AP 00:16:b6:xx:xx:xx try 1
>> [11516.120072] wlan0: direct probe to AP 00:16:b6:xx:xx:xx try 2
>> [11516.123276] wlan0 direct probe responded
>> [11516.123280] wlan0: authenticate with AP 00:16:b6:xx:xx:xx
>> [11516.125125] wlan0: authenticated
>> [11516.125129] wlan0: associate with AP 00:16:b6:xx:xx:xx
>> [11516.127714] wlan0: RX AssocResp from 00:16:b6:xx:xx:xx (capab=0x421
>> status=0 aid=9)
>> [11516.127717] wlan0: associated
>> [11516.127722] phy0: Allocated STA 00:16:b6:xx:xx:xx
>> [11516.128449] phy0: Inserted STA 00:16:b6:xx:xx:xx
>> [11516.128454] wmaster0: WMM queue=2 aci=0 acm=0 aifs=3 cWmin=15
>> cWmax=1023
>> txop=0
>> [11516.129191] wmaster0: WMM queue=3 aci=1 acm=0 aifs=7 cWmin=15
>> cWmax=1023
>> txop=0
>> [11516.129287] wmaster0: WMM queue=1 aci=2 acm=0 aifs=2 cWmin=7 cWmax=15
>> txop=94
>> [11516.129382] wmaster0: WMM queue=0 aci=3 acm=0 aifs=2 cWmin=3 cWmax=7
>> txop=47
>> [11516.129471] wlan0: switched to short barker preamble
>> (BSSID=00:16:b6:xx:xx:xx)
>> [11516.129475] wlan0: switched to short slot (BSSID=00:16:b6:xx:xx:xx)
>> [11516.130166] ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
>> [11516.130271] wlan0: disassociating by local choice (reason=3)
>> [11516.136255] phy0: Removed STA 00:16:b6:xx:xx:xx
>> [11516.136293] phy0: Destroyed STA 00:16:b6:xx:xx:xx
>> [11526.172056] wlan0: no IPv6 routers present
>>
>>
>>
>> --
>> Nate Lally
>>
>
>
>
> --
> Nate
> (763)-607-7630
>


-- 
Nate
(763)-607-7630


From solca at guug.org  Thu Jan 22 06:58:25 2009
From: solca at guug.org (Otto Solares)
Date: Wed, 21 Jan 2009 23:58:25 -0600
Subject: Broadcom driver in Android
Message-ID: <20090122055825.GA24800@guug.org>

FYI:

Just found this in the Android's repository and think maybe this info
can be useful for someone in this list:

http://android.git.kernel.org/?p=platform/system/wlan/broadcom.git;a=summary

-otto


From hs4233 at mail.mn-solutions.de  Thu Jan 22 10:26:21 2009
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Thu, 22 Jan 2009 10:26:21 +0100
Subject: Broadcom driver in Android
In-Reply-To: <20090122055825.GA24800@guug.org>
References: <20090122055825.GA24800@guug.org>
Message-ID: <200901221026.21865.hs4233@mail.mn-solutions.de>

> Just found this in the Android's repository and think maybe
> this info can be useful for someone in this list:
>
> http://android.git.kernel.org/?p=platform/system/wlan/broadcom
>.git;a=summary

.. and it's even GPL. :-)


From zajec5polish at gmail.com  Thu Jan 22 11:04:55 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Thu, 22 Jan 2009 11:04:55 +0100
Subject: Broadcom driver in Android
In-Reply-To: <20090122055825.GA24800@guug.org>
References: <20090122055825.GA24800@guug.org>
Message-ID: <14b026160901220204l7c99e4a1oaad8a6a7f8fafe31@mail.gmail.com>

2009/1/22 Otto Solares <solca at guug.org>:
> FYI:
>
> Just found this in the Android's repository and think maybe this info
> can be useful for someone in this list:
>
> http://android.git.kernel.org/?p=platform/system/wlan/broadcom.git;a=summary

Could someone with bigger knowledge post some info about this driver?
Does is support the same devices that b43(legacy) does? Maybe
including LP-PHY? Or 802.11n devices? Is there anything in this driver
we can (and need to) port to b43?

-- 
Rafa? Mi?ecki


From illth at gmx.de  Thu Jan 22 10:51:18 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Thu, 22 Jan 2009 09:51:18 +0000
Subject: Broadcom driver in Android
In-Reply-To: <200901221026.21865.hs4233@mail.mn-solutions.de>
References: <20090122055825.GA24800@guug.org>
	<200901221026.21865.hs4233@mail.mn-solutions.de>
Message-ID: <1232617878.24622.21.camel@pcmik05.zmk.uni-kl.de>

Am Donnerstag, den 22.01.2009, 10:26 +0100 schrieb Holger Schurig:
> > Just found this in the Android's repository and think maybe
> > this info can be useful for someone in this list:
> >
> > http://android.git.kernel.org/?p=platform/system/wlan/broadcom
> >.git;a=summary
> 
> .. and it's even GPL. :-)
but it's for an broadcom chip with built-in arm7tdmi cpu, and built-in
firmware

So doesn't help too much for "normal" broadcom cards ...
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From francesco.gringoli at ing.unibs.it  Thu Jan 22 11:17:45 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 22 Jan 2009 11:17:45 +0100
Subject: Broadcom driver in Android
In-Reply-To: <1232617878.24622.21.camel@pcmik05.zmk.uni-kl.de>
References: <20090122055825.GA24800@guug.org>
	<200901221026.21865.hs4233@mail.mn-solutions.de>
	<1232617878.24622.21.camel@pcmik05.zmk.uni-kl.de>
Message-ID: <265A39FB-3C18-4D36-A34D-121B06875588@ing.unibs.it>

On Jan 22, 2009, at 10:51 AM, Thomas Ilnseher wrote:

> Am Donnerstag, den 22.01.2009, 10:26 +0100 schrieb Holger Schurig:
>>> Just found this in the Android's repository and think maybe
>>> this info can be useful for someone in this list:
>>>
>>> http://android.git.kernel.org/?p=platform/system/wlan/broadcom
>>> .git;a=summary
>>
>> .. and it's even GPL. :-)
> but it's for an broadcom chip with built-in arm7tdmi cpu, and built-in
> firmware
>
> So doesn't help too much for "normal" broadcom cards ...
Though there are handlers in the code to "download" firmware somewhere  
(they end with "_download_firmware"), so should one believe that a  
firmware image could be provided? I didn't find any in the android git  
repository.

>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev



From maurice at debijl.net  Thu Jan 22 11:11:18 2009
From: maurice at debijl.net (Maurice de Bijl)
Date: Thu, 22 Jan 2009 11:11:18 +0100
Subject: BCM4322 driver for WRT610n
Message-ID: <49784646.2070508@debijl.net>

Hi there,

Is anyone of you there working on support for the BCM4322? It supports 
802.11a/b/g/n, and the Linksys WRT610n wireless router has two of them 
on-board. Development on the WRT610n by the dd-wrt and openwrt developer 
teams is kind of depending on support for this chip.

I am a developer myself (not that much kernel and driver experience 
though), maybe I can help with something. I really like to see some 
custom firmware on the WRT610n, because it's a nice device with two 
accesspoints, 64 MB RAM, USB support, gigabit ethernet and 300 MHz 
processor... But the Linksys firmware is kind of ... restrictive.

Bye.
Maurice
http://www.ruwebit.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090122/341139e5/attachment.html>

From illth at gmx.de  Thu Jan 22 11:39:47 2009
From: illth at gmx.de (Thomas Ilnseher)
Date: Thu, 22 Jan 2009 10:39:47 +0000
Subject: Broadcom driver in Android
In-Reply-To: <14b026160901220204l7c99e4a1oaad8a6a7f8fafe31@mail.gmail.com>
References: <20090122055825.GA24800@guug.org>
	<14b026160901220204l7c99e4a1oaad8a6a7f8fafe31@mail.gmail.com>
Message-ID: <1232620787.24622.30.camel@pcmik05.zmk.uni-kl.de>

Am Donnerstag, den 22.01.2009, 11:04 +0100 schrieb Rafa? Mi?ecki:
> 2009/1/22 Otto Solares <solca at guug.org>:
> > FYI:
> >
> > Just found this in the Android's repository and think maybe this info
> > can be useful for someone in this list:
> >
> > http://android.git.kernel.org/?p=platform/system/wlan/broadcom.git;a=summary
> 
> Could someone with bigger knowledge post some info about this driver?
WARNING: My knowledge on this only vague
> Does is support the same devices that b43(legacy) does? 
>From what I know (and have seen by skimming thru the driver), this
driver does support some kind of embedded wlan chip from broadcom.

This chip is connected via sdio, and has a built in ARM7TDMI CPU
alongside with RAM and (some kind of) ROM. The WLAN stack runs inside
this CPU. The host communicates with this device like with an standard
ethernet card (albeit with some extensions). If the device was an usb
device, this would be called CDC (communcation device class), her it is
called DCH (whatever...)

There is a modified CDC driver in the kernel to support similar broadcom
usb cards. 

the b43 driver does support broadcom cards without this embedded cpu
(connected via PCI...) and does implement the functions of the embedded
code of the embedded cards on the x86 host cpu.

So this driver is orthogonal to b43

> Maybe
> including LP-PHY? Or 802.11n devices? Is there anything in this driver
> we can (and need to) port to b43?
> 



From zajec5polish at gmail.com  Thu Jan 22 12:27:00 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Thu, 22 Jan 2009 12:27:00 +0100
Subject: BCM4322 driver for WRT610n
In-Reply-To: <49784646.2070508@debijl.net>
References: <49784646.2070508@debijl.net>
Message-ID: <14b026160901220327j5f678cd8gee2a59e22ad0d6e1@mail.gmail.com>

2009/1/22 Maurice de Bijl <maurice at debijl.net>:
> Is anyone of you there working on support for the BCM4322? It supports
> 802.11a/b/g/n, and the Linksys WRT610n wireless router has two of them
> on-board. Development on the WRT610n by the dd-wrt and openwrt developer
> teams is kind of depending on support for this chip.
>
> I am a developer myself (not that much kernel and driver experience though),
> maybe I can help with something. I really like to see some custom firmware
> on the WRT610n, because it's a nice device with two accesspoints, 64 MB RAM,
> USB support, gigabit ethernet and 300 MHz processor... But the Linksys
> firmware is kind of ... restrictive.

About 802.11n docs:
http://lists.berlios.de/pipermail/bcm43xx-dev/2008-December/008440.html

There were only 7 patches by YanBo starting work for 802.11n support,
check archive for January 2009 if you are interested what patches I
mean:
https://lists.berlios.de/pipermail/bcm43xx-dev/2009-January/thread.html

-- 
Rafa? Mi?ecki


From david at identd.dyndns.org  Fri Jan 23 03:23:37 2009
From: david at identd.dyndns.org (David Ellingsworth)
Date: Thu, 22 Jan 2009 21:23:37 -0500
Subject: b43legacy: Debugging PHY Transmission Errors
Message-ID: <30353c3d0901221823v7f1128cel88400508be64366a@mail.gmail.com>

There was some interest a while back in debugging PHY transmission
errors from the b43 driver. After upgrading from 2.6.27 to 2.6.29rc1,
I now receive these errors with the b43legacy driver. I'd be willing
to do a little debugging if someone could provide the appropriate
patches for the b43legacy driver.

Regards,

David Ellingsworth


From francesco.gringoli at ing.unibs.it  Fri Jan 23 18:36:37 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 18:36:37 +0100
Subject: integration of opensource firmware with b43 kernel driver
Message-ID: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>

Hello,

we have been testing the firmware for a week now and it seems stable.  
I personally tested it also on a Linksys WRT54GL and it works both in  
station and in AP modes. I collected the feedbacks that some of you  
sent and it seems that the firmware now runs on these board:

- 4306, 4311, 4318, 4320

I was considering the suggestions you all gave me a few days ago and  
other questions related to the possible integration of this firmware  
into the kernel, and I came to these conclusions/questions (please  
forgive me for this long message :-) )

- change the name of the initvals for the opensource firmware: this  
seems a little bit complicated as now the decision about the initval- 
files' names and the detection of the firmware type are respectively  
based on the phy type and on the firmware date. This means that  
initval-files' names can be determine as soon as the hardware type has  
been probed, while the firmware needs to be started before the kernel  
can determine if it is opensource or not: at this time, however, the  
initvals have already been uploaded. What can we do?

- detection of the opensource firmware capabilities: are you really  
sure we cannot use a shm location that the bcm proprietary firmware  
uses for some other purpose? Once, in fact, the kernel has determined  
that the firmware is opensource it can also use a given location in a  
different manner than it would do for a proprietary firmware. However  
this is not a problem at all :-) as we can use one location in the  
"high" shm-memory area, let's say > 0xb00, just choose one.

- what to do with rts procedure: we can implement this feature easily  
but I'm not sure about the value it can add to people (the majority of  
users?) that use the bcm board in station mode. This is different for  
those who run a bcm card in AP mode, but we can clearly discourage  
them to run this firmware in AP mode if  not sure about rts usage by  
stations. However, we put this task in the todo list.

- tx header layout: the opensource firmware is now using the old  
memory layout in the tx header (<351). Do you think switching to 410  
format is mandatory now or we can concentrate on the other tasks?

- I would like to start considering N-phy on the firmware side. I have  
a late 2008 MacBook Pro and I'm not sure if beginning this work on  
this platform is a waste of time or not as Apple could have asked  
Broadcom a customized chipset. Should I start or is it better if I buy  
a N-phy pci board for my x86 box?

Thank you for your time.
Cheers,
-FG


From brian at interlinx.bc.ca  Fri Jan 23 18:44:09 2009
From: brian at interlinx.bc.ca (Brian J. Murrell)
Date: Fri, 23 Jan 2009 12:44:09 -0500
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
Message-ID: <1232732649.7440.42.camel@pc.interlinx.bc.ca>

On Fri, 2009-01-23 at 18:36 +0100, Francesco Gringoli wrote:
> Hello,
> 
> we have been testing the firmware for a week now and it seems stable.  
> I personally tested it also on a Linksys WRT54GL and it works both in  
> station and in AP modes.

Did you try pushing it hard?  i.e. doing a nice big bulk transfer
through it?  Did it reach decent speeds without pegging the CPU with
softirqs?

Can you give details on which kernel(s) and how you built/configured the
router firmware(s)?

b.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090123/ed47add2/attachment.pgp>

From Larry.Finger at lwfinger.net  Fri Jan 23 19:01:00 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 23 Jan 2009 12:01:00 -0600
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
Message-ID: <497A05DC.4040101@lwfinger.net>

Francesco Gringoli wrote:
> Hello,
> 
> we have been testing the firmware for a week now and it seems stable. I
> personally tested it also on a Linksys WRT54GL and it works both in
> station and in AP modes. I collected the feedbacks that some of you sent
> and it seems that the firmware now runs on these board:
> 
> - 4306, 4311, 4318, 4320

As a point of clarification, I think this is restricted to the 4311/1
as the 4311/2 uses ucode13, not ucode5. If you need a tester for an
open-source version of the 13 firmware, I'm available.

> I was considering the suggestions you all gave me a few days ago and
> other questions related to the possible integration of this firmware
> into the kernel, and I came to these conclusions/questions (please
> forgive me for this long message :-) )
> 
> - change the name of the initvals for the opensource firmware: this
> seems a little bit complicated as now the decision about the
> initval-files' names and the detection of the firmware type are
> respectively based on the phy type and on the firmware date. This means
> that initval-files' names can be determine as soon as the hardware type
> has been probed, while the firmware needs to be started before the
> kernel can determine if it is opensource or not: at this time, however,
> the initvals have already been uploaded. What can we do?

The driver can certainly be coded to look for the open-source firmware
names before trying to load vendor firmware. That way there will not
be any confusion.

> - detection of the opensource firmware capabilities: are you really sure
> we cannot use a shm location that the bcm proprietary firmware uses for
> some other purpose? Once, in fact, the kernel has determined that the
> firmware is opensource it can also use a given location in a different
> manner than it would do for a proprietary firmware. However this is not
> a problem at all :-) as we can use one location in the "high" shm-memory
> area, let's say > 0xb00, just choose one.

I think it best to choose an unused location.

Larry


From mb at bu3sch.de  Fri Jan 23 19:02:06 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 19:02:06 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
Message-ID: <200901231902.06336.mb@bu3sch.de>

On Friday 23 January 2009 18:36:37 Francesco Gringoli wrote:
> Hello,
> 
> we have been testing the firmware for a week now and it seems stable.  
> I personally tested it also on a Linksys WRT54GL and it works both in  
> station and in AP modes. I collected the feedbacks that some of you  
> sent and it seems that the firmware now runs on these board:
> 
> - 4306, 4311, 4318, 4320

I don't think it has enough testing, yet.

> I was considering the suggestions you all gave me a few days ago and  
> other questions related to the possible integration of this firmware  
> into the kernel, and I came to these conclusions/questions (please  
> forgive me for this long message :-) )

I don't think we want to have the firmware in the kernel.
Instead distributions should simply ship the firmware in a package.
That's not our business.

> - change the name of the initvals for the opensource firmware: this  

Why?

> seems a little bit complicated as now the decision about the initval- 
> files' names and the detection of the firmware type are respectively  
> based on the phy type and on the firmware date. This means that  
> initval-files' names can be determine as soon as the hardware type has  
> been probed, while the firmware needs to be started before the kernel  
> can determine if it is opensource or not: at this time, however, the  
> initvals have already been uploaded. What can we do?

Nothing. Why do we need to have different names?

> - detection of the opensource firmware capabilities: are you really  
> sure we cannot use a shm location that the bcm proprietary firmware  
> uses for some other purpose?

Yes, well. You're not intermixing an earlier discussion into this, where
you didn't indicate opensource capabilities to the kernel.
If you indicate OS capabilities, you can use whatever offset you want, of course.

> - what to do with rts procedure: we can implement this feature easily  
> but I'm not sure about the value it can add to people (the majority of  
> users?) that use the bcm board in station mode. This is different for  
> those who run a bcm card in AP mode, but we can clearly discourage  
> them to run this firmware in AP mode if  not sure about rts usage by  
> stations. However, we put this task in the todo list.

RTS/CTS is not specific to AP mode. It's used on any station in the BSS.
See IEEE 802.11 specs.

> - tx header layout: the opensource firmware is now using the old  
> memory layout in the tx header (<351). Do you think switching to 410  
> format is mandatory now or we can concentrate on the other tasks?

Yes, the old format is deprecated and will be removed soon.

> - I would like to start considering N-phy on the firmware side. I have  
> a late 2008 MacBook Pro and I'm not sure if beginning this work on  
> this platform is a waste of time or not as Apple could have asked  
> Broadcom a customized chipset. Should I start or is it better if I buy  
> a N-phy pci board for my x86 box?

A little bit of b43-asm work is still needed for this core.
There are a few FIXMEs in the code. Not sure, maybe there's more to do.
I didn't try that, yet.
Before you start, you'll have to verify whether the assembler works correctly.
Same for the disassembler.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jan 23 19:08:05 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 19:08:05 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <497A05DC.4040101@lwfinger.net>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
Message-ID: <200901231908.05835.mb@bu3sch.de>

On Friday 23 January 2009 19:01:00 Larry Finger wrote:
> The driver can certainly be coded to look for the open-source firmware
> names before trying to load vendor firmware. That way there will not
> be any confusion.

I already posted that, but in case you missed it:
http://bu3sch.de/patches/wireless-testing/20081227-1821/patches/008-b43-probe-open-fw.patch

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jan 23 20:05:31 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 20:05:31 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <1232736637.2577.40.camel@localhost.localdomain>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<200901231908.05835.mb@bu3sch.de>
	<1232736637.2577.40.camel@localhost.localdomain>
Message-ID: <200901232005.32048.mb@bu3sch.de>

On Friday 23 January 2009 19:50:37 Dan Williams wrote:
> On Fri, 2009-01-23 at 19:08 +0100, Michael Buesch wrote:
> > On Friday 23 January 2009 19:01:00 Larry Finger wrote:
> > > The driver can certainly be coded to look for the open-source firmware
> > > names before trying to load vendor firmware. That way there will not
> > > be any confusion.
> > 
> > I already posted that, but in case you missed it:
> > http://bu3sch.de/patches/wireless-testing/20081227-1821/patches/008-b43-probe-open-fw.patch
> 
> Preferring the proprietary firmware over the open firmware (for now)
> seems like the best approach at this time.  Many people will be quite
> happy with the open firmware that we can actually ship in distros, and
> those that aren't can do the fwcutter stuff and get their own
> proprietary firmware.  If for some reason the open firmware isn't
> working, use fwcutter and get the proprietary firmware, which you would
> have had to do before anyway.  And those people with chips that aren't
> supported by the proprietary firmware yet still have to use the
> fwcutter, which they would have had to do anyway.  Win all around.

Exactly. This is why I implemented it that way.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Fri Jan 23 20:18:52 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 20:18:52 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <200901231902.06336.mb@bu3sch.de>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<200901231902.06336.mb@bu3sch.de>
Message-ID: <82AB87FD-0247-4049-AA3D-309C3C1539FF@ing.unibs.it>

On Jan 23, 2009, at 7:02 PM, Michael Buesch wrote:

> On Friday 23 January 2009 18:36:37 Francesco Gringoli wrote:
>> Hello,
>>
>> we have been testing the firmware for a week now and it seems stable.
>> I personally tested it also on a Linksys WRT54GL and it works both in
>> station and in AP modes. I collected the feedbacks that some of you
>> sent and it seems that the firmware now runs on these board:
>>
>> - 4306, 4311, 4318, 4320
>
> I don't think it has enough testing, yet.
Sure, it seems to be stable on _our_ boards but I can't tell if it  
shows the same behavior on other hardware revisions.
>
>
>> I was considering the suggestions you all gave me a few days ago and
>> other questions related to the possible integration of this firmware
>> into the kernel, and I came to these conclusions/questions (please
>> forgive me for this long message :-) )
>
> I don't think we want to have the firmware in the kernel.
> Instead distributions should simply ship the firmware in a package.
> That's not our business.

I agree with you, distributions could easily package the firmware and  
distribute it to users when it will be stable, I was just wondering  
about.

>> - change the name of the initvals for the opensource firmware: this
>
> Why?
>
>> [cut]
>> initvals have already been uploaded. What can we do?
>
> Nothing. Why do we need to have different names?
Well, I was only considering a question raised by John, we can surely  
maintain these names.

>> - detection of the opensource firmware capabilities: are you really
>> sure we cannot use a shm location that the bcm proprietary firmware
>> uses for some other purpose?
>
> Yes, well. You're not intermixing an earlier discussion into this,  
> where
> you didn't indicate opensource capabilities to the kernel.
> If you indicate OS capabilities, you can use whatever offset you  
> want, of course.
Excellent. We will modify the firmware accordingly and encode the  
options.

>> - what to do with rts procedure: we can implement this feature easily
>> but I'm not sure about the value it can add to people (the majority  
>> of
>> users?) that use the bcm board in station mode. This is different for
>> those who run a bcm card in AP mode, but we can clearly discourage
>> them to run this firmware in AP mode if  not sure about rts usage by
>> stations. However, we put this task in the todo list.
>
> RTS/CTS is not specific to AP mode. It's used on any station in the  
> BSS.
> See IEEE 802.11 specs.
Yes, in fact we put this task in the todo list.

>> - tx header layout: the opensource firmware is now using the old
>> memory layout in the tx header (<351). Do you think switching to 410
>> format is mandatory now or we can concentrate on the other tasks?
>
> Yes, the old format is deprecated and will be removed soon.
Ok, first task in the todo list!

>> - I would like to start considering N-phy on the firmware side. I  
>> have
>> a late 2008 MacBook Pro and I'm not sure if beginning this work on
>> this platform is a waste of time or not as Apple could have asked
>> Broadcom a customized chipset. Should I start or is it better if I  
>> buy
>> a N-phy pci board for my x86 box?
>
> A little bit of b43-asm work is still needed for this core.
> There are a few FIXMEs in the code. Not sure, maybe there's more to  
> do.
> I didn't try that, yet.
> Before you start, you'll have to verify whether the assembler works  
> correctly.
> Same for the disassembler.
Ok, thanks for the hint. I will check,

Cheers,
-FG

>
>
> -- 
> Greetings, Michael.

-------

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014
WWW: http://www.ing.unibs.it/~gringoli






From francesco.gringoli at ing.unibs.it  Fri Jan 23 20:24:47 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 20:24:47 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <497A05DC.4040101@lwfinger.net>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
Message-ID: <01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>

On Jan 23, 2009, at 7:01 PM, Larry Finger wrote:

> Francesco Gringoli wrote:
>> Hello,
>>
>> we have been testing the firmware for a week now and it seems  
>> stable. I
>> personally tested it also on a Linksys WRT54GL and it works both in
>> station and in AP modes. I collected the feedbacks that some of you  
>> sent
>> and it seems that the firmware now runs on these board:
>>
>> - 4306, 4311, 4318, 4320
>
> As a point of clarification, I think this is restricted to the 4311/1
> as the 4311/2 uses ucode13, not ucode5. If you need a tester for an
> open-source version of the 13 firmware, I'm available.
Damn... that would be a very hard writing.... We do not have any  
4311/2 board: at first glance there are more condition registers whose  
meaning we do not know. Very different hardware, didn't know. Thank  
you for the feedback.

By the way: is that device inside an AP? If yes what? if not which  
brand has the board on? I can look around.

Cheers,
-FG


From mb at bu3sch.de  Fri Jan 23 20:33:28 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 20:33:28 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <82AB87FD-0247-4049-AA3D-309C3C1539FF@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<200901231902.06336.mb@bu3sch.de>
	<82AB87FD-0247-4049-AA3D-309C3C1539FF@ing.unibs.it>
Message-ID: <200901232033.28470.mb@bu3sch.de>

On Friday 23 January 2009 20:18:52 Francesco Gringoli wrote:
> > Nothing. Why do we need to have different names?
> Well, I was only considering a question raised by John, we can surely  
> maintain these names.

I guess I missed that. What was the question?
Note that proprietary and open firmwares are in separate directories, so
I don't see why we should rename them.
Renaming firmware is a huge pain. We did it several times in the past and
I really want to avoid it. It creates a major confusion for users for some months.

> >> - detection of the opensource firmware capabilities: are you really
> >> sure we cannot use a shm location that the bcm proprietary firmware
> >> uses for some other purpose?
> >
> > Yes, well. You're not intermixing an earlier discussion into this,  
> > where
> > you didn't indicate opensource capabilities to the kernel.
> > If you indicate OS capabilities, you can use whatever offset you  
> > want, of course.
> Excellent. We will modify the firmware accordingly and encode the  
> options.

Thanks. Would be nice if you could also do the corresponding driver patch.

> >> - what to do with rts procedure: we can implement this feature easily
> >> but I'm not sure about the value it can add to people (the majority  
> >> of
> >> users?) that use the bcm board in station mode. This is different for
> >> those who run a bcm card in AP mode, but we can clearly discourage
> >> them to run this firmware in AP mode if  not sure about rts usage by
> >> stations. However, we put this task in the todo list.
> >
> > RTS/CTS is not specific to AP mode. It's used on any station in the  
> > BSS.
> > See IEEE 802.11 specs.
> Yes, in fact we put this task in the todo list.

Thanks.

> >> - tx header layout: the opensource firmware is now using the old
> >> memory layout in the tx header (<351). Do you think switching to 410
> >> format is mandatory now or we can concentrate on the other tasks?
> >
> > Yes, the old format is deprecated and will be removed soon.
> Ok, first task in the todo list!

Well, doesn't need to the the first one. Just note that support for this is
scheduled to be removed in summer 2008. So if any problems show up (broadcom
releases yet another API, for example), I will immediately remove it.

> Ok, thanks for the hint. I will check,

There are a few things we're not yet sure about.
For example the operand for the GPR number got an additional bit.
But we're not sure if the real number of GPRs also was doubled in the hardware.
There are a few FIXMEs in the code for this...
I think this simply has to be tested by trial and error.

-- 
Greetings, Michael.


From mb at bu3sch.de  Fri Jan 23 20:37:42 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 20:37:42 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
	<01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
Message-ID: <200901232037.42512.mb@bu3sch.de>

On Friday 23 January 2009 20:24:47 Francesco Gringoli wrote:
> On Jan 23, 2009, at 7:01 PM, Larry Finger wrote:
> 
> > Francesco Gringoli wrote:
> >> Hello,
> >>
> >> we have been testing the firmware for a week now and it seems  
> >> stable. I
> >> personally tested it also on a Linksys WRT54GL and it works both in
> >> station and in AP modes. I collected the feedbacks that some of you  
> >> sent
> >> and it seems that the firmware now runs on these board:
> >>
> >> - 4306, 4311, 4318, 4320
> >
> > As a point of clarification, I think this is restricted to the 4311/1
> > as the 4311/2 uses ucode13, not ucode5. If you need a tester for an
> > open-source version of the 13 firmware, I'm available.
> Damn... that would be a very hard writing.... We do not have any  
> 4311/2 board: at first glance there are more condition registers whose  
> meaning we do not know. Very different hardware, didn't know. Thank  
> you for the feedback.

Well, if you didn't notice it already, there are a zillion different flavors
of the broadcom wireless chip out there. So if you buy a random device, you're almost
guaranteed that you don't have that flavor already. ;)

Another thing is: You simply can _not_ distinguish the devices by the 43xx number in practice.
There are too many devices with the same 43xx number, but different internal designs.
The safest solution for the firmware is to tell by the wireless core revision whether it works or not.
(However, that still leaves a few traps for different PHY and radio revisions, as the firmware also
accesses PHY and radio).

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Fri Jan 23 20:45:58 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 23 Jan 2009 13:45:58 -0600
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
	<01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
Message-ID: <497A1E76.7040309@lwfinger.net>

Francesco Gringoli wrote:
> Damn... that would be a very hard writing.... We do not have any 4311/2
> board: at first glance there are more condition registers whose meaning
> we do not know. Very different hardware, didn't know. Thank you for the
> feedback.
> 
> By the way: is that device inside an AP? If yes what? if not which brand
> has the board on? I can look around.

Mine is on a mini-PCIe card in a laptop. The part has an HP Part
#441090-001, but I expect there are Dell equivalents that are cheaper.
I don't know about an AP.

Larry




From francesco.gringoli at ing.unibs.it  Fri Jan 23 20:46:45 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 20:46:45 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <200901232033.28470.mb@bu3sch.de>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<200901231902.06336.mb@bu3sch.de>
	<82AB87FD-0247-4049-AA3D-309C3C1539FF@ing.unibs.it>
	<200901232033.28470.mb@bu3sch.de>
Message-ID: <FE3E070D-F92B-4A76-80E5-019D4735FBED@ing.unibs.it>

On Jan 23, 2009, at 8:33 PM, Michael Buesch wrote:

> On Friday 23 January 2009 20:18:52 Francesco Gringoli wrote:
>>> Nothing. Why do we need to have different names?
>> Well, I was only considering a question raised by John, we can surely
>> maintain these names.
>
> I guess I missed that. What was the question?
> Note that proprietary and open firmwares are in separate  
> directories, so
> I don't see why we should rename them.
> Renaming firmware is a huge pain. We did it several times in the  
> past and
> I really want to avoid it. It creates a major confusion for users  
> for some months.
Sorry sorry sorry and sorry again... it was a Larry question, not  
John's... pardon me

-- Is using the Broadcom names for the firmware the best course of
-- action? What if the opensource firmware files were named something
-- like "os-ucode5.fw", etc. and b43 were coded to check for those files
-- first? It would then fall back to the standard firmware if the
-- opensource version is not found.

However, it's not a problem maintaining these names.

>>>> - detection of the opensource firmware capabilities: are you really
>>>> sure we cannot use a shm location that the bcm proprietary firmware
>>>> uses for some other purpose?
>>>
>>> Yes, well. You're not intermixing an earlier discussion into this,
>>> where
>>> you didn't indicate opensource capabilities to the kernel.
>>> If you indicate OS capabilities, you can use whatever offset you
>>> want, of course.
>> Excellent. We will modify the firmware accordingly and encode the
>> options.
>
> Thanks. Would be nice if you could also do the corresponding driver  
> patch.
Ok, it should be simple.

>>>> - tx header layout: the opensource firmware is now using the old
>>>> memory layout in the tx header (<351). Do you think switching to  
>>>> 410
>>>> format is mandatory now or we can concentrate on the other tasks?
>>>
>>> Yes, the old format is deprecated and will be removed soon.
>> Ok, first task in the todo list!
>
> Well, doesn't need to the the first one. Just note that support for  
> this is
> scheduled to be removed in summer 2008. So if any problems show up  
> (broadcom
> releases yet another API, for example), I will immediately remove it.
Well, it's the first because it's the easiest :-)

>> Ok, thanks for the hint. I will check,
>
> There are a few things we're not yet sure about.
> For example the operand for the GPR number got an additional bit.
> But we're not sure if the real number of GPRs also was doubled in  
> the hardware.
> There are a few FIXMEs in the code for this...
> I think this simply has to be tested by trial and error.
Thanks, I will surely check this.

Cheers,
-FG

>
>
> -- 
> Greetings, Michael.

-------

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014
WWW: http://www.ing.unibs.it/~gringoli






From mb at bu3sch.de  Fri Jan 23 20:50:27 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 20:50:27 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <FE3E070D-F92B-4A76-80E5-019D4735FBED@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<200901232033.28470.mb@bu3sch.de>
	<FE3E070D-F92B-4A76-80E5-019D4735FBED@ing.unibs.it>
Message-ID: <200901232050.27952.mb@bu3sch.de>

On Friday 23 January 2009 20:46:45 Francesco Gringoli wrote:
> -- Is using the Broadcom names for the firmware the best course of
> -- action? What if the opensource firmware files were named something
> -- like "os-ucode5.fw", etc. and b43 were coded to check for those files
> -- first? It would then fall back to the standard firmware if the
> -- opensource version is not found.

I answered to this question with this patch:
http://bu3sch.de/patches/wireless-testing/20081227-1821/patches/008-b43-probe-open-fw.patch

I am currently testing an updated version of the patch and I'll push it upstream tomorrow.

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Fri Jan 23 20:51:28 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 20:51:28 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <200901232037.42512.mb@bu3sch.de>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
	<01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
	<200901232037.42512.mb@bu3sch.de>
Message-ID: <A10073B8-ED72-4333-B042-D181DE0A0026@ing.unibs.it>

On Jan 23, 2009, at 8:37 PM, Michael Buesch wrote:

> On Friday 23 January 2009 20:24:47 Francesco Gringoli wrote:
>> On Jan 23, 2009, at 7:01 PM, Larry Finger wrote:
>>
>>> Francesco Gringoli wrote:
>>>> Hello,
>>>>
>>>> we have been testing the firmware for a week now and it seems
>>>> stable. I
>>>> personally tested it also on a Linksys WRT54GL and it works both in
>>>> station and in AP modes. I collected the feedbacks that some of you
>>>> sent
>>>> and it seems that the firmware now runs on these board:
>>>>
>>>> - 4306, 4311, 4318, 4320
>>>
>>> As a point of clarification, I think this is restricted to the  
>>> 4311/1
>>> as the 4311/2 uses ucode13, not ucode5. If you need a tester for an
>>> open-source version of the 13 firmware, I'm available.
>> Damn... that would be a very hard writing.... We do not have any
>> 4311/2 board: at first glance there are more condition registers  
>> whose
>> meaning we do not know. Very different hardware, didn't know. Thank
>> you for the feedback.
>
> Well, if you didn't notice it already, there are a zillion different  
> flavors
> of the broadcom wireless chip out there. So if you buy a random  
> device, you're almost
> guaranteed that you don't have that flavor already. ;)
Ehm... I begin to notice now... we were so engaged in understanding  
the tx state machine that we lost this _huge_  detail(!). They  
(Broadcom) should have plenty of engineers to design so many different  
chipsets.

Cheers,
-FG


From francesco.gringoli at ing.unibs.it  Fri Jan 23 20:58:23 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 23 Jan 2009 20:58:23 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <1232732649.7440.42.camel@pc.interlinx.bc.ca>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<1232732649.7440.42.camel@pc.interlinx.bc.ca>
Message-ID: <4B2A9520-D727-472F-A62A-0DC2E5F3C2B3@ing.unibs.it>

On Jan 23, 2009, at 6:44 PM, Brian J. Murrell wrote:

> On Fri, 2009-01-23 at 18:36 +0100, Francesco Gringoli wrote:
>> Hello,
>>
>> we have been testing the firmware for a week now and it seems stable.
>> I personally tested it also on a Linksys WRT54GL and it works both in
>> station and in AP modes.
>
> Did you try pushing it hard?  i.e. doing a nice big bulk transfer
> through it?  Did it reach decent speeds without pegging the CPU with
> softirqs?
>
> Can you give details on which kernel(s) and how you built/configured  
> the
> router firmware(s)?
Well, I just tested a 500Mbytes bulk transfer and I got a mean  
throughput of about 5.5Mbit/s, it was a simple infinite wget loop so  
we can have some slowness due to TCP. However no errors were logged to  
syslog and the AP is still there, it didn't complain about anything.

I built kamikaze yesterday image (r14144), kernel 2.6.25.17, I used  
the AP as a station joined to another AP without encryption.

By the way, we did thousands of tests with x86 and we came to the  
conclusion that there is no performance (throughput) difference if  
compared to the standard proprietary firmware.

Cheers,
-FG


From mb at bu3sch.de  Fri Jan 23 21:21:51 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 23 Jan 2009 21:21:51 +0100
Subject: [PATCH] b43: Automatically probe for opensource firmware
Message-ID: <200901232121.52012.mb@bu3sch.de>

First probe for proprietary firmware and then probe for opensource firmware.
This way around it's a win-win situation.
1) If proprietary fw is available, it will work.
2) If opensource firmware is available, but no proprietary (Distros can only ship open fw)
   it might work.
3) If both open and proprietary are available, it will work, because it selects
   the proprietary. We currently don't prefer the open fw in this case, because it doesn't
   work on all devices. It would introduce a regression otherwise.

The remaining FIXMEs in this patch are harmless, because they only matter on multiband
devices, which are not implemented yet anyway.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next feature round.

Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-01-23 19:19:20.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-01-23 19:23:18.000000000 +0100
@@ -1931,25 +1931,25 @@ static irqreturn_t b43_interrupt_handler
 	mmiowb();
 	spin_unlock(&dev->wl->irq_lock);
 
 	return ret;
 }
 
-static void do_release_fw(struct b43_firmware_file *fw)
+void b43_do_release_fw(struct b43_firmware_file *fw)
 {
 	release_firmware(fw->data);
 	fw->data = NULL;
 	fw->filename = NULL;
 }
 
 static void b43_release_firmware(struct b43_wldev *dev)
 {
-	do_release_fw(&dev->fw.ucode);
-	do_release_fw(&dev->fw.pcm);
-	do_release_fw(&dev->fw.initvals);
-	do_release_fw(&dev->fw.initvals_band);
+	b43_do_release_fw(&dev->fw.ucode);
+	b43_do_release_fw(&dev->fw.pcm);
+	b43_do_release_fw(&dev->fw.initvals);
+	b43_do_release_fw(&dev->fw.initvals_band);
 }
 
 static void b43_print_fw_helptext(struct b43_wl *wl, bool error)
 {
 	const char *text;
 
@@ -1960,48 +1960,66 @@ static void b43_print_fw_helptext(struct
 	if (error)
 		b43err(wl, text);
 	else
 		b43warn(wl, text);
 }
 
-static int do_request_fw(struct b43_wldev *dev,
-			 const char *name,
-			 struct b43_firmware_file *fw,
-			 bool silent)
+int b43_do_request_fw(struct b43_request_fw_context *ctx,
+		      const char *name,
+		      struct b43_firmware_file *fw)
 {
-	char path[sizeof(modparam_fwpostfix) + 32];
 	const struct firmware *blob;
 	struct b43_fw_header *hdr;
 	u32 size;
 	int err;
 
 	if (!name) {
 		/* Don't fetch anything. Free possibly cached firmware. */
-		do_release_fw(fw);
+		/* FIXME: We should probably keep it anyway, to save some headache
+		 * on suspend/resume with multiband devices. */
+		b43_do_release_fw(fw);
 		return 0;
 	}
 	if (fw->filename) {
-		if (strcmp(fw->filename, name) == 0)
+		if ((fw->type == ctx->req_type) &&
+		    (strcmp(fw->filename, name) == 0))
 			return 0; /* Already have this fw. */
 		/* Free the cached firmware first. */
-		do_release_fw(fw);
+		/* FIXME: We should probably do this later after we successfully
+		 * got the new fw. This could reduce headache with multiband devices.
+		 * We could also redesign this to cache the firmware for all possible
+		 * bands all the time. */
+		b43_do_release_fw(fw);
+	}
+
+	switch (ctx->req_type) {
+	case B43_FWTYPE_PROPRIETARY:
+		snprintf(ctx->fwname, sizeof(ctx->fwname),
+			 "b43%s/%s.fw",
+			 modparam_fwpostfix, name);
+		break;
+	case B43_FWTYPE_OPENSOURCE:
+		snprintf(ctx->fwname, sizeof(ctx->fwname),
+			 "b43-open%s/%s.fw",
+			 modparam_fwpostfix, name);
+		break;
+	default:
+		B43_WARN_ON(1);
+		return -ENOSYS;
 	}
-
-	snprintf(path, ARRAY_SIZE(path),
-		 "b43%s/%s.fw",
-		 modparam_fwpostfix, name);
-	err = request_firmware(&blob, path, dev->dev->dev);
+	err = request_firmware(&blob, ctx->fwname, ctx->dev->dev->dev);
 	if (err == -ENOENT) {
-		if (!silent) {
-			b43err(dev->wl, "Firmware file \"%s\" not found\n",
-			       path);
-		}
+		snprintf(ctx->errors[ctx->req_type],
+			 sizeof(ctx->errors[ctx->req_type]),
+			 "Firmware file \"%s\" not found\n", ctx->fwname);
 		return err;
 	} else if (err) {
-		b43err(dev->wl, "Firmware file \"%s\" request failed (err=%d)\n",
-		       path, err);
+		snprintf(ctx->errors[ctx->req_type],
+			 sizeof(ctx->errors[ctx->req_type]),
+			 "Firmware file \"%s\" request failed (err=%d)\n",
+			 ctx->fwname, err);
 		return err;
 	}
 	if (blob->size < sizeof(struct b43_fw_header))
 		goto err_format;
 	hdr = (struct b43_fw_header *)(blob->data);
 	switch (hdr->type) {
@@ -2018,26 +2036,30 @@ static int do_request_fw(struct b43_wlde
 	default:
 		goto err_format;
 	}
 
 	fw->data = blob;
 	fw->filename = name;
+	fw->type = ctx->req_type;
 
 	return 0;
 
 err_format:
-	b43err(dev->wl, "Firmware file \"%s\" format error.\n", path);
+	snprintf(ctx->errors[ctx->req_type],
+		 sizeof(ctx->errors[ctx->req_type]),
+		 "Firmware file \"%s\" format error.\n", ctx->fwname);
 	release_firmware(blob);
 
 	return -EPROTO;
 }
 
-static int b43_request_firmware(struct b43_wldev *dev)
+static int b43_try_request_fw(struct b43_request_fw_context *ctx)
 {
-	struct b43_firmware *fw = &dev->fw;
-	const u8 rev = dev->dev->id.revision;
+	struct b43_wldev *dev = ctx->dev;
+	struct b43_firmware *fw = &ctx->dev->fw;
+	const u8 rev = ctx->dev->dev->id.revision;
 	const char *filename;
 	u32 tmshigh;
 	int err;
 
 	/* Get microcode */
 	tmshigh = ssb_read32(dev->dev, SSB_TMSHIGH);
@@ -2046,25 +2068,25 @@ static int b43_request_firmware(struct b
 	else if ((rev >= 11) && (rev <= 12))
 		filename = "ucode11";
 	else if (rev >= 13)
 		filename = "ucode13";
 	else
 		goto err_no_ucode;
-	err = do_request_fw(dev, filename, &fw->ucode, 0);
+	err = b43_do_request_fw(ctx, filename, &fw->ucode);
 	if (err)
 		goto err_load;
 
 	/* Get PCM code */
 	if ((rev >= 5) && (rev <= 10))
 		filename = "pcm5";
 	else if (rev >= 11)
 		filename = NULL;
 	else
 		goto err_no_pcm;
 	fw->pcm_request_failed = 0;
-	err = do_request_fw(dev, filename, &fw->pcm, 1);
+	err = b43_do_request_fw(ctx, filename, &fw->pcm);
 	if (err == -ENOENT) {
 		/* We did not find a PCM file? Not fatal, but
 		 * core rev <= 10 must do without hwcrypto then. */
 		fw->pcm_request_failed = 1;
 	} else if (err)
 		goto err_load;
@@ -2094,13 +2116,13 @@ static int b43_request_firmware(struct b
 		else
 			goto err_no_initvals;
 		break;
 	default:
 		goto err_no_initvals;
 	}
-	err = do_request_fw(dev, filename, &fw->initvals, 0);
+	err = b43_do_request_fw(ctx, filename, &fw->initvals);
 	if (err)
 		goto err_load;
 
 	/* Get bandswitch initvals */
 	switch (dev->phy.type) {
 	case B43_PHYTYPE_A:
@@ -2128,43 +2150,89 @@ static int b43_request_firmware(struct b
 		else
 			goto err_no_initvals;
 		break;
 	default:
 		goto err_no_initvals;
 	}
-	err = do_request_fw(dev, filename, &fw->initvals_band, 0);
+	err = b43_do_request_fw(ctx, filename, &fw->initvals_band);
 	if (err)
 		goto err_load;
 
 	return 0;
 
-err_load:
-	b43_print_fw_helptext(dev->wl, 1);
-	goto error;
-
 err_no_ucode:
-	err = -ENODEV;
-	b43err(dev->wl, "No microcode available for core rev %u\n", rev);
+	err = ctx->fatal_failure = -EOPNOTSUPP;
+	b43err(dev->wl, "The driver does not know which firmware (ucode) "
+	       "is required for your device (wl-core rev %u)\n", rev);
 	goto error;
 
 err_no_pcm:
-	err = -ENODEV;
-	b43err(dev->wl, "No PCM available for core rev %u\n", rev);
+	err = ctx->fatal_failure = -EOPNOTSUPP;
+	b43err(dev->wl, "The driver does not know which firmware (PCM) "
+	       "is required for your device (wl-core rev %u)\n", rev);
 	goto error;
 
 err_no_initvals:
-	err = -ENODEV;
-	b43err(dev->wl, "No Initial Values firmware file for PHY %u, "
-	       "core rev %u\n", dev->phy.type, rev);
+	err = ctx->fatal_failure = -EOPNOTSUPP;
+	b43err(dev->wl, "The driver does not know which firmware (initvals) "
+	       "is required for your device (wl-core rev %u)\n", rev);
+	goto error;
+
+err_load:
+	/* We failed to load this firmware image. The error message
+	 * already is in ctx->errors. Return and let our caller decide
+	 * what to do. */
 	goto error;
 
 error:
 	b43_release_firmware(dev);
 	return err;
 }
 
+static int b43_request_firmware(struct b43_wldev *dev)
+{
+	struct b43_request_fw_context *ctx;
+	unsigned int i;
+	int err;
+	const char *errmsg;
+
+	ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);
+	if (!ctx)
+		return -ENOMEM;
+	ctx->dev = dev;
+
+	ctx->req_type = B43_FWTYPE_PROPRIETARY;
+	err = b43_try_request_fw(ctx);
+	if (!err)
+		goto out; /* Successfully loaded it. */
+	err = ctx->fatal_failure;
+	if (err)
+		goto out;
+
+	ctx->req_type = B43_FWTYPE_OPENSOURCE;
+	err = b43_try_request_fw(ctx);
+	if (!err)
+		goto out; /* Successfully loaded it. */
+	err = ctx->fatal_failure;
+	if (err)
+		goto out;
+
+	/* Could not find a usable firmware. Print the errors. */
+	for (i = 0; i < B43_NR_FWTYPES; i++) {
+		errmsg = ctx->errors[i];
+		if (strlen(errmsg))
+			b43err(dev->wl, errmsg);
+	}
+	b43_print_fw_helptext(dev->wl, 1);
+	err = -ENOENT;
+
+out:
+	kfree(ctx);
+	return err;
+}
+
 static int b43_upload_microcode(struct b43_wldev *dev)
 {
 	const size_t hdr_len = sizeof(struct b43_fw_header);
 	const __be32 *data;
 	unsigned int i, len;
 	u16 fwrev, fwpatch, fwdate, fwtime;
Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2008-12-21 20:59:49.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-01-23 19:33:23.000000000 +0100
@@ -652,16 +652,45 @@ struct b43_wl {
 	/* Work for adjustment of the transmission power.
 	 * This is scheduled when we determine that the actual TX output
 	 * power doesn't match what we want. */
 	struct work_struct txpower_adjust_work;
 };
 
+/* The type of the firmware file. */
+enum b43_firmware_file_type {
+	B43_FWTYPE_PROPRIETARY,
+	B43_FWTYPE_OPENSOURCE,
+	B43_NR_FWTYPES,
+};
+
+/* Context data for fetching firmware. */
+struct b43_request_fw_context {
+	/* The device we are requesting the fw for. */
+	struct b43_wldev *dev;
+	/* The type of firmware to request. */
+	enum b43_firmware_file_type req_type;
+	/* Error messages for each firmware type. */
+	char errors[B43_NR_FWTYPES][128];
+	/* Temporary buffer for storing the firmware name. */
+	char fwname[64];
+	/* A fatal error occured while requesting. Firmware reqest
+	 * can not continue, as any other reqest will also fail. */
+	int fatal_failure;
+};
+
 /* In-memory representation of a cached microcode file. */
 struct b43_firmware_file {
 	const char *filename;
 	const struct firmware *data;
+	/* Type of the firmware file name. Note that this does only indicate
+	 * the type by the firmware name. NOT the file contents.
+	 * If you want to check for proprietary vs opensource, use (struct b43_firmware)->opensource
+	 * instead! The (struct b43_firmware)->opensource flag is derived from the actual firmware
+	 * binary code, not just the filename.
+	 */
+	enum b43_firmware_file_type type;
 };
 
 /* Pointers to the firmware data and meta information about it. */
 struct b43_firmware {
 	/* Microcode */
 	struct b43_firmware_file ucode;
@@ -674,13 +703,14 @@ struct b43_firmware {
 
 	/* Firmware revision */
 	u16 rev;
 	/* Firmware patchlevel */
 	u16 patch;
 
-	/* Set to true, if we are using an opensource firmware. */
+	/* Set to true, if we are using an opensource firmware.
+	 * Use this to check for proprietary vs opensource. */
 	bool opensource;
 	/* Set to true, if the core needs a PCM firmware, but
 	 * we failed to load one. This is always false for
 	 * core rev > 10, as these don't need PCM firmware. */
 	bool pcm_request_failed;
 };
Index: wireless-testing/drivers/net/wireless/b43/main.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.h	2008-08-28 18:38:15.000000000 +0200
+++ wireless-testing/drivers/net/wireless/b43/main.h	2009-01-23 19:19:40.000000000 +0100
@@ -118,7 +118,14 @@ void b43_controller_restart(struct b43_w
 #define B43_PS_ASLEEP	(1 << 3)	/* Force device asleep */
 void b43_power_saving_ctl_bits(struct b43_wldev *dev, unsigned int ps_flags);
 
 void b43_mac_suspend(struct b43_wldev *dev);
 void b43_mac_enable(struct b43_wldev *dev);
 
+
+struct b43_request_fw_context;
+int b43_do_request_fw(struct b43_request_fw_context *ctx,
+		      const char *name,
+		      struct b43_firmware_file *fw);
+void b43_do_release_fw(struct b43_firmware_file *fw);
+
 #endif /* B43_MAIN_H_ */

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Jan 24 06:04:47 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Fri, 23 Jan 2009 23:04:47 -0600
Subject: [PATCH] b43: Automatically probe for opensource firmware
In-Reply-To: <200901232121.52012.mb@bu3sch.de>
References: <200901232121.52012.mb@bu3sch.de>
Message-ID: <497AA16F.30409@lwfinger.net>

Michael Buesch wrote:
> First probe for proprietary firmware and then probe for opensource firmware.
> This way around it's a win-win situation.
> 1) If proprietary fw is available, it will work.
> 2) If opensource firmware is available, but no proprietary (Distros can only ship open fw)
>    it might work.
> 3) If both open and proprietary are available, it will work, because it selects
>    the proprietary. We currently don't prefer the open fw in this case, because it doesn't
>    work on all devices. It would introduce a regression otherwise.
> 
> The remaining FIXMEs in this patch are harmless, because they only matter on multiband
> devices, which are not implemented yet anyway.
> 
> Signed-off-by: Michael Buesch <mb at bu3sch.de>
> 
> ---
> 
> John, please queue for the next feature round.

Acked-by: Larry Finger <Larry.Finger at lwfinger.net>

I made one temporary change to search for open-source firmware before
the proprietary version because I boot kernels that are not changed to
handle the o-s version, but still want to test when I can.

I understand and approve of your logic - it just doesn't fit my
current agenda.

Larry


From mb at bu3sch.de  Sat Jan 24 06:58:35 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 24 Jan 2009 06:58:35 +0100
Subject: [PATCH] b43: Automatically probe for opensource firmware
In-Reply-To: <497AA16F.30409@lwfinger.net>
References: <200901232121.52012.mb@bu3sch.de> <497AA16F.30409@lwfinger.net>
Message-ID: <200901240658.35490.mb@bu3sch.de>

On Saturday 24 January 2009 06:04:47 Larry Finger wrote:
> Michael Buesch wrote:
> > First probe for proprietary firmware and then probe for opensource firmware.
> > This way around it's a win-win situation.
> > 1) If proprietary fw is available, it will work.
> > 2) If opensource firmware is available, but no proprietary (Distros can only ship open fw)
> >    it might work.
> > 3) If both open and proprietary are available, it will work, because it selects
> >    the proprietary. We currently don't prefer the open fw in this case, because it doesn't
> >    work on all devices. It would introduce a regression otherwise.
> > 
> > The remaining FIXMEs in this patch are harmless, because they only matter on multiband
> > devices, which are not implemented yet anyway.
> > 
> > Signed-off-by: Michael Buesch <mb at bu3sch.de>
> > 
> > ---
> > 
> > John, please queue for the next feature round.
> 
> Acked-by: Larry Finger <Larry.Finger at lwfinger.net>
> 
> I made one temporary change to search for open-source firmware before
> the proprietary version because I boot kernels that are not changed to
> handle the o-s version, but still want to test when I can.
> 
> I understand and approve of your logic - it just doesn't fit my
> current agenda.

You can still use the fwpostfix module parameter, of course.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Jan 24 22:36:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 24 Jan 2009 22:36:57 +0100
Subject: [PATCH] b43: Fix phy_g.c compiler warning
Message-ID: <200901242236.58641.mb@bu3sch.de>

Fix compile warning for non-debug builds:

drivers/net/wireless/b43/phy_g.c: In function ?b43_gphy_op_recalc_txpower?:
drivers/net/wireless/b43/phy_g.c:3195: warning: unused variable ?dbm?

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/phy_g.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_g.c	2009-01-23 19:18:42.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_g.c	2009-01-24 22:33:44.000000000 +0100
@@ -3188,20 +3188,23 @@ static enum b43_txpwr_result b43_gphy_op
 	/* Lower attenuation => Bigger power output. Negate it. */
 	bbatt_delta = -bbatt_delta;
 	/* RF att affects power level 4 times as much as
 	 * Baseband attennuation. Subtract it. */
 	bbatt_delta -= 4 * rfatt_delta;
 
+#if B43_DEBUG
 	if (b43_debug(dev, B43_DBG_XMITPOWER)) {
 		int dbm = pwr_adjust < 0 ? -pwr_adjust : pwr_adjust;
 		b43dbg(dev->wl,
 		       "[TX power deltas]  %s" Q52_FMT " dBm   =>   "
 		       "bbatt-delta = %d,  rfatt-delta = %d\n",
 		       (pwr_adjust < 0 ? "-" : ""), Q52_ARG(dbm),
 		       bbatt_delta, rfatt_delta);
 	}
+#endif /* DEBUG */
+
 	/* So do we finally need to adjust something in hardware? */
 	if ((rfatt_delta == 0) && (bbatt_delta == 0))
 		goto no_adjustment_needed;
 
 	/* Save the deltas for later when we adjust the power. */
 	gphy->bbatt_delta = bbatt_delta;


-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Sun Jan 25 02:45:32 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Sun, 25 Jan 2009 02:45:32 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <497A1E76.7040309@lwfinger.net>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
	<01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
	<497A1E76.7040309@lwfinger.net>
Message-ID: <81A22BBC-89C3-4300-8E4B-1189E6A95681@ing.unibs.it>

On Jan 23, 2009, at 8:45 PM, Larry Finger wrote:

> Francesco Gringoli wrote:
>> Damn... that would be a very hard writing.... We do not have any  
>> 4311/2
>> board: at first glance there are more condition registers whose  
>> meaning
>> we do not know. Very different hardware, didn't know. Thank you for  
>> the
>> feedback.
>>
>> By the way: is that device inside an AP? If yes what? if not which  
>> brand
>> has the board on? I can look around.
>
> Mine is on a mini-PCIe card in a laptop. The part has an HP Part
> #441090-001, but I expect there are Dell equivalents that are cheaper.
> I don't know about an AP.
>
> Larry
Larry,

could you please be so kind to try the opensource firmware on that  
4311/2 card by renaming it ucode13 and report what happens? I suggest  
to try monitor mode without associating first.

Thanks a lot.
-FG



From Larry.Finger at lwfinger.net  Sun Jan 25 04:45:20 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 24 Jan 2009 21:45:20 -0600
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <81A22BBC-89C3-4300-8E4B-1189E6A95681@ing.unibs.it>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497A05DC.4040101@lwfinger.net>
	<01F0FEC9-8ECF-4284-9428-701B976286D6@ing.unibs.it>
	<497A1E76.7040309@lwfinger.net>
	<81A22BBC-89C3-4300-8E4B-1189E6A95681@ing.unibs.it>
Message-ID: <497BE050.4020000@lwfinger.net>

Francesco Gringoli wrote:
> 
> could you please be so kind to try the opensource firmware on that
> 4311/2 card by renaming it ucode13 and report what happens? I suggest to
> try monitor mode without associating first.

I had already tried it in managed mode. The logged data are

Jan 23 13:37:09 larrylap kernel: b43-phy0: Loading OpenSource firmware
version 351.11970
Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You are using an
old firmware image. Support for old firmware will be removed soon
(official deadline was July 2008).
Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You must go to
http://wireless.kernel.org/en/users/Drivers/b43#devicefirmware and
download the correct firmware for this driver version. Please
carefully read all instructions on this website.
Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Chip initialized
Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: 64-bit DMA initialized
Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::tx
Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::rx
Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::radio
Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Wireless interface
started
Jan 23 13:37:09 larrylap kernel: b43-phy0: Controller restarted
Jan 23 13:37:25 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:29 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:40 larrylap kernel: b43-phy0 ERROR: Firmware watchdog:
The firmware died!
Jan 23 13:37:40 larrylap kernel: b43-phy0: Controller RESET (Firmware
watchdog) ...
Jan 23 13:37:41 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: Wireless interface
stopped
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 rx_ring: Used
slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BK:
Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BE:
Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VI:
Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VO:
Used slots 22/128, Failed frames 0/0 = 0.0%, Average tries 0.00
Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_mcast:
Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00

I haven't gotten to monitor mode yet, but if the firmware cannot
suspend the MAC, I'm not optimistic.

Larry



From mb at bu3sch.de  Sun Jan 25 13:19:45 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 25 Jan 2009 13:19:45 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <497BE050.4020000@lwfinger.net>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<81A22BBC-89C3-4300-8E4B-1189E6A95681@ing.unibs.it>
	<497BE050.4020000@lwfinger.net>
Message-ID: <200901251319.45813.mb@bu3sch.de>

On Sunday 25 January 2009 04:45:20 Larry Finger wrote:
> Francesco Gringoli wrote:
> > 
> > could you please be so kind to try the opensource firmware on that
> > 4311/2 card by renaming it ucode13 and report what happens? I suggest to
> > try monitor mode without associating first.
> 
> I had already tried it in managed mode. The logged data are
> 
> Jan 23 13:37:09 larrylap kernel: b43-phy0: Loading OpenSource firmware
> version 351.11970
> Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You are using an
> old firmware image. Support for old firmware will be removed soon
> (official deadline was July 2008).
> Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You must go to
> http://wireless.kernel.org/en/users/Drivers/b43#devicefirmware and
> download the correct firmware for this driver version. Please
> carefully read all instructions on this website.
> Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Chip initialized
> Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: 64-bit DMA initialized
> Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::tx
> Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::rx
> Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::radio
> Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Wireless interface
> started
> Jan 23 13:37:09 larrylap kernel: b43-phy0: Controller restarted
> Jan 23 13:37:25 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:29 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:40 larrylap kernel: b43-phy0 ERROR: Firmware watchdog:
> The firmware died!
> Jan 23 13:37:40 larrylap kernel: b43-phy0: Controller RESET (Firmware
> watchdog) ...
> Jan 23 13:37:41 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: Wireless interface
> stopped
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 rx_ring: Used
> slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BK:
> Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BE:
> Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VI:
> Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VO:
> Used slots 22/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_mcast:
> Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> 
> I haven't gotten to monitor mode yet, but if the firmware cannot
> suspend the MAC, I'm not optimistic.

Well, there's a reason broadcom does different firmwares for different cores. ;)
It turns out even rev9 runs with its own firmware now. I think that used to run rev5
firmware in the past.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Jan 25 15:49:59 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 25 Jan 2009 15:49:59 +0100
Subject: [PATCH] b43: Dynamically control log verbosity
Message-ID: <200901251550.00288.mb@bu3sch.de>

Dynamically control the log verbosity with a module parameter.
This enables us to dynamically enable debugging messages (or disable
info, warn, error messages) via module parameter or /sys/module/b43/parameters/verbose.

This increases the module size by about 3k. But in practice it reduces the
module size for the user, because some distributions ship the b43 module
with CONFIG_B43_DEBUG set, which increases the module by about 15k.

So with this patch applied, distributions should really _disable_ CONFIG_B43_DEBUG.
There is no reason to keep it in a production-release kernel.
So we have a net reduction in size by about 12k.

This patch also adds a printk of the wireless core revision, so people
don't have to enable SSB debugging to get the wireless core revision.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

John, please queue for the next feature push.


Index: wireless-testing/drivers/net/wireless/b43/b43.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/b43.h	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/b43.h	2009-01-25 15:31:41.000000000 +0100
@@ -875,18 +875,15 @@ static inline bool b43_using_pio_transfe
 void b43info(struct b43_wl *wl, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
 void b43err(struct b43_wl *wl, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
 void b43warn(struct b43_wl *wl, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
-#if B43_DEBUG
 void b43dbg(struct b43_wl *wl, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
-#else /* DEBUG */
-# define b43dbg(wl, fmt...) do { /* nothing */ } while (0)
-#endif /* DEBUG */
+
 
 /* A WARN_ON variant that vanishes when b43 debugging is disabled.
  * This _also_ evaluates the arg with debugging disabled. */
 #if B43_DEBUG
 # define B43_WARN_ON(x)	WARN_ON(x)
 #else
Index: wireless-testing/drivers/net/wireless/b43/debugfs.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.c	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/debugfs.c	2009-01-25 15:31:41.000000000 +0100
@@ -694,15 +694,24 @@ B43_DEBUGFS_FOPS(mmio32write, NULL, mmio
 B43_DEBUGFS_FOPS(tsf, tsf_read_file, tsf_write_file, 1);
 B43_DEBUGFS_FOPS(txstat, txstat_read_file, NULL, 0);
 B43_DEBUGFS_FOPS(restart, NULL, restart_write_file, 1);
 B43_DEBUGFS_FOPS(loctls, loctls_read_file, NULL, 0);
 
 
-int b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature)
+bool b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature)
 {
-	return !!(dev->dfsentry && dev->dfsentry->dyn_debug[feature]);
+	bool enabled;
+
+	enabled = (dev->dfsentry && dev->dfsentry->dyn_debug[feature]);
+	if (unlikely(enabled)) {
+		/* Force full debugging messages, if the user enabled
+		 * some dynamic debugging feature. */
+		b43_modparam_verbose = B43_VERBOSITY_MAX;
+	}
+
+	return enabled;
 }
 
 static void b43_remove_dynamic_debug(struct b43_wldev *dev)
 {
 	struct b43_dfsentry *e = dev->dfsentry;
 	int i;
Index: wireless-testing/drivers/net/wireless/b43/debugfs.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/debugfs.h	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/debugfs.h	2009-01-25 15:31:41.000000000 +0100
@@ -69,24 +69,24 @@ struct b43_dfsentry {
 	/* Enabled/Disabled list for the dynamic debugging features. */
 	u32 dyn_debug[__B43_NR_DYNDBG];
 	/* Dentries for the dynamic debugging entries. */
 	struct dentry *dyn_debug_dentries[__B43_NR_DYNDBG];
 };
 
-int b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature);
+bool b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature);
 
 void b43_debugfs_init(void);
 void b43_debugfs_exit(void);
 void b43_debugfs_add_device(struct b43_wldev *dev);
 void b43_debugfs_remove_device(struct b43_wldev *dev);
 void b43_debugfs_log_txstat(struct b43_wldev *dev,
 			    const struct b43_txstatus *status);
 
 #else /* CONFIG_B43_DEBUG */
 
-static inline int b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature)
+static inline bool b43_debug(struct b43_wldev *dev, enum b43_dyndbg feature)
 {
 	return 0;
 }
 
 static inline void b43_debugfs_init(void)
 {
Index: wireless-testing/drivers/net/wireless/b43/main.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.c	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/main.c	2009-01-25 15:31:41.000000000 +0100
@@ -1,13 +1,13 @@
 /*
 
   Broadcom B43 wireless driver
 
   Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>
   Copyright (c) 2005 Stefano Brivio <stefano.brivio at polimi.it>
-  Copyright (c) 2005, 2006 Michael Buesch <mb at bu3sch.de>
+  Copyright (c) 2005-2009 Michael Buesch <mb at bu3sch.de>
   Copyright (c) 2005 Danny van Dyk <kugelfang at gentoo.org>
   Copyright (c) 2005 Andreas Jaggi <andreas.jaggi at waterwave.ch>
 
   Some parts of the code in this file are derived from the ipw2200
   driver  Copyright(c) 2003 - 2004 Intel Corporation.
 
@@ -85,12 +85,16 @@ module_param_named(qos, b43_modparam_qos
 MODULE_PARM_DESC(qos, "Enable QOS support (default on)");
 
 static int modparam_btcoex = 1;
 module_param_named(btcoex, modparam_btcoex, int, 0444);
 MODULE_PARM_DESC(btcoex, "Enable Bluetooth coexistance (default on)");
 
+int b43_modparam_verbose = B43_VERBOSITY_DEFAULT;
+module_param_named(verbose, b43_modparam_verbose, int, 0644);
+MODULE_PARM_DESC(verbose, "Log message verbosity: 0=error, 1=warn, 2=info(default), 3=debug");
+
 
 static const struct ssb_device_id b43_ssb_tbl[] = {
 	SSB_DEVICE(SSB_VENDOR_BROADCOM, SSB_DEV_80211, 5),
 	SSB_DEVICE(SSB_VENDOR_BROADCOM, SSB_DEV_80211, 6),
 	SSB_DEVICE(SSB_VENDOR_BROADCOM, SSB_DEV_80211, 7),
 	SSB_DEVICE(SSB_VENDOR_BROADCOM, SSB_DEV_80211, 9),
@@ -297,12 +301,14 @@ static int b43_ratelimit(struct b43_wl *
 }
 
 void b43info(struct b43_wl *wl, const char *fmt, ...)
 {
 	va_list args;
 
+	if (b43_modparam_verbose < B43_VERBOSITY_INFO)
+		return;
 	if (!b43_ratelimit(wl))
 		return;
 	va_start(args, fmt);
 	printk(KERN_INFO "b43-%s: ",
 	       (wl && wl->hw) ? wiphy_name(wl->hw->wiphy) : "wlan");
 	vprintk(fmt, args);
@@ -310,12 +316,14 @@ void b43info(struct b43_wl *wl, const ch
 }
 
 void b43err(struct b43_wl *wl, const char *fmt, ...)
 {
 	va_list args;
 
+	if (b43_modparam_verbose < B43_VERBOSITY_ERROR)
+		return;
 	if (!b43_ratelimit(wl))
 		return;
 	va_start(args, fmt);
 	printk(KERN_ERR "b43-%s ERROR: ",
 	       (wl && wl->hw) ? wiphy_name(wl->hw->wiphy) : "wlan");
 	vprintk(fmt, args);
@@ -323,33 +331,35 @@ void b43err(struct b43_wl *wl, const cha
 }
 
 void b43warn(struct b43_wl *wl, const char *fmt, ...)
 {
 	va_list args;
 
+	if (b43_modparam_verbose < B43_VERBOSITY_WARN)
+		return;
 	if (!b43_ratelimit(wl))
 		return;
 	va_start(args, fmt);
 	printk(KERN_WARNING "b43-%s warning: ",
 	       (wl && wl->hw) ? wiphy_name(wl->hw->wiphy) : "wlan");
 	vprintk(fmt, args);
 	va_end(args);
 }
 
-#if B43_DEBUG
 void b43dbg(struct b43_wl *wl, const char *fmt, ...)
 {
 	va_list args;
 
+	if (b43_modparam_verbose < B43_VERBOSITY_DEBUG)
+		return;
 	va_start(args, fmt);
 	printk(KERN_DEBUG "b43-%s debug: ",
 	       (wl && wl->hw) ? wiphy_name(wl->hw->wiphy) : "wlan");
 	vprintk(fmt, args);
 	va_end(args);
 }
-#endif /* DEBUG */
 
 static void b43_ram_write(struct b43_wldev *dev, u16 offset, u32 val)
 {
 	u32 macctl;
 
 	B43_WARN_ON(offset % 4 != 0);
@@ -3549,15 +3559,13 @@ static int b43_op_set_key(struct ieee802
 {
 	struct b43_wl *wl = hw_to_b43_wl(hw);
 	struct b43_wldev *dev;
 	u8 algorithm;
 	u8 index;
 	int err;
-#if B43_DEBUG
-	static const u8 bcast_addr[ETH_ALEN] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
-#endif
+	static const u8 bcast_addr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
 
 	if (modparam_nohwcrypt)
 		return -ENOSPC; /* User disabled HW-crypto */
 
 	mutex_lock(&wl->mutex);
 	spin_lock_irq(&wl->irq_lock);
@@ -4702,15 +4710,16 @@ static int b43_wireless_init(struct ssb_
 	mutex_init(&wl->mutex);
 	INIT_LIST_HEAD(&wl->devlist);
 	INIT_WORK(&wl->beacon_update_trigger, b43_beacon_update_trigger_work);
 	INIT_WORK(&wl->txpower_adjust_work, b43_phy_txpower_adjust_work);
 
 	ssb_set_devtypedata(dev, wl);
-	b43info(wl, "Broadcom %04X WLAN found\n", dev->bus->chip_id);
+	b43info(wl, "Broadcom %04X WLAN found (core revision %u)\n",
+		dev->bus->chip_id, dev->id.revision);
 	err = 0;
-      out:
+out:
 	return err;
 }
 
 static int b43_probe(struct ssb_device *dev, const struct ssb_device_id *id)
 {
 	struct b43_wl *wl;
Index: wireless-testing/drivers/net/wireless/b43/main.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/main.h	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/main.h	2009-01-25 15:31:41.000000000 +0100
@@ -37,12 +37,30 @@
 #define P4D_BYTES(line, nr_bytes)	P4D_BYT3S(line, nr_bytes)
 /* Magic helper macro to pad structures. Ignore those above. It's magic. */
 #define PAD_BYTES(nr_bytes)		P4D_BYTES( __LINE__ , (nr_bytes))
 
 
 extern int b43_modparam_qos;
+extern int b43_modparam_verbose;
+
+/* Logmessage verbosity levels. Update the b43_modparam_verbose helptext, if
+ * you add or remove levels. */
+enum b43_verbosity {
+	B43_VERBOSITY_ERROR,
+	B43_VERBOSITY_WARN,
+	B43_VERBOSITY_INFO,
+	B43_VERBOSITY_DEBUG,
+	__B43_VERBOSITY_AFTERLAST, /* keep last */
+
+	B43_VERBOSITY_MAX = __B43_VERBOSITY_AFTERLAST - 1,
+#if B43_DEBUG
+	B43_VERBOSITY_DEFAULT = B43_VERBOSITY_DEBUG,
+#else
+	B43_VERBOSITY_DEFAULT = B43_VERBOSITY_INFO,
+#endif
+};
 
 
 /* Lightweight function to convert a frequency (in Mhz) to a channel number. */
 static inline u8 b43_freq_to_channel_5ghz(int freq)
 {
 	return ((freq - 5000) / 5);
Index: wireless-testing/drivers/net/wireless/b43/Kconfig
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Kconfig	2009-01-25 15:29:55.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/Kconfig	2009-01-25 15:31:41.000000000 +0100
@@ -107,16 +107,24 @@ config B43_RFKILL
 	default y
 
 config B43_DEBUG
 	bool "Broadcom 43xx debugging"
 	depends on B43
 	---help---
-	  Broadcom 43xx debugging messages.
+	  Broadcom 43xx debugging.
 
-	  Say Y, if you want to find out why the driver does not
-	  work for you.
+	  This adds additional runtime sanity checks and statistics to the driver.
+	  These checks and statistics might me expensive and hurt runtime performance
+	  of your system.
+	  This also adds the b43 debugfs interface.
+
+	  Do not enable this, unless you are debugging the driver.
+
+	  Say N, if you are a distributor or user building a release kernel
+	  for production use.
+	  Only say Y, if you are debugging a problem in the b43 driver sourcecode.
 
 config B43_FORCE_PIO
 	bool "Force usage of PIO instead of DMA"
 	depends on B43 && B43_DEBUG
 	---help---
 	  This will disable DMA and always enable PIO instead.

-- 
Greetings, Michael.


From mb at bu3sch.de  Sun Jan 25 16:03:54 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sun, 25 Jan 2009 16:03:54 +0100
Subject: integration of opensource firmware with b43 kernel driver
In-Reply-To: <200901251319.45813.mb@bu3sch.de>
References: <FF33C500-6653-4A69-B34D-FBE47B2136D3@ing.unibs.it>
	<497BE050.4020000@lwfinger.net> <200901251319.45813.mb@bu3sch.de>
Message-ID: <200901251603.54278.mb@bu3sch.de>

On Sunday 25 January 2009 13:19:45 Michael Buesch wrote:
> On Sunday 25 January 2009 04:45:20 Larry Finger wrote:
> > Francesco Gringoli wrote:
> > > 
> > > could you please be so kind to try the opensource firmware on that
> > > 4311/2 card by renaming it ucode13 and report what happens? I suggest to
> > > try monitor mode without associating first.
> > 
> > I had already tried it in managed mode. The logged data are
> > 
> > Jan 23 13:37:09 larrylap kernel: b43-phy0: Loading OpenSource firmware
> > version 351.11970
> > Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You are using an
> > old firmware image. Support for old firmware will be removed soon
> > (official deadline was July 2008).
> > Jan 23 13:37:09 larrylap kernel: b43-phy0 warning: You must go to
> > http://wireless.kernel.org/en/users/Drivers/b43#devicefirmware and
> > download the correct firmware for this driver version. Please
> > carefully read all instructions on this website.
> > Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Chip initialized
> > Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: 64-bit DMA initialized
> > Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::tx
> > Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::rx
> > Jan 23 13:37:09 larrylap kernel: Registered led device: b43-phy0::radio
> > Jan 23 13:37:09 larrylap kernel: b43-phy0 debug: Wireless interface
> > started
> > Jan 23 13:37:09 larrylap kernel: b43-phy0: Controller restarted
> > Jan 23 13:37:25 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:29 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:30 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:31 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:32 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:40 larrylap kernel: b43-phy0 ERROR: Firmware watchdog:
> > The firmware died!
> > Jan 23 13:37:40 larrylap kernel: b43-phy0: Controller RESET (Firmware
> > watchdog) ...
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 ERROR: MAC suspend failed
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: Wireless interface
> > stopped
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 rx_ring: Used
> > slots 0/64, Failed frames 0/0 = 0.0%, Average tries 0.00
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BK:
> > Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_BE:
> > Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VI:
> > Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_AC_VO:
> > Used slots 22/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> > Jan 23 13:37:41 larrylap kernel: b43-phy0 debug: DMA-64 tx_ring_mcast:
> > Used slots 0/128, Failed frames 0/0 = 0.0%, Average tries 0.00
> > 
> > I haven't gotten to monitor mode yet, but if the firmware cannot
> > suspend the MAC, I'm not optimistic.
> 
> Well, there's a reason broadcom does different firmwares for different cores. ;)
> It turns out even rev9 runs with its own firmware now. I think that used to run rev5
> firmware in the past.

Btw, I guess you know you guys know about the b43-fwdump utility found in b43-tools/debug.
It provides a kernel-oops-like firmware register (and SHM) dump and a (pseudo-)backtrace for
the current program counter of the firmware.

It requires the b43 debugfs interface to be available.

Very nice to debug this kind of "what the hell is happening" errors, as you can see what
code the firmware does currently execute.

For the pseudo-backtrace you must provide the .fw file to the b43-fwdump tool.
(see b43-fwdump --help)

-- 
Greetings, Michael.


From zajec5polish at gmail.com  Sun Jan 25 19:37:40 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sun, 25 Jan 2009 19:37:40 +0100
Subject: [b43] opensource firmware
In-Reply-To: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
References: <9FB118DA-845D-4708-84F3-4D51837D8C68@gmail.com>
Message-ID: <14b026160901251037m43efe6efjde4a185a517ddf66@mail.gmail.com>

2009/1/14 Lorenzo Nava <navalorenx at gmail.com>:
> we completed the 1st version of initvals. They are available at http://www.ing.unibs.it/openfwwf
> . Currently only binary version is available: don't worry, we will
> publish source code as soon as possible!! This first version is a
> "test version": please try it and let us know if everythink is ok...
>
> Today we have also tested a new firmware version that works with WPA2-
> personal (both TKIP and CCMP) and WPA2-enterprise (EAP-TTLS) (tested
> on 4306 and 4318 PCI device). If anybody was interested please try new
> firmware with encryption and let us know if it works correctly, thanks!
>
> Initvals and new firmware version can be found at http://www.ing.unibs.it/openfwwf

I belive you still need testing?

I used openfwwf-5.0.tar.gz and initvals.tar.gz for my bcm4318 card  in
Acer Aspire 5024 (qos=0). Scanning works fine, connecting to WPA
Personal network also. I can't check speed performance as I don't have
antenna connected to my card (notebook lid just gone... I belive
"Acer" explains that situation to you?). As for stability it's great.
I downloaded 100MB, left notebook for 24h and then downloaded another
50MB.

So to sum up: I don't feel any difference between opensource and
broardcom's firmware.

-- 
Rafa? Mi?ecki


From mb at bu3sch.de  Mon Jan 26 11:27:23 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 26 Jan 2009 11:27:23 +0100
Subject: LP-PHY reverse engineering progress
Message-ID: <200901261127.23507.mb@bu3sch.de>

Hi,

What's the LP-PHY progress? I'd like to get some implementation going. :)

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Mon Jan 26 16:34:49 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 26 Jan 2009 09:34:49 -0600
Subject: Strange situation with BCM4318
Message-ID: <497DD819.8050808@lwfinger.net>

Michael,

On the openSUSE wireless forum was just posted the following info:

=======================

I've finally tested it with OpenSuSe 11.1. And it works!!! my broadcom
4318 wireless device works with the b43 firmware only if I install the
older version broadcom-wl-4.80.53.0.tar.bz2. (no ndiswrapper is needed)

This is puzzling since the b43 linux wireless website clearly states
this version is meant for the linux kernel 2.6.24 or older. This would
suggest a conflict between the newer firmware and the current kernel.

I fixed my problem and like I said I stumbled upon the same problem in
Ubuntu. Thus I decided to email the b43 developers, but so far I've
received no reply.

$ dmesg

b43-pci-bridge 0000:06:02.0: PCI INT A -> GSI 21 (level, low) -> IRQ
21
b43-phy0: Broadcom 4318 WLAN found
Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
Clocksource tsc unstable (delta = -216435972 ns)
input: b43-phy0 as /devices/virtual/input/input8
firmware: requesting b43/ucode5.fw
firmware: requesting b43/pcm5.fw
firmware: requesting b43/b0g0initvals5.fw
firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 351.126 (2006-07-29 05:54:02)
b43-phy0 warning: You are using an old firmware image. Support for old
firmware will be removed in July 2008.
b43-phy0 warning: You must go to 'b43 - Linux Wireless'
(http://linuxwireless.org/en/users/Drivers/b43#devicefirmware) and
download the latest firmware (version 4).
Registered led device: b43-phy0::radio


====================================

Do you know of any reason why version 410 firmware fails on this device?

Larry


From Larry.Finger at lwfinger.net  Mon Jan 26 16:39:53 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 26 Jan 2009 09:39:53 -0600
Subject: LP-PHY reverse engineering progress
In-Reply-To: <200901261127.23507.mb@bu3sch.de>
References: <200901261127.23507.mb@bu3sch.de>
Message-ID: <497DD949.80202@lwfinger.net>

Michael Buesch wrote:
> Hi,
> 
> What's the LP-PHY progress? I'd like to get some implementation going. :)

As you likely noted, I've been busy with non-BCM43xx tasks.

The decompilation of the LP routines is essentially complete, and most
of the routines have been converted into specs in the private area of
the web pile. I have an article for the openSUSE newsletter to finish,
then my schedule is clear to work on the LP project.

Larry


From ccmcphe at verizon.net  Mon Jan 26 22:17:00 2009
From: ccmcphe at verizon.net (Tex)
Date: Mon, 26 Jan 2009 16:17:00 -0500
Subject: 4318 Question Frame Check Sequence Errors
Message-ID: <497E284C.7030908@verizon.net>

I have been running some surveys with the Atheros and Broadcom Drivers. 
When viewing the frames from wireshark , while in monitor mode, I 
noticed that the Atheros driver is reporting FCS errors on some frames, 
but the Broadcom driver isn't, in the radiotap header. If I expand the 
frame and look at the FCS wireshark reports the frame as bad and shows 
what the CRC should be. I put printk's in pio_rx_frame() (see below) and 
noticed that the macstat is being reported as zero. Does this mean that 
the status is not being sent to the driver from the chip or firmware? Is 
there some way for me to configure it to report bad FCS frames?

             macstat = le32_to_cpu(rxhdr.mac_status);
             printk (KERN_DEBUG "pio_rx_frame macstat is %x\n", macstat);
             if (macstat & B43_RX_MAC_FCSERR) {
                     if (!(q->dev->wl->filter_flags & FIF_FCSFAIL)) {
                             /* Drop frames with failed FCS. */
                             err_msg = "Frame FCS error";
                             goto rx_error;
                     }

b43_op_configure filter has the following flags set:
        *fflags &= FIF_PROMISC_IN_BSS |
                  FIF_ALLMULTI |
                  FIF_FCSFAIL |
                  FIF_PLCPFAIL |
                  FIF_CONTROL |
                  FIF_OTHER_BSS |
                  FIF_BCN_PRBRESP_PROMISC;

        changed &= FIF_PROMISC_IN_BSS |
                   FIF_ALLMULTI |
                   FIF_FCSFAIL |
                   FIF_PLCPFAIL |
                   FIF_CONTROL |
                   FIF_OTHER_BSS |
                   FIF_BCN_PRBRESP_PROMISC;




Thanks much
Tex



From francesco.gringoli at ing.unibs.it  Mon Jan 26 22:31:27 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Mon, 26 Jan 2009 22:31:27 +0100
Subject: 4318 Question Frame Check Sequence Errors
In-Reply-To: <497E284C.7030908@verizon.net>
References: <497E284C.7030908@verizon.net>
Message-ID: <BA39AE75-0D80-4A36-9843-D1097C51914B@ing.unibs.it>


On Jan 26, 2009, at 10:17 PM, Tex wrote:

> I have been running some surveys with the Atheros and Broadcom  
> Drivers.
> When viewing the frames from wireshark , while in monitor mode, I
> noticed that the Atheros driver is reporting FCS errors on some  
> frames,
> but the Broadcom driver isn't, in the radiotap header. If I expand the
> frame and look at the FCS wireshark reports the frame as bad and shows
> what the CRC should be. I put printk's in pio_rx_frame() (see below)  
> and
> noticed that the macstat is being reported as zero. Does this mean  
> that
> the status is not being sent to the driver from the chip or  
> firmware? Is
> there some way for me to configure it to report bad FCS frames?
When the flag B43_MACCTL_KEEP_BAD is enabled in the opmode of b43,  
then the driver activates the corresponding flag in the mac control  
high register so that the firmware is configured to report bad frames  
to the host. However as soon as they are sent through dma, the b43  
driver logs messages like "b43-phy5 debug: RX: Packet dropped" and  
frames are not delivered to the upper layers. To investigate you can  
try to enable that flag by modifying the basic configuration in  
b43_adjust_opmode(struct b43_wldev *dev) defined in main.c.

Cheers,
-FG

>
>             macstat = le32_to_cpu(rxhdr.mac_status);
>             printk (KERN_DEBUG "pio_rx_frame macstat is %x\n",  
> macstat);
>             if (macstat & B43_RX_MAC_FCSERR) {
>                     if (!(q->dev->wl->filter_flags & FIF_FCSFAIL)) {
>                             /* Drop frames with failed FCS. */
>                             err_msg = "Frame FCS error";
>                             goto rx_error;
>                     }
>
> b43_op_configure filter has the following flags set:
>        *fflags &= FIF_PROMISC_IN_BSS |
>                  FIF_ALLMULTI |
>                  FIF_FCSFAIL |
>                  FIF_PLCPFAIL |
>                  FIF_CONTROL |
>                  FIF_OTHER_BSS |
>                  FIF_BCN_PRBRESP_PROMISC;
>
>        changed &= FIF_PROMISC_IN_BSS |
>                   FIF_ALLMULTI |
>                   FIF_FCSFAIL |
>                   FIF_PLCPFAIL |
>                   FIF_CONTROL |
>                   FIF_OTHER_BSS |
>                   FIF_BCN_PRBRESP_PROMISC;
>
>
>
>
> Thanks much
> Tex
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev

-------

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014
WWW: http://www.ing.unibs.it/~gringoli






From mb at bu3sch.de  Mon Jan 26 22:41:35 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 26 Jan 2009 22:41:35 +0100
Subject: LP-PHY reverse engineering progress
In-Reply-To: <497DD949.80202@lwfinger.net>
References: <200901261127.23507.mb@bu3sch.de> <497DD949.80202@lwfinger.net>
Message-ID: <200901262241.35858.mb@bu3sch.de>

On Monday 26 January 2009 16:39:53 Larry Finger wrote:
> Michael Buesch wrote:
> > Hi,
> > 
> > What's the LP-PHY progress? I'd like to get some implementation going. :)
> 
> As you likely noted, I've been busy with non-BCM43xx tasks.
> 
> The decompilation of the LP routines is essentially complete, and most
> of the routines have been converted into specs in the private area of
> the web pile. I have an article for the openSUSE newsletter to finish,
> then my schedule is clear to work on the LP project.

Thanks a lot. That's very nice. I'm interested in implementing the stuff
and I already started to implement the existing specs stuff.
I'm interested to get the Asus WL500Gv2 working, which has an LP-PHY.

Thanks again for your hard work on the specs.
It seems there are a few things I don't quite understand, yet. Is it best
to use private mail to you to ask some questions, or are you planning to join
the #bcm-specs IRC channel, so I can ask questions there. I prefer the IRC
channel, but I fully accept, if you don't like that and prefer mail.
The reason I prefer IRC is that it usually has less communication delays and
allows "quick questions".

Thanks.

-- 
Greetings, Michael.


From mb at bu3sch.de  Mon Jan 26 22:43:07 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 26 Jan 2009 22:43:07 +0100
Subject: Strange situation with BCM4318
In-Reply-To: <497DD819.8050808@lwfinger.net>
References: <497DD819.8050808@lwfinger.net>
Message-ID: <200901262243.07749.mb@bu3sch.de>

On Monday 26 January 2009 16:34:49 Larry Finger wrote:
> Do you know of any reason why version 410 firmware fails on this device?

No, it works on all of my 4318 devices.
Can you suggest to try without btcoex (module parameter)?

-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Mon Jan 26 22:53:56 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Mon, 26 Jan 2009 15:53:56 -0600
Subject: LP-PHY reverse engineering progress
In-Reply-To: <200901262241.35858.mb@bu3sch.de>
References: <200901261127.23507.mb@bu3sch.de> <497DD949.80202@lwfinger.net>
	<200901262241.35858.mb@bu3sch.de>
Message-ID: <497E30F4.9000206@lwfinger.net>

Michael Buesch wrote:
> 
> Thanks a lot. That's very nice. I'm interested in implementing the stuff
> and I already started to implement the existing specs stuff.
> I'm interested to get the Asus WL500Gv2 working, which has an LP-PHY.
> 
> Thanks again for your hard work on the specs.
> It seems there are a few things I don't quite understand, yet. Is it best
> to use private mail to you to ask some questions, or are you planning to join
> the #bcm-specs IRC channel, so I can ask questions there. I prefer the IRC
> channel, but I fully accept, if you don't like that and prefer mail.
> The reason I prefer IRC is that it usually has less communication delays and
> allows "quick questions".


I've never used IRC, but I certainly am willing to try. What IRC
client do you recommend?

Larry


From gavron at wetwork.net  Mon Jan 26 22:58:07 2009
From: gavron at wetwork.net (gavron at wetwork.net)
Date: Mon, 26 Jan 2009 14:58:07 -0700
Subject: LP-PHY reverse engineering progress
In-Reply-To: <497E30F4.9000206@lwfinger.net>
References: <200901261127.23507.mb@bu3sch.de> <497DD949.80202@lwfinger.net>
	<200901262241.35858.mb@bu3sch.de> <497E30F4.9000206@lwfinger.net>
Message-ID: <497E31EF.1040402@wetwork.net>

pidgin :)  (hands down)
E

Larry Finger wrote:
> Michael Buesch wrote:
>   
>> Thanks a lot. That's very nice. I'm interested in implementing the stuff
>> and I already started to implement the existing specs stuff.
>> I'm interested to get the Asus WL500Gv2 working, which has an LP-PHY.
>>
>> Thanks again for your hard work on the specs.
>> It seems there are a few things I don't quite understand, yet. Is it best
>> to use private mail to you to ask some questions, or are you planning to join
>> the #bcm-specs IRC channel, so I can ask questions there. I prefer the IRC
>> channel, but I fully accept, if you don't like that and prefer mail.
>> The reason I prefer IRC is that it usually has less communication delays and
>> allows "quick questions".
>>     
>
>
> I've never used IRC, but I certainly am willing to try. What IRC
> client do you recommend?
>
> Larry
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>   

-- 
Legal Disclaimer that you are now contractually bound to under all laws with no recourse:
http://attrition.org/security/rants/z/disclaimers.html



From mb at bu3sch.de  Mon Jan 26 23:12:03 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Mon, 26 Jan 2009 23:12:03 +0100
Subject: LP-PHY reverse engineering progress
In-Reply-To: <497E30F4.9000206@lwfinger.net>
References: <200901261127.23507.mb@bu3sch.de> <200901262241.35858.mb@bu3sch.de>
	<497E30F4.9000206@lwfinger.net>
Message-ID: <200901262312.03388.mb@bu3sch.de>

On Monday 26 January 2009 22:53:56 Larry Finger wrote:
> Michael Buesch wrote:
> > 
> > Thanks a lot. That's very nice. I'm interested in implementing the stuff
> > and I already started to implement the existing specs stuff.
> > I'm interested to get the Asus WL500Gv2 working, which has an LP-PHY.
> > 
> > Thanks again for your hard work on the specs.
> > It seems there are a few things I don't quite understand, yet. Is it best
> > to use private mail to you to ask some questions, or are you planning to join
> > the #bcm-specs IRC channel, so I can ask questions there. I prefer the IRC
> > channel, but I fully accept, if you don't like that and prefer mail.
> > The reason I prefer IRC is that it usually has less communication delays and
> > allows "quick questions".
> 
> 
> I've never used IRC, but I certainly am willing to try. What IRC
> client do you recommend?

I use Konversation. It's pretty convenient and has a lot of features.
But there are other good clients, too. If you're commandline addict, BitchX is pretty good.
XChat also isn't that bad, but I had a reason to switch away from it. I don't quite remember. :)

If you type "irc" into freshmeat, you probably find a lot more that I forgot about.

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Tue Jan 27 00:21:15 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 27 Jan 2009 00:21:15 +0100
Subject: 4318 Question Frame Check Sequence Errors
In-Reply-To: <497E284C.7030908@verizon.net>
References: <497E284C.7030908@verizon.net>
Message-ID: <69e28c910901261521n604d16d8k3520a5052678c020@mail.gmail.com>

On Mon, Jan 26, 2009 at 10:17 PM, Tex <ccmcphe at verizon.net> wrote:
> I have been running some surveys with the Atheros and Broadcom Drivers.
> When viewing the frames from wireshark , while in monitor mode, I
> noticed that the Atheros driver is reporting FCS errors on some frames,
> but the Broadcom driver isn't, in the radiotap header. If I expand the
> frame and look at the FCS wireshark reports the frame as bad and shows
> what the CRC should be. I put printk's in pio_rx_frame() (see below) and
> noticed that the macstat is being reported as zero. Does this mean that
> the status is not being sent to the driver from the chip or firmware? Is
> there some way for me to configure it to report bad FCS frames?
>
>             macstat = le32_to_cpu(rxhdr.mac_status);
>             printk (KERN_DEBUG "pio_rx_frame macstat is %x\n", macstat);
>             if (macstat & B43_RX_MAC_FCSERR) {
>                     if (!(q->dev->wl->filter_flags & FIF_FCSFAIL)) {
>                             /* Drop frames with failed FCS. */
>                             err_msg = "Frame FCS error";
>                             goto rx_error;
>                     }
>
> b43_op_configure filter has the following flags set:
>        *fflags &= FIF_PROMISC_IN_BSS |
>                  FIF_ALLMULTI |
>                  FIF_FCSFAIL |
>                  FIF_PLCPFAIL |
>                  FIF_CONTROL |
>                  FIF_OTHER_BSS |
>                  FIF_BCN_PRBRESP_PROMISC;
>
>        changed &= FIF_PROMISC_IN_BSS |
>                   FIF_ALLMULTI |
>                   FIF_FCSFAIL |
>                   FIF_PLCPFAIL |
>                   FIF_CONTROL |
>                   FIF_OTHER_BSS |
>                   FIF_BCN_PRBRESP_PROMISC;
>
>
>
>
> Thanks much
> Tex
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

Note that you will never see correct FCS values in the Radiotap
header, as Linux does not actually insert the FCS into the header -
what Wireshark parses as the FCS field is actually RX Flags. (OpenBSD
uses index 14 for FCS, while all others use it for RX flags.
Wireshark, for some reason, follows the OpenBSD spec.)

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From adam at spicenitz.org  Tue Jan 27 22:51:50 2009
From: adam at spicenitz.org (Adam Goode)
Date: Tue, 27 Jan 2009 16:51:50 -0500
Subject: 4315 status?
Message-ID: <497F81F6.7000500@spicenitz.org>

Hi,

I have a new laptop with a bcm4315, pci id 14e4:4515. Any update on
support? Can I be of any assistance?


Thanks,

Adam



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 259 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090127/0efb935c/attachment.pgp>

From mb at bu3sch.de  Tue Jan 27 22:56:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 27 Jan 2009 22:56:57 +0100
Subject: 4315 status?
In-Reply-To: <497F81F6.7000500@spicenitz.org>
References: <497F81F6.7000500@spicenitz.org>
Message-ID: <200901272256.57554.mb@bu3sch.de>

On Tuesday 27 January 2009 22:51:50 Adam Goode wrote:
> Hi,
> 
> I have a new laptop with a bcm4315, pci id 14e4:4515. Any update on
> support? Can I be of any assistance?

I'm working on it, however, I just bricked my device. Let's hope I can
fix it via JTAG. :)

-- 
Greetings, Michael.


From belxjander at gmail.com  Tue Jan 27 23:07:02 2009
From: belxjander at gmail.com (Kajikawa Jeremy)
Date: Wed, 28 Jan 2009 07:07:02 +0900
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <200901272256.57554.mb@bu3sch.de>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
Message-ID: <1233094022.10517.3.camel@claire>

Ive had this card a while and know it worked with the old bcm43xx
driver...

but I would like to get it working on the newer drivers with an updated
kernel.

especially as this is an install for 64bit and the old install was
32bit.

current kernel version is 2.6.28 and I hand-compiled from sources.

is there any options or other I can use or do I need to find
 some means of bss update for my card to use newer firmware and
 become functional?

I am *needing* this to keep a server online (and not require a laptop as
net-card)

any help at all will be appreciated!!!!

Sincerely,
 Jeremy

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 835 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090128/66eefa89/attachment.pgp>

From belxjander at gmail.com  Tue Jan 27 23:07:02 2009
From: belxjander at gmail.com (Kajikawa Jeremy)
Date: Wed, 28 Jan 2009 07:07:02 +0900
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <200901272256.57554.mb@bu3sch.de>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
Message-ID: <1233094022.10517.3.camel@claire>

Ive had this card a while and know it worked with the old bcm43xx
driver...

but I would like to get it working on the newer drivers with an updated
kernel.

especially as this is an install for 64bit and the old install was
32bit.

current kernel version is 2.6.28 and I hand-compiled from sources.

is there any options or other I can use or do I need to find
 some means of bss update for my card to use newer firmware and
 become functional?

I am *needing* this to keep a server online (and not require a laptop as
net-card)

any help at all will be appreciated!!!!

Sincerely,
 Jeremy

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 835 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090128/66eefa89/attachment-0001.pgp>

From mb at bu3sch.de  Tue Jan 27 22:56:57 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Tue, 27 Jan 2009 22:56:57 +0100
Subject: 4315 status?
In-Reply-To: <497F81F6.7000500@spicenitz.org>
References: <497F81F6.7000500@spicenitz.org>
Message-ID: <200901272256.57554.mb@bu3sch.de>

On Tuesday 27 January 2009 22:51:50 Adam Goode wrote:
> Hi,
> 
> I have a new laptop with a bcm4315, pci id 14e4:4515. Any update on
> support? Can I be of any assistance?

I'm working on it, however, I just bricked my device. Let's hope I can
fix it via JTAG. :)

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Tue Jan 27 23:45:30 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 27 Jan 2009 23:45:30 +0100
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <1233094022.10517.3.camel@claire>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
	<1233094022.10517.3.camel@claire>
Message-ID: <69e28c910901271445n7c35075ah1592c5ff76c1b827@mail.gmail.com>

On Tue, Jan 27, 2009 at 11:07 PM, Kajikawa Jeremy <belxjander at gmail.com> wrote:
> Ive had this card a while and know it worked with the old bcm43xx
> driver...
>
> but I would like to get it working on the newer drivers with an updated
> kernel.
>
> especially as this is an install for 64bit and the old install was
> 32bit.
>
> current kernel version is 2.6.28 and I hand-compiled from sources.
>
> is there any options or other I can use or do I need to find
>  some means of bss update for my card to use newer firmware and
>  become functional?
>
> I am *needing* this to keep a server online (and not require a laptop as
> net-card)
>
> any help at all will be appreciated!!!!
>
> Sincerely,
>  Jeremy
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>

That is likely a b43legacy card - you need the same firmware as for
bcm43xx, but you must cut it using b43-fwcutter instead of
bcm43xx-fwcutter.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From netrolller.3d at gmail.com  Tue Jan 27 23:45:30 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Tue, 27 Jan 2009 23:45:30 +0100
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <1233094022.10517.3.camel@claire>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
	<1233094022.10517.3.camel@claire>
Message-ID: <69e28c910901271445n7c35075ah1592c5ff76c1b827@mail.gmail.com>

On Tue, Jan 27, 2009 at 11:07 PM, Kajikawa Jeremy <belxjander at gmail.com> wrote:
> Ive had this card a while and know it worked with the old bcm43xx
> driver...
>
> but I would like to get it working on the newer drivers with an updated
> kernel.
>
> especially as this is an install for 64bit and the old install was
> 32bit.
>
> current kernel version is 2.6.28 and I hand-compiled from sources.
>
> is there any options or other I can use or do I need to find
>  some means of bss update for my card to use newer firmware and
>  become functional?
>
> I am *needing* this to keep a server online (and not require a laptop as
> net-card)
>
> any help at all will be appreciated!!!!
>
> Sincerely,
>  Jeremy
>
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>
>

That is likely a b43legacy card - you need the same firmware as for
bcm43xx, but you must cut it using b43-fwcutter instead of
bcm43xx-fwcutter.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From Larry.Finger at lwfinger.net  Tue Jan 27 23:55:38 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 27 Jan 2009 16:55:38 -0600
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <1233094022.10517.3.camel@claire>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
	<1233094022.10517.3.camel@claire>
Message-ID: <497F90EA.8000303@lwfinger.net>

Kajikawa Jeremy wrote:
> Ive had this card a while and know it worked with the old bcm43xx
> driver...
> 
> but I would like to get it working on the newer drivers with an updated
> kernel.
> 
> especially as this is an install for 64bit and the old install was
> 32bit.
> 
> current kernel version is 2.6.28 and I hand-compiled from sources.
> 
> is there any options or other I can use or do I need to find
>  some means of bss update for my card to use newer firmware and
>  become functional?
> 
> I am *needing* this to keep a server online (and not require a laptop as
> net-card)
> 
> any help at all will be appreciated!!!!

I'm not sure what a 14e4:4300 is, but if it worked with bcm43xx, then
it should work with b43, or quite likely with b43legacy.

The first step will be to apply the patch below to your kernel. Once
that is done, the device will be recognized. After you restart, then
run the command dmesg | egrep "ssb|b43" and post the results.

Larry

============


Index: wireless-testing/drivers/ssb/b43_pci_bridge.c
===================================================================
--- wireless-testing.orig/drivers/ssb/b43_pci_bridge.c
+++ wireless-testing/drivers/ssb/b43_pci_bridge.c
@@ -17,6 +17,7 @@


 static const struct pci_device_id b43_pci_bridge_tbl[] = {
+	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4300) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4301) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4307) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4311) },

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43_4300
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090127/70c9eb6f/attachment.ksh>

From Larry.Finger at lwfinger.net  Tue Jan 27 23:55:38 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Tue, 27 Jan 2009 16:55:38 -0600
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <1233094022.10517.3.camel@claire>
References: <497F81F6.7000500@spicenitz.org> <200901272256.57554.mb@bu3sch.de>
	<1233094022.10517.3.camel@claire>
Message-ID: <497F90EA.8000303@lwfinger.net>

Kajikawa Jeremy wrote:
> Ive had this card a while and know it worked with the old bcm43xx
> driver...
> 
> but I would like to get it working on the newer drivers with an updated
> kernel.
> 
> especially as this is an install for 64bit and the old install was
> 32bit.
> 
> current kernel version is 2.6.28 and I hand-compiled from sources.
> 
> is there any options or other I can use or do I need to find
>  some means of bss update for my card to use newer firmware and
>  become functional?
> 
> I am *needing* this to keep a server online (and not require a laptop as
> net-card)
> 
> any help at all will be appreciated!!!!

I'm not sure what a 14e4:4300 is, but if it worked with bcm43xx, then
it should work with b43, or quite likely with b43legacy.

The first step will be to apply the patch below to your kernel. Once
that is done, the device will be recognized. After you restart, then
run the command dmesg | egrep "ssb|b43" and post the results.

Larry

============


Index: wireless-testing/drivers/ssb/b43_pci_bridge.c
===================================================================
--- wireless-testing.orig/drivers/ssb/b43_pci_bridge.c
+++ wireless-testing/drivers/ssb/b43_pci_bridge.c
@@ -17,6 +17,7 @@


 static const struct pci_device_id b43_pci_bridge_tbl[] = {
+	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4300) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4301) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4307) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_BROADCOM, 0x4311) },

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: b43_4300
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090127/70c9eb6f/attachment-0001.ksh>

From ccmcphe at verizon.net  Tue Jan 27 23:07:22 2009
From: ccmcphe at verizon.net (Tex)
Date: Tue, 27 Jan 2009 17:07:22 -0500
Subject: 4318 Question Frame Check Sequence Errors
In-Reply-To: <BA39AE75-0D80-4A36-9843-D1097C51914B@ing.unibs.it>
References: <497E284C.7030908@verizon.net>
	<BA39AE75-0D80-4A36-9843-D1097C51914B@ing.unibs.it>
Message-ID: <497F859A.50204@verizon.net>

Francesco Gringoli wrote:
>
> On Jan 26, 2009, at 10:17 PM, Tex wrote:
>
>> I have been running some surveys with the Atheros and Broadcom Drivers.
>> When viewing the frames from wireshark , while in monitor mode, I
>> noticed that the Atheros driver is reporting FCS errors on some frames,
>> but the Broadcom driver isn't, in the radiotap header. If I expand the
>> frame and look at the FCS wireshark reports the frame as bad and shows
>> what the CRC should be. I put printk's in pio_rx_frame() (see below) and
>> noticed that the macstat is being reported as zero. Does this mean that
>> the status is not being sent to the driver from the chip or firmware? Is
>> there some way for me to configure it to report bad FCS frames?
> When the flag B43_MACCTL_KEEP_BAD is enabled in the opmode of b43, 
> then the driver activates the corresponding flag in the mac control 
> high register so that the firmware is configured to report bad frames 
> to the host. However as soon as they are sent through dma, the b43 
> driver logs messages like "b43-phy5 debug: RX: Packet dropped" and 
> frames are not delivered to the upper layers. To investigate you can 
> try to enable that flag by modifying the basic configuration in 
> b43_adjust_opmode(struct b43_wldev *dev) defined in main.c.
>
> Cheers,
> -FG
>
>>
>>             macstat = le32_to_cpu(rxhdr.mac_status);
>>             printk (KERN_DEBUG "pio_rx_frame macstat is %x\n", macstat);
>>             if (macstat & B43_RX_MAC_FCSERR) {
>>                     if (!(q->dev->wl->filter_flags & FIF_FCSFAIL)) {
>>                             /* Drop frames with failed FCS. */
>>                             err_msg = "Frame FCS error";
>>                             goto rx_error;
>>                     }
>>
>> b43_op_configure filter has the following flags set:
>>        *fflags &= FIF_PROMISC_IN_BSS |
>>                  FIF_ALLMULTI |
>>                  FIF_FCSFAIL |
>>                  FIF_PLCPFAIL |
>>                  FIF_CONTROL |
>>                  FIF_OTHER_BSS |
>>                  FIF_BCN_PRBRESP_PROMISC;
>>
>>        changed &= FIF_PROMISC_IN_BSS |
>>                   FIF_ALLMULTI |
>>                   FIF_FCSFAIL |
>>                   FIF_PLCPFAIL |
>>                   FIF_CONTROL |
>>                   FIF_OTHER_BSS |
>>                   FIF_BCN_PRBRESP_PROMISC;
>>
>>
>>
>>
>> Thanks much
>> Tex
>>
>> _______________________________________________
>> Bcm43xx-dev mailing list
>> Bcm43xx-dev at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> -------
>
> Francesco Gringoli, PhD - Assistant Professor
> Dept. of Electrical Engineering for Automation
> University of Brescia
> via Branze, 38
> 25123 Brescia
> ITALY
>
> Ph:  ++39.030.3715843
> FAX: ++39.030.380014
> WWW: http://www.ing.unibs.it/~gringoli
>
>
>
>
>
Thanks Francesco, I'll give that a try. I already have "goto rx_error" 
commented out.

-Tex



From belxjander at gmail.com  Tue Jan 27 23:55:57 2009
From: belxjander at gmail.com (Kajikawa Jeremy)
Date: Wed, 28 Jan 2009 07:55:57 +0900
Subject: b43 driver support ?(14e4:4300) - Japanese Buffalo card
In-Reply-To: <69e28c910901271445n7c35075ah1592c5ff76c1b827@mail.gmail.com>
References: <497F81F6.7000500@spicenitz.org>
	<200901272256.57554.mb@bu3sch.de> <1233094022.10517.3.camel@claire>
	<69e28c910901271445n7c35075ah1592c5ff76c1b827@mail.gmail.com>
Message-ID: <1233096957.10517.15.camel@claire>

I thought that... however.,..

Heres the results -- b43-fwcutter prepared I have 3 sets of firmware of
various versions.

I have the MIMO firmware (broadcom-wl-4.150.10.5)
 additionally the b43-legacy firmware and another firmware
 (broadcom-wl-4.80.53.0).

of the above... I have not with either of b43 OR b43-legacy seen any
interface show up
 when issuing "ifconfig -a" at a root prompt.

anyone got any questions as to what may possibly be happening ?

or suggestions as to things to try out ? or to find out more
information ?

Sincerely,
  Jeremy

On Tue, 2009-01-27 at 23:45 +0100, G?bor Stefanik wrote:
> On Tue, Jan 27, 2009 at 11:07 PM, Kajikawa Jeremy
<belxjander at gmail.com> wrote:
> > Ive had this card a while and know it worked with the old bcm43xx
> > driver...
> >
> > but I would like to get it working on the newer drivers with an
updated
> > kernel.
> >
> > especially as this is an install for 64bit and the old install was
> > 32bit.
> >
> > current kernel version is 2.6.28 and I hand-compiled from sources.
> >
> > is there any options or other I can use or do I need to find
> >  some means of bss update for my card to use newer firmware and
> >  become functional?
> >
> > I am *needing* this to keep a server online (and not require a
laptop as
> > net-card)
> >
> > any help at all will be appreciated!!!!
> >
> > Sincerely,
> >  Jeremy
> >
> >
> > _______________________________________________
> > Bcm43xx-dev mailing list
> > Bcm43xx-dev at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
> >
> >
> 
> That is likely a b43legacy card - you need the same firmware as for
> bcm43xx, but you must cut it using b43-fwcutter instead of
> bcm43xx-fwcutter.
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 835 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090128/6ab8fd84/attachment.pgp>

From francesco.gringoli at ing.unibs.it  Thu Jan 29 12:00:17 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 29 Jan 2009 12:00:17 +0100
Subject: opensource firmware now accept version 410 frames
Message-ID: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>

Hello,

we made a few modifications to the opensource firmware code and now it  
accepts frame encoded as version 410 layout.

Cheers,
-FG



From francesco.gringoli at ing.unibs.it  Thu Jan 29 12:15:43 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 29 Jan 2009 12:15:43 +0100
Subject: info about 4311 board running ucode13
Message-ID: <36F4FF4D-5103-485C-AA84-D720D6CE8353@ing.unibs.it>

Larry,

could you please be so kind and check if this is the 4311 board you  
have? I found it on ebay and I would like to buy the correct one  
(hoping that the seller put the correct photo... :-) )

http://www.ing.unibs.it/openfwwf/private/hp-4311.jpg

Cheers,
-FG



From s.L-H at gmx.de  Thu Jan 29 16:20:49 2009
From: s.L-H at gmx.de (Stefan Lippers-Hollmann)
Date: Thu, 29 Jan 2009 16:20:49 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
Message-ID: <200901291620.51482.s.L-H@gmx.de>

Hi

On Donnerstag, 29. Januar 2009, Francesco Gringoli wrote:
> Hello,
> 
> we made a few modifications to the opensource firmware code and now it  
> accepts frame encoded as version 410 layout.

Thank you a lot for your efforts, but so far I haven't been successful in
getting my two 32 bit cardbus BCM4306 (rev. 5) based cards to work. 

b43-asm[1] and openfwwf 5.1[3] seem to build fine, but tests with kernel 
2.6.28.2, patched with "b43: Automatically probe for opensource 
firmware"[5] and "b43: Dynamically control log verbosity"[6] from Michael 
Buesch, seem to result in lots of firmware restarts
	b43-phy0 ERROR: Firmware watchdog: The firmware died
	b43-phy0 ERROR: MAC suspend failed
while scanning for wireless networks works half the time, associating with 
a WPA2PSK (CCMP) access point (Linksys WRT-54GL 1.1/ BCM4320, OpenWRT 
8.09_RC2, brcm-2.4[7] (proprietary wl 4.150.10.5 on kernel 2.4.35.4 - and 
Asus WL-500gP v1/ BCM4318, OpenWRT 8.09_RC2, brcm47xx[8] (opensource b43 
(compat-wireless[9]) with proprietary firmware 410.2160 on kernel 
2.6.25.17) hasn't succeeded yet. 
This behaviour is identical with openfwwf 5.0 and 5.1 for me.

While I'll try a current wireless-testing snapshot with more debugging 
options set tonight, I don't see any relevant changes (except [5], [6], 
which are applied to my 2.6.28.2 kernel) staging, do I miss anything 
obvious? Are there eventually ways to debug this further?

Next to the preliminary Debian package sources at [1], [3], I also 
unpacked the resulting binary packages below [10] (b43-asm for i386).

By the way, the install target of the current openfwwf 5.1 tarball installs
ucode5.fw as /lib/firmware/b43-open/open_ucode5.fw, while current b43 [13]
looks for /lib/firmware/b43-open/ucode5.fw; furthermore b0g0initvals5.fw 
and b0g0bsinitvals5.fw aren't installed to ${PREFIX}/ at all. Also b43 
seems to probe for pcm5.fw, which doesn't get built by openfwwf 5.0/ 5.1?

Thanks a lot
	Stefan Lippers-Hollmann


=== dmesg excerpt, full dmesg at [11] ===
b43-pci-bridge 0000:03:00.0: enabling device (0000 -> 0002)
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x100-0x3af: excluding 0x230-0x237
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x3e0-0x4ff: clean.
b43-pci-bridge 0000:03:00.0: PCI INT A -> Link[LNKC] -> GSI 10 (level, low) -> IRQ 10
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x820-0x8ff: clean.
b43-pci-bridge 0000:03:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xc00-0xcf7: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xa00-0xaff: clean.
b43-phy0: Broadcom 4306 WLAN found (core revision 5)
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
input: b43-phy0 as /devices/virtual/input/input8
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/pcm5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0bsinitvals5.fw
b43-phy0: Loading OpenSource firmware version 410.31754 (Hardware crypto not supported)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0: Radio turned on by software
b43-phy0 ERROR: Firmware watchdog: The firmware died!
b43-phy0: Controller RESET (Firmware watchdog) ...
b43-phy0 ERROR: MAC suspend failed
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/pcm5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0bsinitvals5.fw
b43-phy0: Loading OpenSource firmware version 410.31754 (Hardware crypto not supported)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0: Controller restarted
wlan1: direct probe to AP 00:18:39:6b:da:23 try 1
wlan1: direct probe to AP 00:18:39:6b:da:23 try 2
wlan1: direct probe to AP 00:18:39:6b:da:23 try 3
wlan1: direct probe to AP 00:18:39:6b:da:23 timed out
wlan1: direct probe to AP 00:18:39:6b:da:23 try 1
[...]


=== lspci -nnvvv ===
03:00.0 Network controller [0280]: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller [14e4:4320] (rev 03)
        Subsystem: Belkin Belkin F5D7010 54g Wireless Network card [1799:7010]
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
        Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 64
        Interrupt: pin A routed to IRQ 10
        Region 0: Memory at d4000000 (32-bit, non-prefetchable) [size=8K]
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb


=== b43-asm build [2] ===
/usr/bin/make -C assembler CFLAGS="-g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused"
make[1]: Entering directory `/tmp/buildd/b43-asm-0~20080619/assembler'
bison --defines -o parser.c parser.y
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused -c -o parser.o parser.c
flex -o scanner.c --header-file=scanner.h scanner.l
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused -c -o scanner.o scanner.c
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused   -c -o main.o main.c
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused   -c -o initvals.o initvals.c
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused   -c -o util.o util.c
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused   -c -o args.o args.c
gcc -g -O2 -fomit-frame-pointer -std=c99 -Wall -D_BSD_SOURCE -D_GNU_SOURCE -DYYSTYPE='void *' -DYYERROR_VERBOSE -DYYDEBUG -Wno-unused -o b43-asm.bin parser.o scanner.o main.o initvals.o util.o args.o  -lfl
[...]
PATH=/tmp/buildd/b43-asm-0~20080619/assembler:/usr/sbin:/usr/bin:/sbin:/bin b43-asm assembler/test.asm test.fw --cpp-args -DDEBUG=1 -- --ivalext .fw --psize
test.fw:  text = 88 instructions (704 bytes)
foobar.fw:  14 values (68 bytes)
PATH=/tmp/buildd/b43-asm-0~20080619/assembler:/tmp/buildd/b43-asm-0~20080619/disassembler:/usr/sbin:/usr/bin:/sbin:/bin /tmp/buildd/b43-asm-0~20080619/assembler/selftest.sh test.fw
Assembler info:
  Using start address 0
Input file checksum:    8909b9f091cde12630be6bd028f5c9ad09d01b28
Re-assembled checksum:  8909b9f091cde12630be6bd028f5c9ad09d01b28

Checksums match


=== openfwwf 5.1 build [4] ===
b43-asm ucode5.asm ucode5.fw --cpp-args -DDEBUG=1 -- --ivalext .fw --psize
Assembler info:
  Using start address 0
ucode5.fw:  text = 1187 instructions (9496 bytes)
b0g0initvals5.fw:  177 values (968 bytes)
b0g0bsinitvals5.fw:  31 values (150 bytes)


=== configuration for wpasupplicant 0.6.7 (Debian, pkg-wpa svn) ===
network={
        priority=15
        ssid="mercury"
        id_str="linksys_aes"
        proto=WPA2
        psk=<hex-key>
}


=== dmesg excerpt, working Broadcom firmware ===
b43-pci-bridge 0000:03:00.0: enabling device (0000 -> 0002)
b43-pci-bridge 0000:03:00.0: PCI INT A -> Link[LNKC] -> GSI 10 (level, low) -> IRQ 10
b43-pci-bridge 0000:03:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:03:00.0
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x100-0x3af: excluding 0x230-0x237
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x3e0-0x4ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x820-0x8ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xc00-0xcf7: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xa00-0xaff: clean.
b43-phy0: Broadcom 4306 WLAN found (core revision 5)
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
input: b43-phy0 as /devices/virtual/input/input8
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43/pcm5.fw
b43 ssb0:0: firmware: requesting b43/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43/b0g0bsinitvals5.fw
b43-phy0: Loading firmware version 410.2160 (2007-05-26 15:32:10)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0: Radio turned on by software
wlan1: authenticate with AP 00:18:39:6b:da:23
wlan1: authenticated
wlan1: associate with AP 00:18:39:6b:da:23
wlan1: RX AssocResp from 00:18:39:6b:da:23 (capab=0x411 status=0 aid=1)
wlan1: associated
ADDRCONF(NETDEV_CHANGE): wlan1: link becomes ready


=== wpa_cli status (0.6.7, Broadcom firmware) ===
bssid=00:18:39:6b:da:23
ssid=mercury
id=0
id_str=linksys_aes
pairwise_cipher=CCMP
group_cipher=CCMP
key_mgmt=WPA2-PSK
wpa_state=COMPLETED
ip_address=192.168.0.75


=== alternative system, lspci -nnvvv ===
02:00.0 Network controller [0280]: Broadcom Corporation BCM4306 802.11b/g Wireless LAN Controller [14e4:4320] (rev 03)
        Subsystem: Linksys WPC54G [1737:4320]
        Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
        Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 64
        Interrupt: pin A routed to IRQ 10
        Region 0: Memory at 14000000 (32-bit, non-prefetchable) [size=8K]
        Capabilities: [40] Power Management version 2
                Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
                Status: D0 PME-Enable- DSel=0 DScale=2 PME-
        Kernel driver in use: b43-pci-bridge
        Kernel modules: ssb


=== alternative system, dmesg excerpt; full dmesg at [12] ===
yenta_cardbus 0000:00:04.0: CardBus bridge found [14c0:0012]
yenta_cardbus 0000:00:04.0: O2: res at 0x94/0xD4: ca/00
yenta_cardbus 0000:00:04.0: O2: enabling read prefetch/write burst
yenta_cardbus 0000:00:04.0: ISA IRQ mask 0x0018, PCI irq 10
yenta_cardbus 0000:00:04.0: Socket status: 30000820
yenta_cardbus 0000:00:04.1: CardBus bridge found [14c0:0012]
yenta_cardbus 0000:00:04.1: ISA IRQ mask 0x0018, PCI irq 11
yenta_cardbus 0000:00:04.1: Socket status: 30000820
pcmcia_socket pcmcia_socket0: pccard: CardBus card inserted into slot 0
pci 0000:02:00.0: reg 10 32bit mmio: [0x000000-0x001fff]
pci 0000:02:00.0: supports D1 D2
pci 0000:02:00.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:02:00.0: PME# disabled
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x100-0x3af: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x3e0-0x4ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0x820-0x8ff: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xc00-0xcf7: clean.
pcmcia_socket pcmcia_socket0: cs: IO port probe 0xa00-0xaff: clean.
b43-pci-bridge 0000:02:00.0: enabling device (0000 -> 0002)
b43-pci-bridge 0000:02:00.0: PCI INT A -> Link[LNKA] -> GSI 10 (level, low) -> IRQ 10
b43-pci-bridge 0000:02:00.0: setting latency timer to 64
ssb: Sonics Silicon Backplane found on PCI device 0000:02:00.0
b43-phy0: Broadcom 4306 WLAN found (core revision 5)
phy0: Selected rate control algorithm 'minstrel'
Broadcom 43xx driver loaded [ Features: PMLR, Firmware-ID: FW13 ]
input: b43-phy0 as /devices/virtual/input/input8
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/pcm5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0bsinitvals5.fw
b43-phy0: Loading OpenSource firmware version 410.31754 (Hardware crypto not supported)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0: Radio turned on by software
b43-phy0 ERROR: MAC suspend failed
b43-phy0 ERROR: MAC suspend failed
b43-phy0 ERROR: MAC suspend failed
b43-phy0 ERROR: MAC suspend failed
wlan1: direct probe to AP 00:17:31:bb:07:df try 1
wlan1: direct probe to AP 00:17:31:bb:07:df try 2
wlan1: direct probe to AP 00:17:31:bb:07:df try 3
wlan1: direct probe to AP 00:17:31:bb:07:df timed out
b43-phy0 ERROR: Firmware watchdog: The firmware died!
b43-phy0: Controller RESET (Firmware watchdog) ...
b43-phy0 ERROR: MAC suspend failed
b43 ssb0:0: firmware: requesting b43/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/ucode5.fw
b43 ssb0:0: firmware: requesting b43-open/pcm5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0initvals5.fw
b43 ssb0:0: firmware: requesting b43-open/b0g0bsinitvals5.fw
b43-phy0: Loading OpenSource firmware version 410.31754 (Hardware crypto not supported)
Registered led device: b43-phy0::tx
Registered led device: b43-phy0::rx
Registered led device: b43-phy0::radio
b43-phy0: Controller restarted
wlan1: direct probe to AP 00:18:39:6b:da:23 try 1
wlan1: direct probe to AP 00:18:39:6b:da:23 try 2
wlan1: direct probe to AP 00:18:39:6b:da:23 try 3
wlan1: direct probe to AP 00:18:39:6b:da:23 timed out
[...]



[1]	preliminary Debian packaging for b43-asm, proof of concept state
	http://sidux.com/slh/b43-asm/
[2]	full build log for b43-asm
	http://sidux.com/slh/b43-asm/b43-asm_0~20080619-0+c0.sidux.3_amd64.build
[3]	preliminary Debian packaging for openfwwf, proof of concept state
	http://sidux.com/slh/openfwwf/
[4]	full build log for openfwwf
	http://sidux.com/slh/openfwwf/openfwwf_5.1-0+c0.sidux.1_amd64.build
[5]	http://svn.berlios.de/svnroot/repos/fullstory/linux-sidux-2.6/trunk/debian/patches/features/b43_automatically-probe-for-opensource-firmware.diff
[6]	http://svn.berlios.de/svnroot/repos/fullstory/linux-sidux-2.6/trunk/debian/patches/features/b43_dynamically-control-log.verbosity.diff
[7]	http://downloads.openwrt.org/kamikaze/8.09_RC2/brcm-2.4/openwrt-brcm-2.4-squashfs.trx
[8]	http://downloads.openwrt.org/kamikaze/8.09_RC2/brcm47xx/openwrt-brcm47xx-squashfs.trx
[9]	http://www.orbit-lab.org/kernel/compat-wireless-2.6/2008/08/compat-wireless-2008-08-06.tar.bz2
[10]	http://sidux.com/slh/binary-i386/
[11]	http://sidux.com/slh/openfwwf-dmesg.log
[12]	http://sidux.com/slh/openfwwf-dmesg-alternative.log
[13]	http://git.kernel.org/?p=linux/kernel/git/linville/wireless-testing.git;a=commitdiff;h=0faa1094b4f6bae7705d845fee87a1b4a3501178


From Larry.Finger at lwfinger.net  Thu Jan 29 16:29:58 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 09:29:58 -0600
Subject: info about 4311 board running ucode13
In-Reply-To: <36F4FF4D-5103-485C-AA84-D720D6CE8353@ing.unibs.it>
References: <36F4FF4D-5103-485C-AA84-D720D6CE8353@ing.unibs.it>
Message-ID: <4981CB76.1050406@lwfinger.net>

Francesco Gringoli wrote:
> Larry,
> 
> could you please be so kind and check if this is the 4311 board you
> have? I found it on ebay and I would like to buy the correct one (hoping
> that the seller put the correct photo... :-) )
> 
> http://www.ing.unibs.it/openfwwf/private/hp-4311.jpg

Yes, that is the correct product code.

Larry


From s.L-H at gmx.de  Thu Jan 29 18:10:30 2009
From: s.L-H at gmx.de (Stefan Lippers-Hollmann)
Date: Thu, 29 Jan 2009 18:10:30 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901291620.51482.s.L-H@gmx.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<200901291620.51482.s.L-H@gmx.de>
Message-ID: <200901291810.31335.s.L-H@gmx.de>

Hi

On Donnerstag, 29. Januar 2009, Stefan Lippers-Hollmann wrote:
> Hi
> 
> On Donnerstag, 29. Januar 2009, Francesco Gringoli wrote:
> > Hello,
> > 
> > we made a few modifications to the opensource firmware code and now it  
> > accepts frame encoded as version 410 layout.
> 
> Thank you a lot for your efforts, but so far I haven't been successful in
> getting my two 32 bit cardbus BCM4306 (rev. 5) based cards to work. 
[...]

Sorry about the noise, loading b43 with qos=0 allows it wo work flawlessly, 
I wrongly expected "b43: Automatically probe for opensource firmware" [1]
to disable qos along with RTS/CTS, is there perhaps a way to detect/ set
that properly during the firmware loading?

Thank you a lot
	Stefan Lippers-Hollmann

[1]	http://git.kernel.org/?p=linux/kernel/git/linville/wireless-testing.git;a=commitdiff;h=0faa1094b4f6bae7705d845fee87a1b4a3501178
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: This is a digitally signed message part.
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090129/69e15164/attachment.pgp>

From Larry.Finger at lwfinger.net  Thu Jan 29 18:48:15 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 11:48:15 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
Message-ID: <4981EBDF.8020406@lwfinger.net>

Francesco,

Opensource firmware 5.1 works with my BCM4318; however, under heavy
load with a ping running in one window and 10 second bursts of tcpperf
transmissions in another, the kernel (2.6.29-rc2-wl) panicked by
hitting the BUG at drivers/.../b43/dma.c:1386, which is in routine
b43_dma_handle_txstatus. The specific condition is !meta->skb.

No other messages made it to the log. I will investigate the kind of
debugging aids that Michael mentioned and send more info when available.

Larry


From francesco.gringoli at ing.unibs.it  Thu Jan 29 18:58:18 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 29 Jan 2009 18:58:18 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4981EBDF.8020406@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
Message-ID: <36FCAAAF-8DB4-4C64-B4AB-7C084F00C328@ing.unibs.it>

On Jan 29, 2009, at 6:48 PM, Larry Finger wrote:

> Francesco,
>
> Opensource firmware 5.1 works with my BCM4318; however, under heavy
> load with a ping running in one window and 10 second bursts of tcpperf
> transmissions in another, the kernel (2.6.29-rc2-wl) panicked by
> hitting the BUG at drivers/.../b43/dma.c:1386, which is in routine
> b43_dma_handle_txstatus. The specific condition is !meta->skb.
>
> No other messages made it to the log. I will investigate the kind of
> debugging aids that Michael mentioned and send more info when  
> available.
>
> Larry
Larry,

many thanks, I will investigate: probably we missed something when  
switching from 5.0 to 5.1, sorry.

By the way, have you ever tried a similar test with firmware 5.0? Hope  
yes and everything went fine :-)

Cheers,
-FG


From Larry.Finger at lwfinger.net  Thu Jan 29 19:05:35 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 12:05:35 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <36FCAAAF-8DB4-4C64-B4AB-7C084F00C328@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<36FCAAAF-8DB4-4C64-B4AB-7C084F00C328@ing.unibs.it>
Message-ID: <4981EFEF.5070203@lwfinger.net>

Francesco Gringoli wrote:
> 
> many thanks, I will investigate: probably we missed something when
> switching from 5.0 to 5.1, sorry.
> 
> By the way, have you ever tried a similar test with firmware 5.0? Hope
> yes and everything went fine :-)

Yes, 5.0 passed the test. When I shut down those tests, b43 with 5.0
firmware had transmitted and received over 800 MiB of data with no
messages in the logs. I shut down testing at that point because they
were hogging too much of my wireless bandwidth.

Larry


From Larry.Finger at lwfinger.net  Thu Jan 29 20:26:45 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 13:26:45 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901291810.31335.s.L-H@gmx.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>	<200901291620.51482.s.L-H@gmx.de>
	<200901291810.31335.s.L-H@gmx.de>
Message-ID: <498202F5.2050700@lwfinger.net>

Stefan Lippers-Hollmann wrote:
> 
> Sorry about the noise, loading b43 with qos=0 allows it wo work flawlessly, 
> I wrongly expected "b43: Automatically probe for opensource firmware" [1]
> to disable qos along with RTS/CTS, is there perhaps a way to detect/ set
> that properly during the firmware loading?

Once the dust settles, the plan is to have the os firmware write its
capabilities into some place in shared memory. Then b43 will interpret
the data and set the capabilities automagically. Not yet implemented
on either end.

Larry


From navalorenx at gmail.com  Thu Jan 29 21:34:48 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Thu, 29 Jan 2009 21:34:48 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4981EBDF.8020406@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
Message-ID: <67A21E45-87BB-4B75-A31E-63C50261DA3C@gmail.com>


>
>
>
> Opensource firmware 5.1 works with my BCM4318; however, under heavy
> load with a ping running in one window and 10 second bursts of tcpperf
> transmissions in another, the kernel (2.6.29-rc2-wl) panicked by
> hitting the BUG at drivers/.../b43/dma.c:1386, which is in routine
> b43_dma_handle_txstatus. The specific condition is !meta->skb.
>

I had similar problem while I was updating from version 351 to 410:  
the problem was related to some tx_header fields that had different  
offsets. Once shared memory definitions were updated I had no problem.  
I did a lot of tests and everything seems to be ok.
Did you use encryption while doing your tests?

cheers

Lorenzo Nava

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/bcm43xx-dev/attachments/20090129/b041bfca/attachment.html>

From Larry.Finger at lwfinger.net  Thu Jan 29 21:49:23 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 14:49:23 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <67A21E45-87BB-4B75-A31E-63C50261DA3C@gmail.com>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<67A21E45-87BB-4B75-A31E-63C50261DA3C@gmail.com>
Message-ID: <49821653.4030908@lwfinger.net>

Lorenzo Nava wrote:
> 
> I had similar problem while I was updating from version 351 to 410: the
> problem was related to some tx_header fields that had different offsets.
> Once shared memory definitions were updated I had no problem. I did a
> lot of tests and everything seems to be ok.
> Did you use encryption while doing your tests?

Yes, my network is WPA2 personal encrypted.

Larry


From mb at bu3sch.de  Thu Jan 29 23:02:43 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Thu, 29 Jan 2009 23:02:43 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4981EBDF.8020406@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
Message-ID: <200901292302.43869.mb@bu3sch.de>

On Thursday 29 January 2009 18:48:15 Larry Finger wrote:
> Francesco,
> 
> Opensource firmware 5.1 works with my BCM4318; however, under heavy
> load with a ping running in one window and 10 second bursts of tcpperf
> transmissions in another, the kernel (2.6.29-rc2-wl) panicked by
> hitting the BUG at drivers/.../b43/dma.c:1386, which is in routine
> b43_dma_handle_txstatus. The specific condition is !meta->skb.
> 
> No other messages made it to the log. I will investigate the kind of
> debugging aids that Michael mentioned and send more info when available.

Most likely it got a wrong cookie. So either the cookie passing in the txheader
is broken in fw or the txstatus. I'd probably say txheader, because that changed
between revs and the txstatus didn't.


-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Thu Jan 29 23:44:59 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Thu, 29 Jan 2009 23:44:59 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4981EBDF.8020406@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
Message-ID: <0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>

On Jan 29, 2009, at 6:48 PM, Larry Finger wrote:

> Francesco,
>
> Opensource firmware 5.1 works with my BCM4318; however, under heavy
> load with a ping running in one window and 10 second bursts of tcpperf
> transmissions in another, the kernel (2.6.29-rc2-wl) panicked by
> hitting the BUG at drivers/.../b43/dma.c:1386, which is in routine
> b43_dma_handle_txstatus. The specific condition is !meta->skb.
>
> No other messages made it to the log. I will investigate the kind of
> debugging aids that Michael mentioned and send more info when  
> available.
>
> Larry


Larry,

we just finished a couple of stressing tests and everything went fine,  
kernel did not complain about anything, below is attached the tests  
description. Just a few questions

- have you applied any recent patch to the kernel (we too are using  
2.6.29-rc2-wl), so that your kernel can behave differently than ours?
- are you sure you are using the correct initvals files? Those we put  
today on the website?
- have you replaced _all_ the files, including shm.inc etc? Here we  
redefined the txheader layout and moved the cookie address
- are you modprobing by setting qos=0?
- is your card a PCCARD or PCI?

The strange thing is that the way b43 is interfaced to the firmware,  
when hw encryption is not activated, does not change switching from  
351 to 410 version apart for the txheader layout: however we modified  
that layout according to definitions in xmit.h. Is this correct? If  
this hold I really can not understand why r5.1 had problems and r5.0  
not in your setup. I would have supposed that given r5.1 has problems,  
the same can arise also on r5.0.

Thanks,
-FG

Tests description: we did the following couple of tests

- downloaded 1GB through TCP while sending 1.6GB of UDP like traffic  
through a raw socket, 10 ping/s

- sent 10GBYTE by injecting packets composed in userspace through a  
ioctl we attached to mac80211 stack: packets are sent one after  
another without ACKs, separated by just a SIFS and encoded at 54Mb/s  
(this is a very small firmware hack that reprograms next transmission  
opportunity when you want, in this case just after the SIFS and only  
for frames sent to one not existing MAC addresses, so that no ack is  
sent by no one). Actual packets transmission verified by sniffing the  
channel by using another Broadcom card




From Larry.Finger at lwfinger.net  Fri Jan 30 00:09:43 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 17:09:43 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
Message-ID: <49823737.2040603@lwfinger.net>

Francesco Gringoli wrote:

> we just finished a couple of stressing tests and everything went fine,
> kernel did not complain about anything, below is attached the tests
> description. Just a few questions
> 
> - have you applied any recent patch to the kernel (we too are using
> 2.6.29-rc2-wl), so that your kernel can behave differently than ours?
> - are you sure you are using the correct initvals files? Those we put
> today on the website?
> - have you replaced _all_ the files, including shm.inc etc? Here we
> redefined the txheader layout and moved the cookie address
> - are you modprobing by setting qos=0?
> - is your card a PCCARD or PCI?

The only patch I had applied to 2.6.29-rc2-wl was to have b43 look for
opensource firmware before the proprietary version. The complete set
of files from the openfwwf-5.1.tar.gz were applied and the firmware
built from them. I am modprobing with qos=0 and nohwcrypto=1. I have a
PCCARD format. It is labeled as a Linksys WPC54G, ver. 3.

> The strange thing is that the way b43 is interfaced to the firmware,
> when hw encryption is not activated, does not change switching from 351
> to 410 version apart for the txheader layout: however we modified that
> layout according to definitions in xmit.h. Is this correct? If this hold
> I really can not understand why r5.1 had problems and r5.0 not in your
> setup. I would have supposed that given r5.1 has problems, the same can
> arise also on r5.0.
> 
> Thanks,
> -FG
> 
> Tests description: we did the following couple of tests
> 
> - downloaded 1GB through TCP while sending 1.6GB of UDP like traffic
> through a raw socket, 10 ping/s
> 
> - sent 10GBYTE by injecting packets composed in userspace through a
> ioctl we attached to mac80211 stack: packets are sent one after another
> without ACKs, separated by just a SIFS and encoded at 54Mb/s (this is a
> very small firmware hack that reprograms next transmission opportunity
> when you want, in this case just after the SIFS and only for frames sent
> to one not existing MAC addresses, so that no ack is sent by no one).
> Actual packets transmission verified by sniffing the channel by using
> another Broadcom card

Your tests are a lot more rigorous than mine.

I'll repeat my tests.

Larry



From francesco.gringoli at ing.unibs.it  Fri Jan 30 00:25:53 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 30 Jan 2009 00:25:53 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <49823737.2040603@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
Message-ID: <5E510F17-ECBE-4898-AB5D-8723495373AF@ing.unibs.it>

On Jan 30, 2009, at 12:09 AM, Larry Finger wrote:

> Francesco Gringoli wrote:
>
>> - have you applied any recent patch to the kernel (we too are using
>> 2.6.29-rc2-wl), so that your kernel can behave differently than ours?
>> - are you sure you are using the correct initvals files? Those we put
>> today on the website?
>> - have you replaced _all_ the files, including shm.inc etc? Here we
>> redefined the txheader layout and moved the cookie address
>> - are you modprobing by setting qos=0?
>> - is your card a PCCARD or PCI?
>
> The only patch I had applied to 2.6.29-rc2-wl was to have b43 look for
> opensource firmware before the proprietary version. The complete set
I still did not have time to integrate this patch, I will try it  
tomorrow.

> of files from the openfwwf-5.1.tar.gz were applied and the firmware
> built from them. I am modprobing with qos=0 and nohwcrypto=1. I have a
Perfect.

> PCCARD format. It is labeled as a Linksys WPC54G, ver. 3.
Ah... well, although Lorenzo did lot of this work using his 4318  
PCCARD branded Belkin, I observed very bizarre behavior when using  
PCCARD in the past, independently of the firmware type (also with the  
original Broadcom one), to such point that I gave up and switched to  
PCI and PCI-express only testbeds. However I will give a try tomorrow,  
I'm curious now to see what happens with new kernel + r5.1 + PCCARD.

>> [cut]
>> when you want, in this case just after the SIFS and only for frames  
>> sent
>> to one not existing MAC addresses, so that no ack is sent by no one).
>> Actual packets transmission verified by sniffing the channel by using
>> another Broadcom card
>
> Your tests are a lot more rigorous than mine.
>
> I'll repeat my tests.
>
> Larry

Many thanks,
Cheers
-FG



From francesco.gringoli at ing.unibs.it  Fri Jan 30 00:31:12 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 30 Jan 2009 00:31:12 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <49823737.2040603@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
Message-ID: <A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>

On Jan 30, 2009, at 12:09 AM, Larry Finger wrote:

> Francesco Gringoli wrote:
>
>> we just finished a couple of stressing tests and everything went  
>> fine,
>> kernel did not complain about anything, below is attached the tests
>> description. Just a few questions
>>
>> - have you applied any recent patch to the kernel (we too are using
>> 2.6.29-rc2-wl), so that your kernel can behave differently than ours?
>> - are you sure you are using the correct initvals files? Those we put
>> today on the website?
>> - have you replaced _all_ the files, including shm.inc etc? Here we
>> redefined the txheader layout and moved the cookie address
>> - are you modprobing by setting qos=0?
>> - is your card a PCCARD or PCI?
>
> The only patch I had applied to 2.6.29-rc2-wl was to have b43 look for
> opensource firmware before the proprietary version. The complete set
> of files from the openfwwf-5.1.tar.gz were applied and the firmware
> built from them. I am modprobing with qos=0 and nohwcrypto=1. I have a
> PCCARD format. It is labeled as a Linksys WPC54G, ver. 3.
Larry,

just one more question: if you have time to test again r5.1, not a  
stress test, a wget is enough, could you please report info about rx  
and tx_ring usages? Those lines like the following:

[219861.208427] b43-phy222 debug: DMA-32 rx_ring: Used slots 8/64,  
Failed frames 0/0 = 0.0%, Average tries 0.00
[219861.216070] b43-phy222 debug: DMA-32 tx_ring_AC_BE: Used slots  
128/128, Failed frames 1600/3398448 = 0.0%, Average tries 1.19

Cheers,
-FG


From Larry.Finger at lwfinger.net  Fri Jan 30 01:23:26 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Thu, 29 Jan 2009 18:23:26 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
Message-ID: <4982487E.6010409@lwfinger.net>

Francesco Gringoli wrote:

> just one more question: if you have time to test again r5.1, not a
> stress test, a wget is enough, could you please report info about rx and
> tx_ring usages? Those lines like the following:
> 
> [219861.208427] b43-phy222 debug: DMA-32 rx_ring: Used slots 8/64,
> Failed frames 0/0 = 0.0%, Average tries 0.00
> [219861.216070] b43-phy222 debug: DMA-32 tx_ring_AC_BE: Used slots
> 128/128, Failed frames 1600/3398448 = 0.0%, Average tries 1.19

I downloaded the 2.6.28.tar.gz file ffrom kernel.org - about 64 MiB.
The logged data are

ssb: Core 3 found: PCMCIA (cc 0x80D, rev 0x07, vendor 0x4243)
ssb: SPROM revision 2 detected.
b43-phy1: Broadcom 4318 WLAN found (core revision 9)
b43-phy1 debug: Found PHY: Analog 3, Type 2, Revision 7
b43-phy1 debug: Found Radio: Manuf 0x17F, Version 0x2050, Revision 8
wmaster0 (b43): not using net_device_ops yet
phy1: Selected rate control algorithm 'minstrel'
ssb: Sonics Silicon Backplane found on PCI device 0000:06:00.0
udev: renamed network interface wlan0 to eth1
input: b43-phy1 as /class/input/input5
b43 ssb1:0: firmware: requesting b43-open/ucode5.fw
b43 ssb1:0: firmware: requesting b43-open/pcm5.fw
b43 ssb1:0: firmware: requesting b43-open/b0g0initvals5.fw
b43 ssb1:0: firmware: requesting b43-open/b0g0bsinitvals5.fw
b43-phy1: Loading OpenSource firmware version 410.31754 (Hardware
crypto not supported)
b43-phy1 debug: Chip initialized
b43-phy1 debug: 32-bit DMA initialized
b43-phy1 debug: Wireless interface started
b43-phy1 debug: Adding Interface type 2
b43-phy1: Radio turned on by software
eth1: authenticate with AP 00:1a:70:46:ba:b1
eth1: authenticated
eth1: associate with AP 00:1a:70:46:ba:b1
eth1: RX AssocResp from 00:1a:70:46:ba:b1 (capab=0x431 status=0 aid=2)
eth1: associated
eth1: deauthenticating by local choice (reason=3)
b43-phy1 debug: Removing Interface type 2
b43-phy1 debug: Wireless interface stopped
b43-phy1 debug: DMA-32 rx_ring: Used slots 4/64, Failed frames 0/0 =
0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_BK: Used slots 0/128, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_BE: Used slots 24/128, Failed frames
0/24835 = 0.0%, Average tries 1.02
b43-phy1 debug: DMA-32 tx_ring_AC_VI: Used slots 0/128, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_AC_VO: Used slots 0/128, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-phy1 debug: DMA-32 tx_ring_mcast: Used slots 0/128, Failed frames
0/0 = 0.0%, Average tries 0.00
b43-pci-bridge 0000:06:00.0: PCI INT A disabled


Larry


From shardtor at gmail.com  Fri Jan 30 03:16:45 2009
From: shardtor at gmail.com (shardtor)
Date: Thu, 29 Jan 2009 19:16:45 -0700
Subject: bcm4306 uploading makes mouse slow
Message-ID: <4982630D.80503@gmail.com>

Hi,

I use the b43 driver and have an odd problem. During uploading, for 
example when printing, the response of the mouse becomes very slow.

I have posted log data at http://tinypaste.com/5d165

I use WPA2 encryption with NetworkManager.

Please let me know if additional information would be useful. Any 
assistance would be greatly appreciated.

Thanks,
Orest





From pietia.gr at gmail.com  Fri Jan 30 09:02:14 2009
From: pietia.gr at gmail.com (pietia)
Date: Fri, 30 Jan 2009 09:02:14 +0100
Subject: UNSUSCRIBE
Message-ID: <4982B406.60307@gmail.com>



From navalorenx at gmail.com  Fri Jan 30 09:06:34 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Fri, 30 Jan 2009 09:06:34 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4982487E.6010409@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
	<4982487E.6010409@lwfinger.net>
Message-ID: <41960ccf0901300006x3f79d680x3a080dc126483a27@mail.gmail.com>

Hi Larry,

I was wonder if the problem can be in any way related to DMA slots. Is
it possible that, with the heavy load test, you filled all DMA rx ring
slots?

Can you repeat the test and check if DMA rx ring will be filled?

A last question: is it possible that some RTS or CTS frame was send
during the test? Sometimes CTS frames produce strange behavior with
the device.

Thank you again

Cheers

Lorenzo


From mb at bu3sch.de  Fri Jan 30 11:46:46 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 30 Jan 2009 11:46:46 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <41960ccf0901300006x3f79d680x3a080dc126483a27@mail.gmail.com>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4982487E.6010409@lwfinger.net>
	<41960ccf0901300006x3f79d680x3a080dc126483a27@mail.gmail.com>
Message-ID: <200901301146.46653.mb@bu3sch.de>

On Friday 30 January 2009 09:06:34 Lorenzo Nava wrote:

> I was wonder if the problem can be in any way related to DMA slots. Is
> it possible that, with the heavy load test, you filled all DMA rx ring
> slots?

I think that's rather unlikely, however. The DMA code is basically unchanged
for months and especially the slot handling hasn't changed in years.

-- 
Greetings, Michael.


From netrolller.3d at gmail.com  Fri Jan 30 13:45:02 2009
From: netrolller.3d at gmail.com (=?ISO-8859-1?Q?G=E1bor_Stefanik?=)
Date: Fri, 30 Jan 2009 13:45:02 +0100
Subject: UNSUSCRIBE
In-Reply-To: <4982B406.60307@gmail.com>
References: <4982B406.60307@gmail.com>
Message-ID: <69e28c910901300445q58607dcfufd1ba32c13f22d02@mail.gmail.com>

On Fri, Jan 30, 2009 at 9:02 AM, pietia <pietia.gr at gmail.com> wrote:
>
> _______________________________________________
> Bcm43xx-dev mailing list
> Bcm43xx-dev at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/bcm43xx-dev
>

That won't work - berliOS uses mailman, not majordomo.

-- 
Vista: [V]iruses, [I]ntruders, [S]pyware, [T]rojans and [A]dware. :-)


From navalorenx at gmail.com  Fri Jan 30 14:22:35 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Fri, 30 Jan 2009 14:22:35 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901301146.46653.mb@bu3sch.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4982487E.6010409@lwfinger.net>
	<41960ccf0901300006x3f79d680x3a080dc126483a27@mail.gmail.com>
	<200901301146.46653.mb@bu3sch.de>
Message-ID: <41960ccf0901300522i6ba65311j4c94c73ea900b501@mail.gmail.com>

> I think that's rather unlikely, however. The DMA code is basically unchanged
> for months and especially the slot handling hasn't changed in years.
>

Yes, but I didn't mean that the code has some bug. Let's say, for
example, that all the DMA slots were filled; when the firmware will
try to report a tx status it will send the informations to the DMA.
The DMA won't have enough space to store it and so it will drop the
message. In your opinion is it possible that something like that
happened?

What looks strange to me is that, if the error is somewhere in the
tx_header definition, every transmission will result in an error from
the b43_dma_handle_txstatus. If a field is not in the correct
position, it is always wrong: it can't be sometimes right and
sometimes wrong, don't you agree?
I had similar problem beacause of the wrong header offsets
definitions, but that made every transmission generate a BUG report...
I don't understand how it is possible that almost always things went
fine and sometimes report status was not correct...

Please Michael, if you can, can you please check shm.inc header definition?

Thanks

Lorenzo.


From francesco.gringoli at ing.unibs.it  Fri Jan 30 19:09:35 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Fri, 30 Jan 2009 19:09:35 +0100
Subject: ad-hoc mode implementation
Message-ID: <F1FAF4F1-E45A-461D-8D46-5D1B1A1BBAE2@ing.unibs.it>

Hello,

I began testing the opensource firmware on b43 when running ad-hoc  
mode and I faced a strange problem that drove me to investigate about  
how ad-hoc mode is implemented inside the wireless stack. Note that  
what follows holds for both Broadcom original firmware and opensource  
one, however I did all these tests switching back to original BCM  
firmware.

It turned out that Apple Macs with 4328 hardware (bot a/b/g and n)  
running different version of OSX never succeed in joining ad-hoc  
networks initiated by b43 while they can join without problems ad-hoc  
networks run by ath5k (with initiated or run I mean "the first node  
that is configured with that SSID"). I attach a complete description  
of the tests at the end of this message.

I then captured some traffic and it seems that b43 never sends beacon  
when initiating ad-hoc networks, it just sends probes to itself and  
responds to broadcast probe requests. Note that ath5k instead sends  
beacons as long as it is the first node. Probably I'm missing  
something, so just responding to broadcast probes could be a correct  
alternative procedure to advertise ad-hoc network, however this seems  
to be the only difference to explain the different behavior of newer  
Apple Macs when joining ath5k or b43 ad-hoc initiated networks.

Please note that if I invert roles (ad-hoc initiated by those Apple  
Macs, b43 joining the network) everything is fine, so this is not an  
issue involving send and receive operations, nodes do not have  
communication problems.

Has anyone ever experienced such issues? Is it correct to not send  
beacon when starting an ad-hoc network? I did some tests and OSX does  
send beacon when initiating an ad-hoc network (as ath5k does).

Cheers,
-FG

----- testbed scenarios

When I initiate an ad-hoc network on a Linux PC with a 4306 card, I  
can't join it using any of my Apple Macs equipped with BCM hardware.

I tried two different Apple, one is a new MacBook Pro with 4328 BCM N- 
PHY, the other is a two years old iMac 17 with a a/b/g  4328 BCM  
hardware. The Kernel I used on the x86 PC was 2.6.29-rc2-wl, the  
firmware was the original Broadcom ucode5, I did not use encryption. I  
did extensive testing but I never succeeded.

I then tried the same setup, using this time a 4318 card to initiate  
the ad-hoc network on the Linux box, and I got the same behavior.  
Finally I repeated the experiment this time initiating the ad-hoc  
network with a Linksys WRT54GL (BCM 4320), same result, the two Apple  
Macs never joined the network, they reported a generic error and  
nothing more.

Please note that if I repeat the experiments using a MacBook Pro with  
Atheros hardware everything works fine. Also all other Linux PC I have  
do not have problems in joining these b43-run ad-hoc networks  
independently of the kind of Atheros or BCM hardware they use.



From mb at bu3sch.de  Fri Jan 30 22:59:53 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Fri, 30 Jan 2009 22:59:53 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <41960ccf0901300522i6ba65311j4c94c73ea900b501@mail.gmail.com>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<200901301146.46653.mb@bu3sch.de>
	<41960ccf0901300522i6ba65311j4c94c73ea900b501@mail.gmail.com>
Message-ID: <200901302259.53251.mb@bu3sch.de>

On Friday 30 January 2009 14:22:35 Lorenzo Nava wrote:
> > I think that's rather unlikely, however. The DMA code is basically unchanged
> > for months and especially the slot handling hasn't changed in years.
> >
> 
> Yes, but I didn't mean that the code has some bug. Let's say, for
> example, that all the DMA slots were filled; when the firmware will
> try to report a tx status it will send the informations to the DMA.
> The DMA won't have enough space to store it and so it will drop the
> message. In your opinion is it possible that something like that
> happened?

No. TX status isn't passed through DMA in >=rev5 cores.
It's passed through MMIO registers which access an internal hardware queue.

> What looks strange to me is that, if the error is somewhere in the
> tx_header definition, every transmission will result in an error from
> the b43_dma_handle_txstatus. If a field is not in the correct
> position, it is always wrong: it can't be sometimes right and
> sometimes wrong, don't you agree?
> I had similar problem beacause of the wrong header offsets
> definitions, but that made every transmission generate a BUG report...
> I don't understand how it is possible that almost always things went
> fine and sometimes report status was not correct...

Well, you should probably patch the driver to print the cookie when the WARN_ON happens
and reproduce.

> Please Michael, if you can, can you please check shm.inc header definition?

Not yet. Maybe later.


-- 
Greetings, Michael.


From Larry.Finger at lwfinger.net  Sat Jan 31 07:54:20 2009
From: Larry.Finger at lwfinger.net (Larry Finger)
Date: Sat, 31 Jan 2009 00:54:20 -0600
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
Message-ID: <4983F59C.6040103@lwfinger.net>

Francesco,

I changed the dma.c code to WARN_ON rather than BUG_ON and also dump
the cookie for the erring case. Of course, the system no longer
crashes, nor even stops on the first error. I have no idea how many
errors occurred before I got it stopped, but the cookies for the first
few offending frames were 0x2030, 0x2032, 0x2048, 0x204c, 0x204e,
0x2050, and 0x2052.

When I got it stopped, I dumped /sys/kernel/debug/b43/phy0/txstat and
obtained:



b43 TX status reports:

index | cookie | seq | phy_stat | frame_count | rts_count |
supp_reason | pm_indicated | intermediate | for_ampdu | acked
---
000 | 0x207E | 0x067E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
001 | 0x2060 | 0x066E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
002 | 0x2062 | 0x0670 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
003 | 0x2002 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
004 | 0x2064 | 0x0670 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
005 | 0x2004 | 0x0681 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
006 | 0x2066 | 0x0672 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
007 | 0x2006 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
008 | 0x2068 | 0x0672 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
009 | 0x2008 | 0x0683 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
010 | 0x206A | 0x0674 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
011 | 0x200A | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
012 | 0x206C | 0x0674 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
013 | 0x206E | 0x0676 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
014 | 0x200E | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
015 | 0x2070 | 0x0676 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
016 | 0x2072 | 0x0678 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
017 | 0x2012 | 0x0688 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
018 | 0x2074 | 0x0678 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
019 | 0x2076 | 0x067A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
020 | 0x2016 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
021 | 0x2078 | 0x067A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
022 | 0x207A | 0x067C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
023 | 0x201A | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
024 | 0x207C | 0x067C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
025 | 0x201E | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
026 | 0x2000 | 0x067E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
027 | 0x2020 | 0x068F | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
028 | 0x2002 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
029 | 0x2022 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
030 | 0x2004 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
031 | 0x2006 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
032 | 0x2026 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
033 | 0x2008 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
034 | 0x2028 | 0x0693 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
035 | 0x200A | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
036 | 0x202A | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
037 | 0x200C | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
038 | 0x202C | 0x0695 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
039 | 0x200E | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
040 | 0x202E | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
041 | 0x2010 | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
042 | 0x2030 | 0x0697 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
043 | 0x2012 | 0x0688 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
044 | 0x2034 | 0x0699 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
045 | 0x2016 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
046 | 0x2036 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
047 | 0x2018 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
048 | 0x2038 | 0x069B | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
049 | 0x201A | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
050 | 0x201C | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
051 | 0x203C | 0x069D | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
052 | 0x201E | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
053 | 0x2020 | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
054 | 0x2040 | 0x069F | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
055 | 0x2022 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
056 | 0x2042 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
057 | 0x2024 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
058 | 0x2044 | 0x06A1 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
059 | 0x2026 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
060 | 0x2046 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
061 | 0x2028 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
062 | 0x2048 | 0x06A3 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
063 | 0x202A | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
064 | 0x204A | 0x06A4 | 0x00 | 0x5 | 0x0 | 0 | 0 | 0 | 0 | 1
065 | 0x202C | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
066 | 0x204C | 0x06A5 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
067 | 0x202E | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
068 | 0x204E | 0x06A6 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
069 | 0x2030 | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
070 | 0x2050 | 0x06A7 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
071 | 0x2032 | 0x0698 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
072 | 0x2052 | 0x06A8 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
073 | 0x2034 | 0x0698 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
074 | 0x2054 | 0x06A9 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
075 | 0x2036 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
076 | 0x2056 | 0x06AA | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
077 | 0x2038 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
078 | 0x2058 | 0x06AB | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
079 | 0x203A | 0x069C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
080 | 0x205A | 0x06AC | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
081 | 0x203C | 0x069C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
082 | 0x205C | 0x06AD | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
083 | 0x203E | 0x069E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
084 | 0x205E | 0x06AE | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
085 | 0x2040 | 0x069E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
086 | 0x2060 | 0x06AF | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
087 | 0x2042 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
088 | 0x2062 | 0x06B0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
089 | 0x2044 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
090 | 0x2064 | 0x06B1 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
091 | 0x2046 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
092 | 0x2066 | 0x06B2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
093 | 0x2048 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
094 | 0x2068 | 0x06B3 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
095 | 0x204A | 0x06A4 | 0x00 | 0x5 | 0x0 | 0 | 0 | 0 | 0 | 1
096 | 0x206A | 0x06B4 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
097 | 0x204C | 0x06A4 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
098 | 0x206C | 0x06B5 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
099 | 0x204E | 0x06A6 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1

===================================

I also dumped shared memory:

--- B43 microcode state dump ---
PC: 028  PSM-COND: 0000
Link registers:
lr0: 048D  lr1: 0436  lr2: 0049  lr3: 0467
Offset registers:
off0: 041E  off1: 0504  off2: 037E  off3: 037E
off4: 0130  off5: 051D  off6: ED9F
General purpose registers:
r00: 0001  r01: 0000  r02: 0004  r03: 0035
r04: 0000  r05: 0020  r06: 001F  r07: 03FF
r08: 001F  r09: 0000  r10: 0000  r11: 0000
r12: 02C7  r13: 0000  r14: 0007  r15: 0000
r16: 0000  r17: B6C2  r18: 0000  r19: 0000
r20: 0000  r21: 0000  r22: 0000  r23: 0000
r24: 0035  r25: 4021  r26: 0000  r27: 0000
r28: 0000  r29: 0003  r30: 0001  r31: DE3A
r32: 0802  r33: 013F  r34: 053D  r35: 041E
r36: 0008  r37: 0000  r38: 0002  r39: 0000
r40: 0000  r41: 0000  r42: 0000  r43: 0000
r44: 0000  r45: 0000  r46: 0000  r47: 0000
r48: 0000  r49: 0000  r50: 0000  r51: 0000
r52: 0000  r53: 0000  r54: 0000  r55: 0000
r56: 0000  r57: 0000  r58: 0000  r59: 0000
r60: 0000  r61: 0000  r62: 0000  r63: 0000
Code:
<No binary supplied. See --binary option>
Shared memory:
0x0000:  9A01 7008 FFFF 0A7C 0000 0000 C000 0A00   ..p....|........
0x0010:  0900 0000 8000 0900 4700 4700 8301 6400   ........G.G...d.
0x0020:  3009 C0FC 0000 0000 0000 0000 0000 0000   0...............
0x0030:  0001 0000 0200 0200 0100 0400 1E00 0000   ................
0x0040:  0200 0000 0300 0200 0E00 4700 0028 0000   ..........G..(..
0x0050:  0700 0200 C0FC 8205 0D10 0D7F 0A00 0301   ................
0x0060:  0000 0000 0300 0000 0000 0000 0000 1100   ................
0x0070:  F0F0 F07F 0100 0000 0000 3300 F28C 4EC4   ..........3...N.
0x0080:  0600 1027 0000 0000 1212 1012 0C01 0702   ...'............
0x0090:  0000 0000 6009 FA00 090D 0A08 0D01 0000   ....`...........
0x00A0:  0100 0000 0000 3F01 FFFF 0000 0000 0000   ......?.........
0x00B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x00C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x00D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x00E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x00F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0100:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0110:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0120:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0130:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0140:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0150:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0160:  4252 434D 5F54 4553 545F 5353 4944 0000   BRCM_TEST_SSID..
0x0170:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0180:  0000 0000 0000 0000 C0FC 0000 0000 0000   ................
0x0190:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x01A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x01B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x01C0:  2E03 2E03 2E03 2E03 2E03 2E03 2E03 2E03   ................
0x01D0:  6A03 5603 4203 2E03 7403 6003 4C03 3803   j.V.B...t.`.L.8.
0x01E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x01F0:  6A03 5603 4203 2E03 6A03 5603 4203 3803   j.V.B...j.V.B.8.
0x0200:  7E03 7E03 7E03 7E03 8903 7E03 7E03 9403   ~.~.~.~...~.~...
0x0210:  7E03 7E03 7E03 7E03 7E03 7E03 9F03 7E03   ~.~.~.~.~.~...~.
0x0220:  0000 0000 0000 0000 8903 0000 0000 9403   ................
0x0230:  0000 0000 7E03 0000 0000 0000 7E03 0000   ....~.......~...
0x0240:  0000 0100 FF03 0100 0700 0000 0700 0001   ................
0x0250:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0260:  0000 1F00 FF03 1F00 0300 0000 0300 0003   ................
0x0270:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0280:  0000 0100 0100 0100 0200 0000 0200 0001   ................
0x0290:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x02A0:  0000 0F00 FF03 0F00 0200 0100 0300 0001   ................
0x02B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x02C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x02D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x02E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x02F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0300:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0310:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0320:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0330:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0340:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0350:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0360:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0370:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0380:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0390:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x03F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0400:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0410:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0420:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0430:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0440:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0450:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0460:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0470:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0480:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0490:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x04F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0500:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0510:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0520:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0530:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0540:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0550:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0560:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0570:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0580:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0590:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x05A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x05B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x05C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x05D0:  0000 0000 0000 1000 2000 3000 4000 5000   ........ .0. at .P.
0x05E0:  6000 7000 8000 9000 A000 B000 C000 D000   `.p.............
0x05F0:  E000 F000 0001 1001 2001 3001 4001 5001   ........ .0. at .P.
0x0600:  6001 7001 8001 9001 A001 B001 C001 D001   `.p.............
0x0610:  E001 F001 0002 1002 2002 3002 4002 5002   ........ .0. at .P.
0x0620:  6002 7002 8002 9002 A002 B002 C002 D002   `.p.............
0x0630:  E002 F002 0003 1003 2003 3003 4003 5003   ........ .0. at .P.
0x0640:  6003 7003 8003 9003 0000 0000 0000 0000   `.p.............
0x0650:  0000 0000 0000 0000 0000 0000 2000 CB01   ............ ...
0x0660:  0000 0000 3C00 AB08 0000 1004 8400 0000   ....<...........
0x0670:  1400 CF01 0200 0000 3400 AF08 0200 1004   ........4.......
0x0680:  6400 0000 1000 CA01 0200 0000 3000 AA08   d...........0...
0x0690:  0200 1004 5400 0000 0800 CE01 0000 0000   ....T...........
0x06A0:  2C00 AE08 0000 1004 4400 0000 0800 C901   ,.......D.......
0x06B0:  0200 0000 2C00 A908 0200 1004 3C00 0000   ....,.......<...
0x06C0:  0400 CD01 0000 0000 2800 AD08 0000 1004   ........(.......
0x06D0:  3400 0000 0400 C801 0000 0000 2800 A808   4...........(...
0x06E0:  0000 1004 3000 0000 0000 CC01 0200 0000   ....0...........
0x06F0:  2800 AC08 0200 1004 3000 0000 C000 0A04   (.......0.......
0x0700:  7000 0000 3A01 0A04 2802 2CC0 F202 0000   p...:...(.,.....
0x0710:  0000 6000 1404 3800 0000 0201 1404 1401   ..`...8.........
0x0720:  2CC0 DE01 0000 0000 2200 3704 1500 0000   ,.......".7.....
0x0730:  DF00 3704 6500 2CC0 2E01 0000 0000 1100   ..7.e.,.........
0x0740:  6E84 0B00 0000 D400 6E84 3300 2CC0 FC00   n.......n.3.,...
0x0750:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0760:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0770:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0780:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0790:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x07F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0800:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0810:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0820:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0830:  0000 0000 0000 0000 0000 0000 1900 0000   ................
0x0840:  0841 0000 C100 0000 0000 0000 0000 0C00   .A..............
0x0850:  0001 0000 0000 0000 0000 0000 0000 0000   ................
0x0860:  0000 001A 7046 BAB1 0000 0000 0000 0000   ....pF..........
0x0870:  0000 0A04 0004 0000 6A04 0000 0000 0000   ........j.......
0x0880:  0000 0000 0000 0000 0620 0110 0CC2 C206   ......... ......
0x0890:  0000 D7E2 0000 0400 0000 0000 0000 0000   ................
0x08A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x08B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x08C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x08D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x08E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x08F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0900:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0910:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0920:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0930:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0940:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0950:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0960:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0970:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0980:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0990:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09A0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09B0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09C0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09D0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09E0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x09F0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0A00:  0000 0000 0000 0000 0A04 8803 8633 8000   .............3..
0x0A10:  0000 FFFF FFFF FFFF 001A 7046 BAB1 001A   ..........pF....
0x0A20:  7046 BAB1 40CC 8B91 FA8C 3300 0000 6400   pF.. at .....3...d.
0x0A30:  3104 000A 6C77 6664 6A66 5F72 6164 0108   1...lwfdjf_rad..
0x0A40:  8284 8B96 24B0 486C 0301 0105 0400 0100   ....$.Hl........
0x0A50:  002A 0100 2F01 0030 1401 0000 0FAC 0401   .*../..0........
0x0A60:  0000 0FAC 0401 0000 0FAC 0200 0032 048C   .............2..
0x0A70:  1298 60DD 0600 1018 0202 04C0 C952 7C52   ..`..........R|R
0x0A80:  C8E3 A0F5 E0B6 9533 7700 0000 0600 2B60   .......3w.....+`
0x0A90:  0448 0000 0000 0000 C6C0 6200 0000 0000   .H........b.....
0x0AA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0AB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0AC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0AD0:  0000 0000 0000 0000 318B D174 0000 0000   ........1..t....
0x0AE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0AF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B00:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B10:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B20:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B30:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B40:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B50:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B60:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B70:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B80:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0B90:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BD0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0BF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C00:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C10:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C20:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C30:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C40:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C50:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C60:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C70:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C80:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0C90:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CD0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0CF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D00:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D10:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D20:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D30:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D40:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D50:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D60:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D70:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D80:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0D90:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DD0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0DF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E00:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E10:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E20:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E30:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E40:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E50:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E60:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E70:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E80:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0E90:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0EA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0EB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0EC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0ED0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0EE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0EF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F00:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F10:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F20:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F30:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F40:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F50:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F60:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F70:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F80:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0F90:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FA0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FB0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FC0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FD0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FE0:  0000 0000 0000 0000 0000 0000 0000 0000   ................
0x0FF0:  0000 0000 0000 0000 0000 0000 0000 0000   ................

Is there any way for me to me to freeze the interface when the first
error occurs without inducing a kernel panic?

Larry



From navalorenx at gmail.com  Sat Jan 31 11:21:09 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Sat, 31 Jan 2009 11:21:09 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901302259.53251.mb@bu3sch.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<200901301146.46653.mb@bu3sch.de>
	<41960ccf0901300522i6ba65311j4c94c73ea900b501@mail.gmail.com>
	<200901302259.53251.mb@bu3sch.de>
Message-ID: <AF59990B-C508-4AE7-8C47-07B903061515@gmail.com>


On Jan 30, 2009, at 10:59 PM, Michael Buesch wrote:

> On Friday 30 January 2009 14:22:35 Lorenzo Nava wrote:
>>> I think that's rather unlikely, however. The DMA code is basically  
>>> unchanged
>>> for months and especially the slot handling hasn't changed in years.
>>>
>>
>> Yes, but I didn't mean that the code has some bug. Let's say, for
>> example, that all the DMA slots were filled; when the firmware will
>> try to report a tx status it will send the informations to the DMA.
>> The DMA won't have enough space to store it and so it will drop the
>> message. In your opinion is it possible that something like that
>> happened?
>
> No. TX status isn't passed through DMA in >=rev5 cores.
> It's passed through MMIO registers which access an internal hardware  
> queue.

Ok, perfect, thanks.
>
>
>> Please Michael, if you can, can you please check shm.inc header  
>> definition?
>
> Not yet. Maybe later.
>

Ok, tahnks.

Cheers

Lorenzo





From mb at bu3sch.de  Sat Jan 31 11:46:25 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 11:46:25 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4983F59C.6040103@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
	<4983F59C.6040103@lwfinger.net>
Message-ID: <200901311146.25921.mb@bu3sch.de>

On Saturday 31 January 2009 07:54:20 Larry Finger wrote:
> I changed the dma.c code to WARN_ON rather than BUG_ON

Can you send this patch upstream?

> b43 TX status reports:
> 
> index | cookie | seq | phy_stat | frame_count | rts_count |
> supp_reason | pm_indicated | intermediate | for_ampdu | acked
> ---
> 000 | 0x207E | 0x067E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 001 | 0x2060 | 0x066E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 002 | 0x2062 | 0x0670 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 003 | 0x2002 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 004 | 0x2064 | 0x0670 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 005 | 0x2004 | 0x0681 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 006 | 0x2066 | 0x0672 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 007 | 0x2006 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 008 | 0x2068 | 0x0672 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 009 | 0x2008 | 0x0683 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 010 | 0x206A | 0x0674 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 011 | 0x200A | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 012 | 0x206C | 0x0674 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 013 | 0x206E | 0x0676 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 014 | 0x200E | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 015 | 0x2070 | 0x0676 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 016 | 0x2072 | 0x0678 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 017 | 0x2012 | 0x0688 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 018 | 0x2074 | 0x0678 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 019 | 0x2076 | 0x067A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 020 | 0x2016 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 021 | 0x2078 | 0x067A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 022 | 0x207A | 0x067C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 023 | 0x201A | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 024 | 0x207C | 0x067C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 025 | 0x201E | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 026 | 0x2000 | 0x067E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 027 | 0x2020 | 0x068F | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 028 | 0x2002 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 029 | 0x2022 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 030 | 0x2004 | 0x0680 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 031 | 0x2006 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 032 | 0x2026 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 033 | 0x2008 | 0x0682 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 034 | 0x2028 | 0x0693 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 035 | 0x200A | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 036 | 0x202A | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 037 | 0x200C | 0x0684 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 038 | 0x202C | 0x0695 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 039 | 0x200E | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 040 | 0x202E | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 041 | 0x2010 | 0x0686 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 042 | 0x2030 | 0x0697 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 043 | 0x2012 | 0x0688 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 044 | 0x2034 | 0x0699 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 045 | 0x2016 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 046 | 0x2036 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 047 | 0x2018 | 0x068A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 048 | 0x2038 | 0x069B | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 049 | 0x201A | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 050 | 0x201C | 0x068C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 051 | 0x203C | 0x069D | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 052 | 0x201E | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 053 | 0x2020 | 0x068E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 054 | 0x2040 | 0x069F | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 055 | 0x2022 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 056 | 0x2042 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 057 | 0x2024 | 0x0690 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 058 | 0x2044 | 0x06A1 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 059 | 0x2026 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 060 | 0x2046 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 061 | 0x2028 | 0x0692 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 062 | 0x2048 | 0x06A3 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 063 | 0x202A | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 064 | 0x204A | 0x06A4 | 0x00 | 0x5 | 0x0 | 0 | 0 | 0 | 0 | 1
> 065 | 0x202C | 0x0694 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 066 | 0x204C | 0x06A5 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 067 | 0x202E | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 068 | 0x204E | 0x06A6 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 069 | 0x2030 | 0x0696 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 070 | 0x2050 | 0x06A7 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 071 | 0x2032 | 0x0698 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 072 | 0x2052 | 0x06A8 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 073 | 0x2034 | 0x0698 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 074 | 0x2054 | 0x06A9 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 075 | 0x2036 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 076 | 0x2056 | 0x06AA | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 077 | 0x2038 | 0x069A | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 078 | 0x2058 | 0x06AB | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 079 | 0x203A | 0x069C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 080 | 0x205A | 0x06AC | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 081 | 0x203C | 0x069C | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 082 | 0x205C | 0x06AD | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 083 | 0x203E | 0x069E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 084 | 0x205E | 0x06AE | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 085 | 0x2040 | 0x069E | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 086 | 0x2060 | 0x06AF | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 087 | 0x2042 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 088 | 0x2062 | 0x06B0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 089 | 0x2044 | 0x06A0 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 090 | 0x2064 | 0x06B1 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 091 | 0x2046 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 092 | 0x2066 | 0x06B2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 093 | 0x2048 | 0x06A2 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 094 | 0x2068 | 0x06B3 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 095 | 0x204A | 0x06A4 | 0x00 | 0x5 | 0x0 | 0 | 0 | 0 | 0 | 1
> 096 | 0x206A | 0x06B4 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 097 | 0x204C | 0x06A4 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 098 | 0x206C | 0x06B5 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1
> 099 | 0x204E | 0x06A6 | 0x00 | 0x1 | 0x0 | 0 | 0 | 0 | 0 | 1

Hmmm, I think the cookies should actually be more or less sequential, if
QoS and PIO are not used. That's rather strange. Can you try with original fw and
see what the cookies look like?

> Is there any way for me to me to freeze the interface when the first
> error occurs without inducing a kernel panic?

Introduce a flag that will drop all TX frames in b43. Just skb_free them.

-- 
Greetings, Michael.


From navalorenx at gmail.com  Sat Jan 31 12:20:18 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Sat, 31 Jan 2009 12:20:18 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901311146.25921.mb@bu3sch.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
	<4983F59C.6040103@lwfinger.net> <200901311146.25921.mb@bu3sch.de>
Message-ID: <44F82BA3-71C2-419B-B89A-90B6D08CACA3@gmail.com>

>>
> Hmmm, I think the cookies should actually be more or less  
> sequential, if
> QoS and PIO are not used. That's rather strange. Can you try with  
> original fw and
> see what the cookies look like?


Yes Michael, you're right... I tried with my 4318 and openfwwf-5.1 and  
cookie value goes from 00 to 7E and then restarts from 00.
Here is a portion of what cookie header field looks like during a 1  
ping/s transmission...

...
|6420|
|6620|
|6820|
|6A20|
|6C20|
|6E20|
|7020|
|7220|
|7420|
|7620|
|7820|
|7A20|
|7C20|
|7E20|
|0020|
|0220|
|0420|
|0620|
|0820|
|0C20|
|0E20|
|1020|
...

Any idea on the reason why Larry has 2 cookie sequences mixed togheter?

cheers

Lorenzo


From mb at bu3sch.de  Sat Jan 31 12:23:41 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 12:23:41 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <44F82BA3-71C2-419B-B89A-90B6D08CACA3@gmail.com>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<200901311146.25921.mb@bu3sch.de>
	<44F82BA3-71C2-419B-B89A-90B6D08CACA3@gmail.com>
Message-ID: <200901311223.41733.mb@bu3sch.de>

On Saturday 31 January 2009 12:20:18 Lorenzo Nava wrote:
> >>
> > Hmmm, I think the cookies should actually be more or less  
> > sequential, if
> > QoS and PIO are not used. That's rather strange. Can you try with  
> > original fw and
> > see what the cookies look like?
> 
> 
> Yes Michael, you're right... I tried with my 4318 and openfwwf-5.1 and  
> cookie value goes from 00 to 7E and then restarts from 00.
> Here is a portion of what cookie header field looks like during a 1  
> ping/s transmission...
> 
> ...
> |6420|
> |6620|
> |6820|
> |6A20|
> |6C20|
> |6E20|
> |7020|
> |7220|
> |7420|
> |7620|
> |7820|
> |7A20|
> |7C20|
> |7E20|
> |0020|
> |0220|
> |0420|
> |0620|
> |0820|
> |0C20|
> |0E20|
> |1020|
> ...
> 
> Any idea on the reason why Larry has 2 cookie sequences mixed togheter?

Why are your cookies endianness swapped?

-- 
Greetings, Michael.


From navalorenx at gmail.com  Sat Jan 31 12:32:30 2009
From: navalorenx at gmail.com (Lorenzo Nava)
Date: Sat, 31 Jan 2009 12:32:30 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <200901311223.41733.mb@bu3sch.de>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<200901311146.25921.mb@bu3sch.de>
	<44F82BA3-71C2-419B-B89A-90B6D08CACA3@gmail.com>
	<200901311223.41733.mb@bu3sch.de>
Message-ID: <DD1B5924-015E-4C3F-89E6-1B7B03872B24@gmail.com>


On Jan 31, 2009, at 12:23 PM, Michael Buesch wrote:

> On Saturday 31 January 2009 12:20:18 Lorenzo Nava wrote:
>>>>
>>> Hmmm, I think the cookies should actually be more or less
>>> sequential, if
>>> QoS and PIO are not used. That's rather strange. Can you try with
>>> original fw and
>>> see what the cookies look like?
>>
>>
>> Yes Michael, you're right... I tried with my 4318 and openfwwf-5.1  
>> and
>> cookie value goes from 00 to 7E and then restarts from 00.
>> Here is a portion of what cookie header field looks like during a 1
>> ping/s transmission...
>>
>> ...
>> |6420|
>> |6620|
>> |6820|
>> |6A20|
>> |6C20|
>> |6E20|
>> |7020|
>> |7220|
>> |7420|
>> |7620|
>> |7820|
>> |7A20|
>> |7C20|
>> |7E20|
>> |0020|
>> |0220|
>> |0420|
>> |0620|
>> |0820|
>> |0C20|
>> |0E20|
>> |1020|
>> ...
>>
>> Any idea on the reason why Larry has 2 cookie sequences mixed  
>> togheter?
>
> Why are your cookies endianness swapped?

I forgot to say that these numbers are related to tx header, so I now  
need to check what report_tx_status send back...
>
>
> -- 
> Greetings, Michael.



From mb at bu3sch.de  Sat Jan 31 14:20:44 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 14:20:44 +0100
Subject: [PATCH] b43: Add LP-PHY register definitions
Message-ID: <200901311420.44681.mb@bu3sch.de>

This adds register definitions for the LP-PHY.
This also adds a few minor empty function bodies for the LP-init.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

I'll let you decide whether you queue this for the next feature release
or the next -rc. I lost track of what the rules are for this kind of change.
Note that all this code currently is under BROKEN dependency.
So it won't even be compiled without changing the Kconfig first.

Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.c	2009-01-31 13:15:22.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c	2009-01-31 13:35:47.000000000 +0100
@@ -57,8 +57,41 @@ static void b43_lpphy_op_free(struct b43
 	dev->phy.lp = NULL;
 }
 
+static void lpphy_table_init(struct b43_wldev *dev)
+{
+	//TODO
+}
+
+static void lpphy_baseband_rev0_1_init(struct b43_wldev *dev)
+{
+	B43_WARN_ON(1);//TODO rev < 2 not supported, yet.
+}
+
+static void lpphy_baseband_rev2plus_init(struct b43_wldev *dev)
+{
+	//TODO
+}
+
+static void lpphy_baseband_init(struct b43_wldev *dev)
+{
+	lpphy_table_init(dev);
+	if (dev->phy.rev >= 2)
+		lpphy_baseband_rev2plus_init(dev);
+	else
+		lpphy_baseband_rev0_1_init(dev);
+}
+
+static void lpphy_radio_init(struct b43_wldev *dev)
+{
+	//TODO
+}
+
 static int b43_lpphy_op_init(struct b43_wldev *dev)
 {
+	/* TODO: band SPROM */
+	lpphy_baseband_init(dev);
+	lpphy_radio_init(dev);
+
 	//TODO
 
 	return 0;
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.h	2009-01-31 14:04:07.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.h	2009-01-31 14:20:09.000000000 +0100
@@ -4,8 +4,281 @@
 /* Definitions for the LP-PHY */
 
 
+/* The CCK PHY register range. */
+#define B43_LPPHY_B_VERSION			B43_PHY_CCK(0x00) /* B PHY version */
+#define B43_LPPHY_B_BBCONFIG			B43_PHY_CCK(0x01) /* B PHY BBConfig */
+#define B43_LPPHY_B_RX_STAT0			B43_PHY_CCK(0x04) /* B PHY RX Status0 */
+#define B43_LPPHY_B_RX_STAT1			B43_PHY_CCK(0x05) /* B PHY RX Status1 */
+#define B43_LPPHY_B_CRS_THRESH			B43_PHY_CCK(0x06) /* B PHY CRS Thresh */
+#define B43_LPPHY_B_TXERROR			B43_PHY_CCK(0x07) /* B PHY TxError */
+#define B43_LPPHY_B_CHANNEL			B43_PHY_CCK(0x08) /* B PHY Channel */
+#define B43_LPPHY_B_WORKAROUND			B43_PHY_CCK(0x09) /* B PHY workaround */
+#define B43_LPPHY_B_TEST			B43_PHY_CCK(0x0A) /* B PHY Test */
+#define B43_LPPHY_B_FOURWIRE_ADDR		B43_PHY_CCK(0x0B) /* B PHY Fourwire Address */
+#define B43_LPPHY_B_FOURWIRE_DATA_HI		B43_PHY_CCK(0x0C) /* B PHY Fourwire Data Hi */
+#define B43_LPPHY_B_FOURWIRE_DATA_LO		B43_PHY_CCK(0x0D) /* B PHY Fourwire Data Lo */
+#define B43_LPPHY_B_BIST_STAT			B43_PHY_CCK(0x0E) /* B PHY Bist Status */
+#define B43_LPPHY_PA_RAMP_TX_TO			B43_PHY_CCK(0x10) /* PA Ramp TX Timeout */
+#define B43_LPPHY_RF_SYNTH_DC_TIMER		B43_PHY_CCK(0x11) /* RF Synth DC Timer */
+#define B43_LPPHY_PA_RAMP_TX_TIME_IN		B43_PHY_CCK(0x12) /* PA ramp TX Time in */
+#define B43_LPPHY_RX_FILTER_TIME_IN		B43_PHY_CCK(0x13) /* RX Filter Time in */
+#define B43_LPPHY_PLL_COEFF_S			B43_PHY_CCK(0x18) /* PLL Coefficient(s) */
+#define B43_LPPHY_PLL_OUT			B43_PHY_CCK(0x19) /* PLL Out */
+#define B43_LPPHY_RSSI_THRES			B43_PHY_CCK(0x20) /* RSSI Threshold */
+#define B43_LPPHY_IQ_THRES_HH			B43_PHY_CCK(0x21) /* IQ Threshold HH */
+#define B43_LPPHY_IQ_THRES_H			B43_PHY_CCK(0x22) /* IQ Threshold H */
+#define B43_LPPHY_IQ_THRES_L			B43_PHY_CCK(0x23) /* IQ Threshold L */
+#define B43_LPPHY_IQ_THRES_LL			B43_PHY_CCK(0x24) /* IQ Threshold LL */
+#define B43_LPPHY_AGC_GAIN			B43_PHY_CCK(0x25) /* AGC Gain */
+#define B43_LPPHY_LNA_GAIN_RANGE		B43_PHY_CCK(0x26) /* LNA Gain Range */
+#define B43_LPPHY_JSSI				B43_PHY_CCK(0x27) /* JSSI */
+#define B43_LPPHY_TSSI_CTL			B43_PHY_CCK(0x28) /* TSSI Control */
+#define B43_LPPHY_TSSI				B43_PHY_CCK(0x29) /* TSSI */
+#define B43_LPPHY_TR_LOSS			B43_PHY_CCK(0x2A) /* TR Loss */
+#define B43_LPPHY_LO_LEAKAGE			B43_PHY_CCK(0x2B) /* LO Leakage */
+#define B43_LPPHY_LO_RSSIACC			B43_PHY_CCK(0x2C) /* LO RSSIAcc */
+#define B43_LPPHY_LO_IQ_MAG_ACC			B43_PHY_CCK(0x2D) /* LO IQ Mag Acc */
+#define B43_LPPHY_TX_DCOFFSET1			B43_PHY_CCK(0x2E) /* TX DCOffset1 */
+#define B43_LPPHY_TX_DCOFFSET2			B43_PHY_CCK(0x2F) /* TX DCOffset2 */
+#define B43_LPPHY_SYNCPEAKCNT			B43_PHY_CCK(0x30) /* SyncPeakCnt */
+#define B43_LPPHY_SYNCFREQ			B43_PHY_CCK(0x31) /* SyncFreq */
+#define B43_LPPHY_SYNCDIVERSITYCTL		B43_PHY_CCK(0x32) /* SyncDiversityControl */
+#define B43_LPPHY_PEAKENERGYL			B43_PHY_CCK(0x33) /* PeakEnergyL */
+#define B43_LPPHY_PEAKENERGYH			B43_PHY_CCK(0x34) /* PeakEnergyH */
+#define B43_LPPHY_SYNCCTL			B43_PHY_CCK(0x35) /* SyncControl */
+#define B43_LPPHY_DSSSSTEP			B43_PHY_CCK(0x38) /* DsssStep */
+#define B43_LPPHY_DSSSWARMUP			B43_PHY_CCK(0x39) /* DsssWarmup */
+#define B43_LPPHY_DSSSSIGPOW			B43_PHY_CCK(0x3D) /* DsssSigPow */
+#define B43_LPPHY_SFDDETECTBLOCKTIME		B43_PHY_CCK(0x40) /* SfdDetectBlockTIme */
+#define B43_LPPHY_SFDTO				B43_PHY_CCK(0x41) /* SFDTimeOut */
+#define B43_LPPHY_SFDCTL			B43_PHY_CCK(0x42) /* SFDControl */
+#define B43_LPPHY_RXDBG				B43_PHY_CCK(0x43) /* rxDebug */
+#define B43_LPPHY_RX_DELAYCOMP			B43_PHY_CCK(0x44) /* RX DelayComp */
+#define B43_LPPHY_CRSDROPOUTTO			B43_PHY_CCK(0x45) /* CRSDropoutTimeout */
+#define B43_LPPHY_PSEUDOSHORTTO			B43_PHY_CCK(0x46) /* PseudoShortTimeout */
+#define B43_LPPHY_PR3931			B43_PHY_CCK(0x47) /* PR3931 */
+#define B43_LPPHY_DSSSCOEFF1			B43_PHY_CCK(0x48) /* DSSSCoeff1 */
+#define B43_LPPHY_DSSSCOEFF2			B43_PHY_CCK(0x49) /* DSSSCoeff2 */
+#define B43_LPPHY_CCKCOEFF1			B43_PHY_CCK(0x4A) /* CCKCoeff1 */
+#define B43_LPPHY_CCKCOEFF2			B43_PHY_CCK(0x4B) /* CCKCoeff2 */
+#define B43_LPPHY_TRCORR			B43_PHY_CCK(0x4C) /* TRCorr */
+#define B43_LPPHY_ANGLESCALE			B43_PHY_CCK(0x4D) /* AngleScale */
+#define B43_LPPHY_OPTIONALMODES2		B43_PHY_CCK(0x4F) /* OptionalModes2 */
+#define B43_LPPHY_CCKLMSSTEPSIZE		B43_PHY_CCK(0x50) /* CCKLMSStepSize */
+#define B43_LPPHY_DFEBYPASS			B43_PHY_CCK(0x51) /* DFEBypass */
+#define B43_LPPHY_CCKSTARTDELAYLONG		B43_PHY_CCK(0x52) /* CCKStartDelayLong */
+#define B43_LPPHY_CCKSTARTDELAYSHORT		B43_PHY_CCK(0x53) /* CCKStartDelayShort */
+#define B43_LPPHY_PPROCCHDELAY			B43_PHY_CCK(0x54) /* PprocChDelay */
+#define B43_LPPHY_PPROCONOFF			B43_PHY_CCK(0x55) /* PProcOnOff */
+#define B43_LPPHY_LNAGAINTWOBIT10		B43_PHY_CCK(0x5B) /* LNAGainTwoBit10 */
+#define B43_LPPHY_LNAGAINTWOBIT32		B43_PHY_CCK(0x5C) /* LNAGainTwoBit32 */
+#define B43_LPPHY_OPTIONALMODES			B43_PHY_CCK(0x5D) /* OptionalModes */
+#define B43_LPPHY_B_RX_STAT2			B43_PHY_CCK(0x5E) /* B PHY RX Status2 */
+#define B43_LPPHY_B_RX_STAT3			B43_PHY_CCK(0x5F) /* B PHY RX Status3 */
+#define B43_LPPHY_PWDNDACDELAY			B43_PHY_CCK(0x63) /* pwdnDacDelay */
+#define B43_LPPHY_FINEDIGIGAIN_CTL		B43_PHY_CCK(0x67) /* FineDigiGain Control */
+#define B43_LPPHY_LG2GAINTBLLNA8		B43_PHY_CCK(0x68) /* Lg2GainTblLNA8 */
+#define B43_LPPHY_LG2GAINTBLLNA28		B43_PHY_CCK(0x69) /* Lg2GainTblLNA28 */
+#define B43_LPPHY_GAINTBLLNATRSW		B43_PHY_CCK(0x6A) /* GainTblLNATrSw */
+#define B43_LPPHY_PEAKENERGY			B43_PHY_CCK(0x6B) /* PeakEnergy */
+#define B43_LPPHY_LG2INITGAIN			B43_PHY_CCK(0x6C) /* lg2InitGain */
+#define B43_LPPHY_BLANKCOUNTLNAPGA		B43_PHY_CCK(0x6D) /* BlankCountLnaPga */
+#define B43_LPPHY_LNAGAINTWOBIT54		B43_PHY_CCK(0x6E) /* LNAGainTwoBit54 */
+#define B43_LPPHY_LNAGAINTWOBIT76		B43_PHY_CCK(0x6F) /* LNAGainTwoBit76 */
+#define B43_LPPHY_JSSICTL			B43_PHY_CCK(0x70) /* JSSIControl */
+#define B43_LPPHY_LG2GAINTBLLNA44		B43_PHY_CCK(0x71) /* Lg2GainTblLNA44 */
+#define B43_LPPHY_LG2GAINTBLLNA62		B43_PHY_CCK(0x72) /* Lg2GainTblLNA62 */
+
+/* The OFDM PHY register range. */
+#define B43_LPPHY_VERSION			B43_PHY_OFDM(0x00) /* Version */
+#define B43_LPPHY_BBCONFIG			B43_PHY_OFDM(0x01) /* BBConfig */
+#define B43_LPPHY_RX_STAT0			B43_PHY_OFDM(0x04) /* RX Status0 */
+#define B43_LPPHY_RX_STAT1			B43_PHY_OFDM(0x05) /* RX Status1 */
+#define B43_LPPHY_TX_ERROR			B43_PHY_OFDM(0x07) /* TX Error */
+#define B43_LPPHY_CHANNEL			B43_PHY_OFDM(0x08) /* Channel */
+#define B43_LPPHY_WORKAROUND			B43_PHY_OFDM(0x09) /* workaround */
+#define B43_LPPHY_FOURWIRE_ADDR			B43_PHY_OFDM(0x0B) /* Fourwire Address */
+#define B43_LPPHY_FOURWIREDATAHI		B43_PHY_OFDM(0x0C) /* FourwireDataHi */
+#define B43_LPPHY_FOURWIREDATALO		B43_PHY_OFDM(0x0D) /* FourwireDataLo */
+#define B43_LPPHY_BISTSTAT0			B43_PHY_OFDM(0x0E) /* BistStatus0 */
+#define B43_LPPHY_BISTSTAT1			B43_PHY_OFDM(0x0F) /* BistStatus1 */
+#define B43_LPPHY_CRSGAIN_CTL			B43_PHY_OFDM(0x10) /* crsgain Control */
+#define B43_LPPHY_OFDMPWR_THRESH0		B43_PHY_OFDM(0x11) /* ofdmPower Thresh0 */
+#define B43_LPPHY_OFDMPWR_THRESH1		B43_PHY_OFDM(0x12) /* ofdmPower Thresh1 */
+#define B43_LPPHY_OFDMPWR_THRESH2		B43_PHY_OFDM(0x13) /* ofdmPower Thresh2 */
+#define B43_LPPHY_DSSSPWR_THRESH0		B43_PHY_OFDM(0x14) /* dsssPower Thresh0 */
+#define B43_LPPHY_DSSSPWR_THRESH1		B43_PHY_OFDM(0x15) /* dsssPower Thresh1 */
+#define B43_LPPHY_MINPWR_LEVEL			B43_PHY_OFDM(0x16) /* MinPower Level */
+#define B43_LPPHY_OFDMSYNCTHRESH0		B43_PHY_OFDM(0x17) /* ofdmSyncThresh0 */
+#define B43_LPPHY_OFDMSYNCTHRESH1		B43_PHY_OFDM(0x18) /* ofdmSyncThresh1 */
+#define B43_LPPHY_FINEFREQEST			B43_PHY_OFDM(0x19) /* FineFreqEst */
+#define B43_LPPHY_IDLEAFTERPKTRXTO		B43_PHY_OFDM(0x1A) /* IDLEafterPktRXTimeout */
+#define B43_LPPHY_LTRN_CTL			B43_PHY_OFDM(0x1B) /* LTRN Control */
+#define B43_LPPHY_DCOFFSETTRANSIENT		B43_PHY_OFDM(0x1C) /* DCOffsetTransient */
+#define B43_LPPHY_PREAMBLEINTO			B43_PHY_OFDM(0x1D) /* PreambleInTimeout */
+#define B43_LPPHY_PREAMBLECONFIRMTO		B43_PHY_OFDM(0x1E) /* PreambleConfirmTimeout */
+#define B43_LPPHY_CLIPTHRESH			B43_PHY_OFDM(0x1F) /* ClipThresh */
+#define B43_LPPHY_CLIPCTRTHRESH			B43_PHY_OFDM(0x20) /* ClipCtrThresh */
+#define B43_LPPHY_OFDMSYNCTIMER_CTL		B43_PHY_OFDM(0x21) /* ofdmSyncTimer Control */
+#define B43_LPPHY_WAITFORPHYSELTO		B43_PHY_OFDM(0x22) /* WaitforPHYSelTimeout */
+#define B43_LPPHY_HIGAINDB			B43_PHY_OFDM(0x23) /* HiGainDB */
+#define B43_LPPHY_LOWGAINDB			B43_PHY_OFDM(0x24) /* LowGainDB */
+#define B43_LPPHY_VERYLOWGAINDB			B43_PHY_OFDM(0x25) /* VeryLowGainDB */
+#define B43_LPPHY_GAINMISMATCH			B43_PHY_OFDM(0x26) /* gainMismatch */
+#define B43_LPPHY_GAINDIRECTMISMATCH		B43_PHY_OFDM(0x27) /* gaindirectMismatch */
+#define B43_LPPHY_PWR_THRESH0			B43_PHY_OFDM(0x28) /* Power Thresh0 */
+#define B43_LPPHY_PWR_THRESH1			B43_PHY_OFDM(0x29) /* Power Thresh1 */
+#define B43_LPPHY_DETECTOR_DELAY_ADJUST		B43_PHY_OFDM(0x2A) /* Detector Delay Adjust */
+#define B43_LPPHY_REDUCED_DETECTOR_DELAY	B43_PHY_OFDM(0x2B) /* Reduced Detector Delay */
+#define B43_LPPHY_DATA_TO			B43_PHY_OFDM(0x2C) /* data Timeout */
+#define B43_LPPHY_CORRELATOR_DIS_DELAY		B43_PHY_OFDM(0x2D) /* correlator Dis Delay */
+#define B43_LPPHY_DIVERSITY_GAINBACK		B43_PHY_OFDM(0x2E) /* Diversity GainBack */
+#define B43_LPPHY_DSSS_CONFIRM_CNT		B43_PHY_OFDM(0x2F) /* DSSS Confirm Cnt */
+#define B43_LPPHY_DC_BLANK_INT			B43_PHY_OFDM(0x30) /* DC Blank Interval */
+#define B43_LPPHY_GAIN_MISMATCH_LIMIT		B43_PHY_OFDM(0x31) /* gain Mismatch Limit */
+#define B43_LPPHY_CRS_ED_THRESH			B43_PHY_OFDM(0x32) /* crs ed thresh */
+#define B43_LPPHY_PHASE_SHIFT_CTL		B43_PHY_OFDM(0x33) /* phase shift Control */
+#define B43_LPPHY_INPUT_PWRDB			B43_PHY_OFDM(0x34) /* Input PowerDB */
+#define B43_LPPHY_OFDM_SYNC_CTL			B43_PHY_OFDM(0x35) /* ofdm sync Control */
+#define B43_LPPHY_AFE_ADC_CTL_0			B43_PHY_OFDM(0x36) /* Afe ADC Control 0 */
+#define B43_LPPHY_AFE_ADC_CTL_1			B43_PHY_OFDM(0x37) /* Afe ADC Control 1 */
+#define B43_LPPHY_AFE_ADC_CTL_2			B43_PHY_OFDM(0x38) /* Afe ADC Control 2 */
+#define B43_LPPHY_AFE_DAC_CTL			B43_PHY_OFDM(0x39) /* Afe DAC Control */
+#define B43_LPPHY_AFE_CTL			B43_PHY_OFDM(0x3A) /* Afe Control */
+#define B43_LPPHY_AFE_CTL_OVR			B43_PHY_OFDM(0x3B) /* Afe Control Ovr */
+#define B43_LPPHY_AFE_CTL_OVRVAL		B43_PHY_OFDM(0x3C) /* Afe Control OvrVal */
+#define B43_LPPHY_AFE_RSSI_CTL_0		B43_PHY_OFDM(0x3D) /* Afe RSSI Control 0 */
+#define B43_LPPHY_AFE_RSSI_CTL_1		B43_PHY_OFDM(0x3E) /* Afe RSSI Control 1 */
+#define B43_LPPHY_AFE_RSSI_SEL			B43_PHY_OFDM(0x3F) /* Afe RSSI Sel */
+#define B43_LPPHY_RADAR_THRESH			B43_PHY_OFDM(0x40) /* Radar Thresh */
+#define B43_LPPHY_RADAR_BLANK_INT		B43_PHY_OFDM(0x41) /* Radar blank Interval */
+#define B43_LPPHY_RADAR_MIN_FM_INT		B43_PHY_OFDM(0x42) /* Radar min fm Interval */
+#define B43_LPPHY_RADAR_GAIN_TO			B43_PHY_OFDM(0x43) /* Radar gain timeout */
+#define B43_LPPHY_RADAR_PULSE_TO		B43_PHY_OFDM(0x44) /* Radar pulse timeout */
+#define B43_LPPHY_RADAR_DETECT_FM_CTL		B43_PHY_OFDM(0x45) /* Radar detect FM Control */
+#define B43_LPPHY_RADAR_DETECT_EN		B43_PHY_OFDM(0x46) /* Radar detect En */
+#define B43_LPPHY_RADAR_RD_DATA_REG		B43_PHY_OFDM(0x47) /* Radar Rd Data Reg */
+#define B43_LPPHY_LP_PHY_CTL			B43_PHY_OFDM(0x48) /* LP PHY Control */
+#define B43_LPPHY_CLASSIFIER_CTL		B43_PHY_OFDM(0x49) /* classifier Control */
+#define B43_LPPHY_RESET_CTL			B43_PHY_OFDM(0x4A) /* reset Control */
+#define B43_LPPHY_CLKEN_CTL			B43_PHY_OFDM(0x4B) /* ClkEn Control */
+#define B43_LPPHY_RF_OVERRIDE_0			B43_PHY_OFDM(0x4C) /* RF Override 0 */
+#define B43_LPPHY_RF_OVERRIDE_VAL_0		B43_PHY_OFDM(0x4D) /* RF Override Val 0 */
+#define B43_LPPHY_TR_LOOKUP_1			B43_PHY_OFDM(0x4E) /* TR Lookup 1 */
+#define B43_LPPHY_TR_LOOKUP_2			B43_PHY_OFDM(0x4F) /* TR Lookup 2 */
+#define B43_LPPHY_RSSISELLOOKUP1		B43_PHY_OFDM(0x50) /* RssiSelLookup1 */
+#define B43_LPPHY_IQLO_CAL_CMD			B43_PHY_OFDM(0x51) /* iqlo Cal Cmd */
+#define B43_LPPHY_IQLO_CAL_CMD_N_NUM		B43_PHY_OFDM(0x52) /* iqlo Cal Cmd N num */
+#define B43_LPPHY_IQLO_CAL_CMD_G_CTL		B43_PHY_OFDM(0x53) /* iqlo Cal Cmd G control */
+#define B43_LPPHY_MACINT_DBG_REGISTER		B43_PHY_OFDM(0x54) /* macint Debug Register */
+#define B43_LPPHY_TABLE_ADDR			B43_PHY_OFDM(0x55) /* Table Address */
+#define B43_LPPHY_TABLEDATALO			B43_PHY_OFDM(0x56) /* TabledataLo */
+#define B43_LPPHY_TABLEDATAHI			B43_PHY_OFDM(0x57) /* TabledataHi */
+#define B43_LPPHY_PHY_CRS_ENABLE_ADDR		B43_PHY_OFDM(0x58) /* phy CRS Enable Address */
+#define B43_LPPHY_IDLETIME_CTL			B43_PHY_OFDM(0x59) /* Idletime Control */
+#define B43_LPPHY_IDLETIME_CRS_ON_LO		B43_PHY_OFDM(0x5A) /* Idletime CRS On Lo */
+#define B43_LPPHY_IDLETIME_CRS_ON_HI		B43_PHY_OFDM(0x5B) /* Idletime CRS On Hi */
+#define B43_LPPHY_IDLETIME_MEAS_TIME_LO		B43_PHY_OFDM(0x5C) /* Idletime Meas Time Lo */
+#define B43_LPPHY_IDLETIME_MEAS_TIME_HI		B43_PHY_OFDM(0x5D) /* Idletime Meas Time Hi */
+#define B43_LPPHY_RESET_LEN_OFDM_TX_ADDR	B43_PHY_OFDM(0x5E) /* Reset len Ofdm TX Address */
+#define B43_LPPHY_RESET_LEN_OFDM_RX_ADDR	B43_PHY_OFDM(0x5F) /* Reset len Ofdm RX Address */
+#define B43_LPPHY_REG_CRS_ENABLE		B43_PHY_OFDM(0x60) /* reg crs enable */
+#define B43_LPPHY_PLCP_TMT_STR0_CTR_MIN		B43_PHY_OFDM(0x61) /* PLCP Tmt Str0 Ctr Min */
+#define B43_LPPHY_PKT_FSM_RESET_LEN_VAL		B43_PHY_OFDM(0x62) /* Pkt fsm Reset Len Value */
+#define B43_LPPHY_READSYM2RESET_CTL		B43_PHY_OFDM(0x63) /* readsym2reset Control */
+#define B43_LPPHY_DC_FILTER_DELAY1		B43_PHY_OFDM(0x64) /* Dc filter delay1 */
+#define B43_LPPHY_PACKET_RX_ACTIVE_TO		B43_PHY_OFDM(0x65) /* packet rx Active timeout */
+#define B43_LPPHY_ED_TOVAL			B43_PHY_OFDM(0x66) /* ed timeoutValue */
+#define B43_LPPHY_HOLD_CRS_ON_VAL		B43_PHY_OFDM(0x67) /* hold CRS On Value */
+#define B43_LPPHY_OFDM_TX_PHY_CRS_DELAY_VAL	B43_PHY_OFDM(0x69) /* ofdm tx phy CRS Delay Value */
+#define B43_LPPHY_CCK_TX_PHY_CRS_DELAY_VAL	B43_PHY_OFDM(0x6A) /* cck tx phy CRS Delay Value */
+#define B43_LPPHY_ED_ON_CONFIRM_TIMER_VAL	B43_PHY_OFDM(0x6B) /* Ed on confirm Timer Value */
+#define B43_LPPHY_ED_OFFSET_CONFIRM_TIMER_VAL	B43_PHY_OFDM(0x6C) /* Ed offset confirm Timer Value */
+#define B43_LPPHY_PHY_CRS_OFFSET_TIMER_VAL	B43_PHY_OFDM(0x6D) /* phy CRS offset Timer Value */
+#define B43_LPPHY_ADC_COMPENSATION_CTL		B43_PHY_OFDM(0x70) /* ADC Compensation Control */
+#define B43_LPPHY_LOG2_RBPSK_ADDR		B43_PHY_OFDM(0x71) /* log2 RBPSK Address */
+#define B43_LPPHY_LOG2_RQPSK_ADDR		B43_PHY_OFDM(0x72) /* log2 RQPSK Address */
+#define B43_LPPHY_LOG2_R16QAM_ADDR		B43_PHY_OFDM(0x73) /* log2 R16QAM Address */
+#define B43_LPPHY_LOG2_R64QAM_ADDR		B43_PHY_OFDM(0x74) /* log2 R64QAM Address */
+#define B43_LPPHY_OFFSET_BPSK_ADDR		B43_PHY_OFDM(0x75) /* offset BPSK Address */
+#define B43_LPPHY_OFFSET_QPSK_ADDR		B43_PHY_OFDM(0x76) /* offset QPSK Address */
+#define B43_LPPHY_OFFSET_16QAM_ADDR		B43_PHY_OFDM(0x77) /* offset 16QAM Address */
+#define B43_LPPHY_OFFSET_64QAM_ADDR		B43_PHY_OFDM(0x78) /* offset 64QAM Address */
+#define B43_LPPHY_ALPHA1			B43_PHY_OFDM(0x79) /* Alpha1 */
+#define B43_LPPHY_ALPHA2			B43_PHY_OFDM(0x7A) /* Alpha2 */
+#define B43_LPPHY_BETA1				B43_PHY_OFDM(0x7B) /* Beta1 */
+#define B43_LPPHY_BETA2				B43_PHY_OFDM(0x7C) /* Beta2 */
+#define B43_LPPHY_LOOP_NUM_ADDR			B43_PHY_OFDM(0x7D) /* Loop Num Address */
+#define B43_LPPHY_STR_COLLMAX_SMPL_ADDR		B43_PHY_OFDM(0x7E) /* Str Collmax Sample Address */
+#define B43_LPPHY_MAX_SMPL_COARSE_FINE_ADDR	B43_PHY_OFDM(0x7F) /* Max Sample Coarse/Fine Address */
+#define B43_LPPHY_MAX_SMPL_COARSE_STR0CTR_ADDR	B43_PHY_OFDM(0x80) /* Max Sample Coarse/Str0Ctr Address */
+#define B43_LPPHY_IQ_ENABLE_WAIT_TIME_ADDR	B43_PHY_OFDM(0x81) /* IQ Enable Wait Time Address */
+#define B43_LPPHY_IQ_NUM_SMPLS_ADDR		B43_PHY_OFDM(0x82) /* IQ Num Samples Address */
+#define B43_LPPHY_IQ_ACC_HI_ADDR		B43_PHY_OFDM(0x83) /* IQ Acc Hi Address */
+#define B43_LPPHY_IQ_ACC_LO_ADDR		B43_PHY_OFDM(0x84) /* IQ Acc Lo Address */
+#define B43_LPPHY_IQ_I_PWR_ACC_HI_ADDR		B43_PHY_OFDM(0x85) /* IQ I PWR Acc Hi Address */
+#define B43_LPPHY_IQ_I_PWR_ACC_LO_ADDR		B43_PHY_OFDM(0x86) /* IQ I PWR Acc Lo Address */
+#define B43_LPPHY_IQ_Q_PWR_ACC_HI_ADDR		B43_PHY_OFDM(0x87) /* IQ Q PWR Acc Hi Address */
+#define B43_LPPHY_IQ_Q_PWR_ACC_LO_ADDR		B43_PHY_OFDM(0x88) /* IQ Q PWR Acc Lo Address */
+#define B43_LPPHY_MAXNUMSTEPS			B43_PHY_OFDM(0x89) /* MaxNumsteps */
+#define B43_LPPHY_ROTORPHASE_ADDR		B43_PHY_OFDM(0x8A) /* RotorPhase Address */
+#define B43_LPPHY_ADVANCEDRETARDROTOR_ADDR	B43_PHY_OFDM(0x8B) /* AdvancedRetardRotor Address */
+#define B43_LPPHY_RSSIADCDELAY_CTL_ADDR		B43_PHY_OFDM(0x8D) /* rssiAdcdelay Control Address */
+#define B43_LPPHY_TSSISTAT_ADDR			B43_PHY_OFDM(0x8E) /* tssiStatus Address */
+#define B43_LPPHY_TEMPSENSESTAT_ADDR		B43_PHY_OFDM(0x8F) /* tempsenseStatus Address */
+#define B43_LPPHY_TEMPSENSE_CTL_ADDR		B43_PHY_OFDM(0x90) /* tempsense Control Address */
+#define B43_LPPHY_WRSSISTAT_ADDR		B43_PHY_OFDM(0x91) /* wrssistatus Address */
+#define B43_LPPHY_MUFACTORADDR			B43_PHY_OFDM(0x92) /* mufactoraddr */
+#define B43_LPPHY_SCRAMSTATE_ADDR		B43_PHY_OFDM(0x93) /* scramstate Address */
+#define B43_LPPHY_TXHOLDOFFADDR			B43_PHY_OFDM(0x94) /* txholdoffaddr */
+#define B43_LPPHY_PKTGAINVAL_ADDR		B43_PHY_OFDM(0x95) /* pktgainval Address */
+#define B43_LPPHY_COARSEESTIM_ADDR		B43_PHY_OFDM(0x96) /* Coarseestim Address */
+#define B43_LPPHY_STATE_TRANSITION_ADDR		B43_PHY_OFDM(0x97) /* state Transition Address */
+#define B43_LPPHY_TRN_OFFSET_ADDR		B43_PHY_OFDM(0x98) /* TRN offset Address */
+#define B43_LPPHY_NUM_ROTOR_ADDR		B43_PHY_OFDM(0x99) /* Num Rotor Address */
+#define B43_LPPHY_VITERBI_OFFSET_ADDR		B43_PHY_OFDM(0x9A) /* Viterbi Offset Address */
+#define B43_LPPHY_SMPL_COLLECT_WAIT_ADDR	B43_PHY_OFDM(0x9B) /* Sample collect wait Address */
+#define B43_LPPHY_A_PHY_CTL_ADDR		B43_PHY_OFDM(0x9C) /* A PHY Control Address */
+#define B43_LPPHY_NUM_PASS_THROUGH_ADDR		B43_PHY_OFDM(0x9D) /* Num Pass Through Address */
+#define B43_LPPHY_RX_COMP_COEFF_S		B43_PHY_OFDM(0x9E) /* RX Comp coefficient(s) */
+#define B43_LPPHY_CPAROTATEVAL			B43_PHY_OFDM(0x9F) /* cpaRotateValue */
+#define B43_LPPHY_SMPL_PLAY_COUNT		B43_PHY_OFDM(0xA0) /* Sample play count */
+#define B43_LPPHY_SMPL_PLAY_BUFFER_CTL		B43_PHY_OFDM(0xA1) /* Sample play Buffer Control */
+#define B43_LPPHY_FOURWIRE_CTL			B43_PHY_OFDM(0xA2) /* fourwire Control */
+#define B43_LPPHY_CPA_TAILCOUNT_VAL		B43_PHY_OFDM(0xA3) /* CPA TailCount Value */
+#define B43_LPPHY_TX_PWR_CTL_CMD		B43_PHY_OFDM(0xA4) /* TX Power Control Cmd */
+#define B43_LPPHY_TX_PWR_CTL_NNUM		B43_PHY_OFDM(0xA5) /* TX Power Control Nnum */
+#define B43_LPPHY_TX_PWR_CTL_IDLETSSI		B43_PHY_OFDM(0xA6) /* TX Power Control IdleTssi */
+#define B43_LPPHY_TX_PWR_CTL_TARGETPWR		B43_PHY_OFDM(0xA7) /* TX Power Control TargetPower */
+#define B43_LPPHY_TX_PWR_CTL_DELTAPWR_LIMIT	B43_PHY_OFDM(0xA8) /* TX Power Control DeltaPower Limit */
+#define B43_LPPHY_TX_PWR_CTL_BASEINDEX		B43_PHY_OFDM(0xA9) /* TX Power Control BaseIndex */
+#define B43_LPPHY_TX_PWR_CTL_PWR_INDEX		B43_PHY_OFDM(0xAA) /* TX Power Control Power Index */
+#define B43_LPPHY_TX_PWR_CTL_STAT		B43_PHY_OFDM(0xAB) /* TX Power Control Status */
+#define B43_LPPHY_LP_RF_SIGNAL_LUT		B43_PHY_OFDM(0xAC) /* LP RF signal LUT */
+#define B43_LPPHY_RX_RADIO_CTL_FILTER_STATE	B43_PHY_OFDM(0xAD) /* RX Radio Control Filter State */
+#define B43_LPPHY_RX_RADIO_CTL			B43_PHY_OFDM(0xAE) /* RX Radio Control */
+#define B43_LPPHY_NRSSI_STAT_ADDR		B43_PHY_OFDM(0xAF) /* NRSSI status Address */
+#define B43_LPPHY_RF_OVERRIDE_2			B43_PHY_OFDM(0xB0) /* RF override 2 */
+#define B43_LPPHY_RF_OVERRIDE_2_VAL		B43_PHY_OFDM(0xB1) /* RF override 2 val */
+#define B43_LPPHY_PS_CTL_OVERRIDE_VAL0		B43_PHY_OFDM(0xB2) /* PS Control override val0 */
+#define B43_LPPHY_PS_CTL_OVERRIDE_VAL1		B43_PHY_OFDM(0xB3) /* PS Control override val1 */
+#define B43_LPPHY_PS_CTL_OVERRIDE_VAL2		B43_PHY_OFDM(0xB4) /* PS Control override val2 */
+#define B43_LPPHY_TX_GAIN_CTL_OVERRIDE_VAL	B43_PHY_OFDM(0xB5) /* TX gain Control override val */
+#define B43_LPPHY_RX_GAIN_CTL_OVERRIDE_VAL	B43_PHY_OFDM(0xB6) /* RX gain Control override val */
+#define B43_LPPHY_AFE_DDFS			B43_PHY_OFDM(0xB7) /* AFE DDFS */
+#define B43_LPPHY_AFE_DDFS_POINTER_INIT		B43_PHY_OFDM(0xB8) /* AFE DDFS pointer init */
+#define B43_LPPHY_AFE_DDFS_INCR_INIT		B43_PHY_OFDM(0xB9) /* AFE DDFS incr init */
+#define B43_LPPHY_MRCNOISEREDUCTION		B43_PHY_OFDM(0xBA) /* mrcNoiseReduction */
+#define B43_LPPHY_TRLOOKUP3			B43_PHY_OFDM(0xBB) /* TRLookup3 */
+#define B43_LPPHY_TRLOOKUP4			B43_PHY_OFDM(0xBC) /* TRLookup4 */
+#define B43_LPPHY_RADAR_FIFO_STAT		B43_PHY_OFDM(0xBD) /* Radar FIFO Status */
+#define B43_LPPHY_GPIO_OUTEN			B43_PHY_OFDM(0xBE) /* GPIO Out enable */
+#define B43_LPPHY_GPOI_SELECT			B43_PHY_OFDM(0xBF) /* GPOI Select */
+#define B43_LPPHY_GPIO_OUT			B43_PHY_OFDM(0xC0) /* GPIO Out */
 
 
+
+/* Radio register access decorators. */
 #define B43_LP_RADIO(radio_reg)			(radio_reg)
 #define B43_LP_NORTH(radio_reg)			B43_LP_RADIO(radio_reg)
 #define B43_LP_SOUTH(radio_reg)			B43_LP_RADIO((radio_reg) | 0x4000)

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Jan 31 16:52:29 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 16:52:29 +0100
Subject: [PATCH] b43: Add LP-PHY baseband init for >=rev2
Message-ID: <200901311652.30074.mb@bu3sch.de>

This adds code for the baseband init of LP-PHY >=2.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/Makefile
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/Makefile	2009-01-31 16:16:57.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/Makefile	2009-01-31 16:17:18.000000000 +0100
@@ -6,6 +6,7 @@ b43-y				+= phy_g.o
 b43-y				+= phy_a.o
 b43-$(CONFIG_B43_NPHY)		+= phy_n.o
 b43-$(CONFIG_B43_PHY_LP)	+= phy_lp.o
+b43-$(CONFIG_B43_PHY_LP)	+= tables_lpphy.o
 b43-y				+= sysfs.o
 b43-y				+= xmit.o
 b43-y				+= lo.o
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.c	2009-01-31 14:28:05.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c	2009-01-31 16:45:19.000000000 +0100
@@ -3,7 +3,7 @@
   Broadcom B43 wireless driver
   IEEE 802.11g LP-PHY driver
 
-  Copyright (c) 2008 Michael Buesch <mb at bu3sch.de>
+  Copyright (c) 2008-2009 Michael Buesch <mb at bu3sch.de>
 
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
@@ -25,6 +25,7 @@
 #include "b43.h"
 #include "phy_lp.h"
 #include "phy_common.h"
+#include "tables_lpphy.h"
 
 
 static int b43_lpphy_op_allocate(struct b43_wldev *dev)
@@ -69,7 +70,80 @@ static void lpphy_baseband_rev0_1_init(s
 
 static void lpphy_baseband_rev2plus_init(struct b43_wldev *dev)
 {
-	//TODO
+	struct b43_phy_lp *lpphy = dev->phy.lp;
+
+	b43_phy_write(dev, B43_LPPHY_AFE_DAC_CTL, 0x50);
+	b43_phy_write(dev, B43_LPPHY_AFE_CTL, 0x8800);
+	b43_phy_write(dev, B43_LPPHY_AFE_CTL_OVR, 0);
+	b43_phy_write(dev, B43_LPPHY_AFE_CTL_OVRVAL, 0);
+	b43_phy_write(dev, B43_LPPHY_RF_OVERRIDE_0, 0);
+	b43_phy_write(dev, B43_LPPHY_RF_OVERRIDE_2, 0);
+	b43_phy_write(dev, B43_PHY_OFDM(0xF9), 0);
+	b43_phy_write(dev, B43_LPPHY_TR_LOOKUP_1, 0);
+	b43_phy_set(dev, B43_LPPHY_ADC_COMPENSATION_CTL, 0x10);
+	b43_phy_maskset(dev, B43_LPPHY_OFDMSYNCTHRESH0, 0xFF00, 0x78);
+	b43_phy_maskset(dev, B43_LPPHY_DCOFFSETTRANSIENT, 0xF8FF, 0x200);
+	b43_phy_maskset(dev, B43_LPPHY_DCOFFSETTRANSIENT, 0xFF00, 0x7F);
+	b43_phy_maskset(dev, B43_LPPHY_GAINDIRECTMISMATCH, 0xFF0F, 0x40);
+	b43_phy_maskset(dev, B43_LPPHY_PREAMBLECONFIRMTO, 0xFF00, 0x2);
+	b43_phy_mask(dev, B43_LPPHY_CRSGAIN_CTL, ~0x4000);
+	b43_phy_mask(dev, B43_LPPHY_CRSGAIN_CTL, ~0x2000);
+	b43_phy_set(dev, B43_PHY_OFDM(0x10A), 0x1);
+	b43_phy_maskset(dev, B43_LPPHY_CCKLMSSTEPSIZE, 0xFF01, 0x10);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xDF), 0xFF00, 0xF4);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xDF), 0x00FF, 0xF100);//FIXME specs are different
+	b43_phy_write(dev, B43_LPPHY_CLIPTHRESH, 0x48);
+	b43_phy_maskset(dev, B43_LPPHY_HIGAINDB, 0xFF00, 0x46);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xE4), 0xFF00, 0x10);
+	b43_phy_maskset(dev, B43_LPPHY_PWR_THRESH1, 0xFFF0, 0x9);
+	b43_phy_mask(dev, B43_LPPHY_GAINDIRECTMISMATCH, ~0xF);
+	b43_phy_maskset(dev, B43_LPPHY_VERYLOWGAINDB, 0x00FF, 0x5500);
+	b43_phy_maskset(dev, B43_LPPHY_CLIPCTRTHRESH, 0xF81F, 0xA0);
+	b43_phy_maskset(dev, B43_LPPHY_GAINDIRECTMISMATCH, 0xE0FF, 0x300);
+	b43_phy_maskset(dev, B43_LPPHY_HIGAINDB, 0x00FF, 0x2A00);
+	b43_phy_maskset(dev, B43_LPPHY_LOWGAINDB, 0x00FF, 0x1E00);
+	b43_phy_maskset(dev, B43_LPPHY_VERYLOWGAINDB, 0xFF00, 0xD);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xFE), 0xFFE0, 0x1F);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xFF), 0xFFE0, 0xC);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0x100), 0xFF00, 0x19);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xFF), 0x03FF, 0x3C00);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xFE), 0xFC1F, 0x3E0);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xFF), 0xFFE0, 0xC);
+	b43_phy_maskset(dev, B43_PHY_OFDM(0x100), 0x00FF, 0x1900);
+	b43_phy_maskset(dev, B43_LPPHY_CLIPCTRTHRESH, 0x83FF, 0x5800);
+	b43_phy_maskset(dev, B43_LPPHY_CLIPCTRTHRESH, 0xFFE0, 0x12);
+	b43_phy_maskset(dev, B43_LPPHY_GAINMISMATCH, 0x0FFF, 0x9000);
+
+	if (dev->phy.rev < 2) {
+		//FIXME this will never execute.
+
+		//FIXME 32bit?
+		b43_lptab_write(dev, B43_LPTAB32(0x11, 0x14), 0);
+		b43_lptab_write(dev, B43_LPTAB32(0x08, 0x12), 0x40);
+	} else {
+		//FIXME 32bit?
+		b43_lptab_write(dev, B43_LPTAB32(0x08, 0x14), 0);
+		b43_lptab_write(dev, B43_LPTAB32(0x08, 0x12), 0x40);
+	}
+
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ) {
+		b43_phy_set(dev, B43_LPPHY_CRSGAIN_CTL, 0x40);
+		b43_phy_maskset(dev, B43_LPPHY_CRSGAIN_CTL, 0xF0FF, 0xB00);
+		b43_phy_maskset(dev, B43_LPPHY_SYNCPEAKCNT, 0xFFF8, 0x6);
+		b43_phy_maskset(dev, B43_LPPHY_MINPWR_LEVEL, 0x00FF, 0x9D00);
+		b43_phy_maskset(dev, B43_LPPHY_MINPWR_LEVEL, 0xFF00, 0xA1);
+	} else /* 5GHz */
+		b43_phy_mask(dev, B43_LPPHY_CRSGAIN_CTL, ~0x40);
+
+	b43_phy_maskset(dev, B43_LPPHY_CRS_ED_THRESH, 0xFF00, 0xB3);
+	b43_phy_maskset(dev, B43_LPPHY_CRS_ED_THRESH, 0x00FF, 0xAD00);
+	b43_phy_maskset(dev, B43_LPPHY_INPUT_PWRDB, 0xFF00, lpphy->rx_pwr_offset);
+	b43_phy_set(dev, B43_LPPHY_RESET_CTL, 0x44);
+	b43_phy_write(dev, B43_LPPHY_RESET_CTL, 0x80);
+	b43_phy_write(dev, B43_LPPHY_AFE_RSSI_CTL_0, 0xA954);
+	b43_phy_write(dev, B43_LPPHY_AFE_RSSI_CTL_1,
+		      0x2000 | ((u16)lpphy->rssi_gs << 10) |
+		      ((u16)lpphy->rssi_vc << 4) | lpphy->rssi_vf);
 }
 
 static void lpphy_baseband_init(struct b43_wldev *dev)
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.h	2009-01-31 14:29:44.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.h	2009-01-31 15:50:31.000000000 +0100
@@ -803,7 +803,47 @@
 
 
 struct b43_phy_lp {
-	//TODO
+	/* Transmit isolation medium band */
+	u8 tx_isolation_med_band; /* FIXME initial value? */
+	/* Transmit isolation low band */
+	u8 tx_isolation_low_band; /* FIXME initial value? */
+	/* Transmit isolation high band */
+	u8 tx_isolation_hi_band; /* FIXME initial value? */
+
+	/* Receive power offset */
+	u8 rx_pwr_offset; /* FIXME initial value? */
+
+	/* TSSI transmit count */
+	u16 tssi_tx_count; /* FIXME initial value? */
+	/* TSSI index */
+	u16 tssi_idx; /* FIXME initial value? */
+	/* TSSI npt */
+	u16 tssi_npt; /* FIXME initial value? */
+
+	/* Target TX frequency */
+	u16 tgt_tx_freq; /* FIXME initial value? */
+
+	/* Transmit power index override */
+	s8 tx_pwr_idx_over; /* FIXME initial value? */
+
+	/* RSSI vf */
+	u8 rssi_vf; /* FIXME initial value? */
+	/* RSSI vc */
+	u8 rssi_vc; /* FIXME initial value? */
+	/* RSSI gs */
+	u8 rssi_gs; /* FIXME initial value? */
+
+	/* RC cap */
+	u8 rc_cap; /* FIXME initial value? */
+	/* BX arch */
+	u8 bx_arch; /* FIXME initial value? */
+
+	/* Full calibration channel */
+	u8 full_calib_chan; /* FIXME initial value? */
+
+	/* Transmit iqlocal best coeffs */
+	bool tx_iqloc_best_coeffs_valid;
+	u8 tx_iqloc_best_coeffs[11];
 };
 
 
Index: wireless-testing/drivers/net/wireless/b43/tables_lpphy.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/tables_lpphy.c	2009-01-31 16:35:19.000000000 +0100
@@ -0,0 +1,89 @@
+/*
+
+  Broadcom B43 wireless driver
+  IEEE 802.11g LP-PHY and radio device data tables
+
+  Copyright (c) 2009 Michael Buesch <mb at bu3sch.de>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; see the file COPYING.  If not, write to
+  the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
+  Boston, MA 02110-1301, USA.
+
+*/
+
+#include "b43.h"
+#include "tables_lpphy.h"
+#include "phy_common.h"
+#include "phy_lp.h"
+
+
+u32 b43_lptab_read(struct b43_wldev *dev, u32 offset)
+{
+	u32 type, value;
+
+	type = offset & B43_LPTAB_TYPEMASK;
+	offset &= ~B43_LPTAB_TYPEMASK;
+	B43_WARN_ON(offset > 0xFFFF);
+
+	switch (type) {
+	case B43_LPTAB_8BIT:
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		value = b43_phy_read(dev, B43_LPPHY_TABLEDATALO) & 0xFF;
+		break;
+	case B43_LPTAB_16BIT:
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		value = b43_phy_read(dev, B43_LPPHY_TABLEDATALO);
+		break;
+	case B43_LPTAB_32BIT:
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		value = b43_phy_read(dev, B43_LPPHY_TABLEDATAHI);
+		value <<= 16;
+		value |= b43_phy_read(dev, B43_LPPHY_TABLEDATALO);
+		break;
+	default:
+		B43_WARN_ON(1);
+		value = 0;
+	}
+
+	return value;
+}
+
+void b43_lptab_write(struct b43_wldev *dev, u32 offset, u32 value)
+{
+	u32 type;
+
+	type = offset & B43_LPTAB_TYPEMASK;
+	offset &= ~B43_LPTAB_TYPEMASK;
+	B43_WARN_ON(offset > 0xFFFF);
+
+	switch (type) {
+	case B43_LPTAB_8BIT:
+		B43_WARN_ON(value & ~0xFF);
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		b43_phy_write(dev, B43_LPPHY_TABLEDATALO, value);
+		break;
+	case B43_LPTAB_16BIT:
+		B43_WARN_ON(value & ~0xFFFF);
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		b43_phy_write(dev, B43_LPPHY_TABLEDATALO, value);
+		break;
+	case B43_LPTAB_32BIT:
+		b43_phy_write(dev, B43_LPPHY_TABLE_ADDR, offset);
+		b43_phy_write(dev, B43_LPPHY_TABLEDATAHI, value >> 16);
+		b43_phy_write(dev, B43_LPPHY_TABLEDATALO, value);
+		break;
+	default:
+		B43_WARN_ON(1);
+	}
+}
Index: wireless-testing/drivers/net/wireless/b43/tables_lpphy.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ wireless-testing/drivers/net/wireless/b43/tables_lpphy.h	2009-01-31 16:40:33.000000000 +0100
@@ -0,0 +1,21 @@
+#ifndef B43_TABLES_LPPHY_H_
+#define B43_TABLES_LPPHY_H_
+
+
+#define B43_LPTAB_TYPEMASK		0xF0000000
+#define B43_LPTAB_8BIT			0x10000000
+#define B43_LPTAB_16BIT			0x20000000
+#define B43_LPTAB_32BIT			0x30000000
+#define B43_LPTAB8(table, offset)	(((table) << 10) | (offset) | B43_LPTAB_8BIT)
+#define B43_LPTAB16(table, offset)	(((table) << 10) | (offset) | B43_LPTAB_16BIT)
+#define B43_LPTAB32(table, offset)	(((table) << 10) | (offset) | B43_LPTAB_32BIT)
+
+/* Table definitions */
+#define B43_LPTAB_TXPWR_R2PLUS		B43_LPTAB32(0x07, 0) /* TX power lookup table (rev >= 2) */
+#define B43_LPTAB_TXPWR_R0_1		B43_LPTAB32(0xA0, 0) /* TX power lookup table (rev < 2) */
+
+u32 b43_lptab_read(struct b43_wldev *dev, u32 offset);
+void b43_lptab_write(struct b43_wldev *dev, u32 offset, u32 value);
+
+
+#endif /* B43_TABLES_LPPHY_H_ */

-- 
Greetings, Michael.


From mb at bu3sch.de  Sat Jan 31 19:34:53 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 19:34:53 +0100
Subject: [PATCH] b43: Add LP 2062 radio init
Message-ID: <200901311934.53766.mb@bu3sch.de>

This adds initialization code for the 2062 radio.

Signed-off-by: Michael Buesch <mb at bu3sch.de>

---

Index: wireless-testing/drivers/net/wireless/b43/phy_lp.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.c	2009-01-31 17:19:22.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.c	2009-01-31 19:24:28.000000000 +0100
@@ -91,7 +91,7 @@ static void lpphy_baseband_rev2plus_init
 	b43_phy_set(dev, B43_PHY_OFDM(0x10A), 0x1);
 	b43_phy_maskset(dev, B43_LPPHY_CCKLMSSTEPSIZE, 0xFF01, 0x10);
 	b43_phy_maskset(dev, B43_PHY_OFDM(0xDF), 0xFF00, 0xF4);
-	b43_phy_maskset(dev, B43_PHY_OFDM(0xDF), 0x00FF, 0xF100);//FIXME specs are different
+	b43_phy_maskset(dev, B43_PHY_OFDM(0xDF), 0x00FF, 0xF100);
 	b43_phy_write(dev, B43_LPPHY_CLIPTHRESH, 0x48);
 	b43_phy_maskset(dev, B43_LPPHY_HIGAINDB, 0xFF00, 0x46);
 	b43_phy_maskset(dev, B43_PHY_OFDM(0xE4), 0xFF00, 0x10);
@@ -155,11 +155,114 @@ static void lpphy_baseband_init(struct b
 		lpphy_baseband_rev0_1_init(dev);
 }
 
-static void lpphy_radio_init(struct b43_wldev *dev)
+struct b2062_freqdata {
+	u16 freq;
+	u8 data[6];
+};
+
+/* Initialize the 2062 radio. */
+static void lpphy_2062_init(struct b43_wldev *dev)
+{
+	u32 crystalfreq, pdiv, tmp, ref;
+	unsigned int i;
+	const struct b2062_freqdata *fd = NULL;
+
+	static const struct b2062_freqdata freqdata_tab[] = {
+		{ .freq = 12000, .data[0] =  6, .data[1] =  6, .data[2] =  6,
+				 .data[3] =  6, .data[4] = 10, .data[5] =  6, },
+		{ .freq = 13000, .data[0] =  4, .data[1] =  4, .data[2] =  4,
+				 .data[3] =  4, .data[4] = 11, .data[5] =  7, },
+		{ .freq = 14400, .data[0] =  3, .data[1] =  3, .data[2] =  3,
+				 .data[3] =  3, .data[4] = 12, .data[5] =  7, },
+		{ .freq = 16200, .data[0] =  3, .data[1] =  3, .data[2] =  3,
+				 .data[3] =  3, .data[4] = 13, .data[5] =  8, },
+		{ .freq = 18000, .data[0] =  2, .data[1] =  2, .data[2] =  2,
+				 .data[3] =  2, .data[4] = 14, .data[5] =  8, },
+		{ .freq = 19200, .data[0] =  1, .data[1] =  1, .data[2] =  1,
+				 .data[3] =  1, .data[4] = 14, .data[5] =  9, },
+	};
+
+	b2062_upload_init_table(dev);
+
+	b43_radio_write(dev, B2062_N_TX_CTL3, 0);
+	b43_radio_write(dev, B2062_N_TX_CTL4, 0);
+	b43_radio_write(dev, B2062_N_TX_CTL5, 0);
+	b43_radio_write(dev, B2062_N_PDN_CTL0, 0x40);
+	b43_radio_write(dev, B2062_N_PDN_CTL0, 0);
+	b43_radio_write(dev, B2062_N_CALIB_TS, 0x10);
+	b43_radio_write(dev, B2062_N_CALIB_TS, 0);
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)
+		b43_radio_set(dev, B2062_N_TSSI_CTL0, 0x1);
+	else
+		b43_radio_mask(dev, B2062_N_TSSI_CTL0, ~0x1);
+
+	crystalfreq = 0;//FIXME
+
+	if (crystalfreq >= 30000000) {
+		pdiv = 1;
+		b43_radio_mask(dev, B2062_S_RFPLL_CTL1, 0xFFFB);
+	} else {
+		pdiv = 2;
+		b43_radio_set(dev, B2062_S_RFPLL_CTL1, 0x4);
+	}
+
+	tmp = (800000000 * pdiv + crystalfreq) / (32000000 * pdiv);
+	tmp = (tmp - 1) & 0xFF;
+	b43_radio_write(dev, B2062_S_RFPLL_CTL18, tmp);
+
+	tmp = (2 * crystalfreq + 1000000 * pdiv) / (2000000 * pdiv);
+	tmp = ((tmp & 0xFF) - 1) & 0xFFFF;
+	b43_radio_write(dev, B2062_S_RFPLL_CTL19, tmp);
+
+	ref = (1000 * pdiv + 2 * crystalfreq) / (2000 * pdiv);
+	ref &= 0xFFFF;
+	for (i = 0; i < ARRAY_SIZE(freqdata_tab); i++) {
+		if (ref < freqdata_tab[i].freq) {
+			fd = &freqdata_tab[i];
+			break;
+		}
+	}
+	if (B43_WARN_ON(!fd))
+		return;
+
+	b43_radio_write(dev, B2062_S_RFPLL_CTL8,
+			((u16)(fd->data[1]) << 4) | fd->data[0]);
+	b43_radio_write(dev, B2062_S_RFPLL_CTL9,
+			((u16)(fd->data[3]) << 4) | fd->data[2]);//FIXME specs are different
+	b43_radio_write(dev, B2062_S_RFPLL_CTL10, fd->data[4]);
+	b43_radio_write(dev, B2062_S_RFPLL_CTL11, fd->data[5]);
+}
+
+/* Initialize the 2063 radio. */
+static void lpphy_2063_init(struct b43_wldev *dev)
 {
 	//TODO
 }
 
+static void lpphy_sync_stx(struct b43_wldev *dev)
+{
+	//TODO
+}
+
+static void lpphy_radio_init(struct b43_wldev *dev)
+{
+	/* The radio is attached through the 4wire bus. */
+	b43_phy_set(dev, B43_LPPHY_FOURWIRE_CTL, 0x2);
+	udelay(1);
+	b43_phy_mask(dev, B43_LPPHY_FOURWIRE_CTL, 0xFFFD);
+	udelay(1);
+
+	if (dev->phy.rev < 2) {
+		lpphy_2062_init(dev);
+	} else {
+		lpphy_2063_init(dev);
+		lpphy_sync_stx(dev);
+		b43_phy_write(dev, B43_PHY_OFDM(0xF0), 0x5F80);
+		b43_phy_write(dev, B43_PHY_OFDM(0xF1), 0);
+		//TODO Do something on the backplane
+	}
+}
+
 static int b43_lpphy_op_init(struct b43_wldev *dev)
 {
 	/* TODO: band SPROM */
@@ -222,7 +325,9 @@ static int b43_lpphy_op_switch_channel(s
 
 static unsigned int b43_lpphy_op_get_default_chan(struct b43_wldev *dev)
 {
-	return 1; /* Default to channel 1 */
+	if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ)
+		return 1;
+	return 36;
 }
 
 static void b43_lpphy_op_set_rx_antenna(struct b43_wldev *dev, int antenna)
Index: wireless-testing/drivers/net/wireless/b43/tables_lpphy.c
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/tables_lpphy.c	2009-01-31 17:32:13.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/tables_lpphy.c	2009-01-31 18:45:04.000000000 +0100
@@ -28,6 +28,250 @@
 #include "phy_lp.h"
 
 
+/* Entry of the 2062 radio init table */
+struct b2062_init_tab_entry {
+	u16 offset;
+	u16 value_a;
+	u16 value_g;
+	u8 flags;
+};
+#define B2062_FLAG_A	0x01 /* Flag: Init in A mode */
+#define B2062_FLAG_G	0x02 /* Flag: Init in G mode */
+
+static const struct b2062_init_tab_entry b2062_init_tab[] = {
+	/* { .offset = B2062_N_COMM1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = 0x0001, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_COMM4, .value_a = 0x0001, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_COMM5, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM6, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM7, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM8, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM9, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM10, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM11, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM12, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM13, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM14, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_COMM15, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_PDN_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_PDN_CTL1, .value_a = 0x0000, .value_g = 0x00CA, .flags = B2062_FLAG_G, },
+	/* { .offset = B2062_N_PDN_CTL2, .value_a = 0x0018, .value_g = 0x0018, .flags = 0, }, */
+	{ .offset = B2062_N_PDN_CTL3, .value_a = 0x0000, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_N_PDN_CTL4, .value_a = 0x0015, .value_g = 0x002A, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_GEN_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_IQ_CALIB, .value_a = 0x0001, .value_g = 0x0001, .flags = 0, }, */
+	{ .offset = B2062_N_LGENC, .value_a = 0x00DB, .value_g = 0x00FF, .flags = B2062_FLAG_A, },
+	/* { .offset = B2062_N_LGENA_LPF, .value_a = 0x0001, .value_g = 0x0001, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_BIAS0, .value_a = 0x0041, .value_g = 0x0041, .flags = 0, }, */
+	/* { .offset = B2062_N_LGNEA_BIAS1, .value_a = 0x0002, .value_g = 0x0002, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_CTL0, .value_a = 0x0032, .value_g = 0x0032, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_LGENA_TUNE0, .value_a = 0x00DD, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_LGENA_TUNE1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_LGENA_TUNE2, .value_a = 0x00DD, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_N_LGENA_TUNE3, .value_a = 0x0077, .value_g = 0x00B5, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_N_LGENA_CTL3, .value_a = 0x0000, .value_g = 0x00FF, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_LGENA_CTL4, .value_a = 0x001F, .value_g = 0x001F, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_CTL5, .value_a = 0x0032, .value_g = 0x0032, .flags = 0, }, */
+	/* { .offset = B2062_N_LGENA_CTL6, .value_a = 0x0032, .value_g = 0x0032, .flags = 0, }, */
+	{ .offset = B2062_N_LGENA_CTL7, .value_a = 0x0033, .value_g = 0x0033, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_RXA_CTL0, .value_a = 0x0009, .value_g = 0x0009, .flags = 0, }, */
+	{ .offset = B2062_N_RXA_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = B2062_FLAG_G, },
+	/* { .offset = B2062_N_RXA_CTL2, .value_a = 0x0018, .value_g = 0x0018, .flags = 0, }, */
+	/* { .offset = B2062_N_RXA_CTL3, .value_a = 0x0027, .value_g = 0x0027, .flags = 0, }, */
+	/* { .offset = B2062_N_RXA_CTL4, .value_a = 0x0028, .value_g = 0x0028, .flags = 0, }, */
+	/* { .offset = B2062_N_RXA_CTL5, .value_a = 0x0007, .value_g = 0x0007, .flags = 0, }, */
+	/* { .offset = B2062_N_RXA_CTL6, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_RXA_CTL7, .value_a = 0x0008, .value_g = 0x0008, .flags = 0, }, */
+	{ .offset = B2062_N_RXBB_CTL0, .value_a = 0x0082, .value_g = 0x0080, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_RXBB_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_GAIN0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_RXBB_GAIN1, .value_a = 0x0004, .value_g = 0x0004, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_N_RXBB_GAIN2, .value_a = 0x0000, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_RXBB_GAIN3, .value_a = 0x0011, .value_g = 0x0011, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI0, .value_a = 0x0043, .value_g = 0x0043, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI1, .value_a = 0x0033, .value_g = 0x0033, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_CALIB0, .value_a = 0x0010, .value_g = 0x0010, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_CALIB1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_CALIB2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS0, .value_a = 0x0006, .value_g = 0x0006, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS1, .value_a = 0x002A, .value_g = 0x002A, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS2, .value_a = 0x00AA, .value_g = 0x00AA, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS3, .value_a = 0x0021, .value_g = 0x0021, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS4, .value_a = 0x00AA, .value_g = 0x00AA, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_BIAS5, .value_a = 0x0022, .value_g = 0x0022, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI2, .value_a = 0x0001, .value_g = 0x0001, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI3, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI4, .value_a = 0x0001, .value_g = 0x0001, .flags = 0, }, */
+	/* { .offset = B2062_N_RXBB_RSSI5, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL0, .value_a = 0x0001, .value_g = 0x0001, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL2, .value_a = 0x0084, .value_g = 0x0084, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_N_TX_CTL4, .value_a = 0x0003, .value_g = 0x0003, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_N_TX_CTL5, .value_a = 0x0002, .value_g = 0x0002, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_TX_CTL6, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL7, .value_a = 0x0058, .value_g = 0x0058, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL8, .value_a = 0x0082, .value_g = 0x0082, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL9, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_CTL_A, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_GC2G, .value_a = 0x00FF, .value_g = 0x00FF, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_GC5G, .value_a = 0x00FF, .value_g = 0x00FF, .flags = 0, }, */
+	{ .offset = B2062_N_TX_TUNE, .value_a = 0x0088, .value_g = 0x001B, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_N_TX_PAD, .value_a = 0x0088, .value_g = 0x0088, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_PGA, .value_a = 0x0088, .value_g = 0x0088, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_PADAUX, .value_a = 0x0033, .value_g = 0x0033, .flags = 0, }, */
+	/* { .offset = B2062_N_TX_PGAAUX, .value_a = 0x0033, .value_g = 0x0033, .flags = 0, }, */
+	/* { .offset = B2062_N_TSSI_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TSSI_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TSSI_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_IQ_CALIB_CTL0, .value_a = 0x0033, .value_g = 0x0033, .flags = 0, }, */
+	/* { .offset = B2062_N_IQ_CALIB_CTL1, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_N_IQ_CALIB_CTL2, .value_a = 0x0032, .value_g = 0x0032, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_TS, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_CTL1, .value_a = 0x0015, .value_g = 0x0015, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_CTL2, .value_a = 0x000F, .value_g = 0x000F, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_CTL3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_CTL4, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_DBG0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_DBG1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_DBG2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_CALIB_DBG3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_PSENSE_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_PSENSE_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_PSENSE_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_N_TEST_BUF0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RADIO_ID_CODE, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_COMM4, .value_a = 0x0001, .value_g = 0x0000, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_COMM5, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM6, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM7, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM8, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM9, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM10, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM11, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM12, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM13, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM14, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_COMM15, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_PDS_CTL0, .value_a = 0x00FF, .value_g = 0x00FF, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_PDS_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_PDS_CTL2, .value_a = 0x008E, .value_g = 0x008E, .flags = 0, }, */
+	/* { .offset = B2062_S_PDS_CTL3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_BG_CTL0, .value_a = 0x0006, .value_g = 0x0006, .flags = 0, }, */
+	/* { .offset = B2062_S_BG_CTL1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_BG_CTL2, .value_a = 0x0011, .value_g = 0x0011, .flags = 0, }, */
+	{ .offset = B2062_S_LGENG_CTL0, .value_a = 0x00F8, .value_g = 0x00D8, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_LGENG_CTL1, .value_a = 0x003C, .value_g = 0x0024, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_LGENG_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_LGENG_CTL3, .value_a = 0x0041, .value_g = 0x0041, .flags = 0, }, */
+	/* { .offset = B2062_S_LGENG_CTL4, .value_a = 0x0002, .value_g = 0x0002, .flags = 0, }, */
+	/* { .offset = B2062_S_LGENG_CTL5, .value_a = 0x0033, .value_g = 0x0033, .flags = 0, }, */
+	/* { .offset = B2062_S_LGENG_CTL6, .value_a = 0x0022, .value_g = 0x0022, .flags = 0, }, */
+	/* { .offset = B2062_S_LGENG_CTL7, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_LGENG_CTL8, .value_a = 0x0088, .value_g = 0x0080, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_LGENG_CTL9, .value_a = 0x0088, .value_g = 0x0088, .flags = 0, }, */
+	{ .offset = B2062_S_LGENG_CTL10, .value_a = 0x0088, .value_g = 0x0080, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_LGENG_CTL11, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL0, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL1, .value_a = 0x0007, .value_g = 0x0007, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL2, .value_a = 0x00AF, .value_g = 0x00AF, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL3, .value_a = 0x0012, .value_g = 0x0012, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL4, .value_a = 0x000B, .value_g = 0x000B, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL5, .value_a = 0x005F, .value_g = 0x005F, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL6, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL7, .value_a = 0x0040, .value_g = 0x0040, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL8, .value_a = 0x0052, .value_g = 0x0052, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL9, .value_a = 0x0026, .value_g = 0x0026, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL10, .value_a = 0x0003, .value_g = 0x0003, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL11, .value_a = 0x0036, .value_g = 0x0036, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL12, .value_a = 0x0057, .value_g = 0x0057, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL13, .value_a = 0x0011, .value_g = 0x0011, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL14, .value_a = 0x0075, .value_g = 0x0075, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL15, .value_a = 0x00B4, .value_g = 0x00B4, .flags = 0, }, */
+	/* { .offset = B2062_S_REFPLL_CTL16, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL0, .value_a = 0x0098, .value_g = 0x0098, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL1, .value_a = 0x0010, .value_g = 0x0010, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RFPLL_CTL2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL4, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL5, .value_a = 0x0043, .value_g = 0x0043, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL6, .value_a = 0x0047, .value_g = 0x0047, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL7, .value_a = 0x000C, .value_g = 0x000C, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL8, .value_a = 0x0011, .value_g = 0x0011, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL9, .value_a = 0x0011, .value_g = 0x0011, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL10, .value_a = 0x000E, .value_g = 0x000E, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL11, .value_a = 0x0008, .value_g = 0x0008, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL12, .value_a = 0x0033, .value_g = 0x0033, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL13, .value_a = 0x000A, .value_g = 0x000A, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL14, .value_a = 0x0006, .value_g = 0x0006, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RFPLL_CTL15, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL16, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL17, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL18, .value_a = 0x003E, .value_g = 0x003E, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL19, .value_a = 0x0013, .value_g = 0x0013, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RFPLL_CTL20, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL21, .value_a = 0x0062, .value_g = 0x0062, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL22, .value_a = 0x0007, .value_g = 0x0007, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL23, .value_a = 0x0016, .value_g = 0x0016, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL24, .value_a = 0x005C, .value_g = 0x005C, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL25, .value_a = 0x0095, .value_g = 0x0095, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RFPLL_CTL26, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL27, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL28, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RFPLL_CTL29, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL30, .value_a = 0x00A0, .value_g = 0x00A0, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL31, .value_a = 0x0004, .value_g = 0x0004, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RFPLL_CTL32, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	{ .offset = B2062_S_RFPLL_CTL33, .value_a = 0x00CC, .value_g = 0x00CC, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	{ .offset = B2062_S_RFPLL_CTL34, .value_a = 0x0007, .value_g = 0x0007, .flags = B2062_FLAG_A | B2062_FLAG_G, },
+	/* { .offset = B2062_S_RXG_CNT0, .value_a = 0x0010, .value_g = 0x0010, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT1, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT2, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT3, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT4, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT5, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT6, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT7, .value_a = 0x0005, .value_g = 0x0005, .flags = 0, }, */
+	{ .offset = B2062_S_RXG_CNT8, .value_a = 0x000F, .value_g = 0x000F, .flags = B2062_FLAG_A, },
+	/* { .offset = B2062_S_RXG_CNT9, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT10, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT11, .value_a = 0x0066, .value_g = 0x0066, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT12, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT13, .value_a = 0x0044, .value_g = 0x0044, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT14, .value_a = 0x00A0, .value_g = 0x00A0, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT15, .value_a = 0x0004, .value_g = 0x0004, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT16, .value_a = 0x0000, .value_g = 0x0000, .flags = 0, }, */
+	/* { .offset = B2062_S_RXG_CNT17, .value_a = 0x0055, .value_g = 0x0055, .flags = 0, }, */
+};
+
+void b2062_upload_init_table(struct b43_wldev *dev)
+{
+	const struct b2062_init_tab_entry *e;
+	unsigned int i;
+
+	for (i = 0; i < ARRAY_SIZE(b2062_init_tab); i++) {
+		e = &b2062_init_tab[i];
+		if (b43_current_band(dev->wl) == IEEE80211_BAND_2GHZ) {
+			if (!(e->flags & B2062_FLAG_G))
+				continue;
+			b43_radio_write(dev, e->offset, e->value_g);
+		} else {
+			if (!(e->flags & B2062_FLAG_A))
+				continue;
+			b43_radio_write(dev, e->offset, e->value_a);
+		}
+	}
+}
+
 u32 b43_lptab_read(struct b43_wldev *dev, u32 offset)
 {
 	u32 type, value;
Index: wireless-testing/drivers/net/wireless/b43/tables_lpphy.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/tables_lpphy.h	2009-01-31 17:44:33.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/tables_lpphy.h	2009-01-31 17:44:53.000000000 +0100
@@ -17,5 +17,7 @@
 u32 b43_lptab_read(struct b43_wldev *dev, u32 offset);
 void b43_lptab_write(struct b43_wldev *dev, u32 offset, u32 value);
 
+void b2062_upload_init_table(struct b43_wldev *dev);
+
 
 #endif /* B43_TABLES_LPPHY_H_ */
Index: wireless-testing/drivers/net/wireless/b43/phy_lp.h
===================================================================
--- wireless-testing.orig/drivers/net/wireless/b43/phy_lp.h	2009-01-31 17:21:13.000000000 +0100
+++ wireless-testing/drivers/net/wireless/b43/phy_lp.h	2009-01-31 17:51:39.000000000 +0100
@@ -273,7 +273,7 @@
 #define B43_LPPHY_TRLOOKUP4			B43_PHY_OFDM(0xBC) /* TRLookup4 */
 #define B43_LPPHY_RADAR_FIFO_STAT		B43_PHY_OFDM(0xBD) /* Radar FIFO Status */
 #define B43_LPPHY_GPIO_OUTEN			B43_PHY_OFDM(0xBE) /* GPIO Out enable */
-#define B43_LPPHY_GPOI_SELECT			B43_PHY_OFDM(0xBF) /* GPOI Select */
+#define B43_LPPHY_GPIO_SELECT			B43_PHY_OFDM(0xBF) /* GPIO Select */
 #define B43_LPPHY_GPIO_OUT			B43_PHY_OFDM(0xC0) /* GPIO Out */
 
 

-- 
Greetings, Michael.


From francesco.gringoli at ing.unibs.it  Sat Jan 31 20:15:22 2009
From: francesco.gringoli at ing.unibs.it (Francesco Gringoli)
Date: Sat, 31 Jan 2009 20:15:22 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <4983F59C.6040103@lwfinger.net>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4981EBDF.8020406@lwfinger.net>
	<0AAD8354-F96B-46F3-8E8D-763F59D2CFBB@ing.unibs.it>
	<49823737.2040603@lwfinger.net>
	<A6E4D5FC-8796-4299-8B6B-1730E895BB3C@ing.unibs.it>
	<4983F59C.6040103@lwfinger.net>
Message-ID: <8930BB48-C78B-4796-8F42-DB1DD3038CCC@ing.unibs.it>

On Jan 31, 2009, at 7:54 AM, Larry Finger wrote:

> Francesco,
>
> I changed the dma.c code to WARN_ON rather than BUG_ON and also dump
> the cookie for the erring case. Of course, the system no longer
> crashes, nor even stops on the first error. I have no idea how many
> errors occurred before I got it stopped, but the cookies for the first
> few offending frames were 0x2030, 0x2032, 0x2048, 0x204c, 0x204e,
> 0x2050, and 0x2052.
>
> When I got it stopped, I dumped /sys/kernel/debug/b43/phy0/txstat and
> obtained:
>
> [cut]
Larry,

many thanks for your help in debugging. However I can't reproduce that  
error. I tried all this afternoon with a 4306rev3 on a CardBus board  
but all efforts to freeze the PC were useless. I checked again the  
difference between r5.0 and r5.1 but it is only 10 lines... so easy to  
debug that I'm pretty sure that error is not due to changes into  
header offsets.

> Is there any way for me to me to freeze the interface when the first
> error occurs without inducing a kernel panic?
I don't understand completely your question: if you need to stop the  
firmware without having its memory corrupted we can add a semaphore  
just after the WARN_ON into shm so that next loop after  
state_machine_start we enter an infinite loop. However this would  
happen after hundreds cycles. Tell me if we can helping adding debug  
blocks into the firmware.

What kind of PC are you testing your CardBus adapter? Is that a 32bit  
or 16bit?

Cheers,
-FG

>
>
> Larry
>

-------

Francesco Gringoli, PhD - Assistant Professor
Dept. of Electrical Engineering for Automation
University of Brescia
via Branze, 38
25123 Brescia
ITALY

Ph:  ++39.030.3715843
FAX: ++39.030.380014
WWW: http://www.ing.unibs.it/~gringoli






From mb at bu3sch.de  Sat Jan 31 20:39:20 2009
From: mb at bu3sch.de (Michael Buesch)
Date: Sat, 31 Jan 2009 20:39:20 +0100
Subject: opensource firmware now accept version 410 frames
In-Reply-To: <8930BB48-C78B-4796-8F42-DB1DD3038CCC@ing.unibs.it>
References: <4F39B4BD-5067-40B8-975E-465931E1409E@ing.unibs.it>
	<4983F59C.6040103@lwfinger.net>
	<8930BB48-C78B-4796-8F42-DB1DD3038CCC@ing.unibs.it>
Message-ID: <200901312039.20280.mb@bu3sch.de>

On Saturday 31 January 2009 20:15:22 Francesco Gringoli wrote:
> On Jan 31, 2009, at 7:54 AM, Larry Finger wrote:
> 
> > Francesco,
> >
> > I changed the dma.c code to WARN_ON rather than BUG_ON and also dump
> > the cookie for the erring case. Of course, the system no longer
> > crashes, nor even stops on the first error. I have no idea how many
> > errors occurred before I got it stopped, but the cookies for the first
> > few offending frames were 0x2030, 0x2032, 0x2048, 0x204c, 0x204e,
> > 0x2050, and 0x2052.
> >
> > When I got it stopped, I dumped /sys/kernel/debug/b43/phy0/txstat and
> > obtained:
> >
> > [cut]
> Larry,
> 
> many thanks for your help in debugging. However I can't reproduce that  
> error. I tried all this afternoon with a 4306rev3 on a CardBus board  
> but all efforts to freeze the PC were useless. I checked again the  
> difference between r5.0 and r5.1 but it is only 10 lines... so easy to  
> debug that I'm pretty sure that error is not due to changes into  
> header offsets.
> 
> > Is there any way for me to me to freeze the interface when the first
> > error occurs without inducing a kernel panic?
> I don't understand completely your question: if you need to stop the  
> firmware without having its memory corrupted we can add a semaphore  
> just after the WARN_ON into shm so that next loop after  
> state_machine_start we enter an infinite loop. However this would  
> happen after hundreds cycles. Tell me if we can helping adding debug  
> blocks into the firmware.

You can stop the PSM immediately, if you need to, with the MAC_CONTROL.
See b43-fwdump, it uses it to get a consistent dump.

-- 
Greetings, Michael.


